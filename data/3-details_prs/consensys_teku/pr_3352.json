{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNjQ2NTY0", "number": 3352, "title": "Precompute validator status", "bodyText": "PR Description\nPrecompute validator statuses to optimise epoch processing.\nFixed Issue(s)\nfixes #3326\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-12-03T09:46:17Z", "url": "https://github.com/ConsenSys/teku/pull/3352", "merged": true, "mergeCommit": {"oid": "e6c90f86d7ff0d9f8e471f546f84d90d56cc6db9"}, "closed": true, "closedAt": "2020-12-07T22:08:52Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiY9wPAH2gAyNTMxNjQ2NTY0OjkzN2JhOGQ5OWJiMjEzMGM2ZjU1ZTFkNmExMGZlMDFlMGQ4NGQ1MjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj8zO_gH2gAyNTMxNjQ2NTY0OmZiMjI3ODNlNWMyODMyZjdjNjU2NmUyNDJjZjQyNjgxZjE4NDU2ZTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "937ba8d99bb2130c6f55e1d6a10fe01e0d84d522", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/937ba8d99bb2130c6f55e1d6a10fe01e0d84d522", "committedDate": "2020-12-03T01:35:50Z", "message": "Add validator status data structures."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf8a01cfe6d6bca11d65630a4e9770f9d2ec10c9", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/cf8a01cfe6d6bca11d65630a4e9770f9d2ec10c9", "committedDate": "2020-12-03T04:24:50Z", "message": "Add tests for data structures."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb83bb11fc1bc8a164be2e3825844b3512f50608", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/fb83bb11fc1bc8a164be2e3825844b3512f50608", "committedDate": "2020-12-03T09:44:39Z", "message": "Use ValidatorStatus info in epoch processing."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b20d58a17e47e3c12f2b13225d9029ec97597889", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/b20d58a17e47e3c12f2b13225d9029ec97597889", "committedDate": "2020-12-03T10:13:28Z", "message": "Errrorprone."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95bef408b63fed8f9c091913de40da668edcb72b", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/95bef408b63fed8f9c091913de40da668edcb72b", "committedDate": "2020-12-03T21:01:10Z", "message": "Update tests for min balance."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52ff89791d0a52f1c704188b40ed64677c602c9c", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/52ff89791d0a52f1c704188b40ed64677c602c9c", "committedDate": "2020-12-03T23:00:12Z", "message": "Merge branch 'master' into single-pass-epoch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66afa36703fc03f86c047692986e4297120314de", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/66afa36703fc03f86c047692986e4297120314de", "committedDate": "2020-12-03T23:19:43Z", "message": "Merge branch 'master' into single-pass-epoch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjQ0MjUy", "url": "https://github.com/ConsenSys/teku/pull/3352#pullrequestreview-544644252", "createdAt": "2020-12-04T04:11:54Z", "commit": {"oid": "66afa36703fc03f86c047692986e4297120314de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxMTo1NVrOH_AA_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxMTo1NVrOH_AA_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyMjU4OA==", "bodyText": "is the double call here intentional?", "url": "https://github.com/ConsenSys/teku/pull/3352#discussion_r535822588", "createdAt": "2020-12-04T04:11:55Z", "author": {"login": "rolfyone"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.core.epoch.status;\n+\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.get_block_root_at_slot;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.operations.AttestationData;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.datastructures.state.Validator;\n+import tech.pegasys.teku.datastructures.util.AttestationUtil;\n+import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+\n+public class ValidatorStatuses {\n+  private final List<ValidatorStatus> statuses;\n+  private final TotalBalances totalBalances;\n+\n+  private ValidatorStatuses(\n+      final List<ValidatorStatus> statuses, final TotalBalances totalBalances) {\n+    this.statuses = statuses;\n+    this.totalBalances = totalBalances;\n+  }\n+\n+  public static ValidatorStatuses create(final BeaconState state) {\n+    final SSZList<Validator> validators = state.getValidators();\n+\n+    final UInt64 currentEpoch = BeaconStateUtil.get_current_epoch(state);\n+    final UInt64 previousEpoch = BeaconStateUtil.get_previous_epoch(state);\n+\n+    final List<ValidatorStatus> statuses =\n+        validators.stream()\n+            .map(validator -> ValidatorStatus.create(validator, previousEpoch, currentEpoch))\n+            .collect(Collectors.toCollection(() -> new ArrayList<>(validators.size())));\n+\n+    processAttestations(statuses, state, previousEpoch, currentEpoch);\n+\n+    final TotalBalances totalBalances = TotalBalances.create(statuses);\n+\n+    return new ValidatorStatuses(statuses, totalBalances);\n+  }\n+\n+  private static void processAttestations(\n+      final List<ValidatorStatus> statuses,\n+      final BeaconState state,\n+      final UInt64 previousEpoch,\n+      final UInt64 currentEpoch) {\n+    Stream.concat(\n+            state.getPrevious_epoch_attestations().stream(),\n+            state.getCurrent_epoch_attestations().stream())\n+        .forEach(\n+            attestation -> {\n+              final AttestationData data = attestation.getData();\n+\n+              final AttestationUpdates updates = new AttestationUpdates();\n+              final Checkpoint target = data.getTarget();\n+              if (target.getEpoch().equals(currentEpoch)) {\n+                updates.currentEpochAttester = true;\n+                updates.currentEpochTargetAttester =\n+                    matchesEpochStartBlock(state, currentEpoch, target.getRoot());\n+              } else if (target.getEpoch().equals(previousEpoch)) {\n+                updates.previousEpochAttester = true;\n+\n+                updates.inclusionInfo =\n+                    Optional.of(\n+                        new InclusionInfo(\n+                            attestation.getInclusion_delay(), attestation.getProposer_index()));\n+\n+                if (matchesEpochStartBlock(state, previousEpoch, target.getRoot())) {\n+                  updates.previousEpochTargetAttester = true;\n+\n+                  updates.previousEpochHeadAttester =\n+                      get_block_root_at_slot(state, data.getSlot())\n+                          .equals(data.getBeacon_block_root());\n+                }\n+              }\n+\n+              // Apply flags to attestingIndices\n+              AttestationUtil.stream_attesting_indices(\n+                      state, data, attestation.getAggregation_bits())\n+                  .mapToObj(statuses::get)\n+                  .forEach(updates::apply);\n+            });\n+  }\n+\n+  private static boolean matchesEpochStartBlock(\n+      final BeaconState state, final UInt64 currentEpoch, final Bytes32 root) {\n+    return BeaconStateUtil.get_block_root(state, currentEpoch).equals(root);\n+  }\n+\n+  public TotalBalances getTotalBalances() {\n+    return totalBalances;\n+  }\n+\n+  public List<ValidatorStatus> getStatuses() {\n+    return statuses;\n+  }\n+\n+  public int getValidatorCount() {\n+    return statuses.size();\n+  }\n+\n+  private static class AttestationUpdates {\n+    private boolean currentEpochAttester = false;\n+    private boolean currentEpochTargetAttester = false;\n+    private boolean previousEpochAttester = false;\n+    private boolean previousEpochTargetAttester = false;\n+    private boolean previousEpochHeadAttester = false;\n+    private Optional<InclusionInfo> inclusionInfo = Optional.empty();\n+\n+    public void apply(final ValidatorStatus status) {\n+      status.updateCurrentEpochAttester(currentEpochAttester);\n+      status.updateCurrentEpochAttester(currentEpochAttester);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66afa36703fc03f86c047692986e4297120314de"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjQ1ODg4", "url": "https://github.com/ConsenSys/teku/pull/3352#pullrequestreview-544645888", "createdAt": "2020-12-04T04:17:29Z", "commit": {"oid": "66afa36703fc03f86c047692986e4297120314de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxNzoyOVrOH_AHdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxNzoyOVrOH_AHdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyNDI0NQ==", "bodyText": "this might be just a java oddity, but why not just Collectors.toList()?", "url": "https://github.com/ConsenSys/teku/pull/3352#discussion_r535824245", "createdAt": "2020-12-04T04:17:29Z", "author": {"login": "rolfyone"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.core.epoch.status;\n+\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.get_block_root_at_slot;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.operations.AttestationData;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.datastructures.state.Validator;\n+import tech.pegasys.teku.datastructures.util.AttestationUtil;\n+import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+\n+public class ValidatorStatuses {\n+  private final List<ValidatorStatus> statuses;\n+  private final TotalBalances totalBalances;\n+\n+  private ValidatorStatuses(\n+      final List<ValidatorStatus> statuses, final TotalBalances totalBalances) {\n+    this.statuses = statuses;\n+    this.totalBalances = totalBalances;\n+  }\n+\n+  public static ValidatorStatuses create(final BeaconState state) {\n+    final SSZList<Validator> validators = state.getValidators();\n+\n+    final UInt64 currentEpoch = BeaconStateUtil.get_current_epoch(state);\n+    final UInt64 previousEpoch = BeaconStateUtil.get_previous_epoch(state);\n+\n+    final List<ValidatorStatus> statuses =\n+        validators.stream()\n+            .map(validator -> ValidatorStatus.create(validator, previousEpoch, currentEpoch))\n+            .collect(Collectors.toCollection(() -> new ArrayList<>(validators.size())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66afa36703fc03f86c047692986e4297120314de"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NjQ2NTgy", "url": "https://github.com/ConsenSys/teku/pull/3352#pullrequestreview-544646582", "createdAt": "2020-12-04T04:19:57Z", "commit": {"oid": "66afa36703fc03f86c047692986e4297120314de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxOTo1N1rOH_AKNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNDoxOTo1N1rOH_AKNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTgyNDk1MQ==", "bodyText": "if it's not current or previous, should it be an IllegalState? theres if, else if, no else...", "url": "https://github.com/ConsenSys/teku/pull/3352#discussion_r535824951", "createdAt": "2020-12-04T04:19:57Z", "author": {"login": "rolfyone"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.core.epoch.status;\n+\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.get_block_root_at_slot;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.operations.AttestationData;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.state.Checkpoint;\n+import tech.pegasys.teku.datastructures.state.Validator;\n+import tech.pegasys.teku.datastructures.util.AttestationUtil;\n+import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+\n+public class ValidatorStatuses {\n+  private final List<ValidatorStatus> statuses;\n+  private final TotalBalances totalBalances;\n+\n+  private ValidatorStatuses(\n+      final List<ValidatorStatus> statuses, final TotalBalances totalBalances) {\n+    this.statuses = statuses;\n+    this.totalBalances = totalBalances;\n+  }\n+\n+  public static ValidatorStatuses create(final BeaconState state) {\n+    final SSZList<Validator> validators = state.getValidators();\n+\n+    final UInt64 currentEpoch = BeaconStateUtil.get_current_epoch(state);\n+    final UInt64 previousEpoch = BeaconStateUtil.get_previous_epoch(state);\n+\n+    final List<ValidatorStatus> statuses =\n+        validators.stream()\n+            .map(validator -> ValidatorStatus.create(validator, previousEpoch, currentEpoch))\n+            .collect(Collectors.toCollection(() -> new ArrayList<>(validators.size())));\n+\n+    processAttestations(statuses, state, previousEpoch, currentEpoch);\n+\n+    final TotalBalances totalBalances = TotalBalances.create(statuses);\n+\n+    return new ValidatorStatuses(statuses, totalBalances);\n+  }\n+\n+  private static void processAttestations(\n+      final List<ValidatorStatus> statuses,\n+      final BeaconState state,\n+      final UInt64 previousEpoch,\n+      final UInt64 currentEpoch) {\n+    Stream.concat(\n+            state.getPrevious_epoch_attestations().stream(),\n+            state.getCurrent_epoch_attestations().stream())\n+        .forEach(\n+            attestation -> {\n+              final AttestationData data = attestation.getData();\n+\n+              final AttestationUpdates updates = new AttestationUpdates();\n+              final Checkpoint target = data.getTarget();\n+              if (target.getEpoch().equals(currentEpoch)) {\n+                updates.currentEpochAttester = true;\n+                updates.currentEpochTargetAttester =\n+                    matchesEpochStartBlock(state, currentEpoch, target.getRoot());\n+              } else if (target.getEpoch().equals(previousEpoch)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66afa36703fc03f86c047692986e4297120314de"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4258a74bc8d22f590e8c1d52ad9dc9a5f547d79c", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/4258a74bc8d22f590e8c1d52ad9dc9a5f547d79c", "committedDate": "2020-12-06T20:08:29Z", "message": "Remove duplicate call."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c5570411e558e530f0e6acac9ac9aafa6d6513e", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/4c5570411e558e530f0e6acac9ac9aafa6d6513e", "committedDate": "2020-12-06T20:13:18Z", "message": "Merge branch 'master' of github.com:ConsenSys/teku into single-pass-epoch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fab936abe5b5d5f5ae9ad7c30036d66eff62cd5e", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/fab936abe5b5d5f5ae9ad7c30036d66eff62cd5e", "committedDate": "2020-12-06T23:31:28Z", "message": "Precompute total active balance square root."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a64b16c1fe99a0b9e6a2578803797321df2fbb7", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/4a64b16c1fe99a0b9e6a2578803797321df2fbb7", "committedDate": "2020-12-07T00:01:46Z", "message": "Apply rewards and penalties in one step to avoid duplicate state access."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "889e92c8b2d17ae63bec163671979dd8cb8ef12c", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/889e92c8b2d17ae63bec163671979dd8cb8ef12c", "committedDate": "2020-12-07T00:19:10Z", "message": "Spotless."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1693caa6023cf9ac6efd665419c54f60a20c1192", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/1693caa6023cf9ac6efd665419c54f60a20c1192", "committedDate": "2020-12-07T00:19:17Z", "message": "Merge branch 'master' of github.com:ConsenSys/teku into single-pass-epoch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e54b6b5244446c65a71933d3ee83ac5d6bfb683a", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/e54b6b5244446c65a71933d3ee83ac5d6bfb683a", "committedDate": "2020-12-07T01:24:12Z", "message": "Minimise state access in process_registry_updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebec808e2c0c6223910d7b4639b3cd951c80bca6", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/ebec808e2c0c6223910d7b4639b3cd951c80bca6", "committedDate": "2020-12-07T01:28:35Z", "message": "Merge branch 'master' of github.com:ConsenSys/teku into single-pass-epoch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666854dc903e24befe37d40c1a37041a5b778e53", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/666854dc903e24befe37d40c1a37041a5b778e53", "committedDate": "2020-12-07T01:37:47Z", "message": "Avoid recalculating total_active_balance in process_justification_and_finalization."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af39e6dcf9bd3c68b0ad2c289b4b94f391bd9e91", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/af39e6dcf9bd3c68b0ad2c289b4b94f391bd9e91", "committedDate": "2020-12-07T02:11:55Z", "message": "Merge branch 'master' of github.com:ConsenSys/teku into single-pass-epoch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODMzOTcx", "url": "https://github.com/ConsenSys/teku/pull/3352#pullrequestreview-545833971", "createdAt": "2020-12-07T05:08:49Z", "commit": {"oid": "af39e6dcf9bd3c68b0ad2c289b4b94f391bd9e91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb22783e5c2832f7c6566e242cf42681f18456e0", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/fb22783e5c2832f7c6566e242cf42681f18456e0", "committedDate": "2020-12-07T21:54:51Z", "message": "Merge branch 'master' into single-pass-epoch"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4340, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}