{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2OTYxNTc2", "number": 1635, "title": "Support loading the genesis file from an URL", "bodyText": "PR Description\nAdded the ability to load the genesis state from a URL the same way that constants can come from a file or URL.\nRefactored out the code to determine how to load a resource so it can be shared between the two.", "createdAt": "2020-04-21T23:35:54Z", "url": "https://github.com/ConsenSys/teku/pull/1635", "merged": true, "mergeCommit": {"oid": "de2865f5279144a10cf4582e119bc6c1f4acc38b"}, "closed": true, "closedAt": "2020-04-22T02:44:28Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZ8XI5AH2gAyNDA2OTYxNTc2Ojg5N2JhNTI0NzgyN2Q2MGU2MDU5MmI1OTk1NTJkNTg0OTEzZmI4MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ-vweAFqTM5Nzc5NzM1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "897ba5247827d60e60592b599552d584913fb835", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/897ba5247827d60e60592b599552d584913fb835", "committedDate": "2020-04-21T23:33:46Z", "message": "Support loading the genesis file from an URL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dcd4284df9072fc0a35b66c4b665326d2115e0c", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/4dcd4284df9072fc0a35b66c4b665326d2115e0c", "committedDate": "2020-04-21T23:46:52Z", "message": "Add missing override."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NzkwMjQ4", "url": "https://github.com/ConsenSys/teku/pull/1635#pullrequestreview-397790248", "createdAt": "2020-04-22T01:57:25Z", "commit": {"oid": "4dcd4284df9072fc0a35b66c4b665326d2115e0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo1NzoyNVrOGJf3Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo1NzoyNVrOGJf3Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxMjM2Mg==", "bodyText": "Is there a better exception? it seems like the source is not necessarily a File.", "url": "https://github.com/ConsenSys/teku/pull/1635#discussion_r412612362", "createdAt": "2020-04-22T01:57:25Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/StartupUtil.java", "diffHunk": "@@ -52,9 +51,12 @@ public static BeaconState createMockedStartInitialBeaconState(\n         .createInitialBeaconState(UnsignedLong.valueOf(genesisTime), initialDepositData);\n   }\n \n-  public static BeaconState loadBeaconStateFromFile(final String stateFile) throws IOException {\n+  private static BeaconState loadBeaconState(final String source) throws IOException {\n     return SimpleOffsetSerializer.deserialize(\n-        Bytes.wrap(Files.readAllBytes(new File(stateFile).toPath())), BeaconStateImpl.class);\n+        ResourceLoader.urlOrFile()\n+            .loadBytes(source)\n+            .orElseThrow(() -> new FileNotFoundException(\"Could not find \" + source)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dcd4284df9072fc0a35b66c4b665326d2115e0c"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NzkxMDcx", "url": "https://github.com/ConsenSys/teku/pull/1635#pullrequestreview-397791071", "createdAt": "2020-04-22T01:59:55Z", "commit": {"oid": "4dcd4284df9072fc0a35b66c4b665326d2115e0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo1OTo1NVrOGJf6Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMTo1OTo1NVrOGJf6Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxMzIyMg==", "bodyText": "really cool.", "url": "https://github.com/ConsenSys/teku/pull/1635#discussion_r412613222", "createdAt": "2020-04-22T01:59:55Z", "author": {"login": "cemozerr"}, "path": "util/src/main/java/tech/pegasys/artemis/util/resource/FallbackResourceLoader.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util.resource;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Optional;\n+\n+public class FallbackResourceLoader implements ResourceLoader {\n+\n+  private final ResourceLoader[] loaders;\n+\n+  FallbackResourceLoader(final ResourceLoader... loaders) {\n+    this.loaders = loaders;\n+  }\n+\n+  @Override\n+  public Optional<InputStream> load(final String source) throws IOException {\n+    for (ResourceLoader loader : loaders) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dcd4284df9072fc0a35b66c4b665326d2115e0c"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NzkyMzA2", "url": "https://github.com/ConsenSys/teku/pull/1635#pullrequestreview-397792306", "createdAt": "2020-04-22T02:03:45Z", "commit": {"oid": "4dcd4284df9072fc0a35b66c4b665326d2115e0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjowMzo0NVrOGJf_lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjowMzo0NVrOGJf_lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxNDU0OQ==", "bodyText": "this seems to start initially from classpath so a more appropriate naming would be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static ResourceLoader urlClasspathOrFile(\n          \n          \n            \n              static ResourceLoader classpathUrlOrFile(", "url": "https://github.com/ConsenSys/teku/pull/1635#discussion_r412614549", "createdAt": "2020-04-22T02:03:45Z", "author": {"login": "cemozerr"}, "path": "util/src/main/java/tech/pegasys/artemis/util/resource/ResourceLoader.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util.resource;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public interface ResourceLoader {\n+\n+  static ResourceLoader urlOrFile() {\n+    return new FallbackResourceLoader(new URLResourceLoader(), new FileResourceLoader());\n+  }\n+\n+  static ResourceLoader urlClasspathOrFile(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dcd4284df9072fc0a35b66c4b665326d2115e0c"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8786771696f6a89fae7d1e6cbc62ae73c0b6a5f9", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/8786771696f6a89fae7d1e6cbc62ae73c0b6a5f9", "committedDate": "2020-04-22T02:05:51Z", "message": "Rename method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Nzk3MTM2", "url": "https://github.com/ConsenSys/teku/pull/1635#pullrequestreview-397797136", "createdAt": "2020-04-22T02:19:47Z", "commit": {"oid": "8786771696f6a89fae7d1e6cbc62ae73c0b6a5f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoxOTo0N1rOGJgT7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjoxOTo0N1rOGJgT7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYxOTc1OA==", "bodyText": "It's not clear to me how you're testing loading from URL here", "url": "https://github.com/ConsenSys/teku/pull/1635#discussion_r412619758", "createdAt": "2020-04-22T02:19:47Z", "author": {"login": "cemozerr"}, "path": "util/src/test/java/tech/pegasys/artemis/util/resource/URLResourceLoaderTest.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util.resource;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.net.URL;\n+import org.junit.jupiter.api.Test;\n+\n+class URLResourceLoaderTest {\n+  private final ResourceLoader loader = new URLResourceLoader();\n+\n+  @Test\n+  public void shouldLoadContentFromURL() throws Exception {\n+    final String resourceName = ClasspathResourceLoaderTest.TEST_FILE_1 + \".txt\";\n+    final URL resource = ClasspathResourceLoaderTest.class.getResource(resourceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8786771696f6a89fae7d1e6cbc62ae73c0b6a5f9"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3Nzk3MzUx", "url": "https://github.com/ConsenSys/teku/pull/1635#pullrequestreview-397797351", "createdAt": "2020-04-22T02:20:28Z", "commit": {"oid": "8786771696f6a89fae7d1e6cbc62ae73c0b6a5f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4342, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}