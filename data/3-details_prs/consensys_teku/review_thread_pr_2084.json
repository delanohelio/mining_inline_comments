{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMzkzMzIw", "number": 2084, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo1MToxNVrOEDrG7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo1MjoyNFrOEDrH4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjg3NDcxOnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/AttestationValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo1MToxNVrOGg1GEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozMjo0MFrOGhNEbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NzUyMw==", "bodyText": "Probably should restore the old version of this comment:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // If it's not in the store, it must not have passed validation.\n          \n          \n            \n                // If it's not in the store, it may not have been processed yet so save for future.", "url": "https://github.com/ConsenSys/teku/pull/2084#discussion_r437077523", "createdAt": "2020-06-09T00:51:15Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/AttestationValidator.java", "diffHunk": "@@ -111,19 +113,19 @@ ValidationResult singleOrAggregateAttestationChecks(final Attestation attestatio\n     final UnsignedLong currentTimeMillis = secondsToMillis(recentChainData.getStore().getTime());\n     if (isCurrentTimeAfterAttestationPropagationSlotRange(currentTimeMillis, attestation)\n         || isFromFarFuture(attestation, currentTimeMillis)) {\n-      return INVALID;\n+      return IGNORE;\n     }\n     if (isCurrentTimeBeforeMinimumAttestationBroadcastTime(attestation, currentTimeMillis)) {\n-      return SAVED_FOR_FUTURE;\n+      return SAVE_FOR_FUTURE;\n     }\n \n     // The block being voted for (attestation.data.beacon_block_root) passes validation.\n     // It must pass validation to be in the store.\n-    // If it's not in the store, it may not have been processed yet so save for future.\n+    // If it's not in the store, it must not have passed validation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c96e81ce2f6922c8adde1183bf5c9d2d6f993a"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3MDMxOA==", "bodyText": "Good catch. Done.", "url": "https://github.com/ConsenSys/teku/pull/2084#discussion_r437470318", "createdAt": "2020-06-09T14:32:40Z", "author": {"login": "cemozerr"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/AttestationValidator.java", "diffHunk": "@@ -111,19 +113,19 @@ ValidationResult singleOrAggregateAttestationChecks(final Attestation attestatio\n     final UnsignedLong currentTimeMillis = secondsToMillis(recentChainData.getStore().getTime());\n     if (isCurrentTimeAfterAttestationPropagationSlotRange(currentTimeMillis, attestation)\n         || isFromFarFuture(attestation, currentTimeMillis)) {\n-      return INVALID;\n+      return IGNORE;\n     }\n     if (isCurrentTimeBeforeMinimumAttestationBroadcastTime(attestation, currentTimeMillis)) {\n-      return SAVED_FOR_FUTURE;\n+      return SAVE_FOR_FUTURE;\n     }\n \n     // The block being voted for (attestation.data.beacon_block_root) passes validation.\n     // It must pass validation to be in the store.\n-    // If it's not in the store, it may not have been processed yet so save for future.\n+    // If it's not in the store, it must not have passed validation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3NzUyMw=="}, "originalCommit": {"oid": "78c96e81ce2f6922c8adde1183bf5c9d2d6f993a"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjg3NzEzOnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/InternalValidationResult.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwMDo1MjoyNFrOGg1HbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozODoyOVrOGhNVmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3Nzg2OQ==", "bodyText": "I'd suggest adding a constructor parameter so each enum value holds it's gossip sub validation result rather than having to switch here. That way it's impossible to have an unknown mapping.", "url": "https://github.com/ConsenSys/teku/pull/2084#discussion_r437077869", "createdAt": "2020-06-09T00:52:24Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/InternalValidationResult.java", "diffHunk": "@@ -13,8 +13,23 @@\n \n package tech.pegasys.teku.networking.eth2.gossip.topics.validation;\n \n-public enum ValidationResult {\n-  VALID,\n-  SAVED_FOR_FUTURE,\n-  INVALID\n+public enum InternalValidationResult {\n+  ACCEPT,\n+  SAVE_FOR_FUTURE,\n+  IGNORE,\n+  REJECT;\n+\n+  public io.libp2p.core.pubsub.ValidationResult getGossipSubValidationResult() {\n+    switch (this) {\n+      case SAVE_FOR_FUTURE:\n+      case IGNORE:\n+        return io.libp2p.core.pubsub.ValidationResult.Ignore;\n+      case REJECT:\n+        return io.libp2p.core.pubsub.ValidationResult.Invalid;\n+      case ACCEPT:\n+        return io.libp2p.core.pubsub.ValidationResult.Valid;\n+      default:\n+        throw new UnsupportedOperationException(\"Enum missing value\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c96e81ce2f6922c8adde1183bf5c9d2d6f993a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMTU3Mw==", "bodyText": "After the class renaming you can import io.libp2p.core.pubsub.ValidationResult", "url": "https://github.com/ConsenSys/teku/pull/2084#discussion_r437231573", "createdAt": "2020-06-09T08:33:37Z", "author": {"login": "Nashatyrev"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/InternalValidationResult.java", "diffHunk": "@@ -13,8 +13,23 @@\n \n package tech.pegasys.teku.networking.eth2.gossip.topics.validation;\n \n-public enum ValidationResult {\n-  VALID,\n-  SAVED_FOR_FUTURE,\n-  INVALID\n+public enum InternalValidationResult {\n+  ACCEPT,\n+  SAVE_FOR_FUTURE,\n+  IGNORE,\n+  REJECT;\n+\n+  public io.libp2p.core.pubsub.ValidationResult getGossipSubValidationResult() {\n+    switch (this) {\n+      case SAVE_FOR_FUTURE:\n+      case IGNORE:\n+        return io.libp2p.core.pubsub.ValidationResult.Ignore;\n+      case REJECT:\n+        return io.libp2p.core.pubsub.ValidationResult.Invalid;\n+      case ACCEPT:\n+        return io.libp2p.core.pubsub.ValidationResult.Valid;\n+      default:\n+        throw new UnsupportedOperationException(\"Enum missing value\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3Nzg2OQ=="}, "originalCommit": {"oid": "78c96e81ce2f6922c8adde1183bf5c9d2d6f993a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ3NDcxMw==", "bodyText": "Both good catches. Thank you. Made the changes.", "url": "https://github.com/ConsenSys/teku/pull/2084#discussion_r437474713", "createdAt": "2020-06-09T14:38:29Z", "author": {"login": "cemozerr"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/gossip/topics/validation/InternalValidationResult.java", "diffHunk": "@@ -13,8 +13,23 @@\n \n package tech.pegasys.teku.networking.eth2.gossip.topics.validation;\n \n-public enum ValidationResult {\n-  VALID,\n-  SAVED_FOR_FUTURE,\n-  INVALID\n+public enum InternalValidationResult {\n+  ACCEPT,\n+  SAVE_FOR_FUTURE,\n+  IGNORE,\n+  REJECT;\n+\n+  public io.libp2p.core.pubsub.ValidationResult getGossipSubValidationResult() {\n+    switch (this) {\n+      case SAVE_FOR_FUTURE:\n+      case IGNORE:\n+        return io.libp2p.core.pubsub.ValidationResult.Ignore;\n+      case REJECT:\n+        return io.libp2p.core.pubsub.ValidationResult.Invalid;\n+      case ACCEPT:\n+        return io.libp2p.core.pubsub.ValidationResult.Valid;\n+      default:\n+        throw new UnsupportedOperationException(\"Enum missing value\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzA3Nzg2OQ=="}, "originalCommit": {"oid": "78c96e81ce2f6922c8adde1183bf5c9d2d6f993a"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3562, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}