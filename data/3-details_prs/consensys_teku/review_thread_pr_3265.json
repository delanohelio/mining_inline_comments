{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MzczOTY3", "number": 3265, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNTowNjo0OVrOE_7jwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNToxNDo1NlrOE_7qfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NDcxNTU0OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/test/java/tech/pegasys/teku/core/stategenerator/StateAtSlotTaskTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNTowNjo0OVrOH95wyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTowNjoyNVrOH-zkrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3MTU2MA==", "bodyText": "typo? (EPOCH + x)", "url": "https://github.com/ConsenSys/teku/pull/3265#discussion_r534671560", "createdAt": "2020-12-03T05:06:49Z", "author": {"login": "rolfyone"}, "path": "ethereum/core/src/test/java/tech/pegasys/teku/core/stategenerator/StateAtSlotTaskTest.java", "diffHunk": "@@ -26,19 +26,21 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.teku.core.ChainBuilder;\n+import tech.pegasys.teku.core.StateTransition;\n import tech.pegasys.teku.core.stategenerator.CachingTaskQueue.CacheableTask;\n-import tech.pegasys.teku.core.stategenerator.CheckpointStateTask.AsyncStateProvider;\n+import tech.pegasys.teku.core.stategenerator.StateAtSlotTask.AsyncStateProvider;\n import tech.pegasys.teku.datastructures.blocks.SignedBlockAndState;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n import tech.pegasys.teku.datastructures.forkchoice.InvalidCheckpointException;\n import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.state.Checkpoint;\n import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n-class CheckpointStateTaskTest {\n-  private static final UInt64 EPOCH = UInt64.valueOf(2);\n-  private static final UInt64 EPOCH_START_SLOT = BeaconStateUtil.compute_start_slot_at_epoch(EPOCH);\n+class StateAtSlotTaskTest {\n+  private static final UInt64 EPOCHx = UInt64.valueOf(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846c433c75e17098b6910da0d5208fe326103179"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTYxODczMw==", "bodyText": "Fixed.", "url": "https://github.com/ConsenSys/teku/pull/3265#discussion_r535618733", "createdAt": "2020-12-03T21:06:25Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/test/java/tech/pegasys/teku/core/stategenerator/StateAtSlotTaskTest.java", "diffHunk": "@@ -26,19 +26,21 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import tech.pegasys.teku.core.ChainBuilder;\n+import tech.pegasys.teku.core.StateTransition;\n import tech.pegasys.teku.core.stategenerator.CachingTaskQueue.CacheableTask;\n-import tech.pegasys.teku.core.stategenerator.CheckpointStateTask.AsyncStateProvider;\n+import tech.pegasys.teku.core.stategenerator.StateAtSlotTask.AsyncStateProvider;\n import tech.pegasys.teku.datastructures.blocks.SignedBlockAndState;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n import tech.pegasys.teku.datastructures.forkchoice.InvalidCheckpointException;\n import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.state.Checkpoint;\n import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n-class CheckpointStateTaskTest {\n-  private static final UInt64 EPOCH = UInt64.valueOf(2);\n-  private static final UInt64 EPOCH_START_SLOT = BeaconStateUtil.compute_start_slot_at_epoch(EPOCH);\n+class StateAtSlotTaskTest {\n+  private static final UInt64 EPOCHx = UInt64.valueOf(2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3MTU2MA=="}, "originalCommit": {"oid": "846c433c75e17098b6910da0d5208fe326103179"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NDczMjc3OnYy", "diffSide": "RIGHT", "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/BlockFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNToxNDo1NlrOH956zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTowNjoyMFrOH-zkYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3NDEyNg==", "bodyText": "might be able to use orElseGet instead here?", "url": "https://github.com/ConsenSys/teku/pull/3265#discussion_r534674126", "createdAt": "2020-12-03T05:14:56Z", "author": {"login": "rolfyone"}, "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/BlockFactory.java", "diffHunk": "@@ -87,7 +94,12 @@ public BeaconBlock createUnsignedBlock(\n     }\n \n     // Collect attestations to include\n-    final BeaconState blockSlotState = stateTransition.process_slots(blockPreState, newSlot);\n+    final BeaconState blockSlotState;\n+    if (maybeBlockSlotState.isPresent()) {\n+      blockSlotState = maybeBlockSlotState.get();\n+    } else {\n+      blockSlotState = stateTransition.process_slots(blockPreState, newSlot);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846c433c75e17098b6910da0d5208fe326103179"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTYxODY1Ng==", "bodyText": "ah I remember trying that before now.... process_slots can throw checked exceptions so it doesn't work well with orElseGet.", "url": "https://github.com/ConsenSys/teku/pull/3265#discussion_r535618656", "createdAt": "2020-12-03T21:06:20Z", "author": {"login": "ajsutton"}, "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/BlockFactory.java", "diffHunk": "@@ -87,7 +94,12 @@ public BeaconBlock createUnsignedBlock(\n     }\n \n     // Collect attestations to include\n-    final BeaconState blockSlotState = stateTransition.process_slots(blockPreState, newSlot);\n+    final BeaconState blockSlotState;\n+    if (maybeBlockSlotState.isPresent()) {\n+      blockSlotState = maybeBlockSlotState.get();\n+    } else {\n+      blockSlotState = stateTransition.process_slots(blockPreState, newSlot);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3NDEyNg=="}, "originalCommit": {"oid": "846c433c75e17098b6910da0d5208fe326103179"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3052, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}