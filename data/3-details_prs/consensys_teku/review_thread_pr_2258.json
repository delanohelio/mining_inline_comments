{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjk3MTkw", "number": 2258, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjowNDozOFrOEKVhSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMzoyMjo1MVrOELhw7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjczODAxOnYy", "diffSide": "RIGHT", "path": "logging/src/main/java/tech/pegasys/teku/logging/SubCommandLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjowNDozOFrOGrUU_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowMDozN1rOGr59VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NTAwNQ==", "bodyText": "Does there need to be a noOp for error messages as well? Instead of noop method on the SubCommandLogger thinking that NoOp SubCommandLogger that doesn't output would be nicer.", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r448075005", "createdAt": "2020-07-01T02:04:38Z", "author": {"login": "jframe"}, "path": "logging/src/main/java/tech/pegasys/teku/logging/SubCommandLogger.java", "diffHunk": "@@ -30,6 +30,10 @@ public void display(final String message) {\n     System.out.println(message);\n   }\n \n+  public void noOp(final String message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e6cb4f0a0bd21795030fee3021ef0c4c3ce15b4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MTU0MQ==", "bodyText": "removed the method.", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r448691541", "createdAt": "2020-07-02T01:00:37Z", "author": {"login": "usmansaleem"}, "path": "logging/src/main/java/tech/pegasys/teku/logging/SubCommandLogger.java", "diffHunk": "@@ -30,6 +30,10 @@ public void display(final String message) {\n     System.out.println(message);\n   }\n \n+  public void noOp(final String message) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NTAwNQ=="}, "originalCommit": {"oid": "0e6cb4f0a0bd21795030fee3021ef0c4c3ce15b4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc0NDA1OnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjowNzo1NlrOGrUYWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowMDo1MlrOGr59ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NTg2NQ==", "bodyText": "This I think could be part of the sendDeposit so it could be reused between both commands", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r448075865", "createdAt": "2020-07-01T02:07:56Z", "author": {"login": "jframe"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "diffHunk": "@@ -96,8 +97,34 @@ public void run() {\n   @NotNull\n   private Function<ValidatorKeys, SafeFuture<TransactionReceipt>> registerValidator(\n       final RegisterAction registerAction) {\n-    return validatorKey ->\n-        registerAction.sendDeposit(\n-            validatorKey.getValidatorKey(), validatorKey.getWithdrawalKey().getPublicKey());\n+    return validatorKey -> {\n+      final BLSKeyPair validatorKeyPair = validatorKey.getValidatorKey();\n+      final BLSKeyPair withdrawalKeyPair = validatorKey.getWithdrawalKey();\n+      if (displayConfirmation) {\n+        SUB_COMMAND_LOG.display(\n+            String.format(\n+                \"%nSending deposit for Validator Key [%s].%n\",\n+                validatorKeyPair.getPublicKey().toString()));\n+      }\n+\n+      final SafeFuture<TransactionReceipt> transactionReceiptSafeFuture =\n+          registerAction.sendDeposit(validatorKeyPair, withdrawalKeyPair.getPublicKey());\n+\n+      if (displayConfirmation) {\n+        transactionReceiptSafeFuture.finish(\n+            transactionReceipt ->\n+                SUB_COMMAND_LOG.display(\n+                    String.format(\n+                        \"Transaction for Validator Key [%s] Completed. Transaction Hash: [%s]%n\",\n+                        validatorKeyPair.getPublicKey().toString(),\n+                        transactionReceipt.getTransactionHash())),\n+            exception ->\n+                SUB_COMMAND_LOG.error(\n+                    String.format(\n+                        \"Transaction for Validator Key [%s] Failed: Message: [%s]%n\",\n+                        validatorKeyPair.getPublicKey().toString(), exception.getMessage())));\n+      }\n+      return transactionReceiptSafeFuture;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e6cb4f0a0bd21795030fee3021ef0c4c3ce15b4"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MTYxOQ==", "bodyText": "refactored down the stack.", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r448691619", "createdAt": "2020-07-02T01:00:52Z", "author": {"login": "usmansaleem"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "diffHunk": "@@ -96,8 +97,34 @@ public void run() {\n   @NotNull\n   private Function<ValidatorKeys, SafeFuture<TransactionReceipt>> registerValidator(\n       final RegisterAction registerAction) {\n-    return validatorKey ->\n-        registerAction.sendDeposit(\n-            validatorKey.getValidatorKey(), validatorKey.getWithdrawalKey().getPublicKey());\n+    return validatorKey -> {\n+      final BLSKeyPair validatorKeyPair = validatorKey.getValidatorKey();\n+      final BLSKeyPair withdrawalKeyPair = validatorKey.getWithdrawalKey();\n+      if (displayConfirmation) {\n+        SUB_COMMAND_LOG.display(\n+            String.format(\n+                \"%nSending deposit for Validator Key [%s].%n\",\n+                validatorKeyPair.getPublicKey().toString()));\n+      }\n+\n+      final SafeFuture<TransactionReceipt> transactionReceiptSafeFuture =\n+          registerAction.sendDeposit(validatorKeyPair, withdrawalKeyPair.getPublicKey());\n+\n+      if (displayConfirmation) {\n+        transactionReceiptSafeFuture.finish(\n+            transactionReceipt ->\n+                SUB_COMMAND_LOG.display(\n+                    String.format(\n+                        \"Transaction for Validator Key [%s] Completed. Transaction Hash: [%s]%n\",\n+                        validatorKeyPair.getPublicKey().toString(),\n+                        transactionReceipt.getTransactionHash())),\n+            exception ->\n+                SUB_COMMAND_LOG.error(\n+                    String.format(\n+                        \"Transaction for Validator Key [%s] Failed: Message: [%s]%n\",\n+                        validatorKeyPair.getPublicKey().toString(), exception.getMessage())));\n+      }\n+      return transactionReceiptSafeFuture;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NTg2NQ=="}, "originalCommit": {"oid": "0e6cb4f0a0bd21795030fee3021ef0c4c3ce15b4"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc0NjM4OnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjowOToyM1rOGrUZtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowMTowNVrOGr591g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NjIxMg==", "bodyText": "Should be a different flag I think, the displayConfirmation flag seems like different setting to suppressing the output", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r448076212", "createdAt": "2020-07-01T02:09:23Z", "author": {"login": "jframe"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "diffHunk": "@@ -96,8 +97,34 @@ public void run() {\n   @NotNull\n   private Function<ValidatorKeys, SafeFuture<TransactionReceipt>> registerValidator(\n       final RegisterAction registerAction) {\n-    return validatorKey ->\n-        registerAction.sendDeposit(\n-            validatorKey.getValidatorKey(), validatorKey.getWithdrawalKey().getPublicKey());\n+    return validatorKey -> {\n+      final BLSKeyPair validatorKeyPair = validatorKey.getValidatorKey();\n+      final BLSKeyPair withdrawalKeyPair = validatorKey.getWithdrawalKey();\n+      if (displayConfirmation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e6cb4f0a0bd21795030fee3021ef0c4c3ce15b4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MTY3MA==", "bodyText": "flag updated.", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r448691670", "createdAt": "2020-07-02T01:01:05Z", "author": {"login": "usmansaleem"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "diffHunk": "@@ -96,8 +97,34 @@ public void run() {\n   @NotNull\n   private Function<ValidatorKeys, SafeFuture<TransactionReceipt>> registerValidator(\n       final RegisterAction registerAction) {\n-    return validatorKey ->\n-        registerAction.sendDeposit(\n-            validatorKey.getValidatorKey(), validatorKey.getWithdrawalKey().getPublicKey());\n+    return validatorKey -> {\n+      final BLSKeyPair validatorKeyPair = validatorKey.getValidatorKey();\n+      final BLSKeyPair withdrawalKeyPair = validatorKey.getWithdrawalKey();\n+      if (displayConfirmation) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NjIxMg=="}, "originalCommit": {"oid": "0e6cb4f0a0bd21795030fee3021ef0c4c3ce15b4"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Mjc0ODkwOnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/EncryptedKeystoreWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxMDo1MVrOGrUbMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowMTozMFrOGr5-Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NjU5Mg==", "bodyText": "commandOuput instead of log? This has different purpose to the main logger", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r448076592", "createdAt": "2020-07-01T02:10:51Z", "author": {"login": "jframe"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/EncryptedKeystoreWriter.java", "diffHunk": "@@ -39,16 +40,19 @@\n   private final String validatorKeyPassword;\n   private final String withdrawalKeyPassword;\n   private final Path outputPath;\n+  private final Consumer<String> log;\n \n   public EncryptedKeystoreWriter(\n       final SecureRandom secureRandom,\n       final String validatorKeyPassword,\n       final String withdrawalKeyPassword,\n-      final Path outputPath) {\n+      final Path outputPath,\n+      final Consumer<String> log) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e6cb4f0a0bd21795030fee3021ef0c4c3ce15b4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MTc5NQ==", "bodyText": "updated variable.", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r448691795", "createdAt": "2020-07-02T01:01:30Z", "author": {"login": "usmansaleem"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/EncryptedKeystoreWriter.java", "diffHunk": "@@ -39,16 +40,19 @@\n   private final String validatorKeyPassword;\n   private final String withdrawalKeyPassword;\n   private final Path outputPath;\n+  private final Consumer<String> log;\n \n   public EncryptedKeystoreWriter(\n       final SecureRandom secureRandom,\n       final String validatorKeyPassword,\n       final String withdrawalKeyPassword,\n-      final Path outputPath) {\n+      final Path outputPath,\n+      final Consumer<String> log) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NjU5Mg=="}, "originalCommit": {"oid": "0e6cb4f0a0bd21795030fee3021ef0c4c3ce15b4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMTAxMTEwOnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNToxMjozNFrOGsj5hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNzowODoxN1rOGsmBkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM3ODY5NQ==", "bodyText": "nit: Not sure if this should be a hidden option. Seems like a sensible option to have?", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r449378695", "createdAt": "2020-07-03T05:12:34Z", "author": {"login": "jframe"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "diffHunk": "@@ -50,11 +50,9 @@\n   @Mixin private GenerateParams generateParams;\n \n   @Option(\n-      names = {\"--Xconfirm-enabled\"},\n-      arity = \"1\",\n-      defaultValue = \"true\",\n+      names = {\"--Xquiet\"},\n       hidden = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d8542855e3c2133e84d1bfb07b63eef99fd5095"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM3OTkyNw==", "bodyText": "Why did we rename it to not be compliant with our CLI style guide?  --confirm-enabled would have been what I expected it to be (and I agree it shouldn't be hidden).", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r449379927", "createdAt": "2020-07-03T05:18:18Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "diffHunk": "@@ -50,11 +50,9 @@\n   @Mixin private GenerateParams generateParams;\n \n   @Option(\n-      names = {\"--Xconfirm-enabled\"},\n-      arity = \"1\",\n-      defaultValue = \"true\",\n+      names = {\"--Xquiet\"},\n       hidden = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM3ODY5NQ=="}, "originalCommit": {"oid": "5d8542855e3c2133e84d1bfb07b63eef99fd5095"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM4NTI4MA==", "bodyText": "@ajsutton It was previously hidden hence I renamed it without following -enabled suffix. The flag was renamed to make the intent more clear as previously it was to only suppress the \"confirmation\" dialog, now it is also suppressing the additional verbose status log as well.\nIf we want it to be a non-dev (i.e. non-hidden) option,  we would need a more generic option name with -enabled prefix.\nWe may also change to have two options, one to enable/disable confirmation message, the other one to enable/disable verbose status message.", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r449385280", "createdAt": "2020-07-03T05:40:06Z", "author": {"login": "usmansaleem"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "diffHunk": "@@ -50,11 +50,9 @@\n   @Mixin private GenerateParams generateParams;\n \n   @Option(\n-      names = {\"--Xconfirm-enabled\"},\n-      arity = \"1\",\n-      defaultValue = \"true\",\n+      names = {\"--Xquiet\"},\n       hidden = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM3ODY5NQ=="}, "originalCommit": {"oid": "5d8542855e3c2133e84d1bfb07b63eef99fd5095"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQxMzUyMg==", "bodyText": "I think keeping it simple and just the single option for this would be sufficient in my mind. All you want to do is make it optional provide a detailed output of exactly whats going on at each stage. What about --verbose-output-enabled with default to True?", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r449413522", "createdAt": "2020-07-03T07:08:17Z", "author": {"login": "arash009"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/DepositGenerateAndRegisterCommand.java", "diffHunk": "@@ -50,11 +50,9 @@\n   @Mixin private GenerateParams generateParams;\n \n   @Option(\n-      names = {\"--Xconfirm-enabled\"},\n-      arity = \"1\",\n-      defaultValue = \"true\",\n+      names = {\"--Xquiet\"},\n       hidden = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM3ODY5NQ=="}, "originalCommit": {"oid": "5d8542855e3c2133e84d1bfb07b63eef99fd5095"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTIyOTkxOnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/RegisterAction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMzoyMjo1MlrOGtHtIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMzo0ODozOFrOGtH_kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk2NTM0Ng==", "bodyText": "This is misleading.  The transfer is happening on the ETH1 network but this statement is reporting the ETH2 network.  What network the transfer happens on is controlled by what chain the ETH1 endpoint is sync'd to and nothing this tool can do will change that.", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r449965346", "createdAt": "2020-07-06T03:22:52Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/RegisterAction.java", "diffHunk": "@@ -100,8 +110,10 @@ public void displayConfirmation(final int totalNumberOfDeposits) {\n         consoleAdapter.readLine(\n             \"You are about to submit \"\n                 + transactionPart\n-                + \" of %s Eth. This is irreversible, please make sure you understand the consequences. Are you sure you want to continue? [y/n]\",\n-            eth);\n+                + \" of %s Eth to contract address [%s] on network [%s].\\nThis is irreversible, please make sure you understand the consequences. Are you sure you want to continue? [y/n]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb5c7d885a1b465f89bc7abdd2556fcdf88b1493"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3MDA2NQ==", "bodyText": "Maybe it could say something like \"The deposit signature will be valid for the Ethereum 2 network %s\"?  Although the other catch is that the ETH2 network may be a URL to a YAML file with the network config, it's not necessarily a nice human friendly name.", "url": "https://github.com/ConsenSys/teku/pull/2258#discussion_r449970065", "createdAt": "2020-07-06T03:48:38Z", "author": {"login": "ajsutton"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/RegisterAction.java", "diffHunk": "@@ -100,8 +110,10 @@ public void displayConfirmation(final int totalNumberOfDeposits) {\n         consoleAdapter.readLine(\n             \"You are about to submit \"\n                 + transactionPart\n-                + \" of %s Eth. This is irreversible, please make sure you understand the consequences. Are you sure you want to continue? [y/n]\",\n-            eth);\n+                + \" of %s Eth to contract address [%s] on network [%s].\\nThis is irreversible, please make sure you understand the consequences. Are you sure you want to continue? [y/n]\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk2NTM0Ng=="}, "originalCommit": {"oid": "fb5c7d885a1b465f89bc7abdd2556fcdf88b1493"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3486, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}