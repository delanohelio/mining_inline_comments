{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NzY5Njcw", "number": 1117, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMTowNDo1MlrODbExmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMTowNDo1MlrODbExmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzE2Mzc2OnYy", "diffSide": "RIGHT", "path": "util/src/test-support/java/tech/pegasys/artemis/util/EventSink.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMTowNDo1MlrOFiWlqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMTowNjowNVrOFiWm_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NTk5NQ==", "bodyText": "Why do you take the eventType as an argument to this class? You already take it in the constructor.", "url": "https://github.com/ConsenSys/teku/pull/1117#discussion_r371565995", "createdAt": "2020-01-28T01:04:52Z", "author": {"login": "cemozerr"}, "path": "util/src/test-support/java/tech/pegasys/artemis/util/EventSink.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util;\n+\n+import com.google.common.eventbus.EventBus;\n+import com.google.common.eventbus.Subscribe;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class EventSink<T> {\n+\n+  private final List<T> events = new ArrayList<>();\n+  private final Class<T> eventType;\n+\n+  private EventSink(final Class<T> eventType) {\n+    this.eventType = eventType;\n+  }\n+\n+  public static <T> List<T> capture(final EventBus eventBus, Class<T> eventType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c428532f7c4aa8b609d912c807c7a2bdc8370f4"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NjMzNA==", "bodyText": "It's a static method which invokes the constructor and registers the instance with the event bus.", "url": "https://github.com/ConsenSys/teku/pull/1117#discussion_r371566334", "createdAt": "2020-01-28T01:06:05Z", "author": {"login": "ajsutton"}, "path": "util/src/test-support/java/tech/pegasys/artemis/util/EventSink.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util;\n+\n+import com.google.common.eventbus.EventBus;\n+import com.google.common.eventbus.Subscribe;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class EventSink<T> {\n+\n+  private final List<T> events = new ArrayList<>();\n+  private final Class<T> eventType;\n+\n+  private EventSink(final Class<T> eventType) {\n+    this.eventType = eventType;\n+  }\n+\n+  public static <T> List<T> capture(final EventBus eventBus, Class<T> eventType) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2NTk5NQ=="}, "originalCommit": {"oid": "3c428532f7c4aa8b609d912c807c7a2bdc8370f4"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2806, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}