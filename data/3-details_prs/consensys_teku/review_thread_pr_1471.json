{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzQwNDQ0", "number": 1471, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozMjozMFrODrXgSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDo0OTowMVrODr1Ahw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODAwNDU2OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetStateIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozMjozMFrOF7rH3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoxOToxMFrOF8UYOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODExNjgzMA==", "bodyText": "nit: most of the time function name, then should, like queryBySlot_shouldReturnNoContentIfHeadRootMissing", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398116830", "createdAt": "2020-03-25T19:32:30Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetStateIntegrationTest.java", "diffHunk": "@@ -42,6 +48,50 @@ public void shouldReturnNoContentIfStoreNotDefined_queryBySlot() throws Exceptio\n     assertNoContent(response);\n   }\n \n+  @Test\n+  public void shouldReturnNoContentIfHeadRootMissing_queryBySlot() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5Mjc2Mg==", "bodyText": "There are 2 styles of test names that I typically use / have seen:\n\nmethodName_variationA_variationB\nshouldDoX_variationA\n\nI prefer the first style, but these tests are just invoking an http endpoint, so there's not really a method name to use.", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398792762", "createdAt": "2020-03-26T18:19:10Z", "author": {"login": "mbaxter"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetStateIntegrationTest.java", "diffHunk": "@@ -42,6 +48,50 @@ public void shouldReturnNoContentIfStoreNotDefined_queryBySlot() throws Exceptio\n     assertNoContent(response);\n   }\n \n+  @Test\n+  public void shouldReturnNoContentIfHeadRootMissing_queryBySlot() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODExNjgzMA=="}, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODAwNjIwOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetStateIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozMjo1OVrOF7rI0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozMjo1OVrOF7rI0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODExNzA3NQ==", "bodyText": "queryBySlot_shouldHandleMissingState", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398117075", "createdAt": "2020-03-25T19:32:59Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetStateIntegrationTest.java", "diffHunk": "@@ -42,6 +48,50 @@ public void shouldReturnNoContentIfStoreNotDefined_queryBySlot() throws Exceptio\n     assertNoContent(response);\n   }\n \n+  @Test\n+  public void shouldReturnNoContentIfHeadRootMissing_queryBySlot() throws Exception {\n+    final Store store = mock(Store.class);\n+    when(chainStorageClient.getStore()).thenReturn(store);\n+    when(chainStorageClient.getBestBlockRoot()).thenReturn(Optional.empty());\n+\n+    final Response response = getBySlot(1);\n+    assertNoContent(response);\n+  }\n+\n+  @Test\n+  public void handleMissingState_queryBySlot() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODAwOTMxOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetStateRootIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozMzo1NlrOF7rK2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozMzo1NlrOF7rK2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODExNzU5NQ==", "bodyText": "nit: queryBySlot_shouldReturnNoContentIfHeadRootUnavailable", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398117595", "createdAt": "2020-03-25T19:33:56Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/GetStateRootIntegrationTest.java", "diffHunk": "@@ -33,6 +36,16 @@ public void shouldReturnNoContentIfStoreNotDefined_queryBySlot() throws Exceptio\n     assertNoContent(response);\n   }\n \n+  @Test\n+  public void shouldReturnNoContentIfHeadRootUnavailable_queryBySlot() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODAyOTQxOnYy", "diffSide": "LEFT", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/PostDutiesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTozOTo1OFrOF7rXvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODoyNjo0MlrOF8UsRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyMDg5NA==", "bodyText": "have we removed this test and re-tasked it?\nthe intent of this test was to show that an empty list is returned on an empty list passed in, and that's to be consistent with another API, so we should retain that intent in the testing.", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398120894", "createdAt": "2020-03-25T19:39:58Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/PostDutiesTest.java", "diffHunk": "@@ -58,19 +58,20 @@ public void shouldReturnBadRequestWhenNegativeEpochNumberInBody() throws Excepti\n   }\n \n   @Test\n-  public void shouldReturnEmptyListWhenNoValidatorDuties() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc5Nzg5Mg==", "bodyText": "It looked to me as if we were using the empty list to just represent no data, so I cut this since we're now using Optional's to represent no data.  I've gone back and added some short-circuit logic that will return an empty list if an empty list of public keys are provided, and added some more tests.", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398797892", "createdAt": "2020-03-26T18:26:42Z", "author": {"login": "mbaxter"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/PostDutiesTest.java", "diffHunk": "@@ -58,19 +58,20 @@ public void shouldReturnBadRequestWhenNegativeEpochNumberInBody() throws Excepti\n   }\n \n   @Test\n-  public void shouldReturnEmptyListWhenNoValidatorDuties() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyMDg5NA=="}, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODAzODM0OnYy", "diffSide": "LEFT", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetCommitteesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTo0MjoyOVrOF7rdGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozOTozNFrOF8VMlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyMjI2NQ==", "bodyText": "i'd still like a test to show behaviour on future epoch, and we definitely want that not cached", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398122265", "createdAt": "2020-03-25T19:42:29Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetCommitteesTest.java", "diffHunk": "@@ -101,20 +86,21 @@ public void shouldReturnBadRequestWhenNoEpochIsSupplied() throws Exception {\n   }\n \n   @Test\n-  public void shouldReturnEmptyListWhenAFutureEpochIsRequested() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwNjE2NQ==", "bodyText": "Added shouldHandleFutureEpoch and shouldHandleMissingFinalizedState", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398806165", "createdAt": "2020-03-26T18:39:34Z", "author": {"login": "mbaxter"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetCommitteesTest.java", "diffHunk": "@@ -101,20 +86,21 @@ public void shouldReturnBadRequestWhenNoEpochIsSupplied() throws Exception {\n   }\n \n   @Test\n-  public void shouldReturnEmptyListWhenAFutureEpochIsRequested() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyMjI2NQ=="}, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODA0MjE2OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetCommitteesTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTo0MzozOFrOF7rfcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODo0MTozMlrOF8VRRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyMjg2Ng==", "bodyText": "if we're returning a result of 'SC_GONE', that can totally be cached, so this does look like a scenario we want to dig into if cache says none here. We'd be better off not setting the header at all and letting default behaviour happen potentially", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398122866", "createdAt": "2020-03-25T19:43:38Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetCommitteesTest.java", "diffHunk": "@@ -101,20 +86,21 @@ public void shouldReturnBadRequestWhenNoEpochIsSupplied() throws Exception {\n   }\n \n   @Test\n-  public void shouldReturnEmptyListWhenAFutureEpochIsRequested() throws Exception {\n+  public void shouldHandleMissingResult() throws Exception {\n     final GetCommittees handler = new GetCommittees(provider, jsonProvider);\n-    final UnsignedLong futureEpoch = slot.plus(UnsignedLong.valueOf(SLOTS_PER_EPOCH));\n \n+    when(context.queryParamMap()).thenReturn(Map.of(EPOCH, List.of(\"0\")));\n     when(provider.isStoreAvailable()).thenReturn(true);\n-    when(provider.getCommitteesAtEpoch(futureEpoch))\n-        .thenReturn(SafeFuture.completedFuture(List.of()));\n-    when(context.queryParamMap()).thenReturn(Map.of(EPOCH, List.of(futureEpoch.toString())));\n+    when(provider.getCommitteesAtEpoch(ZERO))\n+        .thenReturn(SafeFuture.completedFuture(Optional.empty()));\n     handler.handle(context);\n \n     verify(context).result(args.capture());\n     verify(context).header(Header.CACHE_CONTROL, CACHE_NONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwNzM2Nw==", "bodyText": "Added tests to check the cache.  If we're querying against a finalized state, we'll set CACHE_FINALIZED otherwise CACHE_NONE.", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398807367", "createdAt": "2020-03-26T18:41:32Z", "author": {"login": "mbaxter"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetCommitteesTest.java", "diffHunk": "@@ -101,20 +86,21 @@ public void shouldReturnBadRequestWhenNoEpochIsSupplied() throws Exception {\n   }\n \n   @Test\n-  public void shouldReturnEmptyListWhenAFutureEpochIsRequested() throws Exception {\n+  public void shouldHandleMissingResult() throws Exception {\n     final GetCommittees handler = new GetCommittees(provider, jsonProvider);\n-    final UnsignedLong futureEpoch = slot.plus(UnsignedLong.valueOf(SLOTS_PER_EPOCH));\n \n+    when(context.queryParamMap()).thenReturn(Map.of(EPOCH, List.of(\"0\")));\n     when(provider.isStoreAvailable()).thenReturn(true);\n-    when(provider.getCommitteesAtEpoch(futureEpoch))\n-        .thenReturn(SafeFuture.completedFuture(List.of()));\n-    when(context.queryParamMap()).thenReturn(Map.of(EPOCH, List.of(futureEpoch.toString())));\n+    when(provider.getCommitteesAtEpoch(ZERO))\n+        .thenReturn(SafeFuture.completedFuture(Optional.empty()));\n     handler.handle(context);\n \n     verify(context).result(args.capture());\n     verify(context).header(Header.CACHE_CONTROL, CACHE_NONE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyMjg2Ng=="}, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODA0ODMzOnYy", "diffSide": "LEFT", "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetStateTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTo0NToxMlrOF7rjJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODo0MzozN1rOF8VWdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyMzgxNA==", "bodyText": "as long as the slot is historical this is probably ok, might need another test case showing a future slot is not setting SC_GONE", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398123814", "createdAt": "2020-03-25T19:45:12Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetStateTest.java", "diffHunk": "@@ -198,6 +198,6 @@ public void shouldReturnNotFoundWhenQueryByMissingSlot() throws Exception {\n \n     handler.handle(context);\n \n-    verify(context).status(SC_NOT_FOUND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwODY5NQ==", "bodyText": "Updated to set the status based on whether slot is finalized.  If its finalized, we'll set the status to 410 GONE, if non-final we set it to 404 NOT_FOUND.  Added tests shouldHandleMissingStateAtFinalizedSlot and shouldHandleMissingStateAtNonFinalSlot.", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398808695", "createdAt": "2020-03-26T18:43:37Z", "author": {"login": "mbaxter"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/GetStateTest.java", "diffHunk": "@@ -198,6 +198,6 @@ public void shouldReturnNotFoundWhenQueryByMissingSlot() throws Exception {\n \n     handler.handle(context);\n \n-    verify(context).status(SC_NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyMzgxNA=="}, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODA1ODE2OnYy", "diffSide": "RIGHT", "path": "data/provider/src/main/java/tech/pegasys/artemis/api/ChainDataProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxOTo0ODowOFrOF7rpgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODo0NDo0MlrOF8VZHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyNTQ0MQ==", "bodyText": "nit: static import failedFuture?", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398125441", "createdAt": "2020-03-25T19:48:08Z", "author": {"login": "rolfyone"}, "path": "data/provider/src/main/java/tech/pegasys/artemis/api/ChainDataProvider.java", "diffHunk": "@@ -133,28 +135,39 @@ CombinedChainDataClient getCombinedChainDataClient() {\n     }\n     return combinedChainDataClient\n         .getStateByBlockRoot(blockRoot)\n-        .thenApply(state -> state.map(BeaconState::new))\n-        .exceptionally(err -> Optional.empty());\n+        .thenApply(state -> state.map(BeaconState::new));\n   }\n \n   public SafeFuture<Optional<BeaconState>> getStateAtSlot(UnsignedLong slot) {\n-    if (!isStoreAvailable()) {\n-      return SafeFuture.failedFuture(new ChainDataUnavailableException());\n-    }\n-    return combinedChainDataClient\n-        .getStateAtSlot(slot)\n-        .thenApply(state -> state.map(BeaconState::new))\n-        .exceptionally(err -> Optional.empty());\n+    return SafeFuture.of(\n+        () -> {\n+          if (!isStoreAvailable()) {\n+            return SafeFuture.failedFuture(new ChainDataUnavailableException());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwOTM3Mw==", "bodyText": "I tend to stay away from static imports for the most part \ud83e\udd37\u200d\u2640", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398809373", "createdAt": "2020-03-26T18:44:42Z", "author": {"login": "mbaxter"}, "path": "data/provider/src/main/java/tech/pegasys/artemis/api/ChainDataProvider.java", "diffHunk": "@@ -133,28 +135,39 @@ CombinedChainDataClient getCombinedChainDataClient() {\n     }\n     return combinedChainDataClient\n         .getStateByBlockRoot(blockRoot)\n-        .thenApply(state -> state.map(BeaconState::new))\n-        .exceptionally(err -> Optional.empty());\n+        .thenApply(state -> state.map(BeaconState::new));\n   }\n \n   public SafeFuture<Optional<BeaconState>> getStateAtSlot(UnsignedLong slot) {\n-    if (!isStoreAvailable()) {\n-      return SafeFuture.failedFuture(new ChainDataUnavailableException());\n-    }\n-    return combinedChainDataClient\n-        .getStateAtSlot(slot)\n-        .thenApply(state -> state.map(BeaconState::new))\n-        .exceptionally(err -> Optional.empty());\n+    return SafeFuture.of(\n+        () -> {\n+          if (!isStoreAvailable()) {\n+            return SafeFuture.failedFuture(new ChainDataUnavailableException());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODEyNTQ0MQ=="}, "originalCommit": {"oid": "c2ec7015b6823d212abf15c32693354101806079"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjgzODQ3OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/PostDutiesIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDo0OTowMVrOF8Z2Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDo0OTowMVrOF8Z2Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg4MjM3NA==", "bodyText": "i wasn't too worried about the literal '1', i was just saying UnsignedLong.ONE could easily be static imported and just ONE...", "url": "https://github.com/ConsenSys/teku/pull/1471#discussion_r398882374", "createdAt": "2020-03-26T20:49:01Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/artemis/beaconrestapi/beacon/PostDutiesIntegrationTest.java", "diffHunk": "@@ -36,22 +39,40 @@\n \n   @Test\n   public void shouldReturnNoContentIfStoreNotDefined() throws Exception {\n+    final UnsignedLong epoch = UnsignedLong.ONE;\n     when(chainStorageClient.getStore()).thenReturn(null);\n+    when(chainStorageClient.getFinalizedEpoch()).thenReturn(epoch);\n \n-    final Response response = post(1, keys);\n+    final Response response = post(epoch.intValue(), keys);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63a115b8542a6f7b9c1a6b7392cc350cda12ceb9"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1744, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}