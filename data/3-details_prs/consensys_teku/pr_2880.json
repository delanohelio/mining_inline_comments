{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDc0OTA0", "number": 2880, "title": "[QS-1] Add hard limits to gossip queues", "bodyText": "PR Description\nAdd stricter limits on PendingPool and FutureItems which are used to queue blocks and attestations that are not yet ready for processing:\n\nWhen adding to FutureItems, ignore items from the far future\nWhen adding elements to a full PendingPool, drop oldest item\n\nFixed Issue(s)\n\n\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-10-05T19:41:46Z", "url": "https://github.com/ConsenSys/teku/pull/2880", "merged": true, "mergeCommit": {"oid": "daf3d2478dd8bbbe84ba563c247577bcdc5daf09"}, "closed": true, "closedAt": "2020-10-09T16:10:25Z", "author": {"login": "mbaxter"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPpANRAH2gAyNDk4MDc0OTA0OjUyOTQ2MjUxN2E0NjFmZWQ5MDA5MWM4NzQ3ODYyNDMzYjI4ZDI3MjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQ3VEggH2gAyNDk4MDc0OTA0OjBjNGNiNzRkYmE2YzVmZTljNjZkZGMwNWJkNDk4YmJhYWE2NjJlYjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "529462517a461fed90091c8747862433b28d2726", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/529462517a461fed90091c8747862433b28d2726", "committedDate": "2020-10-05T19:32:26Z", "message": "Ignore future items from the far future"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9224b1c410f889eb12a14b2ad39c8a359d38dafc", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/9224b1c410f889eb12a14b2ad39c8a359d38dafc", "committedDate": "2020-10-05T19:32:26Z", "message": "Increase future limit for attestations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41731dc10490595a398c6d5314de5201c8c0f45f", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/41731dc10490595a398c6d5314de5201c8c0f45f", "committedDate": "2020-10-05T19:32:26Z", "message": "Keep ordering information on pending items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a38d9af1eb64f8c190269f4df246b14a3304e580", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/a38d9af1eb64f8c190269f4df246b14a3304e580", "committedDate": "2020-10-05T19:32:38Z", "message": "Use non-concurrent collections and synchronize access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77423bbba27531292593adfb1f31e9d586a89a46", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/77423bbba27531292593adfb1f31e9d586a89a46", "committedDate": "2020-10-05T19:32:38Z", "message": "Set hard limit on number of items in PendingPool"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34fd7e9c04cde0af0c7675569adb5c6e58c351a0", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/34fd7e9c04cde0af0c7675569adb5c6e58c351a0", "committedDate": "2020-10-05T19:50:29Z", "message": "Fix compile errors, clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6d63b2279ebb7db57d516a4fcb01619232fd393", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/e6d63b2279ebb7db57d516a4fcb01619232fd393", "committedDate": "2020-10-05T20:38:37Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1a068d87f984223b7503d7bb71b39a7dd6f3872", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/d1a068d87f984223b7503d7bb71b39a7dd6f3872", "committedDate": "2020-10-06T15:21:47Z", "message": "Merge branch 'master' into qs-1/add-hard-limits-to-gossip-queues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/eade5149a13d5cd863031e52b72ecfce7478bfb5", "committedDate": "2020-10-07T16:04:32Z", "message": "Merge branch 'master' into qs-1/add-hard-limits-to-gossip-queues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDQ4NjMz", "url": "https://github.com/ConsenSys/teku/pull/2880#pullrequestreview-504048633", "createdAt": "2020-10-07T16:14:32Z", "commit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoxNDozM1rOHd7IQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoxNDozM1rOHd7IQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzOTUyMw==", "bodyText": "if the while clause is true and the to remove item is null, doesn't that mean the max items is less than 1? It seems a bit redundant, or we might want to just throw an error in this scenario to show that max items shouldn't have been set to 1. Or am I missing something?", "url": "https://github.com/ConsenSys/teku/pull/2880#discussion_r501139523", "createdAt": "2020-10-07T16:14:33Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/util/PendingPool.java", "diffHunk": "@@ -95,32 +109,39 @@\n   public static PendingPool<ValidateableAttestation> createForAttestations() {\n     return new PendingPool<>(\n         DEFAULT_HISTORICAL_SLOT_TOLERANCE,\n-        DEFAULT_FUTURE_SLOT_TOLERANCE,\n+        FutureItems.DEFAULT_FUTURE_SLOT_TOLERANCE,\n+        DEFAULT_MAX_ITEMS,\n         ValidateableAttestation::hash_tree_root,\n         ValidateableAttestation::getDependentBlockRoots,\n         ValidateableAttestation::getEarliestSlotForForkChoiceProcessing);\n   }\n \n-  public void add(T item) {\n+  public synchronized void add(T item) {\n     if (shouldIgnoreItem(item)) {\n       // Ignore items outside of the range we care about\n       return;\n     }\n \n+    // Make room for the new item\n+    while (pendingItems.size() > (maxItems - 1)) {\n+      final SlotAndRoot toRemove = orderedPendingItems.pollFirst();\n+      if (toRemove == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDU2NTMy", "url": "https://github.com/ConsenSys/teku/pull/2880#pullrequestreview-504056532", "createdAt": "2020-10-07T16:23:38Z", "commit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyMzozOVrOHd7gbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyMzozOVrOHd7gbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE0NTcxMQ==", "bodyText": "I think you forgot to add the item root to the dependants set here.", "url": "https://github.com/ConsenSys/teku/pull/2880#discussion_r501145711", "createdAt": "2020-10-07T16:23:39Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/util/PendingPool.java", "diffHunk": "@@ -95,32 +109,39 @@\n   public static PendingPool<ValidateableAttestation> createForAttestations() {\n     return new PendingPool<>(\n         DEFAULT_HISTORICAL_SLOT_TOLERANCE,\n-        DEFAULT_FUTURE_SLOT_TOLERANCE,\n+        FutureItems.DEFAULT_FUTURE_SLOT_TOLERANCE,\n+        DEFAULT_MAX_ITEMS,\n         ValidateableAttestation::hash_tree_root,\n         ValidateableAttestation::getDependentBlockRoots,\n         ValidateableAttestation::getEarliestSlotForForkChoiceProcessing);\n   }\n \n-  public void add(T item) {\n+  public synchronized void add(T item) {\n     if (shouldIgnoreItem(item)) {\n       // Ignore items outside of the range we care about\n       return;\n     }\n \n+    // Make room for the new item\n+    while (pendingItems.size() > (maxItems - 1)) {\n+      final SlotAndRoot toRemove = orderedPendingItems.pollFirst();\n+      if (toRemove == null) {\n+        break;\n+      }\n+      remove(pendingItems.get(toRemove.getRoot()));\n+    }\n+\n     final Bytes32 itemRoot = hashTreeRootFunction.apply(item);\n     final Collection<Bytes32> requiredRoots = requiredBlockRootsFunction.apply(item);\n \n     requiredRoots.forEach(\n         requiredRoot ->\n             // Index item by required roots\n             pendingItemsByRequiredBlockRoot\n-                // Go ahead and add our root when the set is constructed to ensure we don't\n-                // accidentally\n-                // drop this set when we prune empty sets\n                 .computeIfAbsent(\n                     requiredRoot,\n                     (key) -> {\n-                      final Set<Bytes32> dependants = createRootSet(itemRoot);\n+                      final Set<Bytes32> dependants = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "originalPosition": 134}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDYxNjk5", "url": "https://github.com/ConsenSys/teku/pull/2880#pullrequestreview-504061699", "createdAt": "2020-10-07T16:29:35Z", "commit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyOTozNVrOHd7wRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjoyOTozNVrOHd7wRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE0OTc2Nw==", "bodyText": "Did we change our prune methodology to make it more efficient?", "url": "https://github.com/ConsenSys/teku/pull/2880#discussion_r501149767", "createdAt": "2020-10-07T16:29:35Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/util/PendingPool.java", "diffHunk": "@@ -266,8 +290,18 @@ public void onNewFinalizedCheckpoint(final Checkpoint checkpoint) {\n   }\n \n   @VisibleForTesting\n-  void prune() {\n-    pruneItems(this::isTooOld);\n+  synchronized void prune() {\n+    final UInt64 slotLimit = latestFinalizedSlot.max(calculateItemAgeLimit());\n+\n+    final List<T> toRemove = new ArrayList<>();\n+    for (SlotAndRoot slotAndRoot : orderedPendingItems) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "originalPosition": 211}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDY4MjQx", "url": "https://github.com/ConsenSys/teku/pull/2880#pullrequestreview-504068241", "createdAt": "2020-10-07T16:37:24Z", "commit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjozNzoyNFrOHd8EOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjozNzoyNFrOHd8EOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NDg3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(pendingPool.size()).isEqualTo(15);\n          \n          \n            \n                assertThat(pendingPool.size()).isEqualTo(maxItems);", "url": "https://github.com/ConsenSys/teku/pull/2880#discussion_r501154874", "createdAt": "2020-10-07T16:37:24Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/PendingPoolTest.java", "diffHunk": "@@ -159,6 +160,86 @@ public void add_finalizedBlock() {\n     assertThat(requiredRootDroppedEvents).isEmpty();\n   }\n \n+  @Test\n+  public void add_moreThanMaxItems() {\n+    for (int i = 0; i < maxItems * 2; i++) {\n+      final SignedBeaconBlock block =\n+          dataStructureUtil.randomSignedBeaconBlock(currentSlot.longValue());\n+      pendingPool.add(block);\n+\n+      final int expectedSize = Math.min(maxItems, i + 1);\n+      assertThat(pendingPool.contains(block)).isTrue();\n+      assertThat(pendingPool.size()).isEqualTo(expectedSize);\n+    }\n+\n+    // Final sanity check\n+    assertThat(pendingPool.size()).isEqualTo(15);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDcwNDg4", "url": "https://github.com/ConsenSys/teku/pull/2880#pullrequestreview-504070488", "createdAt": "2020-10-07T16:40:12Z", "commit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo0MDoxMlrOHd8LSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo0MDoxMlrOHd8LSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE1NjY4Mg==", "bodyText": "Should we be adding the older block in the first place? if it's older than the rest of the items in PendingItems?", "url": "https://github.com/ConsenSys/teku/pull/2880#discussion_r501156682", "createdAt": "2020-10-07T16:40:12Z", "author": {"login": "cemozerr"}, "path": "ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/util/PendingPoolTest.java", "diffHunk": "@@ -159,6 +160,86 @@ public void add_finalizedBlock() {\n     assertThat(requiredRootDroppedEvents).isEmpty();\n   }\n \n+  @Test\n+  public void add_moreThanMaxItems() {\n+    for (int i = 0; i < maxItems * 2; i++) {\n+      final SignedBeaconBlock block =\n+          dataStructureUtil.randomSignedBeaconBlock(currentSlot.longValue());\n+      pendingPool.add(block);\n+\n+      final int expectedSize = Math.min(maxItems, i + 1);\n+      assertThat(pendingPool.contains(block)).isTrue();\n+      assertThat(pendingPool.size()).isEqualTo(expectedSize);\n+    }\n+\n+    // Final sanity check\n+    assertThat(pendingPool.size()).isEqualTo(15);\n+  }\n+\n+  @Test\n+  public void add_dontDropItemsWhenNewItemsIgnored() {\n+    final List<SignedBeaconBlock> blocks = new ArrayList<>();\n+    for (int i = 0; i < maxItems; i++) {\n+      final SignedBeaconBlock block =\n+          dataStructureUtil.randomSignedBeaconBlock(currentSlot.longValue());\n+      pendingPool.add(block);\n+      blocks.add(block);\n+\n+      final int expectedSize = Math.min(maxItems, i + 1);\n+      assertThat(pendingPool.contains(block)).isTrue();\n+      assertThat(pendingPool.size()).isEqualTo(expectedSize);\n+    }\n+    assertThat(pendingPool.size()).isEqualTo(maxItems);\n+\n+    // Add some blocks that should be ignored\n+    SignedBeaconBlock ignoredBlock =\n+        dataStructureUtil.randomSignedBeaconBlock(currentSlot.plus(futureTolerance).plus(1));\n+    pendingPool.add(ignoredBlock);\n+    ignoredBlock =\n+        dataStructureUtil.randomSignedBeaconBlock(currentSlot.minus(historicalTolerance).minus(1));\n+    pendingPool.add(ignoredBlock);\n+\n+    // All initial blocks should still be present\n+    assertThat(pendingPool.size()).isEqualTo(maxItems);\n+    blocks.forEach(b -> assertThat(pendingPool.contains(b)).isTrue());\n+  }\n+\n+  @Test\n+  public void add_shouldDropOldestItemsWhenEnforcingLimits() {\n+    final UInt64 olderSlot = currentSlot;\n+    final UInt64 newerSlot = currentSlot.plus(1);\n+    SignedBeaconBlock block;\n+\n+    // Add older block\n+    SignedBeaconBlock olderBlock = dataStructureUtil.randomSignedBeaconBlock(olderSlot);\n+    pendingPool.add(olderBlock);\n+    assertThat(pendingPool.contains(olderBlock)).isTrue();\n+\n+    // Add max newer blocks\n+    for (int i = 0; i < maxItems; i++) {\n+      block = dataStructureUtil.randomSignedBeaconBlock(newerSlot);\n+      pendingPool.add(block);\n+\n+      assertThat(pendingPool.contains(block)).isTrue();\n+      assertThat(pendingPool.size()).isLessThanOrEqualTo(maxItems);\n+    }\n+\n+    // Older block should've been dropped\n+    assertThat(pendingPool.contains(olderBlock)).isFalse();\n+\n+    // Add older block\n+    olderBlock = dataStructureUtil.randomSignedBeaconBlock(olderSlot);\n+    pendingPool.add(olderBlock);\n+    assertThat(pendingPool.contains(olderBlock)).isTrue();\n+    // Add newer block\n+    block = dataStructureUtil.randomSignedBeaconBlock(newerSlot);\n+    pendingPool.add(block);\n+\n+    // Older block should be dropped when newer block is added", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eade5149a13d5cd863031e52b72ecfce7478bfb5"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d3001ca89f6052e0c403293e874100bd9aea17b", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/2d3001ca89f6052e0c403293e874100bd9aea17b", "committedDate": "2020-10-07T18:52:18Z", "message": "Merge branch 'master' into qs-1/add-hard-limits-to-gossip-queues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b07752ffc6be104718e65f6792bb180d2bf2212", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/4b07752ffc6be104718e65f6792bb180d2bf2212", "committedDate": "2020-10-07T19:19:19Z", "message": "Use maxItems variable\n\nCo-authored-by: Cem Ozer <cemozer2018@u.northwestern.edu>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "552bdd58726e7994fcaacc76e1b0b7c122c3402b", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/552bdd58726e7994fcaacc76e1b0b7c122c3402b", "committedDate": "2020-10-07T20:11:50Z", "message": "Merge branch 'master' into qs-1/add-hard-limits-to-gossip-queues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfa2e624e677c1fa8787f2491d2446ef7ababf8b", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/dfa2e624e677c1fa8787f2491d2446ef7ababf8b", "committedDate": "2020-10-08T14:29:29Z", "message": "Merge branch 'master' into qs-1/add-hard-limits-to-gossip-queues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0OTI3MTc4", "url": "https://github.com/ConsenSys/teku/pull/2880#pullrequestreview-504927178", "createdAt": "2020-10-08T15:50:37Z", "commit": {"oid": "dfa2e624e677c1fa8787f2491d2446ef7ababf8b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2eff437a107477695e1b88943cd5b136b83ad62", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/f2eff437a107477695e1b88943cd5b136b83ad62", "committedDate": "2020-10-08T21:16:16Z", "message": "Merge branch 'master' into qs-1/add-hard-limits-to-gossip-queues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c4cb74dba6c5fe9c66ddc05bd498bbaaa662eb8", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/0c4cb74dba6c5fe9c66ddc05bd498bbaaa662eb8", "committedDate": "2020-10-09T14:47:49Z", "message": "Merge branch 'master' into qs-1/add-hard-limits-to-gossip-queues"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3479, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}