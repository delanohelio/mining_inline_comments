{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjg3NzM1", "number": 2635, "title": "Regenerate checkpoint state before taking out the fork choice lock to avoid deadlock", "bodyText": "PR Description\nChange ForkChoice.updateHead to first retrieve the justified checkpoint state, then acquire the fork choice lock.  This avoids potentially entering the state regeneration process while holding the fork choice lock which may result in reentrancy to ForkChoice which is using a plain Semaphore and does not support reentrancy, thus causing a deadlock.\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-08-20T23:18:31Z", "url": "https://github.com/ConsenSys/teku/pull/2635", "merged": true, "mergeCommit": {"oid": "81c560adff41273a78c692f7da46103974f781fc"}, "closed": true, "closedAt": "2020-08-21T00:46:56Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdA4nHxgH2gAyNDcxMjg3NzM1OjM0NDVkNWIwNmE0ODA2ZGI5NmNlNWViNzg2ZWI1YjMzMzVmZDVlMGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdA5xvKgH2gAyNDcxMjg3NzM1OmNhMjJhZGEyZTNhZmI4MzkwN2RkN2JmNTdmN2JmMzk3ODRmZTJkN2E=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3445d5b06a4806db96ce5eb786eb5b3335fd5e0c", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/3445d5b06a4806db96ce5eb786eb5b3335fd5e0c", "committedDate": "2020-08-20T23:14:39Z", "message": "Regenerate checkpoint state before taking out the fork choice lock to avoid a risk of deadlock."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDU4MDg3", "url": "https://github.com/ConsenSys/teku/pull/2635#pullrequestreview-472058087", "createdAt": "2020-08-20T23:52:09Z", "commit": {"oid": "3445d5b06a4806db96ce5eb786eb5b3335fd5e0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzo1MjowOVrOHEW9hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzo1MjowOVrOHEW9hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMzMjU1MA==", "bodyText": "if this is going to be an info, does it need to have more context?", "url": "https://github.com/ConsenSys/teku/pull/2635#discussion_r474332550", "createdAt": "2020-08-20T23:52:09Z", "author": {"login": "rolfyone"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/forkchoice/ForkChoice.java", "diffHunk": "@@ -61,38 +63,42 @@ public void processHead(UInt64 nodeSlot) {\n   }\n \n   private void processHead(Optional<UInt64> nodeSlot) {\n-    withLock(\n-            () -> {\n-              final Checkpoint finalizedCheckpoint =\n-                  recentChainData.getStore().getFinalizedCheckpoint();\n-              final Checkpoint justifiedCheckpoint =\n-                  recentChainData.getStore().getJustifiedCheckpoint();\n-              return recentChainData\n-                  .retrieveCheckpointState(justifiedCheckpoint)\n-                  .thenCompose(\n-                      justifiedCheckpointState -> {\n-                        final StoreTransaction transaction =\n-                            recentChainData.startStoreTransaction();\n-                        final ForkChoiceStrategy forkChoiceStrategy = getForkChoiceStrategy();\n-                        Bytes32 headBlockRoot =\n-                            forkChoiceStrategy.findHead(\n-                                transaction,\n-                                finalizedCheckpoint,\n-                                justifiedCheckpoint,\n-                                justifiedCheckpointState.orElseThrow());\n-\n-                        recentChainData.updateHead(\n-                            headBlockRoot,\n-                            nodeSlot.orElse(\n-                                forkChoiceStrategy\n-                                    .blockSlot(headBlockRoot)\n-                                    .orElseThrow(\n-                                        () ->\n-                                            new IllegalStateException(\n-                                                \"Unable to retrieve the slot of fork choice head\"))));\n-                        return transaction.commit();\n-                      });\n-            })\n+    final Checkpoint retrievedJustifiedCheckpoint =\n+        recentChainData.getStore().getJustifiedCheckpoint();\n+    recentChainData\n+        .retrieveCheckpointState(retrievedJustifiedCheckpoint)\n+        .thenCompose(\n+            justifiedCheckpointState ->\n+                withLock(\n+                    () -> {\n+                      final Checkpoint finalizedCheckpoint =\n+                          recentChainData.getStore().getFinalizedCheckpoint();\n+                      final Checkpoint justifiedCheckpoint =\n+                          recentChainData.getStore().getJustifiedCheckpoint();\n+                      if (!justifiedCheckpoint.equals(retrievedJustifiedCheckpoint)) {\n+                        LOG.info(\n+                            \"Skipping head block update as justified checkpoint was updated while loading checkpoint state.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3445d5b06a4806db96ce5eb786eb5b3335fd5e0c"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDU4Mjg4", "url": "https://github.com/ConsenSys/teku/pull/2635#pullrequestreview-472058288", "createdAt": "2020-08-20T23:52:50Z", "commit": {"oid": "3445d5b06a4806db96ce5eb786eb5b3335fd5e0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzo1Mjo1MFrOHEW-Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzo1Mjo1MFrOHEW-Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMzMjcyMg==", "bodyText": "did we want to include the headBlockRoot in here?", "url": "https://github.com/ConsenSys/teku/pull/2635#discussion_r474332722", "createdAt": "2020-08-20T23:52:50Z", "author": {"login": "rolfyone"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/forkchoice/ForkChoice.java", "diffHunk": "@@ -61,38 +63,42 @@ public void processHead(UInt64 nodeSlot) {\n   }\n \n   private void processHead(Optional<UInt64> nodeSlot) {\n-    withLock(\n-            () -> {\n-              final Checkpoint finalizedCheckpoint =\n-                  recentChainData.getStore().getFinalizedCheckpoint();\n-              final Checkpoint justifiedCheckpoint =\n-                  recentChainData.getStore().getJustifiedCheckpoint();\n-              return recentChainData\n-                  .retrieveCheckpointState(justifiedCheckpoint)\n-                  .thenCompose(\n-                      justifiedCheckpointState -> {\n-                        final StoreTransaction transaction =\n-                            recentChainData.startStoreTransaction();\n-                        final ForkChoiceStrategy forkChoiceStrategy = getForkChoiceStrategy();\n-                        Bytes32 headBlockRoot =\n-                            forkChoiceStrategy.findHead(\n-                                transaction,\n-                                finalizedCheckpoint,\n-                                justifiedCheckpoint,\n-                                justifiedCheckpointState.orElseThrow());\n-\n-                        recentChainData.updateHead(\n-                            headBlockRoot,\n-                            nodeSlot.orElse(\n-                                forkChoiceStrategy\n-                                    .blockSlot(headBlockRoot)\n-                                    .orElseThrow(\n-                                        () ->\n-                                            new IllegalStateException(\n-                                                \"Unable to retrieve the slot of fork choice head\"))));\n-                        return transaction.commit();\n-                      });\n-            })\n+    final Checkpoint retrievedJustifiedCheckpoint =\n+        recentChainData.getStore().getJustifiedCheckpoint();\n+    recentChainData\n+        .retrieveCheckpointState(retrievedJustifiedCheckpoint)\n+        .thenCompose(\n+            justifiedCheckpointState ->\n+                withLock(\n+                    () -> {\n+                      final Checkpoint finalizedCheckpoint =\n+                          recentChainData.getStore().getFinalizedCheckpoint();\n+                      final Checkpoint justifiedCheckpoint =\n+                          recentChainData.getStore().getJustifiedCheckpoint();\n+                      if (!justifiedCheckpoint.equals(retrievedJustifiedCheckpoint)) {\n+                        LOG.info(\n+                            \"Skipping head block update as justified checkpoint was updated while loading checkpoint state.\");\n+                      }\n+                      final StoreTransaction transaction = recentChainData.startStoreTransaction();\n+                      final ForkChoiceStrategy forkChoiceStrategy = getForkChoiceStrategy();\n+                      Bytes32 headBlockRoot =\n+                          forkChoiceStrategy.findHead(\n+                              transaction,\n+                              finalizedCheckpoint,\n+                              justifiedCheckpoint,\n+                              justifiedCheckpointState.orElseThrow());\n+\n+                      recentChainData.updateHead(\n+                          headBlockRoot,\n+                          nodeSlot.orElse(\n+                              forkChoiceStrategy\n+                                  .blockSlot(headBlockRoot)\n+                                  .orElseThrow(\n+                                      () ->\n+                                          new IllegalStateException(\n+                                              \"Unable to retrieve the slot of fork choice head\"))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3445d5b06a4806db96ce5eb786eb5b3335fd5e0c"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDU4NDQ5", "url": "https://github.com/ConsenSys/teku/pull/2635#pullrequestreview-472058449", "createdAt": "2020-08-20T23:53:21Z", "commit": {"oid": "3445d5b06a4806db96ce5eb786eb5b3335fd5e0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7178c63a3aea570bee4d6fe306736258ceaa5cdc", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/7178c63a3aea570bee4d6fe306736258ceaa5cdc", "committedDate": "2020-08-21T00:35:20Z", "message": "Add more context to messages."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca22ada2e3afb83907dd7bf57f7bf39784fe2d7a", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/ca22ada2e3afb83907dd7bf57f7bf39784fe2d7a", "committedDate": "2020-08-21T00:36:09Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into regenerate-before-forkchoice"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3522, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}