{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NjM5ODE4", "number": 3386, "title": "Use cached pre-states when importing blocks", "bodyText": "PR Description\nWhen importing blocks, get the state at the block's slot (prior to applying the block) via Store.retrieveStateAtSlot so it benefits from any cached states that performed the required slot and epoch processing.\nNote that the SSZTransitionRecorder no longer captures the pre-state because we don't have the state at the previous block anymore - however it is still recorded as the post state for the previous block.\nState roots are now captured from the state roots vector in the state rather than while processing slots as if the value came from cache we won't have done the slot processing.  If there are more than SLOTS_PER_HISTORICAL_ROOT empty slots in a row, we may not record some state roots, but this just matches the behaviour in RocksDbDatabase for finalized states.\nFixed Issue(s)\n#3262\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-12-10T04:59:43Z", "url": "https://github.com/ConsenSys/teku/pull/3386", "merged": true, "mergeCommit": {"oid": "24e3cd65d9ae71d75b404678a17fe2e774d4b985"}, "closed": true, "closedAt": "2020-12-10T23:05:26Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdksAadgH2gAyNTM1NjM5ODE4OmYzNzM1MDIwZTIxMTliMzkyNDM3Y2QyN2VjNzc0NDQ0MGIxZTgyZTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk6C5ZAH2gAyNTM1NjM5ODE4OmY1Nzk2NDk5ZGI0MmUyMGMxNTQ3NzNiYzRkZmRjMTFlYTMzZjgyY2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f3735020e2119b392437cd27ec7744440b1e82e2", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/f3735020e2119b392437cd27ec7744440b1e82e2", "committedDate": "2020-12-10T04:54:47Z", "message": "Use cached pre-states when importing blocks."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8681a633cf215c3d14fb9e2a99ce14a35a80d98", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/d8681a633cf215c3d14fb9e2a99ce14a35a80d98", "committedDate": "2020-12-10T05:03:37Z", "message": "Remove redundant check."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4ODIxNTMy", "url": "https://github.com/ConsenSys/teku/pull/3386#pullrequestreview-548821532", "createdAt": "2020-12-10T05:06:25Z", "commit": {"oid": "d8681a633cf215c3d14fb9e2a99ce14a35a80d98"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNTowNjoyNlrOIC1umw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNTowNjoyNlrOIC1umw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0ODM0Nw==", "bodyText": "Because the state has now already had slots processed up to the new block slot, the ancestry check is more complex.  We still need to ensure that block.getSlot() > getBlock(block.getParentRoot()).getSlot() but we don't have the actual parent block to get its slot.\nSo we check that:\n\nthe state we have is at the block slot (not ahead which indicates the block is invalid and not behind which suggests the caller didn't process empty slots\nthe block root at the slot before the block is the block's parent root. This ensures the block doesn't have the same slot as its parent.", "url": "https://github.com/ConsenSys/teku/pull/3386#discussion_r539848347", "createdAt": "2020-12-10T05:06:26Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -301,14 +292,20 @@ private static boolean isFinalizedAncestorOfJustified(\n \n   private static Optional<BlockImportResult> checkOnBlockConditions(\n       final BeaconBlock block,\n-      final BeaconState preState,\n+      final BeaconState blockSlotState,\n       final ReadOnlyStore store,\n       final ForkChoiceStrategy forkChoiceStrategy) {\n     final UInt64 blockSlot = block.getSlot();\n-    if (preState == null) {\n+    if (blockSlotState == null) {\n       return Optional.of(BlockImportResult.FAILED_UNKNOWN_PARENT);\n     }\n-    if (preState.getSlot().compareTo(blockSlot) >= 0) {\n+    if (!blockSlotState.getSlot().equals(blockSlot)) {\n+      return Optional.of(BlockImportResult.FAILED_INVALID_ANCESTRY);\n+    }\n+    if (blockSlot.isGreaterThan(UInt64.valueOf(GENESIS_SLOT))\n+        && !get_block_root_at_slot(blockSlotState, blockSlot.minus(1))\n+            .equals(block.getParentRoot())) {\n+      // Block is at same slot as its parent or the parent root doesn't match the state", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8681a633cf215c3d14fb9e2a99ce14a35a80d98"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4ODQxOTg2", "url": "https://github.com/ConsenSys/teku/pull/3386#pullrequestreview-548841986", "createdAt": "2020-12-10T05:36:38Z", "commit": {"oid": "d8681a633cf215c3d14fb9e2a99ce14a35a80d98"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNTozNjozOFrOIC2VgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNTozNjozOFrOIC2VgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg1ODMwNQ==", "bodyText": "dont want this at error level? seems bad...", "url": "https://github.com/ConsenSys/teku/pull/3386#discussion_r539858305", "createdAt": "2020-12-10T05:36:38Z", "author": {"login": "rolfyone"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/StateTransition.java", "diffHunk": "@@ -77,52 +76,52 @@ public BeaconState initiate(\n         preState,\n         signed_block,\n         validateStateRootAndSignatures,\n-        interimState -> {},\n         IndexedAttestationProvider.DIRECT_PROVIDER);\n   }\n \n   public BeaconState initiate(\n       BeaconState preState,\n-      SignedBeaconBlock signed_block,\n+      SignedBeaconBlock signedBlock,\n       boolean validateStateRootAndSignatures,\n-      final Consumer<BeaconState> beaconStateConsumer,\n       final IndexedAttestationProvider indexedAttestationProvider)\n       throws StateTransitionException {\n     try {\n-      BlockValidator blockValidator =\n-          validateStateRootAndSignatures ? this.blockValidator : BlockValidator.NOOP;\n-      final BeaconBlock block = signed_block.getMessage();\n-\n       // * Process slots (including those with no blocks) since block\n       // * beaconStateConsumer only consumes the missing slots here,\n       //   the new block will be processed when adding to the store.\n-      BeaconState postSlotState =\n-          process_slots(\n-              preState,\n-              block.getSlot(),\n-              state -> {\n-                if (!state.getSlot().equals(block.getSlot())) {\n-                  beaconStateConsumer.accept(state);\n-                }\n-              });\n+      BeaconState postSlotState = process_slots(preState, signedBlock.getMessage().getSlot());\n+\n+      return processAndValidateBlock(\n+          signedBlock, indexedAttestationProvider, postSlotState, validateStateRootAndSignatures);\n+    } catch (SlotProcessingException | EpochProcessingException | IllegalArgumentException e) {\n+      LOG.warn(\"State Transition error\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8681a633cf215c3d14fb9e2a99ce14a35a80d98"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3345676d82979ad9ee5c936c7e6203888e1daff", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/c3345676d82979ad9ee5c936c7e6203888e1daff", "committedDate": "2020-12-10T06:25:15Z", "message": "Remove unused variable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0510fc7bc4d7e86e388ca9320d006cb8afd65c8c", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/0510fc7bc4d7e86e388ca9320d006cb8afd65c8c", "committedDate": "2020-12-10T06:25:43Z", "message": "Merge branch 'master' of github.com:ConsenSys/teku into use-cached-pre-state-for-block-import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd115f2fd75f353c08e1c828de3964337e8a64d5", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/bd115f2fd75f353c08e1c828de3964337e8a64d5", "committedDate": "2020-12-10T06:54:21Z", "message": "Fix unit tests.\nPrune checkpoint states."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba0144c826ec936675d788e67b7077e842b1ddfb", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/ba0144c826ec936675d788e67b7077e842b1ddfb", "committedDate": "2020-12-10T06:56:36Z", "message": "Fix ForkChoiseTestExecutor."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzkxNTE4", "url": "https://github.com/ConsenSys/teku/pull/3386#pullrequestreview-549391518", "createdAt": "2020-12-10T16:40:28Z", "commit": {"oid": "ba0144c826ec936675d788e67b7077e842b1ddfb"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjo0MDoyOFrOIDSqMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzowNTozMVrOIDT3Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMyMjM1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                UInt64 slot = newBlockSlot.minus(1);\n          \n          \n            \n                UInt64 slot = newBlockSlot. minusMinZero(1);", "url": "https://github.com/ConsenSys/teku/pull/3386#discussion_r540322355", "createdAt": "2020-12-10T16:40:28Z", "author": {"login": "mbaxter"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/teku/statetransition/forkchoice/StateRootCollector.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.statetransition.forkchoice;\n+\n+import static tech.pegasys.teku.util.config.Constants.SLOTS_PER_HISTORICAL_ROOT;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZVector;\n+import tech.pegasys.teku.storage.store.UpdatableStore.StoreTransaction;\n+\n+public class StateRootCollector {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  public static void addParentStateRoots(\n+      final BeaconState blockSlotState, final StoreTransaction transaction) {\n+    final UInt64 newBlockSlot = blockSlotState.getSlot();\n+    final SSZVector<Bytes32> blockRoots = blockSlotState.getBlock_roots();\n+    final SSZVector<Bytes32> stateRoots = blockSlotState.getState_roots();\n+    final UInt64 minimumSlot = newBlockSlot.minusMinZero(SLOTS_PER_HISTORICAL_ROOT);\n+    // Get the parent block root from the state as the genesis block root is recorded as 0\n+    final Bytes32 parentBlockRoot =\n+        blockRoots.get(newBlockSlot.minusMinZero(1).mod(SLOTS_PER_HISTORICAL_ROOT).intValue());\n+    UInt64 slot = newBlockSlot.minus(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba0144c826ec936675d788e67b7077e842b1ddfb"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzMTU0Mw==", "bodyText": "(optional) We could also prune these by slot (maybe less error-prone) in the finalizedChainData.ifPresent(...) block above.", "url": "https://github.com/ConsenSys/teku/pull/3386#discussion_r540331543", "createdAt": "2020-12-10T16:51:55Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/store/StoreTransactionUpdates.java", "diffHunk": "@@ -98,6 +98,8 @@ public void applyToStore(final Store store) {\n         (root) -> {\n           store.blocks.remove(root);\n           store.states.remove(root);\n+          store.checkpointStates.removeIf(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba0144c826ec936675d788e67b7077e842b1ddfb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzNTkxMQ==", "bodyText": "(optional) I think if we just make process_slots tolerant of states at the target slot, we could still run everything through initiate.", "url": "https://github.com/ConsenSys/teku/pull/3386#discussion_r540335911", "createdAt": "2020-12-10T16:57:30Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/StateTransition.java", "diffHunk": "@@ -77,52 +76,52 @@ public BeaconState initiate(\n         preState,\n         signed_block,\n         validateStateRootAndSignatures,\n-        interimState -> {},\n         IndexedAttestationProvider.DIRECT_PROVIDER);\n   }\n \n   public BeaconState initiate(\n       BeaconState preState,\n-      SignedBeaconBlock signed_block,\n+      SignedBeaconBlock signedBlock,\n       boolean validateStateRootAndSignatures,\n-      final Consumer<BeaconState> beaconStateConsumer,\n       final IndexedAttestationProvider indexedAttestationProvider)\n       throws StateTransitionException {\n     try {\n-      BlockValidator blockValidator =\n-          validateStateRootAndSignatures ? this.blockValidator : BlockValidator.NOOP;\n-      final BeaconBlock block = signed_block.getMessage();\n-\n       // * Process slots (including those with no blocks) since block\n       // * beaconStateConsumer only consumes the missing slots here,\n       //   the new block will be processed when adding to the store.\n-      BeaconState postSlotState =\n-          process_slots(\n-              preState,\n-              block.getSlot(),\n-              state -> {\n-                if (!state.getSlot().equals(block.getSlot())) {\n-                  beaconStateConsumer.accept(state);\n-                }\n-              });\n+      BeaconState postSlotState = process_slots(preState, signedBlock.getMessage().getSlot());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba0144c826ec936675d788e67b7077e842b1ddfb"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MDYwNw==", "bodyText": "Maybe worth a test that processes the genesis state", "url": "https://github.com/ConsenSys/teku/pull/3386#discussion_r540340607", "createdAt": "2020-12-10T17:03:32Z", "author": {"login": "mbaxter"}, "path": "ethereum/statetransition/src/test/java/tech/pegasys/teku/statetransition/forkchoice/StateRootCollectorTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.statetransition.forkchoice;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static tech.pegasys.teku.util.config.Constants.SLOTS_PER_HISTORICAL_ROOT;\n+\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.teku.core.StateTransition;\n+import tech.pegasys.teku.datastructures.blocks.BeaconBlockSummary;\n+import tech.pegasys.teku.datastructures.blocks.SignedBlockAndState;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+import tech.pegasys.teku.storage.storageSystem.InMemoryStorageSystemBuilder;\n+import tech.pegasys.teku.storage.storageSystem.StorageSystem;\n+import tech.pegasys.teku.storage.store.UpdatableStore.StoreTransaction;\n+\n+class StateRootCollectorTest {\n+  private final StorageSystem storageSystem = InMemoryStorageSystemBuilder.buildDefault();\n+  private final StoreTransaction transaction = mock(StoreTransaction.class);\n+  private SignedBlockAndState genesis;\n+\n+  @BeforeEach\n+  void setUp() {\n+    genesis = storageSystem.chainUpdater().initializeGenesis();\n+  }\n+\n+  @Test\n+  void shouldNotCaptureAnyStateRootsForBlockInSlot1() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba0144c826ec936675d788e67b7077e842b1ddfb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM0MjA0Mw==", "bodyText": "Probably worth some comments on what we're expecting for this state param", "url": "https://github.com/ConsenSys/teku/pull/3386#discussion_r540342043", "createdAt": "2020-12-10T17:05:31Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/ForkChoiceUtil.java", "diffHunk": "@@ -209,43 +209,31 @@ public static void on_tick(MutableStore store, UInt64 time) {\n     }\n   }\n \n-  /**\n-   * @param store\n-   * @param signed_block\n-   * @param maybePreState\n-   * @param st\n-   * @param forkChoiceStrategy\n-   * @param beaconStateConsumer\n-   * @see\n-   *     <a>https://github.com/ethereum/eth2.0-specs/blob/v0.8.1/specs/core/0_fork-choice.md#on_block</a>\n-   */\n   @CheckReturnValue\n   public static BlockImportResult on_block(\n       final MutableStore store,\n       final SignedBeaconBlock signed_block,\n-      Optional<BeaconState> maybePreState,\n+      BeaconState blockSlotState,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba0144c826ec936675d788e67b7077e842b1ddfb"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cdfd2a7a41f192e6571ff8c74905400dff1f587", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/8cdfd2a7a41f192e6571ff8c74905400dff1f587", "committedDate": "2020-12-10T20:55:57Z", "message": "Update tests, add checkArgument to ensure the state has empty slots processed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "389c11a1908fa36d2016713192455cf5bc003409", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/389c11a1908fa36d2016713192455cf5bc003409", "committedDate": "2020-12-10T21:04:04Z", "message": "Errorprone."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b8b5821a54a30108f65bb041bb52218ef30c59e", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/5b8b5821a54a30108f65bb041bb52218ef30c59e", "committedDate": "2020-12-10T21:13:24Z", "message": "Add docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "458fecff8a56990c52ba4ccb71bd38f1066b085d", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/458fecff8a56990c52ba4ccb71bd38f1066b085d", "committedDate": "2020-12-10T21:16:05Z", "message": "Errorprone."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5796499db42e20c154773bc4dfdc11ea33f82cc", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/f5796499db42e20c154773bc4dfdc11ea33f82cc", "committedDate": "2020-12-10T21:16:10Z", "message": "Merge branch 'master' of github.com:ConsenSys/teku into use-cached-pre-state-for-block-import"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4373, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}