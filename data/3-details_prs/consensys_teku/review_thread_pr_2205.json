{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4ODkxODkx", "number": 2205, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToyMjo1NVrOEIalYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToyOTo0M1rOEIaxWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjU5NjE2OnYy", "diffSide": "RIGHT", "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToyMjo1NVrOGoXPOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToxNTowMlrOGojYbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3Njk1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final List<UnsignedLong> unavailableRoots =\n          \n          \n            \n                    final List<UnsignedLong> unavailableSlots =", "url": "https://github.com/ConsenSys/teku/pull/2205#discussion_r444976954", "createdAt": "2020-06-24T15:22:55Z", "author": {"login": "mbaxter"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -657,13 +660,24 @@ protected void testShouldRecordFinalizedBlocksAndStates(\n         break;\n       case PRUNE:\n         // Check pruned states\n-        final List<Bytes32> unavailableRoots =\n-            allBlocksAndStates.stream().map(SignedBlockAndState::getRoot).collect(toList());\n+        final List<UnsignedLong> unavailableRoots =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808835a6428e4b93aca1523a18c8b89a96146a15"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3NTkxOQ==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/2205#discussion_r445175919", "createdAt": "2020-06-24T21:15:02Z", "author": {"login": "ajsutton"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -657,13 +660,24 @@ protected void testShouldRecordFinalizedBlocksAndStates(\n         break;\n       case PRUNE:\n         // Check pruned states\n-        final List<Bytes32> unavailableRoots =\n-            allBlocksAndStates.stream().map(SignedBlockAndState::getRoot).collect(toList());\n+        final List<UnsignedLong> unavailableRoots =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk3Njk1NA=="}, "originalCommit": {"oid": "808835a6428e4b93aca1523a18c8b89a96146a15"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjYyMzg0OnYy", "diffSide": "RIGHT", "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToyOTowNlrOGoXhLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToyOTowNlrOGoXhLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4MTU0OQ==", "bodyText": "This helper method is oddly specific - why not pass in expectedFinalizedBlocks?", "url": "https://github.com/ConsenSys/teku/pull/2205#discussion_r444981549", "createdAt": "2020-06-24T15:29:06Z", "author": {"login": "mbaxter"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -645,6 +647,7 @@ protected void testShouldRecordFinalizedBlocksAndStates(\n     assertBlocksFinalized(expectedFinalizedBlocks);\n     assertGetLatestFinalizedRootAtSlotReturnsFinalizedBlocks(expectedFinalizedBlocks);\n     assertBlocksAvailableByRoot(expectedFinalizedBlocks);\n+    assertFinalizedBlocksAvailableViaStream(primaryChain);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808835a6428e4b93aca1523a18c8b89a96146a15"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjYyNjgyOnYy", "diffSide": "RIGHT", "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNToyOTo0M1rOGoXjLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToxNDoyNFrOGojXXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4MjA2MQ==", "bodyText": "Shouldn't block 7 also be available?  It was finalized.", "url": "https://github.com/ConsenSys/teku/pull/2205#discussion_r444982061", "createdAt": "2020-06-24T15:29:43Z", "author": {"login": "mbaxter"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -657,13 +660,24 @@ protected void testShouldRecordFinalizedBlocksAndStates(\n         break;\n       case PRUNE:\n         // Check pruned states\n-        final List<Bytes32> unavailableRoots =\n-            allBlocksAndStates.stream().map(SignedBlockAndState::getRoot).collect(toList());\n+        final List<UnsignedLong> unavailableRoots =\n+            allBlocksAndStates.stream().map(SignedBlockAndState::getSlot).collect(toList());\n         assertStatesUnavailable(unavailableRoots);\n         break;\n     }\n   }\n \n+  private void assertFinalizedBlocksAvailableViaStream(final ChainBuilder primaryChain) {\n+    try (final Stream<SignedBeaconBlock> stream =\n+        database.streamFinalizedBlocks(UnsignedLong.valueOf(1), UnsignedLong.valueOf(3))) {\n+      assertThat(stream)\n+          .containsExactly(\n+              primaryChain.getBlockAtSlot(1),\n+              primaryChain.getBlockAtSlot(2),\n+              primaryChain.getBlockAtSlot(3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808835a6428e4b93aca1523a18c8b89a96146a15"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3NTY0NQ==", "bodyText": "We're specifically requesting blocks 1-3 to test the range is respected.  I've made it a more generic function which hopefully make that clearer as well.", "url": "https://github.com/ConsenSys/teku/pull/2205#discussion_r445175645", "createdAt": "2020-06-24T21:14:24Z", "author": {"login": "ajsutton"}, "path": "storage/src/test/java/tech/pegasys/teku/storage/server/AbstractDatabaseTest.java", "diffHunk": "@@ -657,13 +660,24 @@ protected void testShouldRecordFinalizedBlocksAndStates(\n         break;\n       case PRUNE:\n         // Check pruned states\n-        final List<Bytes32> unavailableRoots =\n-            allBlocksAndStates.stream().map(SignedBlockAndState::getRoot).collect(toList());\n+        final List<UnsignedLong> unavailableRoots =\n+            allBlocksAndStates.stream().map(SignedBlockAndState::getSlot).collect(toList());\n         assertStatesUnavailable(unavailableRoots);\n         break;\n     }\n   }\n \n+  private void assertFinalizedBlocksAvailableViaStream(final ChainBuilder primaryChain) {\n+    try (final Stream<SignedBeaconBlock> stream =\n+        database.streamFinalizedBlocks(UnsignedLong.valueOf(1), UnsignedLong.valueOf(3))) {\n+      assertThat(stream)\n+          .containsExactly(\n+              primaryChain.getBlockAtSlot(1),\n+              primaryChain.getBlockAtSlot(2),\n+              primaryChain.getBlockAtSlot(3));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk4MjA2MQ=="}, "originalCommit": {"oid": "808835a6428e4b93aca1523a18c8b89a96146a15"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3627, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}