{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExOTIwMzA1", "number": 1701, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDozNjo0NFrOD4YlpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDozOToxMlrOD4Yo5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDQ5NzAxOnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/test/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidatorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDozNjo0NFrOGPLbIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMToyOToxNlrOGPWOkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2ODk5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void remoteOnSameChainButReturnsResponseWhenGenesisRequested() {\n          \n          \n            \n              private void remoteOnSameChainButReturnsInvalidResponseWhenGenesisRequested() {", "url": "https://github.com/ConsenSys/teku/pull/1701#discussion_r418568992", "createdAt": "2020-05-01T14:36:44Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/test/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidatorTest.java", "diffHunk": "@@ -317,15 +317,18 @@ private void remoteChainIsAheadOnSameChain() {\n     when(peer.requestBlockBySlot(earlierBlockSlot)).thenReturn(blockFuture);\n   }\n \n-  private void remoteOnSameChainButWillNotReturnGenesis() {\n-    final SafeFuture<SignedBeaconBlock> postGenesisBlock = SafeFuture.completedFuture(earlierBlock);\n+  private void remoteOnSameChainButReturnsResponseWhenGenesisRequested() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852514a31fdccfd10826f68380f5c9453650f18c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0NjAwMA==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/1701#discussion_r418746000", "createdAt": "2020-05-01T21:29:16Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/test/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidatorTest.java", "diffHunk": "@@ -317,15 +317,18 @@ private void remoteChainIsAheadOnSameChain() {\n     when(peer.requestBlockBySlot(earlierBlockSlot)).thenReturn(blockFuture);\n   }\n \n-  private void remoteOnSameChainButWillNotReturnGenesis() {\n-    final SafeFuture<SignedBeaconBlock> postGenesisBlock = SafeFuture.completedFuture(earlierBlock);\n+  private void remoteOnSameChainButReturnsResponseWhenGenesisRequested() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2ODk5Mg=="}, "originalCommit": {"oid": "852514a31fdccfd10826f68380f5c9453650f18c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNDUwNTMzOnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNDozOToxMlrOGPLgPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMToyODo0NVrOGPWNyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU3MDMwMg==", "bodyText": "I think we can return early before we pull this block by checking if the finalizedEpochSlot is the genesis slot", "url": "https://github.com/ConsenSys/teku/pull/1701#discussion_r418570302", "createdAt": "2020-05-01T14:39:12Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -193,11 +193,14 @@ private boolean remoteEpochIsInvalid(\n         .thenApply(maybeBlock -> blockToSlot(finalizedEpochSlot, maybeBlock))\n         .thenCompose(\n             blockSlot -> {\n+              if (blockSlot.equals(UnsignedLong.valueOf(Constants.GENESIS_SLOT))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852514a31fdccfd10826f68380f5c9453650f18c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0NTgwMg==", "bodyText": "We can but we need the existing check as well.  We might have finalised epoch 1 without any blocks ever being produced, so the block in effect would still be the genesis block.", "url": "https://github.com/ConsenSys/teku/pull/1701#discussion_r418745802", "createdAt": "2020-05-01T21:28:45Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -193,11 +193,14 @@ private boolean remoteEpochIsInvalid(\n         .thenApply(maybeBlock -> blockToSlot(finalizedEpochSlot, maybeBlock))\n         .thenCompose(\n             blockSlot -> {\n+              if (blockSlot.equals(UnsignedLong.valueOf(Constants.GENESIS_SLOT))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU3MDMwMg=="}, "originalCommit": {"oid": "852514a31fdccfd10826f68380f5c9453650f18c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3745, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}