{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MzQzOTg5", "number": 1185, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMzoyMzo1N1rODghhmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMzoyMzo1N1rODghhmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDMwMjk5OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/networkhandlers/PeerIdHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMzoyMzo1N1rOFqxiwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMzoyMzo1N1rOFqxiwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM5NjIyNA==", "bodyText": "nit: PeerId vs PeerID below", "url": "https://github.com/ConsenSys/teku/pull/1185#discussion_r380396224", "createdAt": "2020-02-17T23:23:57Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/networkhandlers/PeerIdHandler.java", "diffHunk": "@@ -13,24 +13,36 @@\n \n package tech.pegasys.artemis.beaconrestapi.networkhandlers;\n \n-import tech.pegasys.artemis.beaconrestapi.handlerinterfaces.BeaconRestApiHandler;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import org.jetbrains.annotations.NotNull;\n import tech.pegasys.artemis.networking.p2p.network.P2PNetwork;\n \n-public class PeerIdHandler implements BeaconRestApiHandler {\n+public class PeerIdHandler implements Handler {\n+\n+  public static final String ROUTE = \"/network/peer_id\";\n \n   private final P2PNetwork<?> network;\n \n   public PeerIdHandler(P2PNetwork<?> network) {\n     this.network = network;\n   }\n \n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.GET,\n+      summary = \"Get this beacon node's PeerId.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48be893182dc2416b9c84b0b8056f9c1b5240245"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2625, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}