{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNzE5MDk3", "number": 3118, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMDoxODoyN1rOE0Mybw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMDoxODoyN1rOE0Mybw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTcwOTI3OnYy", "diffSide": "LEFT", "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMDoxODoyN1rOHrzaTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwMDoyNzo0OFrOHrzerg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5MzEzNQ==", "bodyText": "Assuming we don't need this because testing for pre-genesis is now just covered by the state selector which would return empty.", "url": "https://github.com/ConsenSys/teku/pull/3118#discussion_r515693135", "createdAt": "2020-11-02T00:18:27Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "diffHunk": "@@ -28,42 +26,31 @@\n import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n-import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class GetStateFinalityCheckpointsTest extends AbstractBeaconHandlerTest {\n   final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n   final BeaconState state = dataStructureUtil.randomBeaconState();\n \n-  @Test\n-  public void shouldReturnUnavailableWhenStoreNotAvailable() throws Exception {\n-    final GetStateFinalityCheckpoints handler =\n-        new GetStateFinalityCheckpoints(chainDataProvider, jsonProvider);\n-    when(context.pathParamMap()).thenReturn(Map.of(\"state_id\", \"head\"));\n-    when(chainDataProvider.isStoreAvailable()).thenReturn(false);\n-\n-    handler.handle(context);\n-    verifyStatusCode(SC_NOT_FOUND);\n-  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "401c184d6e8fe7fe3a538bdd2b59929c310415b1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5NDI1NA==", "bodyText": "That's my belief \ud83d\udc4d", "url": "https://github.com/ConsenSys/teku/pull/3118#discussion_r515694254", "createdAt": "2020-11-02T00:27:48Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/GetStateFinalityCheckpointsTest.java", "diffHunk": "@@ -28,42 +26,31 @@\n import tech.pegasys.teku.datastructures.state.BeaconState;\n import tech.pegasys.teku.datastructures.util.DataStructureUtil;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n-import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class GetStateFinalityCheckpointsTest extends AbstractBeaconHandlerTest {\n   final DataStructureUtil dataStructureUtil = new DataStructureUtil();\n   final BeaconState state = dataStructureUtil.randomBeaconState();\n \n-  @Test\n-  public void shouldReturnUnavailableWhenStoreNotAvailable() throws Exception {\n-    final GetStateFinalityCheckpoints handler =\n-        new GetStateFinalityCheckpoints(chainDataProvider, jsonProvider);\n-    when(context.pathParamMap()).thenReturn(Map.of(\"state_id\", \"head\"));\n-    when(chainDataProvider.isStoreAvailable()).thenReturn(false);\n-\n-    handler.handle(context);\n-    verifyStatusCode(SC_NOT_FOUND);\n-  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5MzEzNQ=="}, "originalCommit": {"oid": "401c184d6e8fe7fe3a538bdd2b59929c310415b1"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3123, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}