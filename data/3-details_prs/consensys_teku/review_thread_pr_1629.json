{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NDEyNTg4", "number": 1629, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNTo0NDoyN1rOD0T8Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjoxMDoyMFrOD0UMAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTc5MjAyOnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/ValidatorApiDutyLoader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNTo0NDoyN1rOGJMW2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNTo0NDoyN1rOGJMW2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5MjgyNQ==", "bodyText": "Every time I review a VC PR the name of this file changes I think :D", "url": "https://github.com/ConsenSys/teku/pull/1629#discussion_r412292825", "createdAt": "2020-04-21T15:44:27Z", "author": {"login": "cemozerr"}, "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/ValidatorApiDutyLoader.java", "diffHunk": "@@ -13,47 +13,41 @@\n \n package tech.pegasys.artemis.validator.client;\n \n-import com.google.common.base.Throwables;\n import com.google.common.primitives.UnsignedLong;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n-import java.util.concurrent.TimeUnit;\n import java.util.function.Supplier;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import tech.pegasys.artemis.bls.BLSPublicKey;\n import tech.pegasys.artemis.datastructures.operations.Attestation;\n import tech.pegasys.artemis.datastructures.util.CommitteeUtil;\n-import tech.pegasys.artemis.util.async.AsyncRunner;\n import tech.pegasys.artemis.util.async.SafeFuture;\n-import tech.pegasys.artemis.validator.api.NodeSyncingException;\n import tech.pegasys.artemis.validator.api.ValidatorApiChannel;\n import tech.pegasys.artemis.validator.api.ValidatorDuties;\n import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n \n-class EpochDutiesScheduler {\n+class ValidatorApiDutyLoader implements DutyLoader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d4bbd1925b2e1672c3deae93680d65d4a74be02"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTgxOTI2OnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/RetryingDutyLoader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjowMjowOVrOGJMoew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDozNzo1MFrOGJXcdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5NzMzOQ==", "bodyText": "Any reason you can't do:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                requestDuties(epoch, duties).propagateTo(duties);\n          \n          \n            \n                return requestDuties(epoch, duties);", "url": "https://github.com/ConsenSys/teku/pull/1629#discussion_r412297339", "createdAt": "2020-04-21T16:02:09Z", "author": {"login": "cemozerr"}, "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/RetryingDutyLoader.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.validator.client;\n+\n+import com.google.common.base.Throwables;\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import tech.pegasys.artemis.util.async.AsyncRunner;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+import tech.pegasys.artemis.validator.api.NodeSyncingException;\n+import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n+\n+public class RetryingDutyLoader implements DutyLoader {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private final DutyLoader delegate;\n+  private final AsyncRunner asyncRunner;\n+\n+  public RetryingDutyLoader(final AsyncRunner asyncRunner, final DutyLoader delegate) {\n+    this.delegate = delegate;\n+    this.asyncRunner = asyncRunner;\n+  }\n+\n+  @Override\n+  public SafeFuture<ScheduledDuties> loadDutiesForEpoch(final UnsignedLong epoch) {\n+    final SafeFuture<ScheduledDuties> duties = new SafeFuture<>();\n+    requestDuties(epoch, duties).propagateTo(duties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d4bbd1925b2e1672c3deae93680d65d4a74be02"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3NDQ4NQ==", "bodyText": "Because we want to be able to see when the returned future is cancelled and stop retrying. If we return the one requestDuties provides requestDuties wouldn't have access to it itself to see if it's been cancelled.", "url": "https://github.com/ConsenSys/teku/pull/1629#discussion_r412474485", "createdAt": "2020-04-21T20:37:50Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/RetryingDutyLoader.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.validator.client;\n+\n+import com.google.common.base.Throwables;\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import tech.pegasys.artemis.util.async.AsyncRunner;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+import tech.pegasys.artemis.validator.api.NodeSyncingException;\n+import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n+\n+public class RetryingDutyLoader implements DutyLoader {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private final DutyLoader delegate;\n+  private final AsyncRunner asyncRunner;\n+\n+  public RetryingDutyLoader(final AsyncRunner asyncRunner, final DutyLoader delegate) {\n+    this.delegate = delegate;\n+    this.asyncRunner = asyncRunner;\n+  }\n+\n+  @Override\n+  public SafeFuture<ScheduledDuties> loadDutiesForEpoch(final UnsignedLong epoch) {\n+    final SafeFuture<ScheduledDuties> duties = new SafeFuture<>();\n+    requestDuties(epoch, duties).propagateTo(duties);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5NzMzOQ=="}, "originalCommit": {"oid": "5d4bbd1925b2e1672c3deae93680d65d4a74be02"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTgyODc0OnYy", "diffSide": "RIGHT", "path": "validator/client/src/test/java/tech/pegasys/artemis/validator/client/RetryingDutySchedulerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjowNzozOFrOGJMuOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDo0NzoxM1rOGJXy0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5ODgxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class RetryingDutySchedulerTest {\n          \n          \n            \n            class RetryingDutyLoaderTest {", "url": "https://github.com/ConsenSys/teku/pull/1629#discussion_r412298810", "createdAt": "2020-04-21T16:07:38Z", "author": {"login": "cemozerr"}, "path": "validator/client/src/test/java/tech/pegasys/artemis/validator/client/RetryingDutySchedulerTest.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.validator.client;\n+\n+import static com.google.common.primitives.UnsignedLong.ONE;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+import tech.pegasys.artemis.util.async.StubAsyncRunner;\n+import tech.pegasys.artemis.validator.api.NodeSyncingException;\n+import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n+\n+class RetryingDutySchedulerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d4bbd1925b2e1672c3deae93680d65d4a74be02"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ4MDIxMQ==", "bodyText": "Done.", "url": "https://github.com/ConsenSys/teku/pull/1629#discussion_r412480211", "createdAt": "2020-04-21T20:47:13Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/test/java/tech/pegasys/artemis/validator/client/RetryingDutySchedulerTest.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.validator.client;\n+\n+import static com.google.common.primitives.UnsignedLong.ONE;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+import tech.pegasys.artemis.util.async.StubAsyncRunner;\n+import tech.pegasys.artemis.validator.api.NodeSyncingException;\n+import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n+\n+class RetryingDutySchedulerTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5ODgxMA=="}, "originalCommit": {"oid": "5d4bbd1925b2e1672c3deae93680d65d4a74be02"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTgzMjk4OnYy", "diffSide": "RIGHT", "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/RetryingDutyLoader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjoxMDoyMFrOGJMw7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjoxMDoyMFrOGJMw7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI5OTUwMA==", "bodyText": "Any reason you can't do:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                requestDuties(epoch, duties).propagateTo(duties);\n          \n          \n            \n                return requestDuties(epoch, duties);", "url": "https://github.com/ConsenSys/teku/pull/1629#discussion_r412299500", "createdAt": "2020-04-21T16:10:20Z", "author": {"login": "cemozerr"}, "path": "validator/client/src/main/java/tech/pegasys/artemis/validator/client/RetryingDutyLoader.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.validator.client;\n+\n+import com.google.common.base.Throwables;\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import tech.pegasys.artemis.util.async.AsyncRunner;\n+import tech.pegasys.artemis.util.async.SafeFuture;\n+import tech.pegasys.artemis.validator.api.NodeSyncingException;\n+import tech.pegasys.artemis.validator.client.duties.ScheduledDuties;\n+\n+public class RetryingDutyLoader implements DutyLoader {\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  private final DutyLoader delegate;\n+  private final AsyncRunner asyncRunner;\n+\n+  public RetryingDutyLoader(final AsyncRunner asyncRunner, final DutyLoader delegate) {\n+    this.delegate = delegate;\n+    this.asyncRunner = asyncRunner;\n+  }\n+\n+  @Override\n+  public SafeFuture<ScheduledDuties> loadDutiesForEpoch(final UnsignedLong epoch) {\n+    final SafeFuture<ScheduledDuties> duties = new SafeFuture<>();\n+    requestDuties(epoch, duties).propagateTo(duties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d4bbd1925b2e1672c3deae93680d65d4a74be02"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1687, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}