{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDE3Mjc3", "number": 1646, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMzoxOTo1MFrOD0iblQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDoxOTozMlrOD1TDYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDE2NjYxOnYy", "diffSide": "RIGHT", "path": "artemis/src/main/java/tech/pegasys/artemis/cli/options/LoggingOptions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMzoxOTo1MFrOGJhfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjozMjo0N1rOGJlnAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzOTA0OQ==", "bodyText": "Wouldn't it make more sense to just use:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private LoggingDestination logDestination = LoggingDestination.get(DEFAULT_LOG_DESTINATION);\n          \n          \n            \n              private LoggingDestination logDestination = LoggingDestination.DEFAULT_BOTH;", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412639049", "createdAt": "2020-04-22T03:19:50Z", "author": {"login": "ajsutton"}, "path": "artemis/src/main/java/tech/pegasys/artemis/cli/options/LoggingOptions.java", "diffHunk": "@@ -54,9 +55,10 @@\n   @CommandLine.Option(\n       names = {LOG_DESTINATION_OPTION_NAME},\n       paramLabel = \"<LOG_DESTINATION>\",\n-      description = \"Whether a logger is added for the console, the log file, or both\",\n+      description =\n+          \"Whether a logger is added for the console, the log file, or both (Valid values: ${COMPLETION-CANDIDATES})\",\n       arity = \"1\")\n-  private String logDestination = DEFAULT_LOG_DESTINATION;\n+  private LoggingDestination logDestination = LoggingDestination.get(DEFAULT_LOG_DESTINATION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5Njg3NA==", "bodyText": "just means its not set off the default - i can if you prefer...", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412696874", "createdAt": "2020-04-22T06:11:16Z", "author": {"login": "rolfyone"}, "path": "artemis/src/main/java/tech/pegasys/artemis/cli/options/LoggingOptions.java", "diffHunk": "@@ -54,9 +55,10 @@\n   @CommandLine.Option(\n       names = {LOG_DESTINATION_OPTION_NAME},\n       paramLabel = \"<LOG_DESTINATION>\",\n-      description = \"Whether a logger is added for the console, the log file, or both\",\n+      description =\n+          \"Whether a logger is added for the console, the log file, or both (Valid values: ${COMPLETION-CANDIDATES})\",\n       arity = \"1\")\n-  private String logDestination = DEFAULT_LOG_DESTINATION;\n+  private LoggingDestination logDestination = LoggingDestination.get(DEFAULT_LOG_DESTINATION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzOTA0OQ=="}, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwNjU2Mg==", "bodyText": "The DEFAULT_LOG_DESTINATION constant could also be of type LoggingDestination.  Although I really don't know why we've extracted all this stuff as constants and will likely do a pass through to inline them all when I get a chance.  It's so much easier to read in besu where the strings are used directly in the @Option annotations.", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412706562", "createdAt": "2020-04-22T06:32:47Z", "author": {"login": "ajsutton"}, "path": "artemis/src/main/java/tech/pegasys/artemis/cli/options/LoggingOptions.java", "diffHunk": "@@ -54,9 +55,10 @@\n   @CommandLine.Option(\n       names = {LOG_DESTINATION_OPTION_NAME},\n       paramLabel = \"<LOG_DESTINATION>\",\n-      description = \"Whether a logger is added for the console, the log file, or both\",\n+      description =\n+          \"Whether a logger is added for the console, the log file, or both (Valid values: ${COMPLETION-CANDIDATES})\",\n       arity = \"1\")\n-  private String logDestination = DEFAULT_LOG_DESTINATION;\n+  private LoggingDestination logDestination = LoggingDestination.get(DEFAULT_LOG_DESTINATION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzOTA0OQ=="}, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDE2NzgwOnYy", "diffSide": "RIGHT", "path": "artemis/src/test/resources/complete_config.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMzoyMDoyNVrOGJhf9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQyMTo0MDo0NVrOGKNCVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzOTIyMQ==", "bodyText": "This probably should specify something that's not the default so we can tell it actually got picked up.", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412639221", "createdAt": "2020-04-22T03:20:25Z", "author": {"login": "ajsutton"}, "path": "artemis/src/test/resources/complete_config.yaml", "diffHunk": "@@ -32,7 +32,7 @@ eth1-endpoint: \"http://localhost:8545\"\n # logging\n log-color-enabled: True\n log-include-events-enabled: True\n-log-destination: \"both\"\n+log-destination: \"DEFAULT_BOTH\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY5NzIwNw==", "bodyText": "its tested in other tests, but we can...", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412697207", "createdAt": "2020-04-22T06:11:56Z", "author": {"login": "rolfyone"}, "path": "artemis/src/test/resources/complete_config.yaml", "diffHunk": "@@ -32,7 +32,7 @@ eth1-endpoint: \"http://localhost:8545\"\n # logging\n log-color-enabled: True\n log-include-events-enabled: True\n-log-destination: \"both\"\n+log-destination: \"DEFAULT_BOTH\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzOTIyMQ=="}, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwMDEzNw==", "bodyText": "this test is actually super fragile, i'm going to avoid changing that complete_config file...", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412700137", "createdAt": "2020-04-22T06:18:47Z", "author": {"login": "rolfyone"}, "path": "artemis/src/test/resources/complete_config.yaml", "diffHunk": "@@ -32,7 +32,7 @@ eth1-endpoint: \"http://localhost:8545\"\n # logging\n log-color-enabled: True\n log-include-events-enabled: True\n-log-destination: \"both\"\n+log-destination: \"DEFAULT_BOTH\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzOTIyMQ=="}, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1MjUzMw==", "bodyText": "refactored tests a little bit so that we can see all logging options are picked up from configuration file. I think I've addressed the core of this concern.", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r413352533", "createdAt": "2020-04-22T21:40:45Z", "author": {"login": "rolfyone"}, "path": "artemis/src/test/resources/complete_config.yaml", "diffHunk": "@@ -32,7 +32,7 @@ eth1-endpoint: \"http://localhost:8545\"\n # logging\n log-color-enabled: True\n log-include-events-enabled: True\n-log-destination: \"both\"\n+log-destination: \"DEFAULT_BOTH\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYzOTIyMQ=="}, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDE3NDIzOnYy", "diffSide": "RIGHT", "path": "artemis/src/main/java/tech/pegasys/artemis/cli/options/LoggingOptions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMzoyMzoyMVrOGJhjcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjozMTo0MVrOGJllPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY0MDExMw==", "bodyText": "The code that uses this value expects the key not the enum name().  Currently key is internal only so a getter would be needed. I think it happens to work out at the moment but we should actually refer to the same value.  I suspect the key value is no longer relevant and we should just use .valueOf to look up the matching value.  Or just pass LoggingDestination enum through instead of going to String and back if the class path will let us do that.", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412640113", "createdAt": "2020-04-22T03:23:21Z", "author": {"login": "ajsutton"}, "path": "artemis/src/main/java/tech/pegasys/artemis/cli/options/LoggingOptions.java", "diffHunk": "@@ -81,7 +83,7 @@ public boolean isLogIncludeEventsEnabled() {\n   }\n \n   public String getLogDestination() {\n-    return logDestination;\n+    return logDestination.name();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwMzAzMw==", "bodyText": "the project dependencies are pretty ugly. i'll have another go.", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412703033", "createdAt": "2020-04-22T06:25:08Z", "author": {"login": "rolfyone"}, "path": "artemis/src/main/java/tech/pegasys/artemis/cli/options/LoggingOptions.java", "diffHunk": "@@ -81,7 +83,7 @@ public boolean isLogIncludeEventsEnabled() {\n   }\n \n   public String getLogDestination() {\n-    return logDestination;\n+    return logDestination.name();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY0MDExMw=="}, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwNjEwOA==", "bodyText": "I wouldn't try adjusting dependencies to make it happen.  Just make sure we consistently use either name or key to go to string and back.", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r412706108", "createdAt": "2020-04-22T06:31:41Z", "author": {"login": "ajsutton"}, "path": "artemis/src/main/java/tech/pegasys/artemis/cli/options/LoggingOptions.java", "diffHunk": "@@ -81,7 +83,7 @@ public boolean isLogIncludeEventsEnabled() {\n   }\n \n   public String getLogDestination() {\n-    return logDestination;\n+    return logDestination.name();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY0MDExMw=="}, "originalCommit": {"oid": "cfdb93ff37398da408aa8a41a0603c6fc9b03a71"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTI5NDk4OnYy", "diffSide": "RIGHT", "path": "artemis/src/test/resources/complete_config.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDowNzo1MVrOGKQ6LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDoyMDo1OVrOGKRMBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxNTk4MA==", "bodyText": "nit: Can probably undo this change - it should be case insensitive but lowercase will definitely be more common (and more likely to break since the enum name is uppercase)", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r413415980", "createdAt": "2020-04-23T00:07:51Z", "author": {"login": "ajsutton"}, "path": "artemis/src/test/resources/complete_config.yaml", "diffHunk": "@@ -32,7 +32,7 @@ eth1-endpoint: \"http://localhost:8545\"\n # logging\n log-color-enabled: True\n log-include-events-enabled: True\n-log-destination: \"both\"\n+log-destination: \"BOTH\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0857c7e716ad95357d016a828067066a1b9f7184"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQyMDU0OA==", "bodyText": "except the tests don't like it...", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r413420548", "createdAt": "2020-04-23T00:20:59Z", "author": {"login": "rolfyone"}, "path": "artemis/src/test/resources/complete_config.yaml", "diffHunk": "@@ -32,7 +32,7 @@ eth1-endpoint: \"http://localhost:8545\"\n # logging\n log-color-enabled: True\n log-include-events-enabled: True\n-log-destination: \"both\"\n+log-destination: \"BOTH\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxNTk4MA=="}, "originalCommit": {"oid": "0857c7e716ad95357d016a828067066a1b9f7184"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjA2Njk2OnYy", "diffSide": "RIGHT", "path": "artemis/src/test/java/tech/pegasys/artemis/cli/AbstractBeaconNodeCommandTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDowODoxN1rOGKp9wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDozMDo0N1rOGK61Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNjQ5OA==", "bodyText": "Should this actually be abstract? :D\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class AbstractBeaconNodeCommandTest {\n          \n          \n            \n            public abstract class AbstractBeaconNodeCommandTest {", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r413826498", "createdAt": "2020-04-23T14:08:17Z", "author": {"login": "mbaxter"}, "path": "artemis/src/test/java/tech/pegasys/artemis/cli/AbstractBeaconNodeCommandTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.cli;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static tech.pegasys.artemis.cli.BeaconNodeCommand.CONFIG_FILE_OPTION_NAME;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.function.Consumer;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.mockito.ArgumentCaptor;\n+import tech.pegasys.artemis.util.config.ArtemisConfiguration;\n+\n+public class AbstractBeaconNodeCommandTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e38b819d0d15f3d0a10d0947b7c47d20b6b4e1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwMjg3OA==", "bodyText": "yes :) it should!", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r414102878", "createdAt": "2020-04-23T20:30:47Z", "author": {"login": "rolfyone"}, "path": "artemis/src/test/java/tech/pegasys/artemis/cli/AbstractBeaconNodeCommandTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.cli;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static tech.pegasys.artemis.cli.BeaconNodeCommand.CONFIG_FILE_OPTION_NAME;\n+\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+import java.util.function.Consumer;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.mockito.ArgumentCaptor;\n+import tech.pegasys.artemis.util.config.ArtemisConfiguration;\n+\n+public class AbstractBeaconNodeCommandTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNjQ5OA=="}, "originalCommit": {"oid": "34e38b819d0d15f3d0a10d0947b7c47d20b6b4e1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjA3MTc5OnYy", "diffSide": "RIGHT", "path": "artemis/src/test/java/tech/pegasys/artemis/cli/options/LoggingOptionsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDowOTowM1rOGKqAeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDowOTowM1rOGKqAeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNzE5Mg==", "bodyText": "Nice call splitting this out \ud83c\udf89", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r413827192", "createdAt": "2020-04-23T14:09:03Z", "author": {"login": "mbaxter"}, "path": "artemis/src/test/java/tech/pegasys/artemis/cli/options/LoggingOptionsTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.cli.options;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static tech.pegasys.artemis.cli.options.LoggingOptions.LOG_DESTINATION_OPTION_NAME;\n+import static tech.pegasys.artemis.util.config.LoggingDestination.DEFAULT_BOTH;\n+\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.cli.AbstractBeaconNodeCommandTest;\n+import tech.pegasys.artemis.util.config.ArtemisConfiguration;\n+import tech.pegasys.artemis.util.config.LoggingDestination;\n+\n+public class LoggingOptionsTest extends AbstractBeaconNodeCommandTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e38b819d0d15f3d0a10d0947b7c47d20b6b4e1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjA3Njk3OnYy", "diffSide": "RIGHT", "path": "artemis/src/test/java/tech/pegasys/artemis/cli/options/LoggingOptionsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDowOTo1NlrOGKqDdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDozMjowOFrOGK64wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNzk1OA==", "bodyText": "(nit) I think we usually capitalize like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void logDestination_ShouldAcceptFileAsDestination() {\n          \n          \n            \n              public void logDestination_shouldAcceptFileAsDestination() {", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r413827958", "createdAt": "2020-04-23T14:09:56Z", "author": {"login": "mbaxter"}, "path": "artemis/src/test/java/tech/pegasys/artemis/cli/options/LoggingOptionsTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.cli.options;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static tech.pegasys.artemis.cli.options.LoggingOptions.LOG_DESTINATION_OPTION_NAME;\n+import static tech.pegasys.artemis.util.config.LoggingDestination.DEFAULT_BOTH;\n+\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.cli.AbstractBeaconNodeCommandTest;\n+import tech.pegasys.artemis.util.config.ArtemisConfiguration;\n+import tech.pegasys.artemis.util.config.LoggingDestination;\n+\n+public class LoggingOptionsTest extends AbstractBeaconNodeCommandTest {\n+\n+  @Test\n+  public void loggingOptions_shouldReadFromConfigurationFile() {\n+    final ArtemisConfiguration config =\n+        getArtemisConfigurationFromFile(\"loggingOptions_config.yaml\");\n+\n+    assertThat(config.getLogDestination()).isEqualTo(LoggingDestination.FILE);\n+    assertThat(config.isLogColorEnabled()).isFalse();\n+    assertThat(config.isLogIncludeEventsEnabled()).isFalse();\n+    assertThat(config.getLogFile()).isEqualTo(\"a.log\");\n+    assertThat(config.getLogFileNamePattern()).isEqualTo(\"a%d.log\");\n+  }\n+\n+  @Test\n+  public void logDestination_shouldHaveSensibleDefaultValue() {\n+    // This is important!\n+    // If it defaults to \"both\" or some other value custom log4j configs get overwritten\n+    beaconNodeCommand.parse(new String[0]);\n+\n+    final ArtemisConfiguration artemisConfiguration = getResultingArtemisConfiguration();\n+    assertThat(artemisConfiguration.getLogDestination()).isEqualTo(DEFAULT_BOTH);\n+  }\n+\n+  @Test\n+  public void logDestination_ShouldAcceptFileAsDestination() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e38b819d0d15f3d0a10d0947b7c47d20b6b4e1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwMzc0NQ==", "bodyText": "gah, i knew that and i still stuffed it up", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r414103745", "createdAt": "2020-04-23T20:32:08Z", "author": {"login": "rolfyone"}, "path": "artemis/src/test/java/tech/pegasys/artemis/cli/options/LoggingOptionsTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.cli.options;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static tech.pegasys.artemis.cli.options.LoggingOptions.LOG_DESTINATION_OPTION_NAME;\n+import static tech.pegasys.artemis.util.config.LoggingDestination.DEFAULT_BOTH;\n+\n+import org.junit.jupiter.api.Test;\n+import tech.pegasys.artemis.cli.AbstractBeaconNodeCommandTest;\n+import tech.pegasys.artemis.util.config.ArtemisConfiguration;\n+import tech.pegasys.artemis.util.config.LoggingDestination;\n+\n+public class LoggingOptionsTest extends AbstractBeaconNodeCommandTest {\n+\n+  @Test\n+  public void loggingOptions_shouldReadFromConfigurationFile() {\n+    final ArtemisConfiguration config =\n+        getArtemisConfigurationFromFile(\"loggingOptions_config.yaml\");\n+\n+    assertThat(config.getLogDestination()).isEqualTo(LoggingDestination.FILE);\n+    assertThat(config.isLogColorEnabled()).isFalse();\n+    assertThat(config.isLogIncludeEventsEnabled()).isFalse();\n+    assertThat(config.getLogFile()).isEqualTo(\"a.log\");\n+    assertThat(config.getLogFileNamePattern()).isEqualTo(\"a%d.log\");\n+  }\n+\n+  @Test\n+  public void logDestination_shouldHaveSensibleDefaultValue() {\n+    // This is important!\n+    // If it defaults to \"both\" or some other value custom log4j configs get overwritten\n+    beaconNodeCommand.parse(new String[0]);\n+\n+    final ArtemisConfiguration artemisConfiguration = getResultingArtemisConfiguration();\n+    assertThat(artemisConfiguration.getLogDestination()).isEqualTo(DEFAULT_BOTH);\n+  }\n+\n+  @Test\n+  public void logDestination_ShouldAcceptFileAsDestination() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNzk1OA=="}, "originalCommit": {"oid": "34e38b819d0d15f3d0a10d0947b7c47d20b6b4e1"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjEzMjgyOnYy", "diffSide": "RIGHT", "path": "util/src/main/java/tech/pegasys/artemis/util/config/LoggingDestination.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDoxOTozMlrOGKqkhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDozMjoyNFrOGK65bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzNjQyMQ==", "bodyText": "Ultimately,util is the wrong place for logging-specific constants.  But fixing this issue will require a larger refactor.  Will discuss offline when / how to prioritize refactoring.", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r413836421", "createdAt": "2020-04-23T14:19:32Z", "author": {"login": "mbaxter"}, "path": "util/src/main/java/tech/pegasys/artemis/util/config/LoggingDestination.java", "diffHunk": "@@ -11,7 +11,7 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.teku.logging;\n+package tech.pegasys.artemis.util.config;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34e38b819d0d15f3d0a10d0947b7c47d20b6b4e1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDEwMzkxNg==", "bodyText": "sounds good!", "url": "https://github.com/ConsenSys/teku/pull/1646#discussion_r414103916", "createdAt": "2020-04-23T20:32:24Z", "author": {"login": "rolfyone"}, "path": "util/src/main/java/tech/pegasys/artemis/util/config/LoggingDestination.java", "diffHunk": "@@ -11,7 +11,7 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package tech.pegasys.teku.logging;\n+package tech.pegasys.artemis.util.config;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzNjQyMQ=="}, "originalCommit": {"oid": "34e38b819d0d15f3d0a10d0947b7c47d20b6b4e1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1706, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}