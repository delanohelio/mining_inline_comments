{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDQ1MDY4", "number": 3025, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1MzoyMFrOEv0nrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1MzoyMFrOEv0nrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTgwNjUzOnYy", "diffSide": "RIGHT", "path": "sync/src/main/java/tech/pegasys/teku/sync/multipeer/BatchDataRequester.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1MzoyMFrOHlBMCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNDo1MzoyMFrOHlBMCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODU3ODgyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      // request data from. Remove all batch from that one to where the new chain starts and\n          \n          \n            \n                      // request data from. Remove all batches from that one to where the new chain starts and", "url": "https://github.com/ConsenSys/teku/pull/3025#discussion_r508578826", "createdAt": "2020-10-20T14:53:20Z", "author": {"login": "mbaxter"}, "path": "sync/src/main/java/tech/pegasys/teku/sync/multipeer/BatchDataRequester.java", "diffHunk": "@@ -78,6 +84,42 @@ public void fillRetrievingQueue(\n     }\n   }\n \n+  /**\n+   * All the sync sources on a given target chain may have moved to a new chain or disconnected. To\n+   * avoid getting stuck attempting and failing to request data when there are no sync sources, find\n+   * the first batch from an old chain with no sources, and replace all batches after it that are\n+   * from old chains with batches from our new chain.\n+   */\n+  private void replaceBatchesFromOldChainsWithNoSources(final TargetChain targetChain) {\n+    final Optional<Batch> firstStrandedBatch =\n+        activeBatches.stream()\n+            .filter(batch -> incompleteBatchFromOldChainWithNoPeers(targetChain, batch))\n+            .findFirst();\n+    firstStrandedBatch.ifPresent(\n+        strandedBatch -> {\n+          // We have at least one batch from an old chain which no longer has any target peers to\n+          // request data from. Remove all batch from that one to where the new chain starts and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f17f94359b53d4f8d56235d5597ae25408a0f4"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3223, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}