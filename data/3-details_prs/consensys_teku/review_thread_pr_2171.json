{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MjU1MDgy", "number": 2171, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyMToyNVrOEG6sCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyMTo0OFrOEG6sfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njg4NDU3OnYy", "diffSide": "RIGHT", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/SlotProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyMToyNVrOGmAo3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyMToyNVrOGmAo3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwOTUzNQ==", "bodyText": "nit: lower case as it's not a constant\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private final EventLogger EVENT_LOG;\n          \n          \n            \n              private final EventLogger eventLog;", "url": "https://github.com/ConsenSys/teku/pull/2171#discussion_r442509535", "createdAt": "2020-06-18T21:21:25Z", "author": {"login": "ajsutton"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/SlotProcessor.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.services.beaconchain;\n+\n+import static com.google.common.primitives.UnsignedLong.ONE;\n+import static com.google.common.primitives.UnsignedLong.ZERO;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_start_slot_at_epoch;\n+import static tech.pegasys.teku.util.config.Constants.SECONDS_PER_SLOT;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.eventbus.EventBus;\n+import com.google.common.primitives.UnsignedLong;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.core.ForkChoiceUtil;\n+import tech.pegasys.teku.datastructures.blocks.NodeSlot;\n+import tech.pegasys.teku.logging.EventLogger;\n+import tech.pegasys.teku.networking.eth2.Eth2Network;\n+import tech.pegasys.teku.statetransition.events.attestation.BroadcastAggregatesEvent;\n+import tech.pegasys.teku.statetransition.events.attestation.BroadcastAttestationEvent;\n+import tech.pegasys.teku.statetransition.forkchoice.ForkChoice;\n+import tech.pegasys.teku.storage.client.RecentChainData;\n+import tech.pegasys.teku.sync.SyncService;\n+import tech.pegasys.teku.util.time.channels.SlotEventsChannel;\n+\n+public class SlotProcessor {\n+  private final RecentChainData recentChainData;\n+  private final SyncService syncService;\n+  private final ForkChoice forkChoice;\n+  private final Eth2Network p2pNetwork;\n+  private final SlotEventsChannel slotEventsChannelPublisher;\n+  private final EventBus eventBus;\n+  private final NodeSlot nodeSlot = new NodeSlot(ZERO);\n+  private final EventLogger EVENT_LOG;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac4fb4b1293690cb93c29abf9f1e046f6850b5e6"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njg4NTcyOnYy", "diffSide": "RIGHT", "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/SlotProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyMTo0OFrOGmAprg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyMTo0OFrOGmAprg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwOTc0Mg==", "bodyText": "nit: final\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  SlotEventsChannel slotEventsChannelPublisher,\n          \n          \n            \n                  final SlotEventsChannel slotEventsChannelPublisher,", "url": "https://github.com/ConsenSys/teku/pull/2171#discussion_r442509742", "createdAt": "2020-06-18T21:21:48Z", "author": {"login": "ajsutton"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/SlotProcessor.java", "diffHunk": "@@ -0,0 +1,220 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.services.beaconchain;\n+\n+import static com.google.common.primitives.UnsignedLong.ONE;\n+import static com.google.common.primitives.UnsignedLong.ZERO;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_epoch_at_slot;\n+import static tech.pegasys.teku.datastructures.util.BeaconStateUtil.compute_start_slot_at_epoch;\n+import static tech.pegasys.teku.util.config.Constants.SECONDS_PER_SLOT;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.eventbus.EventBus;\n+import com.google.common.primitives.UnsignedLong;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.core.ForkChoiceUtil;\n+import tech.pegasys.teku.datastructures.blocks.NodeSlot;\n+import tech.pegasys.teku.logging.EventLogger;\n+import tech.pegasys.teku.networking.eth2.Eth2Network;\n+import tech.pegasys.teku.statetransition.events.attestation.BroadcastAggregatesEvent;\n+import tech.pegasys.teku.statetransition.events.attestation.BroadcastAttestationEvent;\n+import tech.pegasys.teku.statetransition.forkchoice.ForkChoice;\n+import tech.pegasys.teku.storage.client.RecentChainData;\n+import tech.pegasys.teku.sync.SyncService;\n+import tech.pegasys.teku.util.time.channels.SlotEventsChannel;\n+\n+public class SlotProcessor {\n+  private final RecentChainData recentChainData;\n+  private final SyncService syncService;\n+  private final ForkChoice forkChoice;\n+  private final Eth2Network p2pNetwork;\n+  private final SlotEventsChannel slotEventsChannelPublisher;\n+  private final EventBus eventBus;\n+  private final NodeSlot nodeSlot = new NodeSlot(ZERO);\n+  private final EventLogger EVENT_LOG;\n+\n+  private volatile UnsignedLong onTickSlotStart;\n+  private volatile UnsignedLong onTickSlotAttestation;\n+  private volatile UnsignedLong onTickSlotAggregate;\n+  private final UnsignedLong oneThirdSlotSeconds = UnsignedLong.valueOf(SECONDS_PER_SLOT / 3);\n+\n+  @VisibleForTesting\n+  SlotProcessor(\n+      final RecentChainData recentChainData,\n+      final SyncService syncService,\n+      final ForkChoice forkChoice,\n+      final Eth2Network p2pNetwork,\n+      SlotEventsChannel slotEventsChannelPublisher,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac4fb4b1293690cb93c29abf9f1e046f6850b5e6"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3612, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}