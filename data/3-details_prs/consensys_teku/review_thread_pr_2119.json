{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzIyMTEx", "number": 2119, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzoyMDozNFrOEEfYzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzoyMDozNFrOEEfYzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTQ0MDE1OnYy", "diffSide": "RIGHT", "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/EncryptedKeystoreWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMzoyMDozNFrOGiJarA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjoxNTo0MFrOGiMOcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTA1Mg==", "bodyText": "this needs to be the validator public key (short) so that we can associate the 2", "url": "https://github.com/ConsenSys/teku/pull/2119#discussion_r438459052", "createdAt": "2020-06-10T23:20:34Z", "author": {"login": "rolfyone"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/EncryptedKeystoreWriter.java", "diffHunk": "@@ -45,35 +45,33 @@ public EncryptedKeystoreWriter(\n     this.validatorKeyPassword = validatorKeyPassword;\n     this.withdrawalKeyPassword = withdrawalKeyPassword;\n     this.outputPath = outputPath;\n+    createKeystoreDirectory();\n   }\n \n   @Override\n   public void writeKeys(final BLSKeyPair validatorKey, final BLSKeyPair withdrawalKey)\n       throws UncheckedIOException, KeyStoreValidationException {\n-    final Path keystoreDirectory = createKeystoreDirectory(validatorKey);\n \n     final KeyStoreData validatorKeyStoreData =\n         generateKeystoreData(validatorKey, validatorKeyPassword);\n     final KeyStoreData withdrawalKeyStoreData =\n         generateKeystoreData(withdrawalKey, withdrawalKeyPassword);\n \n     final String validatorFileName =\n-        \"validator_\" + shortPublicKey(validatorKey.getPublicKey()) + \".json\";\n+        shortPublicKey(validatorKey.getPublicKey()) + \"_validator.json\";\n     final String withdrawalFileName =\n-        \"withdrawal_\" + shortPublicKey(withdrawalKey.getPublicKey()) + \".json\";\n+        shortPublicKey(withdrawalKey.getPublicKey()) + \"_withdrawal.json\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf125c98305b5afdd4c8fbb8267729ef4dfa28ef"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUwNTA3NQ==", "bodyText": "fixed", "url": "https://github.com/ConsenSys/teku/pull/2119#discussion_r438505075", "createdAt": "2020-06-11T02:15:40Z", "author": {"login": "macfarla"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/deposit/EncryptedKeystoreWriter.java", "diffHunk": "@@ -45,35 +45,33 @@ public EncryptedKeystoreWriter(\n     this.validatorKeyPassword = validatorKeyPassword;\n     this.withdrawalKeyPassword = withdrawalKeyPassword;\n     this.outputPath = outputPath;\n+    createKeystoreDirectory();\n   }\n \n   @Override\n   public void writeKeys(final BLSKeyPair validatorKey, final BLSKeyPair withdrawalKey)\n       throws UncheckedIOException, KeyStoreValidationException {\n-    final Path keystoreDirectory = createKeystoreDirectory(validatorKey);\n \n     final KeyStoreData validatorKeyStoreData =\n         generateKeystoreData(validatorKey, validatorKeyPassword);\n     final KeyStoreData withdrawalKeyStoreData =\n         generateKeystoreData(withdrawalKey, withdrawalKeyPassword);\n \n     final String validatorFileName =\n-        \"validator_\" + shortPublicKey(validatorKey.getPublicKey()) + \".json\";\n+        shortPublicKey(validatorKey.getPublicKey()) + \"_validator.json\";\n     final String withdrawalFileName =\n-        \"withdrawal_\" + shortPublicKey(withdrawalKey.getPublicKey()) + \".json\";\n+        shortPublicKey(withdrawalKey.getPublicKey()) + \"_withdrawal.json\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ1OTA1Mg=="}, "originalCommit": {"oid": "bf125c98305b5afdd4c8fbb8267729ef4dfa28ef"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3575, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}