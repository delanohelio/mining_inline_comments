{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1ODYxMjE3", "number": 2551, "title": "Restrict size of epoch parameter so that it can be converted to slot without overflow", "bodyText": "PR Description\nValidate all EPOCH parameters in the REST API, restricting them to be less than UInt64.MAX_VALUE / Constants.SLOTS_PER_EPOCH. This ensures that they can be converted to a slot without overflowing.\nWhile a generic handler fo ArithmeticException could have been added to respond with BAD_REQUEST on any overflow, that feels too generic as a there are a range of programming errors which could lead to ArithmeticException being thrown and we don't want to obscure those problem by just treating them as a bad request.\nFixed Issue(s)\nfixes #2537\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-08-11T04:46:33Z", "url": "https://github.com/ConsenSys/teku/pull/2551", "merged": true, "mergeCommit": {"oid": "1b9be173eecb1046227f531245394f826618f0ec"}, "closed": true, "closedAt": "2020-08-11T05:35:26Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9vTDsgH2gAyNDY1ODYxMjE3OjU5ZjFiN2IxN2Q3MDU2YmM3ZmY2YTc4YmZkM2ZkNjlhOWQwNmQ4ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9vquWAFqTQ2NDc1MTE2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7", "committedDate": "2020-08-11T04:41:49Z", "message": "Restrict size of epoch parameter so that it can be converted to slot without overflowing a uint64."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzQ5NDk5", "url": "https://github.com/ConsenSys/teku/pull/2551#pullrequestreview-464749499", "createdAt": "2020-08-11T05:02:01Z", "commit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTowMjowMlrOG-ocxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTowMjowMlrOG-ocxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNzYyMg==", "bodyText": "can we just store UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH)) as a const? it's going to potentially happen a lot...", "url": "https://github.com/ConsenSys/teku/pull/2551#discussion_r468327622", "createdAt": "2020-08-11T05:02:02Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/SingleQueryParameterUtils.java", "diffHunk": "@@ -74,12 +75,23 @@ public static UInt64 getParameterValueAsUInt64(\n     }\n   }\n \n+  public static UInt64 getParameterValueAsEpoch(\n+      final Map<String, List<String>> parameterMap, final String key)\n+      throws IllegalArgumentException {\n+    final UInt64 value = getParameterValueAsUInt64(parameterMap, key);\n+    // Restrict valid epoch values to ones that can be converted to slot without overflowing\n+    if (value.isGreaterThan(UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzUwNjEy", "url": "https://github.com/ConsenSys/teku/pull/2551#pullrequestreview-464750612", "createdAt": "2020-08-11T05:05:51Z", "commit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTowNTo1MVrOG-oghw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTowNTo1MVrOG-oghw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyODU4Mw==", "bodyText": "the endpoint creating this request should probably be calling the above query util to get the epoch argument? then this check is probably not required as its already validated...", "url": "https://github.com/ConsenSys/teku/pull/2551#discussion_r468328583", "createdAt": "2020-08-11T05:05:51Z", "author": {"login": "rolfyone"}, "path": "data/serializer/src/main/java/tech/pegasys/teku/api/schema/ValidatorsRequest.java", "diffHunk": "@@ -36,5 +37,10 @@ public ValidatorsRequest(\n       @JsonProperty(value = \"pubkeys\", required = true) final List<BLSPubKey> pubkeys) {\n     this.epoch = epoch;\n     this.pubkeys = pubkeys;\n+    // Restrict valid epoch values to ones that can be converted to slot without overflowing\n+    if (epoch != null\n+        && epoch.isGreaterThan(UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH))) {\n+      throw new IllegalArgumentException(\"Epoch is too large.\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NzUxMTY4", "url": "https://github.com/ConsenSys/teku/pull/2551#pullrequestreview-464751168", "createdAt": "2020-08-11T05:07:40Z", "commit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3614, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}