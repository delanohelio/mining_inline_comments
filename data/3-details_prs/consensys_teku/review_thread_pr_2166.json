{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NjI0ODA1", "number": 2166, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1NDowMFrOEGYvpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1NDowMFrOEGYvpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTMyMzI0OnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1NDowMFrOGlJo9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjo0NjozMlrOGlZ32Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwODQzNw==", "bodyText": "I think you need to check if the slot is less than the smallest slot in knownBlockRoots, otherwise you'll run extra lookups for skipped slots.", "url": "https://github.com/ConsenSys/teku/pull/2166#discussion_r441608437", "createdAt": "2020-06-17T14:54:00Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java", "diffHunk": "@@ -181,5 +189,18 @@ void incrementCurrentSlot() {\n       remainingBlocks = remainingBlocks.minus(ONE);\n       currentSlot = currentSlot.plus(step);\n     }\n+\n+    SafeFuture<Optional<SignedBeaconBlock>> loadNextBlock() {\n+      final UnsignedLong slot = this.currentSlot;\n+      final Bytes32 knownBlockRoot = knownBlockRoots.get(slot);\n+      if (knownBlockRoot != null) {\n+        return combinedChainDataClient\n+            .getBlockByBlockRoot(knownBlockRoot)\n+            .thenApply(maybeBlock -> maybeBlock.filter(block -> block.getSlot().equals(slot)));\n+      } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d9d829ac309e82204fe29dc2941ecd3731075b"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg3NDM5Mw==", "bodyText": "Good spot.  Added a test to confirm empty slots are not included in results from ForkChoiceUtil.getAncestorRoots as well. Wound up tweaking the handling for requests that extend beyond our best block as well.", "url": "https://github.com/ConsenSys/teku/pull/2166#discussion_r441874393", "createdAt": "2020-06-17T22:46:32Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/main/java/tech/pegasys/teku/networking/eth2/rpc/beaconchain/methods/BeaconBlocksByRangeMessageHandler.java", "diffHunk": "@@ -181,5 +189,18 @@ void incrementCurrentSlot() {\n       remainingBlocks = remainingBlocks.minus(ONE);\n       currentSlot = currentSlot.plus(step);\n     }\n+\n+    SafeFuture<Optional<SignedBeaconBlock>> loadNextBlock() {\n+      final UnsignedLong slot = this.currentSlot;\n+      final Bytes32 knownBlockRoot = knownBlockRoots.get(slot);\n+      if (knownBlockRoot != null) {\n+        return combinedChainDataClient\n+            .getBlockByBlockRoot(knownBlockRoot)\n+            .thenApply(maybeBlock -> maybeBlock.filter(block -> block.getSlot().equals(slot)));\n+      } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwODQzNw=="}, "originalCommit": {"oid": "15d9d829ac309e82204fe29dc2941ecd3731075b"}, "originalPosition": 125}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3610, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}