{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMjY3ODE1", "number": 1444, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDoxMjo0M1rOEasKjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDoxMjo0M1rOEasKjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDIyMDI4OnYy", "diffSide": "RIGHT", "path": "fuzz/src/main/java/tech/pegasys/teku/fuzz/FuzzUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDoxMjo0M1rOHERrKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTozMzoxM1rOHEx3dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0NTkzMQ==", "bodyText": "Would you mind clearing out some of these TODO comments?  We should either implement the TODO's now or cut them.", "url": "https://github.com/ConsenSys/teku/pull/1444#discussion_r474245931", "createdAt": "2020-08-20T20:12:43Z", "author": {"login": "mbaxter"}, "path": "fuzz/src/main/java/tech/pegasys/teku/fuzz/FuzzUtil.java", "diffHunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.fuzz;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.bls.BLSConstants;\n+import tech.pegasys.teku.core.BlockProcessorUtil;\n+import tech.pegasys.teku.core.StateTransition;\n+import tech.pegasys.teku.core.StateTransitionException;\n+import tech.pegasys.teku.core.exceptions.BlockProcessingException;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.teku.datastructures.util.CommitteeUtil;\n+import tech.pegasys.teku.datastructures.util.SimpleOffsetSerializer;\n+import tech.pegasys.teku.fuzz.input.AttestationFuzzInput;\n+import tech.pegasys.teku.fuzz.input.AttesterSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockHeaderFuzzInput;\n+import tech.pegasys.teku.fuzz.input.DepositFuzzInput;\n+import tech.pegasys.teku.fuzz.input.ProposerSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.VoluntaryExitFuzzInput;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+import tech.pegasys.teku.ssz.sos.ReflectionInformation;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+// TODO a Java FuzzHarness interface? - that way type safety can be checked at compile time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58c17095bb04bdd53863e94d2e2272826ce1ee5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM1MjQ3NA==", "bodyText": "Done! Sorry to leave them sitting around.", "url": "https://github.com/ConsenSys/teku/pull/1444#discussion_r474352474", "createdAt": "2020-08-21T01:08:09Z", "author": {"login": "gnattishness"}, "path": "fuzz/src/main/java/tech/pegasys/teku/fuzz/FuzzUtil.java", "diffHunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.fuzz;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.bls.BLSConstants;\n+import tech.pegasys.teku.core.BlockProcessorUtil;\n+import tech.pegasys.teku.core.StateTransition;\n+import tech.pegasys.teku.core.StateTransitionException;\n+import tech.pegasys.teku.core.exceptions.BlockProcessingException;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.teku.datastructures.util.CommitteeUtil;\n+import tech.pegasys.teku.datastructures.util.SimpleOffsetSerializer;\n+import tech.pegasys.teku.fuzz.input.AttestationFuzzInput;\n+import tech.pegasys.teku.fuzz.input.AttesterSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockHeaderFuzzInput;\n+import tech.pegasys.teku.fuzz.input.DepositFuzzInput;\n+import tech.pegasys.teku.fuzz.input.ProposerSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.VoluntaryExitFuzzInput;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+import tech.pegasys.teku.ssz.sos.ReflectionInformation;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+// TODO a Java FuzzHarness interface? - that way type safety can be checked at compile time", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0NTkzMQ=="}, "originalCommit": {"oid": "f58c17095bb04bdd53863e94d2e2272826ce1ee5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc3MzM2NQ==", "bodyText": "np - thanks for the clean up!", "url": "https://github.com/ConsenSys/teku/pull/1444#discussion_r474773365", "createdAt": "2020-08-21T15:33:13Z", "author": {"login": "mbaxter"}, "path": "fuzz/src/main/java/tech/pegasys/teku/fuzz/FuzzUtil.java", "diffHunk": "@@ -0,0 +1,281 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.fuzz;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.bls.BLSConstants;\n+import tech.pegasys.teku.core.BlockProcessorUtil;\n+import tech.pegasys.teku.core.StateTransition;\n+import tech.pegasys.teku.core.StateTransitionException;\n+import tech.pegasys.teku.core.exceptions.BlockProcessingException;\n+import tech.pegasys.teku.datastructures.state.BeaconState;\n+import tech.pegasys.teku.datastructures.util.BeaconStateUtil;\n+import tech.pegasys.teku.datastructures.util.CommitteeUtil;\n+import tech.pegasys.teku.datastructures.util.SimpleOffsetSerializer;\n+import tech.pegasys.teku.fuzz.input.AttestationFuzzInput;\n+import tech.pegasys.teku.fuzz.input.AttesterSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockFuzzInput;\n+import tech.pegasys.teku.fuzz.input.BlockHeaderFuzzInput;\n+import tech.pegasys.teku.fuzz.input.DepositFuzzInput;\n+import tech.pegasys.teku.fuzz.input.ProposerSlashingFuzzInput;\n+import tech.pegasys.teku.fuzz.input.VoluntaryExitFuzzInput;\n+import tech.pegasys.teku.ssz.SSZTypes.SSZList;\n+import tech.pegasys.teku.ssz.sos.ReflectionInformation;\n+import tech.pegasys.teku.util.config.Constants;\n+\n+// TODO a Java FuzzHarness interface? - that way type safety can be checked at compile time", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0NTkzMQ=="}, "originalCommit": {"oid": "f58c17095bb04bdd53863e94d2e2272826ce1ee5"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1711, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}