{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0OTUzOTk5", "number": 3381, "title": "Queue requests to external signers and limit the number of concurrent requests made", "bodyText": "The specific external signer requests that are rate limited are the signing of aggregation slots, which are done in bulk on epoch change, to determine of a validator needs to be an aggregator for a given slot.\n\n\nnew command line option --Xvalidators-external-signer-concurrent-limit=<INTEGER> defaults to 32. This only affects the rate at which external signer requests to sign aggregations are performed.\n\n\nMetrics added for the new queue, but only for the number of items in the queue. It may stay at 0 often, the queue gets processed very quickly, so I didnt add a metric for active requests because they started finished so fast. validator_ExternalSigner_tasks_queued\n\n\nthere will now be items listed for beacon_eth1Queue_tasks_queued, which was an existing task queue that previously had no metrics, but may be useful to be able to see.\n\n\nfixes #2860\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-12-09T06:53:43Z", "url": "https://github.com/ConsenSys/teku/pull/3381", "merged": true, "mergeCommit": {"oid": "7d0d5affd4550efc86b0da4c6653ece3d44d38c5"}, "closed": true, "closedAt": "2020-12-10T05:56:26Z", "author": {"login": "rolfyone"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkZD-wgH2gAyNTM0OTUzOTk5Ojg4ZGQyNTgwNDViMWJjYzU0MmQ0OTRmZjJlZDIxNjY4NDFhMTMzNjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkrvtIAH2gAyNTM0OTUzOTk5OmM1NzJmZjY2OTdiZjZmNWNiODM2NmUyNTdhZDFjMDdmM2YzZDAwNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88dd258045b1bcc542d494ff2ed2166841a13369", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/88dd258045b1bcc542d494ff2ed2166841a13369", "committedDate": "2020-12-09T06:50:29Z", "message": "Queue requests to external signers and limit the number of concurrent requests made.\n\n - The specific external signer requests that are rate limited are the signing of aggregation slots, which are done in bulk on epoch change, to determine of a validator needs to be an aggregator for a given slot.\n\n - new command line option `--Xvalidators-external-signer-concurrent-limit=<INTEGER>` defaults to 32. This only affects the rate at which external signer requests to sign aggregations are performed.\n\n - Metrics added for the new queue, but only for the number of items in the queue. It may stay at 0 often, the queue gets processed very quickly, so I didnt add a metric for active requests because they started finished so fast. `validator_ExternalSigner_tasks_queued`\n\n - there will now be items listed for `beacon_eth1Queue_tasks_queued`, which was an existing task queue that previously had no metrics, but may be useful to be able to see.\n\nfixes #2860\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODkzMDUy", "url": "https://github.com/ConsenSys/teku/pull/3381#pullrequestreview-547893052", "createdAt": "2020-12-09T07:09:48Z", "commit": {"oid": "88dd258045b1bcc542d494ff2ed2166841a13369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzowOTo0OFrOICFnWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzowOTo0OFrOICFnWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2MDA1OQ==", "bodyText": "@ajsutton processQueuedResults and requestComplete were synchronized in their original spot.\nI've added an atomic integer to act as the limit counter, and made them not synchronized, but I'll be interested to get your take on the best way to go here...", "url": "https://github.com/ConsenSys/teku/pull/3381#discussion_r539060059", "createdAt": "2020-12-09T07:09:48Z", "author": {"login": "rolfyone"}, "path": "infrastructure/async/src/main/java/tech/pegasys/teku/infrastructure/async/ThrottlingTaskQueue.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.infrastructure.async;\n+\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.Supplier;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.hyperledger.besu.plugin.services.MetricsSystem;\n+import tech.pegasys.teku.infrastructure.metrics.SettableGauge;\n+import tech.pegasys.teku.infrastructure.metrics.TekuMetricCategory;\n+\n+public class ThrottlingTaskQueue {\n+  private static final Logger LOG = LogManager.getLogger();\n+  private final int maximumConcurrentRequests;\n+  private volatile Queue<Runnable> queuedRequests = new ConcurrentLinkedQueue<>();\n+  private volatile AtomicInteger activeTasks = new AtomicInteger(0);\n+\n+  private final SettableGauge queueSizeGauge;\n+\n+  public ThrottlingTaskQueue(\n+      final int maximumConcurrentRequests,\n+      final MetricsSystem metricsSystem,\n+      final TekuMetricCategory metricCategory,\n+      final String metricsPrefix) {\n+    this.maximumConcurrentRequests = maximumConcurrentRequests;\n+\n+    this.queueSizeGauge =\n+        SettableGauge.create(\n+            metricsSystem,\n+            metricCategory,\n+            metricsPrefix + \"_tasks_queued\",\n+            \"Number of tasks queued\");\n+  }\n+\n+  public <T> SafeFuture<T> queueRequest(final Supplier<SafeFuture<T>> request) {\n+    final SafeFuture<T> future = new SafeFuture<>();\n+    queuedRequests.add(\n+        () -> {\n+          final SafeFuture<T> requestFuture = request.get();\n+          requestFuture.propagateTo(future);\n+          requestFuture.always(this::requestComplete);\n+        });\n+    queueSizeGauge.set(queuedRequests.size());\n+    processQueuedRequests();\n+    return future;\n+  }\n+\n+  private void requestComplete() {\n+    activeTasks.decrementAndGet();\n+    processQueuedRequests();\n+  }\n+\n+  private void processQueuedRequests() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88dd258045b1bcc542d494ff2ed2166841a13369"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTA0ODIx", "url": "https://github.com/ConsenSys/teku/pull/3381#pullrequestreview-547904821", "createdAt": "2020-12-09T07:32:36Z", "commit": {"oid": "88dd258045b1bcc542d494ff2ed2166841a13369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzozMjozNlrOICGRLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzozMjozNlrOICGRLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3MDc2NA==", "bodyText": "I seemed to hit timeouts fairly quickly, I wonder if that's a good reason to actually make this option not hidden?\nRunning everything on my machine with 64 validators, a queue of 64 was enough to start not completing within timeouts, and 50 was ok to complete signing without dropping anything, but this was on web3signer with no slashing protection enabled...", "url": "https://github.com/ConsenSys/teku/pull/3381#discussion_r539070764", "createdAt": "2020-12-09T07:32:36Z", "author": {"login": "rolfyone"}, "path": "teku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java", "diffHunk": "@@ -80,13 +80,23 @@\n       arity = \"1\")\n   private int validatorExternalSignerTimeout = 1000;\n \n+  @CommandLine.Option(\n+      names = {\"--Xvalidators-external-signer-concurrent-limit\"},\n+      paramLabel = \"<INTEGER>\",\n+      description = \"The maximum number of concurrent background requests to make to the signer.\",\n+      hidden = true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88dd258045b1bcc542d494ff2ed2166841a13369"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "663419340d657cffdec970ae5a03dcc0925f24e1", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/663419340d657cffdec970ae5a03dcc0925f24e1", "committedDate": "2020-12-09T22:39:50Z", "message": "Merge remote-tracking branch 'upstream/master' into 2860\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>\n\n# Conflicts:\n#\tteku/src/main/java/tech/pegasys/teku/cli/options/ValidatorKeysOptions.java\n#\tteku/src/test/java/tech/pegasys/teku/cli/BeaconNodeCommandTest.java\n#\tvalidator/api/src/main/java/tech/pegasys/teku/validator/api/ValidatorConfig.java\n#\tvalidator/client/src/integration-test/java/tech/pegasys/teku/validator/client/signer/ExternalSignerIntegrationTest.java\n#\tvalidator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java\n#\tvalidator/client/src/test/java/tech/pegasys/teku/validator/client/loader/ValidatorLoaderTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61a5f2381667a56bfd539de643e32104d543f5b2", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/61a5f2381667a56bfd539de643e32104d543f5b2", "committedDate": "2020-12-10T01:25:03Z", "message": "changes from review comments.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6", "committedDate": "2020-12-10T01:26:14Z", "message": "Merge remote-tracking branch 'upstream/master' into 2860"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Nzc5OTk0", "url": "https://github.com/ConsenSys/teku/pull/3381#pullrequestreview-548779994", "createdAt": "2020-12-10T02:52:01Z", "commit": {"oid": "d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMjo1MjowMVrOICzFEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMzowNzowM1rOICzZfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwNDk0NA==", "bodyText": "Suspect this should be final and not volatile.", "url": "https://github.com/ConsenSys/teku/pull/3381#discussion_r539804944", "createdAt": "2020-12-10T02:52:01Z", "author": {"login": "ajsutton"}, "path": "infrastructure/async/src/main/java/tech/pegasys/teku/infrastructure/async/ThrottlingTaskQueue.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.infrastructure.async;\n+\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.function.Supplier;\n+import org.hyperledger.besu.plugin.services.MetricsSystem;\n+import tech.pegasys.teku.infrastructure.metrics.SettableGauge;\n+import tech.pegasys.teku.infrastructure.metrics.TekuMetricCategory;\n+\n+public class ThrottlingTaskQueue {\n+  private final int maximumConcurrentRequests;\n+  private volatile Queue<Runnable> queuedRequests = new ConcurrentLinkedQueue<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwNTUwNA==", "bodyText": "You can just use a normal gauge here rather than SettableGuage and pass queuedRequests::size as the supplier.  It's a concurrent queue anyway so safe to access from the metrics thread.", "url": "https://github.com/ConsenSys/teku/pull/3381#discussion_r539805504", "createdAt": "2020-12-10T02:53:38Z", "author": {"login": "ajsutton"}, "path": "infrastructure/async/src/main/java/tech/pegasys/teku/infrastructure/async/ThrottlingTaskQueue.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.infrastructure.async;\n+\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.function.Supplier;\n+import org.hyperledger.besu.plugin.services.MetricsSystem;\n+import tech.pegasys.teku.infrastructure.metrics.SettableGauge;\n+import tech.pegasys.teku.infrastructure.metrics.TekuMetricCategory;\n+\n+public class ThrottlingTaskQueue {\n+  private final int maximumConcurrentRequests;\n+  private volatile Queue<Runnable> queuedRequests = new ConcurrentLinkedQueue<>();\n+  private int inflightRequestCount = 0;\n+\n+  private final SettableGauge queueSizeGauge;\n+\n+  public ThrottlingTaskQueue(\n+      final int maximumConcurrentRequests,\n+      final MetricsSystem metricsSystem,\n+      final TekuMetricCategory metricCategory,\n+      final String metricsPrefix) {\n+    this.maximumConcurrentRequests = maximumConcurrentRequests;\n+\n+    this.queueSizeGauge =\n+        SettableGauge.create(\n+            metricsSystem,\n+            metricCategory,\n+            metricsPrefix + \"_tasks_queued\",\n+            \"Number of tasks queued\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwNTk2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        maximumConcurrentRequests, metricsSystem, TekuMetricCategory.BEACON, \"eth1Queue\");\n          \n          \n            \n                        maximumConcurrentRequests, metricsSystem, TekuMetricCategory.BEACON, \"eth1_request_queue_size\");", "url": "https://github.com/ConsenSys/teku/pull/3381#discussion_r539805960", "createdAt": "2020-12-10T02:54:54Z", "author": {"login": "ajsutton"}, "path": "pow/src/main/java/tech/pegasys/teku/pow/ThrottlingEth1Provider.java", "diffHunk": "@@ -16,94 +16,75 @@\n import java.math.BigInteger;\n import java.time.Duration;\n import java.util.Optional;\n-import java.util.Queue;\n-import java.util.concurrent.ConcurrentLinkedQueue;\n-import java.util.function.Supplier;\n+import org.hyperledger.besu.plugin.services.MetricsSystem;\n import org.web3j.protocol.core.methods.response.EthBlock.Block;\n import org.web3j.protocol.core.methods.response.EthCall;\n import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.infrastructure.async.ThrottlingTaskQueue;\n+import tech.pegasys.teku.infrastructure.metrics.TekuMetricCategory;\n import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n \n public class ThrottlingEth1Provider implements Eth1Provider {\n   private final Eth1Provider delegate;\n-  private final int maximumConcurrentRequests;\n-  private final Queue<Runnable> queuedRequests = new ConcurrentLinkedQueue<>();\n-  private int inflightRequestCount = 0;\n+  private final ThrottlingTaskQueue taskQueue;\n \n-  public ThrottlingEth1Provider(final Eth1Provider delegate, final int maximumConcurrentRequests) {\n+  public ThrottlingEth1Provider(\n+      final Eth1Provider delegate,\n+      final int maximumConcurrentRequests,\n+      final MetricsSystem metricsSystem) {\n     this.delegate = delegate;\n-    this.maximumConcurrentRequests = maximumConcurrentRequests;\n+    taskQueue =\n+        new ThrottlingTaskQueue(\n+            maximumConcurrentRequests, metricsSystem, TekuMetricCategory.BEACON, \"eth1Queue\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwNjE4Ng==", "bodyText": "nit: Tasks aren't necessarily requests so this should probably just be queue or queueTask?", "url": "https://github.com/ConsenSys/teku/pull/3381#discussion_r539806186", "createdAt": "2020-12-10T02:55:31Z", "author": {"login": "ajsutton"}, "path": "infrastructure/async/src/main/java/tech/pegasys/teku/infrastructure/async/ThrottlingTaskQueue.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.infrastructure.async;\n+\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n+import java.util.function.Supplier;\n+import org.hyperledger.besu.plugin.services.MetricsSystem;\n+import tech.pegasys.teku.infrastructure.metrics.SettableGauge;\n+import tech.pegasys.teku.infrastructure.metrics.TekuMetricCategory;\n+\n+public class ThrottlingTaskQueue {\n+  private final int maximumConcurrentRequests;\n+  private volatile Queue<Runnable> queuedRequests = new ConcurrentLinkedQueue<>();\n+  private int inflightRequestCount = 0;\n+\n+  private final SettableGauge queueSizeGauge;\n+\n+  public ThrottlingTaskQueue(\n+      final int maximumConcurrentRequests,\n+      final MetricsSystem metricsSystem,\n+      final TekuMetricCategory metricCategory,\n+      final String metricsPrefix) {\n+    this.maximumConcurrentRequests = maximumConcurrentRequests;\n+\n+    this.queueSizeGauge =\n+        SettableGauge.create(\n+            metricsSystem,\n+            metricCategory,\n+            metricsPrefix + \"_tasks_queued\",\n+            \"Number of tasks queued\");\n+  }\n+\n+  public <T> SafeFuture<T> queueRequest(final Supplier<SafeFuture<T>> request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgwNzA3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"ExternalSigner\");\n          \n          \n            \n                        \"external_signer_request_queue_size\");", "url": "https://github.com/ConsenSys/teku/pull/3381#discussion_r539807076", "createdAt": "2020-12-10T02:58:02Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java", "diffHunk": "@@ -104,6 +114,12 @@ public static ValidatorLoader create(\n     if (config.getValidatorExternalSignerPublicKeys().isEmpty()) {\n       return Collections.emptyMap();\n     }\n+    externalSignerTaskQueue =\n+        new ThrottlingTaskQueue(\n+            config.getValidatorExternalSignerConcurrentRequestLimit(),\n+            metricsSystem,\n+            TekuMetricCategory.VALIDATOR,\n+            \"ExternalSigner\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTgxMDE3NA==", "bodyText": "This doesn't seem to need to be a field.", "url": "https://github.com/ConsenSys/teku/pull/3381#discussion_r539810174", "createdAt": "2020-12-10T03:07:03Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/loader/ValidatorLoader.java", "diffHunk": "@@ -104,6 +114,12 @@ public static ValidatorLoader create(\n     if (config.getValidatorExternalSignerPublicKeys().isEmpty()) {\n       return Collections.emptyMap();\n     }\n+    externalSignerTaskQueue =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1d75ec4b1a940ea2321c9073b6bb7ffbaf1e4c6"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c572ff6697bf6f5cb8366e257ad1c07f3f3d0055", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/c572ff6697bf6f5cb8366e257ad1c07f3f3d0055", "committedDate": "2020-12-10T04:36:32Z", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4362, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}