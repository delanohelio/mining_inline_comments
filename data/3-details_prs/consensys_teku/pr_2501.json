{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyODU3ODA4", "number": 2501, "title": "[Issue 2334] Fix state transition committee cache", "bodyText": "PR Description\nThis PR fixes an issue where our state transition caches were being corrupted with invalid committee data.\nI was able to reproduce this corrupted cache issue as follows:\n\nStart a single node network with 64 validators\nLet the network run for a bit and finalize some epochs\nStop the node and let several epoch pass\nRestart the node, at which point we would get \"Invalid attestation: Signature is invalid\" errors\n\nOn restart, the node would calculate and schedule upcoming validator duties correctly.  However, when we went to produce our attestations, we would try to calculate committee information using an old state (from the head of the chain) without processing slots forward to the slot being queried.  The calculated committee information from the stale state would then end up being cached by our TransitionCaches object.  This caused subsequent queries to pull committee information to return invalid data.  This then caused us to view our produced attestations as invalid because the corrupted committee information was inconsistent with the produced attestation.\nThe fix is to ensure that any state used to calculate committee information is in range of the slot being queried (the state must be from at least the previous epoch).  Checks have been added to CommitteeUtil.get_beacon_committee() to make sure we don't allow old states to be used for this calculation. ChainDataProvider and ValidatorApiHandler have been updated to run with states that have been processed up to an appropriate epoch before trying to calculate committee information.\nFixed Issue(s)\nFixes #2334\nFixes #2446\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-08-04T15:57:22Z", "url": "https://github.com/ConsenSys/teku/pull/2501", "merged": true, "mergeCommit": {"oid": "a170f84a1027cdaf2ffd7ad3483da17bbe85a455"}, "closed": true, "closedAt": "2020-08-05T15:42:54Z", "author": {"login": "mbaxter"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7tNSFgH2gAyNDYyODU3ODA4OjgxMWQ1MjhjZTE0ZDMzNGRhNjA3MTA4ZmMyNTM0MDU2YjU0YzFjZjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc785OCgH2gAyNDYyODU3ODA4Ojg4MjE0NTFlNTQ2NWJlZjcyOWU0NWU3NTMzNTRhOGUzZGQyY2FkOWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "811d528ce14d334da607108fc2534056b54c1cf9", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/811d528ce14d334da607108fc2534056b54c1cf9", "committedDate": "2020-08-04T21:07:51Z", "message": "Validate state is queryable for committee information at slot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "423397b0d698a6156b694dc6dc0933c3da7b8d36", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/423397b0d698a6156b694dc6dc0933c3da7b8d36", "committedDate": "2020-08-04T21:07:51Z", "message": "Add public method for getting queryable slot from target slot, clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3bc2aff6fd99018c83a4e09212040c66ca60e8d", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/a3bc2aff6fd99018c83a4e09212040c66ca60e8d", "committedDate": "2020-08-04T21:07:51Z", "message": "Roll state forward when creating attestations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cd7b618d86d64f074817c58413b7d46798979eb", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/8cd7b618d86d64f074817c58413b7d46798979eb", "committedDate": "2020-08-04T21:10:15Z", "message": "Roll state forward when pulling committee info via REST API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25b6917ec25a4864503f2c7302f7fb9b819ced87", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/25b6917ec25a4864503f2c7302f7fb9b819ced87", "committedDate": "2020-08-04T21:11:17Z", "message": "Move checkpoint state retrieval to CombinedChainDataClient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad2485a186e14088d43a48688c5b19733e5969aa", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/ad2485a186e14088d43a48688c5b19733e5969aa", "committedDate": "2020-08-04T21:20:09Z", "message": "Fix unit test mocks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce44280b097d86b008f36b736679c760312ab18c", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/ce44280b097d86b008f36b736679c760312ab18c", "committedDate": "2020-08-04T18:02:45Z", "message": "Roll state forward when pulling committee info via REST API"}, "afterCommit": {"oid": "ad2485a186e14088d43a48688c5b19733e5969aa", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/ad2485a186e14088d43a48688c5b19733e5969aa", "committedDate": "2020-08-04T21:20:09Z", "message": "Fix unit test mocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39e4b4dc519918931e8de7247e805f12e2290055", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/39e4b4dc519918931e8de7247e805f12e2290055", "committedDate": "2020-08-04T21:30:05Z", "message": "Fix build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0535e211ca959104f84d9c1d77a132080be2c31", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/b0535e211ca959104f84d9c1d77a132080be2c31", "committedDate": "2020-08-04T22:14:27Z", "message": "Fix ValidatorApiHandlerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22967e863ee46c5670f19708ad0897ca98cb62e6", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/22967e863ee46c5670f19708ad0897ca98cb62e6", "committedDate": "2020-08-04T22:23:03Z", "message": "Cleanup - remove unused var, move comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1756bd1619b7fc6c5ae9db990a0e6baf262e0ac4", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/1756bd1619b7fc6c5ae9db990a0e6baf262e0ac4", "committedDate": "2020-08-04T23:02:47Z", "message": "Add some tests for CombinedChainDataClient.getCheckpointStateAtEpoch()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjM0MTIx", "url": "https://github.com/ConsenSys/teku/pull/2501#pullrequestreview-461234121", "createdAt": "2020-08-04T23:04:12Z", "commit": {"oid": "22967e863ee46c5670f19708ad0897ca98cb62e6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowNDoxM1rOG70agQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowNDoxM1rOG70agQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NzkyMQ==", "bodyText": "This check means that if we have a span of time where no blocks are produced, we won't be able to query committee information for epochs ahead of the epoch after the latest block (from the REST API).  Is this right?", "url": "https://github.com/ConsenSys/teku/pull/2501#discussion_r465377921", "createdAt": "2020-08-04T23:04:13Z", "author": {"login": "mbaxter"}, "path": "data/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java", "diffHunk": "@@ -83,25 +81,22 @@ public GetForkResponse getForkInfo() {\n     if (!combinedChainDataClient.isChainDataFullyAvailable()) {\n       return chainUnavailable();\n     }\n-    final UnsignedLong committeesCalculatedAtEpoch = epoch.equals(ZERO) ? ZERO : epoch.minus(ONE);\n-    final UnsignedLong startingSlot = compute_start_slot_at_epoch(committeesCalculatedAtEpoch);\n-    final UnsignedLong slot = compute_start_slot_at_epoch(epoch);\n-\n-    // one epoch in future is available, beyond that cannot be calculated\n-    if (slot.compareTo(\n-            recentChainData.getBestSlot().plus(UnsignedLong.valueOf(Constants.SLOTS_PER_EPOCH)))\n-        > 0) {\n+\n+    final UnsignedLong earliestQueryableSlot =\n+        CommitteeUtil.getEarliestQueryableSlotForTargetEpoch(epoch);\n+    if (recentChainData.getBestSlot().compareTo(earliestQueryableSlot) < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22967e863ee46c5670f19708ad0897ca98cb62e6"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjU5ODYy", "url": "https://github.com/ConsenSys/teku/pull/2501#pullrequestreview-461259862", "createdAt": "2020-08-05T00:20:42Z", "commit": {"oid": "1756bd1619b7fc6c5ae9db990a0e6baf262e0ac4"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDoyMDo0MlrOG710Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMDoyODowOVrOG718jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwMDkxOA==", "bodyText": "I think we now progress the best slot even if the slots are empty so this should work out ok.  Worth testing to be sure though.", "url": "https://github.com/ConsenSys/teku/pull/2501#discussion_r465400918", "createdAt": "2020-08-05T00:20:42Z", "author": {"login": "ajsutton"}, "path": "data/provider/src/main/java/tech/pegasys/teku/api/ChainDataProvider.java", "diffHunk": "@@ -83,25 +81,22 @@ public GetForkResponse getForkInfo() {\n     if (!combinedChainDataClient.isChainDataFullyAvailable()) {\n       return chainUnavailable();\n     }\n-    final UnsignedLong committeesCalculatedAtEpoch = epoch.equals(ZERO) ? ZERO : epoch.minus(ONE);\n-    final UnsignedLong startingSlot = compute_start_slot_at_epoch(committeesCalculatedAtEpoch);\n-    final UnsignedLong slot = compute_start_slot_at_epoch(epoch);\n-\n-    // one epoch in future is available, beyond that cannot be calculated\n-    if (slot.compareTo(\n-            recentChainData.getBestSlot().plus(UnsignedLong.valueOf(Constants.SLOTS_PER_EPOCH)))\n-        > 0) {\n+\n+    final UnsignedLong earliestQueryableSlot =\n+        CommitteeUtil.getEarliestQueryableSlotForTargetEpoch(epoch);\n+    if (recentChainData.getBestSlot().compareTo(earliestQueryableSlot) < 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NzkyMQ=="}, "originalCommit": {"oid": "22967e863ee46c5670f19708ad0897ca98cb62e6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQwMzAyMQ==", "bodyText": "This feels like a pretty expensive test to perform just to be defensive. I'm be tempted to omit it.", "url": "https://github.com/ConsenSys/teku/pull/2501#discussion_r465403021", "createdAt": "2020-08-05T00:28:09Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/CheckpointState.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.datastructures.state;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+\n+import com.google.common.base.MoreObjects;\n+import java.util.Objects;\n+import org.apache.tuweni.bytes.Bytes32;\n+import tech.pegasys.teku.datastructures.blocks.BeaconBlockHeader;\n+import tech.pegasys.teku.datastructures.blocks.SignedBeaconBlock;\n+\n+public class CheckpointState {\n+\n+  private final Checkpoint checkpoint;\n+  private final SignedBeaconBlock block;\n+  private final BeaconState state;\n+\n+  public CheckpointState(\n+      final Checkpoint checkpoint, final SignedBeaconBlock block, final BeaconState state) {\n+    checkNotNull(checkpoint);\n+    checkNotNull(block);\n+    checkNotNull(state);\n+    checkArgument(checkpoint.getRoot().equals(block.getRoot()), \"Block must match checkpoint root\");\n+    checkArgument(\n+        state.getSlot().equals(checkpoint.getEpochStartSlot()),\n+        \"State must be advanced to checkpoint epoch boundary slot\");\n+    validateState(checkpoint, state);\n+\n+    this.checkpoint = checkpoint;\n+    this.block = block;\n+    this.state = state;\n+  }\n+\n+  private static void validateState(final Checkpoint checkpoint, final BeaconState state) {\n+    final Bytes32 blockRootFromState = deriveBlockHeaderFromState(state).hash_tree_root();\n+    checkArgument(\n+        blockRootFromState.equals(checkpoint.getRoot()), \"State must derive from checkpoint block\");\n+  }\n+\n+  private static BeaconBlockHeader deriveBlockHeaderFromState(final BeaconState state) {\n+    BeaconBlockHeader latestHeader = state.getLatest_block_header();\n+\n+    if (latestHeader.getState_root().isZero()) {\n+      // If the state root is empty, replace it with the current state root\n+      final Bytes32 stateRoot = state.hash_tree_root();\n+      latestHeader =\n+          new BeaconBlockHeader(\n+              latestHeader.getSlot(),\n+              latestHeader.getProposer_index(),\n+              latestHeader.getParent_root(),\n+              stateRoot,\n+              latestHeader.getBody_root());\n+    }\n+\n+    return latestHeader;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1756bd1619b7fc6c5ae9db990a0e6baf262e0ac4"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d500353cbc047a51bd19ff8b9080f88350dd754", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/7d500353cbc047a51bd19ff8b9080f88350dd754", "committedDate": "2020-08-05T15:23:54Z", "message": "Cut expensive validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8821451e5465bef729e45e753354a8e3dd2cad9c", "author": {"user": {"login": "mbaxter", "name": null}}, "url": "https://github.com/ConsenSys/teku/commit/8821451e5465bef729e45e753354a8e3dd2cad9c", "committedDate": "2020-08-05T15:24:25Z", "message": "Merge branch 'master' into issue-2334/fix-transition-cache"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3720, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}