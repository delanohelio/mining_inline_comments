{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NTI5Njkz", "number": 2994, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo0MzoyMVrOEuSNMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo0NDoxMFrOEuSN2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTY4MjQxOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/PostAttestationData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo0MzoyMVrOHilrGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo0MzoyMVrOHilrGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMDg3Mg==", "bodyText": "The attestation is already signed in this case.  Maybe\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\",\n          \n          \n            \n                          + \"This endpoint does not protect against slashing.\",", "url": "https://github.com/ConsenSys/teku/pull/2994#discussion_r506030872", "createdAt": "2020-10-16T03:43:21Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/v1/beacon/PostAttestationData.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi.handlers.v1.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.INVALID_BODY_SUPPLIED;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_BAD_REQUEST;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_V1_VALIDATOR;\n+import static tech.pegasys.teku.beaconrestapi.RestApiConstants.TAG_VALIDATOR_REQUIRED;\n+\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.http.Context;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import tech.pegasys.teku.api.DataProvider;\n+import tech.pegasys.teku.api.ValidatorDataProvider;\n+import tech.pegasys.teku.api.schema.Attestation;\n+import tech.pegasys.teku.beaconrestapi.handlers.AbstractHandler;\n+import tech.pegasys.teku.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.teku.provider.JsonProvider;\n+\n+public class PostAttestationData extends AbstractHandler {\n+  public static final String ROUTE = \"/eth/v1/beacon/pool/attestations\";\n+  private final ValidatorDataProvider provider;\n+\n+  public PostAttestationData(final DataProvider provider, final JsonProvider jsonProvider) {\n+    this(provider.getValidatorDataProvider(), jsonProvider);\n+  }\n+\n+  public PostAttestationData(\n+      final ValidatorDataProvider provider, final JsonProvider jsonProvider) {\n+    super(jsonProvider);\n+    this.provider = provider;\n+  }\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.POST,\n+      summary = \"Submit a signed attestation\",\n+      tags = {TAG_V1_VALIDATOR, TAG_VALIDATOR_REQUIRED},\n+      requestBody = @OpenApiRequestBody(content = {@OpenApiContent(from = Attestation.class)}),\n+      description =\n+          \"Submit a signed attestation to the beacon node to be validated and submitted if valid.\\n\\n\"\n+              + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2823e07756cb18f6adabeed0f6ff58ef9f6c1f0d"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTY4NDEwOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/validator/PostAttestation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo0NDoxMFrOHilsHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMzo0NToxN1rOHiltbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMTEzNA==", "bodyText": "Don't we normally add a deprecated = true option?", "url": "https://github.com/ConsenSys/teku/pull/2994#discussion_r506031134", "createdAt": "2020-10-16T03:44:10Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/validator/PostAttestation.java", "diffHunk": "@@ -54,12 +53,13 @@ public PostAttestation(final ValidatorDataProvider provider, final JsonProvider\n   @OpenApi(\n       path = ROUTE,\n       method = HttpMethod.POST,\n-      summary = \"Submit a signed attestation.\",\n+      summary = \"Submit a signed attestation\",\n       tags = {TAG_VALIDATOR},\n       requestBody = @OpenApiRequestBody(content = {@OpenApiContent(from = Attestation.class)}),\n       description =\n           \"Submit a signed attestation to the beacon node to be validated and submitted if valid.\\n\\n\"\n-              + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\",\n+              + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\\n\\n\"\n+              + \"Deprecated - use `/eth/v1/validator/attestation_data` instead.\",\n       responses = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2823e07756cb18f6adabeed0f6ff58ef9f6c1f0d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMTQ3MA==", "bodyText": "yep. done", "url": "https://github.com/ConsenSys/teku/pull/2994#discussion_r506031470", "createdAt": "2020-10-16T03:45:17Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/handlers/validator/PostAttestation.java", "diffHunk": "@@ -54,12 +53,13 @@ public PostAttestation(final ValidatorDataProvider provider, final JsonProvider\n   @OpenApi(\n       path = ROUTE,\n       method = HttpMethod.POST,\n-      summary = \"Submit a signed attestation.\",\n+      summary = \"Submit a signed attestation\",\n       tags = {TAG_VALIDATOR},\n       requestBody = @OpenApiRequestBody(content = {@OpenApiContent(from = Attestation.class)}),\n       description =\n           \"Submit a signed attestation to the beacon node to be validated and submitted if valid.\\n\\n\"\n-              + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\",\n+              + \"This endpoint does not protected against slashing. Signing the attestation can result in a slashable offence.\\n\\n\"\n+              + \"Deprecated - use `/eth/v1/validator/attestation_data` instead.\",\n       responses = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjAzMTEzNA=="}, "originalCommit": {"oid": "2823e07756cb18f6adabeed0f6ff58ef9f6c1f0d"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3213, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}