{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDg5NjAw", "number": 2498, "title": "Add built-in slashing protection", "bodyText": "PR Description\nAdd a simple but effective built-in slashing protection.\nFixed Issue(s)\nPart of #1887. Remaining to be done is to make it possible to specify the last signed data on the command line to support moving validators between clients without losing the slashing protection.\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-08-04T02:27:00Z", "url": "https://github.com/ConsenSys/teku/pull/2498", "merged": true, "mergeCommit": {"oid": "13e19e7e64f4f9338138bad590d884dcc593ef25"}, "closed": true, "closedAt": "2020-08-05T04:22:51Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7c_iEgH2gAyNDYyNDg5NjAwOmZmZDcwYTFmNjY4OGYyY2NkNGU2YzQ3ZDFhZGUzMTI4N2RmYTc5YWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7zQ-lgH2gAyNDYyNDg5NjAwOjZhODBhYTZiYmY3NWM1MmY0ZDkwMDE1YWU5YmEzMGE1YmY2MzFlOTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ffd70a1f6688f2ccd4e6c47d1ade31287dfa79af", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/ffd70a1f6688f2ccd4e6c47d1ade31287dfa79af", "committedDate": "2020-08-04T02:14:21Z", "message": "Introduce slashing protection."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db6774a6c78af7948f8225b825b479a28bfc8faa", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/db6774a6c78af7948f8225b825b479a28bfc8faa", "committedDate": "2020-08-04T02:24:54Z", "message": "Add slashing protection."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12be85e85388b6854297b7aca0edda740ce02fa6", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/12be85e85388b6854297b7aca0edda740ce02fa6", "committedDate": "2020-08-04T03:33:27Z", "message": "Make errorprone happy."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "452e62302c9c88620ca5e64714590d9c77085356", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/452e62302c9c88620ca5e64714590d9c77085356", "committedDate": "2020-08-04T03:48:23Z", "message": "Remove link since we didn't wind up basing off of that info."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7088e2b8c64ee8dfad57d97c8f7029760b7906b", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/e7088e2b8c64ee8dfad57d97c8f7029760b7906b", "committedDate": "2020-08-04T03:48:33Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into slashing-protection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNDg3Nzkz", "url": "https://github.com/ConsenSys/teku/pull/2498#pullrequestreview-460487793", "createdAt": "2020-08-04T04:29:59Z", "commit": {"oid": "e7088e2b8c64ee8dfad57d97c8f7029760b7906b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed17796049e9c699313276b0395a74d0df551172", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/ed17796049e9c699313276b0395a74d0df551172", "committedDate": "2020-08-04T05:58:53Z", "message": "Add flat file slashing protection record."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0dec9332d820803a17aa1dba17cba38521c5b3e", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/c0dec9332d820803a17aa1dba17cba38521c5b3e", "committedDate": "2020-08-04T06:21:52Z", "message": "Switch to a flat file based storage."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb485a91620cee93280689e9061c5f4350a38dcf", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/eb485a91620cee93280689e9061c5f4350a38dcf", "committedDate": "2020-08-04T06:22:18Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into slashing-protection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb37e01e23988cde197f345d3dd739ad4829f298", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/bb37e01e23988cde197f345d3dd739ad4829f298", "committedDate": "2020-08-04T09:10:40Z", "message": "Use a single flat file for block and attestation signing records."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5760501d7b4a53cbbd6dd0ffecf7e0b22be8b209", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/5760501d7b4a53cbbd6dd0ffecf7e0b22be8b209", "committedDate": "2020-08-04T09:27:04Z", "message": "Tidy up."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6000f4456bd650fb4fe3e7485f13dd925c77df8", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/f6000f4456bd650fb4fe3e7485f13dd925c77df8", "committedDate": "2020-08-04T09:30:21Z", "message": "Remove redundant interface."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd042cd025a6974d718f1e1d4f70bf3011db480d", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/bd042cd025a6974d718f1e1d4f70bf3011db480d", "committedDate": "2020-08-05T00:18:19Z", "message": "Serialize to YAML instead of SSZ."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7569c2b70ad02a5600090d37d637f22175addea7", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/7569c2b70ad02a5600090d37d637f22175addea7", "committedDate": "2020-08-05T00:39:05Z", "message": "Update expected filename."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzE5MDE4", "url": "https://github.com/ConsenSys/teku/pull/2498#pullrequestreview-461319018", "createdAt": "2020-08-05T03:45:12Z", "commit": {"oid": "7569c2b70ad02a5600090d37d637f22175addea7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMzo0NToxMlrOG75E9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMzo0NToxMlrOG75E9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ1NDMyNA==", "bodyText": "potentially if the ValidatorSigningRecord declaration is pulled out so this can collapse to one line, then it'd be a lot more readable.\nspotless wrapping it in this way really makes it difficult to read.", "url": "https://github.com/ConsenSys/teku/pull/2498#discussion_r465454324", "createdAt": "2020-08-05T03:45:12Z", "author": {"login": "rolfyone"}, "path": "ethereum/core/src/test/java/tech/pegasys/teku/core/signatures/ValidatorSigningRecordTest.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.core.signatures;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import com.google.common.primitives.UnsignedLong;\n+import java.util.List;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import tech.pegasys.teku.core.signatures.record.ValidatorSigningRecord;\n+\n+class ValidatorSigningRecordTest {\n+\n+  @Test\n+  void shouldRoundTripDefaultValuesToBytes() {\n+    final ValidatorSigningRecord record = new ValidatorSigningRecord();\n+    final Bytes bytes = record.toBytes();\n+    final ValidatorSigningRecord result = ValidatorSigningRecord.fromBytes(bytes);\n+    assertThat(result).isEqualToComparingFieldByField(record);\n+  }\n+\n+  @Test\n+  void shouldRoundTripToBytes() {\n+    final ValidatorSigningRecord record =\n+        new ValidatorSigningRecord(\n+            UnsignedLong.valueOf(10), UnsignedLong.valueOf(20), UnsignedLong.valueOf(30));\n+    final Bytes bytes = record.toBytes();\n+    final ValidatorSigningRecord result = ValidatorSigningRecord.fromBytes(bytes);\n+    assertThat(result).isEqualToComparingFieldByField(record);\n+  }\n+\n+  @ParameterizedTest(name = \"signBlock({0})\")\n+  @MethodSource(\"blockCases\")\n+  void signBlock(\n+      @SuppressWarnings(\"unused\") final String name,\n+      final ValidatorSigningRecord input,\n+      final UnsignedLong slot,\n+      final Optional<ValidatorSigningRecord> expectedResult) {\n+    assertThat(input.maySignBlock(slot)).isEqualTo(expectedResult);\n+  }\n+\n+  static List<Arguments> blockCases() {\n+    final ValidatorSigningRecord startingRecord =\n+        new ValidatorSigningRecord(\n+            UnsignedLong.valueOf(3), UnsignedLong.valueOf(6), UnsignedLong.valueOf(7));\n+    return List.of(\n+        Arguments.of(\n+            \"noExistingRecord\",\n+            new ValidatorSigningRecord(),\n+            UnsignedLong.ONE,\n+            Optional.of(\n+                new ValidatorSigningRecord(\n+                    UnsignedLong.ONE,\n+                    ValidatorSigningRecord.NEVER_SIGNED,\n+                    ValidatorSigningRecord.NEVER_SIGNED))),\n+        Arguments.of(\"=\", startingRecord, UnsignedLong.valueOf(3), Optional.empty()),\n+        Arguments.of(\"<\", startingRecord, UnsignedLong.valueOf(2), Optional.empty()),\n+        Arguments.of(\n+            \">\",\n+            startingRecord,\n+            UnsignedLong.valueOf(4),\n+            Optional.of(\n+                new ValidatorSigningRecord(\n+                    UnsignedLong.valueOf(4), UnsignedLong.valueOf(6), UnsignedLong.valueOf(7)))));\n+  }\n+\n+  @ParameterizedTest(name = \"maySignAttestation({0})\")\n+  @MethodSource(\"attestationCases\")\n+  void maySignAttestation(\n+      @SuppressWarnings(\"unused\") final String name,\n+      final ValidatorSigningRecord input,\n+      final UnsignedLong sourceEpoch,\n+      final UnsignedLong targetEpoch,\n+      final Optional<ValidatorSigningRecord> expectedResult) {\n+    assertThat(input.maySignAttestation(sourceEpoch, targetEpoch)).isEqualTo(expectedResult);\n+  }\n+\n+  static List<Arguments> attestationCases() {\n+    final ValidatorSigningRecord startingRecord =\n+        new ValidatorSigningRecord(\n+            UnsignedLong.ONE, UnsignedLong.valueOf(4), UnsignedLong.valueOf(6));\n+    return List.of(\n+        // No record\n+        attestationArguments(\n+            \"NEVER_SIGNED\",\n+            \"NEVER_SIGNED\",\n+            new ValidatorSigningRecord(),\n+            1,\n+            2,\n+            Optional.of(\n+                new ValidatorSigningRecord(\n+                    UnsignedLong.ZERO, UnsignedLong.valueOf(1), UnsignedLong.valueOf(2)))),\n+        attestationArguments(\"=\", \"=\", startingRecord, 4, 6, Optional.empty()),\n+        attestationArguments(\"=\", \"<\", startingRecord, 4, 5, Optional.empty()),\n+        attestationArguments(\n+            \"=\",\n+            \">\",\n+            startingRecord,\n+            4,\n+            7,\n+            Optional.of(\n+                new ValidatorSigningRecord(\n+                    UnsignedLong.ONE, UnsignedLong.valueOf(4), UnsignedLong.valueOf(7)))),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7569c2b70ad02a5600090d37d637f22175addea7"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21a5726d74fbc1c07853ce96558f26fdb3e384aa", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/21a5726d74fbc1c07853ce96558f26fdb3e384aa", "committedDate": "2020-08-05T03:55:43Z", "message": "Use helper methods to get lines to fit better."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f4d2419e989de6c28c101fcf6b78f4b2384661d", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/6f4d2419e989de6c28c101fcf6b78f4b2384661d", "committedDate": "2020-08-05T03:55:50Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into slashing-protection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fdd623600801ae00e033387dbae298922430c47", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/3fdd623600801ae00e033387dbae298922430c47", "committedDate": "2020-08-05T04:04:37Z", "message": "Use a subdir of validators in case we need the validator service to store more stuff."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMzI2Mjc1", "url": "https://github.com/ConsenSys/teku/pull/2498#pullrequestreview-461326275", "createdAt": "2020-08-05T04:11:06Z", "commit": {"oid": "3fdd623600801ae00e033387dbae298922430c47"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a80aa6bbf75c52f4d90015ae9ba30a5bf631e90", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/6a80aa6bbf75c52f4d90015ae9ba30a5bf631e90", "committedDate": "2020-08-05T04:11:19Z", "message": "Merge branch 'master' into slashing-protection"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3717, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}