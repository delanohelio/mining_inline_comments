{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMDc1MDg5", "number": 1698, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMjo1NzoyNFrOD3305g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMjo1Nzo0NlrOD331Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTEyOTM0OnYy", "diffSide": "RIGHT", "path": "util/src/main/java/tech/pegasys/artemis/util/config/Eth1DepositContractAddress.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMjo1NzoyNFrOGOYALw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMjo1NzoyNFrOGOYALw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcyNjUxMQ==", "bodyText": "I'd say this is just Eth1Address.  It's not actually deposit contract specific.", "url": "https://github.com/ConsenSys/teku/pull/1698#discussion_r417726511", "createdAt": "2020-04-30T02:57:24Z", "author": {"login": "ajsutton"}, "path": "util/src/main/java/tech/pegasys/artemis/util/config/Eth1DepositContractAddress.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util.config;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+import java.util.Objects;\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class Eth1DepositContractAddress {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b400fc57d8f394273abebc78543c050c76bb8ff"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTEyOTc4OnYy", "diffSide": "RIGHT", "path": "util/src/main/java/tech/pegasys/artemis/util/config/Eth1DepositContractAddress.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMjo1Nzo0NlrOGOYAcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMToyMjo1NlrOGO60zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcyNjU3OQ==", "bodyText": "nit: Probably better to make this a constant since the class is immutable.", "url": "https://github.com/ConsenSys/teku/pull/1698#discussion_r417726579", "createdAt": "2020-04-30T02:57:46Z", "author": {"login": "ajsutton"}, "path": "util/src/main/java/tech/pegasys/artemis/util/config/Eth1DepositContractAddress.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util.config;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+import java.util.Objects;\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class Eth1DepositContractAddress {\n+  /** The number of bytes in this value - i.e. 20 */\n+  private static final int SIZE = 20;\n+\n+  private final Bytes bytes;\n+\n+  public Eth1DepositContractAddress(Bytes bytes) {\n+    checkArgument(\n+        bytes.size() == SIZE,\n+        \"Bytes%s should be %s bytes, but was %s bytes.\",\n+        SIZE,\n+        SIZE,\n+        bytes.size());\n+    this.bytes = bytes;\n+  }\n+\n+  @Override\n+  public boolean equals(final Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    final Eth1DepositContractAddress address = (Eth1DepositContractAddress) o;\n+    return bytes.equals(address.bytes);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(bytes);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return bytes.toString();\n+  }\n+\n+  public static Eth1DepositContractAddress fromHexString(String value) {\n+    Bytes bytes = Bytes.fromHexString(value);\n+    return new Eth1DepositContractAddress(bytes);\n+  }\n+\n+  public String toHexString() {\n+    return bytes.toHexString();\n+  }\n+\n+  public Bytes toBytes() {\n+    return bytes;\n+  }\n+\n+  public static Eth1DepositContractAddress empty() {\n+    return new Eth1DepositContractAddress(Bytes.wrap(new byte[SIZE]));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b400fc57d8f394273abebc78543c050c76bb8ff"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODI5NzAzNw==", "bodyText": "we're not using empty at the moment, so I'll just remove it.", "url": "https://github.com/ConsenSys/teku/pull/1698#discussion_r418297037", "createdAt": "2020-04-30T21:22:56Z", "author": {"login": "rolfyone"}, "path": "util/src/main/java/tech/pegasys/artemis/util/config/Eth1DepositContractAddress.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.util.config;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+\n+import java.util.Objects;\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class Eth1DepositContractAddress {\n+  /** The number of bytes in this value - i.e. 20 */\n+  private static final int SIZE = 20;\n+\n+  private final Bytes bytes;\n+\n+  public Eth1DepositContractAddress(Bytes bytes) {\n+    checkArgument(\n+        bytes.size() == SIZE,\n+        \"Bytes%s should be %s bytes, but was %s bytes.\",\n+        SIZE,\n+        SIZE,\n+        bytes.size());\n+    this.bytes = bytes;\n+  }\n+\n+  @Override\n+  public boolean equals(final Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    final Eth1DepositContractAddress address = (Eth1DepositContractAddress) o;\n+    return bytes.equals(address.bytes);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(bytes);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return bytes.toString();\n+  }\n+\n+  public static Eth1DepositContractAddress fromHexString(String value) {\n+    Bytes bytes = Bytes.fromHexString(value);\n+    return new Eth1DepositContractAddress(bytes);\n+  }\n+\n+  public String toHexString() {\n+    return bytes.toHexString();\n+  }\n+\n+  public Bytes toBytes() {\n+    return bytes;\n+  }\n+\n+  public static Eth1DepositContractAddress empty() {\n+    return new Eth1DepositContractAddress(Bytes.wrap(new byte[SIZE]));\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzcyNjU3OQ=="}, "originalCommit": {"oid": "7b400fc57d8f394273abebc78543c050c76bb8ff"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3741, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}