{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1ODYxMjE3", "number": 2551, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTowMjowMlrOEXDfnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTowNTo1MVrOEXDiRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjA5OTUxOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/SingleQueryParameterUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTowMjowMlrOG-ocxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTozNDoyNlrOG-o98A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNzYyMg==", "bodyText": "can we just store UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH)) as a const? it's going to potentially happen a lot...", "url": "https://github.com/ConsenSys/teku/pull/2551#discussion_r468327622", "createdAt": "2020-08-11T05:02:02Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/SingleQueryParameterUtils.java", "diffHunk": "@@ -74,12 +75,23 @@ public static UInt64 getParameterValueAsUInt64(\n     }\n   }\n \n+  public static UInt64 getParameterValueAsEpoch(\n+      final Map<String, List<String>> parameterMap, final String key)\n+      throws IllegalArgumentException {\n+    final UInt64 value = getParameterValueAsUInt64(parameterMap, key);\n+    // Restrict valid epoch values to ones that can be converted to slot without overflowing\n+    if (value.isGreaterThan(UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMzNjExMg==", "bodyText": "It will happen at most once per RPC request and it equates to dividing a long, so we don't need to worry about the performance.\nI tend to avoid putting Constants values into constants because ironically, they aren't actually constant - they're defined by the network definition. Constants get set very early on in the startup sequence so generally they have the right values before static initialisers run but there's nothing that guarantees that and it always makes me worry that they'll get initialised in the wrong order and cause trouble.", "url": "https://github.com/ConsenSys/teku/pull/2551#discussion_r468336112", "createdAt": "2020-08-11T05:34:26Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/SingleQueryParameterUtils.java", "diffHunk": "@@ -74,12 +75,23 @@ public static UInt64 getParameterValueAsUInt64(\n     }\n   }\n \n+  public static UInt64 getParameterValueAsEpoch(\n+      final Map<String, List<String>> parameterMap, final String key)\n+      throws IllegalArgumentException {\n+    final UInt64 value = getParameterValueAsUInt64(parameterMap, key);\n+    // Restrict valid epoch values to ones that can be converted to slot without overflowing\n+    if (value.isGreaterThan(UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyNzYyMg=="}, "originalCommit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjEwNjMwOnYy", "diffSide": "RIGHT", "path": "data/serializer/src/main/java/tech/pegasys/teku/api/schema/ValidatorsRequest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNTowNTo1MVrOG-oghw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNToyNjoyNlrOG-o1Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyODU4Mw==", "bodyText": "the endpoint creating this request should probably be calling the above query util to get the epoch argument? then this check is probably not required as its already validated...", "url": "https://github.com/ConsenSys/teku/pull/2551#discussion_r468328583", "createdAt": "2020-08-11T05:05:51Z", "author": {"login": "rolfyone"}, "path": "data/serializer/src/main/java/tech/pegasys/teku/api/schema/ValidatorsRequest.java", "diffHunk": "@@ -36,5 +37,10 @@ public ValidatorsRequest(\n       @JsonProperty(value = \"pubkeys\", required = true) final List<BLSPubKey> pubkeys) {\n     this.epoch = epoch;\n     this.pubkeys = pubkeys;\n+    // Restrict valid epoch values to ones that can be converted to slot without overflowing\n+    if (epoch != null\n+        && epoch.isGreaterThan(UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH))) {\n+      throw new IllegalArgumentException(\"Epoch is too large.\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyODc5OQ==", "bodyText": "actually, it must be json parsing input, never mind, we'll need to do this here.", "url": "https://github.com/ConsenSys/teku/pull/2551#discussion_r468328799", "createdAt": "2020-08-11T05:06:43Z", "author": {"login": "rolfyone"}, "path": "data/serializer/src/main/java/tech/pegasys/teku/api/schema/ValidatorsRequest.java", "diffHunk": "@@ -36,5 +37,10 @@ public ValidatorsRequest(\n       @JsonProperty(value = \"pubkeys\", required = true) final List<BLSPubKey> pubkeys) {\n     this.epoch = epoch;\n     this.pubkeys = pubkeys;\n+    // Restrict valid epoch values to ones that can be converted to slot without overflowing\n+    if (epoch != null\n+        && epoch.isGreaterThan(UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH))) {\n+      throw new IllegalArgumentException(\"Epoch is too large.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyODU4Mw=="}, "originalCommit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMzMzkwMw==", "bodyText": "Yep, and I couldn't even reuse the code because it was in different modules. :(", "url": "https://github.com/ConsenSys/teku/pull/2551#discussion_r468333903", "createdAt": "2020-08-11T05:26:26Z", "author": {"login": "ajsutton"}, "path": "data/serializer/src/main/java/tech/pegasys/teku/api/schema/ValidatorsRequest.java", "diffHunk": "@@ -36,5 +37,10 @@ public ValidatorsRequest(\n       @JsonProperty(value = \"pubkeys\", required = true) final List<BLSPubKey> pubkeys) {\n     this.epoch = epoch;\n     this.pubkeys = pubkeys;\n+    // Restrict valid epoch values to ones that can be converted to slot without overflowing\n+    if (epoch != null\n+        && epoch.isGreaterThan(UInt64.MAX_VALUE.dividedBy(Constants.SLOTS_PER_EPOCH))) {\n+      throw new IllegalArgumentException(\"Epoch is too large.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODMyODU4Mw=="}, "originalCommit": {"oid": "59f1b7b17d7056bc7ff6a78bfd3fd69a9d06d8e7"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3391, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}