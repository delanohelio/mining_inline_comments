{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MDUyMDIw", "number": 1366, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNTo0NTo0NlrODnVv4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDo0Nzo1NVrODnanig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTc3Mzc4OnYy", "diffSide": "RIGHT", "path": "config/config.toml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNTo0NTo0NlrOF1R51w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNTo0NTo0NlrOF1R51w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQxMjE4Mw==", "bodyText": "ok thats not good.", "url": "https://github.com/ConsenSys/teku/pull/1366#discussion_r391412183", "createdAt": "2020-03-12T05:45:46Z", "author": {"login": "rolfyone"}, "path": "config/config.toml", "diffHunk": "@@ -51,4 +51,4 @@ startFromDisk = false\n \n [beaconrestapi]\n portNumber = 5051\n-enableSwagger = false\n+enableSwagger = true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b0f23c8af74f305b71bc49f938099cf826909c0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjU2ODc5OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/PostValidators.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDo0NzoxOVrOF1Zj-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowNjoyMlrOF1tjKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUzNzY1Ng==", "bodyText": "Is this still showing as unused?", "url": "https://github.com/ConsenSys/teku/pull/1366#discussion_r391537656", "createdAt": "2020-03-12T10:47:19Z", "author": {"login": "mark-terry"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/PostValidators.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.handlers.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.CacheControlUtils.CACHE_NONE;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.core.util.Header;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.Optional;\n+import tech.pegasys.artemis.api.ChainDataProvider;\n+import tech.pegasys.artemis.api.schema.BeaconValidators;\n+import tech.pegasys.artemis.api.schema.ValidatorWithIndex;\n+import tech.pegasys.artemis.api.schema.ValidatorsRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+\n+public class PostValidators implements Handler {\n+\n+  @SuppressWarnings(\"unused\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4474256803f3f1afdeb047d8546455cb0397148b"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NTEyOA==", "bodyText": "ooh i hope not! I'll remove that suppression.", "url": "https://github.com/ConsenSys/teku/pull/1366#discussion_r391865128", "createdAt": "2020-03-12T20:06:22Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/PostValidators.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.handlers.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.CacheControlUtils.CACHE_NONE;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.core.util.Header;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.Optional;\n+import tech.pegasys.artemis.api.ChainDataProvider;\n+import tech.pegasys.artemis.api.schema.BeaconValidators;\n+import tech.pegasys.artemis.api.schema.ValidatorWithIndex;\n+import tech.pegasys.artemis.api.schema.ValidatorsRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+\n+public class PostValidators implements Handler {\n+\n+  @SuppressWarnings(\"unused\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUzNzY1Ng=="}, "originalCommit": {"oid": "4474256803f3f1afdeb047d8546455cb0397148b"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjU3MTYyOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/PostValidators.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDo0Nzo1NVrOF1Zlfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDowNjowMFrOF1tiBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUzODA0Nw==", "bodyText": "Do we need to describe the default behaviour if no epoch is specified?", "url": "https://github.com/ConsenSys/teku/pull/1366#discussion_r391538047", "createdAt": "2020-03-12T10:47:55Z", "author": {"login": "mark-terry"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/PostValidators.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.handlers.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.CacheControlUtils.CACHE_NONE;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.core.util.Header;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.Optional;\n+import tech.pegasys.artemis.api.ChainDataProvider;\n+import tech.pegasys.artemis.api.schema.BeaconValidators;\n+import tech.pegasys.artemis.api.schema.ValidatorWithIndex;\n+import tech.pegasys.artemis.api.schema.ValidatorsRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+\n+public class PostValidators implements Handler {\n+\n+  @SuppressWarnings(\"unused\")\n+  private final ChainDataProvider chainDataProvider;\n+\n+  public PostValidators(\n+      final ChainDataProvider chainDataProvider, final JsonProvider jsonProvider) {\n+    this.chainDataProvider = chainDataProvider;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  public static final String ROUTE = \"/beacon/validators\";\n+  private final JsonProvider jsonProvider;\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.POST,\n+      summary = \"Returns validators that match the information specified.\",\n+      tags = {TAG_BEACON},\n+      description =\n+          \"Takes a list of validator public keys and optionally an epoch, and returns information about them.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4474256803f3f1afdeb047d8546455cb0397148b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg2NDgzNw==", "bodyText": "I'll expand the description to include information about the current state when epoch is missing, and i can put in a line about what happens when pubkeys aren't found too.", "url": "https://github.com/ConsenSys/teku/pull/1366#discussion_r391864837", "createdAt": "2020-03-12T20:06:00Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/beacon/PostValidators.java", "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.artemis.beaconrestapi.handlers.beacon;\n+\n+import static javax.servlet.http.HttpServletResponse.SC_BAD_REQUEST;\n+import static javax.servlet.http.HttpServletResponse.SC_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.CacheControlUtils.CACHE_NONE;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.NO_CONTENT_PRE_GENESIS;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_INTERNAL_ERROR;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_NO_CONTENT;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.RES_OK;\n+import static tech.pegasys.artemis.beaconrestapi.RestApiConstants.TAG_BEACON;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import io.javalin.core.util.Header;\n+import io.javalin.http.Context;\n+import io.javalin.http.Handler;\n+import io.javalin.plugin.openapi.annotations.HttpMethod;\n+import io.javalin.plugin.openapi.annotations.OpenApi;\n+import io.javalin.plugin.openapi.annotations.OpenApiContent;\n+import io.javalin.plugin.openapi.annotations.OpenApiRequestBody;\n+import io.javalin.plugin.openapi.annotations.OpenApiResponse;\n+import java.util.Optional;\n+import tech.pegasys.artemis.api.ChainDataProvider;\n+import tech.pegasys.artemis.api.schema.BeaconValidators;\n+import tech.pegasys.artemis.api.schema.ValidatorWithIndex;\n+import tech.pegasys.artemis.api.schema.ValidatorsRequest;\n+import tech.pegasys.artemis.beaconrestapi.schema.BadRequest;\n+import tech.pegasys.artemis.provider.JsonProvider;\n+\n+public class PostValidators implements Handler {\n+\n+  @SuppressWarnings(\"unused\")\n+  private final ChainDataProvider chainDataProvider;\n+\n+  public PostValidators(\n+      final ChainDataProvider chainDataProvider, final JsonProvider jsonProvider) {\n+    this.chainDataProvider = chainDataProvider;\n+    this.jsonProvider = jsonProvider;\n+  }\n+\n+  public static final String ROUTE = \"/beacon/validators\";\n+  private final JsonProvider jsonProvider;\n+\n+  @OpenApi(\n+      path = ROUTE,\n+      method = HttpMethod.POST,\n+      summary = \"Returns validators that match the information specified.\",\n+      tags = {TAG_BEACON},\n+      description =\n+          \"Takes a list of validator public keys and optionally an epoch, and returns information about them.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUzODA0Nw=="}, "originalCommit": {"oid": "4474256803f3f1afdeb047d8546455cb0397148b"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2541, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}