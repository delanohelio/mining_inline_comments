{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTkzMjQ4", "number": 1098, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMToyODo1OVrODZU3ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjozNzo0NVrODZVgAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODgyOTE1OnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMToyODo1OVrOFfplhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNTo0MjoxMVrOFf-sYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODczMTUyNQ==", "bodyText": "I think this will give us the slot of the best bock, not the current slot.  So if we haven't completed sync this would be a slot from the distant past and we'd disconnect most peers.  I think we want to use get_current_slot(store) which will give us the slot based on the time, not what blocks have been imported.", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r368731525", "createdAt": "2020-01-20T21:28:59Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -112,11 +114,22 @@ public static PeerChainValidator create(\n       return SafeFuture.completedFuture(true);\n     }\n \n-    // Check whether finalized checkpoints are compatible\n     final Checkpoint finalizedCheckpoint = storageClient.getStore().getFinalizedCheckpoint();\n     final UnsignedLong finalizedEpoch = finalizedCheckpoint.getEpoch();\n     final UnsignedLong remoteFinalizedEpoch = status.getFinalizedEpoch();\n+    final UnsignedLong currentEpoch = compute_epoch_at_slot(storageClient.getBestSlot());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9270947856c1462d6275ddf70d74d541901f83e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTA3NzM0NA==", "bodyText": "whoops - good catch :D", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r369077344", "createdAt": "2020-01-21T15:42:11Z", "author": {"login": "mbaxter"}, "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -112,11 +114,22 @@ public static PeerChainValidator create(\n       return SafeFuture.completedFuture(true);\n     }\n \n-    // Check whether finalized checkpoints are compatible\n     final Checkpoint finalizedCheckpoint = storageClient.getStore().getFinalizedCheckpoint();\n     final UnsignedLong finalizedEpoch = finalizedCheckpoint.getEpoch();\n     final UnsignedLong remoteFinalizedEpoch = status.getFinalizedEpoch();\n+    final UnsignedLong currentEpoch = compute_epoch_at_slot(storageClient.getBestSlot());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODczMTUyNQ=="}, "originalCommit": {"oid": "b9270947856c1462d6275ddf70d74d541901f83e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODkzMjUwOnYy", "diffSide": "RIGHT", "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjozNzo0NVrOFfqi7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjozNzo0NVrOFfqi7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0NzI0Ng==", "bodyText": "nit: It's probably simpler to say:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        && remoteFinalizedEpoch.compareTo(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)) > 0);\n          \n          \n            \n                        && !remoteFinalizedEpoch.equals(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)));\n          \n      \n    \n    \n  \n\nPossibly slightly more accurate too if GENESIS_BLOCK isn't actually 0.", "url": "https://github.com/ConsenSys/teku/pull/1098#discussion_r368747246", "createdAt": "2020-01-20T22:37:45Z", "author": {"login": "ajsutton"}, "path": "networking/eth2/src/main/java/tech/pegasys/artemis/networking/eth2/peers/PeerChainValidator.java", "diffHunk": "@@ -128,6 +141,15 @@ public static PeerChainValidator create(\n     }\n   }\n \n+  private boolean remoteEpochIsInvalid(\n+      final UnsignedLong currentEpoch, final UnsignedLong remoteFinalizedEpoch) {\n+    // Remote finalized epoch is invalid if it is from the future\n+    return remoteFinalizedEpoch.compareTo(currentEpoch) > 0\n+        // Remote finalized epoch is invalid if is from the current epoch (unless we're at genesis)\n+        || (remoteFinalizedEpoch.compareTo(currentEpoch) == 0\n+            && remoteFinalizedEpoch.compareTo(UnsignedLong.valueOf(Constants.GENESIS_EPOCH)) > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9270947856c1462d6275ddf70d74d541901f83e"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2771, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}