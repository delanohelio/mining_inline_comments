{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NjM2NDM0", "number": 2782, "title": "2756 implement /eth/v1/validator/duties/attester/:epoch", "bodyText": "Added endpoint for the standard api and test cases.\n\n\nManually verified a random sample of validators with the existing duties endpoint.\n\n\nthere will be integration work to use this new endpoint where the output is converted to ValidatorDuties internal structure, as currently there is a requirement that the duties contains both attester and proposer duties, but the new format will separate them.\n\n\nStarted adding list utilities for query parameters containing lists of elements.\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-09-11T04:32:38Z", "url": "https://github.com/ConsenSys/teku/pull/2782", "merged": true, "mergeCommit": {"oid": "8e1a538ba293cdea73db7dd374998331a9a5f7e1"}, "closed": true, "closedAt": "2020-09-14T05:21:24Z", "author": {"login": "rolfyone"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHniTKAH2gAyNDg0NjM2NDM0OjlmM2JiMzU0ZDcxMTI5NDY5MTc1ZGM1ZGM2NjJkZWZjNjEzZWFkNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIr-9dgH2gAyNDg0NjM2NDM0OjRmNDk3Y2YxOWJiMzdhMzlkZjRiNTRmYjllYTQ2YTNiZDc2YjU4N2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9f3bb354d71129469175dc5dc662defc613ead64", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/9f3bb354d71129469175dc5dc662defc613ead64", "committedDate": "2020-09-10T21:18:28Z", "message": "WIP\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfce0b19f6da1e9fcd36a021b79a958182a9a28d", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/bfce0b19f6da1e9fcd36a021b79a958182a9a28d", "committedDate": "2020-09-10T21:18:52Z", "message": "Merge remote-tracking branch 'upstream/master' into 2756-validator-attester-duties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "910ee2ed0f9e1d5e3d3b0ed08c1c38949f34bfd9", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/910ee2ed0f9e1d5e3d3b0ed08c1c38949f34bfd9", "committedDate": "2020-09-11T02:07:59Z", "message": "WIP\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dde62e3a768c664d35c948a0f5b12cc3d9a49e67", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/dde62e3a768c664d35c948a0f5b12cc3d9a49e67", "committedDate": "2020-09-11T02:08:10Z", "message": "Merge remote-tracking branch 'upstream/master' into 2756-validator-attester-duties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ea1df9b2459704fb4ebb061765c9731c8dcc480", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/0ea1df9b2459704fb4ebb061765c9731c8dcc480", "committedDate": "2020-09-11T04:30:36Z", "message": "provider GetAttesterDuties\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56a2011a5cb78629627799a71d43187875016db8", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/56a2011a5cb78629627799a71d43187875016db8", "committedDate": "2020-09-11T06:32:01Z", "message": "unit test for endpoint\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "608570a08e833ddacca3e9e4eaf2d20c7496dc0e", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/608570a08e833ddacca3e9e4eaf2d20c7496dc0e", "committedDate": "2020-09-13T20:56:46Z", "message": "Merge remote-tracking branch 'upstream/master' into 2756-validator-attester-duties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d635a04cfff9c807e4382c97075bb6e822b6e81b", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/d635a04cfff9c807e4382c97075bb6e822b6e81b", "committedDate": "2020-09-13T23:05:37Z", "message": "test cases, cleanup\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzU4MTkx", "url": "https://github.com/ConsenSys/teku/pull/2782#pullrequestreview-487358191", "createdAt": "2020-09-14T00:44:48Z", "commit": {"oid": "d635a04cfff9c807e4382c97075bb6e822b6e81b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMDo0NDo0OVrOHRAyog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMDo0NDo0OVrOHRAyog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYwMDgwMg==", "bodyText": "I'm pretty sure this isn't called anywhere currently, because the empty list would cause problems...\nI'm not overly concerned, but when we switch to using this remote implementation it'll need to be resolved.", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487600802", "createdAt": "2020-09-14T00:44:49Z", "author": {"login": "rolfyone"}, "path": "validator/remote/src/main/java/tech/pegasys/teku/validator/remote/RemoteValidatorApiHandler.java", "diffHunk": "@@ -96,6 +97,31 @@ private ForkInfo mapGetForkResponse(final GetForkResponse response) {\n         });\n   }\n \n+  @Override\n+  public SafeFuture<Optional<List<ValidatorDuties>>> getAttestationDuties(\n+      final UInt64 epoch, final Collection<Integer> validatorIndexes) {\n+    return asyncRunner.runAsync(\n+        () -> {\n+          final List<ValidatorDuties> validatorDuties =\n+              apiClient.getAttestationDuties(epoch, validatorIndexes).stream()\n+                  .map(this::mapToApiValidatorDuties)\n+                  .collect(Collectors.toList());\n+\n+          return Optional.of(validatorDuties);\n+        });\n+  }\n+\n+  private ValidatorDuties mapToApiValidatorDuties(final AttesterDuty attesterDuty) {\n+    return ValidatorDuties.withDuties(\n+        attesterDuty.pubkey.asBLSPublicKey(),\n+        attesterDuty.validatorIndex.intValue(),\n+        attesterDuty.committeeIndex.intValue(),\n+        attesterDuty.validatorCommitteeIndex.intValue(),\n+        attesterDuty.committeeLength.intValue(),\n+        List.of(),\n+        attesterDuty.slot);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d635a04cfff9c807e4382c97075bb6e822b6e81b"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6465244d23b49a5a0d034e288594578144308b7", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/f6465244d23b49a5a0d034e288594578144308b7", "committedDate": "2020-09-14T00:52:19Z", "message": "not ready to deprecate this endpoint, as only partially replaced by the attestation duties endpoint.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff516b5f8ebbca4fc5502d8ba575bcd50496fc0a", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/ff516b5f8ebbca4fc5502d8ba575bcd50496fc0a", "committedDate": "2020-09-14T00:54:51Z", "message": "Merge remote-tracking branch 'upstream/master' into 2756-validator-attester-duties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzYyMjI4", "url": "https://github.com/ConsenSys/teku/pull/2782#pullrequestreview-487362228", "createdAt": "2020-09-14T01:10:55Z", "commit": {"oid": "ff516b5f8ebbca4fc5502d8ba575bcd50496fc0a"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMToxMDo1NVrOHRBBwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwMTo0NjowNVrOHRBb2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYwNDY3Mw==", "bodyText": "Slightly confused that we treat , as an item separator for int lists but not for string lists.  Shouldn't we be consistent?\nOr maybe this method should just be private?", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487604673", "createdAt": "2020-09-14T01:10:55Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/ListQueryParameterUtils.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi;\n+\n+import com.google.common.base.Splitter;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ListQueryParameterUtils {\n+  public static final String MISSING_QUERY_PARAMETER = \"Query parameter %s not found\";\n+  public static final Splitter splitter = Splitter.on(',').trimResults().omitEmptyStrings();\n+\n+  public static List<String> validateQueryParameter(\n+      final Map<String, List<String>> parameterMap, final String key)\n+      throws IllegalArgumentException {\n+    if (parameterMap.containsKey(key)) {\n+      final List<String> values = parameterMap.get(key);\n+      if (values.isEmpty()) {\n+        throw new IllegalArgumentException(String.format(MISSING_QUERY_PARAMETER, key));\n+      }\n+      // if its an array, we should filter any individual empty values out for sanity\n+      return parameterMap.get(key).stream()\n+          .filter(StringUtils::isNotEmpty)\n+          .collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff516b5f8ebbca4fc5502d8ba575bcd50496fc0a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYwNjE0Nw==", "bodyText": "Wes should check the future is actually completed first so we don't hang forever:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String data = future.get();\n          \n          \n            \n                assertThat(future).isCompleted();\n          \n          \n            \n                String data = future.join();\n          \n      \n    \n    \n  \n\nThen using join instead of get will let you drop most of the declared exceptions.", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487606147", "createdAt": "2020-09-14T01:18:51Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/AbstractBeaconHandlerTest.java", "diffHunk": "@@ -57,6 +63,14 @@ protected void verifyStatusCode(final int statusCode) {\n     return jsonProvider.jsonToObject(val, clazz);\n   }\n \n+  protected <T> T getResponseFromFuture(Class<T> clazz)\n+      throws ExecutionException, InterruptedException, JsonProcessingException {\n+    verify(context).result(args.capture());\n+    SafeFuture<String> future = args.getValue();\n+    String data = future.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff516b5f8ebbca4fc5502d8ba575bcd50496fc0a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYwNjM1OQ==", "bodyText": "We seem to only be testing the integer method, not validateQueryParameter.", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487606359", "createdAt": "2020-09-14T01:19:55Z", "author": {"login": "ajsutton"}, "path": "data/beaconrestapi/src/test/java/tech/pegasys/teku/beaconrestapi/ListQueryParameterUtilsTest.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.beaconrestapi;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.jupiter.api.Test;\n+\n+public class ListQueryParameterUtilsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff516b5f8ebbca4fc5502d8ba575bcd50496fc0a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYwNjgwMg==", "bodyText": "Wouldn't Optional.empty() mean the data is unavailable? Should we be returning Optional.of(emptyList())? ie we have supplied all the requested data, there just isn't any.", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487606802", "createdAt": "2020-09-14T01:22:26Z", "author": {"login": "ajsutton"}, "path": "data/provider/src/main/java/tech/pegasys/teku/api/ValidatorDataProvider.java", "diffHunk": "@@ -215,4 +216,32 @@ public void subscribeToPersistentSubnets(final List<SubnetSubscription> subnetSu\n                 .collect(Collectors.toSet());\n     validatorApiChannel.subscribeToPersistentSubnets(internalSubnetSubscriptions);\n   }\n+\n+  public SafeFuture<Optional<List<AttesterDuty>>> getAttesterDuties(\n+      final UInt64 epoch, final List<Integer> indexes) {\n+    if (indexes.isEmpty()) {\n+      return SafeFuture.completedFuture(Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff516b5f8ebbca4fc5502d8ba575bcd50496fc0a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxMTIzNQ==", "bodyText": "This method seems to be converting from index, to public key, then a couple of levels down getValidatorDutiesFromState converts from public key back to index.\nGiven we don't need the proposal slots it could just call createValidatorDuties directly and pass an empty map for the proposal slots. Ideally though we'd split the internal representation of ValidatorDuties in two so internally we calculate attestations and proposals separately, then for the existing API we combine them at the API layer.  Currently we're calculating proposer duties when the get attestations endpoint is called.", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487611235", "createdAt": "2020-09-14T01:45:28Z", "author": {"login": "ajsutton"}, "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/ValidatorApiHandler.java", "diffHunk": "@@ -325,6 +346,16 @@ private boolean headBlockIsTooFarBehind() {\n     return headEpoch.plus(1).isLessThan(currentEpoch);\n   }\n \n+  private List<ValidatorDuties> getValidatorDutiesFromIndexes(\n+      final BeaconState state, final UInt64 epoch, final Collection<Integer> validatorIndexes) {\n+    List<BLSPublicKey> publicKeys =\n+        validatorIndexes.stream()\n+            .map(index -> state.getValidators().get(index))\n+            .map(Validator::getPubkey)\n+            .collect(toList());\n+    return getValidatorDutiesFromState(state, epoch, publicKeys);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff516b5f8ebbca4fc5502d8ba575bcd50496fc0a"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYxMTM1Mw==", "bodyText": "This would work out better if we split ValidatorDuties into separate parts.", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487611353", "createdAt": "2020-09-14T01:46:05Z", "author": {"login": "ajsutton"}, "path": "validator/remote/src/main/java/tech/pegasys/teku/validator/remote/RemoteValidatorApiHandler.java", "diffHunk": "@@ -96,6 +97,31 @@ private ForkInfo mapGetForkResponse(final GetForkResponse response) {\n         });\n   }\n \n+  @Override\n+  public SafeFuture<Optional<List<ValidatorDuties>>> getAttestationDuties(\n+      final UInt64 epoch, final Collection<Integer> validatorIndexes) {\n+    return asyncRunner.runAsync(\n+        () -> {\n+          final List<ValidatorDuties> validatorDuties =\n+              apiClient.getAttestationDuties(epoch, validatorIndexes).stream()\n+                  .map(this::mapToApiValidatorDuties)\n+                  .collect(Collectors.toList());\n+\n+          return Optional.of(validatorDuties);\n+        });\n+  }\n+\n+  private ValidatorDuties mapToApiValidatorDuties(final AttesterDuty attesterDuty) {\n+    return ValidatorDuties.withDuties(\n+        attesterDuty.pubkey.asBLSPublicKey(),\n+        attesterDuty.validatorIndex.intValue(),\n+        attesterDuty.committeeIndex.intValue(),\n+        attesterDuty.validatorCommitteeIndex.intValue(),\n+        attesterDuty.committeeLength.intValue(),\n+        List.of(),\n+        attesterDuty.slot);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzYwMDgwMg=="}, "originalCommit": {"oid": "d635a04cfff9c807e4382c97075bb6e822b6e81b"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07629784c49f3f36f31df7d1c4cbc6f4cf75757d", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/07629784c49f3f36f31df7d1c4cbc6f4cf75757d", "committedDate": "2020-09-14T04:00:27Z", "message": "review feedback.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NDAzNTQw", "url": "https://github.com/ConsenSys/teku/pull/2782#pullrequestreview-487403540", "createdAt": "2020-09-14T04:11:09Z", "commit": {"oid": "07629784c49f3f36f31df7d1c4cbc6f4cf75757d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNDoxMTowOVrOHRDRQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQwNDoxMjozNlrOHRDSTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY0MTQxMQ==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(future).isCompleted();\n          \n          \n            \n                Optional<List<AttesterDuty>> maybeData = future.join();\n          \n          \n            \n                assertThat(maybeData.isPresent()).isTrue();\n          \n          \n            \n                assertThat(maybeData.get()).isEmpty();\n          \n          \n            \n                assertThatSafeFuture(future).isCompletedWithEmptyOptional();", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487641411", "createdAt": "2020-09-14T04:11:09Z", "author": {"login": "ajsutton"}, "path": "data/provider/src/test/java/tech/pegasys/teku/api/ValidatorDataProviderTest.java", "diffHunk": "@@ -363,6 +365,53 @@ public void submitSignedBlock_shouldReturn500ForInternalError()\n     assertThat(validatorBlockResultSafeFuture.get().getResponseCode()).isEqualTo(500);\n   }\n \n+  @Test\n+  public void getAttesterDuties_shouldHandleEmptyIndexesList() {\n+    final SafeFuture<Optional<List<AttesterDuty>>> future =\n+        provider.getAttesterDuties(UInt64.ONE, List.of());\n+    assertThat(future).isCompleted();\n+    Optional<List<AttesterDuty>> maybeData = future.join();\n+    assertThat(maybeData.isPresent()).isTrue();\n+    assertThat(maybeData.get()).isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07629784c49f3f36f31df7d1c4cbc6f4cf75757d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY0MTY3Ng==", "bodyText": "This is way into the personal preference category but I tend to use Collections.emptyMap() over Map.of() as it reads better. Works either way though.", "url": "https://github.com/ConsenSys/teku/pull/2782#discussion_r487641676", "createdAt": "2020-09-14T04:12:36Z", "author": {"login": "ajsutton"}, "path": "validator/coordinator/src/main/java/tech/pegasys/teku/validator/coordinator/ValidatorApiHandler.java", "diffHunk": "@@ -345,6 +365,24 @@ private ValidatorDuties getDutiesForValidator(\n         .orElseGet(() -> ValidatorDuties.noDuties(key));\n   }\n \n+  private List<ValidatorDuties> getValidatorDutiesFromIndexes(\n+      final BeaconState state, final UInt64 epoch, final Collection<Integer> validatorIndexes) {\n+    return validatorIndexes.stream()\n+        .map(index -> createValidatorDuties(state, epoch, index))\n+        .collect(toList());\n+  }\n+\n+  private ValidatorDuties createValidatorDuties(\n+      final BeaconState state, final UInt64 epoch, final Integer validatorIndex) {\n+    try {\n+      BLSPublicKey pkey = state.getValidators().get(validatorIndex).getPubkey();\n+      return createValidatorDuties(Map.of(), pkey, state, epoch, validatorIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07629784c49f3f36f31df7d1c4cbc6f4cf75757d"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e66c41098c9fa7a4b9824f7d44727feed31cab38", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/e66c41098c9fa7a4b9824f7d44727feed31cab38", "committedDate": "2020-09-14T04:19:30Z", "message": "Update data/provider/src/test/java/tech/pegasys/teku/api/ValidatorDataProviderTest.java\n\nCo-authored-by: Adrian Sutton <adrian@symphonious.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f32946154fd015db1e32e4370db37b1217b5aa02", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/f32946154fd015db1e32e4370db37b1217b5aa02", "committedDate": "2020-09-14T04:26:22Z", "message": "review feedback.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a41d40b30b56372b221fe5dffd6581a0bffae46a", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/a41d40b30b56372b221fe5dffd6581a0bffae46a", "committedDate": "2020-09-14T04:33:09Z", "message": "missing dependency\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae12ff6bf40d1030a10da28ee7203349ed76d48", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/2ae12ff6bf40d1030a10da28ee7203349ed76d48", "committedDate": "2020-09-14T04:40:30Z", "message": "revert suggestion, it broke the test.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f497cf19bb37a39df4b54fb9ea46a3bd76b587b", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/4f497cf19bb37a39df4b54fb9ea46a3bd76b587b", "committedDate": "2020-09-14T05:03:19Z", "message": "revert suggestion, it broke the test.\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3421, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}