{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMDAwMjE5", "number": 1967, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyMTo0OVrOD_2gLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozNzo1OVrOD_2x4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjc5ODUyOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/BeaconRestApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyMTo0OVrOGaww9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyMTo0OVrOGaww9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNTEyNw==", "bodyText": "whitelisting is more of a 'business as usual', i'd leave the log statement as debug.\nAlso, i can't see any test cases exercising any of this logic...\n\ndoes substring get me around the logic (my.host allowing my.)\ndoes it actually block me if i'm not in the list\ndoes star let me in\ndoes my ip / hostname let me in\n\nThis may have to be slightly restructured to allow testing to happen cleanly... but it shouldn't be huge, just let me know if you need a hand.", "url": "https://github.com/ConsenSys/teku/pull/1967#discussion_r430715127", "createdAt": "2020-05-26T21:21:49Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/teku/beaconrestapi/BeaconRestApi.java", "diffHunk": "@@ -82,6 +89,38 @@ private void initialize(final DataProvider dataProvider, final TekuConfiguration\n     addCustomErrorPages(configuration);\n   }\n \n+  private void addHostWhitelistHandler(final TekuConfiguration configuration) {\n+    app.before(\n+        (ctx) -> {\n+          String header = ctx.header(\"host\");\n+          Optional<String> optionalHost = getAndValidateHostHeader(header);\n+          if (!configuration.getRestApiHostWhitelist().contains(\"*\")\n+              && (!optionalHost.isPresent()\n+                  || !hostIsInWhitelist(configuration, optionalHost.get()))) {\n+            ctx.status(SC_FORBIDDEN);\n+            LOG.info(\"Host not authorized \" + optionalHost);\n+          }\n+        });\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bd540e8f4d4b72ff55168ddd38dfaade7fbd12b"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjgwMTg4OnYy", "diffSide": "RIGHT", "path": "teku/src/test/java/tech/pegasys/teku/cli/BeaconNodeCommandTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyMjo1NVrOGawzEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMzoyNjoyMFrOGazlHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNTY2NA==", "bodyText": "these should be defaults, did the tests not work without it? that would be a concern...", "url": "https://github.com/ConsenSys/teku/pull/1967#discussion_r430715664", "createdAt": "2020-05-26T21:22:55Z", "author": {"login": "rolfyone"}, "path": "teku/src/test/java/tech/pegasys/teku/cli/BeaconNodeCommandTest.java", "diffHunk": "@@ -306,7 +306,8 @@ private TekuConfigurationBuilder expectedConfigurationBuilder() {\n         .setRestApiPort(5051)\n         .setRestApiDocsEnabled(false)\n         .setRestApiEnabled(false)\n-        .setRestApiInterface(\"127.0.0.1\");\n+        .setRestApiInterface(\"127.0.0.1\")\n+        .setRestApiHostWhitelist(List.of(\"127.0.0.1\", \"localhost\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bd540e8f4d4b72ff55168ddd38dfaade7fbd12b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc2MTI0Ng==", "bodyText": "this is building the \"expected\" config to compare the real one with", "url": "https://github.com/ConsenSys/teku/pull/1967#discussion_r430761246", "createdAt": "2020-05-26T23:26:20Z", "author": {"login": "macfarla"}, "path": "teku/src/test/java/tech/pegasys/teku/cli/BeaconNodeCommandTest.java", "diffHunk": "@@ -306,7 +306,8 @@ private TekuConfigurationBuilder expectedConfigurationBuilder() {\n         .setRestApiPort(5051)\n         .setRestApiDocsEnabled(false)\n         .setRestApiEnabled(false)\n-        .setRestApiInterface(\"127.0.0.1\");\n+        .setRestApiInterface(\"127.0.0.1\")\n+        .setRestApiHostWhitelist(List.of(\"127.0.0.1\", \"localhost\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNTY2NA=="}, "originalCommit": {"oid": "6bd540e8f4d4b72ff55168ddd38dfaade7fbd12b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjg0Mzg0OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractBeaconRestAPIIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozNzo1OVrOGaxNTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozNzo1OVrOGaxNTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMjM4Mw==", "bodyText": "we could actually have another test alongside these that creates a config with different elements int he whitelist to show it working for real if we wanted to...", "url": "https://github.com/ConsenSys/teku/pull/1967#discussion_r430722383", "createdAt": "2020-05-26T21:37:59Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/integration-test/java/tech/pegasys/teku/beaconrestapi/AbstractBeaconRestAPIIntegrationTest.java", "diffHunk": "@@ -46,7 +47,11 @@\n public abstract class AbstractBeaconRestAPIIntegrationTest {\n   static final okhttp3.MediaType JSON = okhttp3.MediaType.parse(\"application/json; charset=utf-8\");\n   static final TekuConfiguration config =\n-      TekuConfiguration.builder().setRestApiPort(0).setRestApiDocsEnabled(false).build();\n+      TekuConfiguration.builder()\n+          .setRestApiPort(0)\n+          .setRestApiDocsEnabled(false)\n+          .setRestApiHostWhitelist(List.of(\"127.0.0.1\", \"localhost\"))\n+          .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bd540e8f4d4b72ff55168ddd38dfaade7fbd12b"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3662, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}