{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODc0MTMw", "number": 1335, "title": "Multithreaded channels", "bodyText": "PR Description\nAdd support to EventChannel for handling events using multiple threads.  The number of threads to use is set when subscribing so can vary per subscriber.\nThis is more ground work for moving storage over to event channels as requests for data should be handled in parallel.", "createdAt": "2020-03-10T00:06:13Z", "url": "https://github.com/ConsenSys/teku/pull/1335", "merged": true, "mergeCommit": {"oid": "508377a409bac925bb39dbabe9c550408c7dfdef"}, "closed": true, "closedAt": "2020-03-10T22:54:01Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMG7L3gH2gAyMzg1ODc0MTMwOjFkNWQzNDcxN2U0MzI4MjVmZTFhZGRlNTA3NDIyODA5MDU1ZDQ4Y2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMaYBygH2gAyMzg1ODc0MTMwOjA2OGRmY2Q0OWYwZTkxMTNlNTE5N2VlYWYyZWU3N2Q3YTU0M2Q3ODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1d5d34717e432825fe1adde507422809055d48cb", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/1d5d34717e432825fe1adde507422809055d48cb", "committedDate": "2020-03-09T23:57:15Z", "message": "Add annotation based approach to setting threads."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86e42d38bf392509bb46bbf4ea591b7d3e6b4464", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/86e42d38bf392509bb46bbf4ea591b7d3e6b4464", "committedDate": "2020-03-09T23:57:15Z", "message": "Switch to specifying the number of threads per subscriber, instead of per channel."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d30f84cbea44968e56b8e7941500918a580a51db", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/d30f84cbea44968e56b8e7941500918a580a51db", "committedDate": "2020-03-10T00:05:29Z", "message": "Undo more changes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDkxMzIz", "url": "https://github.com/ConsenSys/teku/pull/1335#pullrequestreview-372091323", "createdAt": "2020-03-10T15:58:20Z", "commit": {"oid": "d30f84cbea44968e56b8e7941500918a580a51db"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo1ODoyMVrOF0Vlog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo1ODoyMVrOF0Vlog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQyMzk3MA==", "bodyText": "(nit) Might be worth some javadoc that explains numberOfThreads will be used at the discretion of the specific implementation as the target degree of processing parallelism or something like that.\nPossibly we could rename to something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void subscribeMultithreaded(final T listener, final int numberOfThreads) {\n          \n          \n            \n              public void subscribe(final T listener, final int requestedParallelism) {\n          \n      \n    \n    \n  \n\nwhich is more generic, although maybe more obscure \ud83e\udd37\u200d\u2640", "url": "https://github.com/ConsenSys/teku/pull/1335#discussion_r390423970", "createdAt": "2020-03-10T15:58:21Z", "author": {"login": "mbaxter"}, "path": "events/src/main/java/tech/pegasys/artemis/events/EventChannel.java", "diffHunk": "@@ -134,11 +134,16 @@ public T getPublisher() {\n     return publisher;\n   }\n \n-  public void subscribe(T listener) {\n+  public void subscribe(final T listener) {\n+    subscribeMultithreaded(listener, 1);\n+  }\n+\n+  public void subscribeMultithreaded(final T listener, final int numberOfThreads) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d30f84cbea44968e56b8e7941500918a580a51db"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDk4NjU0", "url": "https://github.com/ConsenSys/teku/pull/1335#pullrequestreview-372098654", "createdAt": "2020-03-10T16:06:02Z", "commit": {"oid": "d30f84cbea44968e56b8e7941500918a580a51db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjowNjowMlrOF0V7zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjowNjowMlrOF0V7zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQyOTY0Nw==", "bodyText": "I think spying on started1 and saying verify(started1).await() would be more clear here,  because the constants and the time unit makes the reader go look for other constants.", "url": "https://github.com/ConsenSys/teku/pull/1335#discussion_r390429647", "createdAt": "2020-03-10T16:06:02Z", "author": {"login": "cemozerr"}, "path": "events/src/test/java/tech/pegasys/artemis/events/EventChannelTest.java", "diffHunk": "@@ -183,6 +196,54 @@ public void shouldDeliverEventsAsync() throws Exception {\n     inOrder.verifyNoMoreInteractions();\n   }\n \n+  @Test\n+  public void shouldDeliverAsyncEventsOnMultipleThreads() throws Exception {\n+    executor =\n+        Executors.newCachedThreadPool(\n+            new ThreadFactoryBuilder()\n+                .setDaemon(true)\n+                .setNameFormat(\"shoudlDeliverAsyncEventsOnMultipleThreads-%d\")\n+                .build());\n+    final EventChannel<WaitOnLatch> channel =\n+        EventChannel.createAsync(WaitOnLatch.class, executor, metricsSystem);\n+    final WaitOnLatch subscriber =\n+        (started, await, completed) -> {\n+          started.countDown();\n+          try {\n+            await.await();\n+            completed.countDown();\n+          } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+          }\n+        };\n+    channel.subscribeMultithreaded(subscriber, 2); // Two subscribing threads\n+\n+    final CountDownLatch started1 = new CountDownLatch(1);\n+    final CountDownLatch await1 = new CountDownLatch(1);\n+    final CountDownLatch completed1 = new CountDownLatch(1);\n+    final CountDownLatch started2 = new CountDownLatch(1);\n+    final CountDownLatch await2 = new CountDownLatch(1);\n+    final CountDownLatch completed2 = new CountDownLatch(1);\n+\n+    // Publish two events\n+    channel.getPublisher().waitFor(started1, await1, completed1);\n+    channel.getPublisher().waitFor(started2, await2, completed2);\n+\n+    // Both events should start being processed\n+    assertThat(started1.await(5, TimeUnit.SECONDS)).isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d30f84cbea44968e56b8e7941500918a580a51db"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDk5NTc3", "url": "https://github.com/ConsenSys/teku/pull/1335#pullrequestreview-372099577", "createdAt": "2020-03-10T16:07:03Z", "commit": {"oid": "d30f84cbea44968e56b8e7941500918a580a51db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c044f5816ac71ae3b4283d492e05fc96f4be929a", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/c044f5816ac71ae3b4283d492e05fc96f4be929a", "committedDate": "2020-03-10T21:18:58Z", "message": "Merge branch 'master' into multithreaded-channels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "729a87401e2795e8c9c0222be85cfd1de3997126", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/729a87401e2795e8c9c0222be85cfd1de3997126", "committedDate": "2020-03-10T22:29:25Z", "message": "Add javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f57c90db987fd72242d3834805d2bb7e810f613", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/8f57c90db987fd72242d3834805d2bb7e810f613", "committedDate": "2020-03-10T22:30:33Z", "message": "More javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf283db26c109d7fec61413820f02b5dc4e911c5", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/bf283db26c109d7fec61413820f02b5dc4e911c5", "committedDate": "2020-03-10T22:30:38Z", "message": "Merge branch 'multithreaded-channels' of github.com:ajsutton/teku into multithreaded-channels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b2ddb440dbc812bdee7ab24e310d1a0b5b2b834", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/5b2ddb440dbc812bdee7ab24e310d1a0b5b2b834", "committedDate": "2020-03-10T22:35:04Z", "message": "Extract private method for readability."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "068dfcd49f0e9113e5197eeaf2ee77d7a543d789", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/068dfcd49f0e9113e5197eeaf2ee77d7a543d789", "committedDate": "2020-03-10T22:36:57Z", "message": "Merge branch 'master' into multithreaded-channels"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3952, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}