{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDk0MzAz", "number": 2061, "title": "Reduce memory footprint for hot-state BeaconState instances ", "bodyText": "PR Description\nThough BeaconState is backed up with a remerkable tree, accessing it and reconstructing corresponding views (aka vectors, containers, etc.) is a bit expensive from the performance standpoint. That's why these views are cached and returned unless their backing subtree is modified.\nHowever this comes at a cost of the memory footprint. When there are a lot of hot-state BeaconState instances resides in memory every instance is keeping the full set of views. This is suboptimal since the BeaconStates older than the head are most likely wouldn't be accessed or accessed very limited (just a small subset of structures).\nWith this PR on any beacon state modification (BeaconState-1 => MutableBeaconState => BeaconState-2) when the view caches are transfer()ed from BeaconState-1 to BeaconState-2 the original caches in the BeaconState-1 would be cleared.\nThis would reduce the memory footprint (in Mb below) of the BeaconState instances if they are all kept in memory:\n\n\n\nNumber of states\nBefore\nAfter\n\n\n\n\n1\n69\n69\n\n\n32\n163\n153\n\n\n65\n187\n161\n\n\n130\n229\n172\n\n\n390\n414\n226\n\n\n\n** these are consecutive slot states. For sparse states (e.g. on each epoch) the numbers would differ\nSome more details here: https://docs.google.com/spreadsheets/d/1IA8Yq6CgCWfOBy8dTpY-uFVUDYBWCRTSl_-7LoXTA9M/edit?usp=sharing\nThis doesn't affect performance (at least from the point of TransitionBenchmark)", "createdAt": "2020-06-05T14:37:00Z", "url": "https://github.com/ConsenSys/teku/pull/2061", "merged": true, "mergeCommit": {"oid": "afeab5faf7b6d1f10ed4acea469a61642ba00a59"}, "closed": true, "closedAt": "2020-06-06T09:02:42Z", "author": {"login": "Nashatyrev"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoSqp2AH2gAyNDI4NDk0MzAzOjU5OTRlOWNlZDlhYjE2ODYwMGY4MzdiZGQzOWY5Mjg3NGQyODEzNjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoVJuggH2gAyNDI4NDk0MzAzOmY0YjVjMmQ2MmNlZjgxY2QzNTljMDc2NTY0ZjU0MTk3MGFlY2EyOTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5994e9ced9ab168600f837bdd39f92874d281361", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/5994e9ced9ab168600f837bdd39f92874d281361", "committedDate": "2020-06-05T13:27:56Z", "message": "Clear ArrayIntCache on transfer() to reduce memory footprint of older BeaconState instances"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21c3dc72310d49d1836000e3755af1430a1c37e8", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/21c3dc72310d49d1836000e3755af1430a1c37e8", "committedDate": "2020-06-05T14:39:55Z", "message": "Apply spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDIwNjM2", "url": "https://github.com/ConsenSys/teku/pull/2061#pullrequestreview-425420636", "createdAt": "2020-06-05T15:48:57Z", "commit": {"oid": "21c3dc72310d49d1836000e3755af1430a1c37e8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNTo0ODo1N1rOGfz7Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNTo0ODo1N1rOGfz7Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwOTc0Nw==", "bodyText": "Should this be valuesLock?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                V[] valuesLoc = this.values;\n          \n          \n            \n                V[] valuesLock = this.values;", "url": "https://github.com/ConsenSys/teku/pull/2061#discussion_r436009747", "createdAt": "2020-06-05T15:48:57Z", "author": {"login": "mbaxter"}, "path": "ssz/src/main/java/tech/pegasys/teku/ssz/backing/cache/ArrayIntCache.java", "diffHunk": "@@ -40,52 +50,60 @@ private ArrayIntCache(V[] values, int initSize) {\n     return (V[]) new Object[size];\n   }\n \n-  private void extend(int index) {\n-    int newSize = values.length;\n+  private V[] extend(int index) {\n+    V[] valuesLoc = this.values;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21c3dc72310d49d1836000e3755af1430a1c37e8"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4b5c2d62cef81cd359c076564f541970aeca295", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/f4b5c2d62cef81cd359c076564f541970aeca295", "committedDate": "2020-06-05T16:21:41Z", "message": "Give a better name to var"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3848, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}