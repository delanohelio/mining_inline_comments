{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NTU1Mjg2", "number": 1384, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMDoxOToxNFrODoiw9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMDoyMDozNlrODoixnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODM5MjIwOnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/GetAttestation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMDoxOToxNFrOF3KAQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMDo1NDo0MFrOF3KiBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTkwNw==", "bodyText": "dangling preposition...", "url": "https://github.com/ConsenSys/teku/pull/1384#discussion_r393379907", "createdAt": "2020-03-17T00:19:14Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/GetAttestation.java", "diffHunk": "@@ -55,25 +55,26 @@ public GetAttestation(final ChainDataProvider provider, final JsonProvider jsonP\n   @OpenApi(\n       path = ROUTE,\n       method = HttpMethod.GET,\n-      summary = \"Get an unsigned attestation of a slot from the current state.\",\n+      summary = \"Get an unsigned attestation for a slot from the current state.\",\n       tags = {TAG_VALIDATOR},\n       queryParams = {\n         @OpenApiParam(\n             name = SLOT,\n-            description = \"The non-finalized slot to create the attestation for (uint64)\",\n+            description = \"Slot to create the attestation for.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "667f77506233b4e2835189b8f584ffb456d4efa9"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4ODU0OA==", "bodyText": "if its finalized you'll get an error, which is why i specified that here...", "url": "https://github.com/ConsenSys/teku/pull/1384#discussion_r393388548", "createdAt": "2020-03-17T00:54:40Z", "author": {"login": "rolfyone"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/GetAttestation.java", "diffHunk": "@@ -55,25 +55,26 @@ public GetAttestation(final ChainDataProvider provider, final JsonProvider jsonP\n   @OpenApi(\n       path = ROUTE,\n       method = HttpMethod.GET,\n-      summary = \"Get an unsigned attestation of a slot from the current state.\",\n+      summary = \"Get an unsigned attestation for a slot from the current state.\",\n       tags = {TAG_VALIDATOR},\n       queryParams = {\n         @OpenApiParam(\n             name = SLOT,\n-            description = \"The non-finalized slot to create the attestation for (uint64)\",\n+            description = \"Slot to create the attestation for.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM3OTkwNw=="}, "originalCommit": {"oid": "667f77506233b4e2835189b8f584ffb456d4efa9"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODM5Mzg4OnYy", "diffSide": "RIGHT", "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/GetAttestation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMDoyMDozNlrOF3KBRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMDoyMDozNlrOF3KBRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM4MDE2Ng==", "bodyText": "should we say what the result is if you specify a finalized slot?", "url": "https://github.com/ConsenSys/teku/pull/1384#discussion_r393380166", "createdAt": "2020-03-17T00:20:36Z", "author": {"login": "macfarla"}, "path": "data/beaconrestapi/src/main/java/tech/pegasys/artemis/beaconrestapi/handlers/validator/GetAttestation.java", "diffHunk": "@@ -55,25 +55,26 @@ public GetAttestation(final ChainDataProvider provider, final JsonProvider jsonP\n   @OpenApi(\n       path = ROUTE,\n       method = HttpMethod.GET,\n-      summary = \"Get an unsigned attestation of a slot from the current state.\",\n+      summary = \"Get an unsigned attestation for a slot from the current state.\",\n       tags = {TAG_VALIDATOR},\n       queryParams = {\n         @OpenApiParam(\n             name = SLOT,\n-            description = \"The non-finalized slot to create the attestation for (uint64)\",\n+            description = \"Slot to create the attestation for.\",\n             required = true),\n         @OpenApiParam(\n             name = COMMITTEE_INDEX,\n-            description = \"The index of the committee making the attestation.\",\n+            description = \"Index of the committee making the attestation.\",\n             required = true)\n       },\n       description =\n-          \"Request that the node return an unsigned attestation for the block at a given non-finalized slot.\",\n+          \"Returns an unsigned attestation for the block at the specified non-finalized slot.\\n\\nThis endpoint is not protected against slashing. Signing the returned attestation can result in a slashable offence.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "667f77506233b4e2835189b8f584ffb456d4efa9"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2551, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}