{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3ODEyMzg3", "number": 2715, "title": "Persist discv5 local seqno and generated p2p private key", "bodyText": "PR Description\nPersists discovery local ENR SeqNo since it should be increasing number across restarts for the same nodeId (for different nodeId another sequence can be used though it's fine to use the same counter).\nInstead of passing dataDir option to store SeqNo in a file, I created a generic KeyValueStore essense which may be used across different components to persist various simple options like this one. Later the FileKeyValueStore would most likely need to be changed to DB backed implementation.\nIf this looks fine I would also use it in #2701 for storing generated private key.\nDepends on discovery PR: #69\nFixed Issue(s)\nfixes #1961\nfixes #2209\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-09-02T13:14:49Z", "url": "https://github.com/ConsenSys/teku/pull/2715", "merged": true, "mergeCommit": {"oid": "2c15538b7d778a4e04d226af8b554869c2a5ece8"}, "closed": true, "closedAt": "2020-09-04T14:45:10Z", "author": {"login": "Nashatyrev"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEWsxmgH2gAyNDc3ODEyMzg3OjFlZTFkNDI3YTZiNDE0OGEwNGY0NTJjZTc5ZGJjM2I2MGEwY2ZhNWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFmItrAH2gAyNDc3ODEyMzg3OjQ4NmMxOWJjMTQwMWFiMzMxZDc4NjlhMzYyMWMwYzE3ZDg2OWJmMGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ee1d427a6b4148a04f452ce79dbc3b60a0cfa5c", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/1ee1d427a6b4148a04f452ce79dbc3b60a0cfa5c", "committedDate": "2020-08-31T17:59:45Z", "message": "Store generated p2p private key in a database dir and reuse it if non user key is supplied"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca5eb0763abb1a19096897e8ee5627e035e152e", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/6ca5eb0763abb1a19096897e8ee5627e035e152e", "committedDate": "2020-09-01T12:02:04Z", "message": "Log that p2p generated key is used to console"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1067c55f56cae2c899f6f1c26ee1c9cd3acef45d", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/1067c55f56cae2c899f6f1c26ee1c9cd3acef45d", "committedDate": "2020-09-01T12:54:04Z", "message": "Add unit test gor generated p2p key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cf7ea8a64e32a26576ef192f83f41193ccb29f3", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/0cf7ea8a64e32a26576ef192f83f41193ccb29f3", "committedDate": "2020-09-01T17:52:13Z", "message": "Temp commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ca359858a087aff5d1ce2d2c14534d230220a15", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/5ca359858a087aff5d1ce2d2c14534d230220a15", "committedDate": "2020-09-01T18:15:06Z", "message": "Move SyncDataAccessor to 'util' module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81a7f92449b82b98b5687f69ebd2d6dc7df118e1", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/81a7f92449b82b98b5687f69ebd2d6dc7df118e1", "committedDate": "2020-09-02T05:36:05Z", "message": "Fix output wording\n\nCo-authored-by: Adrian Sutton <adrian@symphonious.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0172bee2582e7b893022aba35b6a873bdc676ebe", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/0172bee2582e7b893022aba35b6a873bdc676ebe", "committedDate": "2020-09-02T09:28:46Z", "message": "Apply spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6172ed9b2419506d2581a3e224c71358e1db01e", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/d6172ed9b2419506d2581a3e224c71358e1db01e", "committedDate": "2020-09-02T11:04:33Z", "message": "Add KeyValueStore as a generic store where misc data from various components can be persisted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "733839fe5d2333c81fb9525b11732657f7b6bf6d", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/733839fe5d2333c81fb9525b11732657f7b6bf6d", "committedDate": "2020-09-02T11:40:14Z", "message": "Need to increment the latest seqNo on startup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bbb1dfbd058284650fcff86799c23718084bdb4", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/3bbb1dfbd058284650fcff86799c23718084bdb4", "committedDate": "2020-09-02T12:51:46Z", "message": "Add javadoc, minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a5dbd42d9c3e32e6239639640b89727cd06e1f5", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/3a5dbd42d9c3e32e6239639640b89727cd06e1f5", "committedDate": "2020-09-02T13:42:49Z", "message": "Update discovery version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/c9169a7b5f29ad53381ea26eaf4462e1689ea1e5", "committedDate": "2020-09-02T13:49:31Z", "message": "Fix the discovery version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMTM0MjQ3", "url": "https://github.com/ConsenSys/teku/pull/2715#pullrequestreview-481134247", "createdAt": "2020-09-02T18:10:48Z", "commit": {"oid": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxMDo0OFrOHL7UEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxOTo1NVrOHL7r4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI2ODE3Nw==", "bodyText": "Can we add some tests for this class?", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r482268177", "createdAt": "2020-09-02T18:10:48Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.util.file.SyncDataAccessor;\n+\n+/**\n+ * The key-value store implementation with String keys and Bytes values which stores each entry in a\n+ * separate file named {@code <key>.dat} in the specified directory\n+ */\n+public class FileKeyValueStore implements KeyValueStore<String, Bytes> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTExMg==", "bodyText": "(nit) Might be more explicit to have a del() method instead of accepting null values.", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r482271112", "createdAt": "2020-09-02T18:16:09Z", "author": {"login": "mbaxter"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/store/KeyValueStore.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.util.Optional;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Generic simple key-value store interface Both key and value are not allowed to be null\n+ *\n+ * @param <TKey> key type\n+ * @param <TValue> value type\n+ */\n+public interface KeyValueStore<TKey, TValue> {\n+\n+  /** Puts a new value. If the value is {@code null} then the entry is removed if exist */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3NDI3Mw==", "bodyText": "It's probably worth isolating these files in a subdirectory: data/kvstore?", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r482274273", "createdAt": "2020-09-02T18:19:55Z", "author": {"login": "mbaxter"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainController.java", "diffHunk": "@@ -414,6 +417,8 @@ public void initP2PNetwork() {\n \n       p2pConfig.validateListenPortAvailable();\n       final Eth2Config eth2Config = new Eth2Config(config.isP2pSnappyEnabled());\n+      final KeyValueStore<String, Bytes> keyValueStore =\n+          new FileKeyValueStore(Path.of(config.getDataPath()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9169a7b5f29ad53381ea26eaf4462e1689ea1e5"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6fe5775038a17c3b7916a8ea4b82efcaf81501e", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/b6fe5775038a17c3b7916a8ea4b82efcaf81501e", "committedDate": "2020-09-04T07:23:34Z", "message": "Update discovery artifact version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "484c40ed18cf32785b13f88c7ce94997be122cbc", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/484c40ed18cf32785b13f88c7ce94997be122cbc", "committedDate": "2020-09-04T07:39:55Z", "message": "Add KeyValueStorage.remove() method instead of put(key, null)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c33c52ebd0992306288caf7728cff8571876e5a", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/6c33c52ebd0992306288caf7728cff8571876e5a", "committedDate": "2020-09-04T07:52:05Z", "message": "Put files for FileKeyValueStore to a datadir subdirectory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "271b72b3fddd231d6d24f5618037e9756e1e61c8", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/271b72b3fddd231d6d24f5618037e9756e1e61c8", "committedDate": "2020-09-04T09:06:47Z", "message": "Make FileKeyValueStore thread-safe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ce44aee5177d425637352d50e381777b29c774", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/f9ce44aee5177d425637352d50e381777b29c774", "committedDate": "2020-09-04T09:08:21Z", "message": "Add FileKeyValueStoreTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad463ca5d7521d7ee35550e957f361f8f9ad7353", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/ad463ca5d7521d7ee35550e957f361f8f9ad7353", "committedDate": "2020-09-04T09:23:39Z", "message": "Resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aef30e0a3e5ae87de413620c711f7fc09fcd32f7", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/aef30e0a3e5ae87de413620c711f7fc09fcd32f7", "committedDate": "2020-09-04T09:31:48Z", "message": "Resolve merge conflicts - 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c828c03a233eca34a9cba7a2a2b06dd81977b18", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/5c828c03a233eca34a9cba7a2a2b06dd81977b18", "committedDate": "2020-09-04T09:43:39Z", "message": "Fix warns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "028494f44778cfd707885a01887d78072094fc0d", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/028494f44778cfd707885a01887d78072094fc0d", "committedDate": "2020-09-04T09:53:27Z", "message": "Merge branch 'feature-store-generated-p2p-priv-key' into feature-persist-discv5-local-seqno"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01056ef604f603758079aa1e5174861eecf5714e", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/01056ef604f603758079aa1e5174861eecf5714e", "committedDate": "2020-09-04T10:09:40Z", "message": "Make BeaconChainController.getP2pPrivateKeyBytes() using KeyValueStore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNjA4NDM3", "url": "https://github.com/ConsenSys/teku/pull/2715#pullrequestreview-482608437", "createdAt": "2020-09-04T12:26:14Z", "commit": {"oid": "01056ef604f603758079aa1e5174861eecf5714e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjoyNjoxNFrOHNLkkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMjoyOToxNVrOHNLp8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4MzEyMQ==", "bodyText": "nit: keyKey? Maybe just key?", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r483583121", "createdAt": "2020-09-04T12:26:14Z", "author": {"login": "ajsutton"}, "path": "logging/src/main/java/tech/pegasys/teku/logging/StatusLogger.java", "diffHunk": "@@ -161,4 +161,12 @@ public void eth1ServiceDown(final long interval) {\n   public void eth1AtHead() {\n     log.info(\"Eth1 tracker successfully caught up to chain head\");\n   }\n+\n+  public void usingGeneratedP2pPrivateKey(final String keyKey, final boolean justGenerated) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01056ef604f603758079aa1e5174861eecf5714e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU4NDQ5Ng==", "bodyText": "nit: Would be good to reuse a single instance of SyncDataAccessor - just store it in a final field.", "url": "https://github.com/ConsenSys/teku/pull/2715#discussion_r483584496", "createdAt": "2020-09-04T12:29:15Z", "author": {"login": "ajsutton"}, "path": "storage/src/main/java/tech/pegasys/teku/storage/store/FileKeyValueStore.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.storage.store;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.jetbrains.annotations.NotNull;\n+import tech.pegasys.teku.infrastructure.io.SyncDataAccessor;\n+\n+/**\n+ * The key-value store implementation with String keys and Bytes values which stores each entry in a\n+ * separate file named {@code <key>.dat} in the specified directory\n+ *\n+ * <p>This implementation is thread-safe\n+ */\n+public class FileKeyValueStore implements KeyValueStore<String, Bytes> {\n+\n+  private final Path dataDir;\n+  private final ConcurrentMap<String, Object> keyMutexes = new ConcurrentHashMap<>();\n+\n+  public FileKeyValueStore(Path dataDir) {\n+    this.dataDir = dataDir;\n+  }\n+\n+  private Object keyMutex(String key) {\n+    // there supposed to be a very limited number of keys so\n+    // we don't clean up the map for the sake of simplicity\n+    return keyMutexes.computeIfAbsent(key, __ -> new Object());\n+  }\n+\n+  @Override\n+  public void put(@NotNull String key, @NotNull Bytes value) {\n+    Path file = dataDir.resolve(key + \".dat\");\n+    try {\n+      synchronized (keyMutex(key)) {\n+        new SyncDataAccessor().syncedWrite(file, value);\n+      }\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Error writing file: \" + file, e);\n+    }\n+  }\n+\n+  @Override\n+  public void remove(@NotNull String key) {\n+    Path file = dataDir.resolve(key + \".dat\");\n+    synchronized (keyMutex(key)) {\n+      file.toFile().delete();\n+    }\n+  }\n+\n+  @Override\n+  public Optional<Bytes> get(@NotNull String key) {\n+    Path file = dataDir.resolve(key + \".dat\");\n+    try {\n+      synchronized (keyMutex(key)) {\n+        return new SyncDataAccessor().read(file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01056ef604f603758079aa1e5174861eecf5714e"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "486c19bc1401ab331d7869a3621c0c17d869bf0d", "author": {"user": {"login": "Nashatyrev", "name": "Anton Nashatyrev"}}, "url": "https://github.com/ConsenSys/teku/commit/486c19bc1401ab331d7869a3621c0c17d869bf0d", "committedDate": "2020-09-04T14:32:46Z", "message": "Minor fixes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3573, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}