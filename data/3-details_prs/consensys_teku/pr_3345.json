{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzEzMTc2", "number": 3345, "title": "update ForkProvider to run as a service", "bodyText": "Fork requests will now only happen once per client, per period of time, rather than each validator potentially initiating its own request over http.\nfixes #3304\nSigned-off-by: Paul Harris paul.harris@consensys.net\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-12-02T03:18:49Z", "url": "https://github.com/ConsenSys/teku/pull/3345", "merged": true, "mergeCommit": {"oid": "fd6598c77255c9439553c5d88210a49cda09c261"}, "closed": true, "closedAt": "2020-12-02T05:33:43Z", "author": {"login": "rolfyone"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiF0WdAH2gAyNTMwNzEzMTc2OjQ3NTQ5MjJkMWY5YTA5YjIxNTNjODc5NjBjYjUwYzM4Yjg3OWEzMDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiHkaVAH2gAyNTMwNzEzMTc2OjllMDEzMTFhMGIzN2I1NGZhMDUxMmEyZjgzOTdlYjJkNzkzN2NkNTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4754922d1f9a09b2153c87960cb50c38b879a307", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/4754922d1f9a09b2153c87960cb50c38b879a307", "committedDate": "2020-12-02T03:17:22Z", "message": "update ForkProvider to run as a service\n\nFork requests will now only happen once per client, per period of time, rather than each validator potentially initiating its own request over http.\n\nfixes #3304\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/8d1d193f3b416b7e964ec28a270de29bacd1238f", "committedDate": "2020-12-02T03:19:24Z", "message": "Merge remote-tracking branch 'upstream/master' into 3304-refactor-fork-provider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDc1MzA4", "url": "https://github.com/ConsenSys/teku/pull/3345#pullrequestreview-542475308", "createdAt": "2020-12-02T03:38:47Z", "commit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzozODo0N1rOH9JKjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzo1MDoyNFrOH9JXUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3NTM0Mg==", "bodyText": "nit: move this initialiser to the field declaration.", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533875342", "createdAt": "2020-12-02T03:38:47Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/ForkProvider.java", "diffHunk": "@@ -43,49 +43,63 @@ public ForkProvider(\n     this.asyncRunner = asyncRunner;\n     this.validatorApiChannel = validatorApiChannel;\n     this.genesisDataProvider = genesisDataProvider;\n+    currentFork = new SafeFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3NjY4NA==", "bodyText": "This would overwrite the SafeFuture assigned in the constructor without actually completing it.  Probably should make the initial value a failed future if we're going to do this ( probably an IllegalStateException given it would mean getForkInfo is called before start is. Would have to be completely sure it never happens though so may be better to just have this be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                currentFork = getForkAndPeriodicallyUpdate();\n          \n          \n            \n                getForkAndPeriodicallyUpdate().propagateTo(currentFork);", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533876684", "createdAt": "2020-12-02T03:43:32Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/ForkProvider.java", "diffHunk": "@@ -43,49 +43,63 @@ public ForkProvider(\n     this.asyncRunner = asyncRunner;\n     this.validatorApiChannel = validatorApiChannel;\n     this.genesisDataProvider = genesisDataProvider;\n+    currentFork = new SafeFuture<>();\n   }\n \n   public SafeFuture<ForkInfo> getForkInfo() {\n-    return currentFork.map(SafeFuture::completedFuture).orElseGet(this::loadForkInfo);\n+    return currentFork;\n   }\n \n-  public SafeFuture<ForkInfo> loadForkInfo() {\n-    return requestForkInfo()\n-        .exceptionallyCompose(\n-            error -> {\n-              LOG.error(\"Failed to retrieve current fork info. Retrying after delay\", error);\n-              return asyncRunner.runAfterDelay(\n-                  this::getForkInfo, FORK_RETRY_DELAY_SECONDS, TimeUnit.SECONDS);\n-            });\n-  }\n-\n-  private SafeFuture<ForkInfo> requestForkInfo() {\n-    return genesisDataProvider.getGenesisValidatorsRoot().thenCompose(this::requestFork);\n-  }\n-\n-  public SafeFuture<ForkInfo> requestFork(final Bytes32 genesisValidatorsRoot) {\n+  private SafeFuture<ForkInfo> getForkAndPeriodicallyUpdate() {\n     return validatorApiChannel\n         .getFork()\n         .thenCompose(\n             maybeFork -> {\n               if (maybeFork.isEmpty()) {\n                 LOG.trace(\"Fork info not available, retrying\");\n-                return asyncRunner.runAfterDelay(\n-                    this::requestForkInfo, FORK_RETRY_DELAY_SECONDS, TimeUnit.SECONDS);\n+                return scheduleNextRequest(FORK_RETRY_DELAY_SECONDS);\n               }\n-              final ForkInfo forkInfo =\n-                  new ForkInfo(maybeFork.orElseThrow(), genesisValidatorsRoot);\n-              currentFork = Optional.of(forkInfo);\n-              // Periodically refresh the current fork info.\n-              asyncRunner\n-                  .runAfterDelay(this::loadForkInfo, FORK_REFRESH_TIME_SECONDS, TimeUnit.SECONDS)\n-                  .reportExceptions();\n-              return SafeFuture.completedFuture(forkInfo);\n+\n+              scheduleNextRequest(FORK_REFRESH_TIME_SECONDS).reportExceptions();\n+              return getValidatorsRootAndCreateForkInfo(maybeFork.orElseThrow());\n+            })\n+        .exceptionallyCompose(\n+            error -> {\n+              LOG.error(\"Failed to retrieve current fork info. Retrying after delay\", error);\n+              return scheduleNextRequest(FORK_RETRY_DELAY_SECONDS);\n             });\n   }\n \n+  private SafeFuture<ForkInfo> getValidatorsRootAndCreateForkInfo(Fork fork) {\n+    return genesisDataProvider\n+        .getGenesisValidatorsRoot()\n+        .thenCompose(\n+            root -> {\n+              final ForkInfo forkInfo = new ForkInfo(fork, root);\n+              // anything waiting on the current future needs to be notified\n+              currentFork.complete(forkInfo);\n+              currentFork = SafeFuture.completedFuture(forkInfo);\n+              return currentFork;\n+            });\n+  }\n+\n+  private SafeFuture<ForkInfo> scheduleNextRequest(final long seconds) {\n+    return asyncRunner.runAfterDelay(this::getForkAndPeriodicallyUpdate, seconds, TimeUnit.SECONDS);\n+  }\n+\n   @Override\n   public String toString() {\n     return \"ForkProvider{\" + \"currentFork=\" + currentFork + '}';\n   }\n+\n+  @Override\n+  protected SafeFuture<?> doStart() {\n+    currentFork = getForkAndPeriodicallyUpdate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3ODIyNA==", "bodyText": "This isn't right.  It will wind up recursively chaining the exceptionallyCompose at the end of this method until you potentially get a StackOverflowException.\nThe other places are ok to call loadForkInfo recursively because its either already in the last step of the chain or doesn't return the result and just uses reportExceptions.  That's why there was a split between loadForkInfo and requestForkInfo.", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533878224", "createdAt": "2020-12-02T03:49:06Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/ForkProvider.java", "diffHunk": "@@ -43,49 +43,63 @@ public ForkProvider(\n     this.asyncRunner = asyncRunner;\n     this.validatorApiChannel = validatorApiChannel;\n     this.genesisDataProvider = genesisDataProvider;\n+    currentFork = new SafeFuture<>();\n   }\n \n   public SafeFuture<ForkInfo> getForkInfo() {\n-    return currentFork.map(SafeFuture::completedFuture).orElseGet(this::loadForkInfo);\n+    return currentFork;\n   }\n \n-  public SafeFuture<ForkInfo> loadForkInfo() {\n-    return requestForkInfo()\n-        .exceptionallyCompose(\n-            error -> {\n-              LOG.error(\"Failed to retrieve current fork info. Retrying after delay\", error);\n-              return asyncRunner.runAfterDelay(\n-                  this::getForkInfo, FORK_RETRY_DELAY_SECONDS, TimeUnit.SECONDS);\n-            });\n-  }\n-\n-  private SafeFuture<ForkInfo> requestForkInfo() {\n-    return genesisDataProvider.getGenesisValidatorsRoot().thenCompose(this::requestFork);\n-  }\n-\n-  public SafeFuture<ForkInfo> requestFork(final Bytes32 genesisValidatorsRoot) {\n+  private SafeFuture<ForkInfo> getForkAndPeriodicallyUpdate() {\n     return validatorApiChannel\n         .getFork()\n         .thenCompose(\n             maybeFork -> {\n               if (maybeFork.isEmpty()) {\n                 LOG.trace(\"Fork info not available, retrying\");\n-                return asyncRunner.runAfterDelay(\n-                    this::requestForkInfo, FORK_RETRY_DELAY_SECONDS, TimeUnit.SECONDS);\n+                return scheduleNextRequest(FORK_RETRY_DELAY_SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3ODM4Mg==", "bodyText": "This should be calling start().\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                forkProvider.doStart().reportExceptions();\n          \n          \n            \n                forkProvider.start().reportExceptions();", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533878382", "createdAt": "2020-12-02T03:49:40Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/ValidatorClientService.java", "diffHunk": "@@ -137,6 +141,7 @@ private static void addValidatorCountMetric(\n \n   @Override\n   protected SafeFuture<?> doStart() {\n+    forkProvider.doStart().reportExceptions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3ODQ2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                forkProvider.doStart().reportExceptions();\n          \n          \n            \n                forkProvider.start().reportExceptions();", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533878463", "createdAt": "2020-12-02T03:49:59Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/test/java/tech/pegasys/teku/validator/client/ForkProviderTest.java", "diffHunk": "@@ -50,6 +50,7 @@ public void shouldRequestForkWhenNotPreviouslyLoaded() {\n     when(genesisDataProvider.getGenesisValidatorsRoot())\n         .thenReturn(SafeFuture.completedFuture(forkInfo.getGenesisValidatorsRoot()));\n \n+    forkProvider.doStart().reportExceptions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3ODUyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                forkProvider.doStart().reportExceptions();\n          \n          \n            \n                forkProvider.start().reportExceptions();", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533878520", "createdAt": "2020-12-02T03:50:09Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/test/java/tech/pegasys/teku/validator/client/ForkProviderTest.java", "diffHunk": "@@ -66,6 +67,7 @@ public void shouldReturnCachedForkWhenPreviouslyLoaded() {\n         .thenReturn(SafeFuture.completedFuture(forkInfo.getGenesisValidatorsRoot()));\n \n     // First request loads the fork\n+    forkProvider.doStart().reportExceptions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3ODU2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                forkProvider.doStart().reportExceptions();\n          \n          \n            \n                forkProvider.start().reportExceptions();", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533878565", "createdAt": "2020-12-02T03:50:16Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/test/java/tech/pegasys/teku/validator/client/ForkProviderTest.java", "diffHunk": "@@ -84,6 +86,7 @@ public void shouldPeriodicallyRequestUpdatedFork() {\n         .thenReturn(completedFuture(Optional.of(forkInfo.getFork())))\n         .thenReturn(completedFuture(Optional.of(updatedFork.getFork())));\n \n+    forkProvider.doStart().reportExceptions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3ODYwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                forkProvider.doStart().reportExceptions();\n          \n          \n            \n                forkProvider.start().reportExceptions();", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533878609", "createdAt": "2020-12-02T03:50:24Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/test/java/tech/pegasys/teku/validator/client/ForkProviderTest.java", "diffHunk": "@@ -101,7 +104,7 @@ public void shouldRetryWhenForkFailsToLoad() {\n     when(validatorApiChannel.getFork())\n         .thenReturn(failedFuture(new RuntimeException(\"Nope\")))\n         .thenReturn(completedFuture(Optional.of(forkInfo.getFork())));\n-\n+    forkProvider.doStart().reportExceptions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f3ab54cb3b6ffd14abed97f0fee82a2613beaaf", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/8f3ab54cb3b6ffd14abed97f0fee82a2613beaaf", "committedDate": "2020-12-02T05:01:53Z", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTAxODA2", "url": "https://github.com/ConsenSys/teku/pull/3345#pullrequestreview-542501806", "createdAt": "2020-12-02T05:05:53Z", "commit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTowNTo1M1rOH9Kn7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTowNTo1M1rOH9Kn7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5OTI0NA==", "bodyText": "Not sure if you missed this or actually disagree, but typically this would be in the field declaration. :) Main reason is then you can see very clearly that it's not initially null.", "url": "https://github.com/ConsenSys/teku/pull/3345#discussion_r533899244", "createdAt": "2020-12-02T05:05:53Z", "author": {"login": "ajsutton"}, "path": "validator/client/src/main/java/tech/pegasys/teku/validator/client/ForkProvider.java", "diffHunk": "@@ -43,49 +43,63 @@ public ForkProvider(\n     this.asyncRunner = asyncRunner;\n     this.validatorApiChannel = validatorApiChannel;\n     this.genesisDataProvider = genesisDataProvider;\n+    currentFork = new SafeFuture<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3NTM0Mg=="}, "originalCommit": {"oid": "8d1d193f3b416b7e964ec28a270de29bacd1238f"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1353810537e1d053f2643dd7355c2fca8885de39", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/1353810537e1d053f2643dd7355c2fca8885de39", "committedDate": "2020-12-02T05:11:00Z", "message": "review feedback\n\nSigned-off-by: Paul Harris <paul.harris@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e01311a0b37b54fa0512a2f8397eb2d7937cd56", "author": {"user": {"login": "rolfyone", "name": "Paul Harris"}}, "url": "https://github.com/ConsenSys/teku/commit/9e01311a0b37b54fa0512a2f8397eb2d7937cd56", "committedDate": "2020-12-02T05:19:46Z", "message": "Merge remote-tracking branch 'upstream/master' into 3304-refactor-fork-provider"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4332, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}