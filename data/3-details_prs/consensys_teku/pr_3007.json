{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NjI0NTky", "number": 3007, "title": "Delay getting base state to start regeneration from", "bodyText": "PR Description\nWhen there are a lot of regeneration requests, they may wind up holding hard references to too many states, causing an out of memory error.  To avoid this, delay getting the base state to regenerate from and instead, then select the best starting point based on what the store currently has available, the state stored at epoch boundaries and any states the task has been rebased onto.\nFixed Issue(s)\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-10-19T01:32:47Z", "url": "https://github.com/ConsenSys/teku/pull/3007", "merged": true, "mergeCommit": {"oid": "32f2b4540921f0a70aef82a8767f255286d44655"}, "closed": true, "closedAt": "2020-10-19T21:58:55Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdT41h-gH2gAyNTA1NjI0NTkyOmM0MmRlNGU2ODEwY2ViMDBlM2U3M2Q1ZjRmOTFmZTJjNTM3NzNhMmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdULTP3AH2gAyNTA1NjI0NTkyOjFhM2JkOGJiMTQ3ODllYTFjMDQ4OWRlNjc2YWIxYjg5ZDE3YzEzYTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c42de4e6810ceb00e3e73d5f4f91fe2c53773a2f", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/c42de4e6810ceb00e3e73d5f4f91fe2c53773a2f", "committedDate": "2020-10-19T00:14:57Z", "message": "Delay getting base state to start regeneration from.\n\nWhen there are a lot of regeneration requests, they may wind up holding hard references to too many states, causing an out of memory error."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96162aec0958c94139c38927f2a031a697d14e79", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/96162aec0958c94139c38927f2a031a697d14e79", "committedDate": "2020-10-19T01:31:57Z", "message": "Select the best starting point out of the available options."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d63430c4eadb80ec7189425fc59ffb2b1764d169", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/d63430c4eadb80ec7189425fc59ffb2b1764d169", "committedDate": "2020-10-19T01:40:32Z", "message": "Remove unused method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be7db7fbf1f88eef526df6ab5eb3b065b4dbf964", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/be7db7fbf1f88eef526df6ab5eb3b065b4dbf964", "committedDate": "2020-10-19T04:08:16Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into delay-getting-base-state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d7af55f4fcaa3e2a0859baf2f34bd6cc0525a32", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/2d7af55f4fcaa3e2a0859baf2f34bd6cc0525a32", "committedDate": "2020-10-19T04:52:33Z", "message": "Add tests for best starting point selection."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExOTI3OTY5", "url": "https://github.com/ConsenSys/teku/pull/3007#pullrequestreview-511927969", "createdAt": "2020-10-19T16:08:34Z", "commit": {"oid": "2d7af55f4fcaa3e2a0859baf2f34bd6cc0525a32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExOTc2NjM1", "url": "https://github.com/ConsenSys/teku/pull/3007#pullrequestreview-511976635", "createdAt": "2020-10-19T17:06:58Z", "commit": {"oid": "2d7af55f4fcaa3e2a0859baf2f34bd6cc0525a32"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzowNjo1OVrOHkYnCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzozMTozNVrOHkZhvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxMzk5Mw==", "bodyText": "Should we have a threshold where we only pull the epoch boundary state if it's significantly closer than closestAvailableFromStore and rebasedStartingPoint?", "url": "https://github.com/ConsenSys/teku/pull/3007#discussion_r507913993", "createdAt": "2020-10-19T17:06:59Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/stategenerator/StateRegenerationBaseSelector.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.core.stategenerator;\n+\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+import java.util.stream.Stream;\n+import tech.pegasys.teku.core.lookup.BlockProvider;\n+import tech.pegasys.teku.core.lookup.StateAndBlockProvider;\n+import tech.pegasys.teku.datastructures.blocks.SignedBlockAndState;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n+import tech.pegasys.teku.datastructures.state.BlockRootAndState;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+\n+public class StateRegenerationBaseSelector {\n+  private final Optional<SlotAndBlockRoot> latestEpochBoundary;\n+  private final Supplier<Optional<BlockRootAndState>> closestAvailableStateSupplier;\n+  private final StateAndBlockProvider stateAndBlockProvider;\n+  private final BlockProvider blockProvider;\n+  private final Optional<SignedBlockAndState> rebasedStartingPoint;\n+\n+  public StateRegenerationBaseSelector(\n+      final Optional<SlotAndBlockRoot> latestEpochBoundary,\n+      final Supplier<Optional<BlockRootAndState>> closestAvailableStateSupplier,\n+      final StateAndBlockProvider stateAndBlockProvider,\n+      final BlockProvider blockProvider,\n+      final Optional<SignedBlockAndState> rebasedStartingPoint) {\n+    this.latestEpochBoundary = latestEpochBoundary;\n+    this.closestAvailableStateSupplier = closestAvailableStateSupplier;\n+    this.stateAndBlockProvider = stateAndBlockProvider;\n+    this.blockProvider = blockProvider;\n+    this.rebasedStartingPoint = rebasedStartingPoint;\n+  }\n+\n+  public StateRegenerationBaseSelector withRebasedStartingPoint(\n+      final SignedBlockAndState blockAndState) {\n+    if (isBetterThanCurrentRebasedStartingPoint(blockAndState)\n+        && isEqualToOrBetterThanLatestEpochBoundary(blockAndState)) {\n+      return new StateRegenerationBaseSelector(\n+          latestEpochBoundary,\n+          closestAvailableStateSupplier,\n+          stateAndBlockProvider,\n+          blockProvider,\n+          Optional.of(blockAndState));\n+    }\n+    return this;\n+  }\n+\n+  private boolean isEqualToOrBetterThanLatestEpochBoundary(\n+      final SignedBlockAndState blockAndState) {\n+    return latestEpochBoundary.isEmpty()\n+        || blockAndState.getSlot().isGreaterThanOrEqualTo(latestEpochBoundary.get().getSlot());\n+  }\n+\n+  private boolean isBetterThanCurrentRebasedStartingPoint(final SignedBlockAndState blockAndState) {\n+    return isBetterThan(\n+        blockAndState.getSlot(), rebasedStartingPoint.map(SignedBlockAndState::getSlot));\n+  }\n+\n+  public SafeFuture<Optional<SignedBlockAndState>> getBestBase() {\n+    final Optional<BlockRootAndState> closestAvailableFromStore =\n+        closestAvailableStateSupplier.get();\n+    if (closestAvailableFromStore.isEmpty()) {\n+      // Can't be a valid target state or has since been finalized. No point regenerating.\n+      return SafeFuture.completedFuture(Optional.empty());\n+    }\n+\n+    final Optional<UInt64> storeSlot = closestAvailableFromStore.map(BlockRootAndState::getSlot);\n+    final Optional<UInt64> epochBoundarySlot = latestEpochBoundary.map(SlotAndBlockRoot::getSlot);\n+    final Optional<UInt64> rebasedSlot = rebasedStartingPoint.map(SignedBlockAndState::getSlot);\n+\n+    if (epochBoundarySlot.isPresent()\n+        && isBestOption(epochBoundarySlot.get(), storeSlot, rebasedSlot)) {\n+      return stateAndBlockProvider\n+          .getBlockAndState(latestEpochBoundary.get().getBlockRoot())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7af55f4fcaa3e2a0859baf2f34bd6cc0525a32"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkyOTAyMw==", "bodyText": "Probably worth trying this as-is, but I wonder if we should stop holding onto the rebased starting point as well?  Presumably this should be in the Store when the task runs, right?", "url": "https://github.com/ConsenSys/teku/pull/3007#discussion_r507929023", "createdAt": "2020-10-19T17:31:35Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/stategenerator/StateRegenerationBaseSelector.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package tech.pegasys.teku.core.stategenerator;\n+\n+import java.util.Optional;\n+import java.util.function.Supplier;\n+import java.util.stream.Stream;\n+import tech.pegasys.teku.core.lookup.BlockProvider;\n+import tech.pegasys.teku.core.lookup.StateAndBlockProvider;\n+import tech.pegasys.teku.datastructures.blocks.SignedBlockAndState;\n+import tech.pegasys.teku.datastructures.blocks.SlotAndBlockRoot;\n+import tech.pegasys.teku.datastructures.state.BlockRootAndState;\n+import tech.pegasys.teku.infrastructure.async.SafeFuture;\n+import tech.pegasys.teku.infrastructure.unsigned.UInt64;\n+\n+public class StateRegenerationBaseSelector {\n+  private final Optional<SlotAndBlockRoot> latestEpochBoundary;\n+  private final Supplier<Optional<BlockRootAndState>> closestAvailableStateSupplier;\n+  private final StateAndBlockProvider stateAndBlockProvider;\n+  private final BlockProvider blockProvider;\n+  private final Optional<SignedBlockAndState> rebasedStartingPoint;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7af55f4fcaa3e2a0859baf2f34bd6cc0525a32"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01677ce580dbe8149b398952dc3c9886329b1a3a", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/01677ce580dbe8149b398952dc3c9886329b1a3a", "committedDate": "2020-10-19T20:17:29Z", "message": "Merge branch 'master' into delay-getting-base-state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7ab906ac38127b19995ecd75c1c7858452c71f7", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/d7ab906ac38127b19995ecd75c1c7858452c71f7", "committedDate": "2020-10-19T21:27:24Z", "message": "Merge branch 'master' into delay-getting-base-state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a3bd8bb14789ea1c0489de676ab1b89d17c13a6", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/1a3bd8bb14789ea1c0489de676ab1b89d17c13a6", "committedDate": "2020-10-19T21:45:42Z", "message": "Merge branch 'master' into delay-getting-base-state"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3390, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}