{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NDEwMDQ2", "number": 3383, "title": "Add weighted participation metrics", "bodyText": "PR Description\nAdds weighted participation metrics.\nFixed Issue(s)\n\n\nFixes #3134\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-12-09T19:23:33Z", "url": "https://github.com/ConsenSys/teku/pull/3383", "merged": true, "mergeCommit": {"oid": "1ed6e679afca41d8035eeeb201b7b774a146c069"}, "closed": true, "closedAt": "2020-12-11T14:35:06Z", "author": {"login": "cemozerr"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkjwK2AH2gAyNTM1NDEwMDQ2OjMyN2EyZmUzNGFjOTI0MDY5ZTZhNTg5ZDVmYjhjZTk5Njc1NzZhZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlIsNrAH2gAyNTM1NDEwMDQ2OjFhNmY3MjYwNThhMTJiOTRjYWM2ODNlOWMxMDQ4MGZiYzU3MzlmNzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "327a2fe34ac924069e6a589d5fb8ce9967576afc", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/327a2fe34ac924069e6a589d5fb8ce9967576afc", "committedDate": "2020-12-09T19:17:48Z", "message": "Use a static totalBalance to update beacon chain metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "965b0a69cb2649a171d4081c04525741032a05c0", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/965b0a69cb2649a171d4081c04525741032a05c0", "committedDate": "2020-12-09T19:20:07Z", "message": "Update total balances static variable when processing epoch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0911ef0d020c0cc353cd641c264ff2d20618422", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/d0911ef0d020c0cc353cd641c264ff2d20618422", "committedDate": "2020-12-09T19:20:52Z", "message": "Run spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NTU0MDgw", "url": "https://github.com/ConsenSys/teku/pull/3383#pullrequestreview-548554080", "createdAt": "2020-12-09T19:52:47Z", "commit": {"oid": "d0911ef0d020c0cc353cd641c264ff2d20618422"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTo1Mjo0N1rOICmofw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxOTo1Mjo0N1rOICmofw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTAyMw==", "bodyText": "do we need to make sure the StateAndBlockSummary are current epoch?  If we change epoch and there's an empty slot it might not match?", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539601023", "createdAt": "2020-12-09T19:52:47Z", "author": {"login": "rolfyone"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -162,15 +175,57 @@ public BeaconChainMetrics(\n             TekuMetricCategory.BEACON,\n             \"previous_correct_validators\",\n             \"Number of validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the current epoch\");\n+    previousEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the current epoch\");\n+    previousEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the previous epoch\");\n   }\n \n   @Override\n   public void onSlot(final UInt64 slot) {\n-    recentChainData.getChainHead().ifPresent(this::updateMetrics);\n+    recentChainData.getChainHead().ifPresent(head -> updateMetrics(slot, head));\n   }\n \n-  private void updateMetrics(final StateAndBlockSummary head) {\n+  private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0911ef0d020c0cc353cd641c264ff2d20618422"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa5cc63c4b89dc3ffbc01c8010850e1f363e6f5a", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/fa5cc63c4b89dc3ffbc01c8010850e1f363e6f5a", "committedDate": "2020-12-09T22:10:29Z", "message": "Store total balances in transition caches"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78b4851ae0efbdaf647cd796addb644dee6329b5", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/78b4851ae0efbdaf647cd796addb644dee6329b5", "committedDate": "2020-12-09T22:13:46Z", "message": "Revert redundant change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjU4NjUy", "url": "https://github.com/ConsenSys/teku/pull/3383#pullrequestreview-548658652", "createdAt": "2020-12-09T22:15:26Z", "commit": {"oid": "78b4851ae0efbdaf647cd796addb644dee6329b5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjoxNToyNlrOICr92Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjoyMDoxM1rOICsIhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4ODQwOQ==", "bodyText": "nit: I don't think you meant to rename this method - IntelliJ was being \"helpful\".", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539688409", "createdAt": "2020-12-09T22:15:26Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/EpochProcessor.java", "diffHunk": "@@ -27,7 +27,7 @@\n    */\n   public static BeaconState processEpoch(final BeaconState preState)\n       throws EpochProcessingException {\n-    final ValidatorStatuses validatorStatuses = ValidatorStatuses.create(preState);\n+    final ValidatorStatuses validatorStatuses = ValidatorStatuses.createTotalBalances(preState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78b4851ae0efbdaf647cd796addb644dee6329b5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY4OTAwNg==", "bodyText": "nit: This probably should just be private - you'd just create ValidatorStatuses and then use getTotalBalances to get it.", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539689006", "createdAt": "2020-12-09T22:16:30Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -135,4 +137,53 @@ public void apply(final ValidatorStatus status) {\n       status.updateInclusionInfo(inclusionInfo);\n     }\n   }\n+\n+  public static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78b4851ae0efbdaf647cd796addb644dee6329b5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MDU0Mg==", "bodyText": "Given these are now cheap to compute, we can probably update them each slot so that they update when we switch forks.", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539690542", "createdAt": "2020-12-09T22:19:16Z", "author": {"login": "ajsutton"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -162,15 +174,62 @@ public BeaconChainMetrics(\n             TekuMetricCategory.BEACON,\n             \"previous_correct_validators\",\n             \"Number of validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the current epoch\");\n+    previousEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the current epoch\");\n+    previousEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the previous epoch\");\n   }\n \n   @Override\n   public void onSlot(final UInt64 slot) {\n-    recentChainData.getChainHead().ifPresent(this::updateMetrics);\n+    recentChainData.getChainHead().ifPresent(head -> updateMetrics(slot, head));\n   }\n \n-  private void updateMetrics(final StateAndBlockSummary head) {\n+  private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n+    state\n+        .getTransitionCaches()\n+        .getLatestTotalBalances()\n+        .ifPresent(\n+            totalBalances -> {\n+              // Update participation weights only once per epoch, a slot after epoch transition to\n+              // make\n+              // sure\n+              // total balances are properly updated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78b4851ae0efbdaf647cd796addb644dee6329b5"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY5MTE0Mw==", "bodyText": "This will need to be volatile.", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539691143", "createdAt": "2020-12-09T22:20:13Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/TransitionCaches.java", "diffHunk": "@@ -65,6 +67,8 @@ public static TransitionCaches getNoOp() {\n   private final ValidatorIndexCache validatorIndexCache;\n   private final Cache<Bytes32, List<Integer>> committeeShuffle;\n \n+  private Optional<TotalBalances> latestTotalBalances = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78b4851ae0efbdaf647cd796addb644dee6329b5"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82236af1ae71de008e1f7a4b0ca3767a10bfc802", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/82236af1ae71de008e1f7a4b0ca3767a10bfc802", "committedDate": "2020-12-09T22:42:26Z", "message": "Incorporate feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzM5MTIw", "url": "https://github.com/ConsenSys/teku/pull/3383#pullrequestreview-548739120", "createdAt": "2020-12-10T01:01:02Z", "commit": {"oid": "82236af1ae71de008e1f7a4b0ca3767a10bfc802"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMTowMTowMlrOICwkWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMToxNzowM1rOICw6_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2MzgwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {\n          \n          \n            \n              @VisibleForTesting\n          \n          \n            \n              static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539763803", "createdAt": "2020-12-10T01:01:02Z", "author": {"login": "ajsutton"}, "path": "ethereum/core/src/main/java/tech/pegasys/teku/core/epoch/status/ValidatorStatuses.java", "diffHunk": "@@ -135,4 +137,53 @@ public void apply(final ValidatorStatus status) {\n       status.updateInclusionInfo(inclusionInfo);\n     }\n   }\n+\n+  static TotalBalances createTotalBalances(final List<ValidatorStatus> statuses) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82236af1ae71de008e1f7a4b0ca3767a10bfc802"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2NDI5NQ==", "bodyText": "Probably shouldn't add this here.  BeaconStateCache.getTransitionCaches is used to get the cache everywhere else.\nI'm not against changing this but if we do we should change it everywhere and I seem to recall @Nashatyrev had a preference for this approach and some reasoning behind it.", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539764295", "createdAt": "2020-12-10T01:02:19Z", "author": {"login": "ajsutton"}, "path": "ethereum/datastructures/src/main/java/tech/pegasys/teku/datastructures/state/BeaconState.java", "diffHunk": "@@ -193,6 +193,8 @@ static BeaconState create(\n             });\n   }\n \n+  TransitionCaches getTransitionCaches();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82236af1ae71de008e1f7a4b0ca3767a10bfc802"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc2OTU5Nw==", "bodyText": "Now that I think about it, these numbers don't quite work out like this (sorry).  The TotalBalances are created at the end of the epoch so the \"current\" balance is actually \"previous\" by the time we're actually updating the metrics.  I suspect we should just drop the \"current\" version of these metrics as they're not particularly useful anyway.\nThen we wind up setting:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n          \n          \n            \n                          previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n          \n          \n            \n            \n          \n          \n            \n                          currentEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getCurrentEpochAttesters().longValue());\n          \n          \n            \n                          previousEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getPreviousEpochAttesters().longValue());\n          \n          \n            \n                          previousEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n          \n          \n            \n            \n          \n          \n            \n                          previousEpochParticipationWeight.set(\n          \n          \n            \n                              totalBalances.getCurrentEpochAttesters().longValue());\n          \n      \n    \n    \n  \n\nand add a comment explaining why it's right even though it looks weird. :) Also need to consider if we have to worry about overflowing the signed long value with these metrics.  Prometheus actually uses a double for everything so we could potentially convert it to ETH if there's a risk of overflow.", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r539769597", "createdAt": "2020-12-10T01:17:03Z", "author": {"login": "ajsutton"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -171,6 +208,19 @@ public void onSlot(final UInt64 slot) {\n \n   private void updateMetrics(final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();\n+    state\n+        .getTransitionCaches()\n+        .getLatestTotalBalances()\n+        .ifPresent(\n+            totalBalances -> {\n+              currentEpochTotalWeight.set(totalBalances.getCurrentEpoch().longValue());\n+              previousEpochTotalWeight.set(totalBalances.getPreviousEpoch().longValue());\n+\n+              currentEpochParticipationWeight.set(\n+                  totalBalances.getCurrentEpochAttesters().longValue());\n+              previousEpochParticipationWeight.set(\n+                  totalBalances.getPreviousEpochAttesters().longValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82236af1ae71de008e1f7a4b0ca3767a10bfc802"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3117b208a19d003a4c43b7ae9845dac360e71805", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/3117b208a19d003a4c43b7ae9845dac360e71805", "committedDate": "2020-12-10T17:56:22Z", "message": "Get transition caches with util class and only set previous epoch weights"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cff7050717344d7795f2f5d568d65be697c99a88", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/cff7050717344d7795f2f5d568d65be697c99a88", "committedDate": "2020-12-10T18:13:02Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43ab52b167f91f0238b1aaf855a608564681021c", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/43ab52b167f91f0238b1aaf855a608564681021c", "committedDate": "2020-12-10T18:13:49Z", "message": "Run spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e0cd459f40a6153ac2d949d2514fe64251d5362", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/1e0cd459f40a6153ac2d949d2514fe64251d5362", "committedDate": "2020-12-10T18:14:07Z", "message": "Remove redundant varibles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcb85a02317fdcd5f5a61d134546887664b6a777", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/fcb85a02317fdcd5f5a61d134546887664b6a777", "committedDate": "2020-12-10T18:22:16Z", "message": "Add independent module to reference test executor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40e9c7683f40caca67322f45f243787b27c378b4", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/40e9c7683f40caca67322f45f243787b27c378b4", "committedDate": "2020-12-10T18:49:08Z", "message": "Merge branch 'master' into addWeightedParticipationMetrics2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5Nzk5MDkz", "url": "https://github.com/ConsenSys/teku/pull/3383#pullrequestreview-549799093", "createdAt": "2020-12-11T04:47:54Z", "commit": {"oid": "40e9c7683f40caca67322f45f243787b27c378b4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDo0Nzo1NFrOIDo--A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDo0Nzo1NFrOIDo--A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY4ODEyMA==", "bodyText": "Hmm, good question.  It won't have updated if there's an empty slot but it will then update when the next block is received so it's probably not a big deal.  The alternative would be to use retrieveStateAtSlot but that risks triggering the processing of a bunch of empty slots and epoch transitions just to update metrics which I don't think we want to do.\nSo I'd probably leave it as is I think...", "url": "https://github.com/ConsenSys/teku/pull/3383#discussion_r540688120", "createdAt": "2020-12-11T04:47:54Z", "author": {"login": "ajsutton"}, "path": "services/beaconchain/src/main/java/tech/pegasys/teku/services/beaconchain/BeaconChainMetrics.java", "diffHunk": "@@ -162,15 +175,57 @@ public BeaconChainMetrics(\n             TekuMetricCategory.BEACON,\n             \"previous_correct_validators\",\n             \"Number of validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the current epoch\");\n+    previousEpochParticipationWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_participation_weight\",\n+            \"Total effective balance of all validators who voted for correct source and target checkpoints in the previous epoch\");\n+\n+    currentEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"current_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the current epoch\");\n+    previousEpochTotalWeight =\n+        SettableGauge.create(\n+            metricsSystem,\n+            TekuMetricCategory.BEACON,\n+            \"previous_epoch_total_weight\",\n+            \"Total effective balance of all active validators in the previous epoch\");\n   }\n \n   @Override\n   public void onSlot(final UInt64 slot) {\n-    recentChainData.getChainHead().ifPresent(this::updateMetrics);\n+    recentChainData.getChainHead().ifPresent(head -> updateMetrics(slot, head));\n   }\n \n-  private void updateMetrics(final StateAndBlockSummary head) {\n+  private void updateMetrics(final UInt64 slot, final StateAndBlockSummary head) {\n     final BeaconState state = head.getState();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYwMTAyMw=="}, "originalCommit": {"oid": "d0911ef0d020c0cc353cd641c264ff2d20618422"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a6f726058a12b94cac683e9c10480fbc5739f77", "author": {"user": {"login": "cemozerr", "name": "Cem Ozer"}}, "url": "https://github.com/ConsenSys/teku/commit/1a6f726058a12b94cac683e9c10480fbc5739f77", "committedDate": "2020-12-11T14:19:58Z", "message": "Merge branch 'master' into addWeightedParticipationMetrics2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4369, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}