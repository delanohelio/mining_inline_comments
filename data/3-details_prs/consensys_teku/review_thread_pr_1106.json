{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1ODU1MDc5", "number": 1106, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjozNDoyOVrODZ_-Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjozNDoyOVrODZ_-Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTg5MDk5OnYy", "diffSide": "RIGHT", "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/BlockProcessorUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjozNDoyOVrOFgtZiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QyMDoyNjoyN1rOFhLlcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ==", "bodyText": "Not critical, but would we be better off using allMatch(is_valid_indexed_attestation(...)) here? I suspect the stream bails out if one thread throws an exception anyway but allMatch makes it a bit more explicit and then we can just check the result instead of catching the exception.\nCould even use .filter(!is_valid_indexed_attestation).findAny() and include actual information about which attestation we found was invalid...", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r369842569", "createdAt": "2020-01-22T22:34:29Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/BlockProcessorUtil.java", "diffHunk": "@@ -388,12 +388,18 @@ public static void process_attestations(BeaconState state, List<Attestation> att\n               \"process_attestations: Attestation source error 2\");\n           state.getPrevious_epoch_attestations().add(pendingAttestation);\n         }\n-\n-        // Check signature\n-        checkArgument(\n-            is_valid_indexed_attestation(state, get_indexed_attestation(state, attestation)),\n-            \"process_attestations: Check signature\");\n       }\n+\n+      attestations.stream()\n+          .parallel()\n+          .forEach(\n+              attestation -> {\n+                // Check signature\n+                checkArgument(\n+                    is_valid_indexed_attestation(\n+                        state, get_indexed_attestation(state, attestation)),\n+                    \"process_attestations: Check signature\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTk1NTQxOA==", "bodyText": "@ajsutton yep, your variant looks better.\nWhat's the better way to address this change: reopen this PR, create a separate new one, or just put this change together with one of next PRs?", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r369955418", "createdAt": "2020-01-23T06:55:45Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/BlockProcessorUtil.java", "diffHunk": "@@ -388,12 +388,18 @@ public static void process_attestations(BeaconState state, List<Attestation> att\n               \"process_attestations: Attestation source error 2\");\n           state.getPrevious_epoch_attestations().add(pendingAttestation);\n         }\n-\n-        // Check signature\n-        checkArgument(\n-            is_valid_indexed_attestation(state, get_indexed_attestation(state, attestation)),\n-            \"process_attestations: Check signature\");\n       }\n+\n+      attestations.stream()\n+          .parallel()\n+          .forEach(\n+              attestation -> {\n+                // Check signature\n+                checkArgument(\n+                    is_valid_indexed_attestation(\n+                        state, get_indexed_attestation(state, attestation)),\n+                    \"process_attestations: Check signature\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ=="}, "originalCommit": {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMxNjI2Ng==", "bodyText": "Probably just a new PR unless you happen to be making more changes right in this area.", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r370316266", "createdAt": "2020-01-23T19:39:02Z", "author": {"login": "ajsutton"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/BlockProcessorUtil.java", "diffHunk": "@@ -388,12 +388,18 @@ public static void process_attestations(BeaconState state, List<Attestation> att\n               \"process_attestations: Attestation source error 2\");\n           state.getPrevious_epoch_attestations().add(pendingAttestation);\n         }\n-\n-        // Check signature\n-        checkArgument(\n-            is_valid_indexed_attestation(state, get_indexed_attestation(state, attestation)),\n-            \"process_attestations: Check signature\");\n       }\n+\n+      attestations.stream()\n+          .parallel()\n+          .forEach(\n+              attestation -> {\n+                // Check signature\n+                checkArgument(\n+                    is_valid_indexed_attestation(\n+                        state, get_indexed_attestation(state, attestation)),\n+                    \"process_attestations: Check signature\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ=="}, "originalCommit": {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMzNzEzOA==", "bodyText": "#1115", "url": "https://github.com/ConsenSys/teku/pull/1106#discussion_r370337138", "createdAt": "2020-01-23T20:26:27Z", "author": {"login": "Nashatyrev"}, "path": "ethereum/statetransition/src/main/java/tech/pegasys/artemis/statetransition/util/BlockProcessorUtil.java", "diffHunk": "@@ -388,12 +388,18 @@ public static void process_attestations(BeaconState state, List<Attestation> att\n               \"process_attestations: Attestation source error 2\");\n           state.getPrevious_epoch_attestations().add(pendingAttestation);\n         }\n-\n-        // Check signature\n-        checkArgument(\n-            is_valid_indexed_attestation(state, get_indexed_attestation(state, attestation)),\n-            \"process_attestations: Check signature\");\n       }\n+\n+      attestations.stream()\n+          .parallel()\n+          .forEach(\n+              attestation -> {\n+                // Check signature\n+                checkArgument(\n+                    is_valid_indexed_attestation(\n+                        state, get_indexed_attestation(state, attestation)),\n+                    \"process_attestations: Check signature\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg0MjU2OQ=="}, "originalCommit": {"oid": "32172ed5f9efafa88f29b48da2e62830917ac159"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2789, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}