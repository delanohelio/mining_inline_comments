{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MzIyODM1", "number": 2151, "title": "Catch errors from Supplier and pass to returned future", "bodyText": "PR Description\nWhen the supplier passed to AsyncRunner methods throws an exception (instead of returning a failed SafeFuture), catch and propagate the exception to the future returned by AsyncRunner.\nMuch more targeted change than #2150 which doesn't give us the metrics but hopefully still fixes the memory leak.\nFixed Issue(s)\nCatching exceptions may be the fix for #2149 as many StreamClosedExceptions are encountered but weren't being reported back to the request callback so the request wasn't cleaned up.\nDocumentation\n\n I thought about documentation and added the documentation label to this PR if updates are required.", "createdAt": "2020-06-15T06:38:06Z", "url": "https://github.com/ConsenSys/teku/pull/2151", "merged": true, "mergeCommit": {"oid": "c3c8c786df1a9bf93505a2e829ecb1f0af36ee49"}, "closed": true, "closedAt": "2020-06-15T21:14:07Z", "author": {"login": "ajsutton"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrawTXgH2gAyNDM0MzIyODM1OjI4ZjQzZGU3N2U0NDYxZmYwNzhiMjM0NjQyNGQ3OTYyMWE1M2E0MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrnJ3dAH2gAyNDM0MzIyODM1Ojg2OTllNmU4MDhhNDhkNjljYmFjNTBmNjZlYjEwZWE4MDM2N2JmODI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "28f43de77e4461ff078b2346424d79621a53a418", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/28f43de77e4461ff078b2346424d79621a53a418", "committedDate": "2020-06-15T06:35:07Z", "message": "Catch errors from Supplier and pass to returned future."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/261e519a7cbb7a29ac10e13e9f79bf953e9e8d09", "committedDate": "2020-06-15T06:37:57Z", "message": "Handle stream closed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNjQ3MDM3", "url": "https://github.com/ConsenSys/teku/pull/2151#pullrequestreview-430647037", "createdAt": "2020-06-15T13:33:12Z", "commit": {"oid": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzozMzoxMlrOGjyVjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzozMzoxMlrOGjyVjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3ODA2MQ==", "bodyText": "What I understand is that propagateResult, which dealt with exceptions that return failed future correctly, did not deal well with exceptions that do not return a failed future. Thus you've implemented runTask to account for any throwable that might occur. Did I get that correctly?", "url": "https://github.com/ConsenSys/teku/pull/2151#discussion_r440178061", "createdAt": "2020-06-15T13:33:12Z", "author": {"login": "cemozerr"}, "path": "util/src/main/java/tech/pegasys/teku/util/async/DelayedExecutorAsyncRunner.java", "diffHunk": "@@ -58,15 +56,23 @@ public static DelayedExecutorAsyncRunner create(Executor executor) {\n   <U> SafeFuture<U> runAsync(final Supplier<SafeFuture<U>> action, final Executor executor) {\n     final SafeFuture<U> result = new SafeFuture<>();\n     try {\n-      executor.execute(() -> propagateResult(action.get(), result));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNjQ4MTIy", "url": "https://github.com/ConsenSys/teku/pull/2151#pullrequestreview-430648122", "createdAt": "2020-06-15T13:34:27Z", "commit": {"oid": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzozNDoyN1rOGjyYvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMzozNDoyN1rOGjyYvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3ODg3OA==", "bodyText": "Looks good to me, but isn't this an anti-pattern? and is there any better way of doing this potentially?", "url": "https://github.com/ConsenSys/teku/pull/2151#discussion_r440178878", "createdAt": "2020-06-15T13:34:27Z", "author": {"login": "cemozerr"}, "path": "util/src/main/java/tech/pegasys/teku/util/async/DelayedExecutorAsyncRunner.java", "diffHunk": "@@ -58,15 +56,23 @@ public static DelayedExecutorAsyncRunner create(Executor executor) {\n   <U> SafeFuture<U> runAsync(final Supplier<SafeFuture<U>> action, final Executor executor) {\n     final SafeFuture<U> result = new SafeFuture<>();\n     try {\n-      executor.execute(() -> propagateResult(action.get(), result));\n-    } catch (RejectedExecutionException ex) {\n+      executor.execute(() -> runTask(action, result));\n+    } catch (final RejectedExecutionException ex) {\n       LOG.debug(\"shutting down \", ex);\n     } catch (final Throwable t) {\n       result.completeExceptionally(t);\n     }\n     return result;\n   }\n \n+  private <U> void runTask(final Supplier<SafeFuture<U>> action, final SafeFuture<U> result) {\n+    try {\n+      action.get().propagateTo(result);\n+    } catch (final Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNjQ4MjMz", "url": "https://github.com/ConsenSys/teku/pull/2151#pullrequestreview-430648233", "createdAt": "2020-06-15T13:34:35Z", "commit": {"oid": "261e519a7cbb7a29ac10e13e9f79bf953e9e8d09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dd546f86c5af5c563772a2783c2fbbfa087c9b6", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/1dd546f86c5af5c563772a2783c2fbbfa087c9b6", "committedDate": "2020-06-15T20:40:12Z", "message": "Use the existing SafeFuture.ofComposed instead of duplicating it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc33225264f7a666e927e9402a78fa5fb2e1c9f2", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/fc33225264f7a666e927e9402a78fa5fb2e1c9f2", "committedDate": "2020-06-15T20:42:41Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into catch-supplier-errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11f37a959ddeef8d4cb879a7f55243e321aefc81", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/11f37a959ddeef8d4cb879a7f55243e321aefc81", "committedDate": "2020-06-15T20:50:52Z", "message": "Add test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8699e6e808a48d69cbac50f66eb10ea80367bf82", "author": {"user": {"login": "ajsutton", "name": "Adrian Sutton"}}, "url": "https://github.com/ConsenSys/teku/commit/8699e6e808a48d69cbac50f66eb10ea80367bf82", "committedDate": "2020-06-15T21:01:54Z", "message": "Merge branch 'master' of github.com:PegaSysEng/teku into catch-supplier-errors"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3931, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}