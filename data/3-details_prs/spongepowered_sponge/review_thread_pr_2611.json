{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTAwMDUz", "number": 2611, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MzoxN1rOD9eUBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MzoxN1rOD9eUBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Nzg2MzczOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/plugin/tileentityactivation/TileEntityActivation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNjo0MzoxN1rOGW_W_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTozMjozN1rOGXEznA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1OTkzMw==", "bodyText": "While we're looking at performance, I wonder if we should also look at making this dependent on distance squared. I realise that it makes some difference to getting bbActivationRange and Math.round() - but the activation range would then be Math.pow(bbActivationRange - 0.5, 2) due to the current rounding, and such rounding would not be required.", "url": "https://github.com/SpongePowered/Sponge/pull/2611#discussion_r426759933", "createdAt": "2020-05-18T16:43:17Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/mixin/plugin/tileentityactivation/TileEntityActivation.java", "diffHunk": "@@ -177,9 +176,13 @@ private static void activateChunkTileEntities(final EntityPlayer player, final C\n                 }\n \n                 final int bbActivationRange = ((ActivationCapability) tileEntity).activation$getActivationRange();\n-                final int blockDistance = Math.round(tilePos.distance(playerPos));\n-                if (blockDistance <= bbActivationRange) {\n-                    ((ActivationCapability) tileEntity).activation$setActivatedTick(currentTick);\n+                for (EntityPlayerMP player : players) {\n+                    final Vector3i playerPos = VecHelper.toVector3i(player.getPosition());\n+                    final int blockDistance = Math.round(tilePos.distance(playerPos));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f82986d007ae9789a242e3161a7d94af2d96da1e"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg0OTE4MA==", "bodyText": "Good point.\nI've switched to Vector3i#distanceSquared (which returns an int, so there's no need for rounding).", "url": "https://github.com/SpongePowered/Sponge/pull/2611#discussion_r426849180", "createdAt": "2020-05-18T19:32:37Z", "author": {"login": "ImMorpheus"}, "path": "src/main/java/org/spongepowered/common/mixin/plugin/tileentityactivation/TileEntityActivation.java", "diffHunk": "@@ -177,9 +176,13 @@ private static void activateChunkTileEntities(final EntityPlayer player, final C\n                 }\n \n                 final int bbActivationRange = ((ActivationCapability) tileEntity).activation$getActivationRange();\n-                final int blockDistance = Math.round(tilePos.distance(playerPos));\n-                if (blockDistance <= bbActivationRange) {\n-                    ((ActivationCapability) tileEntity).activation$setActivatedTick(currentTick);\n+                for (EntityPlayerMP player : players) {\n+                    final Vector3i playerPos = VecHelper.toVector3i(player.getPosition());\n+                    final int blockDistance = Math.round(tilePos.distance(playerPos));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc1OTkzMw=="}, "originalCommit": {"oid": "f82986d007ae9789a242e3161a7d94af2d96da1e"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2649, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}