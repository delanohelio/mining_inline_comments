{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MDg2NjAz", "number": 2582, "title": "Improve config documentation", "bodyText": "SpongeCommon | SpongeDocs\n\nAdded missing comments\nImproved formatting of existing comments\n\nTODO\n\n Add missing comments\n Improve lines marked with TODO\n\nRequesting help for adding the missing comments.\nThe docs team takes care of formatting and wording.\nPlease tell me, if the formatting for the docs affects the java source readability negatively.", "createdAt": "2020-04-26T13:47:35Z", "url": "https://github.com/SpongePowered/Sponge/pull/2582", "merged": true, "mergeCommit": {"oid": "4d6c50eeccd7662190bf5b22891ee2d7165ee8f1"}, "closed": true, "closedAt": "2020-06-21T13:19:58Z", "author": {"login": "ST-DDT"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcba8k0AH2gAyNDA5MDg2NjAzOmI5ODk0OGFkYzVkMjEwOGQxNTg1NzZhNjYyMTc4N2M2NzhjN2UyOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpx8U0gFqTQyNzcwMjI5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b98948adc5d2108d158576a6621787c678c7e28c", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/b98948adc5d2108d158576a6621787c678c7e28c", "committedDate": "2020-04-26T13:45:44Z", "message": "Improve config documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTA2ODM3", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-400506837", "createdAt": "2020-04-26T13:50:55Z", "commit": {"oid": "b98948adc5d2108d158576a6621787c678c7e28c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMzo1MDo1NlrOGME2GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMzo1MDo1NlrOGME2GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMxNTQ4MQ==", "bodyText": "typo", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r415315481", "createdAt": "2020-04-26T13:50:56Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/OptimizationCategory.java", "diffHunk": "@@ -33,103 +33,106 @@\n @ConfigSerializable\n public class OptimizationCategory extends ConfigCategory {\n \n-    @Setting(value = \"drops-pre-merge\", comment = \"If 'true', block item drops are pre-processed to avoid \\n\"\n-                                                  + \"having to spawn extra entities that will be merged post spawning. \\n\"\n-                                                  + \"Usually, Sponge is smart enough to determine when to attempt an item pre-merge \\n\"\n-                                                  + \"and when not to, however, in certain cases, some mods rely on items not being \\n\"\n-                                                  + \"pre-merged and actually spawned, in which case, the items will flow right through \\n\"\n-                                                  + \"without being merged.\")\n+    @Setting(value = \"drops-pre-merge\", comment = \"\"\n+            + \"If 'true', block item drops are pre-processed to avoid\\n\"\n+            + \"having to spawn extra entities that will be merged post spawning.\\n\"\n+            + \"Usually, Sponge is smart enough to determine when to attempt an item pre-merge and when not to,\\n\"\n+            + \"however, in certain cases, some mods rely on items not being pre-merged and actually spawned,\\n\"\n+            + \"in which case, the items will flow right through without being merged.\")\n     private boolean preItemDropMerge = false;\n \n-    @Setting(value = \"cache-tameable-owners\", comment = \"Caches tameable entities owners to avoid constant lookups against data watchers. If mods \\n\"\n-                                                      + \"cause issues, disable this.\")\n+    @Setting(value = \"cache-tameable-owners\", comment = \"\"\n+            + \"Caches tameable entities owners to avoid constant lookups against data watchers.\\n\"\n+            + \"If mods cause issues, disable this.\")\n     private boolean cacheTameableOwners = true;\n \n-    @Setting(value = \"structure-saving\", comment = \"Handles structures that are saved to disk. Certain structures can take up large amounts \\n\"\n-                                                 + \"of disk space for very large maps and the data for these structures is only needed while the \\n\"\n-                                                 + \"world around them is generating. Disabling saving of these structures can save disk space and \\n\"\n-                                                 + \"time during saves if your world is already fully generated. \\n\"\n-                                                 + \"Warning: disabling structure saving will break the vanilla locate command.\")\n+    @Setting(value = \"structure-saving\", comment = \"\"\n+            + \"Handles structures that are saved to disk. Certain structures can take up large amounts\\n\"\n+            + \"of disk space for very large maps and the data for these structures is only needed while the\\n\"\n+            + \"world around them is generating. Disabling saving of these structures can save disk space and\\n\"\n+            + \"time during saves if your world is already fully generated.\\n\"\n+            + \"Warning: disabling structure saving will break the vanilla locate command.\")\n     private StructureSaveCategory structureSaveCategory = new StructureSaveCategory();\n \n     @Setting(value = \"async-lighting\", comment = \"Runs lighting updates asynchronously.\")\n     private AsyncLightingCategory asyncLightingCategory = new AsyncLightingCategory();\n \n-    @Setting(value = \"eigen-redstone\", comment = \"Uses theosib's redstone algorithms to completely overhaul the way redstone works.\")\n+    @Setting(value = \"eigen-redstone\",\n+            comment = \"Uses theosib's redstone algorithms to completely overhaul the way redstone works.\")\n     private EigenRedstoneCategory eigenRedstonCategory = new EigenRedstoneCategory();\n \n-    @Setting(value = \"panda-redstone\", comment = \"If 'true', uses Panda4494's redstone implementation which improves performance. \\n\"\n-                                                 + \"See https://bugs.mojang.com/browse/MC-11193 for more information. \\n\"\n-                                                 + \"Note: This optimization has a few issues which are explained in the bug report. \\n\"\n-                                                 + \"We strongly recommend using eigen redstone over this implementation as this will\\n\"\n-                                                 + \"be removed in a future release.\")\n+    @Setting(value = \"panda-redstone\", comment = \"\"\n+            + \"If 'true', uses Panda4494's redstone implementation which improves performance.\\n\"\n+            + \"See https://bugs.mojang.com/browse/MC-11193 for more information.\\n\"\n+            + \"Note: This optimization has a few issues which are explained in the bug report.\\n\"\n+            + \"We strongly recommend using eigen redstone over this implementation as this will\\n\"\n+            + \"be removed in a future release.\")\n     private boolean pandaRedstone = false;\n \n-    @Setting(value = \"enchantment-helper-leak-fix\", comment = \"If 'true', provides a fix for possible leaks through\\n\"\n-                                                              + \"Minecraft's enchantment helper code that can leak\\n\"\n-                                                              + \"entity and world references without much interaction\\n\"\n-                                                              + \"Forge native (so when running SpongeForge implementation)\\n\"\n-                                                              + \"has a similar patch, but Sponge's patch works a little harder\\n\"\n-                                                              + \"at it, but Vanilla (SpongeVanilla implementation) does NOT\\n\"\n-                                                              + \"have any of the patch, leading to the recommendation that this\\n\"\n-                                                              + \"patch is enabled \\\"for sure\\\" when using SpongeVanilla implementation.\\n\"\n-                                                              + \"See https://bugs.mojang.com/browse/MC-128547 for more information.\\n\")\n+    @Setting(value = \"enchantment-helper-leak-fix\", comment = \"\"\n+            + \"If 'true', provides a fix for possible leaks through\\n\"\n+            + \"Minecraft's enchantment helper code that can leak\\n\"\n+            + \"entity and world references without much interaction\\n\"\n+            + \"Forge native (so when running SpongeForge implementation)\\n\"\n+            + \"has a similar patch, but Sponge's patch works a little harder\\n\"\n+            + \"at it, but Vanilla (SpongeVanilla implementation) does NOT\\n\"\n+            + \"have any of the patch, leading to the recommendation that this\\n\"\n+            + \"patch is enabled \\\"for sure\\\" when using SpongeVanilla implementation.\\n\"\n+            + \"See https://bugs.mojang.com/browse/MC-128547 for more information.\\n\")\n     private boolean enchantmentLeak = true;\n \n-    @Setting(value = \"faster-thread-checks\", comment = \"If 'true', allows for Sponge to make better assumptinos on single threaded\\n\"\n-                                                       + \"operations with relation to various checks for server threaded operations.\\n\"\n-                                                       + \"This is default to true due to Sponge being able to precisely inject when\\n\"\n-                                                       + \"the server thread is available. This should make an already fast operation\\n\"\n-                                                       + \"much faster for better thread checks to ensure stability of sponge's systems.\")\n+    @Setting(value = \"faster-thread-checks\", comment = \"\"\n+            + \"If 'true', allows for Sponge to make better assumptinos on single threaded\\n\"\n+            + \"operations with relation to various checks for server threaded operations.\\n\"\n+            + \"This is default to true due to Sponge being able to precisely inject when\\n\"\n+            + \"the server thread is available. This should make an already fast operation\\n\"\n+            + \"much faster for better thread checks to ensure stability of sponge's systems.\")\n     private boolean fasterThreadChecks = true;\n \n-    @Setting(value = \"map-optimization\", comment = \"If 'true', re-writes the incredibly inefficient Vanilla Map code.\\n\"\n-            + \"This yields enormous performance enhancements when using many maps, but has a tiny chance of breaking mods that invasively modify Vanilla.\"\n+    @Setting(value = \"map-optimization\", comment = \"\"\n+            + \"If 'true', re-writes the incredibly inefficient Vanilla Map code.\\n\"\n+            + \"This yields enormous performance enhancements when using many maps,\\n\"\n+            + \"but has a tiny chance of breaking mods that invasively modify Vanilla.\\n\"\n             + \"It is strongly reccomended to keep this on, unless explicitly advised otherwise by a Sponge developer\")\n     private boolean mapOptimization = true;\n \n-    @Setting(value = \"optimize-hoppers\", comment = \"Based on Aikar's optimizationo of Hoppers, setting this to 'true'\\n\"\n-                                                   + \"will allow for hoppers to save performing server -> client updates\\n\"\n-                                                   + \"when transferring items. Because hoppers can transfer items multiple\\n\"\n-                                                   + \"times per tick, these updates can get costly on the server, with\\n\"\n-                                                   + \"little to no benefit to the client. Because of the nature of the\\n\"\n-                                                   + \"change, the default will be 'false' due to the inability to pre-emptively\\n\"\n-                                                   + \"foretell whether mod compatibility will fail with these changes or not.\\n\"\n-                                                   + \"Refer to: https://github.com/PaperMC/Paper/blob/8175ec916f31dcd130fe0884fe46bdc187d829aa/Spigot-Server-Patches/0269-Optimize-Hoppers.patch\\n\"\n-                                                   + \"for more details.\")\n+    @Setting(value = \"optimize-hoppers\", comment = \"\"\n+            + \"Based on Aikar's optimizationo of Hoppers, setting this to 'true'\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b98948adc5d2108d158576a6621787c678c7e28c"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d", "committedDate": "2020-04-26T14:00:40Z", "message": "Fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0b2bbb54eb13359827e8460d9a227c2d68b1493", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/a0b2bbb54eb13359827e8460d9a227c2d68b1493", "committedDate": "2020-05-08T19:56:16Z", "message": "Fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NDg3ODA0", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-408487804", "createdAt": "2020-05-08T19:56:45Z", "commit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "state": "COMMENTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOTo1Njo0NlrOGSxxXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDoyMTo0OVrOGSydgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0MzAwNA==", "bodyText": "this is the list of entities with the name as key and range as value", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422343004", "createdAt": "2020-05-08T19:56:46Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/EntityActivationModCategory.java", "diffHunk": "@@ -33,11 +33,12 @@\n @ConfigSerializable\n public class EntityActivationModCategory extends ConfigCategory {\n \n-    @Setting(value = \"enabled\", comment = \"If 'false', entity activation rules for this mod will be ignored and always tick.\")\n+    @Setting(value = \"enabled\",\n+            comment = \"If 'false', entity activation rules for this mod will be ignored and always tick.\")\n     private boolean isEnabled = true;\n-    @Setting(value = \"defaults\")\n+    @Setting(value = \"defaults\", comment = \"Default activation ranges used for mod entities unless overridden.\")\n     private Map<String, Integer> defaultRanges = new HashMap<>();\n-    @Setting(value = \"entities\")\n+    @Setting(value = \"entities\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0NDAyNQ==", "bodyText": "BungeeCord Module, allows Sponge to be used with a Proxy like Bungeecord or Velocity, usually you want to also enable bungeecord.ip-forwarding with this", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422344025", "createdAt": "2020-05-08T19:58:51Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/ModuleCategory.java", "diffHunk": "@@ -30,32 +30,33 @@\n @ConfigSerializable\n public class ModuleCategory extends ConfigCategory {\n \n-    @Setting(value = \"bungeecord\")\n+    @Setting(value = \"bungeecord\", comment = \"???\")\n     private boolean pluginBungeeCord = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0NTExMg==", "bodyText": "Entity activation module, allows you to tweak entity activation ranges, similarly to \"Entity Distance\" in the latest 1.16 snapshots but per mob. Essentially it changes how far an entity can be away from a player, until it stops being updated (e.g. moving).", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422345112", "createdAt": "2020-05-08T20:01:13Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/ModuleCategory.java", "diffHunk": "@@ -30,32 +30,33 @@\n @ConfigSerializable\n public class ModuleCategory extends ConfigCategory {\n \n-    @Setting(value = \"bungeecord\")\n+    @Setting(value = \"bungeecord\", comment = \"???\")\n     private boolean pluginBungeeCord = false;\n \n-    @Setting(value = \"entity-activation-range\")\n+    @Setting(value = \"entity-activation-range\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0NjM2MA==", "bodyText": "Module that allows you to configure the maximum amount of entities a specific entity or block can collide with.", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422346360", "createdAt": "2020-05-08T20:03:59Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/ModuleCategory.java", "diffHunk": "@@ -30,32 +30,33 @@\n @ConfigSerializable\n public class ModuleCategory extends ConfigCategory {\n \n-    @Setting(value = \"bungeecord\")\n+    @Setting(value = \"bungeecord\", comment = \"???\")\n     private boolean pluginBungeeCord = false;\n \n-    @Setting(value = \"entity-activation-range\")\n+    @Setting(value = \"entity-activation-range\", comment = \"???\")\n     private boolean pluginEntityActivation = true;\n \n-    @Setting(value = \"tileentity-activation\", comment = \"Controls block range and tick rate of tileentities. \\n\"\n-                                                      + \"Use with caution as this can break intended functionality.\")\n+    @Setting(value = \"tileentity-activation\", comment = \"\"\n+            + \"Controls block range and tick rate of tileentities.\\n\"\n+            + \"Use with caution as this can break intended functionality.\")\n     private boolean pluginTileEntityActivation = false;\n \n-    @Setting(value = \"entity-collisions\")\n+    @Setting(value = \"entity-collisions\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0Njk5OA==", "bodyText": "Module to run Aikar's Timings, profile your server performance and get a sharable web result https://github.com/aikar/timings#aikars-minecraft-timings-viewer-v2", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422346998", "createdAt": "2020-05-08T20:05:15Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/ModuleCategory.java", "diffHunk": "@@ -30,32 +30,33 @@\n @ConfigSerializable\n public class ModuleCategory extends ConfigCategory {\n \n-    @Setting(value = \"bungeecord\")\n+    @Setting(value = \"bungeecord\", comment = \"???\")\n     private boolean pluginBungeeCord = false;\n \n-    @Setting(value = \"entity-activation-range\")\n+    @Setting(value = \"entity-activation-range\", comment = \"???\")\n     private boolean pluginEntityActivation = true;\n \n-    @Setting(value = \"tileentity-activation\", comment = \"Controls block range and tick rate of tileentities. \\n\"\n-                                                      + \"Use with caution as this can break intended functionality.\")\n+    @Setting(value = \"tileentity-activation\", comment = \"\"\n+            + \"Controls block range and tick rate of tileentities.\\n\"\n+            + \"Use with caution as this can break intended functionality.\")\n     private boolean pluginTileEntityActivation = false;\n \n-    @Setting(value = \"entity-collisions\")\n+    @Setting(value = \"entity-collisions\", comment = \"???\")\n     private boolean pluginEntityCollisions = true;\n \n-    @Setting(\"timings\")\n+    @Setting(value = \"timings\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0ODA0Mw==", "bodyText": "this used to disable some part of the tracking, i dont think its used anymore? https://github.com/SpongePowered/SpongeCommon/blob/4a9742b465d095769fa4e6ca5fbf22865e3de87b/src/main/java/org/spongepowered/common/mixin/plugin/TrackingPlugin.java#L48", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422348043", "createdAt": "2020-05-08T20:07:29Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/ModuleCategory.java", "diffHunk": "@@ -30,32 +30,33 @@\n @ConfigSerializable\n public class ModuleCategory extends ConfigCategory {\n \n-    @Setting(value = \"bungeecord\")\n+    @Setting(value = \"bungeecord\", comment = \"???\")\n     private boolean pluginBungeeCord = false;\n \n-    @Setting(value = \"entity-activation-range\")\n+    @Setting(value = \"entity-activation-range\", comment = \"???\")\n     private boolean pluginEntityActivation = true;\n \n-    @Setting(value = \"tileentity-activation\", comment = \"Controls block range and tick rate of tileentities. \\n\"\n-                                                      + \"Use with caution as this can break intended functionality.\")\n+    @Setting(value = \"tileentity-activation\", comment = \"\"\n+            + \"Controls block range and tick rate of tileentities.\\n\"\n+            + \"Use with caution as this can break intended functionality.\")\n     private boolean pluginTileEntityActivation = false;\n \n-    @Setting(value = \"entity-collisions\")\n+    @Setting(value = \"entity-collisions\", comment = \"???\")\n     private boolean pluginEntityCollisions = true;\n \n-    @Setting(\"timings\")\n+    @Setting(value = \"timings\", comment = \"???\")\n     private boolean pluginTimings = true;\n \n-    @Setting(value = \"exploits\", comment = \"Controls whether any exploit patches are applied.\\n\"\n-                                           + \"If there are issues with any specific exploits, please\\n\"\n-                                           + \"test in the exploit category first, before disabling all\\n\"\n-                                           + \"exploits with this toggle.\")\n+    @Setting(value = \"exploits\", comment = \"\"\n+            + \"Controls whether any exploit patches are applied.\\n\"\n+            + \"If there are issues with any specific exploits, please test in the exploit category first,\\n\"\n+            + \"before disabling all exploits with this toggle.\")\n     private boolean enableExploitPatches = true;\n \n-    @Setting(\"optimizations\")\n+    @Setting(value = \"optimizations\")\n     private boolean enableOptimizationPatches = true;\n \n-    @Setting(\"tracking\")\n+    @Setting(value = \"tracking\", comment = \"???\")\n     private boolean tracking = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0ODgzNQ==", "bodyText": "my config file has this for it, not sure where that comment went? Default activation block range used for all tileentities unless overridden.", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422348835", "createdAt": "2020-05-08T20:09:13Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TileEntityActivationModCategory.java", "diffHunk": "@@ -33,15 +33,16 @@\n @ConfigSerializable\n public class TileEntityActivationModCategory extends ConfigCategory {\n \n-    @Setting(value = \"enabled\", comment = \"If 'false', tileentity activation rules for this mod will be ignored and always tick.\")\n+    @Setting(value = \"enabled\",\n+            comment = \"If 'false', tileentity activation rules for this mod will be ignored and always tick.\")\n     private boolean isEnabled = true;\n-    @Setting(value = \"default-block-range\")\n+    @Setting(value = \"default-block-range\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0ODk2MQ==", "bodyText": "same as previous Default tick rate used for all tileentities unless overridden.", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422348961", "createdAt": "2020-05-08T20:09:29Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TileEntityActivationModCategory.java", "diffHunk": "@@ -33,15 +33,16 @@\n @ConfigSerializable\n public class TileEntityActivationModCategory extends ConfigCategory {\n \n-    @Setting(value = \"enabled\", comment = \"If 'false', tileentity activation rules for this mod will be ignored and always tick.\")\n+    @Setting(value = \"enabled\",\n+            comment = \"If 'false', tileentity activation rules for this mod will be ignored and always tick.\")\n     private boolean isEnabled = true;\n-    @Setting(value = \"default-block-range\")\n+    @Setting(value = \"default-block-range\", comment = \"???\")\n     private Integer defaultBlockRange;\n-    @Setting(value = \"default-tick-rate\")\n+    @Setting(value = \"default-tick-rate\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0OTI5Mw==", "bodyText": "list of tile/block entities with block name as key and range as value", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422349293", "createdAt": "2020-05-08T20:10:17Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TileEntityActivationModCategory.java", "diffHunk": "@@ -33,15 +33,16 @@\n @ConfigSerializable\n public class TileEntityActivationModCategory extends ConfigCategory {\n \n-    @Setting(value = \"enabled\", comment = \"If 'false', tileentity activation rules for this mod will be ignored and always tick.\")\n+    @Setting(value = \"enabled\",\n+            comment = \"If 'false', tileentity activation rules for this mod will be ignored and always tick.\")\n     private boolean isEnabled = true;\n-    @Setting(value = \"default-block-range\")\n+    @Setting(value = \"default-block-range\", comment = \"???\")\n     private Integer defaultBlockRange;\n-    @Setting(value = \"default-tick-rate\")\n+    @Setting(value = \"default-tick-rate\", comment = \"???\")\n     private Integer defaultTickRate;\n-    @Setting(value = \"block-range\")\n+    @Setting(value = \"block-range\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0OTM4NQ==", "bodyText": "list of tile/block entities with block name as key and rate as value", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422349385", "createdAt": "2020-05-08T20:10:28Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TileEntityActivationModCategory.java", "diffHunk": "@@ -33,15 +33,16 @@\n @ConfigSerializable\n public class TileEntityActivationModCategory extends ConfigCategory {\n \n-    @Setting(value = \"enabled\", comment = \"If 'false', tileentity activation rules for this mod will be ignored and always tick.\")\n+    @Setting(value = \"enabled\",\n+            comment = \"If 'false', tileentity activation rules for this mod will be ignored and always tick.\")\n     private boolean isEnabled = true;\n-    @Setting(value = \"default-block-range\")\n+    @Setting(value = \"default-block-range\", comment = \"???\")\n     private Integer defaultBlockRange;\n-    @Setting(value = \"default-tick-rate\")\n+    @Setting(value = \"default-tick-rate\", comment = \"???\")\n     private Integer defaultTickRate;\n-    @Setting(value = \"block-range\")\n+    @Setting(value = \"block-range\", comment = \"???\")\n     private Map<String, Integer> tileEntityRangeList = new HashMap<>();\n-    @Setting(value = \"tick-rate\")\n+    @Setting(value = \"tick-rate\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM0OTc2Mg==", "bodyText": "I think there needs to be some general explanation in the config to what this does, maybe a copy of the module description? same for all categories really", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422349762", "createdAt": "2020-05-08T20:11:19Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TileEntityActivationModCategory.java", "diffHunk": "@@ -33,15 +33,16 @@\n @ConfigSerializable\n public class TileEntityActivationModCategory extends ConfigCategory {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1MTA3Mw==", "bodyText": "??? no clue i looked briefly and it seems to end in https://github.com/SpongePowered/SpongeCommon/blob/6077a35adcb7fd95d4886ffa5aa408a63ac1b4f2/src/main/java/org/spongepowered/common/relocate/co/aikar/timings/TimingHandler.java#L72\nnot sure what the point is", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422351073", "createdAt": "2020-05-08T20:14:05Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TimingsCategory.java", "diffHunk": "@@ -33,22 +33,22 @@\n @ConfigSerializable\n public class TimingsCategory extends ConfigCategory {\n \n-    @Setting\n+    @Setting(comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1MTA5Ng==", "bodyText": "disable timings, might as well disable the module at that point?", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422351096", "createdAt": "2020-05-08T20:14:08Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TimingsCategory.java", "diffHunk": "@@ -33,22 +33,22 @@\n @ConfigSerializable\n public class TimingsCategory extends ConfigCategory {\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean verbose = false;\n \n-    @Setting\n+    @Setting(comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1MTM3OQ==", "bodyText": "Hides the server name in the Airkar webviewer to no leak the l33t server you are running", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422351379", "createdAt": "2020-05-08T20:14:47Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TimingsCategory.java", "diffHunk": "@@ -33,22 +33,22 @@\n @ConfigSerializable\n public class TimingsCategory extends ConfigCategory {\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean verbose = false;\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean enabled = true;\n \n-    @Setting(\"server-name-privacy\")\n+    @Setting(value = \"server-name-privacy\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1MTczNw==", "bodyText": "allows you to hide specific config entries from showing up on the webviewer, e.g. not leak your sql creds", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422351737", "createdAt": "2020-05-08T20:15:36Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TimingsCategory.java", "diffHunk": "@@ -33,22 +33,22 @@\n @ConfigSerializable\n public class TimingsCategory extends ConfigCategory {\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean verbose = false;\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean enabled = true;\n \n-    @Setting(\"server-name-privacy\")\n+    @Setting(value = \"server-name-privacy\", comment = \"???\")\n     private boolean serverNamePrivacy = false;\n \n-    @Setting(\"hidden-config-entries\")\n+    @Setting(value = \"hidden-config-entries\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1MjkyNA==", "bodyText": "how long the list of said history can get", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422352924", "createdAt": "2020-05-08T20:18:34Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TimingsCategory.java", "diffHunk": "@@ -33,22 +33,22 @@\n @ConfigSerializable\n public class TimingsCategory extends ConfigCategory {\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean verbose = false;\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean enabled = true;\n \n-    @Setting(\"server-name-privacy\")\n+    @Setting(value = \"server-name-privacy\", comment = \"???\")\n     private boolean serverNamePrivacy = false;\n \n-    @Setting(\"hidden-config-entries\")\n+    @Setting(value = \"hidden-config-entries\", comment = \"???\")\n     private List<String> hiddenConfigEntries = Lists.newArrayList(\"sponge.sql\");\n \n-    @Setting(\"history-interval\")\n+    @Setting(value = \"history-interval\", comment = \"???\")\n     private int historyInterval = 300;\n \n-    @Setting(\"history-length\")\n+    @Setting(value = \"history-length\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1MjkzMA==", "bodyText": "ticks % history-interval\nmodulo how often a tick should be pushed to the timings history, not sure exactly what the history is", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422352930", "createdAt": "2020-05-08T20:18:35Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/category/TimingsCategory.java", "diffHunk": "@@ -33,22 +33,22 @@\n @ConfigSerializable\n public class TimingsCategory extends ConfigCategory {\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean verbose = false;\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean enabled = true;\n \n-    @Setting(\"server-name-privacy\")\n+    @Setting(value = \"server-name-privacy\", comment = \"???\")\n     private boolean serverNamePrivacy = false;\n \n-    @Setting(\"hidden-config-entries\")\n+    @Setting(value = \"hidden-config-entries\", comment = \"???\")\n     private List<String> hiddenConfigEntries = Lists.newArrayList(\"sponge.sql\");\n \n-    @Setting(\"history-interval\")\n+    @Setting(value = \"history-interval\", comment = \"???\")\n     private int historyInterval = 300;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1MzU5Nw==", "bodyText": "Module to run Aikar's Timings, profile your server performance and get a sharable web result https://github.com/aikar/timings#aikars-minecraft-timings-viewer-v2", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422353597", "createdAt": "2020-05-08T20:20:04Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/type/GeneralConfigBase.java", "diffHunk": "@@ -42,29 +42,45 @@\n \n public class GeneralConfigBase extends ConfigBase {\n \n-    @Setting\n+    @Setting(comment = \"Configuration options that will affect all worlds.\")\n     protected WorldCategory world = new WorldCategory();\n-    @Setting(value = \"player-block-tracker\")\n+\n+    @Setting(value = \"player-block-tracker\",\n+            comment = \"Configuration options related to tracking player interactions with blocks\")\n     private PlayerBlockTracker playerBlockTracker = new PlayerBlockTracker();\n-    @Setting\n+\n+    @Setting(comment = \"Configuratiom options related to debugging features that are disabled by default.\")\n     private DebugCategory debug = new DebugCategory();\n-    @Setting(value = \"entity\")\n+\n+    @Setting(value = \"entity\", comment = \"Configuration options related to entities and their performance impact.\")\n     private EntityCategory entity = new EntityCategory();\n-    @Setting(value = \"entity-activation-range\")\n+\n+    @Setting(value = \"entity-activation-range\",\n+            comment = \"Allows the configuration of the default entity activation ranges.\")\n     private EntityActivationRangeCategory entityActivationRange = new EntityActivationRangeCategory();\n-    @Setting(value = \"entity-collisions\")\n+\n+    @Setting(value = \"entity-collisions\", comment = \"Configuration options related to entity collision checks.\")\n     private EntityCollisionCategory entityCollisionCategory = new EntityCollisionCategory();\n-    @Setting\n+\n+    @Setting(\n+            comment = \"Contains general configuration options for Sponge that don't fit into a specific classification\")\n     private GeneralCategory general = new GeneralCategory();\n-    @Setting\n+\n+    @Setting(comment = \"Configuration option related to logging certain action such as chunk loading.\")\n     private LoggingCategory logging = new LoggingCategory();\n-    @Setting(value = \"spawner\", comment = \"Used to control spawn limits around players. \\n\"\n-                                        + \"Note: The radius uses the lower value of mob spawn range and server's view distance.\")\n+\n+    @Setting(value = \"spawner\", comment = \"\"\n+            + \"Used to control spawn limits around players.\\n\"\n+            + \"Note: The radius uses the lower value of mob spawn range and server's view distance.\")\n     private SpawnerCategory spawner = new SpawnerCategory();\n-    @Setting(value = \"tileentity-activation\")\n+\n+    @Setting(value = \"tileentity-activation\",\n+            comment = \"Configuration options related to activation ranges of tile entities.\")\n     private TileEntityActivationCategory tileEntityActivationCategory = new TileEntityActivationCategory();\n-    @Setting\n+\n+    @Setting(comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM1NDMwNw==", "bodyText": "SpongePowered/SpongeForge#239", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r422354307", "createdAt": "2020-05-08T20:21:49Z", "author": {"login": "phit"}, "path": "src/main/java/org/spongepowered/common/config/type/GlobalConfig.java", "diffHunk": "@@ -58,46 +58,51 @@\n     @Setting(comment = \"Configuration options related to the Sql service, including connection aliases etc\")\n     private SqlCategory sql = new SqlCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to commands, including command aliases and hidden commands.\")\n     private CommandsCategory commands = new CommandsCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to permissions and permission handling\")\n     private PermissionCategory permission = new PermissionCategory();\n \n-    @Setting(value = \"modules\")\n+    @Setting(value = \"modules\", comment = \"Options related to optional modules, that can be enabled or disabled.\")\n     private ModuleCategory mixins = new ModuleCategory();\n \n-    @Setting(\"ip-sets\")\n+    @Setting(value = \"ip-sets\", comment = \"???\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ebfcb7f7b04ef41baf0c998981bb6ca8ba63a2d"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63fa6a3de72775418de31ef89ad7e0eb6fbd5a9d", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/63fa6a3de72775418de31ef89ad7e0eb6fbd5a9d", "committedDate": "2020-05-09T14:32:36Z", "message": "Add comments based on phit's suggestions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99b9f509cecd2260e6394eca0b23187c037cb174", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/99b9f509cecd2260e6394eca0b23187c037cb174", "committedDate": "2020-05-09T16:23:01Z", "message": "Revert unintentional change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTg4MTI4", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-412988128", "createdAt": "2020-05-15T21:51:37Z", "commit": {"oid": "99b9f509cecd2260e6394eca0b23187c037cb174"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMTo1MTozN1rOGWU0EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjowMjoxNVrOGWVBIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA2Mjg2NA==", "bodyText": "This is used by OptimizationCategory#useStructureSave\nhttps://github.com/SpongePowered/SpongeCommon/blob/bafbfa0a6849bee99d6fd1c0b8f563e5fb1bee35/src/main/java/org/spongepowered/common/config/category/OptimizationCategory.java#L137-L139\nwhich is used by the OptimizationPlugin to decide if the Mixin should be applied:\nhttps://github.com/SpongePowered/SpongeCommon/blob/bafbfa0a6849bee99d6fd1c0b8f563e5fb1bee35/src/main/java/org/spongepowered/common/mixin/plugin/OptimizationPlugin.java#L118-L119\nThe mixin is then used to allows servers to opt-out of saving specific structures\nhttps://github.com/SpongePowered/SpongeCommon/blob/bafbfa0a6849bee99d6fd1c0b8f563e5fb1bee35/src/main/java/org/spongepowered/common/mixin/optimization/world/gen/structure/MapGenStructureMixin_Structure_Saving.java#L53\nThis is basically a global switch for the StructureSaveCategory.", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r426062864", "createdAt": "2020-05-15T21:51:37Z", "author": {"login": "ImMorpheus"}, "path": "src/main/java/org/spongepowered/common/config/category/StructureSaveCategory.java", "diffHunk": "@@ -33,19 +33,22 @@\n @ConfigSerializable\n public class StructureSaveCategory extends ConfigCategory {\n \n-    @Setting(value = \"enabled\", comment = \"If 'false', disables the modification to prevent certain structures\\n\"\n-                                          + \"from saving to the world's data folder. If you wish to prevent certain\\n\"\n-                                          + \"structures from saving, leave this \\\"enabled=true\\\". When \\'true\\', the\\n\"\n-                                          + \"modification allows for specific \\'named\\' structures to NOT be saved to\\n\"\n-                                          + \"disk. Examples of some structures that are costly and somewhat irrelivent\\n\"\n-                                          + \"is 'mineshaft's, as they build several structures and save, even after\\n\"\n-                                          + \"finished generating.\")\n+    @Setting(value = \"enabled\", comment = \"\" // TODO: Unclear", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b9f509cecd2260e6394eca0b23187c037cb174"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA2NDgzMw==", "bodyText": "The collection is set to UNDEFINED (which happens to be treated as disabled). It's not disabled by default.\nWouldn't this be better suited inside the MetricsCategory ?", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r426064833", "createdAt": "2020-05-15T21:57:54Z", "author": {"login": "ImMorpheus"}, "path": "src/main/java/org/spongepowered/common/config/type/GlobalConfig.java", "diffHunk": "@@ -58,46 +58,53 @@\n     @Setting(comment = \"Configuration options related to the Sql service, including connection aliases etc\")\n     private SqlCategory sql = new SqlCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to commands, including command aliases and hidden commands.\")\n     private CommandsCategory commands = new CommandsCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to permissions and permission handling\")\n     private PermissionCategory permission = new PermissionCategory();\n \n-    @Setting(value = \"modules\")\n+    @Setting(value = \"modules\", comment = \"Options related to optional modules, that can be enabled or disabled.\")\n     private ModuleCategory mixins = new ModuleCategory();\n \n-    @Setting(\"ip-sets\")\n+    @Setting(value = \"ip-sets\", comment = \"\"\n+            + \"Automatically assigns (permission) contexts to users that use any of the given ips.\\n\"\n+            + \"This can be used to restrict/grand permissions, based on the player's source or target ip.\")\n     private Map<String, List<IpSet>> ipSets = new HashMap<>();\n \n-    @Setting(value = \"bungeecord\")\n+    @Setting(value = \"bungeecord\", comment = \"Configuration options related for server proxies, such as bungeecord\")\n     private BungeeCordCategory bungeeCord = new BungeeCordCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration option related to sponge provided exploit patches\")\n     private ExploitCategory exploits = new ExploitCategory();\n \n-    @Setting(value = \"optimizations\")\n+    @Setting(value = \"optimizations\",\n+            comment = \"Configuration options related to sponge provided performance optimizations.\")\n     private OptimizationCategory optimizations = new OptimizationCategory();\n \n-    @Setting\n+    @Setting(\n+            comment = \"Contains general configuration options for Sponge that don't fit into a specific classification\")\n     protected GlobalGeneralCategory general = new GlobalGeneralCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options that will affect all worlds.\")\n     protected GlobalWorldCategory world = new GlobalWorldCategory();\n \n-    @Setting(value = \"cause-tracker\")\n+    @Setting(value = \"cause-tracker\", comment = \"Options related to Sponge's cause tracking system\")\n     private PhaseTrackerCategory causeTracker = new PhaseTrackerCategory();\n \n     @Setting(value = \"teleport-helper\", comment = \"Blocks to blacklist for safe teleportation.\")\n     private TeleportHelperCategory teleportHelper = new TeleportHelperCategory();\n \n-    @Setting(\"movement-checks\")\n+    @Setting(value = \"movement-checks\",\n+            comment = \"Options related to minecraft's movement checks, that can be enabled or disabled.\")\n     private MovementChecksCategory movementChecks = new MovementChecksCategory();\n \n     @Setting(value = \"broken-mods\", comment = \"Stopgap measures for dealing with broken mods\")\n     private BrokenModCategory brokenMods = new BrokenModCategory();\n \n-    @Setting(value = \"metrics\")\n+    @Setting(value = \"metrics\", comment = \"\"\n+            + \"Configuration options related to metric collection.\\n\"\n+            + \"Metric collection is disabled by default.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b9f509cecd2260e6394eca0b23187c037cb174"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA2NjIxMQ==", "bodyText": "Airkar -> Aikar", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r426066211", "createdAt": "2020-05-15T22:02:15Z", "author": {"login": "ImMorpheus"}, "path": "src/main/java/org/spongepowered/common/config/category/TimingsCategory.java", "diffHunk": "@@ -33,22 +33,24 @@\n @ConfigSerializable\n public class TimingsCategory extends ConfigCategory {\n \n-    @Setting\n+    @Setting(comment = \"Enables the verbose mode for the timings module.\")\n     private boolean verbose = false;\n \n-    @Setting\n+    @Setting(comment = \"???\")\n     private boolean enabled = true;\n \n-    @Setting(\"server-name-privacy\")\n+    @Setting(value = \"server-name-privacy\", \n+            comment = \"Hides the server name in the Airkar webviewer to no leak the l33t server you are running\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b9f509cecd2260e6394eca0b23187c037cb174"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "520459ad5bc1259780709a708366e12975b5dd84", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/520459ad5bc1259780709a708366e12975b5dd84", "committedDate": "2020-05-25T20:12:56Z", "message": "Improve documentation/wording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca4819e6e62440bbecbce50011e893825132969e", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/ca4819e6e62440bbecbce50011e893825132969e", "committedDate": "2020-05-25T22:15:18Z", "message": "Integrate ImMorpheus's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b4ada2c2d55f39cc58f6dafce3e9732521f00a", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/c5b4ada2c2d55f39cc58f6dafce3e9732521f00a", "committedDate": "2020-05-25T22:28:12Z", "message": "Merge branch 'stable-7' into docs/configuration\n\nConflicts:\n\tsrc/main/java/org/spongepowered/common/config/category/CollisionModCategory.java\n\tsrc/main/java/org/spongepowered/common/config/category/GlobalGeneralCategory.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODkxMzMw", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-417891330", "createdAt": "2020-05-25T22:30:36Z", "commit": {"oid": "c5b4ada2c2d55f39cc58f6dafce3e9732521f00a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMjozMDozNlrOGaKhbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMjozMDozNlrOGaKhbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA4ODU1Nw==", "bodyText": "Undo these final modifiers on @Setting fields, Configurate's object mapping will not work with these changes.", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r430088557", "createdAt": "2020-05-25T22:30:36Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/config/category/CollisionModCategory.java", "diffHunk": "@@ -34,17 +34,17 @@\n public class CollisionModCategory extends ConfigCategory {\n \n     @Setting(value = \"enabled\", comment = \"If 'false', entity collision rules for this mod will be ignored.\")\n-    private boolean isEnabled = true;\n+    private final boolean isEnabled = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5b4ada2c2d55f39cc58f6dafce3e9732521f00a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/64eb90105e22dcbefcdd293dfdff61fbc9552bac", "committedDate": "2020-05-25T22:32:20Z", "message": "Revert accidental formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzk3NDU0", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-421397454", "createdAt": "2020-05-30T11:06:23Z", "commit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMTowNjoyNFrOGcx_0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMTowNjoyNFrOGcx_0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzMjQ2Ng==", "bodyText": "This might seem like a nitpick, but there should not be an empty string like this at the end of a line. I would much rather just put comment =  on the next line (though, what was wrong with what was there before?)", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r432832466", "createdAt": "2020-05-30T11:06:24Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/config/category/CustomDataRegistrationCategory.java", "diffHunk": "@@ -30,72 +30,68 @@\n import org.spongepowered.api.data.DataView;\n import org.spongepowered.api.data.persistence.InvalidDataException;\n import org.spongepowered.asm.util.PrettyPrinter;\n-import org.spongepowered.common.data.SpongeDataManager;\n import org.spongepowered.common.data.SpongeManipulatorRegistry;\n import org.spongepowered.common.data.persistence.SerializedDataTransaction;\n \n-import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.List;\n import java.util.Set;\n import java.util.concurrent.ConcurrentSkipListSet;\n-import java.util.stream.Collectors;\n \n @ConfigSerializable\n public class CustomDataRegistrationCategory extends ConfigCategory {\n \n     /**\n-     * This isn't so much of a config option, this is more of allowing the\n-     * server owner to know what is registered at present time during server\n-     * startup. This is always auto-populated after the data manager is\n-     * finally baked with all data registrations.\n-     *\n-     * This should be populated after {@link SpongeManipulatorRegistry#bake()}.\n+     * This isn't so much of a config option, this is more of allowing the server\n+     * owner to know what is registered at present time during server startup. This\n+     * is always auto-populated after the data manager is finally baked with all\n+     * data registrations. This should be populated after\n+     * {@link SpongeManipulatorRegistry#bake()}.\n      */\n-    @Setting(value = \"registered-data\", comment = \"An auto generated list, by Sponge, to provide a list of \\n\"\n-                                                + \"registered custom data manipulators by plugins. Since \\n\"\n-                                                + \"the list is generated AFTER the game starts, modifying \\n\"\n-                                                + \"this list will not affect Sponge's system in any way. \\n\"\n-                                                + \"However, it is advisable to view what registered datas \\n\"\n-                                                + \"exist on a server instance, such that when Sponge completes \\n\"\n-                                                + \"startup, it will be verified that all existing registrations \\n\"\n-                                                + \"are accounted for. A warning will be emitted for any existing \\n\"\n-                                                + \"registrations that were not registered, and moved to the \\n\"\n-                                                + \"'failed-data-list'.\")\n+    @Setting(value = \"registered-data\", comment = \"\"\n+            + \"An auto generated list, by Sponge, to provide a list of\\n\"\n+            + \"registered custom data manipulators by plugins. Since\\n\"\n+            + \"the list is generated AFTER the game starts, modifying\\n\"\n+            + \"this list will not affect Sponge's system in any way.\\n\"\n+            + \"However, it is advisable to view what registered datas\\n\"\n+            + \"exist on a server instance, such that when Sponge completes\\n\"\n+            + \"startup, it will be verified that all existing registrations\\n\"\n+            + \"are accounted for. A warning will be emitted for any existing\\n\"\n+            + \"registrations that were not registered, and moved to the\\n\"\n+            + \"'failed-data-list'.\")\n     private Set<String> registeredDataIds = new ConcurrentSkipListSet<>();\n \n     /**\n-     * Again, another auto-populated list of FAILED id's. This is never\n-     * read from file, except after startup, to specify which id's can\n-     * be \"saved\".\n+     * Again, another auto-populated list of FAILED id's. This is never read from\n+     * file, except after startup, to specify which id's can be \"saved\".\n      */\n-    @Setting(value = \"failed-data-list\", comment = \"An auto generated list, by Sponge, to discover and list \\n\"\n-                                                 + \"all failed custom data deserializations at runtime due \\n\"\n-                                                 + \"to a lack of the registrations being made by a plugin. \\n\"\n-                                                 + \"Not to be confused by failed deserialization due to bad data. \\n\"\n-                                                 + \"Modifying the list will result in no effect as Sponge auto \\n\"\n-                                                 + \"generates this list. This is merely for user configuration.\")\n+    @Setting(value = \"failed-data-list\", comment = \"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzk3ODY1", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-421397865", "createdAt": "2020-05-30T11:14:12Z", "commit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMToxNDoxMlrOGcyBnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMToxNDoxMlrOGcyBnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzMjkyNQ==", "bodyText": "We're being very inconsistent here between \"Configuration options\" and just \"Options\" - choose one or the other please (though do we need to specify they are options? We are in the configuration file! Though now I think about it more, if it natrually comes up in the description, so be it).", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r432832925", "createdAt": "2020-05-30T11:14:12Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/config/type/GlobalConfig.java", "diffHunk": "@@ -58,46 +58,51 @@\n     @Setting(comment = \"Configuration options related to the Sql service, including connection aliases etc\")\n     private SqlCategory sql = new SqlCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to commands, including command aliases and hidden commands.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzk4MDc3", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-421398077", "createdAt": "2020-05-30T11:18:20Z", "commit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMToxODoyMVrOGcyCrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMToxODoyMVrOGcyCrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzMzE5OA==", "bodyText": "I think it's worth explaining what modules are a bit more. For example:\nSponge provides a number of modules that allow for enabling or disabling\\n\ncertain specific features. These may be enabled or disabled below.\\n\\n\nAny changes here require a server restart as modules are applied at startup.", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r432833198", "createdAt": "2020-05-30T11:18:21Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/config/type/GlobalConfig.java", "diffHunk": "@@ -58,46 +58,51 @@\n     @Setting(comment = \"Configuration options related to the Sql service, including connection aliases etc\")\n     private SqlCategory sql = new SqlCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to commands, including command aliases and hidden commands.\")\n     private CommandsCategory commands = new CommandsCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to permissions and permission handling\")\n     private PermissionCategory permission = new PermissionCategory();\n \n-    @Setting(value = \"modules\")\n+    @Setting(value = \"modules\", comment = \"Options related to optional modules, that can be enabled or disabled.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzk4MDk3", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-421398097", "createdAt": "2020-05-30T11:18:43Z", "commit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMToxODo0M1rOGcyCwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMToxODo0M1rOGcyCwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzMzIxNw==", "bodyText": "s/grand/grant", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r432833217", "createdAt": "2020-05-30T11:18:43Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/config/type/GlobalConfig.java", "diffHunk": "@@ -58,46 +58,51 @@\n     @Setting(comment = \"Configuration options related to the Sql service, including connection aliases etc\")\n     private SqlCategory sql = new SqlCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to commands, including command aliases and hidden commands.\")\n     private CommandsCategory commands = new CommandsCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to permissions and permission handling\")\n     private PermissionCategory permission = new PermissionCategory();\n \n-    @Setting(value = \"modules\")\n+    @Setting(value = \"modules\", comment = \"Options related to optional modules, that can be enabled or disabled.\")\n     private ModuleCategory mixins = new ModuleCategory();\n \n-    @Setting(\"ip-sets\")\n+    @Setting(value = \"ip-sets\", comment = \"\"\n+            + \"Automatically assigns (permission) contexts to users that use any of the given ips.\\n\"\n+            + \"This can be used to restrict/grand permissions, based on the player's source or target ip.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzk4Mjg5", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-421398289", "createdAt": "2020-05-30T11:22:01Z", "commit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMToyMjowMVrOGcyDuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxMToyMjowMVrOGcyDuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgzMzQ2Nw==", "bodyText": "Controls how Sponge interacts with server proxies, such as BungeeCord and Velocity. Requires that the 'bungeecord' module is enabled.", "url": "https://github.com/SpongePowered/Sponge/pull/2582#discussion_r432833467", "createdAt": "2020-05-30T11:22:01Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/config/type/GlobalConfig.java", "diffHunk": "@@ -58,46 +58,51 @@\n     @Setting(comment = \"Configuration options related to the Sql service, including connection aliases etc\")\n     private SqlCategory sql = new SqlCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to commands, including command aliases and hidden commands.\")\n     private CommandsCategory commands = new CommandsCategory();\n \n-    @Setting\n+    @Setting(comment = \"Configuration options related to permissions and permission handling\")\n     private PermissionCategory permission = new PermissionCategory();\n \n-    @Setting(value = \"modules\")\n+    @Setting(value = \"modules\", comment = \"Options related to optional modules, that can be enabled or disabled.\")\n     private ModuleCategory mixins = new ModuleCategory();\n \n-    @Setting(\"ip-sets\")\n+    @Setting(value = \"ip-sets\", comment = \"\"\n+            + \"Automatically assigns (permission) contexts to users that use any of the given ips.\\n\"\n+            + \"This can be used to restrict/grand permissions, based on the player's source or target ip.\")\n     private Map<String, List<IpSet>> ipSets = new HashMap<>();\n \n-    @Setting(value = \"bungeecord\")\n+    @Setting(value = \"bungeecord\", comment = \"Configuration options related for server proxies, such as bungeecord\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64eb90105e22dcbefcdd293dfdff61fbc9552bac"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "781b25fec82816d3401675dd66496e193ed009d1", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/781b25fec82816d3401675dd66496e193ed009d1", "committedDate": "2020-06-02T15:44:11Z", "message": "Integrate dualspiral's comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db7b588f2bf4a78dbcf5f4049b7b78f3eb70ae8", "author": {"user": {"login": "ST-DDT", "name": null}}, "url": "https://github.com/SpongePowered/Sponge/commit/4db7b588f2bf4a78dbcf5f4049b7b78f3eb70ae8", "committedDate": "2020-06-02T15:50:09Z", "message": "Merge remote-tracking branch 'origin/stable-7' into docs/configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NDM4MTIz", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-427438123", "createdAt": "2020-06-09T18:37:20Z", "commit": {"oid": "4db7b588f2bf4a78dbcf5f4049b7b78f3eb70ae8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NzAyMjk0", "url": "https://github.com/SpongePowered/Sponge/pull/2582#pullrequestreview-427702294", "createdAt": "2020-06-10T04:28:13Z", "commit": {"oid": "4db7b588f2bf4a78dbcf5f4049b7b78f3eb70ae8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 883, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}