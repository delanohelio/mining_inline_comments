{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzU3MTIz", "number": 2506, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNDo0M1rODiD-sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowNDoyMVrOEEJDIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDQzMzc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/event/tracking/phase/packet/drag/DragInventoryStopState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNDo0M1rOFtJYug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNDo0M1rOFtJYug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4NDAyNg==", "bodyText": "(nitpick) final this value please.", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r382884026", "createdAt": "2020-02-22T04:04:43Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/event/tracking/phase/packet/drag/DragInventoryStopState.java", "diffHunk": "@@ -64,13 +65,13 @@ public static void unwindCraftPreview(InventoryPacketContext context) {\n \n         Inventory craftInv = ((Inventory) player.openContainer).query(QueryOperationTypes.INVENTORY_TYPE.of(CraftingInventory.class));\n         if (craftInv instanceof CraftingInventory) {\n-            List<SlotTransaction> previewTransactions = ((ContainerBridge) player.openContainer).bridge$getPreviewTransactions();\n-            if (!previewTransactions.isEmpty()) {\n+            SlotTransaction previewTransaction = ((ContainerBridge) player.openContainer).bridge$getPreviewTransaction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de04873cc8e81a9279cece915a2343c9bbc98a08"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDQzNDA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/event/tracking/phase/packet/inventory/PlaceRecipePacketState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNTozM1rOFtJY4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNTozM1rOFtJY4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4NDA2NA==", "bodyText": "(nitpick) final this variable please", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r382884064", "createdAt": "2020-02-22T04:05:33Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/event/tracking/phase/packet/inventory/PlaceRecipePacketState.java", "diffHunk": "@@ -79,15 +80,14 @@ public void unwind(final InventoryPacketContext context) {\n             return;\n         }\n \n-        final List<SlotTransaction> previewTransactions = ((ContainerBridge) player.openContainer).bridge$getPreviewTransactions();\n-        if (previewTransactions.isEmpty()) {\n+        SlotTransaction previewTransaction = ((ContainerBridge) player.openContainer).bridge$getPreviewTransaction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de04873cc8e81a9279cece915a2343c9bbc98a08"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDQzNDgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNjo0NVrOFtJZMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNjo0NVrOFtJZMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4NDE0Nw==", "bodyText": "Could this be configurable?", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r382884147", "createdAt": "2020-02-22T04:06:45Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +424,35 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, this.impl$capturedCraftPreviewTransaction.getOriginal(), repl);\n+        } else {\n+            SlotTransaction replace = new SlotTransaction(slot, orig, repl);\n+            SpongeImpl.getLogger().warn(\"Could not merge craft preview transactions - some events may break (original {}, replace {})\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de04873cc8e81a9279cece915a2343c9bbc98a08"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDQzNTAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/SlotCraftingMixin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNzoyNVrOFtJZTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwNDowNzoyNVrOFtJZTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4NDE3NQ==", "bodyText": "(nitpick) final this variable please", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r382884175", "createdAt": "2020-02-22T04:07:25Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/SlotCraftingMixin.java", "diffHunk": "@@ -174,23 +175,21 @@ private void afterTake(final EntityPlayer thePlayer, final ItemStack stack, fina\n         ((ContainerBridge) container).bridge$setFirePreview(true);\n         this.impl$craftedStack = null;\n \n-        final List<SlotTransaction> previewTransactions = ((ContainerBridge) container).bridge$getPreviewTransactions();\n+        SlotTransaction previewTransaction = ((ContainerBridge) container).bridge$getPreviewTransaction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de04873cc8e81a9279cece915a2343c9bbc98a08"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MjY5MDE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/config/category/LoggingCategory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMDozMjo0MFrOFtb3VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMToxMjo1MlrOF6dycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4Njc3Mg==", "bodyText": "I know @gabizou said \"could this be configurable?\" and attached it to the log line, but I'm not sure this is what he meant - I think we should always be reporting a failure to the log.\nWas the meaning that this entire behaviour on failure should be configurable - as in, original vs replacement?", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r383186772", "createdAt": "2020-02-24T10:32:40Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/config/category/LoggingCategory.java", "diffHunk": "@@ -179,6 +181,10 @@ public void setLogEntitySpeedRemoval(boolean flag) {\n         this.logEntitySpeedRemoval = flag;\n     }\n \n+    public boolean logTransactionMergeFailure() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0526f87d3e8cbf53306d41e4bd550fbb1f3a9d41"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5MzIzOA==", "bodyText": "Well this and whether silencing after X number of failed/merged transactions happens.", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r390093238", "createdAt": "2020-03-10T04:46:25Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/config/category/LoggingCategory.java", "diffHunk": "@@ -179,6 +181,10 @@ public void setLogEntitySpeedRemoval(boolean flag) {\n         this.logEntitySpeedRemoval = flag;\n     }\n \n+    public boolean logTransactionMergeFailure() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4Njc3Mg=="}, "originalCommit": {"oid": "0526f87d3e8cbf53306d41e4bd550fbb1f3a9d41"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg0OTc3Ng==", "bodyText": "I can understand the configuration to \"silence after X messages\", but why would the behavior of the failure need to be configurable? I can't imagine a server owner changing that.", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r396849776", "createdAt": "2020-03-24T01:12:52Z", "author": {"login": "JBYoshi"}, "path": "src/main/java/org/spongepowered/common/config/category/LoggingCategory.java", "diffHunk": "@@ -179,6 +181,10 @@ public void setLogEntitySpeedRemoval(boolean flag) {\n         this.logEntitySpeedRemoval = flag;\n     }\n \n+    public boolean logTransactionMergeFailure() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzE4Njc3Mg=="}, "originalCommit": {"oid": "0526f87d3e8cbf53306d41e4bd550fbb1f3a9d41"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzc3MDM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/config/category/LoggingCategory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDo1Nzo1NlrOGhk3qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDo1Nzo1NlrOGhk3qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDI2Ng==", "bodyText": "Should this comment be multi-lined to roughly 100 characters?", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437860266", "createdAt": "2020-06-10T04:57:56Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/config/category/LoggingCategory.java", "diffHunk": "@@ -64,6 +64,9 @@\n     private boolean logEntityCollisionChecks = false;\n     @Setting(value = \"entity-speed-removal\", comment = \"Whether to log entity removals due to speed\")\n     private boolean logEntitySpeedRemoval = false;\n+    @Setting(value = \"transaction-merge-fail\", comment = \"Log when two conflicting changes are merged into one. (This number specifies the maximum \"\n+            + \"number of messages to log. Set to 0 to show all messages.)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzc3MzYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowMDowOFrOGhk50Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQyMjo0OTozMlrOGqA5dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDgxNw==", "bodyText": "Are you doing the correct equality check here? Or are you aiming to just allow instance equality checking the ItemStackSnapshot?", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437860817", "createdAt": "2020-06-10T05:00:08Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODA4Ng==", "bodyText": "It has to be equals() - orig is created fresh each time the method is called.", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r446708086", "createdAt": "2020-06-28T22:49:32Z", "author": {"login": "JBYoshi"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDgxNw=="}, "originalCommit": {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzc3NDI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowMDozNVrOGhk6Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQyMjo1MToxM1rOGqA6OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDkyNw==", "bodyText": "Off the top of my head, do SlotAdapters implement equals?", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437860927", "createdAt": "2020-06-10T05:00:35Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjcwODI4MA==", "bodyText": "Not currently. It seems to be an easy implementation - it just requires checking the underlying inventory and the index - so I'll do that.", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r446708280", "createdAt": "2020-06-28T22:51:13Z", "author": {"login": "JBYoshi"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MDkyNw=="}, "originalCommit": {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzc3NTA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowMTowMVrOGhk6vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowMTowMVrOGhk6vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MTA1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        SlotTransaction replace = new SlotTransaction(slot, orig, repl);\n          \n          \n            \n                        final SlotTransaction replace = new SlotTransaction(slot, orig, repl);", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437861052", "createdAt": "2020-06-10T05:01:01Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, this.impl$capturedCraftPreviewTransaction.getOriginal(), repl);\n+        } else {\n+            SlotTransaction replace = new SlotTransaction(slot, orig, repl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzc3NzI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowMjozNlrOGhk8IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowMjozNlrOGhk8IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MTQwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        int maxLogs = SpongeImpl.getGlobalConfigAdapter().getConfig().getLogging().logTransactionMergeFailure();\n          \n          \n            \n                        final int maxLogs = SpongeImpl.getGlobalConfigAdapter().getConfig().getLogging().logTransactionMergeFailure();", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437861409", "createdAt": "2020-06-10T05:02:36Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -431,26 +425,43 @@ private void beforeSlotChangedCraftingGrid(final InventoryCraftResult output, fi\n         final ItemStackSnapshot repl = ItemStackUtil.snapshotOf(output.getStackInSlot(index));\n \n         final SlotAdapter slot = this.impl$getAdapters().get(index);\n-        this.impl$capturedCraftPreviewTransactions.add(new SlotTransaction(slot, orig, repl));\n+        if (this.impl$capturedCraftPreviewTransaction == null) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, orig, repl);\n+        } else if (this.impl$capturedCraftPreviewTransaction.getSlot().equals(slot)\n+                && this.impl$capturedCraftPreviewTransaction.getFinal().equals(orig)) {\n+            this.impl$capturedCraftPreviewTransaction = new SlotTransaction(slot, this.impl$capturedCraftPreviewTransaction.getOriginal(), repl);\n+        } else {\n+            SlotTransaction replace = new SlotTransaction(slot, orig, repl);\n+            ContainerMixin.impl$numTransactionErrorsLogged++;\n+            int maxLogs = SpongeImpl.getGlobalConfigAdapter().getConfig().getLogging().logTransactionMergeFailure();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzc4MDE4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowNDoyMVrOGhk93A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTowNDoyMVrOGhk93A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg2MTg1Mg==", "bodyText": "Static fields should be in their own body imo. Make it well aware they are static.", "url": "https://github.com/SpongePowered/Sponge/pull/2506#discussion_r437861852", "createdAt": "2020-06-10T05:04:21Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/inventory/ContainerMixin.java", "diffHunk": "@@ -119,7 +120,8 @@\n     //private boolean postPreCraftEvent = true; // used to prevent multiple craft events to fire when setting multiple slots simultaneously\n     private List<SlotTransaction> impl$capturedSlotTransactions = new ArrayList<>();\n     private List<SlotTransaction> impl$capturedCraftShiftTransactions = new ArrayList<>();\n-    private List<SlotTransaction> impl$capturedCraftPreviewTransactions = new ArrayList<>();\n+    @Nullable private SlotTransaction impl$capturedCraftPreviewTransaction;\n+    private static int impl$numTransactionErrorsLogged = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f417cfd86180a51c995021d6a499ae7e57b1463"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2585, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}