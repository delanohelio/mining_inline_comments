{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MzM4NDk3", "number": 2469, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQyMTozMzoxN1rODV3GYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQyMTo0ODozMlrODV3JHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQ5NDQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQyMTozMzoxN1rOFaS_Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNzo0MDowMlrOFakPUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExODQzMA==", "bodyText": "Wouldn't it make more sense to re-submit the command on the main thread? Much like how packets are handled in NetHandlerPlayServer?", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363118430", "createdAt": "2020-01-05T21:33:17Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExODQ2Nw==", "bodyText": "Granted, it'd be a slight behavioral change, but the behavior change is more of \"Hey, instead of crashing we re-submit the command to be processed on the main thread.\"", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363118467", "createdAt": "2020-01-05T21:33:52Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExODQzMA=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExODkzMQ==", "bodyText": "We could, but given this is non-void, what would we return in this case? Or would we just block the async thread - which admittedly, I'm okay with.", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363118931", "createdAt": "2020-01-05T21:41:59Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExODQzMA=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3NDIxNg==", "bodyText": "I'd be fine with blocking the async task if anything. Thoughts @Zidane ?", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363374216", "createdAt": "2020-01-06T16:36:56Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExODQzMA=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQwMTA0Mg==", "bodyText": "Block the async task", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363401042", "createdAt": "2020-01-06T17:40:02Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExODQzMA=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjUwMTQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQyMTo0ODozMlrOFaTCxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMjoxNTowMlrOFaq0sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOTMwMw==", "bodyText": "Wouldn't it be better to use SpongeImplHooks#isMainThread ?", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363119303", "createdAt": "2020-01-05T21:48:32Z", "author": {"login": "ImMorpheus"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMDEwNw==", "bodyText": "I don't really think it matters either way, but it doesn't hurt to be defensive.", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363120107", "createdAt": "2020-01-05T22:02:54Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOTMwMw=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3Mzk0Ng==", "bodyText": "It does matter in the sense that the SpongeImplHooks#isMainThread has a stupid fast optimization check (much like the phase tracker)", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363373946", "createdAt": "2020-01-06T16:36:20Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOTMwMw=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM4ODY0Ng==", "bodyText": "I'm actually curious about that statement, considering SpongeImplHooks#isMainThread is this check, with a isServerAvailable check prepended to it. I had a look at SF and SV to see if we overwrite that check, and we don't.\nWhat is the optimization check? Checking two booleans is never going to be faster than checking one, is it?", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363388646", "createdAt": "2020-01-06T17:08:46Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOTMwMw=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM5ODk3NQ==", "bodyText": "It\u2019s an overwrite (SpongeImplHooks is our \u201coverwrite for optimizations and forge compat\u201d) in ThreadChecks package", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363398975", "createdAt": "2020-01-06T17:34:16Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOTMwMw=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQwMDU5Ng==", "bodyText": "They are both equal in performance. With that said, we do try (stress try here...) to not call API methods to keep the call stacks clean.\nBiggest thing to consider is the isServerAvailable check. You want that check to happen here.", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363400596", "createdAt": "2020-01-06T17:38:51Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOTMwMw=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzQzMDM1Mg==", "bodyText": "It\u2019s an overwrite (SpongeImplHooks is our \u201coverwrite for optimizations and forge compat\u201d) in ThreadChecks package\n\nHuh, Github didn't show that when I searched. Cool - learn something new every day. Neat.\n\nWith that said, we do try (stress try here...) to not call API methods to keep the call stacks clean.\n\nFair point. I was going to change it anyway - but good to keep in mind.", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363430352", "createdAt": "2020-01-06T18:52:49Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOTMwMw=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUwODkxMg==", "bodyText": "Biggest thing to consider is the isServerAvailable check. You want that check to happen here.\n\nThat's what the SpongeImplHooks version will do, since it keeps itself updated whether the server is available, whether the server thread itself exists as a field, all in one method call.", "url": "https://github.com/SpongePowered/Sponge/pull/2469#discussion_r363508912", "createdAt": "2020-01-06T22:15:02Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/command/SpongeCommandManager.java", "diffHunk": "@@ -299,6 +299,9 @@ public boolean containsMapping(CommandMapping mapping) {\n \n     @Override\n     public CommandResult process(CommandSource source, String commandLine) {\n+        if (!Sponge.getServer().isMainThread()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExOTMwMw=="}, "originalCommit": {"oid": "b2e86447ab3905b6f16f0b0e426fcd8e8a997e20"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2687, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}