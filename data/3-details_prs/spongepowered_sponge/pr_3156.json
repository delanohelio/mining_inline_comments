{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNTg0ODI4", "number": 3156, "title": "production manifest generation", "bodyText": "dependency json mostly generates correctly\nthe accesstransformers lib is weird, don't know if we're using the correct artifact for it here.\nalso made the installer download/verify deps in parallel -- it's not super pretty, but makes launch a good bit faster", "createdAt": "2020-09-09T07:12:38Z", "url": "https://github.com/SpongePowered/Sponge/pull/3156", "merged": true, "mergeCommit": {"oid": "48151fd8ea0b533737a0dd5aece74113c88150d8"}, "closed": true, "closedAt": "2020-09-10T16:53:14Z", "author": {"login": "zml2008"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHGZ3JgH2gAyNDgyNTg0ODI4Ojg0ZmE1MmVkMTM2NDFkYmM2ODYwYmRkMzQyYzc5MzcwMWFmZTA3NTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHjt8fAFqTQ4NjEyODc4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "84fa52ed13641dbc6860bdd342c793701afe0753", "author": {"user": {"login": "zml2008", "name": "zml"}}, "url": "https://github.com/SpongePowered/Sponge/commit/84fa52ed13641dbc6860bdd342c793701afe0753", "committedDate": "2020-09-09T06:42:23Z", "message": "build: Generate installer manifest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea9e931c21007d0bd079aae8d1dabd5444c91d80", "author": {"user": {"login": "zml2008", "name": "zml"}}, "url": "https://github.com/SpongePowered/Sponge/commit/ea9e931c21007d0bd079aae8d1dabd5444c91d80", "committedDate": "2020-09-09T07:07:59Z", "message": "installer: Parallel dependency downloading"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Nzg0OTE1", "url": "https://github.com/SpongePowered/Sponge/pull/3156#pullrequestreview-484784915", "createdAt": "2020-09-09T08:38:43Z", "commit": {"oid": "ea9e931c21007d0bd079aae8d1dabd5444c91d80"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODozODo0M1rOHO8z9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoxNzoxM1rOHPPTbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQzODQ1NA==", "bodyText": "don't need this since repo-new proxies central", "url": "https://github.com/SpongePowered/Sponge/pull/3156#discussion_r485438454", "createdAt": "2020-09-09T08:38:43Z", "author": {"login": "gabizou"}, "path": "buildSrc/build.gradle.kts", "diffHunk": "@@ -6,11 +6,13 @@ plugins {\n repositories {\n     gradlePluginPortal()\n     maven(\"https://repo-new.spongepowered.org/repository/maven-public/\")\n+    mavenCentral()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9e931c21007d0bd079aae8d1dabd5444c91d80"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0MTQyMA==", "bodyText": "don't need the timestamped snapshot versions, the sonatype search uses the maven.version specifically, not the timestamp'ed snapshot.", "url": "https://github.com/SpongePowered/Sponge/pull/3156#discussion_r485741420", "createdAt": "2020-09-09T16:17:13Z", "author": {"login": "gabizou"}, "path": "build.gradle.kts", "diffHunk": "@@ -763,44 +771,89 @@ project(\"SpongeVanilla\") {\n         newLine = false\n     }\n }\n-open class OutputDependenciesToJson(): DefaultTask() {\n \n+abstract class OutputDependenciesToJson: DefaultTask() {\n+\n+    companion object {\n+        val GSON: com.google.gson.Gson = com.google.gson.GsonBuilder().also {\n+            it.setPrettyPrinting()\n+        }.create()\n+    }\n+\n+    /**\n+     * A single dependency\n+     */\n+    data class DependencyDescriptor(val group: String, val module: String, val version: String, val md5: String)\n+\n+    /**\n+     * A manifest containing a list of dependencies.\n+     *\n+     * Non-transitive dependencies will not be resolved.\n+     */\n+    data class DependencyManifest(val dependencies: List<DependencyDescriptor>)\n+\n+    @get:org.gradle.api.tasks.Input\n+    abstract val configuration: Property<Configuration>\n+\n+    @get:org.gradle.api.tasks.Input\n+    abstract val excludeConfiguration: Property<Configuration>\n+\n+    /**\n+     * Classifiers to include in the dependency manifest. The empty string identifies no classifier\n+     */\n     @get:org.gradle.api.tasks.Input\n-    var configuration: String = \"main\"\n+    abstract val allowedClassifiers: SetProperty<String>\n \n     @get:org.gradle.api.tasks.OutputFile\n-    val outputFile: RegularFileProperty = project.objects.fileProperty()\n+    abstract val outputFile: RegularFileProperty\n+\n+    init {\n+        allowedClassifiers.add(\"\")\n+    }\n \n     @org.gradle.api.tasks.TaskAction\n     fun generateDependenciesJson() {\n-        val stringBuilder = StringBuilder(\"{\\n \\\"dependencies\\\":\\n\")\n-        val depJoiner = StringJoiner(\",\\n\", \"  [\\n\", \"\\n  ]\\n\")\n-\n-        val foundConfig = project.configurations.findByName(configuration)\n-        if (foundConfig == null) {\n-            return\n-        }\n-        foundConfig.resolvedConfiguration.getFirstLevelModuleDependencies()\n-                .filter { dependency -> dependency.getModuleName() != \"SpongeAPI\" }\n-                .forEach { dependency ->\n-                    //Get file input stream for reading the file content\n-                    val depFile = dependency.getModuleArtifacts().filter { it.file.path.endsWith(\".jar\") }.first().file\n-                    //Get file input stream for reading the file content\n-                    val fis = FileInputStream(depFile)\n-                    val md5Hash = DigestUtils.md5Hex(fis)\n-                    fis.close()\n-\n-                    val depBuilder = StringJoiner(\",\\n\", \"    {\\n\", \"\\n    }\")\n-                    depBuilder.add(\"      \\\"group\\\": \\\"${dependency.getModuleGroup()}\\\"\")\n-                    depBuilder.add(\"      \\\"module\\\": \\\"${dependency.getModuleName()}\\\"\")\n-                    depBuilder.add(\"      \\\"version\\\": \\\"${dependency.getModuleVersion()}\\\"\")\n-                    depBuilder.add(\"      \\\"md5\\\": \\\"$md5Hash\\\"\")\n-                    depJoiner.add(depBuilder.toString())\n+        val foundConfig = if (this.excludeConfiguration.isPresent) {\n+            val config = project.configurations.detachedConfiguration(*this.configuration.get().allDependencies.toTypedArray())\n+            val excludes = this.excludeConfiguration.get()\n+            excludes.allDependencies.forEach {\n+                config.exclude(group = it.group, module = it.name)\n+            }\n+            config\n+        } else {\n+            this.configuration.get()\n+        }\n+\n+        val manifest = foundConfig.resolvedConfiguration.firstLevelModuleDependencies.asSequence()\n+                .flatMap { it.allModuleArtifacts.asSequence() }\n+                // only jars with the allowed classifiers\n+                .filter { it.extension == \"jar\" && allowedClassifiers.get().contains(it.classifier ?: \"\") }\n+                .filter { it.moduleVersion.id.name != \"SpongeAPI\" }\n+                .distinct()\n+                .map { dependency ->\n+\n+                    val ident = dependency.moduleVersion.id\n+                    val version = (dependency.id.componentIdentifier as? ModuleComponentIdentifier)?.version ?: ident.version\n+                    // Get file input stream for reading the file content\n+                    val md5hash = dependency.file.inputStream().use {\n+                        DigestUtils.md5Hex(it)\n+                    }\n+\n+                    // create descriptor\n+                    DependencyDescriptor(\n+                            group = ident.group,\n+                            module = ident.name,\n+                            version = version, // TODO: can we get timestamped snapshot versions?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea9e931c21007d0bd079aae8d1dabd5444c91d80"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d8fff15040b5b1cf17d593ed51005df91988201", "author": {"user": {"login": "zml2008", "name": "zml"}}, "url": "https://github.com/SpongePowered/Sponge/commit/5d8fff15040b5b1cf17d593ed51005df91988201", "committedDate": "2020-09-09T19:33:10Z", "message": "resolve review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTI4Nzgw", "url": "https://github.com/SpongePowered/Sponge/pull/3156#pullrequestreview-486128780", "createdAt": "2020-09-10T16:51:34Z", "commit": {"oid": "5d8fff15040b5b1cf17d593ed51005df91988201"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 838, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}