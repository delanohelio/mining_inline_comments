{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMjIxMDc0", "number": 3166, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjo1ODowM1rOElwcmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNjoyNTo0N1rOEmKuKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDI2NTIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNjo1ODowM1rOHVaJhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxODowOTo1N1rOHVctww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMDU2Ng==", "bodyText": "I'm actually not really sure about \"adding (removing)\" this straight up. It feels to me that this was intended to work as a way to ensure \"line of sight\" for an interaction. The removal of this check means that I could, in theory, reach though a few blocks to interact with a switch on the other side, when I don't think that's intended.\nI don't think this \"fix\" is correct and that the real bug is client side. I can see hack clients possibly making use of this to activate things though walls and such.", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492210566", "createdAt": "2020-09-21T16:58:03Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "diffHunk": "@@ -811,12 +811,16 @@ public void processUseEntity(final CPacketUseEntity packetIn) {\n         this.player.markPlayerActive();\n \n         if (entity != null) {\n-            final boolean flag = this.player.canEntityBeSeen(entity);\n-            double d0 = 36.0D; // 6 blocks\n-\n-            if (!flag) {\n-                d0 = 9.0D; // 1.5 blocks\n-            }\n+            // Sponge start - flag is not necessary, see below\n+            // final boolean flag = this.player.canEntityBeSeen(entity);\n+            // compatibility with Forge reachDistance attribute\n+            double d0 = SpongeImplHooks.getEntityReachDistanceSq(this.player);\n+\n+            // this check introduces MC-107103", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39b960d1349b49cc4b14f1925c3d4b26e8fdaa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxNTA4NQ==", "bodyText": "This line of sight check is only applied to interactions with entities, not blocks.\nIf you look at the bug description on Mojang's tracker, they talk about this exact if-statement.\nImagine this scenario. You are using a mob farm, where you 1) need to click at mobs' legs, while mobs are standing above you by 1 block, 2) there's a block that blocks line of sight between you and mobs' eyes, 3) you need to stand back 4 blocks (for one reason or another).\nWhat happens is when you do the click - interaction only happens client-side. E.g. if you name a mob in that situation - you'll get a \"ghost empty slot\" in place of the name tag and a mob that shows a name but doesn't have one.\nAgain, this check only works on entities, as blocks are handled in a separate method.", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492215085", "createdAt": "2020-09-21T17:05:52Z", "author": {"login": "PolyacovYury"}, "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "diffHunk": "@@ -811,12 +811,16 @@ public void processUseEntity(final CPacketUseEntity packetIn) {\n         this.player.markPlayerActive();\n \n         if (entity != null) {\n-            final boolean flag = this.player.canEntityBeSeen(entity);\n-            double d0 = 36.0D; // 6 blocks\n-\n-            if (!flag) {\n-                d0 = 9.0D; // 1.5 blocks\n-            }\n+            // Sponge start - flag is not necessary, see below\n+            // final boolean flag = this.player.canEntityBeSeen(entity);\n+            // compatibility with Forge reachDistance attribute\n+            double d0 = SpongeImplHooks.getEntityReachDistanceSq(this.player);\n+\n+            // this check introduces MC-107103", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMDU2Ng=="}, "originalCommit": {"oid": "b39b960d1349b49cc4b14f1925c3d4b26e8fdaa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxODU4MA==", "bodyText": "It's the same principle though. Should this line of sight check be removed for these entity checks? I'm not convinced that it's a server bug, but a client one - the client is what is causing the ghosting.", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492218580", "createdAt": "2020-09-21T17:12:02Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "diffHunk": "@@ -811,12 +811,16 @@ public void processUseEntity(final CPacketUseEntity packetIn) {\n         this.player.markPlayerActive();\n \n         if (entity != null) {\n-            final boolean flag = this.player.canEntityBeSeen(entity);\n-            double d0 = 36.0D; // 6 blocks\n-\n-            if (!flag) {\n-                d0 = 9.0D; // 1.5 blocks\n-            }\n+            // Sponge start - flag is not necessary, see below\n+            // final boolean flag = this.player.canEntityBeSeen(entity);\n+            // compatibility with Forge reachDistance attribute\n+            double d0 = SpongeImplHooks.getEntityReachDistanceSq(this.player);\n+\n+            // this check introduces MC-107103", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMDU2Ng=="}, "originalCommit": {"oid": "b39b960d1349b49cc4b14f1925c3d4b26e8fdaa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyMzAyNA==", "bodyText": "Well, the only thing line of sight check does is it halves the distance the player can reach that entity from.\nAnd remember, it doesn't check if player sees entity's hitbox. It checks if player sees entity's eye point.", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492223024", "createdAt": "2020-09-21T17:19:36Z", "author": {"login": "PolyacovYury"}, "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "diffHunk": "@@ -811,12 +811,16 @@ public void processUseEntity(final CPacketUseEntity packetIn) {\n         this.player.markPlayerActive();\n \n         if (entity != null) {\n-            final boolean flag = this.player.canEntityBeSeen(entity);\n-            double d0 = 36.0D; // 6 blocks\n-\n-            if (!flag) {\n-                d0 = 9.0D; // 1.5 blocks\n-            }\n+            // Sponge start - flag is not necessary, see below\n+            // final boolean flag = this.player.canEntityBeSeen(entity);\n+            // compatibility with Forge reachDistance attribute\n+            double d0 = SpongeImplHooks.getEntityReachDistanceSq(this.player);\n+\n+            // this check introduces MC-107103", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMDU2Ng=="}, "originalCommit": {"oid": "b39b960d1349b49cc4b14f1925c3d4b26e8fdaa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNTk5Mg==", "bodyText": "I know what it does.\nMy point is that the bug seems to be client side to me (the client ignores the fact this check exists) rather than this check exists in the first place. If we were to \"fix\" this, it really should be checking to see if we can see the hitbox rather than removing the check altogether, the check is clearly there for a reason. This is why I'm not sure we should accept this.", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492225992", "createdAt": "2020-09-21T17:24:31Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "diffHunk": "@@ -811,12 +811,16 @@ public void processUseEntity(final CPacketUseEntity packetIn) {\n         this.player.markPlayerActive();\n \n         if (entity != null) {\n-            final boolean flag = this.player.canEntityBeSeen(entity);\n-            double d0 = 36.0D; // 6 blocks\n-\n-            if (!flag) {\n-                d0 = 9.0D; // 1.5 blocks\n-            }\n+            // Sponge start - flag is not necessary, see below\n+            // final boolean flag = this.player.canEntityBeSeen(entity);\n+            // compatibility with Forge reachDistance attribute\n+            double d0 = SpongeImplHooks.getEntityReachDistanceSq(this.player);\n+\n+            // this check introduces MC-107103", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMDU2Ng=="}, "originalCommit": {"oid": "b39b960d1349b49cc4b14f1925c3d4b26e8fdaa3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI1MjYxMQ==", "bodyText": "Well, I can only pull out one last argument: actual Minecraft sources for 1.16.\n   public void processUseEntity(CUseEntityPacket packetIn) {\n      PacketThreadUtil.checkThreadAndEnqueue(packetIn, this, this.player.getServerWorld());\n      ServerWorld serverworld = this.player.getServerWorld();\n      Entity entity = packetIn.getEntityFromWorld(serverworld);\n      this.player.markPlayerActive();\n      this.player.setSneaking(packetIn.func_241792_e_());\n      if (entity != null) {\n         double d0 = 36.0D;\n         if (this.player.getDistanceSq(entity) < 36.0D) {\n            // do the rest\nThat if statement was so gone that they even forgot to remove the d0 variable. :)\nI guess, if we are worrying about hacked clients, there could be some sort of RayTrace check, but the if-removal at least won't make Sponge less secure than Vanilla is.", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492252611", "createdAt": "2020-09-21T18:09:57Z", "author": {"login": "PolyacovYury"}, "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "diffHunk": "@@ -811,12 +811,16 @@ public void processUseEntity(final CPacketUseEntity packetIn) {\n         this.player.markPlayerActive();\n \n         if (entity != null) {\n-            final boolean flag = this.player.canEntityBeSeen(entity);\n-            double d0 = 36.0D; // 6 blocks\n-\n-            if (!flag) {\n-                d0 = 9.0D; // 1.5 blocks\n-            }\n+            // Sponge start - flag is not necessary, see below\n+            // final boolean flag = this.player.canEntityBeSeen(entity);\n+            // compatibility with Forge reachDistance attribute\n+            double d0 = SpongeImplHooks.getEntityReachDistanceSq(this.player);\n+\n+            // this check introduces MC-107103", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMDU2Ng=="}, "originalCommit": {"oid": "b39b960d1349b49cc4b14f1925c3d4b26e8fdaa3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDMyMjEwOnYy", "diffSide": "LEFT", "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoxMzo0N1rOHVas1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoyMTo1NlrOHVbABA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxOTYwNg==", "bodyText": "So I went ahead and looked at the Forge patch for this class and this is not one of the changes they make, d0 = 36.0D here is left alone. Why should we change the behaviour away from Forge here?", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492219606", "createdAt": "2020-09-21T17:13:47Z", "author": {"login": "dualspiral"}, "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "diffHunk": "@@ -811,12 +811,16 @@ public void processUseEntity(final CPacketUseEntity packetIn) {\n         this.player.markPlayerActive();\n \n         if (entity != null) {\n-            final boolean flag = this.player.canEntityBeSeen(entity);\n-            double d0 = 36.0D; // 6 blocks\n-\n-            if (!flag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39b960d1349b49cc4b14f1925c3d4b26e8fdaa3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNDUxNg==", "bodyText": "Because there was this PR - MinecraftForge/MinecraftForge#4736 - that was headed at exactly this issue. Without the change the player sees that they can reach that entity, they swing the sword and.. nothing happens.\nThat PR wasn't even properly discussed - just staled and closed due to inactivity.", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492224516", "createdAt": "2020-09-21T17:21:56Z", "author": {"login": "PolyacovYury"}, "path": "src/main/java/org/spongepowered/common/mixin/core/network/NetHandlerPlayServerMixin.java", "diffHunk": "@@ -811,12 +811,16 @@ public void processUseEntity(final CPacketUseEntity packetIn) {\n         this.player.markPlayerActive();\n \n         if (entity != null) {\n-            final boolean flag = this.player.canEntityBeSeen(entity);\n-            double d0 = 36.0D; // 6 blocks\n-\n-            if (!flag) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxOTYwNg=="}, "originalCommit": {"oid": "b39b960d1349b49cc4b14f1925c3d4b26e8fdaa3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NDU3MDAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/SpongeImplHooks.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNjoyNTo0N1rOHWChSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxODo0MzowNFrOHWHqBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg3MjAxMA==", "bodyText": "Can you just javadoc the method for the reasoning why it's a spongeimplhook (aside from the place that it's used) since in a SpongeVanilla workspace, this won't make much sense as to why it exists if not for SpongeForge ;)", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492872010", "createdAt": "2020-09-22T16:25:47Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/SpongeImplHooks.java", "diffHunk": "@@ -176,6 +176,14 @@ public static double getBlockReachDistance(final EntityPlayerMP player) {\n         return 5.0d;\n     }\n \n+    public static double getEntityReachDistanceSq(final EntityPlayerMP player, Entity entity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb008292fa92becb990ba381db9d27bbb67a0abb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjk1NjE2NQ==", "bodyText": "Oh. Will do, I didn't see any javadocs for other ImplHooks and decided that it's fine :)", "url": "https://github.com/SpongePowered/Sponge/pull/3166#discussion_r492956165", "createdAt": "2020-09-22T18:43:04Z", "author": {"login": "PolyacovYury"}, "path": "src/main/java/org/spongepowered/common/SpongeImplHooks.java", "diffHunk": "@@ -176,6 +176,14 @@ public static double getBlockReachDistance(final EntityPlayerMP player) {\n         return 5.0d;\n     }\n \n+    public static double getEntityReachDistanceSq(final EntityPlayerMP player, Entity entity) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg3MjAxMA=="}, "originalCommit": {"oid": "fb008292fa92becb990ba381db9d27bbb67a0abb"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2489, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}