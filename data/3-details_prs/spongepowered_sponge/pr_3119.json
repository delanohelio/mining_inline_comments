{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMDEyOTIx", "number": 3119, "title": "Null empty stackTagCompound on ItemStacks to allow items to stack", "bodyText": "Before I merge this, should I put this behind a config entry? I'm not quite sure what Vanilla intended, but it seems like it nulled out empty NBT in one place, but not in the other two...\n(We seem to do it https://github.com/SpongePowered/SpongeCommon/pull/3119/files#diff-98d786d64927fceee04f306cd379c2cbR147 I've just realised, so I might just merge this in a bit...)", "createdAt": "2020-08-22T17:19:34Z", "url": "https://github.com/SpongePowered/Sponge/pull/3119", "merged": true, "mergeCommit": {"oid": "3e54507214ed150074c6cfa6684bb443168be379"}, "closed": true, "closedAt": "2020-08-23T08:42:33Z", "author": {"login": "dualspiral"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBctLhgH2gAyNDcyMDEyOTIxOmMxNDE3ZmQwYTk2MDU4MDM2MzA5YjkxYzhjZGFkN2E0OTRhOTczZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBp7Q8AH2gAyNDcyMDEyOTIxOmMxMTY5MGEwOTBhY2RhZThmNzEzMTZhM2E3MWY1YmY0YmZmZGQ1ODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/Sponge/commit/c1417fd0a96058036309b91c8cdad7a494a973d6", "committedDate": "2020-08-22T17:17:51Z", "message": "Null empty stackTagCompound on ItemStacks to allow items to stack"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTc3OTQ4", "url": "https://github.com/SpongePowered/Sponge/pull/3119#pullrequestreview-472977948", "createdAt": "2020-08-23T04:21:56Z", "commit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "state": "APPROVED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwNDoyMTo1NlrOHFJ-Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwNDoyMzo1MFrOHFJ-gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODI1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (shadow$hasTagCompound() && shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n          \n          \n            \n                    if (this.shadow$hasTagCompound() && this.shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168258", "createdAt": "2020-08-23T04:21:56Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -271,19 +272,33 @@ private void onSplit(int amount, CallbackInfoReturnable<net.minecraft.item.ItemS\n \n     // Read custom data from nbt\n     @Inject(method = \"<init>(Lnet/minecraft/nbt/NBTTagCompound;)V\", at = @At(\"RETURN\"))\n-    private void onRead(NBTTagCompound compound, CallbackInfo info) {\n-        if (hasTagCompound() && getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n-            DataUtil.readCustomData(getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n+    private void impl$onRead(NBTTagCompound compound, CallbackInfo info) {\n+        if (shadow$hasTagCompound() && shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n+            DataUtil.readCustomData(shadow$getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n+        }\n+\n+        // Prune empty stack tag compound if its empty to enable stacking.\n+        if (this.stackTagCompound != null && this.stackTagCompound.isEmpty()) {\n+            this.stackTagCompound = null;\n+        }\n+    }\n+\n+    @Redirect(method = \"removeSubCompound\",\n+            at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/nbt/NBTTagCompound;removeTag(Ljava/lang/String;)V\"))\n+    private void impl$nullStackCompoundIfEmptyAfterRemoval(final NBTTagCompound compound, final String key) {\n+        compound.removeTag(key);\n+        if (compound.isEmpty()) {\n+            this.stackTagCompound = null;\n         }\n     }\n \n     @Inject(method = \"setTagCompound\", at = @At(\"RETURN\"))\n-    private void onSet(NBTTagCompound compound, CallbackInfo callbackInfo) {\n+    private void impl$onSet(NBTTagCompound compound, CallbackInfo callbackInfo) {\n         if (this.stackTagCompound != compound) {\n             this.manipulators.clear();\n         }\n-        if (hasTagCompound() && getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n-            DataUtil.readCustomData(getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n+        if (shadow$hasTagCompound() && shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODI3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        DataUtil.readCustomData(shadow$getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n          \n          \n            \n                        DataUtil.readCustomData(this.shadow$getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168275", "createdAt": "2020-08-23T04:22:07Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -271,19 +272,33 @@ private void onSplit(int amount, CallbackInfoReturnable<net.minecraft.item.ItemS\n \n     // Read custom data from nbt\n     @Inject(method = \"<init>(Lnet/minecraft/nbt/NBTTagCompound;)V\", at = @At(\"RETURN\"))\n-    private void onRead(NBTTagCompound compound, CallbackInfo info) {\n-        if (hasTagCompound() && getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n-            DataUtil.readCustomData(getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n+    private void impl$onRead(NBTTagCompound compound, CallbackInfo info) {\n+        if (shadow$hasTagCompound() && shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n+            DataUtil.readCustomData(shadow$getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n+        }\n+\n+        // Prune empty stack tag compound if its empty to enable stacking.\n+        if (this.stackTagCompound != null && this.stackTagCompound.isEmpty()) {\n+            this.stackTagCompound = null;\n+        }\n+    }\n+\n+    @Redirect(method = \"removeSubCompound\",\n+            at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/nbt/NBTTagCompound;removeTag(Ljava/lang/String;)V\"))\n+    private void impl$nullStackCompoundIfEmptyAfterRemoval(final NBTTagCompound compound, final String key) {\n+        compound.removeTag(key);\n+        if (compound.isEmpty()) {\n+            this.stackTagCompound = null;\n         }\n     }\n \n     @Inject(method = \"setTagCompound\", at = @At(\"RETURN\"))\n-    private void onSet(NBTTagCompound compound, CallbackInfo callbackInfo) {\n+    private void impl$onSet(NBTTagCompound compound, CallbackInfo callbackInfo) {\n         if (this.stackTagCompound != compound) {\n             this.manipulators.clear();\n         }\n-        if (hasTagCompound() && getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n-            DataUtil.readCustomData(getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n+        if (shadow$hasTagCompound() && shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n+            DataUtil.readCustomData(shadow$getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODI5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (shadow$hasTagCompound() && shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n          \n          \n            \n                    if (this.shadow$hasTagCompound() && this.shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168298", "createdAt": "2020-08-23T04:22:30Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -271,19 +272,33 @@ private void onSplit(int amount, CallbackInfoReturnable<net.minecraft.item.ItemS\n \n     // Read custom data from nbt\n     @Inject(method = \"<init>(Lnet/minecraft/nbt/NBTTagCompound;)V\", at = @At(\"RETURN\"))\n-    private void onRead(NBTTagCompound compound, CallbackInfo info) {\n-        if (hasTagCompound() && getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n-            DataUtil.readCustomData(getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n+    private void impl$onRead(NBTTagCompound compound, CallbackInfo info) {\n+        if (shadow$hasTagCompound() && shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODMxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        DataUtil.readCustomData(shadow$getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n          \n          \n            \n                        DataUtil.readCustomData(this.shadow$getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168312", "createdAt": "2020-08-23T04:22:38Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -271,19 +272,33 @@ private void onSplit(int amount, CallbackInfoReturnable<net.minecraft.item.ItemS\n \n     // Read custom data from nbt\n     @Inject(method = \"<init>(Lnet/minecraft/nbt/NBTTagCompound;)V\", at = @At(\"RETURN\"))\n-    private void onRead(NBTTagCompound compound, CallbackInfo info) {\n-        if (hasTagCompound() && getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n-            DataUtil.readCustomData(getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));\n+    private void impl$onRead(NBTTagCompound compound, CallbackInfo info) {\n+        if (shadow$hasTagCompound() && shadow$getTagCompound().hasKey(Constants.Sponge.SPONGE_DATA, Constants.NBT.TAG_COMPOUND)) {\n+            DataUtil.readCustomData(shadow$getTagCompound().getCompoundTag(Constants.Sponge.SPONGE_DATA), ((org.spongepowered.api.item.inventory.ItemStack) this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODM0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void impl$onSplit(int amount, CallbackInfoReturnable<net.minecraft.item.ItemStack> info) {\n          \n          \n            \n                private void impl$copySpongeDataOnSplit(int amount, CallbackInfoReturnable<net.minecraft.item.ItemStack> info) {", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168342", "createdAt": "2020-08-23T04:22:59Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -260,7 +261,7 @@ private void onCopy(CallbackInfoReturnable<ItemStack> info) {\n     }\n \n     @Inject(method = \"splitStack\", at = @At(\"RETURN\"))\n-    private void onSplit(int amount, CallbackInfoReturnable<net.minecraft.item.ItemStack> info) {\n+    private void impl$onSplit(int amount, CallbackInfoReturnable<net.minecraft.item.ItemStack> info) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODM0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void impl$onCopy(CallbackInfoReturnable<ItemStack> info) {\n          \n          \n            \n                private void impl$copySpongeDataOnSplit(CallbackInfoReturnable<ItemStack> info) {", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168348", "createdAt": "2020-08-23T04:23:14Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -250,7 +251,7 @@ private void resyncCustomToTag() {\n \n     // Add our manipulators when creating copies from this ItemStack:\n     @Inject(method = \"copy\", at = @At(\"RETURN\"))\n-    private void onCopy(CallbackInfoReturnable<ItemStack> info) {\n+    private void impl$onCopy(CallbackInfoReturnable<ItemStack> info) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODM2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (shadow$hasTagCompound()) {\n          \n          \n            \n                        if (this.shadow$hasTagCompound()) {", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168360", "createdAt": "2020-08-23T04:23:21Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -131,20 +132,20 @@ private void resyncCustomToTag() {\n             for (DataView dataView : manipulatorViews) {\n                 newList.appendTag(NbtTranslator.getInstance().translateData(dataView));\n             }\n-            final NBTTagCompound spongeCompound = getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n+            final NBTTagCompound spongeCompound = shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n             spongeCompound.setTag(Constants.Sponge.CUSTOM_MANIPULATOR_TAG_LIST, newList);\n         } else if (!this.failedData.isEmpty()) {\n             final NBTTagList newList = new NBTTagList();\n             for (DataView failedDatum : this.failedData) {\n                 newList.appendTag(NbtTranslator.getInstance().translateData(failedDatum));\n             }\n-            final NBTTagCompound spongeCompound = getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n+            final NBTTagCompound spongeCompound = shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n             spongeCompound.setTag(Constants.Sponge.FAILED_CUSTOM_DATA, newList);\n         } else {\n-            if (hasTagCompound()) {\n-                this.getTagCompound().removeTag(Constants.Sponge.SPONGE_DATA);\n-                if (this.getTagCompound().isEmpty()) {\n-                    this.setTagCompound(null);\n+            if (shadow$hasTagCompound()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODM2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        final NBTTagCompound spongeCompound = shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n          \n          \n            \n                        final NBTTagCompound spongeCompound = this.shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168364", "createdAt": "2020-08-23T04:23:29Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -131,20 +132,20 @@ private void resyncCustomToTag() {\n             for (DataView dataView : manipulatorViews) {\n                 newList.appendTag(NbtTranslator.getInstance().translateData(dataView));\n             }\n-            final NBTTagCompound spongeCompound = getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n+            final NBTTagCompound spongeCompound = shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n             spongeCompound.setTag(Constants.Sponge.CUSTOM_MANIPULATOR_TAG_LIST, newList);\n         } else if (!this.failedData.isEmpty()) {\n             final NBTTagList newList = new NBTTagList();\n             for (DataView failedDatum : this.failedData) {\n                 newList.appendTag(NbtTranslator.getInstance().translateData(failedDatum));\n             }\n-            final NBTTagCompound spongeCompound = getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n+            final NBTTagCompound spongeCompound = shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODM3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        final NBTTagCompound spongeCompound = shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n          \n          \n            \n                        final NBTTagCompound spongeCompound = this.shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168379", "createdAt": "2020-08-23T04:23:37Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -131,20 +132,20 @@ private void resyncCustomToTag() {\n             for (DataView dataView : manipulatorViews) {\n                 newList.appendTag(NbtTranslator.getInstance().translateData(dataView));\n             }\n-            final NBTTagCompound spongeCompound = getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);\n+            final NBTTagCompound spongeCompound = shadow$getOrCreateSubCompound(Constants.Sponge.SPONGE_DATA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2ODM4NA==", "bodyText": "\ud83d\ude0d", "url": "https://github.com/SpongePowered/Sponge/pull/3119#discussion_r475168384", "createdAt": "2020-08-23T04:23:50Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/mixin/core/item/ItemStackMixin.java", "diffHunk": "@@ -63,10 +64,10 @@\n public abstract class ItemStackMixin implements CustomDataHolderBridge {       // conflict from overriding ValueContainer#copy() from DataHolder\n \n     @Shadow public abstract boolean shadow$isEmpty();\n-    @Shadow public abstract NBTTagCompound getTagCompound();\n-    @Shadow public abstract NBTTagCompound getOrCreateSubCompound(String key);\n-    @Shadow public abstract boolean hasTagCompound();\n-    @Shadow public abstract void setTagCompound(@Nullable NBTTagCompound compound);\n+    @Shadow public abstract NBTTagCompound shadow$getTagCompound();\n+    @Shadow public abstract NBTTagCompound shadow$getOrCreateSubCompound(String key);\n+    @Shadow public abstract boolean shadow$hasTagCompound();\n+    @Shadow public abstract void shadow$setTagCompound(@Nullable NBTTagCompound compound);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1417fd0a96058036309b91c8cdad7a494a973d6"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c11690a090acdae8f71316a3a71f5bf4bffdd584", "author": {"user": {"login": "dualspiral", "name": "Daniel Naylor"}}, "url": "https://github.com/SpongePowered/Sponge/commit/c11690a090acdae8f71316a3a71f5bf4bffdd584", "committedDate": "2020-08-23T08:42:00Z", "message": "Fixup nitpicks\n\nCo-authored-by: Gabriel Harris-Rouquette <gabizou@me.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 825, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}