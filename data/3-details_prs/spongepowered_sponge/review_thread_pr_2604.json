{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzI4MTA5", "number": 2604, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoxMjoxN1rOD7hPYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoxMjoxN1rOD7hPYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzM3MTg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/event/tracking/PhaseStack.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzoxMjoxN1rOGT5B4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1MDozMFrOGU852Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxMDQ5Ng==", "bodyText": "Just use a system arraycopy on a properly typed array, you add an extra checkcast that is made redundant later on.", "url": "https://github.com/SpongePowered/Sponge/pull/2604#discussion_r423510496", "createdAt": "2020-05-12T07:12:17Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/event/tracking/PhaseStack.java", "diffHunk": "@@ -133,19 +133,18 @@ boolean checkForRunaways(IPhaseState<?> state, @Nullable PhaseContext<?> phaseCo\n             return false;\n         }\n         final int totalCount = this.phases.size();\n-        final PhaseContext<?>[] allContexts = new PhaseContext[totalCount];\n-        int i = 0;\n+        if (totalCount < 2) {\n+            return false;\n+        }\n         // So first, we want to collect all the states into an array as they are pushed to the stack,\n         // which means that we should see the re-entrant phase pretty soon.\n-        for (PhaseContext<?> data : this.phases) {\n-            allContexts[i++] = data;\n-        }\n+        final Object[] allContexts = this.phases.toArray();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bef57d5b797421728af23bb6df8dcd1dcb81e80"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyMjU1Mw==", "bodyText": "I need the source array to call System#arraycopy directly. The source array is a protected field (elements) inside the ArrayDeque class, so I can only use Deque#toArray();.\ntoArray() is much faster than the type-checked arraycopy of toArray(T[] a) and the checkcast would be redundant only if I used the latter.", "url": "https://github.com/SpongePowered/Sponge/pull/2604#discussion_r424622553", "createdAt": "2020-05-13T17:50:30Z", "author": {"login": "ImMorpheus"}, "path": "src/main/java/org/spongepowered/common/event/tracking/PhaseStack.java", "diffHunk": "@@ -133,19 +133,18 @@ boolean checkForRunaways(IPhaseState<?> state, @Nullable PhaseContext<?> phaseCo\n             return false;\n         }\n         final int totalCount = this.phases.size();\n-        final PhaseContext<?>[] allContexts = new PhaseContext[totalCount];\n-        int i = 0;\n+        if (totalCount < 2) {\n+            return false;\n+        }\n         // So first, we want to collect all the states into an array as they are pushed to the stack,\n         // which means that we should see the re-entrant phase pretty soon.\n-        for (PhaseContext<?> data : this.phases) {\n-            allContexts[i++] = data;\n-        }\n+        final Object[] allContexts = this.phases.toArray();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUxMDQ5Ng=="}, "originalCommit": {"oid": "2bef57d5b797421728af23bb6df8dcd1dcb81e80"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2633, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}