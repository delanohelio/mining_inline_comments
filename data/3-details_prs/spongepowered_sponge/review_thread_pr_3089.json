{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDc5NjI4", "number": 3089, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDo0OTo1NVrOER2lNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDo1MTowN1rOER2nEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTU1NTA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/data/provider/block/state/AbstractFurnaceData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDo0OTo1NVrOG2yX9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDo0OTo1NVrOG2yX9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEwMTYyMg==", "bodyText": "Is this calling  is instance on the BlockState or the BlockState.getBlock?", "url": "https://github.com/SpongePowered/Sponge/pull/3089#discussion_r460101622", "createdAt": "2020-07-24T14:49:55Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/data/provider/block/state/AbstractFurnaceData.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.data.provider.block.state;\n+\n+import net.minecraft.block.AbstractFurnaceBlock;\n+import net.minecraft.block.BlockState;\n+import org.spongepowered.api.data.Keys;\n+import org.spongepowered.common.data.provider.DataProviderRegistrator;\n+import org.spongepowered.common.data.provider.util.DirectionUtils;\n+\n+public final class AbstractFurnaceData {\n+\n+    private AbstractFurnaceData() {\n+    }\n+\n+    // @formatter:off\n+    public static void register(final DataProviderRegistrator registrator) {\n+        registrator\n+                .asImmutable(BlockState.class)\n+                    .create(Keys.DIRECTION)\n+                        .get(h -> DirectionUtils.getFor(h.get(AbstractFurnaceBlock.FACING)))\n+                        .set((h, v) -> DirectionUtils.set(h, v, AbstractFurnaceBlock.FACING))\n+                        .supports(AbstractFurnaceBlock.class::isInstance)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f423a8c957d3d9184806143c6e27132be4f1d821"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTU1OTg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/data/provider/block/state/AbstractButtonData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDo1MTowN1rOG2yazw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNToxNjoxM1rOG2zYWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEwMjM1MQ==", "bodyText": "Do buttons also store their attached direction in their state? Or just powered?", "url": "https://github.com/SpongePowered/Sponge/pull/3089#discussion_r460102351", "createdAt": "2020-07-24T14:51:07Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/data/provider/block/state/AbstractButtonData.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.data.provider.block.state;\n+\n+import net.minecraft.block.AbstractButtonBlock;\n+import net.minecraft.block.BlockState;\n+import org.spongepowered.api.data.Keys;\n+import org.spongepowered.common.data.provider.DataProviderRegistrator;\n+\n+public final class AbstractButtonData {\n+\n+    private AbstractButtonData() {\n+    }\n+\n+    // @formatter:off\n+    public static void register(final DataProviderRegistrator registrator) {\n+        registrator\n+                .asImmutable(BlockState.class)\n+                    .create(Keys.IS_POWERED)\n+                        .get(h -> h.get(AbstractButtonBlock.POWERED))\n+                        .set((h, v) -> h.with(AbstractButtonBlock.POWERED, v))\n+                        .supports(AbstractButtonBlock.class::isInstance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f423a8c957d3d9184806143c6e27132be4f1d821"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDExODEwNA==", "bodyText": "Appears to just be POWERED", "url": "https://github.com/SpongePowered/Sponge/pull/3089#discussion_r460118104", "createdAt": "2020-07-24T15:16:13Z", "author": {"login": "Grinch"}, "path": "src/main/java/org/spongepowered/common/data/provider/block/state/AbstractButtonData.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.data.provider.block.state;\n+\n+import net.minecraft.block.AbstractButtonBlock;\n+import net.minecraft.block.BlockState;\n+import org.spongepowered.api.data.Keys;\n+import org.spongepowered.common.data.provider.DataProviderRegistrator;\n+\n+public final class AbstractButtonData {\n+\n+    private AbstractButtonData() {\n+    }\n+\n+    // @formatter:off\n+    public static void register(final DataProviderRegistrator registrator) {\n+        registrator\n+                .asImmutable(BlockState.class)\n+                    .create(Keys.IS_POWERED)\n+                        .get(h -> h.get(AbstractButtonBlock.POWERED))\n+                        .set((h, v) -> h.with(AbstractButtonBlock.POWERED, v))\n+                        .supports(AbstractButtonBlock.class::isInstance);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEwMjM1MQ=="}, "originalCommit": {"oid": "f423a8c957d3d9184806143c6e27132be4f1d821"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2550, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}