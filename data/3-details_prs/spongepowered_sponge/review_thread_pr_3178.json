{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NjI5NTky", "number": 3178, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTowODo0NVrOEqXJ7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTowODo0NVrOEqXJ7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODU1MDIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/world/schematic/ImmutableBimapPalette.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTowODo0NVrOHchfdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTo1ODozNFrOHcjn5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY3MDkwMA==", "bodyText": "Why not use an Int2ObjectMap and Object2IntMap if you're going to make a copy?", "url": "https://github.com/SpongePowered/Sponge/pull/3178#discussion_r499670900", "createdAt": "2020-10-05T15:08:45Z", "author": {"login": "Cybermaxke"}, "path": "src/main/java/org/spongepowered/common/world/schematic/ImmutableBimapPalette.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.world.schematic;\n+\n+import com.google.common.collect.BiMap;\n+import com.google.common.collect.ImmutableBiMap;\n+import net.minecraft.util.palette.IPalette;\n+import org.spongepowered.api.world.schematic.Palette;\n+import org.spongepowered.api.world.schematic.PaletteType;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+public class ImmutableBimapPalette<T> implements Palette.Immutable<T> {\n+\n+    private final ImmutableBiMap<Integer, T> ids;\n+    private final ImmutableBiMap<T, Integer> idsr;\n+    private final PaletteType<T> paletteType;\n+    private final int maxId;\n+\n+    public ImmutableBimapPalette(final PaletteType<T> paletteType, final BiMap<Integer, T> reference) {\n+        final ImmutableBiMap.Builder<Integer, T> builder = ImmutableBiMap.builder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d4be935546d994aaf25270bb87284ee7bb792c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwNDAzOA==", "bodyText": "\ud83d\udc4d for using fastutil here", "url": "https://github.com/SpongePowered/Sponge/pull/3178#discussion_r499704038", "createdAt": "2020-10-05T15:55:55Z", "author": {"login": "kashike"}, "path": "src/main/java/org/spongepowered/common/world/schematic/ImmutableBimapPalette.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.world.schematic;\n+\n+import com.google.common.collect.BiMap;\n+import com.google.common.collect.ImmutableBiMap;\n+import net.minecraft.util.palette.IPalette;\n+import org.spongepowered.api.world.schematic.Palette;\n+import org.spongepowered.api.world.schematic.PaletteType;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+public class ImmutableBimapPalette<T> implements Palette.Immutable<T> {\n+\n+    private final ImmutableBiMap<Integer, T> ids;\n+    private final ImmutableBiMap<T, Integer> idsr;\n+    private final PaletteType<T> paletteType;\n+    private final int maxId;\n+\n+    public ImmutableBimapPalette(final PaletteType<T> paletteType, final BiMap<Integer, T> reference) {\n+        final ImmutableBiMap.Builder<Integer, T> builder = ImmutableBiMap.builder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY3MDkwMA=="}, "originalCommit": {"oid": "39d4be935546d994aaf25270bb87284ee7bb792c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwNTgzMQ==", "bodyText": "Agreed", "url": "https://github.com/SpongePowered/Sponge/pull/3178#discussion_r499705831", "createdAt": "2020-10-05T15:58:34Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/common/world/schematic/ImmutableBimapPalette.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.world.schematic;\n+\n+import com.google.common.collect.BiMap;\n+import com.google.common.collect.ImmutableBiMap;\n+import net.minecraft.util.palette.IPalette;\n+import org.spongepowered.api.world.schematic.Palette;\n+import org.spongepowered.api.world.schematic.PaletteType;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Stream;\n+\n+public class ImmutableBimapPalette<T> implements Palette.Immutable<T> {\n+\n+    private final ImmutableBiMap<Integer, T> ids;\n+    private final ImmutableBiMap<T, Integer> idsr;\n+    private final PaletteType<T> paletteType;\n+    private final int maxId;\n+\n+    public ImmutableBimapPalette(final PaletteType<T> paletteType, final BiMap<Integer, T> reference) {\n+        final ImmutableBiMap.Builder<Integer, T> builder = ImmutableBiMap.builder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY3MDkwMA=="}, "originalCommit": {"oid": "39d4be935546d994aaf25270bb87284ee7bb792c"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2498, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}