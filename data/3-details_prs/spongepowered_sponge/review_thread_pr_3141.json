{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1Nzk3MDAy", "number": 3141, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNjoyNzowMFrOEd_EyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNjoyNzowMFrOEd_EyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODc3NTc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/fluid/SpongeFluidStateBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNjoyNzowMFrOHJcemw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxNjoyNzowMFrOHJcemw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY2NTgxOQ==", "bodyText": "You know what is about to happen right?", "url": "https://github.com/SpongePowered/Sponge/pull/3141#discussion_r479665819", "createdAt": "2020-08-29T16:27:00Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/common/fluid/SpongeFluidStateBuilder.java", "diffHunk": "@@ -0,0 +1,195 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.fluid;\n+\n+import static net.minecraft.command.arguments.BlockStateParser.STATE_INVALID_PROPERTY_VALUE;\n+import static org.spongepowered.common.data.util.DataUtil.checkDataExists;\n+\n+import com.mojang.brigadier.StringReader;\n+import com.mojang.brigadier.exceptions.CommandSyntaxException;\n+import net.minecraft.command.arguments.BlockStateParser;\n+import net.minecraft.fluid.Fluid;\n+import net.minecraft.fluid.IFluidState;\n+import net.minecraft.state.IProperty;\n+import net.minecraft.state.StateContainer;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.registry.Registry;\n+import org.spongepowered.api.data.Key;\n+import org.spongepowered.api.data.persistence.DataView;\n+import org.spongepowered.api.data.persistence.InvalidDataException;\n+import org.spongepowered.api.data.value.Value;\n+import org.spongepowered.api.fluid.FluidState;\n+import org.spongepowered.api.fluid.FluidType;\n+import org.spongepowered.api.fluid.FluidTypes;\n+import org.spongepowered.common.util.Constants;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+public class SpongeFluidStateBuilder implements FluidState.Builder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17cd4bbd6a5b9a4f980da8c6c2b720eca3a57d37"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2559, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}