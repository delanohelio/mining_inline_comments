{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDg1MDM5", "number": 2486, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNjo0Nzo0NFrODarX0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzo1OTo0MVrODbyuGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzAwMTc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/data/type/SpongeTropicalFishShape.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNjo0Nzo0NFrOFhwlNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNjo1MDoyMFrOFhwlkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0MzI4NA==", "bodyText": "Can you add a final modifier here ?", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r370943284", "createdAt": "2020-01-25T16:47:44Z", "author": {"login": "ImMorpheus"}, "path": "src/main/java/org/spongepowered/common/data/type/SpongeTropicalFishShape.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.data.type;\n+\n+import org.spongepowered.api.CatalogKey;\n+import org.spongepowered.api.data.type.TropicalFishShape;\n+\n+public class SpongeTropicalFishShape extends SpongeEntityMetadataType<Integer> implements TropicalFishShape {\n+\n+    private boolean large;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b558265175db950af60f7660f16a65e29e3b3883"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0MzM3OQ==", "bodyText": "Yea I didn't catch that one. I'll fix it when I am home.", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r370943379", "createdAt": "2020-01-25T16:50:20Z", "author": {"login": "i509VCB"}, "path": "src/main/java/org/spongepowered/common/data/type/SpongeTropicalFishShape.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.data.type;\n+\n+import org.spongepowered.api.CatalogKey;\n+import org.spongepowered.api.data.type.TropicalFishShape;\n+\n+public class SpongeTropicalFishShape extends SpongeEntityMetadataType<Integer> implements TropicalFishShape {\n+\n+    private boolean large;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0MzI4NA=="}, "originalCommit": {"oid": "b558265175db950af60f7660f16a65e29e3b3883"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzI4MDU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/registry/builtin/stream/TropicalFishShapeStreamGenerator.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwNzoyMDozN1rOFhyvTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzo1Mzo1NVrOFjex9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3ODYzNw==", "bodyText": "I'm tempted to ask for these constants to be exposed in the Constants class so that Data Key Processors will be able to use them (if they're supported to be changed). Thoughts?", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r370978637", "createdAt": "2020-01-26T07:20:37Z", "author": {"login": "gabizou"}, "path": "src/main/java/org/spongepowered/common/registry/builtin/stream/TropicalFishShapeStreamGenerator.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.registry.builtin.stream;\n+\n+import org.spongepowered.api.CatalogKey;\n+import org.spongepowered.api.data.type.TropicalFishShape;\n+import org.spongepowered.api.util.Tuple;\n+import org.spongepowered.common.data.type.SpongeTropicalFishShape;\n+\n+import java.util.stream.Stream;\n+\n+public final class TropicalFishShapeStreamGenerator {\n+    private TropicalFishShapeStreamGenerator() {\n+    }\n+\n+    public static Stream<Tuple<TropicalFishShape, Integer>> stream() {\n+        return Stream.of(\n+            Tuple.of(new SpongeTropicalFishShape(CatalogKey.minecraft(\"kob\"), false, 0), 0),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "940402d7110109e43fa4bd679901c2ce70ba5d8c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3ODczOQ==", "bodyText": "So like move the stream generation to Constants or did you mean something else.", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r370978739", "createdAt": "2020-01-26T07:22:43Z", "author": {"login": "i509VCB"}, "path": "src/main/java/org/spongepowered/common/registry/builtin/stream/TropicalFishShapeStreamGenerator.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.registry.builtin.stream;\n+\n+import org.spongepowered.api.CatalogKey;\n+import org.spongepowered.api.data.type.TropicalFishShape;\n+import org.spongepowered.api.util.Tuple;\n+import org.spongepowered.common.data.type.SpongeTropicalFishShape;\n+\n+import java.util.stream.Stream;\n+\n+public final class TropicalFishShapeStreamGenerator {\n+    private TropicalFishShapeStreamGenerator() {\n+    }\n+\n+    public static Stream<Tuple<TropicalFishShape, Integer>> stream() {\n+        return Stream.of(\n+            Tuple.of(new SpongeTropicalFishShape(CatalogKey.minecraft(\"kob\"), false, 0), 0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3ODYzNw=="}, "originalCommit": {"oid": "940402d7110109e43fa4bd679901c2ce70ba5d8c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAxMzMzMA==", "bodyText": "Okay after sleeping on it I think I understand a bit more what you meant. There is actually a variety enum. But its private static so the third AT has come.\nSo I will change it so it corresponds to the enum. However since all the Tropical Fish data integer data value based, literally nothing prevents someone from using mixin to add to BODY_TEXTURES (Base Texture used to make the fish)\nPATTERN_TEXTURES_A (Pattern textures used on smaller fish)\nPATTERN_TEXTURES_B (Pattern textures used on larger fish) and creating a mod which adds fish that can exceed these values. Even vanilla's NBT (via /data merge) allows you to exceed these values.\nIt's also likely possible to this with just the integer values since translations do exist.", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r371013330", "createdAt": "2020-01-26T16:45:10Z", "author": {"login": "i509VCB"}, "path": "src/main/java/org/spongepowered/common/registry/builtin/stream/TropicalFishShapeStreamGenerator.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.registry.builtin.stream;\n+\n+import org.spongepowered.api.CatalogKey;\n+import org.spongepowered.api.data.type.TropicalFishShape;\n+import org.spongepowered.api.util.Tuple;\n+import org.spongepowered.common.data.type.SpongeTropicalFishShape;\n+\n+import java.util.stream.Stream;\n+\n+public final class TropicalFishShapeStreamGenerator {\n+    private TropicalFishShapeStreamGenerator() {\n+    }\n+\n+    public static Stream<Tuple<TropicalFishShape, Integer>> stream() {\n+        return Stream.of(\n+            Tuple.of(new SpongeTropicalFishShape(CatalogKey.minecraft(\"kob\"), false, 0), 0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3ODYzNw=="}, "originalCommit": {"oid": "940402d7110109e43fa4bd679901c2ce70ba5d8c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0NzAxMw==", "bodyText": "I don't want these outside these basically util classes unless the need arises at some point.", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r372747013", "createdAt": "2020-01-30T03:44:02Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/common/registry/builtin/stream/TropicalFishShapeStreamGenerator.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.registry.builtin.stream;\n+\n+import org.spongepowered.api.CatalogKey;\n+import org.spongepowered.api.data.type.TropicalFishShape;\n+import org.spongepowered.api.util.Tuple;\n+import org.spongepowered.common.data.type.SpongeTropicalFishShape;\n+\n+import java.util.stream.Stream;\n+\n+public final class TropicalFishShapeStreamGenerator {\n+    private TropicalFishShapeStreamGenerator() {\n+    }\n+\n+    public static Stream<Tuple<TropicalFishShape, Integer>> stream() {\n+        return Stream.of(\n+            Tuple.of(new SpongeTropicalFishShape(CatalogKey.minecraft(\"kob\"), false, 0), 0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3ODYzNw=="}, "originalCommit": {"oid": "940402d7110109e43fa4bd679901c2ce70ba5d8c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0ODc4OA==", "bodyText": "I saw there was a TropicalFishEntity.Type enum (why didn't I see this earlier lol), so I changed to that, although it comes at the cost of one AT but you can use the easier method to just set the variation of the fish within data.", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r372748788", "createdAt": "2020-01-30T03:53:55Z", "author": {"login": "i509VCB"}, "path": "src/main/java/org/spongepowered/common/registry/builtin/stream/TropicalFishShapeStreamGenerator.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.registry.builtin.stream;\n+\n+import org.spongepowered.api.CatalogKey;\n+import org.spongepowered.api.data.type.TropicalFishShape;\n+import org.spongepowered.api.util.Tuple;\n+import org.spongepowered.common.data.type.SpongeTropicalFishShape;\n+\n+import java.util.stream.Stream;\n+\n+public final class TropicalFishShapeStreamGenerator {\n+    private TropicalFishShapeStreamGenerator() {\n+    }\n+\n+    public static Stream<Tuple<TropicalFishShape, Integer>> stream() {\n+        return Stream.of(\n+            Tuple.of(new SpongeTropicalFishShape(CatalogKey.minecraft(\"kob\"), false, 0), 0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk3ODYzNw=="}, "originalCommit": {"oid": "940402d7110109e43fa4bd679901c2ce70ba5d8c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNDY2OTA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/data/type/SpongeTropicalFishShape.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzo0MTo1MFrOFjepfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzo0MTo1MFrOFjepfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0NjYyMA==", "bodyText": "Finalize the class", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r372746620", "createdAt": "2020-01-30T03:41:50Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/common/data/type/SpongeTropicalFishShape.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * This file is part of Sponge, licensed under the MIT License (MIT).\n+ *\n+ * Copyright (c) SpongePowered <https://www.spongepowered.org>\n+ * Copyright (c) contributors\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.spongepowered.common.data.type;\n+\n+import org.spongepowered.api.CatalogKey;\n+import org.spongepowered.api.data.type.TropicalFishShape;\n+\n+public class SpongeTropicalFishShape extends SpongeEntityMetadataType<Integer> implements TropicalFishShape {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "940402d7110109e43fa4bd679901c2ce70ba5d8c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNDY5MTQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/spongepowered/common/mixin/api/mcp/entity/passive/fish/TropicalFishEntityMixin_TypeMixin_API.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzo1OTo0MVrOFje2OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMzo1OTo0MVrOFje2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mjc0OTg4MQ==", "bodyText": "License headers", "url": "https://github.com/SpongePowered/Sponge/pull/2486#discussion_r372749881", "createdAt": "2020-01-30T03:59:41Z", "author": {"login": "Zidane"}, "path": "src/main/java/org/spongepowered/common/mixin/api/mcp/entity/passive/fish/TropicalFishEntityMixin_TypeMixin_API.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.spongepowered.common.mixin.api.mcp.entity.passive.fish;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e1782e20c3b15a5e0327fd31ebd040f7f9f6382"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2568, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}