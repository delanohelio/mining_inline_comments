{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzOTIwMjky", "number": 515, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzowNToyMVrOEvBWRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzoxMToxNFrOEvBcLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzQwNjEyOnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/DatabaseClientImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzowNToyMVrOHjvnOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0MzozOFrOHkzzjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI0MjI5Nw==", "bodyText": "nit: could we rename methods such as getReadSession() to getSession() now that we do not have such separation?", "url": "https://github.com/googleapis/java-spanner/pull/515#discussion_r507242297", "createdAt": "2020-10-18T23:05:21Z", "author": {"login": "thiagotnunes"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/DatabaseClientImpl.java", "diffHunk": "@@ -301,17 +218,13 @@ public Long apply(Session session) {\n     }\n   }\n \n-  private <T> T runWithSessionRetry(SessionMode mode, Function<Session, T> callable) {\n-    PooledSessionFuture session =\n-        mode == SessionMode.READ_WRITE ? getReadWriteSession() : getReadSession();\n+  private <T> T runWithSessionRetry(Function<Session, T> callable) {\n+    PooledSessionFuture session = getReadSession();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a73b00e1f21bd352327cd5e57ad2350cd349bc"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM1OTU2NQ==", "bodyText": "Done.", "url": "https://github.com/googleapis/java-spanner/pull/515#discussion_r508359565", "createdAt": "2020-10-20T09:43:38Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/DatabaseClientImpl.java", "diffHunk": "@@ -301,17 +218,13 @@ public Long apply(Session session) {\n     }\n   }\n \n-  private <T> T runWithSessionRetry(SessionMode mode, Function<Session, T> callable) {\n-    PooledSessionFuture session =\n-        mode == SessionMode.READ_WRITE ? getReadWriteSession() : getReadSession();\n+  private <T> T runWithSessionRetry(Function<Session, T> callable) {\n+    PooledSessionFuture session = getReadSession();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI0MjI5Nw=="}, "originalCommit": {"oid": "26a73b00e1f21bd352327cd5e57ad2350cd349bc"}, "originalPosition": 184}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzQwOTAzOnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzowNjoyMlrOHjvpMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0ODozMFrOHk0AYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI0MjgwMA==", "bodyText": "nit: could we add javadocs on the deprecation notice?", "url": "https://github.com/googleapis/java-spanner/pull/515#discussion_r507242800", "createdAt": "2020-10-18T23:06:22Z", "author": {"login": "thiagotnunes"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -36,9 +36,14 @@\n   private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n \n   static final LabelValue NUM_IN_USE_SESSIONS = LabelValue.create(\"num_in_use_sessions\");\n+\n+  @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a73b00e1f21bd352327cd5e57ad2350cd349bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2Mjg0OA==", "bodyText": "Done.", "url": "https://github.com/googleapis/java-spanner/pull/515#discussion_r508362848", "createdAt": "2020-10-20T09:48:30Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -36,9 +36,14 @@\n   private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n \n   static final LabelValue NUM_IN_USE_SESSIONS = LabelValue.create(\"num_in_use_sessions\");\n+\n+  @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI0MjgwMA=="}, "originalCommit": {"oid": "26a73b00e1f21bd352327cd5e57ad2350cd349bc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzQxNDQ5OnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzowODo0M1rOHjvs-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo0OTowNlrOHk0B7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI0Mzc2OQ==", "bodyText": "nit: typo rsession -> session", "url": "https://github.com/googleapis/java-spanner/pull/515#discussion_r507243769", "createdAt": "2020-10-18T23:08:43Z", "author": {"login": "thiagotnunes"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -2065,151 +1878,39 @@ PooledSessionFuture getReadSession() throws SpannerException {\n                 resourceNotFoundException.getMessage()),\n             resourceNotFoundException);\n       }\n-      sess = readSessions.poll();\n+      sess = sessions.poll();\n       if (sess == null) {\n-        sess = writePreparedSessions.poll();\n-        if (sess == null) {\n-          span.addAnnotation(\"No session available\");\n-          maybeCreateSession();\n-          waiter = new WaiterFuture();\n-          readWaiters.add(waiter);\n-        } else {\n-          span.addAnnotation(\"Acquired read write session\");\n-        }\n+        span.addAnnotation(\"No session available\");\n+        maybeCreateSession();\n+        waiter = new WaiterFuture();\n+        waiters.add(waiter);\n       } else {\n-        span.addAnnotation(\"Acquired read only session\");\n+        span.addAnnotation(\"Acquired rsession\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a73b00e1f21bd352327cd5e57ad2350cd349bc"}, "originalPosition": 437}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2MzI0NA==", "bodyText": "Done.", "url": "https://github.com/googleapis/java-spanner/pull/515#discussion_r508363244", "createdAt": "2020-10-20T09:49:06Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -2065,151 +1878,39 @@ PooledSessionFuture getReadSession() throws SpannerException {\n                 resourceNotFoundException.getMessage()),\n             resourceNotFoundException);\n       }\n-      sess = readSessions.poll();\n+      sess = sessions.poll();\n       if (sess == null) {\n-        sess = writePreparedSessions.poll();\n-        if (sess == null) {\n-          span.addAnnotation(\"No session available\");\n-          maybeCreateSession();\n-          waiter = new WaiterFuture();\n-          readWaiters.add(waiter);\n-        } else {\n-          span.addAnnotation(\"Acquired read write session\");\n-        }\n+        span.addAnnotation(\"No session available\");\n+        maybeCreateSession();\n+        waiter = new WaiterFuture();\n+        waiters.add(waiter);\n       } else {\n-        span.addAnnotation(\"Acquired read only session\");\n+        span.addAnnotation(\"Acquired rsession\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI0Mzc2OQ=="}, "originalCommit": {"oid": "26a73b00e1f21bd352327cd5e57ad2350cd349bc"}, "originalPosition": 437}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzQyMTI1OnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/TransactionRunnerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQyMzoxMToxNFrOHjvxgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1MToxMFrOHk0HEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI0NDkzMA==", "bodyText": "Could we remove the branching here, since useInlinedBegin is always true?", "url": "https://github.com/googleapis/java-spanner/pull/515#discussion_r507244930", "createdAt": "2020-10-18T23:11:14Z", "author": {"login": "thiagotnunes"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/TransactionRunnerImpl.java", "diffHunk": "@@ -765,7 +762,7 @@ public void setSpan(Span span) {\n         new Callable<T>() {\n           @Override\n           public T call() {\n-            boolean useInlinedBegin = inlineBegin;\n+            boolean useInlinedBegin = true;\n             if (attempt.get() > 0) {\n               if (useInlinedBegin) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26a73b00e1f21bd352327cd5e57ad2350cd349bc"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NDU2MQ==", "bodyText": "Yep, that's quite useless. Thanks for noticing.", "url": "https://github.com/googleapis/java-spanner/pull/515#discussion_r508364561", "createdAt": "2020-10-20T09:51:10Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/TransactionRunnerImpl.java", "diffHunk": "@@ -765,7 +762,7 @@ public void setSpan(Span span) {\n         new Callable<T>() {\n           @Override\n           public T call() {\n-            boolean useInlinedBegin = inlineBegin;\n+            boolean useInlinedBegin = true;\n             if (attempt.get() > 0) {\n               if (useInlinedBegin) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzI0NDkzMA=="}, "originalCommit": {"oid": "26a73b00e1f21bd352327cd5e57ad2350cd349bc"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3290, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}