{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTQ1OTA4", "number": 134, "title": "perf: increase sessions in the pool in batches", "bodyText": "When more sessions are requested by the user application than are available in the session pool,\nthe session pool will now create new sessions in batches instead of in steps of 1. This reduces\nthe number of RPCs needed to serve a burst of requests. The default step size is 25 sessions.\nIn a default setup with MinSessions=100, MaxSessions=400, NumChannels=4 a session pool that receives a burst of read or write requests will now have to execute 16 BatchCreateSessions RPCs as opposed to 304 BatchCreateSessions RPCs when using steps of 1.\nA benchmark for the session pool has also been added to be able to compare performance and the\nnumber of RPCs needed before and after this change. This benchmark can also be used for future\nchanges to verify that the change does not deteriorate performance or increase the number of\nRPCs needed. The full benchmark results for the session pool with varying values for the step size for BatchCreateSessions are:\nExecution time in milliseconds\n\n\n\nBenchmark\n(incStep)\nScore\n\n\n\n\nSessionPoolBenchmark.burstRead\n1\n1218.416\n\n\nSessionPoolBenchmark.burstRead\n10\n827.376\n\n\nSessionPoolBenchmark.burstRead\n20\n843.336\n\n\nSessionPoolBenchmark.burstRead\n25\n828.906\n\n\nSessionPoolBenchmark.burstRead\n30\n1359.492\n\n\nSessionPoolBenchmark.burstRead\n40\n1021.871\n\n\nSessionPoolBenchmark.burstRead\n50\n1089.514\n\n\nSessionPoolBenchmark.burstRead\n100\n901.084\n\n\nSessionPoolBenchmark.burstReadAndWrite\n1\n2490.588\n\n\nSessionPoolBenchmark.burstReadAndWrite\n10\n2590.583\n\n\nSessionPoolBenchmark.burstReadAndWrite\n20\n2476.811\n\n\nSessionPoolBenchmark.burstReadAndWrite\n25\n2438.735\n\n\nSessionPoolBenchmark.burstReadAndWrite\n30\n2416.405\n\n\nSessionPoolBenchmark.burstReadAndWrite\n40\n2570.678\n\n\nSessionPoolBenchmark.burstReadAndWrite\n50\n2539.745\n\n\nSessionPoolBenchmark.burstReadAndWrite\n100\n2452.292\n\n\nSessionPoolBenchmark.burstWrite\n1\n4713.28\n\n\nSessionPoolBenchmark.burstWrite\n10\n4840.903\n\n\nSessionPoolBenchmark.burstWrite\n20\n4779.517\n\n\nSessionPoolBenchmark.burstWrite\n25\n4776.143\n\n\nSessionPoolBenchmark.burstWrite\n30\n4707.731\n\n\nSessionPoolBenchmark.burstWrite\n40\n4750.286\n\n\nSessionPoolBenchmark.burstWrite\n50\n4830.955\n\n\nSessionPoolBenchmark.burstWrite\n100\n4843.729\n\n\nSessionPoolBenchmark.steadyIncrease\n1\n8003.601\n\n\nSessionPoolBenchmark.steadyIncrease\n10\n819.771\n\n\nSessionPoolBenchmark.steadyIncrease\n20\n447.573\n\n\nSessionPoolBenchmark.steadyIncrease\n25\n425.566\n\n\nSessionPoolBenchmark.steadyIncrease\n30\n384.675\n\n\nSessionPoolBenchmark.steadyIncrease\n40\n324.946\n\n\nSessionPoolBenchmark.steadyIncrease\n50\n279.195\n\n\nSessionPoolBenchmark.steadyIncrease\n100\n205.646\n\n\n\nNumber of BatchCreateSessions RPCs needed\n\n\n\nBenchmark\n(incStep)\nScore\n\n\n\n\nSessionPoolBenchmark.burstRead:numBatchCreateSessionsRpcs\n1\n304\n\n\nSessionPoolBenchmark.burstRead:numBatchCreateSessionsRpcs\n10\n34\n\n\nSessionPoolBenchmark.burstRead:numBatchCreateSessionsRpcs\n20\n19\n\n\nSessionPoolBenchmark.burstRead:numBatchCreateSessionsRpcs\n25\n16\n\n\nSessionPoolBenchmark.burstRead:numBatchCreateSessionsRpcs\n30\n14\n\n\nSessionPoolBenchmark.burstRead:numBatchCreateSessionsRpcs\n40\n12\n\n\nSessionPoolBenchmark.burstRead:numBatchCreateSessionsRpcs\n50\n10\n\n\nSessionPoolBenchmark.burstRead:numBatchCreateSessionsRpcs\n100\n7\n\n\nSessionPoolBenchmark.burstReadAndWrite:numBatchCreateSessionsRpcs\n1\n304\n\n\nSessionPoolBenchmark.burstReadAndWrite:numBatchCreateSessionsRpcs\n10\n34\n\n\nSessionPoolBenchmark.burstReadAndWrite:numBatchCreateSessionsRpcs\n20\n19\n\n\nSessionPoolBenchmark.burstReadAndWrite:numBatchCreateSessionsRpcs\n25\n16\n\n\nSessionPoolBenchmark.burstReadAndWrite:numBatchCreateSessionsRpcs\n30\n14\n\n\nSessionPoolBenchmark.burstReadAndWrite:numBatchCreateSessionsRpcs\n40\n12\n\n\nSessionPoolBenchmark.burstReadAndWrite:numBatchCreateSessionsRpcs\n50\n10\n\n\nSessionPoolBenchmark.burstReadAndWrite:numBatchCreateSessionsRpcs\n100\n7\n\n\nSessionPoolBenchmark.burstWrite:numBatchCreateSessionsRpcs\n1\n304\n\n\nSessionPoolBenchmark.burstWrite:numBatchCreateSessionsRpcs\n10\n34\n\n\nSessionPoolBenchmark.burstWrite:numBatchCreateSessionsRpcs\n20\n19\n\n\nSessionPoolBenchmark.burstWrite:numBatchCreateSessionsRpcs\n25\n16\n\n\nSessionPoolBenchmark.burstWrite:numBatchCreateSessionsRpcs\n30\n14\n\n\nSessionPoolBenchmark.burstWrite:numBatchCreateSessionsRpcs\n40\n12\n\n\nSessionPoolBenchmark.burstWrite:numBatchCreateSessionsRpcs\n50\n10\n\n\nSessionPoolBenchmark.burstWrite:numBatchCreateSessionsRpcs\n100\n7\n\n\nSessionPoolBenchmark.steadyIncrease:numBatchCreateSessionsRpcs\n1\n304\n\n\nSessionPoolBenchmark.steadyIncrease:numBatchCreateSessionsRpcs\n10\n34\n\n\nSessionPoolBenchmark.steadyIncrease:numBatchCreateSessionsRpcs\n20\n19\n\n\nSessionPoolBenchmark.steadyIncrease:numBatchCreateSessionsRpcs\n25\n16\n\n\nSessionPoolBenchmark.steadyIncrease:numBatchCreateSessionsRpcs\n30\n14\n\n\nSessionPoolBenchmark.steadyIncrease:numBatchCreateSessionsRpcs\n40\n12\n\n\nSessionPoolBenchmark.steadyIncrease:numBatchCreateSessionsRpcs\n50\n10\n\n\nSessionPoolBenchmark.steadyIncrease:numBatchCreateSessionsRpcs\n100\n7", "createdAt": "2020-03-28T19:54:41Z", "url": "https://github.com/googleapis/java-spanner/pull/134", "merged": true, "mergeCommit": {"oid": "9e5a1cdaacf71147b67681861f063c3276705f44"}, "closed": true, "closedAt": "2020-04-08T03:58:13Z", "author": {"login": "olavloite"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTfvBwAFqTM4NjAwMjIwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVfvTagFqTM4OTYzNjU4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MDAyMjA0", "url": "https://github.com/googleapis/java-spanner/pull/134#pullrequestreview-386002204", "createdAt": "2020-04-01T22:49:04Z", "commit": {"oid": "d4cdee90cbb96010e8b6105436a0ec6aaac01cb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjo0OTowNFrOF_VYOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjo0OTowNFrOF_VYOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1NDg3Mg==", "bodyText": "Why do we name this from distributeOverChannels to initialization? initialization seems not to have a clear meaning.", "url": "https://github.com/googleapis/java-spanner/pull/134#discussion_r401954872", "createdAt": "2020-04-01T22:49:04Z", "author": {"login": "hengfengli"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1794,7 +1795,7 @@ private boolean canCreateSession() {\n     }\n   }\n \n-  private void createSessions(final int sessionCount) {\n+  private void createSessions(final int sessionCount, boolean initialization) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cdee90cbb96010e8b6105436a0ec6aaac01cb5"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MDE2NTUy", "url": "https://github.com/googleapis/java-spanner/pull/134#pullrequestreview-386016552", "createdAt": "2020-04-01T23:26:40Z", "commit": {"oid": "d4cdee90cbb96010e8b6105436a0ec6aaac01cb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyNjo0MVrOF_WJzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzoyNjo0MVrOF_WJzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2NzU2Nw==", "bodyText": "So does this mean only when we initialize the pool, we will distribute requests across different channels? For the rest, we don't.", "url": "https://github.com/googleapis/java-spanner/pull/134#discussion_r401967567", "createdAt": "2020-04-01T23:26:41Z", "author": {"login": "hengfengli"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1077,7 +1077,7 @@ private void replenishPool() {\n         // If we have gone below min pool size, create that many sessions.\n         int sessionCount = options.getMinSessions() - (totalSessions() + numSessionsBeingCreated);\n         if (sessionCount > 0) {\n-          createSessions(getAllowedCreateSessions(sessionCount));\n+          createSessions(getAllowedCreateSessions(sessionCount), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cdee90cbb96010e8b6105436a0ec6aaac01cb5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MDE4MTY3", "url": "https://github.com/googleapis/java-spanner/pull/134#pullrequestreview-386018167", "createdAt": "2020-04-01T23:31:15Z", "commit": {"oid": "d4cdee90cbb96010e8b6105436a0ec6aaac01cb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzozMToxNlrOF_WPgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzozMToxNlrOF_WPgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2OTAyNg==", "bodyText": "Do we need to allow users to configure this? I mean we add a new parameter to let users to configure, which can add cognitive load to them.", "url": "https://github.com/googleapis/java-spanner/pull/134#discussion_r401969026", "createdAt": "2020-04-01T23:31:16Z", "author": {"login": "hengfengli"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPoolOptions.java", "diffHunk": "@@ -40,6 +42,7 @@ private SessionPoolOptions(Builder builder) {\n     // maxSessions value is less than the default for minSessions.\n     this.minSessions = Math.min(builder.minSessions, builder.maxSessions);\n     this.maxSessions = builder.maxSessions;\n+    this.incStep = builder.incStep;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cdee90cbb96010e8b6105436a0ec6aaac01cb5"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MDI0OTIz", "url": "https://github.com/googleapis/java-spanner/pull/134#pullrequestreview-386024923", "createdAt": "2020-04-01T23:51:02Z", "commit": {"oid": "d4cdee90cbb96010e8b6105436a0ec6aaac01cb5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9722e3012bab4f153516798cccd148c83fe2780", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/b9722e3012bab4f153516798cccd148c83fe2780", "committedDate": "2020-04-04T15:08:32Z", "message": "perf: increase sessions in the pool in batches\n\nWhen more sessions are requested by the user application than are available in the session pool,\nthe session pool will now create new sessions in batches instead of in steps of 1. This reduces\nthe number of RPCs needed to serve a burst of requests.\n\nA benchmark for the session pool has also been added to be able to compare performance and the\nnumber of RPCs needed before and after this change. This benchmark can also be used for future\nchanges to verify that the change does not deteriorate performance or increase the number of\nRPCs needed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ef0deaea886186fe4d318e5ba7ec74e5ee91ce6", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/6ef0deaea886186fe4d318e5ba7ec74e5ee91ce6", "committedDate": "2020-04-04T15:08:32Z", "message": "fix: remove unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c61ecee9b7db7444778ba6ef11e9d1a65d0e7fa0", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/c61ecee9b7db7444778ba6ef11e9d1a65d0e7fa0", "committedDate": "2020-04-04T15:09:54Z", "message": "fix: include num rpcs and sessions in benchmark results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0db75dfbdb3f66a87238bf840cadc3c0776f62f6", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/0db75dfbdb3f66a87238bf840cadc3c0776f62f6", "committedDate": "2020-04-04T15:09:54Z", "message": "fix: remove commented code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3ac294373a4bc9b3db4a45f48e7ca451c849fcd", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/e3ac294373a4bc9b3db4a45f48e7ca451c849fcd", "committedDate": "2020-04-04T15:09:54Z", "message": "fix: rename parameter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edfa5096dd4b2c90f2a89e0f6c1b73600036235b", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/edfa5096dd4b2c90f2a89e0f6c1b73600036235b", "committedDate": "2020-04-02T06:52:31Z", "message": "fix: rename parameter"}, "afterCommit": {"oid": "e3ac294373a4bc9b3db4a45f48e7ca451c849fcd", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/e3ac294373a4bc9b3db4a45f48e7ca451c849fcd", "committedDate": "2020-04-04T15:09:54Z", "message": "fix: rename parameter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjM2NTg0", "url": "https://github.com/googleapis/java-spanner/pull/134#pullrequestreview-389636584", "createdAt": "2020-04-08T03:57:13Z", "commit": {"oid": "e3ac294373a4bc9b3db4a45f48e7ca451c849fcd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 883, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}