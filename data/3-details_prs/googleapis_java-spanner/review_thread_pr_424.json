{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NDk1Mzg4", "number": 424, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjoyNzozOVrOEjcNvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjoyNzozOVrOEjcNvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTk3ODg1OnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/Value.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjoyNzozOVrOHRyktg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNTo0MjoyNVrOHT-1cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQxNjQzOA==", "bodyText": "Is this all necessary because BigDecimal has arbitrary precision but NUMERIC doesn't?\nJust as an FYI, we chose not to do this explicit check in other clients just because we wanted to make sure that the backend threw errors in case they decide to change the precision later on. In practice, they wouldn't change it without notifying us so it's not a big deal.", "url": "https://github.com/googleapis/java-spanner/pull/424#discussion_r488416438", "createdAt": "2020-09-15T06:27:39Z", "author": {"login": "skuruppu"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/Value.java", "diffHunk": "@@ -123,11 +123,37 @@ public static Value float64(double v) {\n   }\n \n   /**\n-   * Returns a {@code NUMERIC} value.\n+   * Returns a {@code NUMERIC} value. The valid value range for the whole component of the {@link\n+   * BigDecimal} is from -9,999,999,999,999,999,999,999,999 to +9,999,999,999,999,999,999,999,999\n+   * (both inclusive), i.e. the max length of the whole component is 29 digits. The max length of\n+   * the fractional part is 9 digits. Trailing zeros in the fractional part are not considered and\n+   * will be lost, as Cloud Spanner does not preserve the precision of a numeric value.\n+   *\n+   * <p>If you set a numeric value of a record to for example 0.10, Cloud Spanner will return this\n+   * value as 0.1 in subsequent queries. Use {@link BigDecimal#stripTrailingZeros()} to compare\n+   * inserted values with retrieved values if your application might insert numeric values with\n+   * trailing zeros.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb579c4e86cb3053096b2cef4310c70cf21faec"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyMzA3OA==", "bodyText": "I added the check because the error messages from the backend are not very clear (at the moment). If you send an out-of-range NUMERIC value to Cloud Spanner, it will respond with a generic io.grpc.StatusRuntimeException: INVALID_ARGUMENT: Invalid value for bind parameter p1: Expected NUMERIC. That already confused one of the engineers at the Java frameworks team as he was sending a NUMERIC value, but it was out of range.", "url": "https://github.com/googleapis/java-spanner/pull/424#discussion_r488423078", "createdAt": "2020-09-15T06:43:24Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/Value.java", "diffHunk": "@@ -123,11 +123,37 @@ public static Value float64(double v) {\n   }\n \n   /**\n-   * Returns a {@code NUMERIC} value.\n+   * Returns a {@code NUMERIC} value. The valid value range for the whole component of the {@link\n+   * BigDecimal} is from -9,999,999,999,999,999,999,999,999 to +9,999,999,999,999,999,999,999,999\n+   * (both inclusive), i.e. the max length of the whole component is 29 digits. The max length of\n+   * the fractional part is 9 digits. Trailing zeros in the fractional part are not considered and\n+   * will be lost, as Cloud Spanner does not preserve the precision of a numeric value.\n+   *\n+   * <p>If you set a numeric value of a record to for example 0.10, Cloud Spanner will return this\n+   * value as 0.1 in subsequent queries. Use {@link BigDecimal#stripTrailingZeros()} to compare\n+   * inserted values with retrieved values if your application might insert numeric values with\n+   * trailing zeros.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQxNjQzOA=="}, "originalCommit": {"oid": "abb579c4e86cb3053096b2cef4310c70cf21faec"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcxNDQ4Mw==", "bodyText": "Thanks @olavloite. @thiagotnunes has informed the backend team asking them to return a more meaningful error. But in the meantime, it's ok for us to do this in the client. We can remove it when the backend returns a better error message.", "url": "https://github.com/googleapis/java-spanner/pull/424#discussion_r490714483", "createdAt": "2020-09-18T05:42:25Z", "author": {"login": "skuruppu"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/Value.java", "diffHunk": "@@ -123,11 +123,37 @@ public static Value float64(double v) {\n   }\n \n   /**\n-   * Returns a {@code NUMERIC} value.\n+   * Returns a {@code NUMERIC} value. The valid value range for the whole component of the {@link\n+   * BigDecimal} is from -9,999,999,999,999,999,999,999,999 to +9,999,999,999,999,999,999,999,999\n+   * (both inclusive), i.e. the max length of the whole component is 29 digits. The max length of\n+   * the fractional part is 9 digits. Trailing zeros in the fractional part are not considered and\n+   * will be lost, as Cloud Spanner does not preserve the precision of a numeric value.\n+   *\n+   * <p>If you set a numeric value of a record to for example 0.10, Cloud Spanner will return this\n+   * value as 0.1 in subsequent queries. Use {@link BigDecimal#stripTrailingZeros()} to compare\n+   * inserted values with retrieved values if your application might insert numeric values with\n+   * trailing zeros.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQxNjQzOA=="}, "originalCommit": {"oid": "abb579c4e86cb3053096b2cef4310c70cf21faec"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3330, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}