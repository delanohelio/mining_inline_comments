{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzM0Mjc0", "number": 54, "title": "feat: instrument Spanner client with OpenCensus metrics", "bodyText": "Updates #53\nFirst set of Session Pool related metrics:\n\ncloud.google.com/java/spanner/max_allowed_sessions\nThe maximum number of sessions allowed. Configurable by the user. This metric is labeled by database name, instance id and library version.\ncloud.google.com/java/spanner/in_use_sessions\nThe number of sessions currently in use (or checked out from the pool at this very moment). This metric is labeled by database name, instance id and library version.\ncloud.google.com/java/spanner/max_in_use_session\nThe maximum number of sessions in use during the last maintenance window interval. A maintenance window is a set 10 minute interval. After a complete maintenance window has passed, the value is reset to zero (and then start increasing again). This metric is labeled by database name, instance id and library version.\n\nI will open follow-up PRs to address other metrics mentioned in the issue.", "createdAt": "2020-01-31T19:22:05Z", "url": "https://github.com/googleapis/java-spanner/pull/54", "merged": true, "mergeCommit": {"oid": "d9a00a81c454ae793f9687d0e2de2bcc58d96502"}, "closed": true, "closedAt": "2020-02-06T22:45:07Z", "author": {"login": "mayurkale22"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_2j4AgBqjI5OTg2NjY1MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBm4QpgFqTM1NDI4NDc4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa5409b39e87e50d05e2f11b2c06bd1564fd8cbb", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/aa5409b39e87e50d05e2f11b2c06bd1564fd8cbb", "committedDate": "2020-01-31T19:14:47Z", "message": "minor patch"}, "afterCommit": {"oid": "e04d07360c9d60ba4fd66947914f3505b3982c5a", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/e04d07360c9d60ba4fd66947914f3505b3982c5a", "committedDate": "2020-01-31T22:05:52Z", "message": "minor patch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e04d07360c9d60ba4fd66947914f3505b3982c5a", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/e04d07360c9d60ba4fd66947914f3505b3982c5a", "committedDate": "2020-01-31T22:05:52Z", "message": "minor patch"}, "afterCommit": {"oid": "0f1ba031337fb82f80c6bc3ad670efee02b930dc", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/0f1ba031337fb82f80c6bc3ad670efee02b930dc", "committedDate": "2020-01-31T22:06:38Z", "message": "minor patch\n\nminor patch\n\nminor patch\n\nminor patch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f1ba031337fb82f80c6bc3ad670efee02b930dc", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/0f1ba031337fb82f80c6bc3ad670efee02b930dc", "committedDate": "2020-01-31T22:06:38Z", "message": "minor patch\n\nminor patch\n\nminor patch\n\nminor patch"}, "afterCommit": {"oid": "93cbef07872e43e17756e9c37d7b135043812afd", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/93cbef07872e43e17756e9c37d7b135043812afd", "committedDate": "2020-01-31T22:08:11Z", "message": "Add session metrics\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93cbef07872e43e17756e9c37d7b135043812afd", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/93cbef07872e43e17756e9c37d7b135043812afd", "committedDate": "2020-01-31T22:08:11Z", "message": "Add session metrics\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch\n\nminor patch"}, "afterCommit": {"oid": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/18897d8b2dfc8b96dbeb762dcae2fe80af71744e", "committedDate": "2020-01-31T22:09:23Z", "message": "feat: add session metrics\nAdd active_sessions (The number of active sessions in use) and max_sessions (The number of max sessions configured the user) metrics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODQyNTk4", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-351842598", "createdAt": "2020-02-01T00:09:50Z", "commit": {"oid": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMDowOTo1MFrOFkbFgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMDowOTo1MFrOFkbFgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNjgzMw==", "bodyText": "I am not 100% sure on numSessionsInUse, may be we should use maxSessionsInUse to indicate active sessions in use. Please confirm.", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r373736833", "createdAt": "2020-02-01T00:09:50Z", "author": {"login": "mayurkale22"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1763,4 +1807,52 @@ public void onSessionCreateFailure(Throwable t, int createFailureForSessionCount\n       }\n     }\n   }\n+\n+  /**\n+   * Initializes and Creates Spanner session relevant metrics. When coupled with an exporter, it\n+   * allows users to monitor client behavior.\n+   */\n+  private void initMetricsCollection(MetricRegistry metricRegistry, List<LabelValue> labelValues) {\n+    DerivedLongGauge activeSessionsGauge =\n+        metricRegistry.addDerivedLongGauge(\n+            ACTIVE_SESSIONS,\n+            MetricOptions.builder()\n+                .setDescription(ACTIVE_SESSIONS_DESCRIPTION)\n+                .setUnit(COUNT)\n+                .setLabelKeys(SPANNER_LABEL_KEYS)\n+                .build());\n+\n+    DerivedLongGauge maxSessionsGauge =\n+        metricRegistry.addDerivedLongGauge(\n+            MAX_SESSIONS,\n+            MetricOptions.builder()\n+                .setDescription(MAX_SESSIONS_DESCRIPTION)\n+                .setUnit(COUNT)\n+                .setLabelKeys(SPANNER_LABEL_KEYS)\n+                .build());\n+\n+    // The value of a numSessionsInUse is observed from a callback function. This function is\n+    // invoked whenever metrics are collected.\n+    activeSessionsGauge.createTimeSeries(\n+        labelValues,\n+        this,\n+        new ToLongFunction<SessionPool>() {\n+          @Override\n+          public long applyAsLong(SessionPool sessionPool) {\n+            return sessionPool.numSessionsInUse;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e"}, "originalPosition": 140}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjg3NzA2", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-352687706", "createdAt": "2020-02-04T02:17:00Z", "commit": {"oid": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMjoxNzowMVrOFlGNQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMjoyMDoxOFrOFlGQBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0MzMyOQ==", "bodyText": "Agree, maxSessionInUse will be more useful. It resets every 10 minutes while the reporting interval is 1 minute. Even if it was reset every 1 minute it would not be aligned. So it needs to reset on read.", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374443329", "createdAt": "2020-02-04T02:17:01Z", "author": {"login": "rghetia"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1763,4 +1807,52 @@ public void onSessionCreateFailure(Throwable t, int createFailureForSessionCount\n       }\n     }\n   }\n+\n+  /**\n+   * Initializes and Creates Spanner session relevant metrics. When coupled with an exporter, it\n+   * allows users to monitor client behavior.\n+   */\n+  private void initMetricsCollection(MetricRegistry metricRegistry, List<LabelValue> labelValues) {\n+    DerivedLongGauge activeSessionsGauge =\n+        metricRegistry.addDerivedLongGauge(\n+            ACTIVE_SESSIONS,\n+            MetricOptions.builder()\n+                .setDescription(ACTIVE_SESSIONS_DESCRIPTION)\n+                .setUnit(COUNT)\n+                .setLabelKeys(SPANNER_LABEL_KEYS)\n+                .build());\n+\n+    DerivedLongGauge maxSessionsGauge =\n+        metricRegistry.addDerivedLongGauge(\n+            MAX_SESSIONS,\n+            MetricOptions.builder()\n+                .setDescription(MAX_SESSIONS_DESCRIPTION)\n+                .setUnit(COUNT)\n+                .setLabelKeys(SPANNER_LABEL_KEYS)\n+                .build());\n+\n+    // The value of a numSessionsInUse is observed from a callback function. This function is\n+    // invoked whenever metrics are collected.\n+    activeSessionsGauge.createTimeSeries(\n+        labelValues,\n+        this,\n+        new ToLongFunction<SessionPool>() {\n+          @Override\n+          public long applyAsLong(SessionPool sessionPool) {\n+            return sessionPool.numSessionsInUse;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzczNjgzMw=="}, "originalCommit": {"oid": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0NDAzOQ==", "bodyText": "may be \"The number of max session configured\"", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374444039", "createdAt": "2020-02-04T02:20:18Z", "author": {"login": "rghetia"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/v1/stub/metrics/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner.v1.stub.metrics;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+public class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  public static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  public static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  public static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  public static final String ACTIVE_SESSIONS = \"cloud.google.com/java/spanner/active_sessions\";\n+  public static final String MAX_SESSIONS = \"cloud.google.com/java/spanner/max_sessions\";\n+  public static final String ACTIVE_SESSIONS_DESCRIPTION = \"The number of active sessions\";\n+  public static final String MAX_SESSIONS_DESCRIPTION = \"The number of max sessions\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18897d8b2dfc8b96dbeb762dcae2fe80af71744e"}, "originalPosition": 48}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67fdf76c5819f8247138998f8f2afe4ae05d6010", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/67fdf76c5819f8247138998f8f2afe4ae05d6010", "committedDate": "2020-02-04T03:58:18Z", "message": "fix: code reviews"}, "afterCommit": {"oid": "129ceb1509c019afd66a6666cc4c48a26c7af9e6", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/129ceb1509c019afd66a6666cc4c48a26c7af9e6", "committedDate": "2020-02-04T04:03:49Z", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse.\n\nfix: code reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "129ceb1509c019afd66a6666cc4c48a26c7af9e6", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/129ceb1509c019afd66a6666cc4c48a26c7af9e6", "committedDate": "2020-02-04T04:03:49Z", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse.\n\nfix: code reviews"}, "afterCommit": {"oid": "01c202d50ff125c901988e862f4de5587dbc08cd", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/01c202d50ff125c901988e862f4de5587dbc08cd", "committedDate": "2020-02-04T04:12:54Z", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse.\n\nfix: code reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01c202d50ff125c901988e862f4de5587dbc08cd", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/01c202d50ff125c901988e862f4de5587dbc08cd", "committedDate": "2020-02-04T04:12:54Z", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse.\n\nfix: code reviews"}, "afterCommit": {"oid": "88a54262eb662d6be1d7ad734959fcbebcd3445f", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/88a54262eb662d6be1d7ad734959fcbebcd3445f", "committedDate": "2020-02-04T04:14:25Z", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88a54262eb662d6be1d7ad734959fcbebcd3445f", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/88a54262eb662d6be1d7ad734959fcbebcd3445f", "committedDate": "2020-02-04T04:14:25Z", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse."}, "afterCommit": {"oid": "e0aebb612347aad1e5a5cd38dd3a76027ac5f505", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/e0aebb612347aad1e5a5cd38dd3a76027ac5f505", "committedDate": "2020-02-04T04:17:53Z", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse and update the description."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0aebb612347aad1e5a5cd38dd3a76027ac5f505", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/e0aebb612347aad1e5a5cd38dd3a76027ac5f505", "committedDate": "2020-02-04T04:17:53Z", "message": "fix: code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse and update the description."}, "afterCommit": {"oid": "8375592baefa5bcd8fa1370ae265a3b0f31da903", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/8375592baefa5bcd8fa1370ae265a3b0f31da903", "committedDate": "2020-02-04T04:20:55Z", "message": "Fix code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse and update the description."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyODYzNTY4", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-352863568", "createdAt": "2020-02-04T10:20:42Z", "commit": {"oid": "8375592baefa5bcd8fa1370ae265a3b0f31da903"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTYzMTEy", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-353163112", "createdAt": "2020-02-04T17:27:28Z", "commit": {"oid": "8375592baefa5bcd8fa1370ae265a3b0f31da903"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzoyNzoyOFrOFlc2EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzoyNzoyOFrOFlc2EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxNDIyNQ==", "bodyText": "I think the description of this metric should be different, considering it is reading maxSessionsInUse. This value will only increase during a 10 minute interval, and then be reset to zero (and then start increasing again). Suggestion, something like:\n'Max number of sessions in use during the last 10 minutes'.\nI noticed the other discussion about whether to measure numSessionsInUse or maxSessionsInUse. I think both could be valuable for the user, and numSessionsInUse should have a description like 'The number of sessions currently in use'.", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374814225", "createdAt": "2020-02-04T17:27:28Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/v1/stub/metrics/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner.v1.stub.metrics;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+public class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  public static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  public static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  public static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  public static final String ACTIVE_SESSIONS = \"cloud.google.com/java/spanner/active_sessions\";\n+  public static final String MAX_SESSIONS = \"cloud.google.com/java/spanner/max_sessions\";\n+  public static final String ACTIVE_SESSIONS_DESCRIPTION = \"The number of active sessions\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8375592baefa5bcd8fa1370ae265a3b0f31da903"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjI1MjI4", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-353225228", "createdAt": "2020-02-04T19:03:25Z", "commit": {"oid": "4754cf586851d1aeb63ed15fe996f13a48f20cf3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTowMzoyNVrOFlf2dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTowMzo0MFrOFlf22w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2MzQ3OQ==", "bodyText": "Sorry, I didn't notice this before now: Is there a specific reason that this file is placed in this package? The com.google.cloud.spanner.v1 package and sub-packages only contain generated source files and shouldn't contain any other files. (I'm not 100% sure, but there is a good chance that re-generating the gapic client will also automatically delete all files in the package, which would mean that this file would also be deleted.)", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374863479", "createdAt": "2020-02-04T19:03:25Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/v1/stub/metrics/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner.v1.stub.metrics;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4754cf586851d1aeb63ed15fe996f13a48f20cf3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg2MzU3OQ==", "bodyText": "Same as above regarding the package.", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r374863579", "createdAt": "2020-02-04T19:03:40Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/v1/MetricRegistryTestUtils.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner.v1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4754cf586851d1aeb63ed15fe996f13a48f20cf3"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjczNzYx", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-353273761", "createdAt": "2020-02-04T20:20:28Z", "commit": {"oid": "8548f8a3cff8fba7778805bdc6161454bbfdc305"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDIzNjUz", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-354023653", "createdAt": "2020-02-05T20:37:54Z", "commit": {"oid": "8548f8a3cff8fba7778805bdc6161454bbfdc305"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDozNzo1NVrOFmGYOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMDozNzo1NVrOFmGYOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ5NDcxMg==", "bodyText": "names are confusing. I would suggest\n\n\n\nold\nnew\nDescription\n\n\n\n\nactive_sessions\nmax_in_use_session\nThe max number of sessions concurrently in use during the current 10 minutes interval\n\n\nmax sessions\nmax_allowed_sessions\nThe Maximum number of sessions allowed. Configurable by the user.\n\n\nsessions_in_use\nin_use_sessions\nThe number of sessions currently in use\n\n\n\nAlternatively, in_use can be replaced with 'active' in name and description.\nchecked out has different meaning than active/in_use. If that is appropriate, then it should be used in the name and the description.", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375494712", "createdAt": "2020-02-05T20:37:55Z", "author": {"login": "rghetia"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+public class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  public static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  public static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  public static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  public static final String ACTIVE_SESSIONS = \"cloud.google.com/java/spanner/active_sessions\";\n+  public static final String MAX_SESSIONS = \"cloud.google.com/java/spanner/max_sessions\";\n+  public static final String SESSIONS_IN_USE = \"cloud.google.com/java/spanner/sessions_in_use\";\n+  public static final String ACTIVE_SESSIONS_DESCRIPTION =\n+      \"Max number of sessions in use during the last 10 minutes\";\n+  public static final String MAX_SESSIONS_DESCRIPTION = \"The number of max sessions configured\";\n+  public static final String SESSIONS_IN_USE_DESCRIPTION =\n+      \"The number of sessions checked out from the pool\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8548f8a3cff8fba7778805bdc6161454bbfdc305"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDc2NTMy", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-354076532", "createdAt": "2020-02-05T22:09:55Z", "commit": {"oid": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MjAwODcz", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-354200873", "createdAt": "2020-02-06T04:58:19Z", "commit": {"oid": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNDo1ODoxOVrOFmPSwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNTowODozM1rOFmPZ-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDc2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"The Maximum number of sessions allowed. Configurable by the user.\";\n          \n          \n            \n                  \"The maximum number of sessions allowed. Configurable by the user.\";", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375640768", "createdAt": "2020-02-06T04:58:19Z", "author": {"login": "skuruppu"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n+  static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n+  static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String MAX_IN_USE_SESSIONS_DESCRIPTION =\n+      \"The max number of sessions in use during the last 10 minutes interval\";\n+  static final String MAX_ALLOWED_SESSIONS_DESCRIPTION =\n+      \"The Maximum number of sessions allowed. Configurable by the user.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDc4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"The max number of sessions in use during the last 10 minutes interval\";\n          \n          \n            \n                  \"The maximum number of sessions in use during the last 10 minute interval.\";", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375640788", "createdAt": "2020-02-06T04:58:27Z", "author": {"login": "skuruppu"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n+  static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n+  static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String MAX_IN_USE_SESSIONS_DESCRIPTION =\n+      \"The max number of sessions in use during the last 10 minutes interval\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MDk1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static final String IN_USE_SESSIONS_DESCRIPTION = \"The number of sessions currently in use\";\n          \n          \n            \n              static final String IN_USE_SESSIONS_DESCRIPTION = \"The number of sessions currently in use.\";", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375640951", "createdAt": "2020-02-06T04:59:10Z", "author": {"login": "skuruppu"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.google.cloud.spanner;\n+\n+import com.google.common.collect.ImmutableList;\n+import io.opencensus.metrics.LabelKey;\n+import io.opencensus.metrics.LabelValue;\n+\n+/** A helper class that holds OpenCensus's related constants. */\n+class MetricRegistryConstants {\n+\n+  // The label keys are used to uniquely identify timeseries.\n+  private static final LabelKey DATABASE = LabelKey.create(\"database\", \"Target database\");\n+  private static final LabelKey INSTANCE_ID =\n+      LabelKey.create(\"instance_id\", \"Name of the instance\");\n+  private static final LabelKey LIBRARY_VERSION =\n+      LabelKey.create(\"library_version\", \"Library version\");\n+\n+  /** The label value is used to represent missing value. */\n+  private static final LabelValue UNSET_LABEL = LabelValue.create(null);\n+\n+  static final ImmutableList<LabelKey> SPANNER_LABEL_KEYS =\n+      ImmutableList.of(DATABASE, INSTANCE_ID, LIBRARY_VERSION);\n+\n+  static final ImmutableList<LabelValue> SPANNER_DEFAULT_LABEL_VALUES =\n+      ImmutableList.of(UNSET_LABEL, UNSET_LABEL, UNSET_LABEL);\n+\n+  /** Unit to represent counts. */\n+  static final String COUNT = \"1\";\n+\n+  // The Metric name and description\n+  static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n+  static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n+  static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String MAX_IN_USE_SESSIONS_DESCRIPTION =\n+      \"The max number of sessions in use during the last 10 minutes interval\";\n+  static final String MAX_ALLOWED_SESSIONS_DESCRIPTION =\n+      \"The Maximum number of sessions allowed. Configurable by the user.\";\n+  static final String IN_USE_SESSIONS_DESCRIPTION = \"The number of sessions currently in use\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MTI2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Initializes and Creates Spanner session relevant metrics. When coupled with an exporter, it\n          \n          \n            \n               * Initializes and creates Spanner session relevant metrics. When coupled with an exporter, it", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375641269", "createdAt": "2020-02-06T05:00:55Z", "author": {"login": "skuruppu"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1763,4 +1809,73 @@ public void onSessionCreateFailure(Throwable t, int createFailureForSessionCount\n       }\n     }\n   }\n+\n+  /**\n+   * Initializes and Creates Spanner session relevant metrics. When coupled with an exporter, it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY0MjYxNw==", "bodyText": "I'm not sure what's normal for OpenCensus metrics tests but I was wondering if it makes sense to do something with a session so that the above two metrics have non-zero values.", "url": "https://github.com/googleapis/java-spanner/pull/54#discussion_r375642617", "createdAt": "2020-02-06T05:08:33Z", "author": {"login": "skuruppu"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/SessionPoolTest.java", "diffHunk": "@@ -1545,6 +1561,35 @@ public void run() {\n     assertThat(impl.executePartitionedUpdate(statement)).isEqualTo(1L);\n   }\n \n+  @Test\n+  public void testSessionMetrics() {\n+    options =\n+        SessionPoolOptions.newBuilder()\n+            .setMinSessions(1)\n+            .setMaxSessions(3)\n+            .setMaxIdleSessions(0)\n+            .build();\n+    FakeClock clock = new FakeClock();\n+    clock.currentTimeMillis = System.currentTimeMillis();\n+    FakeMetricRegistry metricRegistry = new FakeMetricRegistry();\n+    List<LabelValue> labelValues =\n+        Arrays.asList(\n+            LabelValue.create(\"database1\"),\n+            LabelValue.create(\"instance1\"),\n+            LabelValue.create(\"1.0.0\"));\n+\n+    pool = createPool(clock, metricRegistry, labelValues);\n+    runMaintainanceLoop(clock, pool, pool.poolMaintainer.numClosureCycles);\n+\n+    MetricsRecord record = metricRegistry.pollRecord();\n+    assertThat(record.metrics).containsEntry(MetricRegistryConstants.MAX_IN_USE_SESSIONS, 0L);\n+    assertThat(record.metrics).containsEntry(MetricRegistryConstants.IN_USE_SESSIONS, 0L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bf757ebdb78fb4c72e5278cbc7fb92cb7f85644", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/5bf757ebdb78fb4c72e5278cbc7fb92cb7f85644", "committedDate": "2020-02-06T05:09:18Z", "message": "feat: add session metrics\nAdd active_sessions (The number of active sessions in use) and max_sessions (The number of max sessions configured the user) metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bc6fc7ee2656340b4cad4bb99dfef34bceb96be", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/8bc6fc7ee2656340b4cad4bb99dfef34bceb96be", "committedDate": "2020-02-06T05:09:18Z", "message": "Fix code reviews\n\nUse maxSessionsInUse instead of numSessionsInUse and update the description."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3c56b50ce5d131d7a74305dcd7e1df493a24e18", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/b3c56b50ce5d131d7a74305dcd7e1df493a24e18", "committedDate": "2020-02-06T05:09:18Z", "message": "Change active sessions description"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "893b446e822464fa94f446d920416e127d3c5a84", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/893b446e822464fa94f446d920416e127d3c5a84", "committedDate": "2020-02-06T05:09:18Z", "message": "add numSessionsInUse metric"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2ebcdf742cb5d99e150e58039e6b147815bae99", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/f2ebcdf742cb5d99e150e58039e6b147815bae99", "committedDate": "2020-02-06T05:09:18Z", "message": "Fix package structure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce5aa60d43e28ca05109122c7565ca0a380b86a", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/6ce5aa60d43e28ca05109122c7565ca0a380b86a", "committedDate": "2020-02-06T05:09:19Z", "message": "rename metric name and description"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6938bc2f8507df551ef3ffea0e7651ca1330f2d", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/e6938bc2f8507df551ef3ffea0e7651ca1330f2d", "committedDate": "2020-02-05T22:05:18Z", "message": "rename metric name and description"}, "afterCommit": {"oid": "6ce5aa60d43e28ca05109122c7565ca0a380b86a", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/6ce5aa60d43e28ca05109122c7565ca0a380b86a", "committedDate": "2020-02-06T05:09:19Z", "message": "rename metric name and description"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67c9690550a68ffe2b704b253710237d08b309ea", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/67c9690550a68ffe2b704b253710237d08b309ea", "committedDate": "2020-02-06T05:19:51Z", "message": "fix nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1525a7d9a1eff5b6d2c7a5573c0c597c7a201c2b", "author": {"user": {"login": "mayurkale22", "name": "Mayur Kale"}}, "url": "https://github.com/googleapis/java-spanner/commit/1525a7d9a1eff5b6d2c7a5573c0c597c7a201c2b", "committedDate": "2020-02-06T07:19:04Z", "message": "createMockSession for metrics validations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0Mjg0Nzg3", "url": "https://github.com/googleapis/java-spanner/pull/54#pullrequestreview-354284787", "createdAt": "2020-02-06T08:57:51Z", "commit": {"oid": "1525a7d9a1eff5b6d2c7a5573c0c597c7a201c2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 912, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}