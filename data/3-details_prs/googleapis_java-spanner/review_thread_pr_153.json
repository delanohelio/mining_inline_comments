{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNTU2MjYw", "number": 153, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDowNToyNlrODybm8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDowNToyNlrODybm8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjA3NzI4OnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/it/ITSpannerOptionsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDowNToyNlrOGGeEkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjoxMzowOFrOGGiThA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzNzMyOA==", "bodyText": "Why here shouldn't be isAtMost?\nSame for the following two isEqualTo.", "url": "https://github.com/googleapis/java-spanner/pull/153#discussion_r409437328", "createdAt": "2020-04-16T10:05:26Z", "author": {"login": "hengfengli"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/it/ITSpannerOptionsTest.java", "diffHunk": "@@ -106,29 +101,26 @@ public void testCloseAllThreadsWhenClosingSpanner() throws InterruptedException\n       }\n       // Check the number of threads after the query. Doing a request should initialize a thread\n       // pool for the underlying SpannerClient.\n-      assertThat(\n-          getNumberOfThreadsWithName(SPANNER_THREAD_NAME),\n-          is(equalTo(DEFAULT_NUM_CHANNELS * NUM_THREADS_PER_CHANNEL + baseThreadCount)));\n+      assertThat(getNumberOfThreadsWithName(SPANNER_THREAD_NAME))\n+          .isEqualTo(DEFAULT_NUM_CHANNELS * NUM_THREADS_PER_CHANNEL + baseThreadCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27a6a0f92c392524692d8240be17868733f4a90"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUwNjY5Mg==", "bodyText": "These threads should all be present as long as the Spanner instance is opened and being used. Closing it would normally bring the number of threads back to the baseThreadCount, but it can happen that additional threads are (temporarily) removed after closing it.", "url": "https://github.com/googleapis/java-spanner/pull/153#discussion_r409506692", "createdAt": "2020-04-16T12:13:08Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/it/ITSpannerOptionsTest.java", "diffHunk": "@@ -106,29 +101,26 @@ public void testCloseAllThreadsWhenClosingSpanner() throws InterruptedException\n       }\n       // Check the number of threads after the query. Doing a request should initialize a thread\n       // pool for the underlying SpannerClient.\n-      assertThat(\n-          getNumberOfThreadsWithName(SPANNER_THREAD_NAME),\n-          is(equalTo(DEFAULT_NUM_CHANNELS * NUM_THREADS_PER_CHANNEL + baseThreadCount)));\n+      assertThat(getNumberOfThreadsWithName(SPANNER_THREAD_NAME))\n+          .isEqualTo(DEFAULT_NUM_CHANNELS * NUM_THREADS_PER_CHANNEL + baseThreadCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzNzMyOA=="}, "originalCommit": {"oid": "b27a6a0f92c392524692d8240be17868733f4a90"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3237, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}