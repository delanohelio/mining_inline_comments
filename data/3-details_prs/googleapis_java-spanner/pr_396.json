{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyODM3OTI3", "number": 396, "title": "feat: Add experimental DirectPath support", "bodyText": "Previously DirectPath was enabled by an environment variable. Now since gax-java v1.57.0 DirectPath can be enabled by using InstantiatingGrpcChannelProvider.Builder.setAttemptDirectPath(true).\nSome changes are temporary and will be removed once DirectPath goes public using the default spanner endpoint. For now we want to be able to test the DirectPath-enabled endpoint with different client scenarios:\n\nClient is running on a ipv4-only VM\nClient is running on a ipv6-enabled VM\nClient fallbacks to use normal CFE path\n\nFor the purpose of our internal E2E tests, I added a test profile called spanner-directpath-it which introduces two new sys props:\n\nspanner.attempt_directpath: this defines whether the test client would call setAttemptDirectPath(true) and set the spanner endpoint to use the DirectPath-enabled target aa423245250f2bbf.sandbox.googleapis.com:443.\nspanner.directpath_test_scenario: this defines which of the three scenarios mentioned above to test.\n\nAnd for different scenarios we would have different assertions for the test:\n\nFor ipv4-only VM, we introspect the peer IP addresses and expect they have DP_IPV4_PREFIX.\nFor ipv6-enabled VM, we introspect the peer IP addresses and expect they have either DP_IPV4_PREFIX or DP_IPV6_PREFIX.\nFor fallback cases, we should allow both DirectPath addresses and CFE addresses.\n\n+cc @chingor13 , @vnorigoog", "createdAt": "2020-08-24T23:28:46Z", "url": "https://github.com/googleapis/java-spanner/pull/396", "merged": true, "mergeCommit": {"oid": "46264d11529accde7b520638264732937b2feb03"}, "closed": true, "closedAt": "2020-09-09T23:22:11Z", "author": {"login": "WeiranFang"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAz32mAH2gAyNDcyODM3OTI3OmI2YjE0MjhmODQ4ZDI2MzIzNTI5ZGY3ODdhNDJkNDM4YjZlNmQ0ZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEwapigFqTQ4MDE5MzEzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b6b1428f848d26323529df787a42d438b6e6d4fc", "author": {"user": {"login": "WeiranFang", "name": "Weiran Fang"}}, "url": "https://github.com/googleapis/java-spanner/commit/b6b1428f848d26323529df787a42d438b6e6d4fc", "committedDate": "2020-08-20T17:43:24Z", "message": "feat: Add experimental DirectPath support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczOTk2OTIx", "url": "https://github.com/googleapis/java-spanner/pull/396#pullrequestreview-473996921", "createdAt": "2020-08-24T23:35:53Z", "commit": {"oid": "b6b1428f848d26323529df787a42d438b6e6d4fc"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzozNTo1NFrOHF6ftg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMzo0MjoxMVrOHF6xeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2MzMxOA==", "bodyText": "I only see this being set to false. Do we need this configuration?", "url": "https://github.com/googleapis/java-spanner/pull/396#discussion_r475963318", "createdAt": "2020-08-24T23:35:54Z", "author": {"login": "chingor13"}, "path": "google-cloud-spanner/pom.xml", "diffHunk": "@@ -49,6 +51,7 @@\n             <id>default-test</id>\n             <configuration>\n               <excludedGroups>com.google.cloud.spanner.TracerTest,com.google.cloud.spanner.IntegrationTest</excludedGroups>\n+              <skipTests>${skipUTs}</skipTests>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b1428f848d26323529df787a42d438b6e6d4fc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2NTUyMw==", "bodyText": "Should this be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                boolean attemptDirectPath = Boolean.getBoolean(ATTEMPT_DIRECT_PATH);\n          \n          \n            \n                boolean attemptDirectPath = Boolean.getBoolean(System.getProperty(ATTEMPT_DIRECT_PATH));", "url": "https://github.com/googleapis/java-spanner/pull/396#discussion_r475965523", "createdAt": "2020-08-24T23:39:00Z", "author": {"login": "chingor13"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/GceTestEnvConfig.java", "diffHunk": "@@ -51,6 +61,8 @@ public GceTestEnvConfig() {\n     double errorProbability =\n         Double.parseDouble(System.getProperty(GCE_STREAM_BROKEN_PROBABILITY, \"0.0\"));\n     checkState(errorProbability <= 1.0);\n+    boolean attemptDirectPath = Boolean.getBoolean(ATTEMPT_DIRECT_PATH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b1428f848d26323529df787a42d438b6e6d4fc"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk2Nzg2NA==", "bodyText": "Will this work outside of GCP? i.e. if you run the system tests with the direct path profile from your local machine?", "url": "https://github.com/googleapis/java-spanner/pull/396#discussion_r475967864", "createdAt": "2020-08-24T23:42:11Z", "author": {"login": "chingor13"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/GceTestEnvConfig.java", "diffHunk": "@@ -41,6 +45,12 @@\n   public static final String GCE_CREDENTIALS_FILE = \"spanner.gce.config.credentials_file\";\n   public static final String GCE_STREAM_BROKEN_PROBABILITY =\n       \"spanner.gce.config.stream_broken_probability\";\n+  public static final String ATTEMPT_DIRECT_PATH = \"spanner.attempt_directpath\";\n+  public static final String DIRECT_PATH_TEST_SCENARIO = \"spanner.directpath_test_scenario\";\n+\n+  // IP address prefixes allocated for DirectPath backends.\n+  public static final String DP_IPV6_PREFIX = \"2001:4860:8040\";\n+  public static final String DP_IPV4_PREFIX = \"34.126\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b1428f848d26323529df787a42d438b6e6d4fc"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2MTc5ODAw", "url": "https://github.com/googleapis/java-spanner/pull/396#pullrequestreview-476179800", "createdAt": "2020-08-27T00:09:42Z", "commit": {"oid": "b6b1428f848d26323529df787a42d438b6e6d4fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDowOTo0MlrOHHmt3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwMDowOTo0MlrOHHmt3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzczNjQxMw==", "bodyText": "I think that currently we are mostly enabling features / configurations through environment variables (which should be standardised through all of our clients) or through the SpannerOptions class.\nI imagine we could add an option like useDirectPath() in the SpannerOptions.Builder class. I guess that even if we do not use an environment variable as well (and go with the property), it would be nice to concentrated the configuration directly in the SpannerOptions class.\nWdyt?", "url": "https://github.com/googleapis/java-spanner/pull/396#discussion_r477736413", "createdAt": "2020-08-27T00:09:42Z", "author": {"login": "thiagotnunes"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/spi/v1/GapicSpannerRpc.java", "diffHunk": "@@ -300,31 +303,38 @@ public GapicSpannerRpc(final SpannerOptions options) {\n                 .build());\n     // First check if SpannerOptions provides a TransportChannerProvider. Create one\n     // with information gathered from SpannerOptions if none is provided\n+    InstantiatingGrpcChannelProvider.Builder defaultChannelProviderBuilder =\n+        InstantiatingGrpcChannelProvider.newBuilder()\n+            .setChannelConfigurator(options.getChannelConfigurator())\n+            .setEndpoint(options.getEndpoint())\n+            .setMaxInboundMessageSize(MAX_MESSAGE_SIZE)\n+            .setMaxInboundMetadataSize(MAX_METADATA_SIZE)\n+            .setPoolSize(options.getNumChannels())\n+            .setExecutor(executorProvider.getExecutor())\n+\n+            // Set a keepalive time of 120 seconds to help long running\n+            // commit GRPC calls succeed\n+            .setKeepAliveTime(Duration.ofSeconds(GRPC_KEEPALIVE_SECONDS))\n+\n+            // Then check if SpannerOptions provides an InterceptorProvider. Create a default\n+            // SpannerInterceptorProvider if none is provided\n+            .setInterceptorProvider(\n+                SpannerInterceptorProvider.create(\n+                    MoreObjects.firstNonNull(\n+                        options.getInterceptorProvider(),\n+                        SpannerInterceptorProvider.createDefault()))\n+                    .withEncoding(compressorName))\n+            .setHeaderProvider(mergedHeaderProvider);\n+\n+    // TODO(weiranf): Set to true by default once DirectPath goes to public beta.\n+    if (shouldAttemptDirectPath()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6b1428f848d26323529df787a42d438b6e6d4fc"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01327bf623aeea764ac9c44656a72fe0aaf9d64c", "author": {"user": {"login": "WeiranFang", "name": "Weiran Fang"}}, "url": "https://github.com/googleapis/java-spanner/commit/01327bf623aeea764ac9c44656a72fe0aaf9d64c", "committedDate": "2020-08-28T04:10:47Z", "message": "fix lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MjM0NTEw", "url": "https://github.com/googleapis/java-spanner/pull/396#pullrequestreview-477234510", "createdAt": "2020-08-28T04:36:18Z", "commit": {"oid": "01327bf623aeea764ac9c44656a72fe0aaf9d64c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTkzMTMy", "url": "https://github.com/googleapis/java-spanner/pull/396#pullrequestreview-480193132", "createdAt": "2020-09-01T23:57:29Z", "commit": {"oid": "01327bf623aeea764ac9c44656a72fe0aaf9d64c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 824, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}