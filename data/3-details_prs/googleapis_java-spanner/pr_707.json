{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTI4NTUx", "number": 707, "title": "docs: add sample for timeout for one RPC", "bodyText": "Adds a sample for setting a timeout for a single RPC.\nFixes GoogleCloudPlatform/java-docs-samples#3805", "createdAt": "2020-12-10T13:15:12Z", "url": "https://github.com/googleapis/java-spanner/pull/707", "merged": true, "mergeCommit": {"oid": "056f54f3cc10d103151fccba569d46796a103591"}, "closed": true, "closedAt": "2021-01-06T00:08:42Z", "author": {"login": "olavloite"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkzJG-gH2gAyNTM1OTI4NTUxOjU2MmRmZTUwY2E1NDgzNGMwOThmM2QwMTFlZWIxYmVhYWEyZmJhYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtT_PdAFqTU2MjIyMzM3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "562dfe50ca54834c098f3d011eeb1beaaa2fbaaa", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/562dfe50ca54834c098f3d011eeb1beaaa2fbaaa", "committedDate": "2020-12-10T13:13:37Z", "message": "docs: add sample for timeout for one RPC\n\nAdds a sample for setting a timeout for a single RPC.\n\nFixes https://github.com/GoogleCloudPlatform/java-docs-samples/issues/3805"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "927fb4ab4ac567275d9d36b3be281e57764e97bc", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/927fb4ab4ac567275d9d36b3be281e57764e97bc", "committedDate": "2020-12-10T13:24:20Z", "message": "fix: fix import order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e54321269e594202e25d7b0910ed1f4f6be3bfc3", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/e54321269e594202e25d7b0910ed1f4f6be3bfc3", "committedDate": "2020-12-10T13:27:43Z", "message": "fix: format code with the correct formatter plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f794dd43665b618e51002204b651049ea5aa013b", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/f794dd43665b618e51002204b651049ea5aa013b", "committedDate": "2020-12-10T15:49:03Z", "message": "fix: delete test data after each test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTg0NDU0", "url": "https://github.com/googleapis/java-spanner/pull/707#pullrequestreview-549584454", "createdAt": "2020-12-10T20:41:29Z", "commit": {"oid": "f794dd43665b618e51002204b651049ea5aa013b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzA2NDEx", "url": "https://github.com/googleapis/java-spanner/pull/707#pullrequestreview-549706411", "createdAt": "2020-12-10T23:59:53Z", "commit": {"oid": "f794dd43665b618e51002204b651049ea5aa013b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo1OTo1M1rOIDi-3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo1OTo1M1rOIDi-3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4OTc5MA==", "bodyText": "How does this work in a multiprocessing environment when several processes are trying to test this at the same time?", "url": "https://github.com/googleapis/java-spanner/pull/707#discussion_r540589790", "createdAt": "2020-12-10T23:59:53Z", "author": {"login": "lesv"}, "path": "samples/snippets/src/main/java/com/example/spanner/StatementTimeoutExample.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Google Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.example.spanner;\n+\n+import com.google.api.gax.grpc.GrpcCallContext;\n+import com.google.api.gax.rpc.ApiCallContext;\n+import com.google.cloud.spanner.DatabaseClient;\n+import com.google.cloud.spanner.DatabaseId;\n+import com.google.cloud.spanner.Spanner;\n+import com.google.cloud.spanner.SpannerOptions;\n+import com.google.cloud.spanner.SpannerOptions.CallContextConfigurator;\n+import com.google.cloud.spanner.Statement;\n+import com.google.cloud.spanner.TransactionContext;\n+import com.google.cloud.spanner.TransactionRunner.TransactionCallable;\n+import com.google.spanner.v1.SpannerGrpc;\n+import io.grpc.CallOptions;\n+import io.grpc.Context;\n+import io.grpc.MethodDescriptor;\n+import java.util.concurrent.TimeUnit;\n+\n+class StatementTimeoutExample {\n+\n+  static void executeSqlWithTimeout() {\n+    // TODO(developer): Replace these variables before running the sample.\n+    String projectId = \"my-project\";\n+    String instanceId = \"my-instance\";\n+    String databaseId = \"my-database\";\n+\n+    try (Spanner spanner =\n+        SpannerOptions.newBuilder().setProjectId(projectId).build().getService()) {\n+      DatabaseClient client =\n+          spanner.getDatabaseClient(DatabaseId.of(projectId, instanceId, databaseId));\n+      executeSqlWithTimeout(client);\n+    }\n+  }\n+\n+  static void executeSqlWithTimeout(DatabaseClient client) {\n+    CallContextConfigurator configurator = new CallContextConfigurator() {\n+      public <ReqT, RespT> ApiCallContext configure(ApiCallContext context, ReqT request,\n+          MethodDescriptor<ReqT, RespT> method) {\n+        // DML uses the ExecuteSql RPC.\n+        if (method == SpannerGrpc.getExecuteSqlMethod()) {\n+          return GrpcCallContext.createDefault()\n+              .withCallOptions(CallOptions.DEFAULT.withDeadlineAfter(60L, TimeUnit.SECONDS));\n+        }\n+        // Return null to indicate that the default should be used for other methods.\n+        return null;\n+      }\n+    };\n+    // Create a context that uses the custom call configuration.\n+    Context context =\n+        Context.current().withValue(SpannerOptions.CALL_CONTEXT_CONFIGURATOR_KEY, configurator);\n+    // Run the transaction in the custom context.\n+    context.run(new Runnable() {\n+      public void run() {\n+        client.readWriteTransaction().run(new TransactionCallable<long[]>() {\n+          public long[] run(TransactionContext transaction) throws Exception {\n+            String sql = \"INSERT Singers (SingerId, FirstName, LastName)\\n\"\n+                + \"VALUES (20, 'George', 'Washington')\";\n+            long rowCount = transaction.executeUpdate(Statement.of(sql));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f794dd43665b618e51002204b651049ea5aa013b"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a03b05473c3b3500b7d744732717b17611415dc", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/2a03b05473c3b3500b7d744732717b17611415dc", "committedDate": "2020-12-11T06:57:38Z", "message": "fix: auto-throttle admin requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6a34d924dff94e2f238eec63b9e62366d3cb506", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/e6a34d924dff94e2f238eec63b9e62366d3cb506", "committedDate": "2020-12-14T10:47:51Z", "message": "Merge branch 'master' into add-sample-for-timeout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMTY0MDk2", "url": "https://github.com/googleapis/java-spanner/pull/707#pullrequestreview-553164096", "createdAt": "2020-12-16T00:22:35Z", "commit": {"oid": "e6a34d924dff94e2f238eec63b9e62366d3cb506"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjIzMzc5", "url": "https://github.com/googleapis/java-spanner/pull/707#pullrequestreview-562223379", "createdAt": "2021-01-06T00:01:06Z", "commit": {"oid": "e6a34d924dff94e2f238eec63b9e62366d3cb506"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 936, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}