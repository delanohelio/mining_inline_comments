{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjIzNTk5", "number": 347, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0MjoxNlrOEOCzwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0NTo1OVrOEOC2sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTYxNTM3OnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/ITSessionPoolIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0MjoxNlrOGw-p2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzoxNjo0NVrOGyqb5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMTM1NA==", "bodyText": "nit: move session2 declaration into the try with resources block", "url": "https://github.com/googleapis/java-spanner/pull/347#discussion_r454011354", "createdAt": "2020-07-13T23:42:16Z", "author": {"login": "thiagotnunes"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/ITSessionPoolIntegrationTest.java", "diffHunk": "@@ -97,28 +98,28 @@ public ScheduledExecutorService get() {\n \n   @Test\n   public void sessionCreation() {\n-    try (Session session = pool.getReadSession()) {\n-      assertThat(session).isNotNull();\n+    try (PooledSessionFuture session = pool.getReadSession()) {\n+      assertThat(session.get()).isNotNull();\n     }\n \n-    try (Session session = pool.getReadSession()) {\n-      assertThat(session).isNotNull();\n-      Session session2 = pool.getReadSession();\n-      assertThat(session2).isNotNull();\n+    try (PooledSessionFuture session = pool.getReadSession()) {\n+      assertThat(session.get()).isNotNull();\n+      PooledSessionFuture session2 = pool.getReadSession();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb42754058f93837a750c2a2059c75518cde8d41"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3NzI1NA==", "bodyText": "Done.", "url": "https://github.com/googleapis/java-spanner/pull/347#discussion_r455777254", "createdAt": "2020-07-16T13:16:45Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/ITSessionPoolIntegrationTest.java", "diffHunk": "@@ -97,28 +98,28 @@ public ScheduledExecutorService get() {\n \n   @Test\n   public void sessionCreation() {\n-    try (Session session = pool.getReadSession()) {\n-      assertThat(session).isNotNull();\n+    try (PooledSessionFuture session = pool.getReadSession()) {\n+      assertThat(session.get()).isNotNull();\n     }\n \n-    try (Session session = pool.getReadSession()) {\n-      assertThat(session).isNotNull();\n-      Session session2 = pool.getReadSession();\n-      assertThat(session2).isNotNull();\n+    try (PooledSessionFuture session = pool.getReadSession()) {\n+      assertThat(session.get()).isNotNull();\n+      PooledSessionFuture session2 = pool.getReadSession();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMTM1NA=="}, "originalCommit": {"oid": "fb42754058f93837a750c2a2059c75518cde8d41"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTYyMjkxOnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/ITSessionPoolIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo0NTo1OVrOGw-uYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMzoyMzowOVrOGzAEUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMjUxNA==", "bodyText": "WDYT about adding timeouts to the get calls for the futures (in order not to block indefinitely)?", "url": "https://github.com/googleapis/java-spanner/pull/347#discussion_r454012514", "createdAt": "2020-07-13T23:45:59Z", "author": {"login": "thiagotnunes"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/ITSessionPoolIntegrationTest.java", "diffHunk": "@@ -97,28 +98,28 @@ public ScheduledExecutorService get() {\n \n   @Test\n   public void sessionCreation() {\n-    try (Session session = pool.getReadSession()) {\n-      assertThat(session).isNotNull();\n+    try (PooledSessionFuture session = pool.getReadSession()) {\n+      assertThat(session.get()).isNotNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb42754058f93837a750c2a2059c75518cde8d41"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3NzE3OA==", "bodyText": "I would prefer not do that, as the client library also calls PooledSessionFuture.get() without a timeout, and I would prefer to keep these consistent with the behavior of the client library itself. Instead, the test case itself will eventually timeout if the calls should block indefinitely.", "url": "https://github.com/googleapis/java-spanner/pull/347#discussion_r455777178", "createdAt": "2020-07-16T13:16:40Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/ITSessionPoolIntegrationTest.java", "diffHunk": "@@ -97,28 +98,28 @@ public ScheduledExecutorService get() {\n \n   @Test\n   public void sessionCreation() {\n-    try (Session session = pool.getReadSession()) {\n-      assertThat(session).isNotNull();\n+    try (PooledSessionFuture session = pool.getReadSession()) {\n+      assertThat(session.get()).isNotNull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMjUxNA=="}, "originalCommit": {"oid": "fb42754058f93837a750c2a2059c75518cde8d41"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEzMTY2Nw==", "bodyText": "Cool, thanks for the explanation!", "url": "https://github.com/googleapis/java-spanner/pull/347#discussion_r456131667", "createdAt": "2020-07-16T23:23:09Z", "author": {"login": "thiagotnunes"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/ITSessionPoolIntegrationTest.java", "diffHunk": "@@ -97,28 +98,28 @@ public ScheduledExecutorService get() {\n \n   @Test\n   public void sessionCreation() {\n-    try (Session session = pool.getReadSession()) {\n-      assertThat(session).isNotNull();\n+    try (PooledSessionFuture session = pool.getReadSession()) {\n+      assertThat(session.get()).isNotNull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxMjUxNA=="}, "originalCommit": {"oid": "fb42754058f93837a750c2a2059c75518cde8d41"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3148, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}