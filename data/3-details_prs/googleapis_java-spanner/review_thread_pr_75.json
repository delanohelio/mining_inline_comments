{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MjIxNjE3", "number": 75, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNTozOTo1N1rODfyKyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzo0MTozN1rODf94Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjU0NDA5OnYy", "diffSide": "LEFT", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNTozOTo1N1rOFpsF8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNTozOTo1N1rOFpsF8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI1ODM1Mw==", "bodyText": "tracer.getCurrentSpan() is called outside of scope, which means endSpanWithFailure will execute on either READ_WRITE_TRANSACTION or READ_ONLY_TRANSACTION span instead of WAIT_FOR_SESSION span.", "url": "https://github.com/googleapis/java-spanner/pull/75#discussion_r379258353", "createdAt": "2020-02-14T05:39:57Z", "author": {"login": "mayurkale22"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -892,7 +892,7 @@ private PooledSession take() throws SpannerException {\n             return s.session;\n           }\n         } catch (Exception e) {\n-          TraceUtil.endSpanWithFailure(tracer.getCurrentSpan(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478251f868ba8c668326648b4a1f14e11b6e6881"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODQ2Mjc5OnYy", "diffSide": "RIGHT", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/TraceUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzo0MTozN1rOFp-etQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMzowNzoxMVrOFqGDCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1OTYwNQ==", "bodyText": "is endSpanWithFailure used anywhere now? If not then please remove it.", "url": "https://github.com/googleapis/java-spanner/pull/75#discussion_r379559605", "createdAt": "2020-02-14T17:41:37Z", "author": {"login": "rghetia"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/TraceUtil.java", "diffHunk": "@@ -54,6 +54,16 @@\n         \"Status\", AttributeValue.stringAttributeValue(e.getErrorCode().toString()));\n   }\n \n+  static void setWithFailure(Span span, Throwable e) {\n+    if (e instanceof SpannerException) {\n+      span.setStatus(\n+          StatusConverter.fromGrpcStatus(((SpannerException) e).getErrorCode().getGrpcStatus())\n+              .withDescription(e.getMessage()));\n+    } else {\n+      span.setStatus(Status.INTERNAL.withDescription(e.getMessage()));\n+    }\n+  }\n+\n   static void endSpanWithFailure(Span span, Throwable e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "478251f868ba8c668326648b4a1f14e11b6e6881"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY4MzU5Mw==", "bodyText": "This has been used in a few places (ex: singleUse) where span does not end except when there is a failure.\nSee: https://github.com/googleapis/google-cloud-java/pull/2677/files#r157323309 for original reason.", "url": "https://github.com/googleapis/java-spanner/pull/75#discussion_r379683593", "createdAt": "2020-02-14T23:07:11Z", "author": {"login": "mayurkale22"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/TraceUtil.java", "diffHunk": "@@ -54,6 +54,16 @@\n         \"Status\", AttributeValue.stringAttributeValue(e.getErrorCode().toString()));\n   }\n \n+  static void setWithFailure(Span span, Throwable e) {\n+    if (e instanceof SpannerException) {\n+      span.setStatus(\n+          StatusConverter.fromGrpcStatus(((SpannerException) e).getErrorCode().getGrpcStatus())\n+              .withDescription(e.getMessage()));\n+    } else {\n+      span.setStatus(Status.INTERNAL.withDescription(e.getMessage()));\n+    }\n+  }\n+\n   static void endSpanWithFailure(Span span, Throwable e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU1OTYwNQ=="}, "originalCommit": {"oid": "478251f868ba8c668326648b4a1f14e11b6e6881"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3205, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}