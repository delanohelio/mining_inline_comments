{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4ODYzNjcy", "number": 181, "title": "fix: stop preparing session on most errors", "bodyText": "Most errors that occur during preparing a session for a read/write transaction should be considered permanent, and should stop the automatic preparing of sessions. Any subsequent call to get a read/write session will cause an in-process BeginTransaction RPC to be executed. If the problem has been fixed in the meantime, the RPC will succeed and the automatic prepare of sessions will start again. Otherwise, the error is propagated to the user.\nFixes #177", "createdAt": "2020-04-25T07:12:18Z", "url": "https://github.com/googleapis/java-spanner/pull/181", "merged": true, "mergeCommit": {"oid": "d0e3d41131a7480baee787654b7b9591efae5069"}, "closed": true, "closedAt": "2020-04-28T06:26:27Z", "author": {"login": "olavloite"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbhJr2gH2gAyNDA4ODYzNjcyOjNjZmUxMDYyZGI3Y2ZkMDZjYzA4OTA1NTgxMzJmMWIwZjQwYzE2MjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbp54ZAFqTQwMDY3OTg3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3cfe1062db7cfd06cc0890558132f1b0f40c1620", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/3cfe1062db7cfd06cc0890558132f1b0f40c1620", "committedDate": "2020-04-26T20:59:29Z", "message": "fix: stop preparing session on most errors\n\nMost errors that occur during preparing a session for a read/write\ntransaction should be considered permanent, and should stop the\nautomatic preparing of sessions. Any subsequent call to get a read/write\nsession will cause an in-process BeginTransaction RPC to be executed. If\nthe problem has been fixed in the meantime, the RPC will succeed and the\nautomatic prepare of sessions will start again. Otherwise, the error is\npropagated to the user.\n\nFixes #177"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "388827a9e36f12fd2abb1fc5c27d059bedfc687e", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/388827a9e36f12fd2abb1fc5c27d059bedfc687e", "committedDate": "2020-04-25T07:11:03Z", "message": "fix: stop preparing session on most errors\n\nMost errors that occur during preparing a session for a read/write\ntransaction should be considered permanent, and should stop the\nautomatic preparing of sessions. Any subsequent call to get a read/write\nsession will cause an in-process BeginTransaction RPC to be executed. If\nthe problem has been fixed in the meantime, the RPC will succeed and the\nautomatic prepare of sessions will start again. Otherwise, the error is\npropagated to the user.\n\nFixes #177"}, "afterCommit": {"oid": "3cfe1062db7cfd06cc0890558132f1b0f40c1620", "author": {"user": {"login": "olavloite", "name": "Knut Olav L\u00f8ite"}}, "url": "https://github.com/googleapis/java-spanner/commit/3cfe1062db7cfd06cc0890558132f1b0f40c1620", "committedDate": "2020-04-26T20:59:29Z", "message": "fix: stop preparing session on most errors\n\nMost errors that occur during preparing a session for a read/write\ntransaction should be considered permanent, and should stop the\nautomatic preparing of sessions. Any subsequent call to get a read/write\nsession will cause an in-process BeginTransaction RPC to be executed. If\nthe problem has been fixed in the meantime, the RPC will succeed and the\nautomatic prepare of sessions will start again. Otherwise, the error is\npropagated to the user.\n\nFixes #177"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjA4MzY4", "url": "https://github.com/googleapis/java-spanner/pull/181#pullrequestreview-400608368", "createdAt": "2020-04-27T03:42:38Z", "commit": {"oid": "3cfe1062db7cfd06cc0890558132f1b0f40c1620"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMzo0MjozOFrOGMPazw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMzo0MjozOFrOGMPazw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ4ODcxOQ==", "bodyText": "In the previous logic, we executed this logic also for PERMISSION_DENIED errors. It doesn't anymore. Is this a problem?", "url": "https://github.com/googleapis/java-spanner/pull/181#discussion_r415488719", "createdAt": "2020-04-27T03:42:38Z", "author": {"login": "skuruppu"}, "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/SessionPool.java", "diffHunk": "@@ -1696,25 +1716,30 @@ private void handlePrepareSessionFailure(\n     synchronized (lock) {\n       if (isSessionNotFound(e)) {\n         invalidateSession(session);\n-      } else if (isDatabaseOrInstanceNotFound(e) || isPermissionDenied(e)) {\n-        // Database has been deleted or the user has no permission to write to this database. We\n-        // should stop trying to prepare any transactions. Also propagate the error to all waiters,\n-        // as any further waiting is pointless.\n+      } else if (shouldStopPrepareSessions(e)) {\n+        // Database has been deleted or the user has no permission to write to this database, or\n+        // there is some other semi-permanent error. We should stop trying to prepare any\n+        // transactions. Also propagate the error to all waiters if the database or instance has\n+        // been deleted, as any further waiting is pointless.\n+        stopAutomaticPrepare = true;\n         while (readWriteWaiters.size() > 0) {\n           readWriteWaiters.poll().put(e);\n         }\n         while (readWaiters.size() > 0) {\n           readWaiters.poll().put(e);\n         }\n-        // Remove the session from the pool.\n-        allSessions.remove(session);\n-        if (isClosed()) {\n-          decrementPendingClosures(1);\n+        if (isDatabaseOrInstanceNotFound(e)) {\n+          // Remove the session from the pool.\n+          if (isClosed()) {\n+            decrementPendingClosures(1);\n+          }\n+          allSessions.remove(session);\n+          this.resourceNotFoundException =\n+              MoreObjects.firstNonNull(\n+                  this.resourceNotFoundException, (ResourceNotFoundException) e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cfe1062db7cfd06cc0890558132f1b0f40c1620"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjA4OTg1", "url": "https://github.com/googleapis/java-spanner/pull/181#pullrequestreview-400608985", "createdAt": "2020-04-27T03:45:31Z", "commit": {"oid": "3cfe1062db7cfd06cc0890558132f1b0f40c1620"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjc5ODc1", "url": "https://github.com/googleapis/java-spanner/pull/181#pullrequestreview-400679875", "createdAt": "2020-04-27T07:11:22Z", "commit": {"oid": "3cfe1062db7cfd06cc0890558132f1b0f40c1620"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzoxMToyMlrOGMUFqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzoxMToyMlrOGMUFqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU2NTIyNw==", "bodyText": "This test case covers the PERMISSION_DENIED case discussed above.", "url": "https://github.com/googleapis/java-spanner/pull/181#discussion_r415565227", "createdAt": "2020-04-27T07:11:22Z", "author": {"login": "olavloite"}, "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/DatabaseClientImplTest.java", "diffHunk": "@@ -469,12 +469,25 @@ public void testDatabaseOrInstanceDoesNotExistOnReplenish() throws Exception {\n \n   @Test\n   public void testPermissionDeniedOnPrepareSession() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cfe1062db7cfd06cc0890558132f1b0f40c1620"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 827, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}