{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1ODU5MDc4", "number": 6305, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwODo1MzozOVrOFJt9cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwODo1MzozOVrOFJt9cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzM0NTE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwODo1MzozOVrOIMKSxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNTo0NjoyM1rOIMSO6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyMjQ2OA==", "bodyText": "should be the other way around, first new backup path, if not exist try old", "url": "https://github.com/ldtteam/minecolonies/pull/6305#discussion_r549622468", "createdAt": "2020-12-29T08:53:39Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -156,8 +157,16 @@ public void loadBackupForEvent(final int eventID)\n \n             if (entry.getValue() == eventID)\n             {\n-                final String backupPath = String.valueOf(colony.getID()) + colony.getDimension() + entry.getKey();\n-                final String fileName = new StructureName(\"cache\", \"backup\", Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER).toString() + backupPath;\n+                //TODO: remove compat for colony.getDimension()-based file names after sufficient time has passed from PR#6305\n+                final String oldBackupPath = String.valueOf(colony.getID()) + colony.getDimension() + entry.getKey();\n+                String fileName = new StructureName(\"cache\", \"backup\", Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER).toString() + oldBackupPath;\n+\n+                File blueprintFile = new File(fileName);\n+                if(!blueprintFile.exists())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d07f0f452602a204388c669c4177a84cd3393d00"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc1MjU1Mw==", "bodyText": "Ok.  Swapped to that approach, and also had it use the Structurize handlers for the check.", "url": "https://github.com/ldtteam/minecolonies/pull/6305#discussion_r549752553", "createdAt": "2020-12-29T15:46:23Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -156,8 +157,16 @@ public void loadBackupForEvent(final int eventID)\n \n             if (entry.getValue() == eventID)\n             {\n-                final String backupPath = String.valueOf(colony.getID()) + colony.getDimension() + entry.getKey();\n-                final String fileName = new StructureName(\"cache\", \"backup\", Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER).toString() + backupPath;\n+                //TODO: remove compat for colony.getDimension()-based file names after sufficient time has passed from PR#6305\n+                final String oldBackupPath = String.valueOf(colony.getID()) + colony.getDimension() + entry.getKey();\n+                String fileName = new StructureName(\"cache\", \"backup\", Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER).toString() + oldBackupPath;\n+\n+                File blueprintFile = new File(fileName);\n+                if(!blueprintFile.exists())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYyMjQ2OA=="}, "originalCommit": {"oid": "d07f0f452602a204388c669c4177a84cd3393d00"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3315, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}