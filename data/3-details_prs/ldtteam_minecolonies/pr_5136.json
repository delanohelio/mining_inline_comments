{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2Mjc1NzYz", "number": 5136, "title": "Fix leave stuck problem", "bodyText": "Closes #4880\nChanges proposed in this pull request:\n\nmines the leaves when worker is stuck\nmines leaves when they are in the way to a tree\n\nReview please", "createdAt": "2020-06-02T00:05:23Z", "url": "https://github.com/ldtteam/minecolonies/pull/5136", "merged": true, "mergeCommit": {"oid": "dc4e169e32980d5ba7e7d0cde471e03959158ea3"}, "closed": true, "closedAt": "2020-06-07T18:43:58Z", "author": {"login": "Tobiti"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnJTqWgH2gAyNDI2Mjc1NzYzOmM1ZWJjYmNjY2JiNWM5NTE0OGI4YmY1OGNiZjkwM2YzODY1ZDJlMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpAYW9gH2gAyNDI2Mjc1NzYzOmVlZmI2Y2Q3MDBkZjgxNGZiNGJhYmRjZmU4ZmVhZTJlY2Q4ODRiNzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5ebcbcccbb5c95148b8bf58cbf903f3865d2e09", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/c5ebcbcccbb5c95148b8bf58cbf903f3865d2e09", "committedDate": "2020-06-01T23:59:45Z", "message": "Fix leave stuck problem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDE3NTI5", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-422417529", "createdAt": "2020-06-02T07:39:18Z", "commit": {"oid": "c5ebcbcccbb5c95148b8bf58cbf903f3865d2e09"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzozOToxOFrOGdlsig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzozOToxOFrOGdlsig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY3OTQ5OA==", "bodyText": "I don't think all this dump inventory code here is necessary?", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r433679498", "createdAt": "2020-06-02T07:39:18Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -300,6 +311,65 @@ private IAIState findTrees()\n         return LUMBERJACK_CHOP_TREE;\n     }\n \n+    @NotNull\n+    @Override\n+    protected IAIState dumpInventory() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5ebcbcccbb5c95148b8bf58cbf903f3865d2e09"}, "originalPosition": 93}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bec282a454a867c6ac2285f9911d2424a4e448a", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/6bec282a454a867c6ac2285f9911d2424a4e448a", "committedDate": "2020-06-02T10:46:46Z", "message": "Merge branch 'version/1.15' into version/1.15"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a9a8f4254b4f85b5282b6081d3c6b3aec24c53b", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/0a9a8f4254b4f85b5282b6081d3c6b3aec24c53b", "committedDate": "2020-06-02T10:47:36Z", "message": "Only keep the necessary part for dumpInventory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa5e90f4870d630e5a8707ac2a4bd66f5cf46ea6", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/fa5e90f4870d630e5a8707ac2a4bd66f5cf46ea6", "committedDate": "2020-06-02T10:47:43Z", "message": "Merge remote-tracking branch 'origin/version/1.15' into version/1.15"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dbc90ad45746dc30a0a219f2ac7ad97cda135cd", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/6dbc90ad45746dc30a0a219f2ac7ad97cda135cd", "committedDate": "2020-06-02T11:04:00Z", "message": "Change to override walkToBlock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feaafc886f3a41303244eac4036859599653dfaa", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/feaafc886f3a41303244eac4036859599653dfaa", "committedDate": "2020-06-02T11:05:34Z", "message": "Remove ! to check right result"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNjUwNjE5", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-422650619", "createdAt": "2020-06-02T13:00:59Z", "commit": {"oid": "feaafc886f3a41303244eac4036859599653dfaa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzowMTowMFrOGdweJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMzowMzo0M1rOGdwkrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NjAzNw==", "bodyText": "I think all you needed to add for the unstuck to work better is here to add  BlockPos nextPosUpUp = new BlockPos(next.x, next.y + 2, next.z); as it gets stuck in cases where it needs space to change height.", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r433856037", "createdAt": "2020-06-02T13:01:00Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,31 +565,93 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n-            {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feaafc886f3a41303244eac4036859599653dfaa"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NjIwNg==", "bodyText": "see my comment above, this shouldnt be here at all", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r433856206", "createdAt": "2020-06-02T13:01:15Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -227,6 +235,17 @@ protected IAIState decide()\n         return GET_RECIPE;\n     }\n \n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feaafc886f3a41303244eac4036859599653dfaa"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NzEyNw==", "bodyText": "we are already using the pathing to see which leaves need to be removed, I don't think we need this general remove all around worker", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r433857127", "createdAt": "2020-06-02T13:02:43Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,31 +565,93 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n-            {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-\n-                if (world.getBlockState(nextPos).getBlock().isIn(BlockTags.LEAVES))\n-                {\n-                    mineBlock(nextPos);\n+            Path path = worker.getNavigator().getPath();\n+            if(path != null) {\n+                if (path.getCurrentPathLength() > path.getCurrentPathIndex()) {\n+                    return true;\n                 }\n-                else if (world.getBlockState(nextPosUp).getBlock().isIn(BlockTags.LEAVES))\n-                {\n-                    mineBlock(nextPosUp);\n+                if(path.getCurrentPathLength() == 0){\n+                    return true;\n                 }\n             }\n+            else {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Mines leaves on path and above.\n+     */\n+    private void tryUnstuck(){\n+\n+        if (!worker.getNavigator().noPath()) {\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null) {\n+                // Unstuck with path\n+                ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+                PathPoint next = path.getPathPointFromIndex(path.getCurrentPathIndex());\n+                // Blocks in front of the worker\n+                checkPositions.add(new BlockPos(next.x, next.y, next.z));\n+                checkPositions.add(new BlockPos(next.x, next.y + 1, next.z));\n+                // Block above the worker\n+                checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 2, worker.getCurrentPosition().getZ()));\n+\n+                mineIfEqualsBlockTag(checkPositions, BlockTags.LEAVES);\n+                return;\n+            }\n+        }\n+\n+        // General unstuck\n+        ArrayList<BlockPos> checkPositions = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feaafc886f3a41303244eac4036859599653dfaa"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg1NzcxMQ==", "bodyText": "This function isnt going to work nicely like this, because our mineBlock() is made to mine one position after another as it works through repeated calls and a delay inbetween", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r433857711", "createdAt": "2020-06-02T13:03:43Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,31 +565,93 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n-            {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-\n-                if (world.getBlockState(nextPos).getBlock().isIn(BlockTags.LEAVES))\n-                {\n-                    mineBlock(nextPos);\n+            Path path = worker.getNavigator().getPath();\n+            if(path != null) {\n+                if (path.getCurrentPathLength() > path.getCurrentPathIndex()) {\n+                    return true;\n                 }\n-                else if (world.getBlockState(nextPosUp).getBlock().isIn(BlockTags.LEAVES))\n-                {\n-                    mineBlock(nextPosUp);\n+                if(path.getCurrentPathLength() == 0){\n+                    return true;\n                 }\n             }\n+            else {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Mines leaves on path and above.\n+     */\n+    private void tryUnstuck(){\n+\n+        if (!worker.getNavigator().noPath()) {\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null) {\n+                // Unstuck with path\n+                ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+                PathPoint next = path.getPathPointFromIndex(path.getCurrentPathIndex());\n+                // Blocks in front of the worker\n+                checkPositions.add(new BlockPos(next.x, next.y, next.z));\n+                checkPositions.add(new BlockPos(next.x, next.y + 1, next.z));\n+                // Block above the worker\n+                checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 2, worker.getCurrentPosition().getZ()));\n+\n+                mineIfEqualsBlockTag(checkPositions, BlockTags.LEAVES);\n+                return;\n+            }\n+        }\n+\n+        // General unstuck\n+        ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+        // Blocks in front of the worker\n+        checkPositions.add(new BlockPos(worker.getForward().getX(), worker.getForward().getY(), worker.getForward().getZ()));\n+        checkPositions.add(new BlockPos(worker.getForward().getX(), worker.getForward().getY() + 1, worker.getForward().getZ()));\n+\n+        // blocks in north of the player\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY(), worker.getCurrentPosition().getZ()).north());\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 1, worker.getCurrentPosition().getZ()).north());\n+\n+        // blocks in east of the player\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY(), worker.getCurrentPosition().getZ()).east());\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 1, worker.getCurrentPosition().getZ()).east());\n+\n+        // blocks in south of the player\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY(), worker.getCurrentPosition().getZ()).south());\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 1, worker.getCurrentPosition().getZ()).south());\n+\n+        // blocks in west of the player\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY(), worker.getCurrentPosition().getZ()).west());\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 1, worker.getCurrentPosition().getZ()).west());\n+\n+        mineIfEqualsBlockTag(checkPositions, BlockTags.LEAVES);\n+    }\n+\n+    /**\n+     * Checks blocks for tag and mines the first it fines if its the same\n+     * @param blockPositions block positions\n+     * @param tag tag to check\n+     */\n+    private boolean mineIfEqualsBlockTag(List<BlockPos> blockPositions, Tag<Block> tag){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feaafc886f3a41303244eac4036859599653dfaa"}, "originalPosition": 202}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "520772cc02c7ace677f785937e278368562f3e4f", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/520772cc02c7ace677f785937e278368562f3e4f", "committedDate": "2020-06-02T14:21:07Z", "message": "Remove walkToBLock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6e58fb9bfb516cdd56f624e8fe77443605f20c6", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/c6e58fb9bfb516cdd56f624e8fe77443605f20c6", "committedDate": "2020-06-03T16:46:44Z", "message": "Merge branch 'version/1.15' into version/1.15"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ3ODEx", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425747811", "createdAt": "2020-06-06T15:23:01Z", "commit": {"oid": "c6e58fb9bfb516cdd56f624e8fe77443605f20c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyMzowMlrOGgEOzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyMzowMlrOGgEOzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3Njk0Mw==", "bodyText": "Do these still all have to be protected?", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r436276943", "createdAt": "2020-06-06T15:23:02Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIBasic.java", "diffHunk": "@@ -114,7 +114,7 @@\n     /**\n      * Slot he is currently trying to dump.\n      */\n-    private int slotAt = 0;\n+    protected int slotAt = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e58fb9bfb516cdd56f624e8fe77443605f20c6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ4OTQ2", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425748946", "createdAt": "2020-06-06T15:41:52Z", "commit": {"oid": "c6e58fb9bfb516cdd56f624e8fe77443605f20c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo0MTo1MlrOGgET5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo0MTo1MlrOGgET5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3ODI0Ng==", "bodyText": "brackets", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r436278246", "createdAt": "2020-06-06T15:41:52Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -413,7 +421,9 @@ private IAIState chopTree()\n         {\n             if (!walkToTree(job.getTree().getStumpLocations().get(0)))\n             {\n-                checkIfStuckOnLeaves();\n+                if(checkIfStuck()) {\n+                    tryUnstuck();\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e58fb9bfb516cdd56f624e8fe77443605f20c6"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ4OTcy", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425748972", "createdAt": "2020-06-06T15:42:15Z", "commit": {"oid": "c6e58fb9bfb516cdd56f624e8fe77443605f20c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo0MjoxNVrOGgEUAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo0MjoxNVrOGgEUAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3ODI3Mw==", "bodyText": "code format is off", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r436278273", "createdAt": "2020-06-06T15:42:15Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,31 +554,94 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n-            {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-\n-                if (world.getBlockState(nextPos).getBlock().isIn(BlockTags.LEAVES))\n-                {\n-                    mineBlock(nextPos);\n+            Path path = worker.getNavigator().getPath();\n+            if(path != null) {\n+                if (path.getCurrentPathLength() > path.getCurrentPathIndex()) {\n+                    return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6e58fb9bfb516cdd56f624e8fe77443605f20c6"}, "originalPosition": 116}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "860682eca37aeef4d9d15525e13bfccc6cfbffdd", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/860682eca37aeef4d9d15525e13bfccc6cfbffdd", "committedDate": "2020-06-06T16:11:31Z", "message": "Change protected back to private"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4830dd7c40e4f1b7a88f72d5df1d40d28d4f1efb", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/4830dd7c40e4f1b7a88f72d5df1d40d28d4f1efb", "committedDate": "2020-06-06T16:11:37Z", "message": "Merge remote-tracking branch 'origin/version/1.15' into version/1.15"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b2585a80ae272a21b37ea14320ccb7e16c077d4", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/7b2585a80ae272a21b37ea14320ccb7e16c077d4", "committedDate": "2020-06-06T16:15:13Z", "message": "Fix codestyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e0983e2c1639a4fd640d720a75eec762658050a", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/8e0983e2c1639a4fd640d720a75eec762658050a", "committedDate": "2020-06-06T16:26:32Z", "message": "Fix more format stuff"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzUyNjQ3", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425752647", "createdAt": "2020-06-06T16:39:21Z", "commit": {"oid": "8e0983e2c1639a4fd640d720a75eec762658050a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNjozOToyMVrOGgEjyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNjozOToyMVrOGgEjyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4MjMxNA==", "bodyText": "format", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r436282314", "createdAt": "2020-06-06T16:39:21Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,31 +555,102 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n             {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-\n-                if (world.getBlockState(nextPos).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() > path.getCurrentPathIndex())\n                 {\n-                    mineBlock(nextPos);\n+                    return true;\n                 }\n-                else if (world.getBlockState(nextPosUp).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() == 0)\n                 {\n-                    mineBlock(nextPosUp);\n+                    return true;\n                 }\n             }\n+            else\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Mines leaves on path and above.\n+     */\n+    private void tryUnstuck(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0983e2c1639a4fd640d720a75eec762658050a"}, "originalPosition": 137}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzUyNjgx", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425752681", "createdAt": "2020-06-06T16:39:55Z", "commit": {"oid": "8e0983e2c1639a4fd640d720a75eec762658050a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNjozOTo1NVrOGgEj-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNjozOTo1NVrOGgEj-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4MjM2Mw==", "bodyText": "This looks like you could make a\nfor each Direction in Horizontal directions\naddInDirection", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r436282363", "createdAt": "2020-06-06T16:39:55Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,31 +555,102 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n             {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-\n-                if (world.getBlockState(nextPos).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() > path.getCurrentPathIndex())\n                 {\n-                    mineBlock(nextPos);\n+                    return true;\n                 }\n-                else if (world.getBlockState(nextPosUp).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() == 0)\n                 {\n-                    mineBlock(nextPosUp);\n+                    return true;\n                 }\n             }\n+            else\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Mines leaves on path and above.\n+     */\n+    private void tryUnstuck(){\n+\n+        if (!worker.getNavigator().noPath())\n+        {\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n+            {\n+                // Unstuck with path\n+                ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+                PathPoint next = path.getPathPointFromIndex(path.getCurrentPathIndex());\n+\n+                // Blocks in front of the worker\n+                checkPositions.add(new BlockPos(next.x, next.y, next.z));\n+                checkPositions.add(new BlockPos(next.x, next.y + 1, next.z));\n+                checkPositions.add(new BlockPos(next.x, next.y + 2, next.z));\n+\n+                // Block above the worker\n+                checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 2, worker.getCurrentPosition().getZ()));\n+\n+                mineIfEqualsBlockTag(checkPositions, BlockTags.LEAVES);\n+                return;\n+            }\n+        }\n+\n+        // General unstuck\n+        ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+        // Blocks in front of the worker\n+        checkPositions.add(new BlockPos(worker.getForward().getX(), worker.getForward().getY(), worker.getForward().getZ()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0983e2c1639a4fd640d720a75eec762658050a"}, "originalPosition": 164}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzUyNjk1", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425752695", "createdAt": "2020-06-06T16:40:04Z", "commit": {"oid": "8e0983e2c1639a4fd640d720a75eec762658050a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNjo0MDowNVrOGgEkFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNjo0MDowNVrOGgEkFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4MjM5MQ==", "bodyText": "format this entire method too", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r436282391", "createdAt": "2020-06-06T16:40:05Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,31 +555,102 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n             {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-\n-                if (world.getBlockState(nextPos).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() > path.getCurrentPathIndex())\n                 {\n-                    mineBlock(nextPos);\n+                    return true;\n                 }\n-                else if (world.getBlockState(nextPosUp).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() == 0)\n                 {\n-                    mineBlock(nextPosUp);\n+                    return true;\n                 }\n             }\n+            else\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Mines leaves on path and above.\n+     */\n+    private void tryUnstuck(){\n+\n+        if (!worker.getNavigator().noPath())\n+        {\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n+            {\n+                // Unstuck with path\n+                ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+                PathPoint next = path.getPathPointFromIndex(path.getCurrentPathIndex());\n+\n+                // Blocks in front of the worker\n+                checkPositions.add(new BlockPos(next.x, next.y, next.z));\n+                checkPositions.add(new BlockPos(next.x, next.y + 1, next.z));\n+                checkPositions.add(new BlockPos(next.x, next.y + 2, next.z));\n+\n+                // Block above the worker\n+                checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 2, worker.getCurrentPosition().getZ()));\n+\n+                mineIfEqualsBlockTag(checkPositions, BlockTags.LEAVES);\n+                return;\n+            }\n+        }\n+\n+        // General unstuck\n+        ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+        // Blocks in front of the worker\n+        checkPositions.add(new BlockPos(worker.getForward().getX(), worker.getForward().getY(), worker.getForward().getZ()));\n+        checkPositions.add(new BlockPos(worker.getForward().getX(), worker.getForward().getY() + 1, worker.getForward().getZ()));\n+\n+        // blocks in north of the player\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY(), worker.getCurrentPosition().getZ()).north());\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 1, worker.getCurrentPosition().getZ()).north());\n+\n+        // blocks in east of the player\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY(), worker.getCurrentPosition().getZ()).east());\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 1, worker.getCurrentPosition().getZ()).east());\n+\n+        // blocks in south of the player\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY(), worker.getCurrentPosition().getZ()).south());\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 1, worker.getCurrentPosition().getZ()).south());\n+\n+        // blocks in west of the player\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY(), worker.getCurrentPosition().getZ()).west());\n+        checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 1, worker.getCurrentPosition().getZ()).west());\n+\n+        mineIfEqualsBlockTag(checkPositions, BlockTags.LEAVES);\n+    }\n+\n+    /**\n+     * Checks blocks for tag and mines the first it fines if its the same\n+     * @param blockPositions block positions\n+     * @param tag tag to check\n+     */\n+    private boolean mineIfEqualsBlockTag(List<BlockPos> blockPositions, Tag<Block> tag){\n+        for (BlockPos currentPos : blockPositions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0983e2c1639a4fd640d720a75eec762658050a"}, "originalPosition": 192}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f49c329a542eb4a3944c285a4ac2d0ecdeefe8c", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/0f49c329a542eb4a3944c285a4ac2d0ecdeefe8c", "committedDate": "2020-06-06T17:01:59Z", "message": "Fix format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzU0NDYy", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425754462", "createdAt": "2020-06-06T17:05:47Z", "commit": {"oid": "0f49c329a542eb4a3944c285a4ac2d0ecdeefe8c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNzowNTo0N1rOGgErig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNzowNTo0N1rOGgErig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4NDI5OA==", "bodyText": "cough", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r436284298", "createdAt": "2020-06-06T17:05:47Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,30 +555,105 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n             {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-\n-                if (world.getBlockState(nextPos).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() > path.getCurrentPathIndex())\n                 {\n-                    mineBlock(nextPos);\n+                    return true;\n                 }\n-                else if (world.getBlockState(nextPosUp).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() == 0)\n                 {\n-                    mineBlock(nextPosUp);\n+                    return true;\n+                }\n+            }\n+            else\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Mines leaves on path and above.\n+     */\n+    private void tryUnstuck()\n+    {\n+        if (!worker.getNavigator().noPath())\n+        {\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n+            {\n+                // Unstuck with path\n+                ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+                PathPoint next = path.getPathPointFromIndex(path.getCurrentPathIndex());\n+\n+                // Blocks in front of the worker\n+                for(int i = 0; i <= 2; i++){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f49c329a542eb4a3944c285a4ac2d0ecdeefe8c"}, "originalPosition": 149}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46e54b367d3831f99afbfd9737024df8f3b404f9", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/46e54b367d3831f99afbfd9737024df8f3b404f9", "committedDate": "2020-06-06T18:29:24Z", "message": "Fix format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzY1MzQ5", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425765349", "createdAt": "2020-06-06T20:04:46Z", "commit": {"oid": "46e54b367d3831f99afbfd9737024df8f3b404f9"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84405805207686a571c33b3f4d8c34a14a6c39a7", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/84405805207686a571c33b3f4d8c34a14a6c39a7", "committedDate": "2020-06-07T11:32:19Z", "message": "Add direction loop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODE2MDkx", "url": "https://github.com/ldtteam/minecolonies/pull/5136#pullrequestreview-425816091", "createdAt": "2020-06-07T12:36:22Z", "commit": {"oid": "84405805207686a571c33b3f4d8c34a14a6c39a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMjozNjoyMlrOGgJO6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxMjozNjoyMlrOGgJO6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM1ODg5MA==", "bodyText": "There is a minecraft class for all horizontal directions =D", "url": "https://github.com/ldtteam/minecolonies/pull/5136#discussion_r436358890", "createdAt": "2020-06-07T12:36:22Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -544,30 +556,98 @@ private Boolean isPassable(final BlockState blockState)\n         return blockState.getMaterial() == Material.LEAVES;\n     }\n \n+\n     /**\n      * Check if distance to block changed and if we are not moving for too long, try to get unstuck.\n      *\n      * @return false\n      */\n-    private boolean checkIfStuckOnLeaves()\n+    private boolean checkIfStuck()\n     {\n         if (!worker.getNavigator().noPath())\n         {\n-            Path pathToTree = worker.getNavigator().getPath();\n-            if (pathToTree != null && pathToTree.getCurrentPathLength() > pathToTree.getCurrentPathIndex())\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n             {\n-                PathPoint next = pathToTree.getPathPointFromIndex(pathToTree.getCurrentPathIndex());\n-                BlockPos nextPos = new BlockPos(next.x, next.y, next.z);\n-                BlockPos nextPosUp = new BlockPos(next.x, next.y + 1, next.z);\n-\n-                if (world.getBlockState(nextPos).getBlock().isIn(BlockTags.LEAVES))\n+                if (path.getCurrentPathLength() > path.getCurrentPathIndex())\n+                {\n+                    return true;\n+                }\n+                if (path.getCurrentPathLength() == 0)\n                 {\n-                    mineBlock(nextPos);\n+                    return true;\n                 }\n-                else if (world.getBlockState(nextPosUp).getBlock().isIn(BlockTags.LEAVES))\n+            }\n+            else\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Mines leaves on path and above.\n+     */\n+    private void tryUnstuck()\n+    {\n+        if (!worker.getNavigator().noPath())\n+        {\n+            Path path = worker.getNavigator().getPath();\n+            if (path != null)\n+            {\n+                // Unstuck with path\n+                ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+                PathPoint next = path.getPathPointFromIndex(path.getCurrentPathIndex());\n+\n+                // Blocks in front of the worker\n+                for(int i = 0; i <= 2; i++)\n                 {\n-                    mineBlock(nextPosUp);\n+                    checkPositions.add(new BlockPos(next.x, next.y + i, next.z));\n                 }\n+\n+                // Block above the worker\n+                checkPositions.add(new BlockPos(worker.getCurrentPosition().getX(), worker.getCurrentPosition().getY() + 2, worker.getCurrentPosition().getZ()));\n+\n+                mineIfEqualsBlockTag(checkPositions, BlockTags.LEAVES);\n+                return;\n+            }\n+        }\n+\n+        // General unstuck\n+        ArrayList<BlockPos> checkPositions = new ArrayList<>();\n+        List<Direction> directions = new ArrayList<>();\n+        directions.add(Direction.NORTH);\n+        directions.add(Direction.EAST);\n+        directions.add(Direction.WEST);\n+        directions.add(Direction.SOUTH);\n+\n+        for (Direction direction: directions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84405805207686a571c33b3f4d8c34a14a6c39a7"}, "originalPosition": 171}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c30adc9a4906775d2f95af2c3e5f6216296f97", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/89c30adc9a4906775d2f95af2c3e5f6216296f97", "committedDate": "2020-06-07T13:54:00Z", "message": "Use Plane.HORIZONTAL.values()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8031d9d7c3fb80afbd7e66a20f5d119ea6121a71", "author": {"user": {"login": "Tobiti", "name": "Tobias Adloff"}}, "url": "https://github.com/ldtteam/minecolonies/commit/8031d9d7c3fb80afbd7e66a20f5d119ea6121a71", "committedDate": "2020-06-07T15:09:53Z", "message": "Merge branch 'version/1.15' into version/1.15"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eefb6cd700df814fb4babdcfe8feae2ecd884b73", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/eefb6cd700df814fb4babdcfe8feae2ecd884b73", "committedDate": "2020-06-07T18:43:35Z", "message": "Merge branch 'version/1.15' into version/1.15"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2148, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}