{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNDMyMzU2", "number": 5067, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjowMTozMFrOD_NSww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODoyOTo0NFrOEAOYlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjA0Njc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjowMTozMFrOGZvztQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNjowMTozMFrOGZvztQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1MDg2OQ==", "bodyText": "Ahh nice, that's what you mean with this, yes, this works fine", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r429650869", "createdAt": "2020-05-24T16:01:30Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "diffHunk": "@@ -355,4 +356,10 @@ private int getRequiredProgressForMakingRawMaterial()\n     {\n         return PROGRESS_MULTIPLIER / Math.min(worker.getCitizenData().getJobModifier() + 1, MAX_LEVEL) * HITTING_TIME;\n     }\n+\n+    @Override\n+    public boolean isAfterDumpPickupAllowed()\n+    {\n+        return currentRequest == null;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c619830b632f8886c07316ef8448287c5e7e274"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjcxMTU3OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/requestsystem/requestable/deliveryman/AbstractDeliverymanRequestable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNjowOTo1M1rOGZ1rxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNjowOTo1M1rOGZ1rxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc0NzE0MQ==", "bodyText": "Sadly this will never work.\nThe Delivery can not, and will never, have control over execution order of its tasks.\nThe RS handles ordering and as such the DMan should never alter them, since this might mess up request-trees, if one order gets executed before another. Yes you might have it working now, but this is fragile and the RS handles this internally already.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r429747141", "createdAt": "2020-05-25T06:09:53Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/requestsystem/requestable/deliveryman/AbstractDeliverymanRequestable.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package com.minecolonies.api.colony.requestsystem.requestable.deliveryman;\n+\n+public abstract class AbstractDeliverymanRequestable implements IDeliverymanRequestable\n+{\n+    ////// --------------------------- NBTConstants --------------------------- \\\\\\\\\\\\\n+    protected static final String NBT_PRIORITY = \"Priority\";\n+    ////// --------------------------- NBTConstants --------------------------- \\\\\\\\\\\\\n+\n+    public static final int MAX_DELIVERYMAN_STANDARD_PRIORITY = 10;\n+    public static final int MAX_DELIVERYMAN_AGING_PRIORITY    = 11;\n+    public static final int MAX_DELIVERYMAN_PLAYER_PRIORITY   = 12;\n+\n+    protected int priority = 0;\n+\n+    protected AbstractDeliverymanRequestable(final int priority)\n+    {\n+        this.priority = priority;\n+    }\n+\n+    @Override\n+    public int getPriority()\n+    {\n+        return priority;\n+    }\n+\n+    @Override\n+    public void incrementPriorityDueToAging()\n+    {\n+        // The priority set by by the aging mechanism can actually exceed the maximum priority that requesters can choose.\n+        // Worst case, the priority queue turns into a FIFO queue for really old requests, with new maximum-priority requests having to wait.\n+        priority = Math.min(MAX_DELIVERYMAN_AGING_PRIORITY, priority + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODU5MTU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/PickupRequestResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODozNTo0NVrOGaHwgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMToyNTowOVrOGaJ31Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0MzI2NQ==", "bodyText": "missing javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430043265", "createdAt": "2020-05-25T18:35:45Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/PickupRequestResolver.java", "diffHunk": "@@ -0,0 +1,172 @@\n+package com.minecolonies.coremod.colony.requestsystem.resolvers;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.reflect.TypeToken;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.requestsystem.location.ILocation;\n+import com.minecolonies.api.colony.requestsystem.manager.IRequestManager;\n+import com.minecolonies.api.colony.requestsystem.request.IRequest;\n+import com.minecolonies.api.colony.requestsystem.requestable.deliveryman.Pickup;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.TranslationConstants;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.Colony;\n+import com.minecolonies.coremod.colony.jobs.JobDeliveryman;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.core.AbstractRequestResolver;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.TranslationTextComponent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+public class PickupRequestResolver extends AbstractRequestResolver<Pickup>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA3NzkwOQ==", "bodyText": "Fixed in b2b9ff1. Also added the an equivalent comment to DeliveryRequestResolver.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430077909", "createdAt": "2020-05-25T21:25:09Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/PickupRequestResolver.java", "diffHunk": "@@ -0,0 +1,172 @@\n+package com.minecolonies.coremod.colony.requestsystem.resolvers;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.reflect.TypeToken;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.requestsystem.location.ILocation;\n+import com.minecolonies.api.colony.requestsystem.manager.IRequestManager;\n+import com.minecolonies.api.colony.requestsystem.request.IRequest;\n+import com.minecolonies.api.colony.requestsystem.requestable.deliveryman.Pickup;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.TranslationConstants;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.Colony;\n+import com.minecolonies.coremod.colony.jobs.JobDeliveryman;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.core.AbstractRequestResolver;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.TranslationTextComponent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+public class PickupRequestResolver extends AbstractRequestResolver<Pickup>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0MzI2NQ=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODU5NTI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/PickupRequestResolver.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODozODoyM1rOGaHytw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMDoyMzozM1rOGaJKFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0MzgzMQ==", "bodyText": "How frequently is this called? might want to use a normal loop instead of streams", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430043831", "createdAt": "2020-05-25T18:38:23Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/PickupRequestResolver.java", "diffHunk": "@@ -0,0 +1,172 @@\n+package com.minecolonies.coremod.colony.requestsystem.resolvers;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.reflect.TypeToken;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.requestsystem.location.ILocation;\n+import com.minecolonies.api.colony.requestsystem.manager.IRequestManager;\n+import com.minecolonies.api.colony.requestsystem.request.IRequest;\n+import com.minecolonies.api.colony.requestsystem.requestable.deliveryman.Pickup;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.TranslationConstants;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.Colony;\n+import com.minecolonies.coremod.colony.jobs.JobDeliveryman;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.core.AbstractRequestResolver;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.TranslationTextComponent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+public class PickupRequestResolver extends AbstractRequestResolver<Pickup>\n+{\n+    public PickupRequestResolver(\n+      @NotNull final ILocation location,\n+      @NotNull final IToken<?> token)\n+    {\n+        super(location, token);\n+    }\n+\n+    @Override\n+    public TypeToken<? extends Pickup> getRequestType()\n+    {\n+        return TypeConstants.PICKUP;\n+    }\n+\n+    @Override\n+    public boolean canResolveRequest(@NotNull final IRequestManager manager, final IRequest<? extends Pickup> requestToCheck)\n+    {\n+        if (manager.getColony().getWorld().isRemote)\n+        {\n+            return false;\n+        }\n+\n+        final Colony colony = (Colony) manager.getColony();\n+        final ICitizenData freeDeliveryMan = colony.getCitizenManager().getCitizens()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2NTU0MQ==", "bodyText": "This is Orion's code. I'm not touching that xD\n\n  \n    \n      minecolonies/src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/DeliveryRequestResolver.java\n    \n    \n         Line 51\n      in\n      3004c9f\n    \n    \n    \n    \n\n        \n          \n           .stream()", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430065541", "createdAt": "2020-05-25T20:20:31Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/PickupRequestResolver.java", "diffHunk": "@@ -0,0 +1,172 @@\n+package com.minecolonies.coremod.colony.requestsystem.resolvers;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.reflect.TypeToken;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.requestsystem.location.ILocation;\n+import com.minecolonies.api.colony.requestsystem.manager.IRequestManager;\n+import com.minecolonies.api.colony.requestsystem.request.IRequest;\n+import com.minecolonies.api.colony.requestsystem.requestable.deliveryman.Pickup;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.TranslationConstants;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.Colony;\n+import com.minecolonies.coremod.colony.jobs.JobDeliveryman;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.core.AbstractRequestResolver;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.TranslationTextComponent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+public class PickupRequestResolver extends AbstractRequestResolver<Pickup>\n+{\n+    public PickupRequestResolver(\n+      @NotNull final ILocation location,\n+      @NotNull final IToken<?> token)\n+    {\n+        super(location, token);\n+    }\n+\n+    @Override\n+    public TypeToken<? extends Pickup> getRequestType()\n+    {\n+        return TypeConstants.PICKUP;\n+    }\n+\n+    @Override\n+    public boolean canResolveRequest(@NotNull final IRequestManager manager, final IRequest<? extends Pickup> requestToCheck)\n+    {\n+        if (manager.getColony().getWorld().isRemote)\n+        {\n+            return false;\n+        }\n+\n+        final Colony colony = (Colony) manager.getColony();\n+        final ICitizenData freeDeliveryMan = colony.getCitizenManager().getCitizens()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0MzgzMQ=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2NTc5MQ==", "bodyText": "hehe xD", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430065791", "createdAt": "2020-05-25T20:21:42Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/PickupRequestResolver.java", "diffHunk": "@@ -0,0 +1,172 @@\n+package com.minecolonies.coremod.colony.requestsystem.resolvers;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.reflect.TypeToken;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.requestsystem.location.ILocation;\n+import com.minecolonies.api.colony.requestsystem.manager.IRequestManager;\n+import com.minecolonies.api.colony.requestsystem.request.IRequest;\n+import com.minecolonies.api.colony.requestsystem.requestable.deliveryman.Pickup;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.TranslationConstants;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.Colony;\n+import com.minecolonies.coremod.colony.jobs.JobDeliveryman;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.core.AbstractRequestResolver;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.TranslationTextComponent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+public class PickupRequestResolver extends AbstractRequestResolver<Pickup>\n+{\n+    public PickupRequestResolver(\n+      @NotNull final ILocation location,\n+      @NotNull final IToken<?> token)\n+    {\n+        super(location, token);\n+    }\n+\n+    @Override\n+    public TypeToken<? extends Pickup> getRequestType()\n+    {\n+        return TypeConstants.PICKUP;\n+    }\n+\n+    @Override\n+    public boolean canResolveRequest(@NotNull final IRequestManager manager, final IRequest<? extends Pickup> requestToCheck)\n+    {\n+        if (manager.getColony().getWorld().isRemote)\n+        {\n+            return false;\n+        }\n+\n+        final Colony colony = (Colony) manager.getColony();\n+        final ICitizenData freeDeliveryMan = colony.getCitizenManager().getCitizens()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0MzgzMQ=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2NjE5OQ==", "bodyText": "We can make a PR once going through all .stream calls and calculating if its worth having a stream there or if the overhead would be really high.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430066199", "createdAt": "2020-05-25T20:23:33Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/PickupRequestResolver.java", "diffHunk": "@@ -0,0 +1,172 @@\n+package com.minecolonies.coremod.colony.requestsystem.resolvers;\n+\n+import com.google.common.collect.Lists;\n+import com.google.common.reflect.TypeToken;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.requestsystem.location.ILocation;\n+import com.minecolonies.api.colony.requestsystem.manager.IRequestManager;\n+import com.minecolonies.api.colony.requestsystem.request.IRequest;\n+import com.minecolonies.api.colony.requestsystem.requestable.deliveryman.Pickup;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.TranslationConstants;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.Colony;\n+import com.minecolonies.coremod.colony.jobs.JobDeliveryman;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.core.AbstractRequestResolver;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.TranslationTextComponent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+\n+public class PickupRequestResolver extends AbstractRequestResolver<Pickup>\n+{\n+    public PickupRequestResolver(\n+      @NotNull final ILocation location,\n+      @NotNull final IToken<?> token)\n+    {\n+        super(location, token);\n+    }\n+\n+    @Override\n+    public TypeToken<? extends Pickup> getRequestType()\n+    {\n+        return TypeConstants.PICKUP;\n+    }\n+\n+    @Override\n+    public boolean canResolveRequest(@NotNull final IRequestManager manager, final IRequest<? extends Pickup> requestToCheck)\n+    {\n+        if (manager.getColony().getWorld().isRemote)\n+        {\n+            return false;\n+        }\n+\n+        final Colony colony = (Colony) manager.getColony();\n+        final ICitizenData freeDeliveryMan = colony.getCitizenManager().getCitizens()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0MzgzMQ=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODYwMTc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/factory/PickupRequestResolverFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODo0Mjo1N1rOGaH2lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMToyNDoyNlrOGaJ3UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NDgyMQ==", "bodyText": "missing javadoc in this class too", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430044821", "createdAt": "2020-05-25T18:42:57Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/factory/PickupRequestResolverFactory.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.minecolonies.coremod.colony.requestsystem.resolvers.factory;\n+\n+import com.google.common.reflect.TypeToken;\n+import com.minecolonies.api.colony.requestsystem.factory.IFactoryController;\n+import com.minecolonies.api.colony.requestsystem.location.ILocation;\n+import com.minecolonies.api.colony.requestsystem.resolver.IRequestResolverFactory;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PickupRequestResolver;\n+import net.minecraft.nbt.CompoundNBT;\n+import org.jetbrains.annotations.NotNull;\n+\n+public class PickupRequestResolverFactory implements IRequestResolverFactory<PickupRequestResolver>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA3Nzc3Ng==", "bodyText": "Fixed in b2b9ff1.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430077776", "createdAt": "2020-05-25T21:24:26Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/factory/PickupRequestResolverFactory.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.minecolonies.coremod.colony.requestsystem.resolvers.factory;\n+\n+import com.google.common.reflect.TypeToken;\n+import com.minecolonies.api.colony.requestsystem.factory.IFactoryController;\n+import com.minecolonies.api.colony.requestsystem.location.ILocation;\n+import com.minecolonies.api.colony.requestsystem.resolver.IRequestResolverFactory;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PickupRequestResolver;\n+import net.minecraft.nbt.CompoundNBT;\n+import org.jetbrains.annotations.NotNull;\n+\n+public class PickupRequestResolverFactory implements IRequestResolverFactory<PickupRequestResolver>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NDgyMQ=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODYyMDI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODo1NDo1MVrOGaIBcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMDoyMDo0NFrOGaJHqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NzYwMA==", "bodyText": "outdated todo? its using ((IBuildingWorker) targetBuilding)::isItemStackInRequest", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430047600", "createdAt": "2020-05-25T18:54:51Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -521,70 +355,74 @@ else if (buildingToDeliver == null)\n             extracted = true;\n             final ItemStack insertionResultStack;\n \n-            if (iTileEntityColonyBuilding.getBuilding() instanceof AbstractBuildingWorker)\n+            // TODO: Please only push items into the target that were actually requested.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 507}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NzE4Ng==", "bodyText": "I love how we all fall into that particular pit. No, isItemStackInRequest doesn't filter the items. It prevents those items from being replaced by forceItemStackToItemHandler (which would happen if the inventory was full).", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430057186", "createdAt": "2020-05-25T19:41:18Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -521,70 +355,74 @@ else if (buildingToDeliver == null)\n             extracted = true;\n             final ItemStack insertionResultStack;\n \n-            if (iTileEntityColonyBuilding.getBuilding() instanceof AbstractBuildingWorker)\n+            // TODO: Please only push items into the target that were actually requested.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NzYwMA=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 507}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NzMxOQ==", "bodyText": "oh lol :D", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430057319", "createdAt": "2020-05-25T19:42:01Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -521,70 +355,74 @@ else if (buildingToDeliver == null)\n             extracted = true;\n             final ItemStack insertionResultStack;\n \n-            if (iTileEntityColonyBuilding.getBuilding() instanceof AbstractBuildingWorker)\n+            // TODO: Please only push items into the target that were actually requested.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NzYwMA=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 507}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2NTU3OQ==", "bodyText": "It's like those exclude predicates in vanilla to get entities", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430065579", "createdAt": "2020-05-25T20:20:44Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -521,70 +355,74 @@ else if (buildingToDeliver == null)\n             extracted = true;\n             final ItemStack insertionResultStack;\n \n-            if (iTileEntityColonyBuilding.getBuilding() instanceof AbstractBuildingWorker)\n+            // TODO: Please only push items into the target that were actually requested.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NzYwMA=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 507}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODYyNzgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOTowMDoxMFrOGaIF-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODoyOToyMFrOGbX4Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg==", "bodyText": "think you want to use an ItemStackUtils comparing function for this since afaik requests are also nbt sensitive", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430048762", "createdAt": "2020-05-25T19:00:10Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1NzY2OQ==", "bodyText": "Blame @Raycoms. I only changed the formatting here, not the logic. Ray, what do you think?", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430057669", "createdAt": "2020-05-25T19:43:42Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1Nzk5MA==", "bodyText": "interesting, maybe thats one of the things throwing the dman off", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430057990", "createdAt": "2020-05-25T19:45:07Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2NTc1OA==", "bodyText": "Since he got the exact delivery from the RS, just equals should be fine here yes. Maybe having one that matches with ignore durability but doesn't match the normal way here, is really throwing him off.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430065758", "createdAt": "2020-05-25T20:21:33Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA2NTc4Ng==", "bodyText": "isItemEqual I mean.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430065786", "createdAt": "2020-05-25T20:21:41Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE1NzI2MA==", "bodyText": "He need to check for nbt and meta equal. Item Equality is not enough at this stage.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430157260", "createdAt": "2020-05-26T05:04:23Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIzMzY3NA==", "bodyText": "Yes, isItemEqual does check that. While isItemEqualIgnoreDurability checks less.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430233674", "createdAt": "2020-05-26T08:13:40Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQwMzY5Ng==", "bodyText": "Okey yeah then it needs to be isItemEqual", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430403696", "createdAt": "2020-05-26T13:16:59Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYxNzQzNg==", "bodyText": "Changed in 51e3213.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430617436", "createdAt": "2020-05-26T18:23:25Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1NTkzMA==", "bodyText": "Okay, tried it one more time with aac342d.\nIt now uses ItemStackUtils.compareItemStacksIgnoreStackSize, same as gatherIfInTileEntity.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r431355930", "createdAt": "2020-05-27T18:29:20Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -596,50 +434,33 @@ else if (buildingToDeliver instanceof TileEntityColonyBuilding)\n      */\n     private IAIState prepareDelivery()\n     {\n-        final IBuildingWorker ownBuilding = getOwnBuilding();\n-        if (ownBuilding instanceof BuildingDeliveryman)\n+        final IRequest<? extends IRequestable> currentTask = job.getCurrentTask();\n+        final IRequestable request = currentTask.getRequest();\n+        if (!(request instanceof Delivery))\n         {\n-            final IRequest<? extends Delivery> request = job.getCurrentTask();\n-            if (request != null)\n-            {\n-                if (job.isReturning())\n-                {\n-                    return DUMPING;\n-                }\n-                ((IBuildingDeliveryman) ownBuilding).setBuildingToDeliver(request.getRequest().getTarget());\n-                if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-                  itemStack -> request.getRequest().getStack().isItemEqualIgnoreDurability(itemStack)))\n-                {\n-                    return DELIVERY;\n-                }\n+            // The current task has changed since the Decision-state.\n+            // Restart.\n+            return START_WORKING;\n+        }\n \n-                return gatherItems(request);\n-            }\n+        final Delivery delivery = (Delivery) request;\n+        if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n+          itemStack -> delivery.getStack().isItemEqualIgnoreDurability(itemStack)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0ODc2Mg=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 629}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODYzNjU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/ForcePickupMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOTowNjoyM1rOGaILEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMToyMzo0OVrOGaJ28Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MDA2Ng==", "bodyText": "javadoc here too please :D", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430050066", "createdAt": "2020-05-25T19:06:23Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/ForcePickupMessage.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.minecolonies.coremod.network.messages.server.colony.building;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.colony.buildings.views.IBuildingView;\n+import com.minecolonies.api.colony.requestsystem.requestable.deliveryman.Pickup;\n+import com.minecolonies.coremod.network.messages.server.AbstractBuildingServerMessage;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraftforge.fml.network.NetworkEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+import static com.minecolonies.api.colony.requestsystem.requestable.deliveryman.AbstractDeliverymanRequestable.MAX_DELIVERYMAN_PLAYER_PRIORITY;\n+\n+public class ForcePickupMessage extends AbstractBuildingServerMessage<IBuilding>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA3NzY4MQ==", "bodyText": "Fixed in b2b9ff1.", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r430077681", "createdAt": "2020-05-25T21:23:49Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/ForcePickupMessage.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package com.minecolonies.coremod.network.messages.server.colony.building;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.colony.buildings.views.IBuildingView;\n+import com.minecolonies.api.colony.requestsystem.requestable.deliveryman.Pickup;\n+import com.minecolonies.coremod.network.messages.server.AbstractBuildingServerMessage;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraftforge.fml.network.NetworkEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+import static com.minecolonies.api.colony.requestsystem.requestable.deliveryman.AbstractDeliverymanRequestable.MAX_DELIVERYMAN_PLAYER_PRIORITY;\n+\n+public class ForcePickupMessage extends AbstractBuildingServerMessage<IBuilding>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MDA2Ng=="}, "originalCommit": {"oid": "b0d717897751eb0bb341b407f70c564a2da2bf6b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjcxMTI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODoyOTo0NFrOGbX5Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODoyOTo0NFrOGbX5Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM1NjE2Nw==", "bodyText": "Looks fine, @OrionDevelopment let's merge this?", "url": "https://github.com/ldtteam/minecolonies/pull/5067#discussion_r431356167", "createdAt": "2020-05-27T18:29:44Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/deliveryman/EntityAIWorkDeliveryman.java", "diffHunk": "@@ -450,7 +450,7 @@ private IAIState prepareDelivery()\n \n         final Delivery delivery = (Delivery) currentTask.getRequest();\n         if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(),\n-          itemStack -> delivery.getStack().isItemEqual(itemStack)))\n+          itemStack -> ItemStackUtils.compareItemStacksIgnoreStackSize(delivery.getStack(), itemStack)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aac342d565ef17f85ec20696949296eb6e01780c"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3076, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}