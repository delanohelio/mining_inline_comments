{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0OTI3MjEx", "number": 5433, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTo1NjoxM1rOERA2SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTo1NjoxM1rOERA2SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mjc1MTQ1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/tileentities/TileEntityColonyBuilding.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMTo1NjoxM1rOG1fGyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoyODo0MFrOG1lEtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODczNzM1NQ==", "bodyText": "Don't we need a \"dirty\" flag on load of the other invs too?", "url": "https://github.com/ldtteam/minecolonies/pull/5433#discussion_r458737355", "createdAt": "2020-07-22T11:56:13Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/tileentities/TileEntityColonyBuilding.java", "diffHunk": "@@ -454,16 +454,22 @@ public void markInvDirty()\n                 final World world = colony.getWorld();\n                 if (world != null)\n                 {\n-                    //Add additional containers\n-                    providers.addAll(building.getAdditionalCountainers().stream()\n-                                       .map(world::getTileEntity)\n-                                       .collect(Collectors.toSet()));\n-                    providers.removeIf(Objects::isNull);\n-                    building.getAdditionalCountainers()\n-                      .stream()\n-                      .map(world::getTileEntity)\n-                      .filter(entity -> entity instanceof TileEntityRack)\n-                      .forEach(entity -> ((TileEntityRack) entity).setBuildingPos(this.pos));\n+                    for (final BlockPos pos : building.getAdditionalCountainers())\n+                    {\n+                        if (WorldUtil.isBlockLoaded(world, pos))\n+                        {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e8fe4ac990192fe6aa1aaa8ce5d66204a0b9bd2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODczOTQ1Mw==", "bodyText": "ye thats why I added to racks that they notify their building on load", "url": "https://github.com/ldtteam/minecolonies/pull/5433#discussion_r458739453", "createdAt": "2020-07-22T12:00:18Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/tileentities/TileEntityColonyBuilding.java", "diffHunk": "@@ -454,16 +454,22 @@ public void markInvDirty()\n                 final World world = colony.getWorld();\n                 if (world != null)\n                 {\n-                    //Add additional containers\n-                    providers.addAll(building.getAdditionalCountainers().stream()\n-                                       .map(world::getTileEntity)\n-                                       .collect(Collectors.toSet()));\n-                    providers.removeIf(Objects::isNull);\n-                    building.getAdditionalCountainers()\n-                      .stream()\n-                      .map(world::getTileEntity)\n-                      .filter(entity -> entity instanceof TileEntityRack)\n-                      .forEach(entity -> ((TileEntityRack) entity).setBuildingPos(this.pos));\n+                    for (final BlockPos pos : building.getAdditionalCountainers())\n+                    {\n+                        if (WorldUtil.isBlockLoaded(world, pos))\n+                        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODczNzM1NQ=="}, "originalCommit": {"oid": "2e8fe4ac990192fe6aa1aaa8ce5d66204a0b9bd2"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNTEyNw==", "bodyText": "kk", "url": "https://github.com/ldtteam/minecolonies/pull/5433#discussion_r458835127", "createdAt": "2020-07-22T14:28:40Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/tileentities/TileEntityColonyBuilding.java", "diffHunk": "@@ -454,16 +454,22 @@ public void markInvDirty()\n                 final World world = colony.getWorld();\n                 if (world != null)\n                 {\n-                    //Add additional containers\n-                    providers.addAll(building.getAdditionalCountainers().stream()\n-                                       .map(world::getTileEntity)\n-                                       .collect(Collectors.toSet()));\n-                    providers.removeIf(Objects::isNull);\n-                    building.getAdditionalCountainers()\n-                      .stream()\n-                      .map(world::getTileEntity)\n-                      .filter(entity -> entity instanceof TileEntityRack)\n-                      .forEach(entity -> ((TileEntityRack) entity).setBuildingPos(this.pos));\n+                    for (final BlockPos pos : building.getAdditionalCountainers())\n+                    {\n+                        if (WorldUtil.isBlockLoaded(world, pos))\n+                        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODczNzM1NQ=="}, "originalCommit": {"oid": "2e8fe4ac990192fe6aa1aaa8ce5d66204a0b9bd2"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3567, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}