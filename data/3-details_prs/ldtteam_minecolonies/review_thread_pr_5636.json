{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMDA3NDUw", "number": 5636, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNjo0Mzo0OVrOEbOvwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxODowNjowNlrOEbPH8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTg4NjA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/event/HighlightManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNjo0Mzo0OVrOHFGStw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNjo0OToxOVrOHFGU3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwODAyMw==", "bodyText": "Is this only highlighting a single rack, what about connected racks?", "url": "https://github.com/ldtteam/minecolonies/pull/5636#discussion_r475108023", "createdAt": "2020-08-22T16:43:49Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/event/HighlightManager.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.minecolonies.coremod.event;\n+\n+import com.ldtteam.structurize.util.RenderUtils;\n+import com.minecolonies.api.util.Tuple;\n+import com.mojang.blaze3d.vertex.IVertexBuilder;\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderTypeBuffers;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+import net.minecraftforge.client.event.RenderWorldLastEvent;\n+import net.minecraftforge.eventbus.api.EventPriority;\n+import net.minecraftforge.eventbus.api.SubscribeEvent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Supplier;\n+\n+@OnlyIn(Dist.CLIENT)\n+public class HighlightManager\n+{\n+    /**\n+     * A position to highlight with a unique id.\n+     */\n+    @Nullable\n+    public static final Map<String, Tuple<BlockPos, Long>> HIGHLIGHT_MAP = new HashMap<>();\n+\n+    /**\n+     * Render buffers.\n+     */\n+    public static final  RenderTypeBuffers        renderBuffers            = new RenderTypeBuffers();\n+    private static final IRenderTypeBuffer.Impl   renderBuffer             = renderBuffers.getBufferSource();\n+    private static final Supplier<IVertexBuilder> linesWithoutCullAndDepth = () -> renderBuffer.getBuffer(RenderUtils.LINES_GLINT);\n+\n+    /**\n+     * Used to catch the renderWorldLastEvent in order to draw the debug nodes for pathfinding.\n+     *\n+     * @param event the catched event.\n+     */\n+    @SubscribeEvent(priority = EventPriority.LOW)\n+    public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent event)\n+    {\n+        if (!HIGHLIGHT_MAP.isEmpty())\n+        {\n+            final long worldTime = Minecraft.getInstance().world.getGameTime();\n+            for (final Map.Entry<String, Tuple<BlockPos, Long>> entry : new ArrayList<>(HIGHLIGHT_MAP.entrySet()))\n+            {\n+                if (entry.getValue().getB() <= worldTime)\n+                {\n+                    HIGHLIGHT_MAP.remove(entry.getKey());\n+                }\n+                else\n+                {\n+                    RenderUtils.renderBox(entry.getValue().getA(), entry.getValue().getA(), 0, 1, 0, 1.0F, 0.002D, event.getMatrixStack(), linesWithoutCullAndDepth.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf4f8a6670e9ac069f398f142b61dce1e97f2de"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwODU3Mg==", "bodyText": "We don't know about connected racks in this part of the code. So it's better to just show the half that contains it. If it's a connected rack it will display the half that contains it. So either way the player will click the right one", "url": "https://github.com/ldtteam/minecolonies/pull/5636#discussion_r475108572", "createdAt": "2020-08-22T16:49:19Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/event/HighlightManager.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.minecolonies.coremod.event;\n+\n+import com.ldtteam.structurize.util.RenderUtils;\n+import com.minecolonies.api.util.Tuple;\n+import com.mojang.blaze3d.vertex.IVertexBuilder;\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderTypeBuffers;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+import net.minecraftforge.client.event.RenderWorldLastEvent;\n+import net.minecraftforge.eventbus.api.EventPriority;\n+import net.minecraftforge.eventbus.api.SubscribeEvent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Supplier;\n+\n+@OnlyIn(Dist.CLIENT)\n+public class HighlightManager\n+{\n+    /**\n+     * A position to highlight with a unique id.\n+     */\n+    @Nullable\n+    public static final Map<String, Tuple<BlockPos, Long>> HIGHLIGHT_MAP = new HashMap<>();\n+\n+    /**\n+     * Render buffers.\n+     */\n+    public static final  RenderTypeBuffers        renderBuffers            = new RenderTypeBuffers();\n+    private static final IRenderTypeBuffer.Impl   renderBuffer             = renderBuffers.getBufferSource();\n+    private static final Supplier<IVertexBuilder> linesWithoutCullAndDepth = () -> renderBuffer.getBuffer(RenderUtils.LINES_GLINT);\n+\n+    /**\n+     * Used to catch the renderWorldLastEvent in order to draw the debug nodes for pathfinding.\n+     *\n+     * @param event the catched event.\n+     */\n+    @SubscribeEvent(priority = EventPriority.LOW)\n+    public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent event)\n+    {\n+        if (!HIGHLIGHT_MAP.isEmpty())\n+        {\n+            final long worldTime = Minecraft.getInstance().world.getGameTime();\n+            for (final Map.Entry<String, Tuple<BlockPos, Long>> entry : new ArrayList<>(HIGHLIGHT_MAP.entrySet()))\n+            {\n+                if (entry.getValue().getB() <= worldTime)\n+                {\n+                    HIGHLIGHT_MAP.remove(entry.getKey());\n+                }\n+                else\n+                {\n+                    RenderUtils.renderBox(entry.getValue().getA(), entry.getValue().getA(), 0, 1, 0, 1.0F, 0.002D, event.getMatrixStack(), linesWithoutCullAndDepth.get());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwODAyMw=="}, "originalCommit": {"oid": "fbf4f8a6670e9ac069f398f142b61dce1e97f2de"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTg4NjY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNjo0NDozMFrOHFGTAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxNjo0ODo0MlrOHFGUWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwODA5OA==", "bodyText": "I believe this is a significant increase in crafting speed, not just a visual change. Is that the intent?", "url": "https://github.com/ldtteam/minecolonies/pull/5636#discussion_r475108098", "createdAt": "2020-08-22T16:44:30Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "diffHunk": "@@ -36,7 +35,7 @@\n     /**\n      * Time the worker delays until the next hit.\n      */\n-    protected static final int HIT_DELAY = 20;\n+    protected static final int HIT_DELAY = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf4f8a6670e9ac069f398f142b61dce1e97f2de"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwODQ0MQ==", "bodyText": "Yes", "url": "https://github.com/ldtteam/minecolonies/pull/5636#discussion_r475108441", "createdAt": "2020-08-22T16:48:42Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "diffHunk": "@@ -36,7 +35,7 @@\n     /**\n      * Time the worker delays until the next hit.\n      */\n-    protected static final int HIT_DELAY = 20;\n+    protected static final int HIT_DELAY = 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEwODA5OA=="}, "originalCommit": {"oid": "fbf4f8a6670e9ac069f398f142b61dce1e97f2de"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2OTk0ODAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/event/HighlightManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxODowNjowNlrOHFGwMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQyMToxMjozOVrOHFILDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTU3MA==", "bodyText": "use the one from render world last event, preferably also call the event from there", "url": "https://github.com/ldtteam/minecolonies/pull/5636#discussion_r475115570", "createdAt": "2020-08-22T18:06:06Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/event/HighlightManager.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.minecolonies.coremod.event;\n+\n+import com.ldtteam.structurize.util.RenderUtils;\n+import com.minecolonies.api.util.Tuple;\n+import com.mojang.blaze3d.vertex.IVertexBuilder;\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderTypeBuffers;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+import net.minecraftforge.client.event.RenderWorldLastEvent;\n+import net.minecraftforge.eventbus.api.EventPriority;\n+import net.minecraftforge.eventbus.api.SubscribeEvent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Supplier;\n+\n+@OnlyIn(Dist.CLIENT)\n+public class HighlightManager\n+{\n+    /**\n+     * A position to highlight with a unique id.\n+     */\n+    @Nullable\n+    public static final Map<String, Tuple<BlockPos, Long>> HIGHLIGHT_MAP = new HashMap<>();\n+\n+    /**\n+     * Render buffers.\n+     */\n+    public static final  RenderTypeBuffers        renderBuffers            = new RenderTypeBuffers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf4f8a6670e9ac069f398f142b61dce1e97f2de"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExODY4NQ==", "bodyText": "I didn't call it from there just for separation on concerns. I think I can't reuse it then either because I can't close it at both places I'd guess?", "url": "https://github.com/ldtteam/minecolonies/pull/5636#discussion_r475118685", "createdAt": "2020-08-22T18:41:12Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/event/HighlightManager.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.minecolonies.coremod.event;\n+\n+import com.ldtteam.structurize.util.RenderUtils;\n+import com.minecolonies.api.util.Tuple;\n+import com.mojang.blaze3d.vertex.IVertexBuilder;\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderTypeBuffers;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+import net.minecraftforge.client.event.RenderWorldLastEvent;\n+import net.minecraftforge.eventbus.api.EventPriority;\n+import net.minecraftforge.eventbus.api.SubscribeEvent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Supplier;\n+\n+@OnlyIn(Dist.CLIENT)\n+public class HighlightManager\n+{\n+    /**\n+     * A position to highlight with a unique id.\n+     */\n+    @Nullable\n+    public static final Map<String, Tuple<BlockPos, Long>> HIGHLIGHT_MAP = new HashMap<>();\n+\n+    /**\n+     * Render buffers.\n+     */\n+    public static final  RenderTypeBuffers        renderBuffers            = new RenderTypeBuffers();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTU3MA=="}, "originalCommit": {"oid": "fbf4f8a6670e9ac069f398f142b61dce1e97f2de"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTEzODgyOA==", "bodyText": "no need to separate it, RenderTypeBuffers are the reason the entire rendering is reuseable and doesn't need tesselator anymore, side note: we should be using vanilla instance but in current event design it's impossible", "url": "https://github.com/ldtteam/minecolonies/pull/5636#discussion_r475138828", "createdAt": "2020-08-22T21:12:39Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/event/HighlightManager.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.minecolonies.coremod.event;\n+\n+import com.ldtteam.structurize.util.RenderUtils;\n+import com.minecolonies.api.util.Tuple;\n+import com.mojang.blaze3d.vertex.IVertexBuilder;\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderTypeBuffers;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+import net.minecraftforge.client.event.RenderWorldLastEvent;\n+import net.minecraftforge.eventbus.api.EventPriority;\n+import net.minecraftforge.eventbus.api.SubscribeEvent;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Supplier;\n+\n+@OnlyIn(Dist.CLIENT)\n+public class HighlightManager\n+{\n+    /**\n+     * A position to highlight with a unique id.\n+     */\n+    @Nullable\n+    public static final Map<String, Tuple<BlockPos, Long>> HIGHLIGHT_MAP = new HashMap<>();\n+\n+    /**\n+     * Render buffers.\n+     */\n+    public static final  RenderTypeBuffers        renderBuffers            = new RenderTypeBuffers();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTExNTU3MA=="}, "originalCommit": {"oid": "fbf4f8a6670e9ac069f398f142b61dce1e97f2de"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3431, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}