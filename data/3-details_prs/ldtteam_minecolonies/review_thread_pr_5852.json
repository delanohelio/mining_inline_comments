{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NTE2MTc4", "number": 5852, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMToyNzoyNVrOEporyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDoyNDo1MFrOEpw__A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDkzNjQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingRequestResolver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMToyNzoyNVrOHbbW_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMToyNzoyNVrOHbbW_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMTg1NA==", "bodyText": "formatting", "url": "https://github.com/ldtteam/minecolonies/pull/5852#discussion_r498521854", "createdAt": "2020-10-01T21:27:25Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingRequestResolver.java", "diffHunk": "@@ -242,20 +245,60 @@ protected boolean createsCraftingCycle(\n             return null;\n         }\n \n-        return createRequestsForRecipe(manager, craftableCrafting.getPrimaryOutput(), count, minCount);\n+        return createRequestsForRecipe(manager, craftableCrafting, count, minCount);\n     }\n \n+    /**\n+     * Create the crafting request entries for the overall request\n+     * Will produce multiple, if the inputs don't all fit in the crafters inventory. \n+     * @param manager\n+     * @param recipeRequest\n+     * @param count\n+     * @param minCount\n+     * @return\n+     */\n     @Nullable\n     protected List<IToken<?>> createRequestsForRecipe(\n       @NotNull final IRequestManager manager,\n-      final ItemStack requestStack,\n+      final IRecipeStorage recipeRequest,\n       final int count,\n       final int minCount)\n     {\n-        final int recipeExecutionsCount = (int) Math.ceil((double) count / requestStack.getCount());\n-        final int minRecipeExecutionsCount = (int) Math.ceil((double) minCount / requestStack.getCount());\n+        final List<ItemStorage> inputs = recipeRequest.getCleanedInput();\n+        final ItemStack requestStack = recipeRequest.getPrimaryOutput();\n+        final AbstractResearchEffect<Double> researchEffect =  manager.getColony().getResearchManager().getResearchEffects().getEffect(INV_SLOTS, AbstractResearchEffect.class);\n+        final int maxSlots = (27 + researchEffect.getEffect().intValue()) - (27 + researchEffect.getEffect().intValue()) % 8;  // retaining 1 slot per row for 'overhead'\n+\n+        int recipeExecutionsCount = (int) Math.ceil((double) count / requestStack.getCount());\n+        int minRecipeExecutionsCount = (int) Math.ceil((double) minCount / requestStack.getCount());\n+        int batchSize = recipeExecutionsCount;\n+        int totalSlots = Integer.MAX_VALUE;\n+\n+        //Calculate how many slots are needed, and figure out the maximum number of iterations we can load inputs for into inventory\n+        while (totalSlots > maxSlots) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdb3eb4674c9d62bfd9f17700050a655d3537e21"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDk0MzMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingRequestResolver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTozMDoyMFrOHbbbZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQyMTozMDoyMFrOHbbbZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODUyMjk4MA==", "bodyText": "I think the word \"input\" might be what is confusing people about the doc. Better call it \"ingredients\" for a recipe.", "url": "https://github.com/ldtteam/minecolonies/pull/5852#discussion_r498522980", "createdAt": "2020-10-01T21:30:20Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingRequestResolver.java", "diffHunk": "@@ -242,20 +245,61 @@ protected boolean createsCraftingCycle(\n             return null;\n         }\n \n-        return createRequestsForRecipe(manager, craftableCrafting.getPrimaryOutput(), count, minCount);\n+        return createRequestsForRecipe(manager, craftableCrafting, count, minCount);\n     }\n \n+    /**\n+     * Create the crafting request entries for the overall request\n+     * Will produce multiple, if the inputs don't all fit in the crafters inventory. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0399d31cf5c9c310b42d8646a1b15e510c00ca2"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjI5ODg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingRequestResolver.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDoyNDo1MFrOHborpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzoyNTowMVrOHbtf_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0MDEzMg==", "bodyText": "If you add the javadoc, then also make it complete.", "url": "https://github.com/ldtteam/minecolonies/pull/5852#discussion_r498740132", "createdAt": "2020-10-02T10:24:50Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingRequestResolver.java", "diffHunk": "@@ -242,20 +245,62 @@ protected boolean createsCraftingCycle(\n             return null;\n         }\n \n-        return createRequestsForRecipe(manager, craftableCrafting.getPrimaryOutput(), count, minCount);\n+        return createRequestsForRecipe(manager, craftableCrafting, count, minCount);\n     }\n \n+    /**\n+     * Create the crafting request entries for the overall request\n+     * Will produce multiple, if the ingredients don't all fit in the crafters inventory. \n+     * @param manager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49880d686a64f144bdfa0b44a76b22ad026bd350"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxOTA2OA==", "bodyText": "Done", "url": "https://github.com/ldtteam/minecolonies/pull/5852#discussion_r498819068", "createdAt": "2020-10-02T13:25:01Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingRequestResolver.java", "diffHunk": "@@ -242,20 +245,62 @@ protected boolean createsCraftingCycle(\n             return null;\n         }\n \n-        return createRequestsForRecipe(manager, craftableCrafting.getPrimaryOutput(), count, minCount);\n+        return createRequestsForRecipe(manager, craftableCrafting, count, minCount);\n     }\n \n+    /**\n+     * Create the crafting request entries for the overall request\n+     * Will produce multiple, if the ingredients don't all fit in the crafters inventory. \n+     * @param manager", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODc0MDEzMg=="}, "originalCommit": {"oid": "49880d686a64f144bdfa0b44a76b22ad026bd350"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3520, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}