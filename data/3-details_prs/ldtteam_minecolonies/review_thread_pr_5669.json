{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NTc1NDc5", "number": 5669, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTozNjoxOVrOEd3cvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTozNjoxOVrOEd3cvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzUyNjM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingGuards.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTozNjoxOVrOHJSRkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMDozODoxM1rOHJTz6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5ODY0Mg==", "bodyText": "actually you can do the whole find of job + find best skill logic with one single loop instead, that should be a lot better performance wise, since you only need to find the best skilled one", "url": "https://github.com/ldtteam/minecolonies/pull/5669#discussion_r479498642", "createdAt": "2020-08-28T19:36:19Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingGuards.java", "diffHunk": "@@ -454,7 +470,38 @@ public PlayerEntity getPlayerToFollowOrRally()\n     @Override\n     public void onColonyTick(@NotNull final IColony colony)\n     {\n-        super.onColonyTick(colony);\n+\n+        // If we have no active worker, attempt to grab one from the appropriate trainer\n+        if (hireTrainees && !isFull() && ((getBuildingLevel() > 0 && isBuilt()))\n+              && (this.getHiringMode() == HiringMode.DEFAULT && !this.getColony().isManualHiring() || this.getHiringMode() == HiringMode.AUTO))\n+        {\n+            List<ICitizenData> trainingCitizens = null;\n+            \n+            if(this.getGuardType() == ModGuardTypes.ranger)\n+            {\n+                trainingCitizens = colony.getCitizenManager().getCitizens().stream().filter(x -> x.getJob() instanceof JobArcherTraining).collect(Collectors.toList());\n+            }\n+            else if (this.getGuardType() == ModGuardTypes.knight)\n+            {\n+                trainingCitizens = colony.getCitizenManager().getCitizens().stream().filter(x -> x.getJob() instanceof JobCombatTraining).collect(Collectors.toList());\n+            }\n+\n+            if(trainingCitizens != null && !trainingCitizens.isEmpty())\n+            {\n+                Comparator<ICitizenData> skillComparator = Comparator.comparingInt(e -> e.getCitizenSkillHandler().getLevel(job.getPrimarySkill()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e9e41c96d1f9629ab1f45ccdb1721a759925aa9"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMzgxNw==", "bodyText": "Yup. Cleaned up.", "url": "https://github.com/ldtteam/minecolonies/pull/5669#discussion_r479523817", "createdAt": "2020-08-28T20:38:13Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingGuards.java", "diffHunk": "@@ -454,7 +470,38 @@ public PlayerEntity getPlayerToFollowOrRally()\n     @Override\n     public void onColonyTick(@NotNull final IColony colony)\n     {\n-        super.onColonyTick(colony);\n+\n+        // If we have no active worker, attempt to grab one from the appropriate trainer\n+        if (hireTrainees && !isFull() && ((getBuildingLevel() > 0 && isBuilt()))\n+              && (this.getHiringMode() == HiringMode.DEFAULT && !this.getColony().isManualHiring() || this.getHiringMode() == HiringMode.AUTO))\n+        {\n+            List<ICitizenData> trainingCitizens = null;\n+            \n+            if(this.getGuardType() == ModGuardTypes.ranger)\n+            {\n+                trainingCitizens = colony.getCitizenManager().getCitizens().stream().filter(x -> x.getJob() instanceof JobArcherTraining).collect(Collectors.toList());\n+            }\n+            else if (this.getGuardType() == ModGuardTypes.knight)\n+            {\n+                trainingCitizens = colony.getCitizenManager().getCitizens().stream().filter(x -> x.getJob() instanceof JobCombatTraining).collect(Collectors.toList());\n+            }\n+\n+            if(trainingCitizens != null && !trainingCitizens.isEmpty())\n+            {\n+                Comparator<ICitizenData> skillComparator = Comparator.comparingInt(e -> e.getCitizenSkillHandler().getLevel(job.getPrimarySkill()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5ODY0Mg=="}, "originalCommit": {"oid": "9e9e41c96d1f9629ab1f45ccdb1721a759925aa9"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3454, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}