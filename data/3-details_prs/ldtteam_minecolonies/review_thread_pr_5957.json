{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MzAzMTg1", "number": 5957, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo1OToyNFrOEvhSMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo1OToyNFrOEvhSMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MjYzODU4OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/util/CraftingUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo1OToyNFrOHkjMSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMTo1OToyNFrOHkjMSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA4NzM2OA==", "bodyText": "We used to have it to avoid subrequests < 64 items. We removed the limitations in other places but not here which caused some weird bugs. @OrionDevelopment", "url": "https://github.com/ldtteam/minecolonies/pull/5957#discussion_r508087368", "createdAt": "2020-10-19T21:59:24Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/util/CraftingUtils.java", "diffHunk": "@@ -55,23 +55,7 @@ public static int calculateMaxCraftingCount(@NotNull final ItemStack outputStack\n      */\n     public static int calculateMaxCraftingCount(@NotNull final int count, @NotNull final IRecipeStorage storage)\n     {\n-        //Calculate the initial crafting count from the request and the storage output.\n-        int craftingCount = (int) Math.ceil(Math.max(count, ItemStackUtils.getSize(storage.getPrimaryOutput())) / (double) ItemStackUtils.getSize(storage.getPrimaryOutput()));\n-\n-        //Now check if we excede an ingredients max stack size.\n-        for (final ItemStorage ingredientStorage : storage.getCleanedInput())\n-        {\n-            final ItemStack ingredient = ingredientStorage.getItemStack();\n-            //Calculate the input count for the ingredient.\n-            final int ingredientInputCount = ItemStackUtils.getSize(ingredient) * craftingCount;\n-            //Check if we are above the max stacksize.\n-            if (ingredientInputCount > ingredient.getMaxStackSize())\n-            {\n-                //Recalculate the crafting limit using the maxstacksize of the ingredient.\n-                craftingCount = Math.max(ingredient.getMaxStackSize(), ItemStackUtils.getSize(storage.getPrimaryOutput())) / ItemStackUtils.getSize(storage.getPrimaryOutput());\n-            }\n-        }\n-\n-        return craftingCount;\n+        //Calculate the crafting count from the request and the storage output.\n+        return (int) Math.ceil(Math.max(count, ItemStackUtils.getSize(storage.getPrimaryOutput())) / (double) ItemStackUtils.getSize(storage.getPrimaryOutput()));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f27327344ea09d9c1b1c354ec0ea8ad9ed7b373"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3354, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}