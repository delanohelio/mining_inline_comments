{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NzQ5OTYy", "number": 6063, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowNTowN1rOE3ozSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowNTowN1rOE3ozSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2Nzc1NjI2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/compatibility/CompatibilityManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowNTowN1rOHxGdlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowNTowN1rOHxGdlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0ODE1MA==", "bodyText": "This method is either named wrong, or does literally not what is written on the can.\nRename the method.\nAlso make this a parallel stream. With more then 1000+ entries in that list of items this should help.", "url": "https://github.com/ldtteam/minecolonies/pull/6063#discussion_r521248150", "createdAt": "2020-11-11T10:05:07Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/compatibility/CompatibilityManager.java", "diffHunk": "@@ -219,9 +225,35 @@ public void discover(final boolean serverSide)\n      */\n     private void discoverBlockList()\n     {\n-        allBlocks = ImmutableList.copyOf(StreamSupport.stream(Spliterators.spliteratorUnknownSize(ForgeRegistries.ITEMS.iterator(), Spliterator.ORDERED), false)\n+        final List<ItemStack> stacks = StreamSupport.stream(Spliterators.spliteratorUnknownSize(ForgeRegistries.ITEMS.iterator(), Spliterator.ORDERED), false)\n+                                           .filter(item -> !(item instanceof EnchantedBookItem || item instanceof PotionItem))\n                                            .map(ItemStack::new)\n-                                           .collect(Collectors.toList()));\n+                                           .collect(Collectors.toList());\n+        for(Enchantment enchantment : Registry.ENCHANTMENT)\n+        {\n+            for(int i = enchantment.getMinLevel(); i <= enchantment.getMaxLevel(); ++i)\n+            {\n+                stacks.add(getEnchantedItemStack(new EnchantmentData(enchantment, i)));\n+            }\n+        }\n+\n+        for(Potion potion : Registry.POTION)\n+        {\n+            if (potion != Potions.EMPTY)\n+            {\n+                stacks.add(PotionUtils.addPotionToItemStack(new ItemStack(Items.POTION), potion));\n+            }\n+        }\n+\n+        for(Potion potion : Registry.POTION)\n+        {\n+            if (!potion.getEffects().isEmpty())\n+            {\n+                stacks.add(PotionUtils.addPotionToItemStack(new ItemStack(Items.TIPPED_ARROW), potion));\n+            }\n+        }\n+\n+        allBlocks = ImmutableList.copyOf(stacks);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ecde9bed1d0aa26c9772877242c0eeafac9bc35"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3387, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}