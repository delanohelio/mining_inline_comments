{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MTg3MTIy", "number": 6136, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMjo0MjowN1rOE75tXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQxOTowNzo1N1rOE8AgbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMjQ2OTQwOnYy", "diffSide": "LEFT", "path": "src/main/java/com/minecolonies/coremod/network/messages/splitting/SplitPacketMessage.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMjo0MjowN1rOH3x7vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQyMjo0NjowMVrOH3x9RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MTgzOA==", "bodyText": "comment move", "url": "https://github.com/ldtteam/minecolonies/pull/6136#discussion_r528251838", "createdAt": "2020-11-21T22:42:07Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/splitting/SplitPacketMessage.java", "diffHunk": "@@ -111,20 +112,21 @@ public void onExecute(final NetworkEvent.Context ctxIn, final boolean isLogicalS\n \n             //Create a message.\n             final IMessage message = messageEntry.getCreator().get();\n+            final LogicalSide packetOrigin = ctxIn.getDirection().getOriginationSide();\n+\n+            // boolean param MUST equals true if packet arrived at logical server\n+            if (message.getExecutionSide() != null && packetOrigin.equals(message.getExecutionSide()))\n+            {\n+                Log.getLogger().warn(\"Receving {} at wrong side!\", message.getClass().getName());\n+                return;\n+            }\n \n             //Create a new buffer that reads from the packet data and then deserialize the inner message.\n             final ByteBuf buffer = Unpooled.wrappedBuffer(packetData);\n             message.fromBytes(new PacketBuffer(buffer));\n             buffer.release();\n \n             //Execute the message.\n-            final LogicalSide packetOrigin = ctxIn.getDirection().getOriginationSide();\n-            if (message.getExecutionSide() != null && packetOrigin.equals(message.getExecutionSide()))\n-            {\n-                Log.getLogger().warn(\"Receving {} at wrong side!\", message.getClass().getName());\n-                return;\n-            }\n-            // boolean param MUST equals true if packet arrived at logical server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c3b05af16aed6fa5bdb925edbec83165ff5361f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MjIyOQ==", "bodyText": "I undid this afaik", "url": "https://github.com/ldtteam/minecolonies/pull/6136#discussion_r528252229", "createdAt": "2020-11-21T22:46:01Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/splitting/SplitPacketMessage.java", "diffHunk": "@@ -111,20 +112,21 @@ public void onExecute(final NetworkEvent.Context ctxIn, final boolean isLogicalS\n \n             //Create a message.\n             final IMessage message = messageEntry.getCreator().get();\n+            final LogicalSide packetOrigin = ctxIn.getDirection().getOriginationSide();\n+\n+            // boolean param MUST equals true if packet arrived at logical server\n+            if (message.getExecutionSide() != null && packetOrigin.equals(message.getExecutionSide()))\n+            {\n+                Log.getLogger().warn(\"Receving {} at wrong side!\", message.getClass().getName());\n+                return;\n+            }\n \n             //Create a new buffer that reads from the packet data and then deserialize the inner message.\n             final ByteBuf buffer = Unpooled.wrappedBuffer(packetData);\n             message.fromBytes(new PacketBuffer(buffer));\n             buffer.release();\n \n             //Execute the message.\n-            final LogicalSide packetOrigin = ctxIn.getDirection().getOriginationSide();\n-            if (message.getExecutionSide() != null && packetOrigin.equals(message.getExecutionSide()))\n-            {\n-                Log.getLogger().warn(\"Receving {} at wrong side!\", message.getClass().getName());\n-                return;\n-            }\n-            // boolean param MUST equals true if packet arrived at logical server", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODI1MTgzOA=="}, "originalCommit": {"oid": "4c3b05af16aed6fa5bdb925edbec83165ff5361f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMzU3MjQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/util/BackUpHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQxODo1Njo1NlrOH36Tyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQxODo1Njo1NlrOH36Tyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM4OTA2Nw==", "bodyText": "revert this, was there for a reason namely loading .deleted file colony backups", "url": "https://github.com/ldtteam/minecolonies/pull/6136#discussion_r528389067", "createdAt": "2020-11-22T18:56:56Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/util/BackUpHelper.java", "diffHunk": "@@ -305,19 +312,20 @@ public static void loadAllBackups()\n      * @param loadDeleted whether to load deleted colonies aswell.\n      * @param claimChunks if chunks shall be claimed on loading.\n      */\n-    public static void loadColonyBackup(final int colonyId, final ResourceLocation dimension, boolean loadDeleted, boolean claimChunks)\n+    public static void loadColonyBackup(final int colonyId, final RegistryKey<World> dimension, boolean loadDeleted, boolean claimChunks)\n     {\n         @NotNull final File saveDir = new File(ServerLifecycleHooks.getCurrentServer().func_240776_a_(FolderName.DOT).toFile(), FILENAME_MINECOLONIES_PATH);\n-        CompoundNBT compound = loadNBTFromPath(new File(saveDir, String.format(FILENAME_COLONY, colonyId, dimension)));\n+        @NotNull final File backupFile = new File(saveDir, String.format(FILENAME_COLONY, colonyId, dimension.getLocation()));\n+        CompoundNBT compound = loadNBTFromPath(backupFile);\n         if (compound == null)\n         {\n             if (loadDeleted)\n             {\n-                compound = loadNBTFromPath(new File(saveDir, String.format(FILENAME_COLONY_DELETED, colonyId, dimension)));\n+                compound = loadNBTFromPath(backupFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc5c80987a9a08a433b5b7406eb380672d194ad"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMzU4MzE3OnYy", "diffSide": "LEFT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingBaker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQxOTowNzo1N1rOH36ZDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQxOTowNzo1N1rOH36ZDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MDQxMg==", "bodyText": "was this stuff just unused? if not probably should port that to 1.15 aswell", "url": "https://github.com/ldtteam/minecolonies/pull/6136#discussion_r528390412", "createdAt": "2020-11-22T19:07:57Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingBaker.java", "diffHunk": "@@ -157,32 +132,6 @@ protected boolean keepFood()\n         return new JobBaker(citizen);\n     }\n \n-    @Override\n-    public void deserializeNBT(final CompoundNBT compound)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc5c80987a9a08a433b5b7406eb380672d194ad"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3406, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}