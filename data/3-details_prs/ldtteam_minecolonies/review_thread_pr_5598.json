{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MDQzNzQ2", "number": 5598, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwODowMDozNFrOEZXBgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwODowNDoxNVrOEZXGcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDI3MDc0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuildingWorker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwODowMDozNFrOHCIAkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjoyOToyOVrOHCcfzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk5MDQxNg==", "bodyText": "this should probably go into the crafter building", "url": "https://github.com/ldtteam/minecolonies/pull/5598#discussion_r471990416", "createdAt": "2020-08-18T08:00:34Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuildingWorker.java", "diffHunk": "@@ -207,6 +207,20 @@\n     @NotNull\n     Skill getSecondarySkill();\n \n+    /**\n+     * Crafting Speed skill\n+     * @return the crafting speed skill\n+     */\n+    @NotNull\n+    Skill getCraftSpeedSkill();\n+\n+    /**\n+     *  Recipe Improvement skill getter\n+     * @return the recipe improvement skill\n+     */\n+    @NotNull\n+    Skill getRecipeImprovementSkill();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a558468b92384d419b3708dd3628743410c9505"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyNjA5Mw==", "bodyText": "done.", "url": "https://github.com/ldtteam/minecolonies/pull/5598#discussion_r472326093", "createdAt": "2020-08-18T16:29:29Z", "author": {"login": "Mekle001"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuildingWorker.java", "diffHunk": "@@ -207,6 +207,20 @@\n     @NotNull\n     Skill getSecondarySkill();\n \n+    /**\n+     * Crafting Speed skill\n+     * @return the crafting speed skill\n+     */\n+    @NotNull\n+    Skill getCraftSpeedSkill();\n+\n+    /**\n+     *  Recipe Improvement skill getter\n+     * @return the recipe improvement skill\n+     */\n+    @NotNull\n+    Skill getRecipeImprovementSkill();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk5MDQxNg=="}, "originalCommit": {"oid": "1a558468b92384d419b3708dd3628743410c9505"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDI4MzM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingDyer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwODowNDoxNVrOHCIIXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNToyOTowMFrOHCaAqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk5MjQxMw==", "bodyText": "I think we should wait for the multithreaded simulation solution before doing this. This can get extremely expensive. If this is executed every call. The same thing for the \"inWarehouse\" general solution. I think we should wait for the threaded solution first before we take this step.", "url": "https://github.com/ldtteam/minecolonies/pull/5598#discussion_r471992413", "createdAt": "2020-08-18T08:04:15Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingDyer.java", "diffHunk": "@@ -196,6 +208,68 @@ public void requestUpgrade(final PlayerEntity player, final BlockPos builder)\n         super.requestUpgrade(player, builder);\n     }\n \n+    @Override\n+    public IRecipeStorage getFirstRecipe(Predicate<ItemStack> stackPredicate)\n+    {\n+        IRecipeStorage recipe = super.getFirstRecipe(stackPredicate);\n+\n+        if(recipe == null && stackPredicate.test(new ItemStack(Items.WHITE_WOOL)))\n+        {\n+            final ResourceLocation wool = new ResourceLocation(\"minecraft\", \"wool\");\n+            final HashMap<ItemStorage, Integer> inventoryCounts = new HashMap<>();\n+\n+            final Set<IBuilding> wareHouses = colony.getBuildingManager().getBuildings().values().stream()\n+                                                    .filter(building -> building instanceof BuildingWareHouse)\n+                                                    .collect(Collectors.toSet());\n+            \n+            final List<ItemStorage> woolItems = ItemTags.getCollection().getOrCreate(wool).getAllElements().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a558468b92384d419b3708dd3628743410c9505"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI4NTM1Mg==", "bodyText": "It's actually pretty fast. In the dyer case it ONLY queries the warehouse when trying to produce white wool. And I just submitted a change to only query the warehouse in the general case when there are duplicate output recipes.", "url": "https://github.com/ldtteam/minecolonies/pull/5598#discussion_r472285352", "createdAt": "2020-08-18T15:29:00Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingDyer.java", "diffHunk": "@@ -196,6 +208,68 @@ public void requestUpgrade(final PlayerEntity player, final BlockPos builder)\n         super.requestUpgrade(player, builder);\n     }\n \n+    @Override\n+    public IRecipeStorage getFirstRecipe(Predicate<ItemStack> stackPredicate)\n+    {\n+        IRecipeStorage recipe = super.getFirstRecipe(stackPredicate);\n+\n+        if(recipe == null && stackPredicate.test(new ItemStack(Items.WHITE_WOOL)))\n+        {\n+            final ResourceLocation wool = new ResourceLocation(\"minecraft\", \"wool\");\n+            final HashMap<ItemStorage, Integer> inventoryCounts = new HashMap<>();\n+\n+            final Set<IBuilding> wareHouses = colony.getBuildingManager().getBuildings().values().stream()\n+                                                    .filter(building -> building instanceof BuildingWareHouse)\n+                                                    .collect(Collectors.toSet());\n+            \n+            final List<ItemStorage> woolItems = ItemTags.getCollection().getOrCreate(wool).getAllElements().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk5MjQxMw=="}, "originalCommit": {"oid": "1a558468b92384d419b3708dd3628743410c9505"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3425, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}