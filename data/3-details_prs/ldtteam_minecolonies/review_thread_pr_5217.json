{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzOTIxODEx", "number": 5217, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDoyNjo0MVrOEFj15Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo0NjoxNlrOEFkZHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjY1NTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/Colony.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDoyNjo0MVrOGj0nAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzo1NTowOFrOGl6Kvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxNTI5OA==", "bodyText": "I think teams are not per-world, so we probably should add colony id + colony dimension to avoid future problems", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440215298", "createdAt": "2020-06-15T14:26:41Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/Colony.java", "diffHunk": "@@ -493,16 +498,24 @@ public void updateAttackingPlayers()\n         }\n     }\n \n+    @Override\n+    public ScorePlayerTeam getTeam()\n+    {\n+        // This getter will create the team if it doesn't exist. Could do something different though in the future.\n+        return checkOrCreateTeam();\n+    }\n+\n     /**\n      * Check or create the team.\n      */\n-    private void checkOrCreateTeam()\n+    private ScorePlayerTeam checkOrCreateTeam()\n     {\n         if (this.world.getScoreboard().getTeam(TEAM_COLONY_NAME + id) == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxOTUzOA==", "bodyText": "I have not changed this, it was \"always\" this way.\nAccording to https://minecraft.gamepedia.com/Scoreboard#NBT_format, it seems that the Scoreboard, and thereby the teams, are dimension-agnostic. I hope that colony IDs are unique across multiple dimensions as well?", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440419538", "createdAt": "2020-06-15T20:11:35Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/colony/Colony.java", "diffHunk": "@@ -493,16 +498,24 @@ public void updateAttackingPlayers()\n         }\n     }\n \n+    @Override\n+    public ScorePlayerTeam getTeam()\n+    {\n+        // This getter will create the team if it doesn't exist. Could do something different though in the future.\n+        return checkOrCreateTeam();\n+    }\n+\n     /**\n      * Check or create the team.\n      */\n-    private void checkOrCreateTeam()\n+    private ScorePlayerTeam checkOrCreateTeam()\n     {\n         if (this.world.getScoreboard().getTeam(TEAM_COLONY_NAME + id) == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxNTI5OA=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyODAyNQ==", "bodyText": "colony ID's arent unique for dimensions, need dimension+colony ID. And ye I saw that it was like that before, but while you're on changing it we should probably add the dimension ID to it", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440428025", "createdAt": "2020-06-15T20:28:31Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/Colony.java", "diffHunk": "@@ -493,16 +498,24 @@ public void updateAttackingPlayers()\n         }\n     }\n \n+    @Override\n+    public ScorePlayerTeam getTeam()\n+    {\n+        // This getter will create the team if it doesn't exist. Could do something different though in the future.\n+        return checkOrCreateTeam();\n+    }\n+\n     /**\n      * Check or create the team.\n      */\n-    private void checkOrCreateTeam()\n+    private ScorePlayerTeam checkOrCreateTeam()\n     {\n         if (this.world.getScoreboard().getTeam(TEAM_COLONY_NAME + id) == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxNTI5OA=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwMzUxOQ==", "bodyText": "Fixed in 1123994 and e54bba8.", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r442403519", "createdAt": "2020-06-18T17:55:08Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/colony/Colony.java", "diffHunk": "@@ -493,16 +498,24 @@ public void updateAttackingPlayers()\n         }\n     }\n \n+    @Override\n+    public ScorePlayerTeam getTeam()\n+    {\n+        // This getter will create the team if it doesn't exist. Could do something different though in the future.\n+        return checkOrCreateTeam();\n+    }\n+\n     /**\n      * Check or create the team.\n      */\n-    private void checkOrCreateTeam()\n+    private ScorePlayerTeam checkOrCreateTeam()\n     {\n         if (this.world.getScoreboard().getTeam(TEAM_COLONY_NAME + id) == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIxNTI5OA=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjY5ODMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/permissions/Permissions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDozNTo1NVrOGj1BVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzo1NTozMlrOGl6LoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyMjAzOA==", "bodyText": "I think we can add Officer's here too and you need to bump up the permissions version ontop on changes for backwards compat stuff", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440222038", "createdAt": "2020-06-15T14:35:55Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/permissions/Permissions.java", "diffHunk": "@@ -136,7 +136,7 @@ public Permissions(@NotNull final Colony colony)\n         this.setPermission(Rank.OWNER, Action.TELEPORT_TO_COLONY);\n         this.setPermission(Rank.OWNER, Action.RECEIVE_MESSAGES_FAR_AWAY);\n         this.setPermission(Rank.OWNER, Action.CAN_KEEP_COLONY_ACTIVE_WHILE_AWAY);\n-\n+        this.setPermission(Rank.OWNER, Action.RALLY_GUARDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwMzc0NQ==", "bodyText": "Changed in 6a08fe3.", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r442403745", "createdAt": "2020-06-18T17:55:32Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/colony/permissions/Permissions.java", "diffHunk": "@@ -136,7 +136,7 @@ public Permissions(@NotNull final Colony colony)\n         this.setPermission(Rank.OWNER, Action.TELEPORT_TO_COLONY);\n         this.setPermission(Rank.OWNER, Action.RECEIVE_MESSAGES_FAR_AWAY);\n         this.setPermission(Rank.OWNER, Action.CAN_KEEP_COLONY_ACTIVE_WHILE_AWAY);\n-\n+        this.setPermission(Rank.OWNER, Action.RALLY_GUARDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyMjAzOA=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjcxMTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIFight.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDozODo0MFrOGj1JRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMToxNjoxM1rOGkDC-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyNDA2OQ==", "bodyText": "Is start working unused now? if so remove the AITarget/function", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440224069", "createdAt": "2020-06-15T14:38:40Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIFight.java", "diffHunk": "@@ -84,9 +84,9 @@ public AbstractEntityAIFight(@NotNull final J job)\n     {\n         super(job);\n         super.registerTargets(\n-          new AITarget(IDLE, START_WORKING, 1),\n+          new AITarget(IDLE, PREPARING, 1),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMjI4NA==", "bodyText": "START_WORKING is still used for regeneration and when a weapon breaks on the guard etc. I just made it not be the initial state, because that means that after server restart the guards will always go home to their hut (startWorkingFromOwnBuilding is part of that state), which would potentially kill you when a server restart happens while you're rally/fighting.\nIn any case, Ray wanted to improve the guard AI anyway - it's a little bit \"weird\" at the moment, definitely not like more modern AIs are programmed. So he will probably change this too, if he wants to.", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440422284", "createdAt": "2020-06-15T20:16:53Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIFight.java", "diffHunk": "@@ -84,9 +84,9 @@ public AbstractEntityAIFight(@NotNull final J job)\n     {\n         super(job);\n         super.registerTargets(\n-          new AITarget(IDLE, START_WORKING, 1),\n+          new AITarget(IDLE, PREPARING, 1),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyNDA2OQ=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTgzMg==", "bodyText": "ah its still used fine then", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440451832", "createdAt": "2020-06-15T21:16:13Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIFight.java", "diffHunk": "@@ -84,9 +84,9 @@ public AbstractEntityAIFight(@NotNull final J job)\n     {\n         super(job);\n         super.registerTargets(\n-          new AITarget(IDLE, START_WORKING, 1),\n+          new AITarget(IDLE, PREPARING, 1),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyNDA2OQ=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjcyNjQyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo0MjowNFrOGj1S_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzo1NzowNlrOGl6O6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyNjU1Nw==", "bodyText": "Did you consider that they use up food too when fighting?", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440226557", "createdAt": "2020-06-15T14:42:04Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -140,6 +142,11 @@\n      */\n     private static final int GUARD_REGEN_INTERVAL = 40;\n \n+    /**\n+     * Interval between saturation losses during rallying. 1 saturation loss per interval.\n+     */\n+    private static final int RALLY_SATURATION_LOSS_INTERVAL = TICKS_SECOND * 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMzgxNA==", "bodyText": "I did. That is why the saturation reduction from this mechanism is always a fraction of your current saturation, ie. when you have low saturation, it won't deduct a lot, so it's not that punishing. Actually, this mechanism alone will only affect your saturation very little when you are below 3 points or so. The point of this code is mainly to force the saturation down to <2 after ~5 minutes of idling/walking, at which point unrallying will flatly set the saturation to 0, thereby forcing them to eat.", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440423814", "createdAt": "2020-06-15T20:20:06Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -140,6 +142,11 @@\n      */\n     private static final int GUARD_REGEN_INTERVAL = 40;\n \n+    /**\n+     * Interval between saturation losses during rallying. 1 saturation loss per interval.\n+     */\n+    private static final int RALLY_SATURATION_LOSS_INTERVAL = TICKS_SECOND * 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyNjU1Nw=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ1MTY3OA==", "bodyText": "kk nice :D was just making sure you considered it", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440451678", "createdAt": "2020-06-15T21:15:54Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -140,6 +142,11 @@\n      */\n     private static final int GUARD_REGEN_INTERVAL = 40;\n \n+    /**\n+     * Interval between saturation losses during rallying. 1 saturation loss per interval.\n+     */\n+    private static final int RALLY_SATURATION_LOSS_INTERVAL = TICKS_SECOND * 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyNjU1Nw=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwNDU4Ng==", "bodyText": "I changed the penalty a little bit in e54bba8. It will now reduce the saturation even slower (after about 5 minutes you reach LOW_SATURATION (which is 3 currently), but the flat reduction on unrallying is also increased to LOW_SATURATION. So, they fight longer, but will more likely have to eat after rallying.", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r442404586", "createdAt": "2020-06-18T17:57:06Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -140,6 +142,11 @@\n      */\n     private static final int GUARD_REGEN_INTERVAL = 40;\n \n+    /**\n+     * Interval between saturation losses during rallying. 1 saturation loss per interval.\n+     */\n+    private static final int RALLY_SATURATION_LOSS_INTERVAL = TICKS_SECOND * 10;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyNjU1Nw=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Mjc0NTkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo0NjoxNlrOGj1fGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo0MzoyM1rOGlYdVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyOTY1OQ==", "bodyText": "think we should check if a potion effect already exists before applying a new one", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440229659", "createdAt": "2020-06-15T14:46:16Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -537,13 +600,30 @@ private IAIState helping()\n     }\n \n     /**\n-     * Decide what we should do next! Ticked once every 20 Ticks\n+     * Decide what we should do next! Ticked once every GUARD_TASK_INTERVAL Ticks\n      *\n      * @return the next IAIState.\n      */\n     protected IAIState decide()\n     {\n         reduceAttackDelay(GUARD_TASK_INTERVAL * getTickRate());\n+\n+        final ILocation rallyLocation = buildingGuards.getRallyLocation();\n+\n+        if (rallyLocation != null || buildingGuards.getTask() == GuardTask.FOLLOW)\n+        {\n+            worker.addPotionEffect(new EffectInstance(GLOW_EFFECT, GLOW_EFFECT_DURATION, GLOW_EFFECT_MULTIPLIER, false, false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNjQ3MQ==", "bodyText": "The Follow-code didn't do that either, and as far as I understand, adding potion effects ontop of existing ones will simply extend the duration.\nSo, as far as I understand it, checking for the potion effect will only cost performance without doing anything meaningful.", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440426471", "createdAt": "2020-06-15T20:25:34Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -537,13 +600,30 @@ private IAIState helping()\n     }\n \n     /**\n-     * Decide what we should do next! Ticked once every 20 Ticks\n+     * Decide what we should do next! Ticked once every GUARD_TASK_INTERVAL Ticks\n      *\n      * @return the next IAIState.\n      */\n     protected IAIState decide()\n     {\n         reduceAttackDelay(GUARD_TASK_INTERVAL * getTickRate());\n+\n+        final ILocation rallyLocation = buildingGuards.getRallyLocation();\n+\n+        if (rallyLocation != null || buildingGuards.getTask() == GuardTask.FOLLOW)\n+        {\n+            worker.addPotionEffect(new EffectInstance(GLOW_EFFECT, GLOW_EFFECT_DURATION, GLOW_EFFECT_MULTIPLIER, false, false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyOTY1OQ=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg3NjM0NQ==", "bodyText": "actually the applying is more expensive than checking for existing, since applying involves events fired for other mods which listen to potion stuff. And some of those mods checks are rather laggy, thats why xD", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r440876345", "createdAt": "2020-06-16T14:03:19Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -537,13 +600,30 @@ private IAIState helping()\n     }\n \n     /**\n-     * Decide what we should do next! Ticked once every 20 Ticks\n+     * Decide what we should do next! Ticked once every GUARD_TASK_INTERVAL Ticks\n      *\n      * @return the next IAIState.\n      */\n     protected IAIState decide()\n     {\n         reduceAttackDelay(GUARD_TASK_INTERVAL * getTickRate());\n+\n+        final ILocation rallyLocation = buildingGuards.getRallyLocation();\n+\n+        if (rallyLocation != null || buildingGuards.getTask() == GuardTask.FOLLOW)\n+        {\n+            worker.addPotionEffect(new EffectInstance(GLOW_EFFECT, GLOW_EFFECT_DURATION, GLOW_EFFECT_MULTIPLIER, false, false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyOTY1OQ=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg0ODQ4Nw==", "bodyText": "I understand, but simply adding the if-clause would cause stutter-glowing. The decide() function is only called once every 5 seconds. If the effect runs out 1 second after the last check, the guard will stop glowing for 4 seconds, and then light up again. Is it worth adding logic to check the remaining time of the effect vs. the time until the next check?", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r441848487", "createdAt": "2020-06-17T21:37:08Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -537,13 +600,30 @@ private IAIState helping()\n     }\n \n     /**\n-     * Decide what we should do next! Ticked once every 20 Ticks\n+     * Decide what we should do next! Ticked once every GUARD_TASK_INTERVAL Ticks\n      *\n      * @return the next IAIState.\n      */\n     protected IAIState decide()\n     {\n         reduceAttackDelay(GUARD_TASK_INTERVAL * getTickRate());\n+\n+        final ILocation rallyLocation = buildingGuards.getRallyLocation();\n+\n+        if (rallyLocation != null || buildingGuards.getTask() == GuardTask.FOLLOW)\n+        {\n+            worker.addPotionEffect(new EffectInstance(GLOW_EFFECT, GLOW_EFFECT_DURATION, GLOW_EFFECT_MULTIPLIER, false, false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyOTY1OQ=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1MTIyMQ==", "bodyText": "once every 5 seconds should be finne.", "url": "https://github.com/ldtteam/minecolonies/pull/5217#discussion_r441851221", "createdAt": "2020-06-17T21:43:23Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/guard/AbstractEntityAIGuard.java", "diffHunk": "@@ -537,13 +600,30 @@ private IAIState helping()\n     }\n \n     /**\n-     * Decide what we should do next! Ticked once every 20 Ticks\n+     * Decide what we should do next! Ticked once every GUARD_TASK_INTERVAL Ticks\n      *\n      * @return the next IAIState.\n      */\n     protected IAIState decide()\n     {\n         reduceAttackDelay(GUARD_TASK_INTERVAL * getTickRate());\n+\n+        final ILocation rallyLocation = buildingGuards.getRallyLocation();\n+\n+        if (rallyLocation != null || buildingGuards.getTask() == GuardTask.FOLLOW)\n+        {\n+            worker.addPotionEffect(new EffectInstance(GLOW_EFFECT, GLOW_EFFECT_DURATION, GLOW_EFFECT_MULTIPLIER, false, false));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyOTY1OQ=="}, "originalCommit": {"oid": "13e24fd190f661e74cf01022779a8ed18f17668c"}, "originalPosition": 217}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3105, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}