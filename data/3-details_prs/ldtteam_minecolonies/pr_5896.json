{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNDM2MzE5", "number": 5896, "title": "Feature/immutable storage", "bodyText": "Closes #5721\nChanges proposed in this pull request:\n\nFixes smelter recipes increasing in cost exponentially\nAdds code to prevent this kind of bug in the future\n\n\nReview please", "createdAt": "2020-10-09T08:34:19Z", "url": "https://github.com/ldtteam/minecolonies/pull/5896", "merged": true, "mergeCommit": {"oid": "f84399f4c206424a010e3b418b32de6338700bd4"}, "closed": true, "closedAt": "2020-10-11T10:14:48Z", "author": {"login": "Raycoms"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQAK52AH2gAyNTAwNDM2MzE5OmI1OWEwYzIzN2VmNzIyZjAzODg0NDM4NmYyMjA3YmQ5ZjBjYTViMjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRcj_WAFqTUwNjE2NDE1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b59a0c237ef722f038844386f2207bd9f0ca5b20", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/b59a0c237ef722f038844386f2207bd9f0ca5b20", "committedDate": "2020-10-06T22:31:56Z", "message": "adjust"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c898861587b1dd75b030043d6fd59c3af35eed25", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/c898861587b1dd75b030043d6fd59c3af35eed25", "committedDate": "2020-10-06T22:32:00Z", "message": "Add an Immutable Itemstorage version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/4cfadee92f5a951829a4caddaa348d1548ff0797", "committedDate": "2020-10-07T14:34:30Z", "message": "remove the copy here"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTE4NzEz", "url": "https://github.com/ldtteam/minecolonies/pull/5896#pullrequestreview-505518713", "createdAt": "2020-10-09T09:40:47Z", "commit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTo0MDo0N1rOHfCqPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwOTo0MDo0N1rOHfCqPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxMTQ4Ng==", "bodyText": "So question, could we make this throw an exception in dev, but simply log an error in prod?\njust so we don't get crashes at least during prod if it's somehow missed in dev.\notherwise looks great", "url": "https://github.com/ldtteam/minecolonies/pull/5896#discussion_r502311486", "createdAt": "2020-10-09T09:40:47Z", "author": {"login": "Asherslab"}, "path": "src/api/java/com/minecolonies/api/crafting/ImmutableItemStorage.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.minecolonies.api.crafting;\n+\n+import net.minecraft.item.ItemStack;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Immutable ItemStorage version.\n+ */\n+public class ImmutableItemStorage extends ItemStorage\n+{\n+    /**\n+     * Creates an instance of the storage.\n+     *\n+     * @param storage the mutable itemstorage to create it from.\n+     */\n+    public ImmutableItemStorage(@NotNull final ItemStorage storage)\n+    {\n+        super(storage.getItemStack(), storage.ignoreDamageValue(), storage.ignoreNBT());\n+        super.setAmount(storage.getAmount());\n+    }\n+\n+    @Override\n+    public void setAmount(final int amount)\n+    {\n+        throw new UnsupportedOperationException(\"Immutable instance of ItemStorage can't set value!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NjE0MTQy", "url": "https://github.com/ldtteam/minecolonies/pull/5896#pullrequestreview-505614142", "createdAt": "2020-10-09T12:11:37Z", "commit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjoxMTozN1rOHfHEcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjoxMTozN1rOHfHEcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM4MzcyOQ==", "bodyText": "its nice that the setamount can now be immutable, but wasnt the most common problem that the internal stack got modified? which we still can do with this version. should we maybe make an ItemStack wrapper for that case?", "url": "https://github.com/ldtteam/minecolonies/pull/5896#discussion_r502383729", "createdAt": "2020-10-09T12:11:37Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/crafting/ImmutableItemStorage.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.minecolonies.api.crafting;\n+\n+import net.minecraft.item.ItemStack;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Immutable ItemStorage version.\n+ */\n+public class ImmutableItemStorage extends ItemStorage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NzY1NTEw", "url": "https://github.com/ldtteam/minecolonies/pull/5896#pullrequestreview-505765510", "createdAt": "2020-10-09T15:12:15Z", "commit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNToxMjoxNlrOHfOGpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNToxNjowN1rOHfOQOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5ODk4MQ==", "bodyText": "I know we'd talked about possibly doing some corruption checks on the retrieval of the item stack from the ItemStorage. It should be as simple as checking that if the amount is less than maxstack, the count == amount, etc..\nAt least then we'd have early warning that the internal stack was getting modified when it shouldn't be.", "url": "https://github.com/ldtteam/minecolonies/pull/5896#discussion_r502498981", "createdAt": "2020-10-09T15:12:16Z", "author": {"login": "Mekle001"}, "path": "src/api/java/com/minecolonies/api/crafting/ImmutableItemStorage.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.minecolonies.api.crafting;\n+\n+import net.minecraft.item.ItemStack;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Immutable ItemStorage version.\n+ */\n+public class ImmutableItemStorage extends ItemStorage", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM4MzcyOQ=="}, "originalCommit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5OTkzMw==", "bodyText": "To be clear, this is 'corruption' is in-memory only, at least in the scenarios we've seen so far, since it's been on non-persisted ItemStorages. Correct?", "url": "https://github.com/ldtteam/minecolonies/pull/5896#discussion_r502499933", "createdAt": "2020-10-09T15:13:48Z", "author": {"login": "Mekle001"}, "path": "src/api/java/com/minecolonies/api/crafting/ImmutableItemStorage.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package com.minecolonies.api.crafting;\n+\n+import net.minecraft.item.ItemStack;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Immutable ItemStorage version.\n+ */\n+public class ImmutableItemStorage extends ItemStorage\n+{\n+    /**\n+     * Creates an instance of the storage.\n+     *\n+     * @param storage the mutable itemstorage to create it from.\n+     */\n+    public ImmutableItemStorage(@NotNull final ItemStorage storage)\n+    {\n+        super(storage.getItemStack(), storage.ignoreDamageValue(), storage.ignoreNBT());\n+        super.setAmount(storage.getAmount());\n+    }\n+\n+    @Override\n+    public void setAmount(final int amount)\n+    {\n+        throw new UnsupportedOperationException(\"Immutable instance of ItemStorage can't set value!\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjMxMTQ4Ng=="}, "originalCommit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUwMTQzMg==", "bodyText": "I get why you're doing this, and overall I love this change. I'm not looking forward to the merge conflict with my version that adds multiple outputs and predetermined secondary outputs based asking the IRecipe for them, etc.", "url": "https://github.com/ldtteam/minecolonies/pull/5896#discussion_r502501432", "createdAt": "2020-10-09T15:16:07Z", "author": {"login": "Mekle001"}, "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -137,22 +149,23 @@ public boolean canFullFillRecipe(final int qty, @NotNull final IItemHandler... i\n         final int neededMultiplier = CraftingUtils.calculateMaxCraftingCount(qty, this);\n         final List<ItemStorage> items = getCleanedInput();\n \n-        for (final ItemStorage stack : items)\n+        for (final ItemStorage storage : items)\n         {\n+            final ItemStack stack = storage.getItemStack();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTAxMzI5", "url": "https://github.com/ldtteam/minecolonies/pull/5896#pullrequestreview-506101329", "createdAt": "2020-10-10T14:26:49Z", "commit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTY0MTUy", "url": "https://github.com/ldtteam/minecolonies/pull/5896#pullrequestreview-506164152", "createdAt": "2020-10-11T10:10:36Z", "commit": {"oid": "4cfadee92f5a951829a4caddaa348d1548ff0797"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1762, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}