{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMTU0NzY4", "number": 5905, "title": "Multi-Output recipes, and reliable secondary outputs", "bodyText": "Changes proposed in this pull request:\n\nAdd support for multi-output recipes, so that one recipe can create all variants of one timber block\nAdd support for custom recipes to require that the recipe 'exists' to be valid\n\nThis enables a multi-output recipe to replace a classic recipe in which the inputs match\nWhen a multi-output replaces, it also looks for classic recipes who have outputs that are alternate in the multi-recipe and removes them\n\n\nAdd support for multi-recipes to cycle through the outputs in the recipe list in buildings\nAdd ability to capture actual secondary outputs (stay in grid) from recipes as they are being taught, This increases compatibility with many mod recipes, including aquaculture fish fillets.\nSome minor tweaks to display of the request tree in buildings, to make crafting jobs a bit clearer\nFix Combat Academy and Archery to mark beds as unoccupied on wake up, letting the residents sleep the next night\nuse Localizable strings for Combat Academy and Archery\nEnsure that multi recipes replace simple recipes, and that they update when they change\nChange all of the lumberjack recipes to be multi-recipes. They are now Log -> [Stripped Log, Wood, Stripped Wood]\n\nReview please", "createdAt": "2020-10-11T15:21:09Z", "url": "https://github.com/ldtteam/minecolonies/pull/5905", "merged": true, "mergeCommit": {"oid": "db8f0e9e1dcf0300a3cb43d372302e0eba0cf5e2"}, "closed": true, "closedAt": "2020-10-20T08:29:19Z", "author": {"login": "Mekle001"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRgthfAH2gAyNTAxMTU0NzY4OjYwNzcyYTRkMDQ4MmMyOWZiOWY4ZTQwMzZiZDdjNTdmZjk4ZjQ4MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUUeZ_AFqTUxMjQ1NTMzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "60772a4d0482c29fb9f8e4036bd7c57ff98f4801", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/60772a4d0482c29fb9f8e4036bd7c57ff98f4801", "committedDate": "2020-10-11T15:00:38Z", "message": "Use factory for recipe creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbdf29752f56bd9184dbfc94ace62fd51272e7ac", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/fbdf29752f56bd9184dbfc94ace62fd51272e7ac", "committedDate": "2020-10-11T15:00:38Z", "message": "Add type, source and multioutput to recipestorage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eba760908cab795b5c2df74a1763522fd2ec0cd", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/2eba760908cab795b5c2df74a1763522fd2ec0cd", "committedDate": "2020-10-11T15:00:38Z", "message": "Mark recipe with source for custom recipes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f44789a5581e7e09b1f3f2d68bd5b814990fa057", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/f44789a5581e7e09b1f3f2d68bd5b814990fa057", "committedDate": "2020-10-11T15:00:39Z", "message": "Tweak building counting to handle hut block"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87592135f58ff47fbf06a44a647d7afb6663619c", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/87592135f58ff47fbf06a44a647d7afb6663619c", "committedDate": "2020-10-11T15:00:39Z", "message": "enhance display of requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "867ea2ec0ff02d498cffafce3178a8bc986a615a", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/867ea2ec0ff02d498cffafce3178a8bc986a615a", "committedDate": "2020-10-11T15:04:08Z", "message": "core supportfor multi output and secondary output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e2081747a6852ee5667db9761dedf4affebeeb1", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/2e2081747a6852ee5667db9761dedf4affebeeb1", "committedDate": "2020-10-11T15:05:45Z", "message": "full multi-output and secondary output support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ed3f2eaccbd7365b423b3f0f566bdf6a36bff9c", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/1ed3f2eaccbd7365b423b3f0f566bdf6a36bff9c", "committedDate": "2020-10-11T15:05:49Z", "message": "Multi-output decorative block recipes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6837e06dfce3b47fa6aed12bdb187bbace35aadd", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/6837e06dfce3b47fa6aed12bdb187bbace35aadd", "committedDate": "2020-10-11T15:05:50Z", "message": "Don't create build tools out of thin air"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "063b2f1d7ed475f768c821cea88e2684de401a8c", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/063b2f1d7ed475f768c821cea88e2684de401a8c", "committedDate": "2020-10-11T19:14:01Z", "message": "clean up Furnace teaching a bit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f3083583d7f05967a499e1129dde2cfc507bb81", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/0f3083583d7f05967a499e1129dde2cfc507bb81", "committedDate": "2020-10-11T19:28:21Z", "message": "Minor recipe fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "051b7f1ddb3934dbd25d3f0cb5f312bd450e89b7", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/051b7f1ddb3934dbd25d3f0cb5f312bd450e89b7", "committedDate": "2020-10-12T00:11:42Z", "message": "Make sure beds are available in training facility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac9290c209903698ff96ac2870522ff2667ad572", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/ac9290c209903698ff96ac2870522ff2667ad572", "committedDate": "2020-10-12T00:12:14Z", "message": "Make Training facility job names localizable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbf752a61110c87b9ae4ae85dd1a8e1625b92155", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/bbf752a61110c87b9ae4ae85dd1a8e1625b92155", "committedDate": "2020-10-12T00:12:42Z", "message": "Minor cleanup around item pickup for crafters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/963f76978e4724fcb8052b85d225f4a0a12ea26f", "committedDate": "2020-10-12T04:45:11Z", "message": "Fix bad recipe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzcyMDI0", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-506372024", "createdAt": "2020-10-12T07:50:00Z", "commit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1MDowMFrOHfy4Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1MDowMFrOHfy4Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTQ5OQ==", "bodyText": "java.util.List?", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503101499", "createdAt": "2020-10-12T07:50:00Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/inventory/container/ContainerCrafting.java", "diffHunk": "@@ -46,6 +48,11 @@\n      */\n     private final Slot craftResultSlot;\n \n+    /**\n+     * The secondary outputs\n+     */\n+    private final java.util.List<ItemStack> remainingItems;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzcyNjAy", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-506372602", "createdAt": "2020-10-12T07:50:49Z", "commit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1MDo0OVrOHfy6Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1MDo0OVrOHfy6Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMTk3OQ==", "bodyText": "this class might not load because it has the ClientRecipeBook in SMP. have you tested this in smp?", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503101979", "createdAt": "2020-10-12T07:50:49Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/inventory/container/ContainerCrafting.java", "diffHunk": "@@ -365,4 +375,38 @@ public BlockPos getPos()\n     {\n         return pos;\n     }\n+\n+    /**\n+     * Get for the remaining items. \n+     * @return\n+     */\n+    public java.util.List<ItemStack> getRemainingItems()\n+    {\n+        final Optional<ICraftingRecipe> iRecipe = this.world.getRecipeManager().getRecipe(IRecipeType.CRAFTING, craftMatrix, world);\n+        RecipeBook r;\n+        if(world.isRemote)\n+        {\n+            r = new ClientRecipeBook(this.world.getRecipeManager());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2Mzc0MzQ0", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-506374344", "createdAt": "2020-10-12T07:53:09Z", "commit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1MzoxMFrOHfy_fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1MzoxMFrOHfy_fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwMzM1OA==", "bodyText": "why not an empty list?", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503103358", "createdAt": "2020-10-12T07:53:10Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/containers/WindowFurnaceCrafting.java", "diffHunk": "@@ -100,7 +101,7 @@ public void onPress(final Button button)\n \n                 if (!ItemStackUtils.isEmpty(primaryOutput))\n                 {\n-                    Network.getNetwork().sendToServer(new AddRemoveRecipeMessage(building, input, 1, primaryOutput, false));\n+                    Network.getNetwork().sendToServer(new AddRemoveRecipeMessage(building, input, 1, primaryOutput, null, false));\n                 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2Mzc2OTM2", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-506376936", "createdAt": "2020-10-12T07:56:47Z", "commit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1Njo0N1rOHfzHqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNzo1Njo0N1rOHfzHqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNTQ0OQ==", "bodyText": "Either we should \"break;\" at first found, or do something else, because we override firstfound with each iteration.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503105449", "createdAt": "2020-10-12T07:56:47Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -215,7 +215,12 @@ public IRecipeStorage getFirstRecipe(final Predicate<ItemStack> stackPredicate)\n                 final ItemStorage checkItem = foo.getKey().getCleanedInput().stream().max(Comparator.comparingInt(ItemStorage::getAmount)).get();\n                 candidates.put(foo.getKey(), getWarehouseCount(checkItem));\n             }\n-            return candidates.entrySet().stream().min(Map.Entry.comparingByValue(Comparator.reverseOrder())).get().getKey();\n+            firstFound = candidates.entrySet().stream().min(Map.Entry.comparingByValue(Comparator.reverseOrder())).get().getKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MzgwMDcx", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-506380071", "createdAt": "2020-10-12T08:00:39Z", "commit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMDozOVrOHfzQtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwODowMDozOVrOHfzQtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzEwNzc2NQ==", "bodyText": "isMustExist seems weird", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r503107765", "createdAt": "2020-10-12T08:00:39Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -851,16 +857,34 @@ public void checkForWorkerSpecificRecipes()\n                         }\n                         if(allMatch)\n                         {\n-                            duplicateFound = true;\n+                            duplicateFound = token;\n                             break;\n                         }\n                     }\n                 }\n-                if(!duplicateFound)\n+                if(duplicateFound == null)\n                 {\n                     addRecipeToList(recipeToken);    \n                     colony.getRequestManager().onColonyUpdate(request -> request.getRequest() instanceof IDeliverable && ((IDeliverable) request.getRequest()).matches(recipeStorage.getPrimaryOutput()));\n                 }\n+                else if(newRecipe.isMustExist() && duplicateFound != recipeToken)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963f76978e4724fcb8052b85d225f4a0a12ea26f"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74db0235fc0df991a0817724ce9d9d864f64ba98", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/74db0235fc0df991a0817724ce9d9d864f64ba98", "committedDate": "2020-10-12T13:31:43Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2261c4cda93641630d8074e14f83f2433257a79b", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/2261c4cda93641630d8074e14f83f2433257a79b", "committedDate": "2020-10-12T13:33:24Z", "message": "rename firstFound"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2695f3bbbafb2165c6734f1c0ab1b67654450daf", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/2695f3bbbafb2165c6734f1c0ab1b67654450daf", "committedDate": "2020-10-12T13:39:24Z", "message": "More PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "739701b7d3fa086d09591e92db63f470249f2832", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/739701b7d3fa086d09591e92db63f470249f2832", "committedDate": "2020-10-12T16:44:06Z", "message": "Merge branch 'version/1.15' into feature/multirecipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0941b20d25f3eeea6af177e4977b16daf87e46a", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/f0941b20d25f3eeea6af177e4977b16daf87e46a", "committedDate": "2020-10-12T20:23:17Z", "message": "Merge branch 'version/1.15' into feature/multirecipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54247e2eac45da2a9698d0b4067ef97d61eb216d", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/54247e2eac45da2a9698d0b4067ef97d61eb216d", "committedDate": "2020-10-13T01:53:44Z", "message": "Merge branch 'version/1.15' into feature/multirecipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c617f688c339422c65011b485e121cdc0d8a59b", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/9c617f688c339422c65011b485e121cdc0d8a59b", "committedDate": "2020-10-13T23:41:49Z", "message": "Let recipe changes get picked up."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44700e4d7bdb091d651999e8cf1ec8ac5aceb886", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/44700e4d7bdb091d651999e8cf1ec8ac5aceb886", "committedDate": "2020-10-13T23:43:16Z", "message": "rework the Lumberjack recipes to multi-output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/cd7d39c0f14a008ef8c185f0dc1698d5225498c0", "committedDate": "2020-10-14T04:11:42Z", "message": "Make logic consistent for counting required"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MDM0ODky", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-508034892", "createdAt": "2020-10-14T06:38:19Z", "commit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjozODoyMFrOHhESDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjo1Mzo1M1rOHhEsmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTIxMw==", "bodyText": "Why this change? Documentation is missing here. The original code makes more sense....", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504435213", "createdAt": "2020-10-14T06:38:20Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractCraftingProductionResolver.java", "diffHunk": "@@ -148,13 +148,13 @@ protected boolean canBuildingCraftStack(@NotNull final IRequestManager manager,\n                 {\n                     materialRequests.add(createNewRequestForStack(manager, craftingHelperStack, ingredient.getAmount(), ingredient.getAmount()));\n                 }\n-                else if (!ItemStackUtils.isEmpty(container) && ItemStackUtils.compareItemStacksIgnoreStackSize(container, craftingHelperStack, false, true))\n+                else if (ItemStackUtils.isEmpty(container) || ItemStackUtils.compareItemStacksIgnoreStackSize(container, craftingHelperStack, false, true))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTQ4OQ==", "bodyText": "Again this change. These kind of suttle changes need to be documented if it is not a hotfix.\nWhy? This logic does not seem to make sense to me.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504435489", "createdAt": "2020-10-14T06:38:57Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "diffHunk": "@@ -173,13 +175,13 @@ protected IAIState getRecipe()\n             {\n                 remaining = inputStorage.getAmount();\n             }\n-            else if (!ItemStackUtils.isEmpty(container) && ItemStackUtils.compareItemStacksIgnoreStackSize(inputStorage.getItemStack(), container , false, true))\n+            else if (ItemStackUtils.isEmpty(container) || !ItemStackUtils.compareItemStacksIgnoreStackSize(inputStorage.getItemStack(), container , false, true))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNTg2Nw==", "bodyText": "and again! Here it is even worse, Since here the second part of the OR-Clause has a negation but in the previous cases where you patches this it did not. Why was this changed?", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504435867", "createdAt": "2020-10-14T06:39:45Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAICrafting.java", "diffHunk": "@@ -251,13 +253,13 @@ protected IAIState checkForItems(@NotNull final IRecipeStorage storage)\n             {\n                 remaining = inputStorage.getAmount();\n             }\n-            else if(!ItemStackUtils.isEmpty(container) && ItemStackUtils.compareItemStacksIgnoreStackSize(inputStorage.getItemStack(), container , false, true))\n+            else if(ItemStackUtils.isEmpty(container) || !ItemStackUtils.compareItemStacksIgnoreStackSize(inputStorage.getItemStack(), container , false, true))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjE1MA==", "bodyText": "Not expandable!\nThis is part of the API. ENUMS are basically a nogo here.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504436150", "createdAt": "2020-10-14T06:40:25Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/IRecipeStorage.java", "diffHunk": "@@ -8,12 +8,22 @@\n \n import java.util.Arrays;\n import java.util.List;\n+import java.util.function.Predicate;\n \n /**\n  * Interface which describes the RecipeStorage.\n  */\n public interface IRecipeStorage\n {\n+    /**\n+     * Enum of the different types of storage\n+     */\n+    public enum RecipeStorageType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjUzNg==", "bodyText": "Documentation is not updated. What is source?", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504436536", "createdAt": "2020-10-14T06:41:23Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/IRecipeStorageFactory.java", "diffHunk": "@@ -70,6 +83,11 @@ RecipeStorage getNewInstance(\n       @NotNull final List<ItemStack> input,\n       final int gridSize,\n       @NotNull final ItemStack primaryOutput,\n-      @Nullable final Block intermediate);\n+      @Nullable final Block intermediate,\n+      @Nullable final String source,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjkwMQ==", "bodyText": "If this is supposed to be a registry name, or reference one, Make it return a ResourceLocation instead,\nIf the return value is optional, mark it with @Nullable or return an optional and make the use of it like a functional invocation.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504436901", "createdAt": "2020-10-14T06:42:13Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/IRecipeStorage.java", "diffHunk": "@@ -72,6 +82,45 @@ default boolean fullFillRecipe(@NotNull final IItemHandler... inventories)\n      */\n     boolean fullfillRecipe(final List<IItemHandler> handlers);\n \n+    /**\n+     * Get which type this recipe is\n+     * CLASSIC or MULTI-OUTPUT are the only valid ones currently\n+     * @return The recipe type\n+     */\n+    public RecipeStorageType getRecipeType();\n+\n+    /**\n+     * Get a list of alternates to getPrimaryOutput\n+     * @return a list if Itemstacks that this recipe can produce instead of getPrimaryOutput\n+     */\n+    public List<ItemStack> getAlternateOutputs();\n+\n+    /**\n+     * Get the classic version of this recipe with GetPrimaryOutput targetted correctly from the chosen alternate\n+     * @param requiredOutput Which output wanted\n+     * @return the RecipeStorage that is \"right\" for that output\n+     */\n+    public RecipeStorage getClassicForMultiOutput(ItemStack requiredOutput);\n+\n+    /**\n+     * Get the classic version of this recipe with GetPrimaryOutput targetted correctly from the chosen alternate\n+     * @param stackPredicate Predicate to select the right stack\n+     * @return the RecipeStorage that is \"right\" for that output\n+     */\n+    public RecipeStorage getClassicForMultiOutput(final Predicate<ItemStack> stackPredicate);\n+\n+    /**\n+     * Source of the recipe, ie registry name.\n+     * @return\n+     */\n+    public String getRecipeSource();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNzA3Ng==", "bodyText": "See comments on the interface for this.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504437076", "createdAt": "2020-10-14T06:42:36Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -2,24 +2,40 @@\n \n import com.google.common.collect.ImmutableList;\n import com.ldtteam.structurize.items.ModItems;\n+import com.minecolonies.api.colony.requestsystem.StandardFactoryController;\n import com.minecolonies.api.colony.requestsystem.token.IToken;\n import com.minecolonies.api.util.CraftingUtils;\n import com.minecolonies.api.util.InventoryUtils;\n import com.minecolonies.api.util.ItemStackUtils;\n+import com.minecolonies.api.util.constant.TypeConstants;\n import net.minecraft.block.Block;\n import net.minecraft.item.ItemStack;\n import net.minecraftforge.items.IItemHandler;\n import org.jetbrains.annotations.NotNull;\n-\n+import org.jetbrains.annotations.Nullable;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n \n /**\n  * Class used to represent a recipe in minecolonies.\n  */\n public class RecipeStorage implements IRecipeStorage\n {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNzgxMg==", "bodyText": "I am not sure, but this does not look like it was autogenerated by IDEA!", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504437812", "createdAt": "2020-10-14T06:44:20Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -216,6 +312,22 @@ public int hashCode()\n         result = 31 * result + primaryOutput.hashCode();\n         result = 31 * result + (intermediate != null ? intermediate.hashCode() : 0);\n         result = 31 * result + gridSize;\n+        if(recipeSource != null && !recipeSource.isEmpty())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODMzOQ==", "bodyText": "This does not work........\nThe API clearly states that the container Item is returned when the stack is consumed! You are not allowed to modify this stack willy nilly since that violates that contract. There might be mods out there which consume an entire stack and only return 1 container item!", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504438339", "createdAt": "2020-10-14T06:45:32Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -228,13 +340,20 @@ public int hashCode()\n     private boolean checkForFreeSpace(final List<IItemHandler> handlers)\n     {\n         final List<ItemStack> secondaryStacks = new ArrayList<>();\n-        for (final ItemStack stack : input)\n+        if(!secondaryOutputs.isEmpty())\n+        {\n+            secondaryStacks.addAll(secondaryOutputs);\n+        }\n+        else\n         {\n-            final ItemStack container = stack.getItem().getContainerItem(stack);\n-            if (!ItemStackUtils.isEmpty(container))\n+            for (final ItemStack stack : input)\n             {\n-                container.setCount(stack.getCount());\n-                secondaryStacks.add(container);\n+                final ItemStack container = stack.getItem().getContainerItem(stack);\n+                if (!ItemStackUtils.isEmpty(container))\n+                {\n+                    container.setCount(stack.getCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 224}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODUxOA==", "bodyText": "Again see above this is not a legal use of the API as far as I am concerned.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504438518", "createdAt": "2020-10-14T06:46:00Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -329,29 +448,36 @@ public boolean fullfillRecipe(final List<IItemHandler> handlers)\n      *\n      * @param handlers the handlers.\n      */\n-    private void insertCraftedItems(final List<IItemHandler> handlers)\n+    private void insertCraftedItems(final List<IItemHandler> handlers, ItemStack outputStack)\n     {\n         for (final IItemHandler handler : handlers)\n         {\n-            if (InventoryUtils.addItemStackToItemHandler(handler, getPrimaryOutput().copy()))\n+            if (InventoryUtils.addItemStackToItemHandler(handler, outputStack.copy()))\n             {\n                 break;\n             }\n         }\n \n         final List<ItemStack> secondaryStacks = new ArrayList<>();\n-        for (final ItemStack stack : input)\n+        if(!secondaryOutputs.isEmpty())\n         {\n-            if (stack.getItem() == ModItems.buildTool)\n+            secondaryStacks.addAll(secondaryOutputs);\n+        }\n+        else\n+        {\n+            for (final ItemStack stack : input)\n             {\n-                continue;\n-            }\n+                if (stack.getItem() == ModItems.buildTool)\n+                {\n+                    continue;\n+                }\n \n-            final ItemStack container = stack.getItem().getContainerItem(stack);\n-            if (!ItemStackUtils.isEmpty(container))\n-            {\n-                container.setCount(stack.getCount());\n-                secondaryStacks.add(container);\n+                final ItemStack container = stack.getItem().getContainerItem(stack);\n+                if (!ItemStackUtils.isEmpty(container))\n+                {\n+                    container.setCount(stack.getCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 281}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzODk3MQ==", "bodyText": "You are in the API, no special casing of Minecolonies specific stuff.\nCreate a new Interface if you want to and smag that on the buildtool then do an instance of.\nOr create a behaviour registry.\nRegardless either refactor this class so that it is not part of the API or refactor it so that it does not do any special casing.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504438971", "createdAt": "2020-10-14T06:47:08Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -329,29 +448,36 @@ public boolean fullfillRecipe(final List<IItemHandler> handlers)\n      *\n      * @param handlers the handlers.\n      */\n-    private void insertCraftedItems(final List<IItemHandler> handlers)\n+    private void insertCraftedItems(final List<IItemHandler> handlers, ItemStack outputStack)\n     {\n         for (final IItemHandler handler : handlers)\n         {\n-            if (InventoryUtils.addItemStackToItemHandler(handler, getPrimaryOutput().copy()))\n+            if (InventoryUtils.addItemStackToItemHandler(handler, outputStack.copy()))\n             {\n                 break;\n             }\n         }\n \n         final List<ItemStack> secondaryStacks = new ArrayList<>();\n-        for (final ItemStack stack : input)\n+        if(!secondaryOutputs.isEmpty())\n         {\n-            if (stack.getItem() == ModItems.buildTool)\n+            secondaryStacks.addAll(secondaryOutputs);\n+        }\n+        else\n+        {\n+            for (final ItemStack stack : input)\n             {\n-                continue;\n-            }\n+                if (stack.getItem() == ModItems.buildTool)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 268}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzOTMwNA==", "bodyText": "You are in the concrete implementation, you do not need to use the factory controller......\nYou can invoke yourself just fine,", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504439304", "createdAt": "2020-10-14T06:47:53Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -365,4 +491,65 @@ private void insertCraftedItems(final List<IItemHandler> handlers)\n             }\n         }\n     }\n+\n+    @Override\n+    public RecipeStorage getClassicForMultiOutput(final ItemStack requiredOutput)\n+    {\n+        return StandardFactoryController.getInstance().getNewInstance(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 295}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzOTY0Mg==", "bodyText": "Import of Client side only stuff.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504439642", "createdAt": "2020-10-14T06:48:42Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/inventory/container/ContainerCrafting.java", "diffHunk": "@@ -2,6 +2,7 @@\n \n import com.ldtteam.structurize.api.util.ItemStackUtils;\n import com.minecolonies.api.inventory.ModContainers;\n+import net.minecraft.client.util.ClientRecipeBook;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDA3MA==", "bodyText": "This comes with the teritory of writing Enums in the API.\nRefactor this so that the recipe type can handle it itself.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504440070", "createdAt": "2020-10-14T06:49:42Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowListRecipes.java", "diffHunk": "@@ -111,7 +119,23 @@ public void updateElement(final int index, @NotNull final Pane rowPane)\n             {\n                 @NotNull final IRecipeStorage recipe = recipes.get(index);\n                 final ItemIcon icon = rowPane.findPaneOfTypeByID(OUTPUT_ICON, ItemIcon.class);\n-                icon.setItem(recipe.getPrimaryOutput());\n+                if(recipe.getRecipeType() == RecipeStorageType.MULTI_OUTPUT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MDczMw==", "bodyText": "Is this not supposed to be default behaviour?\nWhy was this added here?", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504440733", "createdAt": "2020-10-14T06:51:04Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingArchery.java", "diffHunk": "@@ -284,6 +284,30 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.archery;\n     }\n \n+    @Override\n+    public void onWakeUp()\n+    {\n+        super.onWakeUp();\n+        \n+        final World world = getColony().getWorld();\n+        if (world == null)\n+        {\n+            return;\n+        }\n+\n+        for (final BlockPos pos : bedList)\n+        {\n+            BlockState state = world.getBlockState(pos);\n+            state = state.getBlock().getExtendedState(state, world, pos);\n+            if (state.getBlock() instanceof BedBlock\n+                  && state.get(BedBlock.OCCUPIED)\n+                  && state.get(BedBlock.PART).equals(BedPart.HEAD))\n+            {\n+                world.setBlockState(pos, state.with(BedBlock.OCCUPIED, false), 0x03);\n+            }\n+        }\n+    }    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTAyOA==", "bodyText": "Again this is supposed to be default behaviour for the entity.\nWhy was this not handled there.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504441028", "createdAt": "2020-10-14T06:51:38Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingCombatAcademy.java", "diffHunk": "@@ -378,6 +378,30 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.combatAcademy;\n     }\n \n+    @Override\n+    public void onWakeUp()\n+    {\n+        super.onWakeUp();\n+        \n+        final World world = getColony().getWorld();\n+        if (world == null)\n+        {\n+            return;\n+        }\n+\n+        for (final BlockPos pos : bedList)\n+        {\n+            BlockState state = world.getBlockState(pos);\n+            state = state.getBlock().getExtendedState(state, world, pos);\n+            if (state.getBlock() instanceof BedBlock\n+                  && state.get(BedBlock.OCCUPIED)\n+                  && state.get(BedBlock.PART).equals(BedPart.HEAD))\n+            {\n+                world.setBlockState(pos, state.with(BedBlock.OCCUPIED, false), 0x03);\n+            }\n+        }\n+    }    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTMyNw==", "bodyText": "e instanceof JsonElement is always true.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504441327", "createdAt": "2020-10-14T06:52:15Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -234,6 +268,27 @@ public static CustomRecipe parse(@NotNull final JsonObject recipeJson)\n             recipe.result = idToItemStack(recipeJson.get(RECIPE_RESULT_PROP).getAsString());\n         }\n \n+        if (recipeJson.has(RECIPE_ALTERNATE_PROP))\n+        {\n+            for (JsonElement e : recipeJson.get(RECIPE_ALTERNATE_PROP).getAsJsonArray())\n+            {\n+                if (e instanceof JsonElement && e.isJsonObject())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTkwMA==", "bodyText": "This makes no sense.\nWhat are you trying to achieve here?", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504441900", "createdAt": "2020-10-14T06:53:36Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/requests/StandardRequests.java", "diffHunk": "@@ -343,11 +343,9 @@ protected AbstractCraftingRequest(\n         public final ITextComponent getShortDisplayString()\n         {\n             final ITextComponent result = new NonSiblingFormattingTextComponent();\n-            final ITextComponent preType = new TranslationTextComponent(getTranslationKey());\n \n-            result.appendSibling(preType);\n-\n-            preType.appendSibling(getRequest().getStack().getTextComponent());\n+            result.appendSibling(new StringTextComponent(getRequest().getMinCount() + \" * Recipe:\"));\n+            result.appendSibling(getRequest().getStack().getTextComponent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MjAwOA==", "bodyText": "Also not localizable!", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r504442008", "createdAt": "2020-10-14T06:53:53Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/requests/StandardRequests.java", "diffHunk": "@@ -343,11 +343,9 @@ protected AbstractCraftingRequest(\n         public final ITextComponent getShortDisplayString()\n         {\n             final ITextComponent result = new NonSiblingFormattingTextComponent();\n-            final ITextComponent preType = new TranslationTextComponent(getTranslationKey());\n \n-            result.appendSibling(preType);\n-\n-            preType.appendSibling(getRequest().getStack().getTextComponent());\n+            result.appendSibling(new StringTextComponent(getRequest().getMinCount() + \" * Recipe:\"));\n+            result.appendSibling(getRequest().getStack().getTextComponent());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MTkwMA=="}, "originalCommit": {"oid": "cd7d39c0f14a008ef8c185f0dc1698d5225498c0"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25d11247215082eaa0f55c1a34ed143766317081", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/25d11247215082eaa0f55c1a34ed143766317081", "committedDate": "2020-10-14T13:56:06Z", "message": "Some PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMjA2ODA4", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-510206808", "createdAt": "2020-10-16T07:10:12Z", "commit": {"oid": "25d11247215082eaa0f55c1a34ed143766317081"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8553a8d3f8f19955053f1fc4b849bdfa623840ef", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/8553a8d3f8f19955053f1fc4b849bdfa623840ef", "committedDate": "2020-10-16T14:40:25Z", "message": "Convert to ResourceLocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e90e70e0655aa7ad3667dcf977386f451dd2b82", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/3e90e70e0655aa7ad3667dcf977386f451dd2b82", "committedDate": "2020-10-17T03:24:00Z", "message": "Convert to using a registry instead of an enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eb740b5e1b1ec734a2c07b7195418dd36765d77", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/6eb740b5e1b1ec734a2c07b7195418dd36765d77", "committedDate": "2020-10-17T04:35:44Z", "message": "Finish up review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a51e3b6a57f5884da7d37f2b532380785411b39", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/8a51e3b6a57f5884da7d37f2b532380785411b39", "committedDate": "2020-10-17T05:03:21Z", "message": "Merge branch 'version/1.15' into feature/multirecipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aae21bbffb816b5a359006708417e970612f3c6d", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/aae21bbffb816b5a359006708417e970612f3c6d", "committedDate": "2020-10-17T17:44:38Z", "message": "minor fixes to RecipeStorage.equals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b89d4f386759f0ba31d4bbe9a4ea4bb87ad1aceb", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/b89d4f386759f0ba31d4bbe9a4ea4bb87ad1aceb", "committedDate": "2020-10-18T04:14:57Z", "message": "remove extra check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "596003a00b71c3ab6622a0c58e3dae49add1f2d8", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/596003a00b71c3ab6622a0c58e3dae49add1f2d8", "committedDate": "2020-10-18T04:26:42Z", "message": "Merge branch 'version/1.15' into feature/multirecipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db9eda9ebfc06d082db43e945c68ab8af8924f06", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/db9eda9ebfc06d082db43e945c68ab8af8924f06", "committedDate": "2020-10-18T14:17:41Z", "message": "Merge branch 'version/1.15' into feature/multirecipe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNjQyMTgw", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-511642180", "createdAt": "2020-10-19T10:57:30Z", "commit": {"oid": "db9eda9ebfc06d082db43e945c68ab8af8924f06"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo1NzozMFrOHkI2Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMDo1NzozMFrOHkI2Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1NTc4Mw==", "bodyText": "Missing override indicators in this class.", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507655783", "createdAt": "2020-10-19T10:57:30Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/crafting/AbstractRecipeType.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.minecolonies.api.crafting;\n+\n+import java.util.List;\n+import com.google.common.collect.ImmutableList;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ResourceLocation;\n+\n+public abstract class AbstractRecipeType<R extends IRecipeStorage>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9eda9ebfc06d082db43e945c68ab8af8924f06"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNjgzOTA5", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-511683909", "createdAt": "2020-10-19T11:59:14Z", "commit": {"oid": "db9eda9ebfc06d082db43e945c68ab8af8924f06"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTo1OToxNFrOHkK2jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjozNjoyOFrOHkMMlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4ODU5MQ==", "bodyText": "class desc", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507688591", "createdAt": "2020-10-19T11:59:14Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/crafting/MultiOutputRecipe.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.minecolonies.api.crafting;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ResourceLocation;\n+\n+public class MultiOutputRecipe extends AbstractRecipeType<IRecipeStorage>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9eda9ebfc06d082db43e945c68ab8af8924f06"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwMTUwNQ==", "bodyText": "if you're doing modifications in a simple checkForSpace() function you at least have to properly document/comment why that is there/whatfor it is. Or maybe even better rename the function", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507701505", "createdAt": "2020-10-19T12:21:52Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/crafting/RecipeStorage.java", "diffHunk": "@@ -228,13 +353,20 @@ public int hashCode()\n     private boolean checkForFreeSpace(final List<IItemHandler> handlers)\n     {\n         final List<ItemStack> secondaryStacks = new ArrayList<>();\n-        for (final ItemStack stack : input)\n+        if(!secondaryOutputs.isEmpty())\n+        {\n+            secondaryStacks.addAll(secondaryOutputs);\n+        }\n+        else\n         {\n-            final ItemStack container = stack.getItem().getContainerItem(stack);\n-            if (!ItemStackUtils.isEmpty(container))\n+            for (final ItemStack stack : input)\n             {\n-                container.setCount(stack.getCount());\n-                secondaryStacks.add(container);\n+                final ItemStack container = stack.getItem().getContainerItem(stack);\n+                if (!ItemStackUtils.isEmpty(container))\n+                {\n+                    container.setCount(stack.getCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9eda9ebfc06d082db43e945c68ab8af8924f06"}, "originalPosition": 237}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcxMDYxMw==", "bodyText": "while you're at it, can you change the above warehouse search to use the building managers saved warehouse list?", "url": "https://github.com/ldtteam/minecolonies/pull/5905#discussion_r507710613", "createdAt": "2020-10-19T12:36:28Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -238,7 +244,7 @@ protected int getWarehouseCount(ItemStorage item)\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9eda9ebfc06d082db43e945c68ab8af8924f06"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5ab80963312c3f8366db4d93c2228b66275c24b", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/d5ab80963312c3f8366db4d93c2228b66275c24b", "committedDate": "2020-10-19T14:15:42Z", "message": "Merge branch 'version/1.15' into feature/multirecipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43ccdbdfc742f70213b7d61268a654f83dfa998d", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/43ccdbdfc742f70213b7d61268a654f83dfa998d", "committedDate": "2020-10-19T14:19:23Z", "message": "Track recipe usage by token in the recipe  manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d32989580106e32c00642bea3df99370af35c99", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/4d32989580106e32c00642bea3df99370af35c99", "committedDate": "2020-10-19T14:19:28Z", "message": "remove contains checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ececa6fc01ce9e1aa1471ff8537e15c7c99f52b", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/6ececa6fc01ce9e1aa1471ff8537e15c7c99f52b", "committedDate": "2020-10-19T14:33:31Z", "message": "PR Feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0438c64d468b5f36c85244ee4ae923d5cbc2917b", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/0438c64d468b5f36c85244ee4ae923d5cbc2917b", "committedDate": "2020-10-19T21:52:52Z", "message": "Simplify the transfer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDU1MzM3", "url": "https://github.com/ldtteam/minecolonies/pull/5905#pullrequestreview-512455337", "createdAt": "2020-10-20T08:27:02Z", "commit": {"oid": "0438c64d468b5f36c85244ee4ae923d5cbc2917b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1766, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}