{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDAyNzY2", "number": 4973, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo0NToyOVrOD7qGZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo0NToyOVrOD7qGZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODgyMzQzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/PickUpPriorityState.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo0NToyOVrOGUHW5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTozMTowN1rOGUMcXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NTI1NQ==", "bodyText": "Why do we need the int representation, can't we pick the ordinal?", "url": "https://github.com/ldtteam/minecolonies/pull/4973#discussion_r423745255", "createdAt": "2020-05-12T13:45:29Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/PickUpPriorityState.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.minecolonies.api.colony.buildings;\n+\n+public enum PickUpPriorityState\n+{\n+    NEVER(0),\n+    STATIC(1),\n+    AUTOMATIC(2);\n+\n+    /**\n+     * The internal serializable int-representation of this enum.\n+     * We could use Java's ordinal(), but that is VERY error-prone.\n+     * So, do our own instead.\n+     */\n+    private final int intRepresentation;\n+\n+    PickUpPriorityState(final int intRepresentation)\n+    {\n+        this.intRepresentation = intRepresentation;\n+    }\n+\n+    /**\n+     * The integer representation for this enum. Used for message serialization.\n+     *\n+     * @return The integer representation\n+     */\n+    public int getIntRepresentation()\n+    {\n+        return intRepresentation;\n+    }\n+\n+    /**\n+     * Creates the enum from an int. Used for message deserialization.\n+     * This is not DRY, but we're talking about 3 to maybe later 4 values here.\n+     *\n+     * @param intRepresentation The internal representation of the enum.\n+     * @return The corresponding enum.\n+     */\n+    public static PickUpPriorityState fromIntRepresentation(int intRepresentation)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a62d597f05d390d104c1dbc7bce419729bf81b6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgwODgzNw==", "bodyText": "Because Java's ordinals are not meant to be used for such scenarios.\nThere's a couple of reasons for this, see https://stackoverflow.com/a/44654410.", "url": "https://github.com/ldtteam/minecolonies/pull/4973#discussion_r423808837", "createdAt": "2020-05-12T15:05:21Z", "author": {"login": "JiaYow"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/PickUpPriorityState.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.minecolonies.api.colony.buildings;\n+\n+public enum PickUpPriorityState\n+{\n+    NEVER(0),\n+    STATIC(1),\n+    AUTOMATIC(2);\n+\n+    /**\n+     * The internal serializable int-representation of this enum.\n+     * We could use Java's ordinal(), but that is VERY error-prone.\n+     * So, do our own instead.\n+     */\n+    private final int intRepresentation;\n+\n+    PickUpPriorityState(final int intRepresentation)\n+    {\n+        this.intRepresentation = intRepresentation;\n+    }\n+\n+    /**\n+     * The integer representation for this enum. Used for message serialization.\n+     *\n+     * @return The integer representation\n+     */\n+    public int getIntRepresentation()\n+    {\n+        return intRepresentation;\n+    }\n+\n+    /**\n+     * Creates the enum from an int. Used for message deserialization.\n+     * This is not DRY, but we're talking about 3 to maybe later 4 values here.\n+     *\n+     * @param intRepresentation The internal representation of the enum.\n+     * @return The corresponding enum.\n+     */\n+    public static PickUpPriorityState fromIntRepresentation(int intRepresentation)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NTI1NQ=="}, "originalCommit": {"oid": "3a62d597f05d390d104c1dbc7bce419729bf81b6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgxNzEwMw==", "bodyText": "Yeah, it definitely would lead to backwards compatibility problems if you insert values inbetween. Due to laziness all of our enums use the ordenal for persistency.\nI wonder if it is possible to abstract this a bit so that it could be used anywhere basically (so that we can avoid adding this boilerplate to all our enums).", "url": "https://github.com/ldtteam/minecolonies/pull/4973#discussion_r423817103", "createdAt": "2020-05-12T15:16:09Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/PickUpPriorityState.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.minecolonies.api.colony.buildings;\n+\n+public enum PickUpPriorityState\n+{\n+    NEVER(0),\n+    STATIC(1),\n+    AUTOMATIC(2);\n+\n+    /**\n+     * The internal serializable int-representation of this enum.\n+     * We could use Java's ordinal(), but that is VERY error-prone.\n+     * So, do our own instead.\n+     */\n+    private final int intRepresentation;\n+\n+    PickUpPriorityState(final int intRepresentation)\n+    {\n+        this.intRepresentation = intRepresentation;\n+    }\n+\n+    /**\n+     * The integer representation for this enum. Used for message serialization.\n+     *\n+     * @return The integer representation\n+     */\n+    public int getIntRepresentation()\n+    {\n+        return intRepresentation;\n+    }\n+\n+    /**\n+     * Creates the enum from an int. Used for message deserialization.\n+     * This is not DRY, but we're talking about 3 to maybe later 4 values here.\n+     *\n+     * @param intRepresentation The internal representation of the enum.\n+     * @return The corresponding enum.\n+     */\n+    public static PickUpPriorityState fromIntRepresentation(int intRepresentation)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NTI1NQ=="}, "originalCommit": {"oid": "3a62d597f05d390d104c1dbc7bce419729bf81b6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyNTcxNw==", "bodyText": "Backwards compatibility isn't even my main concern. This is.\nA pointer to the enum will return 0, not the value you would expect. This will undoubtedly cause a bug along the way.\nAs for boilerplate, there might be a way by using enum types inheritance and/or generic shenanigans. However, I feel this is slightly out of the scope of this PR^^", "url": "https://github.com/ldtteam/minecolonies/pull/4973#discussion_r423825717", "createdAt": "2020-05-12T15:27:18Z", "author": {"login": "JiaYow"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/PickUpPriorityState.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.minecolonies.api.colony.buildings;\n+\n+public enum PickUpPriorityState\n+{\n+    NEVER(0),\n+    STATIC(1),\n+    AUTOMATIC(2);\n+\n+    /**\n+     * The internal serializable int-representation of this enum.\n+     * We could use Java's ordinal(), but that is VERY error-prone.\n+     * So, do our own instead.\n+     */\n+    private final int intRepresentation;\n+\n+    PickUpPriorityState(final int intRepresentation)\n+    {\n+        this.intRepresentation = intRepresentation;\n+    }\n+\n+    /**\n+     * The integer representation for this enum. Used for message serialization.\n+     *\n+     * @return The integer representation\n+     */\n+    public int getIntRepresentation()\n+    {\n+        return intRepresentation;\n+    }\n+\n+    /**\n+     * Creates the enum from an int. Used for message deserialization.\n+     * This is not DRY, but we're talking about 3 to maybe later 4 values here.\n+     *\n+     * @param intRepresentation The internal representation of the enum.\n+     * @return The corresponding enum.\n+     */\n+    public static PickUpPriorityState fromIntRepresentation(int intRepresentation)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NTI1NQ=="}, "originalCommit": {"oid": "3a62d597f05d390d104c1dbc7bce419729bf81b6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyODU3Mg==", "bodyText": "Sounds okay, although, whoever will create an enum next, will have to extract this to avoid copying the code just over.", "url": "https://github.com/ldtteam/minecolonies/pull/4973#discussion_r423828572", "createdAt": "2020-05-12T15:31:07Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/PickUpPriorityState.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package com.minecolonies.api.colony.buildings;\n+\n+public enum PickUpPriorityState\n+{\n+    NEVER(0),\n+    STATIC(1),\n+    AUTOMATIC(2);\n+\n+    /**\n+     * The internal serializable int-representation of this enum.\n+     * We could use Java's ordinal(), but that is VERY error-prone.\n+     * So, do our own instead.\n+     */\n+    private final int intRepresentation;\n+\n+    PickUpPriorityState(final int intRepresentation)\n+    {\n+        this.intRepresentation = intRepresentation;\n+    }\n+\n+    /**\n+     * The integer representation for this enum. Used for message serialization.\n+     *\n+     * @return The integer representation\n+     */\n+    public int getIntRepresentation()\n+    {\n+        return intRepresentation;\n+    }\n+\n+    /**\n+     * Creates the enum from an int. Used for message deserialization.\n+     * This is not DRY, but we're talking about 3 to maybe later 4 values here.\n+     *\n+     * @param intRepresentation The internal representation of the enum.\n+     * @return The corresponding enum.\n+     */\n+    public static PickUpPriorityState fromIntRepresentation(int intRepresentation)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0NTI1NQ=="}, "originalCommit": {"oid": "3a62d597f05d390d104c1dbc7bce419729bf81b6"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3063, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}