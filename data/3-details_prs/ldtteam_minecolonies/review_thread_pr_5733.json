{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNDkwMTcw", "number": 5733, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNTo0MDoxMVrOEg-ivA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMTo0NVrOEg-3pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDE0NTg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNTo0MDoxMVrOHODaCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowNzo1NFrOHOECYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5NzkzMQ==", "bodyText": "stack.isItemEqual is gonna ignore nbt not sure if thats desired", "url": "https://github.com/ldtteam/minecolonies/pull/5733#discussion_r484497931", "createdAt": "2020-09-07T15:40:11Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -83,12 +80,37 @@ protected int getActionsDoneUntilDumping()\n     }\n \n     @Override\n-    protected int getExtendedOutputCount(final ItemStack primaryOutput)\n+    protected int getExtendedCount(final ItemStack stack)\n     {\n-        if(currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n+        if (currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n         {\n-            return job.getProgress();\n+            int count = 0;\n+            for (final BlockPos pos : getOwnBuilding().getFurnaces())\n+            {\n+                if (WorldUtil.isBlockLoaded(world, pos))\n+                {\n+                    final TileEntity entity = world.getTileEntity(pos);\n+                    if (entity instanceof FurnaceTileEntity)\n+                    {\n+                        final FurnaceTileEntity furnace = (FurnaceTileEntity) entity;\n+\n+                        final ItemStack smeltableSlot = furnace.getStackInSlot(SMELTABLE_SLOT);\n+                        final ItemStack resultSlot = furnace.getStackInSlot(RESULT_SLOT);\n+                        if (stack.isItemEqual(smeltableSlot))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ec92440a3884b6adae44275c8bd2135669385f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5OTMyOQ==", "bodyText": "are there nbt smelts?", "url": "https://github.com/ldtteam/minecolonies/pull/5733#discussion_r484499329", "createdAt": "2020-09-07T15:43:41Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -83,12 +80,37 @@ protected int getActionsDoneUntilDumping()\n     }\n \n     @Override\n-    protected int getExtendedOutputCount(final ItemStack primaryOutput)\n+    protected int getExtendedCount(final ItemStack stack)\n     {\n-        if(currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n+        if (currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n         {\n-            return job.getProgress();\n+            int count = 0;\n+            for (final BlockPos pos : getOwnBuilding().getFurnaces())\n+            {\n+                if (WorldUtil.isBlockLoaded(world, pos))\n+                {\n+                    final TileEntity entity = world.getTileEntity(pos);\n+                    if (entity instanceof FurnaceTileEntity)\n+                    {\n+                        final FurnaceTileEntity furnace = (FurnaceTileEntity) entity;\n+\n+                        final ItemStack smeltableSlot = furnace.getStackInSlot(SMELTABLE_SLOT);\n+                        final ItemStack resultSlot = furnace.getStackInSlot(RESULT_SLOT);\n+                        if (stack.isItemEqual(smeltableSlot))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5NzkzMQ=="}, "originalCommit": {"oid": "a6ec92440a3884b6adae44275c8bd2135669385f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMDcyMg==", "bodyText": "guess can happen with mods", "url": "https://github.com/ldtteam/minecolonies/pull/5733#discussion_r484500722", "createdAt": "2020-09-07T15:47:10Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -83,12 +80,37 @@ protected int getActionsDoneUntilDumping()\n     }\n \n     @Override\n-    protected int getExtendedOutputCount(final ItemStack primaryOutput)\n+    protected int getExtendedCount(final ItemStack stack)\n     {\n-        if(currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n+        if (currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n         {\n-            return job.getProgress();\n+            int count = 0;\n+            for (final BlockPos pos : getOwnBuilding().getFurnaces())\n+            {\n+                if (WorldUtil.isBlockLoaded(world, pos))\n+                {\n+                    final TileEntity entity = world.getTileEntity(pos);\n+                    if (entity instanceof FurnaceTileEntity)\n+                    {\n+                        final FurnaceTileEntity furnace = (FurnaceTileEntity) entity;\n+\n+                        final ItemStack smeltableSlot = furnace.getStackInSlot(SMELTABLE_SLOT);\n+                        final ItemStack resultSlot = furnace.getStackInSlot(RESULT_SLOT);\n+                        if (stack.isItemEqual(smeltableSlot))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5NzkzMQ=="}, "originalCommit": {"oid": "a6ec92440a3884b6adae44275c8bd2135669385f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMDgyMw==", "bodyText": "Not that I'm aware of, at least in vanilla. I suspect it's possible in modded, and that is likely the way we want to go for the cook's dough.", "url": "https://github.com/ldtteam/minecolonies/pull/5733#discussion_r484500823", "createdAt": "2020-09-07T15:47:24Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -83,12 +80,37 @@ protected int getActionsDoneUntilDumping()\n     }\n \n     @Override\n-    protected int getExtendedOutputCount(final ItemStack primaryOutput)\n+    protected int getExtendedCount(final ItemStack stack)\n     {\n-        if(currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n+        if (currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n         {\n-            return job.getProgress();\n+            int count = 0;\n+            for (final BlockPos pos : getOwnBuilding().getFurnaces())\n+            {\n+                if (WorldUtil.isBlockLoaded(world, pos))\n+                {\n+                    final TileEntity entity = world.getTileEntity(pos);\n+                    if (entity instanceof FurnaceTileEntity)\n+                    {\n+                        final FurnaceTileEntity furnace = (FurnaceTileEntity) entity;\n+\n+                        final ItemStack smeltableSlot = furnace.getStackInSlot(SMELTABLE_SLOT);\n+                        final ItemStack resultSlot = furnace.getStackInSlot(RESULT_SLOT);\n+                        if (stack.isItemEqual(smeltableSlot))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5NzkzMQ=="}, "originalCommit": {"oid": "a6ec92440a3884b6adae44275c8bd2135669385f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMTQ0MA==", "bodyText": "just use our ItemStackUtils instead of vanilla all the time :D", "url": "https://github.com/ldtteam/minecolonies/pull/5733#discussion_r484501440", "createdAt": "2020-09-07T15:49:06Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -83,12 +80,37 @@ protected int getActionsDoneUntilDumping()\n     }\n \n     @Override\n-    protected int getExtendedOutputCount(final ItemStack primaryOutput)\n+    protected int getExtendedCount(final ItemStack stack)\n     {\n-        if(currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n+        if (currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n         {\n-            return job.getProgress();\n+            int count = 0;\n+            for (final BlockPos pos : getOwnBuilding().getFurnaces())\n+            {\n+                if (WorldUtil.isBlockLoaded(world, pos))\n+                {\n+                    final TileEntity entity = world.getTileEntity(pos);\n+                    if (entity instanceof FurnaceTileEntity)\n+                    {\n+                        final FurnaceTileEntity furnace = (FurnaceTileEntity) entity;\n+\n+                        final ItemStack smeltableSlot = furnace.getStackInSlot(SMELTABLE_SLOT);\n+                        final ItemStack resultSlot = furnace.getStackInSlot(RESULT_SLOT);\n+                        if (stack.isItemEqual(smeltableSlot))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5NzkzMQ=="}, "originalCommit": {"oid": "a6ec92440a3884b6adae44275c8bd2135669385f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwODI1Nw==", "bodyText": "done", "url": "https://github.com/ldtteam/minecolonies/pull/5733#discussion_r484508257", "createdAt": "2020-09-07T16:07:54Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -83,12 +80,37 @@ protected int getActionsDoneUntilDumping()\n     }\n \n     @Override\n-    protected int getExtendedOutputCount(final ItemStack primaryOutput)\n+    protected int getExtendedCount(final ItemStack stack)\n     {\n-        if(currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n+        if (currentRecipeStorage != null && currentRecipeStorage.getIntermediate() == Blocks.FURNACE)\n         {\n-            return job.getProgress();\n+            int count = 0;\n+            for (final BlockPos pos : getOwnBuilding().getFurnaces())\n+            {\n+                if (WorldUtil.isBlockLoaded(world, pos))\n+                {\n+                    final TileEntity entity = world.getTileEntity(pos);\n+                    if (entity instanceof FurnaceTileEntity)\n+                    {\n+                        final FurnaceTileEntity furnace = (FurnaceTileEntity) entity;\n+\n+                        final ItemStack smeltableSlot = furnace.getStackInSlot(SMELTABLE_SLOT);\n+                        final ItemStack resultSlot = furnace.getStackInSlot(RESULT_SLOT);\n+                        if (stack.isItemEqual(smeltableSlot))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ5NzkzMQ=="}, "originalCommit": {"oid": "a6ec92440a3884b6adae44275c8bd2135669385f"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDE5OTQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMTo0NVrOHOD6TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjowMzozMFrOHOD8eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjE4OQ==", "bodyText": "Should this be resultInCitizenInv?", "url": "https://github.com/ldtteam/minecolonies/pull/5733#discussion_r484506189", "createdAt": "2020-09-07T16:01:45Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -438,92 +435,96 @@ private IAIState fillUpFurnace()\n \n         final int burningCount = countOfBurningFurnaces();\n         final TileEntity entity = world.getTileEntity(walkTo);\n-        if (entity instanceof FurnaceTileEntity)\n+        if (entity instanceof FurnaceTileEntity && currentRecipeStorage != null)\n         {\n             final FurnaceTileEntity furnace = (FurnaceTileEntity) entity;\n             final List<ItemStack> possibleFuels = getOwnBuilding().getAllowedFuel();\n \n+            possibleFuels.removeIf(stack -> stack.isItemEqual(currentRecipeStorage.getPrimaryOutput()));\n+            // There is always only one input.\n+            possibleFuels.removeIf(stack -> stack.isItemEqual(currentRecipeStorage.getCleanedInput().get(0).getItemStack()));\n+\n             //Stoke the furnaces\n-            if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(), item -> FurnaceTileEntity.isFuel(item) && possibleFuels.stream().anyMatch(candidate -> item.isItemEqual(candidate)))\n+            if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(), item -> FurnaceTileEntity.isFuel(item) && possibleFuels.stream().anyMatch(item::isItemEqual))\n                   && (hasSmeltableInFurnaceAndNoFuel(furnace) || hasNeitherFuelNorSmeltAble(furnace)))\n             {\n                 InventoryUtils.transferXOfFirstSlotInItemHandlerWithIntoInItemHandler(\n-                  worker.getInventoryCitizen(), item -> FurnaceTileEntity.isFuel(item) && possibleFuels.stream().anyMatch(candidate -> item.isItemEqual(candidate)), STACKSIZE,\n+                  worker.getInventoryCitizen(), item -> FurnaceTileEntity.isFuel(item) && possibleFuels.stream().anyMatch(item::isItemEqual), STACKSIZE,\n                   new InvWrapper(furnace), FUEL_SLOT);\n             }\n \n-            if(currentRecipeStorage != null)\n+            final int maxFurnaces = getMaxUsableFurnaces();\n+            final Predicate<ItemStack> smeltable = stack -> currentRecipeStorage.getCleanedInput().get(0).getItemStack().isItemEqual(stack);\n+            final int smeltableInFurnaces = getExtendedCount(currentRecipeStorage.getCleanedInput().get(0).getItemStack());\n+            final int resultInFurnaces = getExtendedCount(currentRecipeStorage.getPrimaryOutput());\n+            final int resultInPlayerInv = InventoryUtils.getItemCountInItemHandler(worker.getInventoryCitizen(), stack -> stack.isItemEqual(currentRecipeStorage.getPrimaryOutput()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ec92440a3884b6adae44275c8bd2135669385f"}, "originalPosition": 238}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjc0Ng==", "bodyText": "ye", "url": "https://github.com/ldtteam/minecolonies/pull/5733#discussion_r484506746", "createdAt": "2020-09-07T16:03:30Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIRequestSmelter.java", "diffHunk": "@@ -438,92 +435,96 @@ private IAIState fillUpFurnace()\n \n         final int burningCount = countOfBurningFurnaces();\n         final TileEntity entity = world.getTileEntity(walkTo);\n-        if (entity instanceof FurnaceTileEntity)\n+        if (entity instanceof FurnaceTileEntity && currentRecipeStorage != null)\n         {\n             final FurnaceTileEntity furnace = (FurnaceTileEntity) entity;\n             final List<ItemStack> possibleFuels = getOwnBuilding().getAllowedFuel();\n \n+            possibleFuels.removeIf(stack -> stack.isItemEqual(currentRecipeStorage.getPrimaryOutput()));\n+            // There is always only one input.\n+            possibleFuels.removeIf(stack -> stack.isItemEqual(currentRecipeStorage.getCleanedInput().get(0).getItemStack()));\n+\n             //Stoke the furnaces\n-            if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(), item -> FurnaceTileEntity.isFuel(item) && possibleFuels.stream().anyMatch(candidate -> item.isItemEqual(candidate)))\n+            if (InventoryUtils.hasItemInItemHandler(worker.getInventoryCitizen(), item -> FurnaceTileEntity.isFuel(item) && possibleFuels.stream().anyMatch(item::isItemEqual))\n                   && (hasSmeltableInFurnaceAndNoFuel(furnace) || hasNeitherFuelNorSmeltAble(furnace)))\n             {\n                 InventoryUtils.transferXOfFirstSlotInItemHandlerWithIntoInItemHandler(\n-                  worker.getInventoryCitizen(), item -> FurnaceTileEntity.isFuel(item) && possibleFuels.stream().anyMatch(candidate -> item.isItemEqual(candidate)), STACKSIZE,\n+                  worker.getInventoryCitizen(), item -> FurnaceTileEntity.isFuel(item) && possibleFuels.stream().anyMatch(item::isItemEqual), STACKSIZE,\n                   new InvWrapper(furnace), FUEL_SLOT);\n             }\n \n-            if(currentRecipeStorage != null)\n+            final int maxFurnaces = getMaxUsableFurnaces();\n+            final Predicate<ItemStack> smeltable = stack -> currentRecipeStorage.getCleanedInput().get(0).getItemStack().isItemEqual(stack);\n+            final int smeltableInFurnaces = getExtendedCount(currentRecipeStorage.getCleanedInput().get(0).getItemStack());\n+            final int resultInFurnaces = getExtendedCount(currentRecipeStorage.getPrimaryOutput());\n+            final int resultInPlayerInv = InventoryUtils.getItemCountInItemHandler(worker.getInventoryCitizen(), stack -> stack.isItemEqual(currentRecipeStorage.getPrimaryOutput()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwNjE4OQ=="}, "originalCommit": {"oid": "a6ec92440a3884b6adae44275c8bd2135669385f"}, "originalPosition": 238}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3477, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}