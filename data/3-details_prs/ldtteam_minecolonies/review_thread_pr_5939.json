{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1Mjc0ODA3", "number": 5939, "reviewThreads": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNDo0MDoyNlrOEu0xFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowNzo1N1rOE3o3aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTM0NDg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutTavern.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNDo0MDoyNlrOHjdwmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxOToyNzo1OFrOHjfWbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0OTc4Nw==", "bodyText": "How is this going to work when we have multiple modules that need to participate in the view? For instance, Crafter (job queue) and Smelter (Fuel)", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506949787", "createdAt": "2020-10-17T14:40:26Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutTavern.java", "diffHunk": "@@ -8,19 +8,21 @@\n import com.minecolonies.api.colony.ICitizenDataView;\n import com.minecolonies.api.util.constant.Constants;\n import com.minecolonies.coremod.Network;\n-import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingHome;\n-import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingTavern;\n+import com.minecolonies.coremod.colony.buildings.modules.TavernBuildingModule;\n+import com.minecolonies.coremod.colony.buildings.views.LivingBuildingView;\n+import com.minecolonies.coremod.network.messages.server.colony.building.RecallCitizenHutMessage;\n import com.minecolonies.coremod.network.messages.server.colony.building.home.AssignUnassignMessage;\n import net.minecraft.client.Minecraft;\n import org.jetbrains.annotations.NotNull;\n \n import static com.minecolonies.api.util.constant.TranslationConstants.COM_MINECOLONIES_COREMOD_GUI_HOME_ASSIGN;\n import static com.minecolonies.api.util.constant.TranslationConstants.COM_MINECOLONIES_COREMOD_GUI_WORKERHUTS_LEVEL_0;\n+import static com.minecolonies.api.util.constant.WindowConstants.BUTTON_RECALL;\n \n /**\n  * Window for the tavern\n  */\n-public class WindowHutTavern extends AbstractWindowBuilding<BuildingTavern.View>\n+public class WindowHutTavern extends AbstractWindowBuilding<TavernBuildingModule.View>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MTM2NQ==", "bodyText": "Yeah, I commented that in the description. That is the next PR I want to make. This one was getting too big already.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506951365", "createdAt": "2020-10-17T14:58:26Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutTavern.java", "diffHunk": "@@ -8,19 +8,21 @@\n import com.minecolonies.api.colony.ICitizenDataView;\n import com.minecolonies.api.util.constant.Constants;\n import com.minecolonies.coremod.Network;\n-import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingHome;\n-import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingTavern;\n+import com.minecolonies.coremod.colony.buildings.modules.TavernBuildingModule;\n+import com.minecolonies.coremod.colony.buildings.views.LivingBuildingView;\n+import com.minecolonies.coremod.network.messages.server.colony.building.RecallCitizenHutMessage;\n import com.minecolonies.coremod.network.messages.server.colony.building.home.AssignUnassignMessage;\n import net.minecraft.client.Minecraft;\n import org.jetbrains.annotations.NotNull;\n \n import static com.minecolonies.api.util.constant.TranslationConstants.COM_MINECOLONIES_COREMOD_GUI_HOME_ASSIGN;\n import static com.minecolonies.api.util.constant.TranslationConstants.COM_MINECOLONIES_COREMOD_GUI_WORKERHUTS_LEVEL_0;\n+import static com.minecolonies.api.util.constant.WindowConstants.BUTTON_RECALL;\n \n /**\n  * Window for the tavern\n  */\n-public class WindowHutTavern extends AbstractWindowBuilding<BuildingTavern.View>\n+public class WindowHutTavern extends AbstractWindowBuilding<TavernBuildingModule.View>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0OTc4Nw=="}, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk3NTg1NQ==", "bodyText": "Fair enough.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506975855", "createdAt": "2020-10-17T19:27:58Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutTavern.java", "diffHunk": "@@ -8,19 +8,21 @@\n import com.minecolonies.api.colony.ICitizenDataView;\n import com.minecolonies.api.util.constant.Constants;\n import com.minecolonies.coremod.Network;\n-import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingHome;\n-import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingTavern;\n+import com.minecolonies.coremod.colony.buildings.modules.TavernBuildingModule;\n+import com.minecolonies.coremod.colony.buildings.views.LivingBuildingView;\n+import com.minecolonies.coremod.network.messages.server.colony.building.RecallCitizenHutMessage;\n import com.minecolonies.coremod.network.messages.server.colony.building.home.AssignUnassignMessage;\n import net.minecraft.client.Minecraft;\n import org.jetbrains.annotations.NotNull;\n \n import static com.minecolonies.api.util.constant.TranslationConstants.COM_MINECOLONIES_COREMOD_GUI_HOME_ASSIGN;\n import static com.minecolonies.api.util.constant.TranslationConstants.COM_MINECOLONIES_COREMOD_GUI_WORKERHUTS_LEVEL_0;\n+import static com.minecolonies.api.util.constant.WindowConstants.BUTTON_RECALL;\n \n /**\n  * Window for the tavern\n  */\n-public class WindowHutTavern extends AbstractWindowBuilding<BuildingTavern.View>\n+public class WindowHutTavern extends AbstractWindowBuilding<TavernBuildingModule.View>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0OTc4Nw=="}, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTM0ODc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNDo0NTo1MVrOHjdyew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNTowMDowOVrOHjd3Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MDI2Nw==", "bodyText": "How do you see modules working together here? Specifically, the restaurant has two citizens with very different jobs. I expect that will be two modules, each with one citizen assigned. Is it First one wins? or do we expect a priority, and thus support promotion? If the cook dies, does the assistant cook become the cook?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506950267", "createdAt": "2020-10-17T14:45:51Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java", "diffHunk": "@@ -343,6 +397,65 @@ public void onDestroyed()\n \n         ChunkDataHelper.claimColonyChunks(colony, false, this.getID(), getClaimRadius(getBuildingLevel()));\n         ConstructionTapeHelper.removeConstructionTape(getCorners(), world);\n+\n+        for (final IBuildingModule module : modules.values())\n+        {\n+            module.onDestroyed();\n+        }\n+    }\n+\n+    @Override\n+    public void removeCitizen(final ICitizenData citizen)\n+    {\n+        for (final IBuildingModule module : modules.values())\n+        {\n+            module.removeCitizen(citizen);\n+        }\n+        super.removeCitizen(citizen);\n+    }\n+\n+    @Override\n+    public boolean assignCitizen(final ICitizenData citizen)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MTUxNQ==", "bodyText": "For now, It would be by addition order (so first cook than assistant, if cook dies, assistant stays assistant and new worker will become cook). However, yes, there is room for additional functionality in the future here.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506951515", "createdAt": "2020-10-17T15:00:09Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java", "diffHunk": "@@ -343,6 +397,65 @@ public void onDestroyed()\n \n         ChunkDataHelper.claimColonyChunks(colony, false, this.getID(), getClaimRadius(getBuildingLevel()));\n         ConstructionTapeHelper.removeConstructionTape(getCorners(), world);\n+\n+        for (final IBuildingModule module : modules.values())\n+        {\n+            module.onDestroyed();\n+        }\n+    }\n+\n+    @Override\n+    public void removeCitizen(final ICitizenData citizen)\n+    {\n+        for (final IBuildingModule module : modules.values())\n+        {\n+            module.removeCitizen(citizen);\n+        }\n+        super.removeCitizen(citizen);\n+    }\n+\n+    @Override\n+    public boolean assignCitizen(final ICitizenData citizen)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MDI2Nw=="}, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTM1MTUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/modules/LivingBuildingModule.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNDo1MDowOFrOHjdz1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxOToyODo0NlrOHjfWmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MDYxMg==", "bodyText": "Should this be part of LivingBuildingModule, or separate? Do you expect LivingBuildingModule to be used for towers and training facilities? If so, this then creates the potential to mix the two assignment types.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506950612", "createdAt": "2020-10-17T14:50:08Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/modules/LivingBuildingModule.java", "diffHunk": "@@ -385,21 +362,15 @@ private void inheritLastName(@NotNull final ICitizenData child, final String par\n         child.setName(combinedName.toString().trim());\n     }\n \n-    @Override\n-    public int getMaxInhabitants()\n-    {\n-        return getBuildingLevel();\n-    }\n-\n     /**\n      * Looks for a homeless citizen to add to the current building Calls. {@link #assignCitizen(ICitizenData)}\n      */\n     private void addHomelessCitizens()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 260}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MTY1NA==", "bodyText": "These places could override this module and create a SpecializedLivingBuildingModule that they will add for example.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506951654", "createdAt": "2020-10-17T15:01:25Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/modules/LivingBuildingModule.java", "diffHunk": "@@ -385,21 +362,15 @@ private void inheritLastName(@NotNull final ICitizenData child, final String par\n         child.setName(combinedName.toString().trim());\n     }\n \n-    @Override\n-    public int getMaxInhabitants()\n-    {\n-        return getBuildingLevel();\n-    }\n-\n     /**\n      * Looks for a homeless citizen to add to the current building Calls. {@link #assignCitizen(ICitizenData)}\n      */\n     private void addHomelessCitizens()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MDYxMg=="}, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 260}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk3NTg5Nw==", "bodyText": "Ok, while that sends us partway down the inheritance path again, it's small enough that seems reasonable.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506975897", "createdAt": "2020-10-17T19:28:46Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/modules/LivingBuildingModule.java", "diffHunk": "@@ -385,21 +362,15 @@ private void inheritLastName(@NotNull final ICitizenData child, final String par\n         child.setName(combinedName.toString().trim());\n     }\n \n-    @Override\n-    public int getMaxInhabitants()\n-    {\n-        return getBuildingLevel();\n-    }\n-\n     /**\n      * Looks for a homeless citizen to add to the current building Calls. {@link #assignCitizen(ICitizenData)}\n      */\n     private void addHomelessCitizens()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MDYxMg=="}, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 260}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTkxNDI4OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/AbstractBuildingModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTowMzoxOFrOHkJCbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMToxODowNVrOHkJgtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1ODg2MQ==", "bodyText": "This class is weird AF.\nThis is just an empty class which literally makes no sense.\nIf you want this to be the default behaviour for those empty methods for a module, then make it the default implementation of the method in the interface not in this weird abstract class.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r507658861", "createdAt": "2020-10-19T11:03:18Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/AbstractBuildingModule.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Abstract class for all modules. Has base methods for all the necessary methods that have to be called from the building.\n+ */\n+public abstract class AbstractBuildingModule implements IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY2NjYxNQ==", "bodyText": "Yeah, true, I forgot I can set the empty methods as defaults in the interface.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r507666615", "createdAt": "2020-10-19T11:18:05Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/AbstractBuildingModule.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Abstract class for all modules. Has base methods for all the necessary methods that have to be called from the building.\n+ */\n+public abstract class AbstractBuildingModule implements IBuildingModule", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1ODg2MQ=="}, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTg5MDM0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNDozMFrOHpd-1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNDozMFrOHpd-1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NDg4Ng==", "bodyText": "No, this should be Class<? extends IBuildingModule> or what ever the root interface for a module is.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513244886", "createdAt": "2020-10-28T08:04:30Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +34,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends AbstractBuildingModule> clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTg5MDc2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNDozOFrOHpd_Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNDozOFrOHpd_Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NDk1NA==", "bodyText": "See above", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513244954", "createdAt": "2020-10-28T08:04:38Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +34,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends AbstractBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    IBuildingModule getModule(Class<? extends AbstractBuildingModule> clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTg5MTE0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNDo0NFrOHpd_Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNDo0NFrOHpd_Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTAwNg==", "bodyText": "See above", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513245006", "createdAt": "2020-10-28T08:04:44Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +34,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends AbstractBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    IBuildingModule getModule(Class<? extends AbstractBuildingModule> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final AbstractBuildingModule module);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTg5NTIxOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/blocks/AbstractBlockHut.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNTo1OFrOHpeBvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNTo1OFrOHpeBvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTYzMQ==", "bodyText": "You might want to consider firing an event here somehow.\nThis to allow external APIs to inject modules. It does not need to be implemented here yet, just a comment to mark it as a TODO somehow should suffice for this PR.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513245631", "createdAt": "2020-10-28T08:05:58Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/blocks/AbstractBlockHut.java", "diffHunk": "@@ -330,4 +332,10 @@ public boolean needsResearch()\n     {\n         return needsResearch;\n     }\n+\n+    @Override\n+    public void registerBuildingModules(final IBuilding building)\n+    {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTg5NjM2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IAssignsCitizen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNjoyMFrOHpeCbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNjoyMFrOHpeCbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTgwNw==", "bodyText": "Needs to extends IBuildingModule else this makes no sense.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513245807", "createdAt": "2020-10-28T08:06:20Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IAssignsCitizen.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.ICitizenData;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface for all modules that need special assignment handling.\n+ */\n+public interface IAssignsCitizen", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTg5NzcyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNjo0NlrOHpeDSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNjo0NlrOHpeDSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjAyNw==", "bodyText": "Formatting is of here. Remove the not needed empty lines.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513246027", "createdAt": "2020-10-28T08:06:46Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTg5OTU2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNzoxOFrOHpeEWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozODoyMVrOHpfIAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjI5OQ==", "bodyText": "Make this extend NBTSerializable or whatever the name of the vanilla interface is, and do not declare your own custom methods.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513246299", "createdAt": "2020-10-28T08:07:18Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2MzYxOA==", "bodyText": "The method signature we use is slightly different than NBTSerializable, so not possible", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513263618", "createdAt": "2020-10-28T08:38:21Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjI5OQ=="}, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkwMDQzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNzozNFrOHpeE2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNzozNFrOHpeE2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjQyNg==", "bodyText": "Remove this method, see interface declaration comment.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513246426", "createdAt": "2020-10-28T08:07:34Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkwMTAzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNzo0NVrOHpeFOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNzo0NVrOHpeFOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjUyMQ==", "bodyText": "Remove this method, see interface declaration comment", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513246521", "createdAt": "2020-10-28T08:07:45Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkwNjE5OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowOToxNlrOHpeIKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozOTo0NlrOHpfK7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NzI3Mw==", "bodyText": "We should declare a standard interface for serialization to and from PacketBuffer and treat it in the same way vanilla treats NBT with its NBTSerializable interface. Aka create an empty instance and then call deserialize on it.\nI am pretty sure this interface was added when we added the PacketBuffer specific serialization for the RS.\nThis also makes it so that Views are not needed for modules, which is a huge improvement in maintainability.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513247273", "createdAt": "2020-10-28T08:09:16Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2NDM2Ng==", "bodyText": "As I wrote above, views will be a part of modules. In a way that allows us to build nice GUIs from multiple module Views", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513264366", "createdAt": "2020-10-28T08:39:46Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NzI3Mw=="}, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkwODQ3OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowOTo1M1rOHpeJeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowOTo1M1rOHpeJeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NzYxMA==", "bodyText": "Again this has no bearing on a default module.\nMove to a seperate interface.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513247610", "createdAt": "2020-10-28T08:09:53Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)\n+    {\n+\n+    }\n+\n+    /**\n+     * On destruction hook of the building, calling into the modules.\n+     */\n+    default void onDestroyed()\n+    {\n+\n+    }\n+\n+    /**\n+     * Colony tick hook.\n+     * @param colony the colony the tick is invoked from.\n+     */\n+    default void onColonyTick(@NotNull IColony colony)\n+    {\n+\n+    }\n+\n+    /**\n+     * Upgrade complete module hook.\n+     * @param newLevel the new level.\n+     */\n+    default void onUpgradeComplete(int newLevel)\n+    {\n+\n+    }\n+\n+    /**\n+     * On building move hook for modules.\n+     * @param oldBuilding the building that is going to be moved.\n+     */\n+    default void onBuildingMove(IBuilding oldBuilding)\n+    {\n+\n+    }\n+\n+    /**\n+     * Specific wakeup hook in modules.\n+     */\n+    default void onWakeUp()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkwOTY2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMDoxNFrOHpeKLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMDoxNFrOHpeKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0Nzc5MQ==", "bodyText": "Again this has no bearing being on a default module. Some modules do not tick and as such do not need this.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513247791", "createdAt": "2020-10-28T08:10:14Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)\n+    {\n+\n+    }\n+\n+    /**\n+     * On destruction hook of the building, calling into the modules.\n+     */\n+    default void onDestroyed()\n+    {\n+\n+    }\n+\n+    /**\n+     * Colony tick hook.\n+     * @param colony the colony the tick is invoked from.\n+     */\n+    default void onColonyTick(@NotNull IColony colony)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxMTcxOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMDo1MVrOHpeLcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMDo1MVrOHpeLcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODExMw==", "bodyText": "Again see other methods in this class.\nThe base module spec should only specific the bare minimum to classify itself as a module.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513248113", "createdAt": "2020-10-28T08:10:51Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)\n+    {\n+\n+    }\n+\n+    /**\n+     * On destruction hook of the building, calling into the modules.\n+     */\n+    default void onDestroyed()\n+    {\n+\n+    }\n+\n+    /**\n+     * Colony tick hook.\n+     * @param colony the colony the tick is invoked from.\n+     */\n+    default void onColonyTick(@NotNull IColony colony)\n+    {\n+\n+    }\n+\n+    /**\n+     * Upgrade complete module hook.\n+     * @param newLevel the new level.\n+     */\n+    default void onUpgradeComplete(int newLevel)\n+    {\n+\n+    }\n+\n+    /**\n+     * On building move hook for modules.\n+     * @param oldBuilding the building that is going to be moved.\n+     */\n+    default void onBuildingMove(IBuilding oldBuilding)\n+    {\n+\n+    }\n+\n+    /**\n+     * Specific wakeup hook in modules.\n+     */\n+    default void onWakeUp()\n+    {\n+\n+    }\n+\n+    /**\n+     * On player entering hook.\n+     * @param player the player that entered the building.\n+     */\n+    default void onPlayerEnterBuilding(PlayerEntity player)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxMzY4OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMToyMFrOHpeMlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMToyMFrOHpeMlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODQwNw==", "bodyText": "Move to a seperate interface not related to modules, called IHasDirtyState or something.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513248407", "createdAt": "2020-10-28T08:11:20Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)\n+    {\n+\n+    }\n+\n+    /**\n+     * On destruction hook of the building, calling into the modules.\n+     */\n+    default void onDestroyed()\n+    {\n+\n+    }\n+\n+    /**\n+     * Colony tick hook.\n+     * @param colony the colony the tick is invoked from.\n+     */\n+    default void onColonyTick(@NotNull IColony colony)\n+    {\n+\n+    }\n+\n+    /**\n+     * Upgrade complete module hook.\n+     * @param newLevel the new level.\n+     */\n+    default void onUpgradeComplete(int newLevel)\n+    {\n+\n+    }\n+\n+    /**\n+     * On building move hook for modules.\n+     * @param oldBuilding the building that is going to be moved.\n+     */\n+    default void onBuildingMove(IBuilding oldBuilding)\n+    {\n+\n+    }\n+\n+    /**\n+     * Specific wakeup hook in modules.\n+     */\n+    default void onWakeUp()\n+    {\n+\n+    }\n+\n+    /**\n+     * On player entering hook.\n+     * @param player the player that entered the building.\n+     */\n+    default void onPlayerEnterBuilding(PlayerEntity player)\n+    {\n+\n+    }\n+\n+    /**\n+     * Specific dirty marking of modules (separate from building dirty).\n+     */\n+    void markDirty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxNTE4OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModuleProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMTo0OFrOHpeNhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMTo0OFrOHpeNhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODY0Nw==", "bodyText": "We should not limit this to just blocks, adapt the javadoc.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513248647", "createdAt": "2020-10-28T08:11:48Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModuleProvider.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+\n+/**\n+ * Blocks providing building modules.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxNzY1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMjozMlrOHpePCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMjozMlrOHpePCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTAzNA==", "bodyText": "Javadoc completely misleading. And the name is wrong: IDefinesCoreBuildingStatsModule is more accurate.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513249034", "createdAt": "2020-10-28T08:12:32Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IDefinesBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxODUxOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMjo1MlrOHpePng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozNTo1MVrOHpfChw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTE4Mg==", "bodyText": "Nope.\nThis is up to the module.\nEither make both methods have a default value or none.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513249182", "createdAt": "2020-10-28T08:12:52Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IDefinesBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default int getMaxBuildingLevel()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2MjIxNQ==", "bodyText": "It's because maxBuildinglevel = 5 applies to 99% of our buildings. But the number of workers/inhabitants varies greatly. So it makes sense to have a default here but not in the other.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513262215", "createdAt": "2020-10-28T08:35:51Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IDefinesBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default int getMaxBuildingLevel()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTE4Mg=="}, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkxODkyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMzowMFrOHpeP5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxMzowMFrOHpeP5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTI1NQ==", "bodyText": "See other method in this interface.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513249255", "createdAt": "2020-10-28T08:13:00Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IDefinesBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default int getMaxBuildingLevel()\n+    {\n+        return 5;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    int getMaxInhabitants();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkyMjE1OnYy", "diffSide": "LEFT", "path": "src/api/java/com/minecolonies/api/compatibility/CompatibilityManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxNDowMFrOHpeR7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxNDowMFrOHpeR7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTc3Mw==", "bodyText": "This clearly states remove in 1.16 why was this removed in a PR that targets 1.15", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513249773", "createdAt": "2020-10-28T08:14:00Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/compatibility/CompatibilityManager.java", "diffHunk": "@@ -283,15 +283,7 @@ public boolean isPlantable(final ItemStack itemStack)\n             }\n \n             String[] split = string.split(\":\");\n-            //todo, this is backwards compatibility, remove in 1.16", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkyNzAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxNToyMVrOHpeUzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozNzozM1rOHpfGVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI1MDUxMQ==", "bodyText": "This really really really feels like a code smell in my opinion. The building instance really should not care what building it is representing, neither should the modules which are inside it.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513250511", "createdAt": "2020-10-28T08:15:21Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "diffHunk": "@@ -137,8 +140,8 @@ public static void init(final RegistryEvent.Register<BuildingEntry> event)\n \n         ModBuildings.home = new BuildingEntry.Builder()\n                               .setBuildingBlock(ModBlocks.blockHutHome)\n-                              .setBuildingProducer(BuildingHome::new)\n-                              .setBuildingViewProducer(() -> BuildingHome.View::new)\n+                              .setBuildingProducer((colony, blockPos) -> new DefaultBuildingInstance(colony, blockPos, \"citizen\", ModBuildings.home))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2MzE5MA==", "bodyText": "The building instance absolutely does need it. Necessary for the schematics etc", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513263190", "createdAt": "2020-10-28T08:37:33Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "diffHunk": "@@ -137,8 +140,8 @@ public static void init(final RegistryEvent.Register<BuildingEntry> event)\n \n         ModBuildings.home = new BuildingEntry.Builder()\n                               .setBuildingBlock(ModBlocks.blockHutHome)\n-                              .setBuildingProducer(BuildingHome::new)\n-                              .setBuildingViewProducer(() -> BuildingHome.View::new)\n+                              .setBuildingProducer((colony, blockPos) -> new DefaultBuildingInstance(colony, blockPos, \"citizen\", ModBuildings.home))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI1MDUxMQ=="}, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTkyNzY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxNToyOVrOHpeVJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxNToyOVrOHpeVJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI1MDU5Nw==", "bodyText": "See above.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513250597", "createdAt": "2020-10-28T08:15:29Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "diffHunk": "@@ -298,8 +301,8 @@ public static void init(final RegistryEvent.Register<BuildingEntry> event)\n \n         ModBuildings.tavern = new BuildingEntry.Builder()\n                                 .setBuildingBlock(ModBlocks.blockHutTavern)\n-                                .setBuildingProducer(BuildingTavern::new)\n-                                .setBuildingViewProducer(() -> BuildingTavern.View::new)\n+                                .setBuildingProducer((colony, blockPos) -> new DefaultBuildingInstance(colony, blockPos, \"tavern\", ModBuildings.tavern))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDE4MDM0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo0ODowNVrOHvHQxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo0ODowNVrOHvHQxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDEwMA==", "bodyText": "So I thought about this a bit.\nI agree that these are indeed the core stats.\nBut I think we can flush out the API a bit here.\nHit me up on Discord we jump in voice and I will explain what my thoughts here were how we can make this a bit more precise.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164100", "createdAt": "2020-11-07T10:48:05Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default int getMaxBuildingLevel()\n+    {\n+        return 5;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    int getMaxInhabitants();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDE4MDY5OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo0ODo0MlrOHvHQ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo0ODo0MlrOHvHQ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDEzOQ==", "bodyText": "Rename to IModuleWithExternalBlocks", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164139", "createdAt": "2020-11-07T10:48:42Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Module type to register specific blocks to a building (beds, workstations, etc).\n+ */\n+public interface IRegistersBlockModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDE4MDg0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo0ODo1OVrOHvHQ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo0ODo1OVrOHvHQ-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDE1NA==", "bodyText": "Rename to onBlockBuildInBuilding", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164154", "createdAt": "2020-11-07T10:48:59Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Module type to register specific blocks to a building (beds, workstations, etc).\n+ */\n+public interface IRegistersBlockModule extends IBuildingModule\n+{\n+    /**\n+     * Attempt to register a specific block at a specific module.\n+     * @param blockState the state.\n+     * @param pos the position.\n+     * @param world the world.\n+     */\n+    void registerBlockPosition(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDE4MTYzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo0OTo0NVrOHvHRUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo1NzowMVrOHvHUAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDI0MA==", "bodyText": "You should add a method that returns all Blocks registered to this module.\nSomething like getRegisteredPositions or getRegisteredBlocks(final IBlockReader world)", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164240", "createdAt": "2020-11-07T10:49:45Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Module type to register specific blocks to a building (beds, workstations, etc).\n+ */\n+public interface IRegistersBlockModule extends IBuildingModule\n+{\n+    /**\n+     * Attempt to register a specific block at a specific module.\n+     * @param blockState the state.\n+     * @param pos the position.\n+     * @param world the world.\n+     */\n+    void registerBlockPosition(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDkzMA==", "bodyText": "I thought about this, but each building holds the blocks differently for different purposes and sometimes even different sets of blocks. I don't think we need a getter that returns ALL of them", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164930", "createdAt": "2020-11-07T10:57:01Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Module type to register specific blocks to a building (beds, workstations, etc).\n+ */\n+public interface IRegistersBlockModule extends IBuildingModule\n+{\n+    /**\n+     * Attempt to register a specific block at a specific module.\n+     * @param blockState the state.\n+     * @param pos the position.\n+     * @param world the world.\n+     */\n+    void registerBlockPosition(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDI0MA=="}, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDE4MjMxOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IStoresDataModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo1MDoyMVrOHvHRnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo1MDoyMVrOHvHRnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDMxNg==", "bodyText": "Rename to: IModuleWithData.\nAlso extend the existing interface.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164316", "createdAt": "2020-11-07T10:50:21Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IStoresDataModule.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+\n+/**\n+ * Interface for all building modules that store additional data.\n+ */\n+public interface IStoresDataModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjExMzM5OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IModuleWithExternalBlocks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNTo1OTowOFrOHvYUZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNTo1OTowOFrOHvYUZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzU1OQ==", "bodyText": "getRegisteredBlocks()", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519443559", "createdAt": "2020-11-08T15:59:08Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IModuleWithExternalBlocks.java", "diffHunk": "@@ -5,16 +5,24 @@\n import net.minecraft.world.World;\n import org.jetbrains.annotations.NotNull;\n \n+import java.util.List;\n+\n /**\n  * Module type to register specific blocks to a building (beds, workstations, etc).\n  */\n-public interface IRegistersBlockModule extends IBuildingModule\n+public interface IModuleWithExternalBlocks extends IBuildingModule\n {\n     /**\n      * Attempt to register a specific block at a specific module.\n      * @param blockState the state.\n      * @param pos the position.\n      * @param world the world.\n      */\n-    void registerBlockPosition(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);\n+    void onBlockPlacedInBuilding(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);\n+\n+    /**\n+     * Get the list of registered blocks.\n+     * @return the list of positions of the blocks.\n+     */\n+    List<BlockPos> getRegisterBlocks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjExNDQzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/stat/IStat.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNTo1OTo0NlrOHvYU3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxOToxNToyM1rOHvZpeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzY3Ng==", "bodyText": "Not the version shown in the LDTTeam Discord.\nSo question, is this intended?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519443676", "createdAt": "2020-11-08T15:59:46Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/stat/IStat.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.minecolonies.api.colony.buildings.modules.stat;\n+\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * A specific stat.\n+ */\n+@FunctionalInterface\n+public interface IStat<N extends Number>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2MTE4Ng==", "bodyText": "yeah, I played around a bit with it and I think this one was the one that is the easiest to handle. The other ones were a bit more complex which made the code more difficult to maintain", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519461186", "createdAt": "2020-11-08T18:36:20Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/stat/IStat.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.minecolonies.api.colony.buildings.modules.stat;\n+\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * A specific stat.\n+ */\n+@FunctionalInterface\n+public interface IStat<N extends Number>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzY3Ng=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2MzA2Mg==", "bodyText": "what is that class even for? why do we turn int returns into complex objects which require unboxing?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519463062", "createdAt": "2020-11-08T18:54:58Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/stat/IStat.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.minecolonies.api.colony.buildings.modules.stat;\n+\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * A specific stat.\n+ */\n+@FunctionalInterface\n+public interface IStat<N extends Number>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzY3Ng=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2NDA4NQ==", "bodyText": "Allows us to define how certain return values might be combined (If one module returns 5 max citizens and another one also 5, should they be added, replaced, math.max? This allows us to do this more generically", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519464085", "createdAt": "2020-11-08T19:04:09Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/stat/IStat.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.minecolonies.api.colony.buildings.modules.stat;\n+\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * A specific stat.\n+ */\n+@FunctionalInterface\n+public interface IStat<N extends Number>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzY3Ng=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2NDQ3Mw==", "bodyText": "hm I don't think we should combine return values of different modules, those usually then also have a different meaning", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519464473", "createdAt": "2020-11-08T19:07:38Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/stat/IStat.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.minecolonies.api.colony.buildings.modules.stat;\n+\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * A specific stat.\n+ */\n+@FunctionalInterface\n+public interface IStat<N extends Number>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzY3Ng=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2NTMzNg==", "bodyText": "It makes sense in some cases: Allowing assignment of workers for example (each module allows to add one worker for example, someone could add a new module to a building with an additional worker). I could imagine many different use cases for combining values.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519465336", "createdAt": "2020-11-08T19:15:23Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/stat/IStat.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.minecolonies.api.colony.buildings.modules.stat;\n+\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * A specific stat.\n+ */\n+@FunctionalInterface\n+public interface IStat<N extends Number>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzY3Ng=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjExNTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/modules/BedHandlingModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjowMToyNVrOHvYViQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjowMToyNVrOHvYViQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0Mzg0OQ==", "bodyText": "You can make this a set instead of a list to make logics a bit easier.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519443849", "createdAt": "2020-11-08T16:01:25Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/modules/BedHandlingModule.java", "diffHunk": "@@ -0,0 +1,115 @@\n+package com.minecolonies.coremod.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.colony.buildings.modules.*;\n+import net.minecraft.block.BedBlock;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.nbt.NBTUtil;\n+import net.minecraft.state.properties.BedPart;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import net.minecraftforge.common.util.Constants;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.*;\n+\n+import static com.minecolonies.api.util.constant.NbtTagConstants.TAG_BEDS;\n+\n+/**\n+ * The class of the citizen hut.\n+ */\n+public class BedHandlingModule extends AbstractBuildingModule implements IModuleWithExternalBlocks, IModuleWithData, IBuildingEventsModule\n+{\n+    /**\n+     * List of all beds.\n+     */\n+    @NotNull\n+    private final List<BlockPos> bedList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjExODg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/minimal/EntityAISleep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjowNDozNFrOHvYXAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjowNDozNFrOHvYXAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NDIyNw==", "bodyText": "Seeing this structure makes my stumach crinch a bit.\nI think we should add something like this to the building:\npublic Optional<T extends IModule> <T> getModule(Class<T> moduleClass)\nOn which we can then to chaining with things like .map(IModuleWithExternalBlocks::getRegisteredBlocks).orElse(Collections.emptyList())", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519444227", "createdAt": "2020-11-08T16:04:34Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/minimal/EntityAISleep.java", "diffHunk": "@@ -214,9 +215,9 @@ private void findBedAndTryToSleep()\n             {\n                 final IBuilding hut = colony.getBuildingManager().getBuilding(citizen.getHomePosition());\n                 List<BlockPos> bedList = new ArrayList<>();\n-                if (hut.hasModule(LivingBuildingModule.class))\n+                if (hut.hasModule(BedHandlingModule.class))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjEzMDkyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjoxNjo1OFrOHvYc2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzozODoxM1rOHxNe9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg==", "bodyText": "I thin inhabitants belong to assignments, as you cant have inhabitants without assignments", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519445722", "createdAt": "2020-11-08T16:16:58Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2MzY5Ng==", "bodyText": "true", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519463696", "createdAt": "2020-11-08T19:00:15Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2MzkwMA==", "bodyText": "The problem is that the tavern and home building use the same assigning module (as will many worker modules) but the actually max check is in the core module.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519463900", "createdAt": "2020-11-08T19:02:10Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2NDAyNA==", "bodyText": "could just move both into the assign one?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519464024", "createdAt": "2020-11-08T19:03:32Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2NDM0Mg==", "bodyText": "No, that would meddle with the entire system. Both buildings use different basis for the max (tavern is max 4, home is max 5 and 1 per building level).", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519464342", "createdAt": "2020-11-08T19:06:28Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1MTM4Ng==", "bodyText": "I am going to argue that we should release that inhabitants <-> assigning logic in the near future.\nWe should add modules which allow assigning workers with specific jobs to a building. But the count should be up to the player in a certain degree.\nAka it should be possible to have 1 cook and 6 helpers or\n2 cooks and 1 helper.\nWe should envision some kind of slot like mechanism where certain assignments of jobs use more slots, and where this method returns the amount of slots available.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521251386", "createdAt": "2020-11-11T10:10:35Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NzYyNw==", "bodyText": "the way I see it is that we get specialized assignment modules, e.g. one for the Worker(s) where you can assign X workers, one for Living where you can have X ppl live in. And as I see that both of them would required a max you can put into the slots", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521297627", "createdAt": "2020-11-11T11:37:02Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMzNjE3Mg==", "bodyText": "I don't see this as anything urgent though. There are 10 more urgent things on my list before sth like that.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521336172", "createdAt": "2020-11-11T12:50:58Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM1NTU4Ng==", "bodyText": "no you need to flesh this out before just merging it, else we end up with you using it in 10 places and needing a big refactor after. Not saying you need to make worker/living modules now, but put a getMaxAssignees into the Assignment base module and just remove the getMaxinhabitants here. As far as I see this there is no reason at all for this interface to exist.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521355586", "createdAt": "2020-11-11T13:25:15Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM2MzE5MQ==", "bodyText": "For the time being, I was happy with how the system is currently defined, having this here centrally. A few examples of problems with assignment based method:\nAll buildings where people sleep and work have two assignment modules, one living, one working. So each would return 5 even though the max should be 5 building based, not module based.\nSame thing for other methods. So this method is here to stay. If anything, we'd have a second method in the assignment with a getModuleMax()", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521363191", "createdAt": "2020-11-11T13:38:13Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjEzMTU2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjoxNzo0NVrOHvYdJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxOTowNTo0NVrOHvZlUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTc5Nw==", "bodyText": "need a more descriptive name for this, do we need this at all? afaik building levels are tied to schematics", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519445797", "createdAt": "2020-11-08T16:17:45Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2MjE2NQ==", "bodyText": "Regarding this. We had the discussion a while back once to actually have the building check on the schematics to determine it's max level. But that'd be out of the scope of the PR, so I'd like to keep it for now here. I can add a todo here though.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519462165", "createdAt": "2020-11-08T18:46:11Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTc5Nw=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2NDE0OA==", "bodyText": "I actually thought we'd keep the data which is core for a building, like schematic,level and such in the actual building object itself, as thats required and not modular", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519464148", "createdAt": "2020-11-08T19:04:41Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTc5Nw=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2NDI3NQ==", "bodyText": "I moved the building level there now, yes", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519464275", "createdAt": "2020-11-08T19:05:45Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTc5Nw=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjEzMjEzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IModuleWithData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjoxODo0MlrOHvYdcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxODo0MTozM1rOHvZbVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTg3Mg==", "bodyText": "ISerializeableModule?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519445872", "createdAt": "2020-11-08T16:18:42Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IModuleWithData.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+\n+/**\n+ * Interface for all building modules that store additional data.\n+ */\n+public interface IModuleWithData extends IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2MTcxNw==", "bodyText": "IPersistentModule I think is better, ye", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519461717", "createdAt": "2020-11-08T18:41:33Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IModuleWithData.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+\n+/**\n+ * Interface for all building modules that store additional data.\n+ */\n+public interface IModuleWithData extends IBuildingModule", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTg3Mg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjIwMTUyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/AbstractBuildingModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNzozNDoyM1rOHvY_3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxODozOToxNlrOHvZaVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ1NDY4Ng==", "bodyText": "this class is kinda duplicated with IHasDirty, use either or?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519454686", "createdAt": "2020-11-08T17:34:23Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/AbstractBuildingModule.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+\n+/**\n+ * Abstract class for all modules. Has base methods for all the necessary methods that have to be called from the building.\n+ */\n+public abstract class AbstractBuildingModule implements IBuildingModule\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ2MTQ2MQ==", "bodyText": "No this one is the implementation of IHasDirty, so this one actually tracks the boolean", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519461461", "createdAt": "2020-11-08T18:39:16Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/AbstractBuildingModule.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+\n+/**\n+ * Abstract class for all modules. Has base methods for all the necessary methods that have to be called from the building.\n+ */\n+public abstract class AbstractBuildingModule implements IBuildingModule\n+{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ1NDY4Ng=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2Nzc2MjU4OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowNjo0OFrOHxGhdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoxMTozMFrOHxMh8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg==", "bodyText": "I do not think this method should be in the API.\nAs stated before: building modules should be immutable once the building is constructed.\nSo I do not see a reason to have a registerModule method.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521249142", "createdAt": "2020-11-11T10:06:48Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NTc0NQ==", "bodyText": "Because we handle IBuilding everywhere. As an alternative we could set up sth like \"you can't add modules after the initial setup\" with a throw or so.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521295745", "createdAt": "2020-11-11T11:33:11Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NjU4MQ==", "bodyText": "But we should have this in IBuilding such that we don't have to give out the AbstractBuilding or so", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521296581", "createdAt": "2020-11-11T11:34:52Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI5NjYyOA==", "bodyText": "hm this reminds me a bit on the cook, which through upgrading a building gets added new functionality in terms of the assistant, so might need it since buildings can change through upgrades", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521296628", "createdAt": "2020-11-11T11:34:59Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMwMzYwMA==", "bodyText": "In that case the building would get the module form the beginning, but the module wouldn't \"work\" unless the necessary conditions are met.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521303600", "createdAt": "2020-11-11T11:49:02Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMyMTQ1NQ==", "bodyText": "@Raycoms you should build the list of modules. When the building instance is constructed..,....\nFor example somewhere in the building type or something.\nThe building should never have this.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521321455", "createdAt": "2020-11-11T12:24:07Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTMzODIzNw==", "bodyText": "We do this on building instantiation. But we give the building as a hook to register modules on. I don't see a problem with that.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521338237", "createdAt": "2020-11-11T12:54:43Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM0NzU3MA==", "bodyText": "I can add to the javadoc: Must be called during building instantiation.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521347570", "createdAt": "2020-11-11T13:11:30Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2Nzc2NjgzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowNzo1OFrOHxGkKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowODoyNFrOHxGlOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTgzMg==", "bodyText": "I do not like nullables.\nIt can cause weird issues.\nUse an optional here, which forces people to think about what todo when the module is not available in the expected building automatically.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521249832", "createdAt": "2020-11-11T10:07:58Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1MDEwNw==", "bodyText": "Might additionally collapse the hasModule into this method when switched to the optional.\nComputationally it is identical.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521250107", "createdAt": "2020-11-11T10:08:24Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTgzMg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3348, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}