{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMjg0NTYx", "number": 5064, "title": "Feature/structure rework", "bodyText": "This is a mayor rework of how structures are placed.\nThe main part of this work is on the side of structurize where structurize now handles placement and the placement handlers and provides callbacks.\nMinecolonies now only hooks into them.\nReview please", "createdAt": "2020-05-23T14:52:46Z", "url": "https://github.com/ldtteam/minecolonies/pull/5064", "merged": true, "mergeCommit": {"oid": "3cbf7d00617d38f30185ca8f908d08d8436e63b2"}, "closed": true, "closedAt": "2020-05-25T18:33:35Z", "author": {"login": "Raycoms"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjQODqAH2gAyNDIyMjg0NTYxOmY2ZmY5NWFhYTY2ZTIyMjI5N2FjMGMxYzUxMjVmMWNkM2Y4NjIzNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABck0VzXAH2gAyNDIyMjg0NTYxOjMyNTYzMTFhN2MwNmQ4ODBkODg3YTc1NGFmZmIzN2QzMDgzZGYzMTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6ff95aaa66e222297ac0c1c5125f1cd3f862348", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/f6ff95aaa66e222297ac0c1c5125f1cd3f862348", "committedDate": "2020-05-20T21:47:16Z", "message": "Part 1 of structure rework adaptation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f89be76eb858064e598fc5fd8b0668eaf3f96320", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/f89be76eb858064e598fc5fd8b0668eaf3f96320", "committedDate": "2020-05-20T22:35:06Z", "message": "part 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f51aee5abc5d8244727bcc259e8ec9390818c9de", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/f51aee5abc5d8244727bcc259e8ec9390818c9de", "committedDate": "2020-05-23T14:47:19Z", "message": "Finish integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caab836a8221c980d7f1ab78b61fbe00ddc8bab8", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/caab836a8221c980d7f1ab78b61fbe00ddc8bab8", "committedDate": "2020-05-23T14:47:23Z", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/structure-rework"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/bb0eec564be763070621b0f81b362050d736bb26", "committedDate": "2020-05-23T14:56:21Z", "message": "250 is better"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "668ca84f31ad9a4d7df44723f5ab29101db41ff3", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/668ca84f31ad9a4d7df44723f5ab29101db41ff3", "committedDate": "2020-05-23T19:19:19Z", "message": "Vikings preparations"}, "afterCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/bb0eec564be763070621b0f81b362050d736bb26", "committedDate": "2020-05-23T14:56:21Z", "message": "250 is better"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mjg1MDg2", "url": "https://github.com/ldtteam/minecolonies/pull/5064#pullrequestreview-417285086", "createdAt": "2020-05-23T14:59:29Z", "commit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNDo1OTozMFrOGZp2EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxOTozNjoyMlrOGZrBnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1MzE2OQ==", "bodyText": "bad javadoc^^", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429553169", "createdAt": "2020-05-23T14:59:30Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package com.minecolonies.api.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.api.util.Log;\n+import com.ldtteam.structurize.management.Manager;\n+import com.ldtteam.structurize.placement.StructurePlacer;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.placement.structure.IStructureHandler;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.ldtteam.structurize.util.TickedWorldOperation;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyManager;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.Mirror;\n+import net.minecraft.util.Rotation;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+\n+/**\n+ * Interface for using the structure codebase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1MzE5Mw==", "bodyText": "bad javadoc^^", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429553193", "createdAt": "2020-05-23T14:59:47Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.minecolonies.api.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+\n+/**\n+ * Interface for using the structure codebase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1MzI4Nw==", "bodyText": "this looks like an unused building field, do we need this?", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429553287", "createdAt": "2020-05-23T15:00:55Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/util/LoadOnlyStructureHandler.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package com.minecolonies.api.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+\n+/**\n+ * Interface for using the structure codebase.\n+ */\n+public final class LoadOnlyStructureHandler extends CreativeStructureHandler\n+{\n+    /**\n+     * The building associated with this placement.\n+     */\n+    private IBuilding building;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1NDA5OQ==", "bodyText": "how about just \"CreativeBuildingStructureHandler\"", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429554099", "createdAt": "2020-05-23T15:11:50Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/util/MCCreativeStructureHandler.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package com.minecolonies.api.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.api.util.Log;\n+import com.ldtteam.structurize.management.Manager;\n+import com.ldtteam.structurize.placement.StructurePlacer;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.placement.structure.IStructureHandler;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.ldtteam.structurize.util.TickedWorldOperation;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyManager;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.Mirror;\n+import net.minecraft.util.Rotation;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.List;\n+\n+/**\n+ * Interface for using the structure codebase.\n+ */\n+public final class MCCreativeStructureHandler extends CreativeStructureHandler", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NjQwNA==", "bodyText": "isnt this the same as our config setting?", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429566404", "createdAt": "2020-05-23T18:09:04Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/util/constant/CitizenConstants.java", "diffHunk": "@@ -257,4 +257,45 @@\n      * Noon day time.\n      */\n     public static final int NOON = 6000;\n+\n+    /**\n+     * The minimum range to keep from the current building place.\n+     */\n+    public static final int MIN_ADDITIONAL_RANGE_TO_BUILD = 3;\n+\n+    /**\n+     * String which shows if something is a waypoint.\n+     */\n+    public static final String WAYPOINT_STRING = \"infrastructure\";\n+\n+    /**\n+     * Amount of xp the builder gains each building (Will increase by attribute modifiers additionally).\n+     */\n+    public static final double XP_EACH_BUILDING = 10.0D;\n+\n+    /**\n+     * Increase this value to make the building speed slower.\n+     * Used to balance worker level speed increase.\n+     */\n+    public static final int PROGRESS_MULTIPLIER = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NjkyMw==", "bodyText": "tried out pirate ships? :)", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429566923", "createdAt": "2020-05-23T18:15:59Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/PirateEventUtils.java", "diffHunk": "@@ -165,10 +166,10 @@ public static boolean canSpawnPirateEventAt(final IColony colony, final BlockPos\n         final World world = colony.getWorld();\n         final String shipSize = ShipSize.getShipForRaidLevel(raidLevel).schematicName;\n \n-        final Structure structure = new Structure(colony.getWorld(), Structures.SCHEMATICS_PREFIX + PIRATESHIP_FOLDER + shipSize, new PlacementSettings());\n-        structure.rotate(BlockPosUtil.getRotationFromRotations(rotation), colony.getWorld(), spawnPoint, Mirror.NONE);\n+        final MCCreativeStructureHandler structure = new MCCreativeStructureHandler(colony.getWorld(), spawnPoint, Structures.SCHEMATICS_PREFIX + PIRATESHIP_FOLDER + shipSize, new PlacementSettings(), true);\n+        structure.getBluePrint().rotateWithMirror(BlockPosUtil.getRotationFromRotations(rotation), Mirror.NONE, colony.getWorld());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NzE5OQ==", "bodyText": "not sure if the 3 down offset still fits with the changed saving above", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429567199", "createdAt": "2020-05-23T18:19:51Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -100,12 +103,12 @@ public boolean spawnTemporaryStructure(\n \n         backupSchematics.put(targetSpawnPoint.down(3), eventID);\n \n-        InstantStructurePlacer.loadAndPlaceStructureWithRotation(world,\n+        MCCreativeStructureHandler.loadAndPlaceStructureWithRotation(world,\n           schematicPath,\n           targetSpawnPoint.down(3),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjQyMA==", "bodyText": "forgotten log entry?", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429572420", "createdAt": "2020-05-23T19:35:06Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/util/BuildingStructureHandler.java", "diffHunk": "@@ -0,0 +1,316 @@\n+package com.minecolonies.coremod.entity.ai.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.placement.structure.AbstractStructureHandler;\n+import com.ldtteam.structurize.util.BlockUtils;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyManager;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.util.ItemStackUtils;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.ToolType;\n+import com.minecolonies.coremod.MineColonies;\n+import com.minecolonies.coremod.colony.jobs.AbstractJobStructure;\n+import com.minecolonies.coremod.entity.ai.basic.AbstractEntityAIStructure;\n+import com.minecolonies.coremod.util.WorkerUtil;\n+import net.minecraft.block.*;\n+import net.minecraft.inventory.EquipmentSlotType;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tags.ItemTags;\n+import net.minecraft.util.Hand;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.MathHelper;\n+import net.minecraft.world.World;\n+import net.minecraftforge.items.IItemHandler;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static com.minecolonies.api.util.constant.CitizenConstants.RUN_AWAY_SPEED;\n+\n+/**\n+ * Represents a build task for the StructureIterator AI.\n+ * <p>\n+ * It internally uses a structure it transparently loads.\n+ */\n+public class BuildingStructureHandler extends AbstractStructureHandler\n+{\n+    /**\n+     * Amount of xp the builder gains for placing a block.\n+     */\n+    private static final double XP_EACH_BLOCK = 0.1D;\n+\n+    /**\n+     * The structure AI handling this task.\n+     */\n+    private final AbstractEntityAIStructure<? extends AbstractJobStructure> structureAI;\n+\n+    /**\n+     * The total number of stages.\n+     */\n+    private final Stage[] stages;\n+\n+    /**\n+     * The building associated with this placement.\n+     */\n+    private IBuilding building;\n+\n+    /**\n+     * The current structure stage.\n+     */\n+    private int stage;\n+\n+    /**\n+     * The minecolonies AI specific creative structure placer.\n+     * @param world the world.\n+     * @param worldPos the pos it is placed at.\n+     * @param structureName the name of the structure.\n+     * @param settings the placement settings.\n+     * @param entityAIStructure the AI handling this structure.\n+     */\n+    public BuildingStructureHandler(final World world, final BlockPos worldPos, final String structureName, final PlacementSettings settings, final AbstractEntityAIStructure<? extends AbstractJobStructure> entityAIStructure, final Stage[] stages)\n+    {\n+        super(world, worldPos, structureName, settings);\n+        setupBuilding();\n+        this.structureAI= entityAIStructure;\n+        this.stages = stages;\n+        this.stage = 0;\n+    }\n+\n+    /**\n+     * The minecolonies AI specific creative structure placer.\n+     * @param world the world.\n+     * @param worldPos the pos it is placed at.\n+     * @param blueprint the blueprint.\n+     * @param settings the placement settings.\n+     * @param entityAIStructure the AI handling this structure.\n+     */\n+    public BuildingStructureHandler(final World world, final BlockPos worldPos, final Blueprint blueprint, final PlacementSettings settings, final AbstractEntityAIStructure<? extends AbstractJobStructure> entityAIStructure, final Stage[] stages)\n+    {\n+        super(world, worldPos, blueprint, settings);\n+        setupBuilding();\n+        this.structureAI= entityAIStructure;\n+        this.stages = stages;\n+        this.stage = 0;\n+    }\n+\n+    /**\n+     * Setup the building to register things to.\n+     */\n+    private void setupBuilding()\n+    {\n+        final IColony colony = IColonyManager.getInstance().getColonyByPosFromWorld(getWorld(), getWorldPos());\n+        if (colony != null)\n+        {\n+            this.building = colony.getBuildingManager().getBuilding(getWorldPos());\n+        }\n+    }\n+\n+    /**\n+     * Get the current stage we're in.\n+     *\n+     * @return the current Stage.\n+     */\n+    @Nullable\n+    public Stage getStage()\n+    {\n+        if (this.stage >= stages.length)\n+        {\n+            return null;\n+        }\n+        return stages[stage];\n+    }\n+\n+    /**\n+     * Go to the next stage.\n+     */\n+    public boolean nextStage()\n+    {\n+        return ++this.stage < stages.length;\n+    }\n+\n+    /**\n+     * Set the current stage from memory.\n+     * @param stage the stage to set.\n+     */\n+    public void setStage(final Stage stage)\n+    {\n+        for (int i = 0; i < stages.length; i++)\n+        {\n+            if (stages[i] == stage)\n+            {\n+                this.stage = i;\n+                return;\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void prePlacementLogic(final BlockPos worldPos, final BlockState blockState)\n+    {\n+        WorkerUtil.faceBlock(worldPos, structureAI.getWorker());\n+        //Move out of the way when placing blocks\n+        final ItemStack item = BlockUtils.getItemStackFromBlockState(blockState);\n+        structureAI.getWorker().setItemStackToSlot(EquipmentSlotType.MAINHAND, item == null ? ItemStackUtils.EMPTY : item);\n+\n+        if (MathHelper.floor(structureAI.getWorker().getPosX()) == worldPos.getX()\n+              && MathHelper.abs(worldPos.getY() - (int) structureAI.getWorker().getPosY()) <= 1\n+              && MathHelper.floor(structureAI.getWorker().getPosZ()) == worldPos.getZ()\n+              && structureAI.getWorker().getNavigator().noPath())\n+        {\n+            structureAI.getWorker().getNavigator().moveAwayFromXYZ(worldPos, RUN_AWAY_SPEED, 1);\n+        }\n+\n+        structureAI.getWorker().swingArm(Hand.MAIN_HAND);\n+    }\n+\n+    @Nullable\n+    @Override\n+    public IItemHandler getInventory()\n+    {\n+        return structureAI.getWorker().getInventoryCitizen();\n+    }\n+\n+    @Override\n+    public void triggerSuccess(final BlockPos pos, final List<ItemStack> list, final boolean placement)\n+    {\n+        final BlockState state = getBluePrint().getBlockState(pos);\n+        final BlockPos worldPos = getProgressPosInWorld(pos);\n+        if (building != null)\n+        {\n+            building.registerBlockPosition(getBluePrint().getBlockState(pos), worldPos, this.getWorld());\n+        }\n+\n+        if (placement)\n+        {\n+            structureAI.getWorker().getCitizenExperienceHandler().addExperience(XP_EACH_BLOCK);\n+\n+            for (final ItemStack stack : list)\n+            {\n+                structureAI.reduceNeededResources(stack);\n+            }\n+        }\n+\n+        if (state.getBlock() == ModBlocks.blockWayPoint)\n+        {\n+            structureAI.getWorker().getCitizenColonyHandler().getColony().addWayPoint(worldPos, state);\n+        }\n+        Log.getLogger().warn(\"success\" + pos.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU3MjUwOQ==", "bodyText": "is this really needed? does the place not normally load the placed's TE data?", "url": "https://github.com/ldtteam/minecolonies/pull/5064#discussion_r429572509", "createdAt": "2020-05-23T19:36:22Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/server/BuildToolPasteMessage.java", "diffHunk": "@@ -173,8 +180,21 @@ public void onExecute(final NetworkEvent.Context ctxIn, final boolean isLogicalS\n             if (isHut)\n             {\n                 handleHut(CompatibilityUtils.getWorldFromEntity(player), player, sn, rotation, pos, mirror, state, complete);\n-                InstantStructurePlacer.loadAndPlaceStructureWithRotation(player.world, structureName,\n-                  pos, BlockPosUtil.getRotationFromRotations(rotation), mirror ? Mirror.FRONT_BACK : Mirror.NONE, complete);\n+                final Blueprint blueprint = MCCreativeStructureHandler.loadAndPlaceStructureWithRotation(player.world, structureName,\n+                  pos, BlockPosUtil.getRotationFromRotations(rotation), mirror ? Mirror.FRONT_BACK : Mirror.NONE, !complete, player);\n+\n+                final TileEntity tileEntity = player.world.getTileEntity(pos);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb0eec564be763070621b0f81b362050d736bb26"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/c8abc9bcfd7f547f38ffaa455ad763f99ae1437c", "committedDate": "2020-05-24T08:53:55Z", "message": "adjust to review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzcyNzA4", "url": "https://github.com/ldtteam/minecolonies/pull/5064#pullrequestreview-417372708", "createdAt": "2020-05-24T16:26:02Z", "commit": {"oid": "c8abc9bcfd7f547f38ffaa455ad763f99ae1437c"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7cb28f5f18445614092e311fb5dfc18cf21bef4", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/e7cb28f5f18445614092e311fb5dfc18cf21bef4", "committedDate": "2020-05-25T12:21:31Z", "message": "dman leaves can_eat and not isFood behind"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2957fcc3b758820d5716be5459bdfe6913d4f62", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/c2957fcc3b758820d5716be5459bdfe6913d4f62", "committedDate": "2020-05-25T17:02:42Z", "message": "fix some oddities with structure placement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a87e47e2cb0cbdd3c410f7b688e47520091c5c7", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/3a87e47e2cb0cbdd3c410f7b688e47520091c5c7", "committedDate": "2020-05-25T18:25:58Z", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/structure-rework"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3256311a7c06d880d887a754affb37d3083df313", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/3256311a7c06d880d887a754affb37d3083df313", "committedDate": "2020-05-25T18:26:14Z", "message": "setup properties"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2133, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}