{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDIwNjA0", "number": 4608, "title": "Feature + Civilian Research Tree", "bodyText": "Closes #4504\nCloses #4588\nCloses #4596\nThe second part of the research tree\nChanges proposed in this pull request:\n\nCivilian Research Path\nAdd Rails Pathing\n\nReview please", "createdAt": "2020-04-09T13:22:05Z", "url": "https://github.com/ldtteam/minecolonies/pull/4608", "merged": true, "mergeCommit": {"oid": "cd1e7949f609907f257bf442f8e9a4664e8c4572"}, "closed": true, "closedAt": "2020-04-11T09:48:09Z", "author": {"login": "Raycoms"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSyVR-gH2gAyNDAxNDIwNjA0OjM5YmE0Mjk2OGFmOGM1Nzk2ODA0YjQ5Mjk0YjA5ZmJlOTdmMTIzY2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWOlyvAFqTM5MTM3ODM3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39ba42968af8c5796804b49294b09fbe97f123ca", "author": {"user": {"login": "OrionDevelopment", "name": "Marc Hermans"}}, "url": "https://github.com/ldtteam/minecolonies/commit/39ba42968af8c5796804b49294b09fbe97f123ca", "committedDate": "2020-03-30T17:55:13Z", "message": "Start working on pathfinding.\nFirst add a teleport command."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e342cae9dff7a7dd443d4e1f9c4f835e83f824a", "author": {"user": {"login": "OrionDevelopment", "name": "Marc Hermans"}}, "url": "https://github.com/ldtteam/minecolonies/commit/6e342cae9dff7a7dd443d4e1f9c4f835e83f824a", "committedDate": "2020-03-31T06:25:07Z", "message": "Attempting to get the Pathing to behave but it is not."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd197841effe363e459081cf11a0fcbe1e1a8121", "author": {"user": {"login": "OrionDevelopment", "name": "Marc Hermans"}}, "url": "https://github.com/ldtteam/minecolonies/commit/dd197841effe363e459081cf11a0fcbe1e1a8121", "committedDate": "2020-04-01T19:13:13Z", "message": "Adding some commands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ddf5f7edd436493c7e1b464878b1d682adb92bd", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/2ddf5f7edd436493c7e1b464878b1d682adb92bd", "committedDate": "2020-04-02T09:47:34Z", "message": "move to a place where it makes more sense"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "256828ada9f3732e8610aa5fea5f7a796ebfa51c", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/256828ada9f3732e8610aa5fea5f7a796ebfa51c", "committedDate": "2020-04-02T10:25:14Z", "message": "failed state to restart"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e866d8fe3b784cb10d48652832fe0a344ec9723", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/3e866d8fe3b784cb10d48652832fe0a344ec9723", "committedDate": "2020-04-03T17:10:57Z", "message": "fix #4562"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db927c4360f4c59fc9fd91856be12a9a3b6fb3e2", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/db927c4360f4c59fc9fd91856be12a9a3b6fb3e2", "committedDate": "2020-04-03T17:26:23Z", "message": "fix #4563"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85c0b8fac4008dcdde2481da1dcb2371dd28a758", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/85c0b8fac4008dcdde2481da1dcb2371dd28a758", "committedDate": "2020-04-03T17:28:15Z", "message": "fix #4559"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e4c4130ced76a41c061a34fa03f5f30ed4f12a0", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/3e4c4130ced76a41c061a34fa03f5f30ed4f12a0", "committedDate": "2020-04-03T18:17:11Z", "message": "fixed stack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "153910a64ab868bda8999768d52a58d90ad7d095", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/153910a64ab868bda8999768d52a58d90ad7d095", "committedDate": "2020-04-03T20:49:59Z", "message": "Setup rails pathing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96d12496a4026d83962165638ec49be4146afce8", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/96d12496a4026d83962165638ec49be4146afce8", "committedDate": "2020-04-04T12:18:40Z", "message": "wrap up rails pathing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad0a8e944e278c05759e3f8ebcc1ee6f728873bd", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/ad0a8e944e278c05759e3f8ebcc1ee6f728873bd", "committedDate": "2020-04-04T16:15:27Z", "message": "Setup custom minecart without collision"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18722a288a6a77345f66f41f1d77e075928225e7", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/18722a288a6a77345f66f41f1d77e075928225e7", "committedDate": "2020-04-04T20:19:48Z", "message": "improve stuck handling and fixed speed of cart"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "420e065f10871933d506cdf10cec6d59ed4fe520", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/420e065f10871933d506cdf10cec6d59ed4fe520", "committedDate": "2020-04-05T08:19:13Z", "message": "don't double delete items"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "098554dfeb280c59a99e1016e4feb4d99d58551c", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/098554dfeb280c59a99e1016e4feb4d99d58551c", "committedDate": "2020-04-05T08:44:35Z", "message": "Revert \"don't double delete items\"\n\nThis reverts commit 420e065f10871933d506cdf10cec6d59ed4fe520."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21928be1bac8a8cf26ceea5ef0e47895d07d5834", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/21928be1bac8a8cf26ceea5ef0e47895d07d5834", "committedDate": "2020-04-09T09:46:47Z", "message": "Initial setup for colony"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda1a5d8dc5b333913da7071462dc2713d9d4fa1", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/dda1a5d8dc5b333913da7071462dc2713d9d4fa1", "committedDate": "2020-04-09T09:47:12Z", "message": "Merge remote-tracking branch 'origin/version/1.15' into feature/rails-pathing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0ee4a667980d8ac91aa67200c2b3092f8a3db5c", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/e0ee4a667980d8ac91aa67200c2b3092f8a3db5c", "committedDate": "2020-04-09T10:08:25Z", "message": "First part of the tree setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b542921490ef40187baf6d9fe5a04438496e77d", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/8b542921490ef40187baf6d9fe5a04438496e77d", "committedDate": "2020-04-09T10:42:46Z", "message": "Finish setting up first part of the tree"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7253adc3179d452e1016db9b1d9d9c7ce5dd6f67", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/7253adc3179d452e1016db9b1d9d9c7ce5dd6f67", "committedDate": "2020-04-09T12:11:25Z", "message": "Finish research tree implementation for civilian"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c", "committedDate": "2020-04-09T13:21:08Z", "message": "improve max handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNzk3MTA2", "url": "https://github.com/ldtteam/minecolonies/pull/4608#pullrequestreview-390797106", "createdAt": "2020-04-09T13:35:15Z", "commit": {"oid": "fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNToxNlrOGDY-2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNToxNlrOGDY-2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwODIxOQ==", "bodyText": "Why do we need that? Can't it extend Minecart entity instead? (looks way much copy code to me)", "url": "https://github.com/ldtteam/minecolonies/pull/4608#discussion_r406208219", "createdAt": "2020-04-09T13:35:16Z", "author": {"login": "Nightenom"}, "path": "src/api/java/com/minecolonies/api/entity/MinecoloniesMinecart.java", "diffHunk": "@@ -0,0 +1,291 @@\n+package com.minecolonies.api.entity;\n+\n+import com.google.common.collect.Maps;\n+import com.mojang.datafixers.util.Pair;\n+import net.minecraft.block.AbstractRailBlock;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.PoweredRailBlock;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.item.minecart.AbstractMinecartEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.network.IPacket;\n+import net.minecraft.state.properties.RailShape;\n+import net.minecraft.util.Direction;\n+import net.minecraft.util.Hand;\n+import net.minecraft.util.Util;\n+import net.minecraft.util.math.*;\n+import net.minecraft.world.World;\n+import net.minecraftforge.fml.network.NetworkHooks;\n+import org.jetbrains.annotations.NotNull;\n+\n+import javax.annotation.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Special minecolonies minecart that doesn't collide.\n+ */\n+public class MinecoloniesMinecart extends AbstractMinecartEntity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNzk3MTY0", "url": "https://github.com/ldtteam/minecolonies/pull/4608#pullrequestreview-390797164", "createdAt": "2020-04-09T13:35:19Z", "commit": {"oid": "fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzozNToxOVrOGDY_Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMzo1ODozN1rOGDZ98Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIwODI2Ng==", "bodyText": "Do we want this to ignore powered rails and such? should overwrite\n/**\n* Return false if this cart should not call onMinecartPass() and should ignore Powered Rails.\n* @return True if this cart should call onMinecartPass().\n*/\ndefault boolean shouldDoRailFunctions() {\nreturn true;\n}\nthen", "url": "https://github.com/ldtteam/minecolonies/pull/4608#discussion_r406208266", "createdAt": "2020-04-09T13:35:19Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/entity/MinecoloniesMinecart.java", "diffHunk": "@@ -0,0 +1,291 @@\n+package com.minecolonies.api.entity;\n+\n+import com.google.common.collect.Maps;\n+import com.mojang.datafixers.util.Pair;\n+import net.minecraft.block.AbstractRailBlock;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.PoweredRailBlock;\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.item.minecart.AbstractMinecartEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.network.IPacket;\n+import net.minecraft.state.properties.RailShape;\n+import net.minecraft.util.Direction;\n+import net.minecraft.util.Hand;\n+import net.minecraft.util.Util;\n+import net.minecraft.util.math.*;\n+import net.minecraft.world.World;\n+import net.minecraftforge.fml.network.NetworkHooks;\n+import org.jetbrains.annotations.NotNull;\n+\n+import javax.annotation.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Special minecolonies minecart that doesn't collide.\n+ */\n+public class MinecoloniesMinecart extends AbstractMinecartEntity\n+{\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIxOTY0NA==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/4608#discussion_r406219644", "createdAt": "2020-04-09T13:52:01Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/pathfinding/MinecoloniesAdvancedPathNavigate.java", "diffHunk": "@@ -410,6 +450,105 @@ else if (ourEntity.isInWater())\n         return false;\n     }\n \n+    /**\n+     * Handle rails navigation.\n+     *\n+     * @return true if block.\n+     */\n+    private boolean handleRails()\n+    {\n+        if (!this.noPath())\n+        {\n+            @NotNull final PathPointExtended pEx = (PathPointExtended) this.getPath().getPathPointFromIndex(this.getPath().getCurrentPathIndex());\n+            final PathPointExtended pExNext = getPath().getCurrentPathLength() > this.getPath().getCurrentPathIndex() + 1\n+                                                ? (PathPointExtended) this.getPath()\n+                                                                        .getPathPointFromIndex(this.getPath()\n+                                                                                                 .getCurrentPathIndex() + 1)\n+                                                : null;\n+\n+            if (pEx.isOnRails() || pEx.isRailsExit())\n+            {\n+                return handlePathOnRails(pEx, pExNext);\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private boolean handlePathOnRails(final PathPointExtended pEx, final PathPointExtended pExNext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIyMjI4Ng==", "bodyText": "think clearpath could use some dismount when it somehow gets stuck within the minecart(make them timed lifetime aswell?)", "url": "https://github.com/ldtteam/minecolonies/pull/4608#discussion_r406222286", "createdAt": "2020-04-09T13:55:36Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/pathfinding/MinecoloniesAdvancedPathNavigate.java", "diffHunk": "@@ -532,18 +671,50 @@ protected void pathFollow()\n \n     /**\n      * Don't let vanilla rapidly discard paths, set a timeout before its allowed to use stuck.\n-     *\n-     * @param positionVec3\n      */\n     @Override\n-    protected void checkForStuck(Vec3d positionVec3)\n+    protected void checkForStuck(@NotNull final Vec3d positionVec3)\n     {\n         if (world.getGameTime() - pathStartTime < MIN_KEEP_TIME)\n         {\n             return;\n         }\n \n-        super.checkForStuck(positionVec3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c"}, "originalPosition": 216}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIyNDM2OQ==", "bodyText": "old todo?", "url": "https://github.com/ldtteam/minecolonies/pull/4608#discussion_r406224369", "createdAt": "2020-04-09T13:58:37Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/pathfinding/MinecoloniesAdvancedPathNavigate.java", "diffHunk": "@@ -410,6 +450,105 @@ else if (ourEntity.isInWater())\n         return false;\n     }\n \n+    /**\n+     * Handle rails navigation.\n+     *\n+     * @return true if block.\n+     */\n+    private boolean handleRails()\n+    {\n+        if (!this.noPath())\n+        {\n+            @NotNull final PathPointExtended pEx = (PathPointExtended) this.getPath().getPathPointFromIndex(this.getPath().getCurrentPathIndex());\n+            final PathPointExtended pExNext = getPath().getCurrentPathLength() > this.getPath().getCurrentPathIndex() + 1\n+                                                ? (PathPointExtended) this.getPath()\n+                                                                        .getPathPointFromIndex(this.getPath()\n+                                                                                                 .getCurrentPathIndex() + 1)\n+                                                : null;\n+\n+            if (pEx.isOnRails() || pEx.isRailsExit())\n+            {\n+                return handlePathOnRails(pEx, pExNext);\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private boolean handlePathOnRails(final PathPointExtended pEx, final PathPointExtended pExNext)\n+    {\n+        if (pEx.isRailsEntry())\n+        {\n+            final BlockPos blockPos = new BlockPos(pEx.x, pEx.y, pEx.z);\n+            if (!spawnedPos.equals(blockPos))\n+            {\n+                final BlockState blockstate = world.getBlockState(blockPos);\n+                RailShape railshape = blockstate.getBlock() instanceof AbstractRailBlock\n+                                        ? ((AbstractRailBlock) blockstate.getBlock()).getRailDirection(blockstate, world, blockPos, null)\n+                                        : RailShape.NORTH_SOUTH;\n+                double yOffset = 0.0D;\n+                if (railshape.isAscending())\n+                {\n+                    yOffset = 0.5D;\n+                }\n+\n+                if (entity.ridingEntity instanceof MinecoloniesMinecart)\n+                {\n+                    ((MinecoloniesMinecart) entity.ridingEntity).setRollingDirection(1);\n+                }\n+                else\n+                {\n+                    MinecoloniesMinecart minecart = (MinecoloniesMinecart) ModEntities.MINECART.create(world);\n+                    final double x = pEx.x + 0.5D;\n+                    final double y = pEx.y + 0.625D + yOffset;\n+                    final double z = pEx.z + 0.5D;\n+                    minecart.setPosition(x, y, z);\n+                    minecart.setMotion(Vec3d.ZERO);\n+                    minecart.prevPosX = x;\n+                    minecart.prevPosY = y;\n+                    minecart.prevPosZ = z;\n+\n+\n+                    world.addEntity(minecart);\n+                    minecart.setRollingDirection(1);\n+                    entity.startRiding(minecart, true);\n+                }\n+                spawnedPos = blockPos;\n+            }\n+        }\n+        else\n+        {\n+            spawnedPos = BlockPos.ZERO;\n+        }\n+\n+        if (entity.ridingEntity instanceof MinecoloniesMinecart && pExNext != null)\n+        {\n+            final BlockPos blockPos = new BlockPos(pEx.x, pEx.y, pEx.z);\n+            final BlockPos blockPosNext = new BlockPos(pExNext.x, pExNext.y, pExNext.z);\n+            final Vec3d motion = entity.ridingEntity.getMotion();\n+            double forward;\n+            switch (BlockPosUtil.getXZFacing(blockPos, blockPosNext).getOpposite())\n+            {\n+                case EAST:\n+                    forward = Math.min(Math.max(motion.getX() - 1 * 0.01D, -1), 0);\n+                    entity.ridingEntity.setMotion(motion.add(forward == -1 ? -1 : -1 * 0.01D, 0.0D, 0.0D));\n+                    break;\n+                case WEST:\n+                    forward = Math.max(Math.min(motion.getX() + 0.01D, 1), 0);\n+                    entity.ridingEntity.setMotion(motion.add(forward == 1 ? 1 : 0.01D, 0.0D, 0.0D));\n+                    break;\n+                case NORTH:\n+                    forward = Math.max(Math.min(motion.getZ() + 0.01D, 1), 0);\n+                    entity.ridingEntity.setMotion(motion.add(0.0D, 0.0D, forward == 1 ? 1 : 0.01D));\n+                    break;\n+                case SOUTH:\n+                    forward = Math.min(Math.max(motion.getZ() - 1 * 0.01D, -1), 0);\n+                    entity.ridingEntity.setMotion(motion.add(0.0D, 0.0D, forward == -1 ? -1 : -1 * 0.01D));\n+            }\n+            //todo add research branch civilian where we add using railcarts as an option to guard this.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe62e64c17bdb3117dfa93aad21a82f1f15b9c5c"}, "originalPosition": 183}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a189a53d0c046e2ff66ed673c475733581b4e7ea", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/a189a53d0c046e2ff66ed673c475733581b4e7ea", "committedDate": "2020-04-09T14:06:57Z", "message": "add jdoc remove todo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwODgyNDM2", "url": "https://github.com/ldtteam/minecolonies/pull/4608#pullrequestreview-390882436", "createdAt": "2020-04-09T15:09:52Z", "commit": {"oid": "a189a53d0c046e2ff66ed673c475733581b4e7ea"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2978101407e3b6a687ed1ec9f3108cd0770c6897", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/2978101407e3b6a687ed1ec9f3108cd0770c6897", "committedDate": "2020-04-09T15:13:29Z", "message": "add  rails exit cost"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94f65f46a3f02464624cc1a75480ec79f911abf2", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/94f65f46a3f02464624cc1a75480ec79f911abf2", "committedDate": "2020-04-09T21:25:46Z", "message": "fix #4596"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "572851ca1f6c8e4dc36e146448ab6208772e014e", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/572851ca1f6c8e4dc36e146448ab6208772e014e", "committedDate": "2020-04-10T08:50:28Z", "message": "eset"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzc4Mzc2", "url": "https://github.com/ldtteam/minecolonies/pull/4608#pullrequestreview-391378376", "createdAt": "2020-04-10T10:32:22Z", "commit": {"oid": "94f65f46a3f02464624cc1a75480ec79f911abf2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2181, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}