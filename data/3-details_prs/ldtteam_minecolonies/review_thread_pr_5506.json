{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzODM3MTM2", "number": 5506, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNjozNlrOEVvFZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxMTozMzo1M1rOEWeZXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjI2OTgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/blocks/decorative/BlockColonyFlagWallBanner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNjozNlrOG8qB5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNjozNlrOG8qB5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1NjM1OA==", "bodyText": "formatting", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466256358", "createdAt": "2020-08-06T09:06:36Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/blocks/decorative/BlockColonyFlagWallBanner.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package com.minecolonies.coremod.blocks.decorative;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.Maps;\n+import com.minecolonies.api.blocks.decorative.AbstractColonyFlagBanner;\n+import net.minecraft.block.*;\n+import net.minecraft.item.BlockItemUseContext;\n+import net.minecraft.item.DyeColor;\n+import net.minecraft.state.DirectionProperty;\n+import net.minecraft.state.StateContainer;\n+import net.minecraft.util.Direction;\n+import net.minecraft.util.Mirror;\n+import net.minecraft.util.Rotation;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.shapes.ISelectionContext;\n+import net.minecraft.util.math.shapes.VoxelShape;\n+import net.minecraft.world.IBlockReader;\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.IWorldReader;\n+\n+import java.util.Map;\n+\n+public class BlockColonyFlagWallBanner extends AbstractColonyFlagBanner<BlockColonyFlagWallBanner>\n+{\n+    public static final DirectionProperty          HORIZONTAL_FACING = HorizontalBlock.HORIZONTAL_FACING;\n+    private static final Map<Direction, VoxelShape> BANNER_SHAPES     = Maps.newEnumMap(ImmutableMap.of(\n+            Direction.NORTH, Block.makeCuboidShape(0.0D, 0.0D, 14.0D, 16.0D, 12.5D, 16.0D),\n+            Direction.SOUTH, Block.makeCuboidShape(0.0D, 0.0D, 0.0D, 16.0D, 12.5D, 2.0D),\n+            Direction.WEST,  Block.makeCuboidShape(14.0D, 0.0D, 0.0D, 16.0D, 12.5D, 16.0D),\n+            Direction.EAST,  Block.makeCuboidShape(0.0D, 0.0D, 0.0D, 2.0D, 12.5D, 16.0D)));\n+\n+    public BlockColonyFlagWallBanner()\n+    {\n+        super();\n+        setRegistryName(REGISTRY_NAME_WALL);\n+\n+        this.setDefaultState(this.stateContainer.getBaseState().with(HORIZONTAL_FACING, Direction.NORTH));\n+    }\n+\n+    @Override\n+    public String getTranslationKey() { return this.asItem().getTranslationKey(); }\n+\n+    @Override\n+    public boolean isValidPosition(BlockState state, IWorldReader worldIn, BlockPos pos)\n+    {\n+        return worldIn.getBlockState(pos.offset(state.get(HORIZONTAL_FACING).getOpposite())).getMaterial().isSolid();\n+    }\n+\n+    @Override\n+    public BlockState updatePostPlacement(BlockState stateIn, Direction facing, BlockState facingState, IWorld worldIn, BlockPos currentPos, BlockPos facingPos)\n+    {\n+        return facing == stateIn.get(HORIZONTAL_FACING).getOpposite() && !stateIn.isValidPosition(worldIn, currentPos) ? Blocks.AIR.getDefaultState() : super.updatePostPlacement(stateIn, facing, facingState, worldIn, currentPos, facingPos);\n+    }\n+\n+    @Override\n+    public VoxelShape getShape(BlockState state, IBlockReader worldIn, BlockPos pos, ISelectionContext context)\n+    {\n+        return BANNER_SHAPES.get(state.get(HORIZONTAL_FACING));\n+    }\n+\n+    @Override\n+    public BlockState getStateForPlacement(BlockItemUseContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab035e964f9b05ffa061a49c1bc8613260319a"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjI3MDk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/blocks/decorative/BlockColonyFlagBanner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNjo1OFrOG8qCog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNjo1OFrOG8qCog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1NjU0Ng==", "bodyText": "jdoc maybe", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466256546", "createdAt": "2020-08-06T09:06:58Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/blocks/decorative/BlockColonyFlagBanner.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package com.minecolonies.coremod.blocks.decorative;\n+\n+import com.google.common.collect.Maps;\n+import com.minecolonies.api.blocks.decorative.AbstractColonyFlagBanner;\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.item.BlockItemUseContext;\n+import net.minecraft.item.DyeColor;\n+import net.minecraft.state.IntegerProperty;\n+import net.minecraft.state.StateContainer;\n+import net.minecraft.state.properties.BlockStateProperties;\n+import net.minecraft.util.Direction;\n+import net.minecraft.util.Mirror;\n+import net.minecraft.util.Rotation;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.MathHelper;\n+import net.minecraft.util.math.shapes.ISelectionContext;\n+import net.minecraft.util.math.shapes.VoxelShape;\n+import net.minecraft.world.IBlockReader;\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.IWorldReader;\n+\n+import java.util.Map;\n+\n+public class BlockColonyFlagBanner extends AbstractColonyFlagBanner<BlockColonyFlagBanner>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab035e964f9b05ffa061a49c1bc8613260319a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjI3MTU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/blocks/decorative/BlockColonyFlagWallBanner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNzoxMFrOG8qDDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNzoxMFrOG8qDDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1NjY1Mg==", "bodyText": "jdoc", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466256652", "createdAt": "2020-08-06T09:07:10Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/blocks/decorative/BlockColonyFlagWallBanner.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package com.minecolonies.coremod.blocks.decorative;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.Maps;\n+import com.minecolonies.api.blocks.decorative.AbstractColonyFlagBanner;\n+import net.minecraft.block.*;\n+import net.minecraft.item.BlockItemUseContext;\n+import net.minecraft.item.DyeColor;\n+import net.minecraft.state.DirectionProperty;\n+import net.minecraft.state.StateContainer;\n+import net.minecraft.util.Direction;\n+import net.minecraft.util.Mirror;\n+import net.minecraft.util.Rotation;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.shapes.ISelectionContext;\n+import net.minecraft.util.math.shapes.VoxelShape;\n+import net.minecraft.world.IBlockReader;\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.IWorldReader;\n+\n+import java.util.Map;\n+\n+public class BlockColonyFlagWallBanner extends AbstractColonyFlagBanner<BlockColonyFlagWallBanner>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab035e964f9b05ffa061a49c1bc8613260319a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjI3Njk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/render/TileEntityColonyFlagRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowODo1MVrOG8qGgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowODo1MVrOG8qGgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1NzUzNg==", "bodyText": "some jdoc", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466257536", "createdAt": "2020-08-06T09:08:51Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/client/render/TileEntityColonyFlagRenderer.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package com.minecolonies.coremod.client.render;\n+\n+import com.ldtteam.structurize.blocks.ModBlocks;\n+import com.minecolonies.api.tileentities.TileEntityColonyFlag;\n+import com.minecolonies.coremod.blocks.decorative.BlockColonyFlagBanner;\n+import com.minecolonies.coremod.blocks.decorative.BlockColonyFlagWallBanner;\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import com.mojang.blaze3d.vertex.IVertexBuilder;\n+import com.mojang.datafixers.util.Pair;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderType;\n+import net.minecraft.client.renderer.Vector3f;\n+import net.minecraft.client.renderer.model.ItemCameraTransforms;\n+import net.minecraft.client.renderer.model.ModelBakery;\n+import net.minecraft.client.renderer.model.ModelRenderer;\n+import net.minecraft.client.renderer.texture.OverlayTexture;\n+import net.minecraft.client.renderer.tileentity.BannerTileEntityRenderer;\n+import net.minecraft.client.renderer.tileentity.TileEntityRenderer;\n+import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;\n+import net.minecraft.item.DyeColor;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.tileentity.BannerPattern;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.MathHelper;\n+import net.minecraft.world.GameType;\n+\n+import java.util.List;\n+\n+public class TileEntityColonyFlagRenderer extends TileEntityRenderer<TileEntityColonyFlag>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab035e964f9b05ffa061a49c1bc8613260319a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjI3ODgyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/items/ItemColonyFlagBanner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowOToyNlrOG8qHmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowOToyNlrOG8qHmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1NzgxNg==", "bodyText": "jdoc", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466257816", "createdAt": "2020-08-06T09:09:26Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/items/ItemColonyFlagBanner.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package com.minecolonies.coremod.items;\n+\n+import com.minecolonies.api.blocks.ModBlocks;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyManager;\n+import com.minecolonies.api.tileentities.TileEntityColonyFlag;\n+import com.minecolonies.api.util.constant.Constants;\n+import net.minecraft.block.*;\n+import net.minecraft.client.util.ITooltipFlag;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.item.*;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.tileentity.BannerPattern;\n+import net.minecraft.tileentity.BannerTileEntity;\n+import net.minecraft.tileentity.TileEntity;\n+import net.minecraft.util.ActionResultType;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.world.World;\n+\n+import javax.annotation.Nullable;\n+import java.util.List;\n+\n+public class ItemColonyFlagBanner extends BannerItem", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab035e964f9b05ffa061a49c1bc8613260319a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjI3OTkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/ColonyFlagChangeMessage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowOTo0NVrOG8qIUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowOTo0NVrOG8qIUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1ODAwMw==", "bodyText": "jdoc all over this =D", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466258003", "createdAt": "2020-08-06T09:09:45Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/ColonyFlagChangeMessage.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.minecolonies.coremod.network.messages.server.colony;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.util.constant.Constants;\n+import com.minecolonies.coremod.Network;\n+import com.minecolonies.coremod.network.messages.server.AbstractColonyServerMessage;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraftforge.fml.network.NetworkEvent;\n+import org.apache.logging.log4j.LogManager;\n+\n+public class ColonyFlagChangeMessage extends AbstractColonyServerMessage", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab035e964f9b05ffa061a49c1bc8613260319a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjI4Mjg3OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/colony/IColony.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToxMDoyOFrOG8qKBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTozNjo1OFrOG8vxPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1ODQzOA==", "bodyText": "jdoc", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466258438", "createdAt": "2020-08-06T09:10:28Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/colony/IColony.java", "diffHunk": "@@ -300,6 +311,8 @@ default String getTeamName()\n \n     void setColonyColor(TextFormatting color);\n \n+    void setColonyFlag(ListNBT patterns);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eab035e964f9b05ffa061a49c1bc8613260319a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1MDM5Ng==", "bodyText": "This is a setter, and few of the others have docs. I wouldn't want it to be alone ...", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466350396", "createdAt": "2020-08-06T11:36:58Z", "author": {"login": "ShadowProtocol"}, "path": "src/api/java/com/minecolonies/api/colony/IColony.java", "diffHunk": "@@ -300,6 +311,8 @@ default String getTeamName()\n \n     void setColonyColor(TextFormatting color);\n \n+    void setColonyFlag(ListNBT patterns);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1ODQzOA=="}, "originalCommit": {"oid": "1eab035e964f9b05ffa061a49c1bc8613260319a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjI5OTQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowBannerPicker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToxNDowMVrOG8qU4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToyNzo1MlrOG8rUqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2MTIxNw==", "bodyText": "Take text from the language file?", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466261217", "createdAt": "2020-08-06T09:14:01Z", "author": {"login": "MatthiasMann"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowBannerPicker.java", "diffHunk": "@@ -0,0 +1,373 @@\n+package com.minecolonies.coremod.client.gui;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyView;\n+import com.minecolonies.coremod.Network;\n+import com.minecolonies.coremod.network.messages.server.colony.ColonyFlagChangeMessage;\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import com.mojang.datafixers.util.Pair;\n+import net.minecraft.client.gui.screen.Screen;\n+import net.minecraft.client.gui.widget.button.Button;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderHelper;\n+import net.minecraft.client.renderer.model.ModelBakery;\n+import net.minecraft.client.renderer.model.ModelRenderer;\n+import net.minecraft.client.renderer.texture.OverlayTexture;\n+import net.minecraft.client.renderer.tileentity.BannerTileEntityRenderer;\n+import net.minecraft.client.resources.I18n;\n+import net.minecraft.item.DyeColor;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.tileentity.BannerPattern;\n+import net.minecraft.tileentity.BannerTileEntity;\n+import net.minecraft.util.text.StringTextComponent;\n+import net.minecraft.util.text.TextFormatting;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+import org.apache.logging.log4j.LogManager;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@OnlyIn(Dist.CLIENT)\n+public class WindowBannerPicker extends Screen\n+{\n+    /** The number of columns the color palette is arranged in */\n+    private static final int COLUMNS = 2;\n+\n+    /** The Y position of the layers */\n+    private static final int GUI_Y = 30;\n+\n+    /** The side length for layer and palette buttons */\n+    private static final int SIDE_LENGTH = 20;\n+\n+    /** The height of the Pattern Buttons */\n+    private static final int PATTERN_HEIGHT = 30;\n+\n+    /** The margin after each pattern button */\n+    private static final int PATTERN_MARGIN = 3;\n+\n+    /** The number of columns the patterns are arrange in */\n+    private static final int PATTERN_COLUMNS = 8;\n+\n+    /** The list of banner patterns, cached */\n+    private static final BannerPattern[] PATTERNS = BannerPattern.values();\n+\n+    /** The list of banenr colors, cached **/\n+    private static final DyeColor[] DYES = DyeColor.values();\n+\n+    /** The currently selected layer. Zero is the base. */\n+    private int activeLayer = 0;\n+\n+    /** The currently selected palette color. */\n+    private DyeColor selectedColor = DyeColor.WHITE;\n+\n+    /** The final list of patterns and colors of the flag */\n+    private final List<Pair<BannerPattern, DyeColor>> layers;\n+\n+    private IColonyView colony;\n+\n+    private final ModelRenderer modelRender;\n+\n+    public WindowBannerPicker(IColonyView colony) {\n+        super(new StringTextComponent(\"Flag\"));\n+\n+        this.colony = colony;\n+        this.modelRender = BannerTileEntityRenderer.getModelRender();\n+\n+        LogManager.getLogger().info(colony.getColonyFlag());\n+        this.layers = BannerTileEntity.func_230138_a_(DyeColor.WHITE, colony.getColonyFlag());\n+        // Remove the extra base layer created by the above function\n+        if (this.layers.size() > 1)\n+            this.layers.remove(0);\n+    }\n+\n+    @Override\n+    protected void init()\n+    {\n+        int paletteX = (int) ((this.width - PATTERN_HEIGHT/2 * PATTERN_COLUMNS) / 2 - SIDE_LENGTH * 2.0);\n+        int paletteY = GUI_Y + SIDE_LENGTH; // Account for the \"Base\" button above it.\n+\n+        /* Draw the colour palette */\n+        for (DyeColor color : DYES)\n+        {\n+            int posX = paletteX + (color.getId() % COLUMNS) * SIDE_LENGTH;\n+            int posY = paletteY + SIDE_LENGTH * Math.floorDiv(color.getId(), COLUMNS);\n+\n+            this.addButton(new PaletteButton(posX, posY, SIDE_LENGTH, color));\n+        }\n+\n+        /* Draw the layer selection */\n+        for (int layer = 0; layer <= 6; layer++)\n+        {\n+            int posX = (this.width - SIDE_LENGTH * 6) / 2 + layer * SIDE_LENGTH;\n+\n+            this.addButton(new LayerButton(posX, GUI_Y, SIDE_LENGTH, SIDE_LENGTH, layer));\n+        }\n+\n+        /* Draw each of the patterns. Omit the last 8, which includes gradients and special banners */\n+        for (int i = 0; i < PATTERNS.length - 8; i++)\n+        {\n+            int posX = paletteX + 2*SIDE_LENGTH + (PATTERN_HEIGHT/2 + PATTERN_MARGIN) * (i % PATTERN_COLUMNS);\n+            int posY = paletteY + Math.floorDiv(i, PATTERN_COLUMNS) * (PATTERN_HEIGHT + PATTERN_MARGIN);\n+\n+            this.addButton(new PatternButton(posX, posY, PATTERN_HEIGHT, PATTERNS[i]));\n+        }\n+\n+        int x = (this.width - SIDE_LENGTH * 6) / 2 + 7 * SIDE_LENGTH;\n+        Button removeLayerButton = new Button(\n+                x, GUI_Y, SIDE_LENGTH, SIDE_LENGTH,\n+                TextFormatting.RED + \"X\",\n+                pressed -> layers.remove(activeLayer))\n+        {\n+            @Override\n+            public void render(int mouseX, int mouseY, float partialTicks)\n+            {\n+                this.active = activeLayer < layers.size();\n+                super.render(mouseX, mouseY, partialTicks);\n+            }\n+        };\n+        this.addButton(removeLayerButton);\n+\n+        this.addButton(new Button(\n+                (int) ((this.width + PATTERN_HEIGHT/2.0 * PATTERN_COLUMNS) / 2 + SIDE_LENGTH*2),\n+                GUI_Y + SIDE_LENGTH * 9,\n+                80, SIDE_LENGTH,\n+                I18n.format(\"gui.done\"),\n+                pressed -> {}\n+        ) {\n+            @Override\n+            public void onPress()\n+            {\n+                BannerPattern.Builder builder = new BannerPattern.Builder();\n+                for (Pair<BannerPattern, DyeColor> pair : layers)\n+                    builder.setPatternWithColor(pair.getFirst(), pair.getSecond());\n+\n+                colony.setColonyFlag(builder.func_222476_a());\n+                onClose();\n+            }\n+        });\n+        this.addButton(new Button(\n+                (int) ((this.width + PATTERN_HEIGHT/2.0 * PATTERN_COLUMNS) / 2 + SIDE_LENGTH*2 - 90),\n+                GUI_Y + SIDE_LENGTH * 9,\n+                80, SIDE_LENGTH,\n+                I18n.format(\"gui.cancel\"),\n+                pressed -> onClose()\n+        ));\n+    }\n+\n+    protected List<Pair<BannerPattern, DyeColor>> getPatterns () { return this.layers; }\n+\n+    public void render(int mouseX, int mouseY, float partialTicks) {\n+        this.renderBackground();\n+\n+        RenderHelper.setupGuiFlatDiffuseLighting();\n+        drawFlag();\n+\n+        super.render(mouseX, mouseY, partialTicks);\n+\n+        // Render the instructions\n+        this.drawCenteredString(\n+                this.font,\n+                \"Choose a colored pattern for up to 6 layers on your flag.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9264e8686637cb7f2757c3dd3273bc8d291711c8"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI3NDAzMQ==", "bodyText": "You're looking at an older commit.", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466274031", "createdAt": "2020-08-06T09:25:03Z", "author": {"login": "ShadowProtocol"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowBannerPicker.java", "diffHunk": "@@ -0,0 +1,373 @@\n+package com.minecolonies.coremod.client.gui;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyView;\n+import com.minecolonies.coremod.Network;\n+import com.minecolonies.coremod.network.messages.server.colony.ColonyFlagChangeMessage;\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import com.mojang.datafixers.util.Pair;\n+import net.minecraft.client.gui.screen.Screen;\n+import net.minecraft.client.gui.widget.button.Button;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderHelper;\n+import net.minecraft.client.renderer.model.ModelBakery;\n+import net.minecraft.client.renderer.model.ModelRenderer;\n+import net.minecraft.client.renderer.texture.OverlayTexture;\n+import net.minecraft.client.renderer.tileentity.BannerTileEntityRenderer;\n+import net.minecraft.client.resources.I18n;\n+import net.minecraft.item.DyeColor;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.tileentity.BannerPattern;\n+import net.minecraft.tileentity.BannerTileEntity;\n+import net.minecraft.util.text.StringTextComponent;\n+import net.minecraft.util.text.TextFormatting;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+import org.apache.logging.log4j.LogManager;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@OnlyIn(Dist.CLIENT)\n+public class WindowBannerPicker extends Screen\n+{\n+    /** The number of columns the color palette is arranged in */\n+    private static final int COLUMNS = 2;\n+\n+    /** The Y position of the layers */\n+    private static final int GUI_Y = 30;\n+\n+    /** The side length for layer and palette buttons */\n+    private static final int SIDE_LENGTH = 20;\n+\n+    /** The height of the Pattern Buttons */\n+    private static final int PATTERN_HEIGHT = 30;\n+\n+    /** The margin after each pattern button */\n+    private static final int PATTERN_MARGIN = 3;\n+\n+    /** The number of columns the patterns are arrange in */\n+    private static final int PATTERN_COLUMNS = 8;\n+\n+    /** The list of banner patterns, cached */\n+    private static final BannerPattern[] PATTERNS = BannerPattern.values();\n+\n+    /** The list of banenr colors, cached **/\n+    private static final DyeColor[] DYES = DyeColor.values();\n+\n+    /** The currently selected layer. Zero is the base. */\n+    private int activeLayer = 0;\n+\n+    /** The currently selected palette color. */\n+    private DyeColor selectedColor = DyeColor.WHITE;\n+\n+    /** The final list of patterns and colors of the flag */\n+    private final List<Pair<BannerPattern, DyeColor>> layers;\n+\n+    private IColonyView colony;\n+\n+    private final ModelRenderer modelRender;\n+\n+    public WindowBannerPicker(IColonyView colony) {\n+        super(new StringTextComponent(\"Flag\"));\n+\n+        this.colony = colony;\n+        this.modelRender = BannerTileEntityRenderer.getModelRender();\n+\n+        LogManager.getLogger().info(colony.getColonyFlag());\n+        this.layers = BannerTileEntity.func_230138_a_(DyeColor.WHITE, colony.getColonyFlag());\n+        // Remove the extra base layer created by the above function\n+        if (this.layers.size() > 1)\n+            this.layers.remove(0);\n+    }\n+\n+    @Override\n+    protected void init()\n+    {\n+        int paletteX = (int) ((this.width - PATTERN_HEIGHT/2 * PATTERN_COLUMNS) / 2 - SIDE_LENGTH * 2.0);\n+        int paletteY = GUI_Y + SIDE_LENGTH; // Account for the \"Base\" button above it.\n+\n+        /* Draw the colour palette */\n+        for (DyeColor color : DYES)\n+        {\n+            int posX = paletteX + (color.getId() % COLUMNS) * SIDE_LENGTH;\n+            int posY = paletteY + SIDE_LENGTH * Math.floorDiv(color.getId(), COLUMNS);\n+\n+            this.addButton(new PaletteButton(posX, posY, SIDE_LENGTH, color));\n+        }\n+\n+        /* Draw the layer selection */\n+        for (int layer = 0; layer <= 6; layer++)\n+        {\n+            int posX = (this.width - SIDE_LENGTH * 6) / 2 + layer * SIDE_LENGTH;\n+\n+            this.addButton(new LayerButton(posX, GUI_Y, SIDE_LENGTH, SIDE_LENGTH, layer));\n+        }\n+\n+        /* Draw each of the patterns. Omit the last 8, which includes gradients and special banners */\n+        for (int i = 0; i < PATTERNS.length - 8; i++)\n+        {\n+            int posX = paletteX + 2*SIDE_LENGTH + (PATTERN_HEIGHT/2 + PATTERN_MARGIN) * (i % PATTERN_COLUMNS);\n+            int posY = paletteY + Math.floorDiv(i, PATTERN_COLUMNS) * (PATTERN_HEIGHT + PATTERN_MARGIN);\n+\n+            this.addButton(new PatternButton(posX, posY, PATTERN_HEIGHT, PATTERNS[i]));\n+        }\n+\n+        int x = (this.width - SIDE_LENGTH * 6) / 2 + 7 * SIDE_LENGTH;\n+        Button removeLayerButton = new Button(\n+                x, GUI_Y, SIDE_LENGTH, SIDE_LENGTH,\n+                TextFormatting.RED + \"X\",\n+                pressed -> layers.remove(activeLayer))\n+        {\n+            @Override\n+            public void render(int mouseX, int mouseY, float partialTicks)\n+            {\n+                this.active = activeLayer < layers.size();\n+                super.render(mouseX, mouseY, partialTicks);\n+            }\n+        };\n+        this.addButton(removeLayerButton);\n+\n+        this.addButton(new Button(\n+                (int) ((this.width + PATTERN_HEIGHT/2.0 * PATTERN_COLUMNS) / 2 + SIDE_LENGTH*2),\n+                GUI_Y + SIDE_LENGTH * 9,\n+                80, SIDE_LENGTH,\n+                I18n.format(\"gui.done\"),\n+                pressed -> {}\n+        ) {\n+            @Override\n+            public void onPress()\n+            {\n+                BannerPattern.Builder builder = new BannerPattern.Builder();\n+                for (Pair<BannerPattern, DyeColor> pair : layers)\n+                    builder.setPatternWithColor(pair.getFirst(), pair.getSecond());\n+\n+                colony.setColonyFlag(builder.func_222476_a());\n+                onClose();\n+            }\n+        });\n+        this.addButton(new Button(\n+                (int) ((this.width + PATTERN_HEIGHT/2.0 * PATTERN_COLUMNS) / 2 + SIDE_LENGTH*2 - 90),\n+                GUI_Y + SIDE_LENGTH * 9,\n+                80, SIDE_LENGTH,\n+                I18n.format(\"gui.cancel\"),\n+                pressed -> onClose()\n+        ));\n+    }\n+\n+    protected List<Pair<BannerPattern, DyeColor>> getPatterns () { return this.layers; }\n+\n+    public void render(int mouseX, int mouseY, float partialTicks) {\n+        this.renderBackground();\n+\n+        RenderHelper.setupGuiFlatDiffuseLighting();\n+        drawFlag();\n+\n+        super.render(mouseX, mouseY, partialTicks);\n+\n+        // Render the instructions\n+        this.drawCenteredString(\n+                this.font,\n+                \"Choose a colored pattern for up to 6 layers on your flag.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2MTIxNw=="}, "originalCommit": {"oid": "9264e8686637cb7f2757c3dd3273bc8d291711c8"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI3NzU0NQ==", "bodyText": "Ohh sorry", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r466277545", "createdAt": "2020-08-06T09:27:52Z", "author": {"login": "MatthiasMann"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowBannerPicker.java", "diffHunk": "@@ -0,0 +1,373 @@\n+package com.minecolonies.coremod.client.gui;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyView;\n+import com.minecolonies.coremod.Network;\n+import com.minecolonies.coremod.network.messages.server.colony.ColonyFlagChangeMessage;\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import com.mojang.datafixers.util.Pair;\n+import net.minecraft.client.gui.screen.Screen;\n+import net.minecraft.client.gui.widget.button.Button;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderHelper;\n+import net.minecraft.client.renderer.model.ModelBakery;\n+import net.minecraft.client.renderer.model.ModelRenderer;\n+import net.minecraft.client.renderer.texture.OverlayTexture;\n+import net.minecraft.client.renderer.tileentity.BannerTileEntityRenderer;\n+import net.minecraft.client.resources.I18n;\n+import net.minecraft.item.DyeColor;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.tileentity.BannerPattern;\n+import net.minecraft.tileentity.BannerTileEntity;\n+import net.minecraft.util.text.StringTextComponent;\n+import net.minecraft.util.text.TextFormatting;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+import org.apache.logging.log4j.LogManager;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@OnlyIn(Dist.CLIENT)\n+public class WindowBannerPicker extends Screen\n+{\n+    /** The number of columns the color palette is arranged in */\n+    private static final int COLUMNS = 2;\n+\n+    /** The Y position of the layers */\n+    private static final int GUI_Y = 30;\n+\n+    /** The side length for layer and palette buttons */\n+    private static final int SIDE_LENGTH = 20;\n+\n+    /** The height of the Pattern Buttons */\n+    private static final int PATTERN_HEIGHT = 30;\n+\n+    /** The margin after each pattern button */\n+    private static final int PATTERN_MARGIN = 3;\n+\n+    /** The number of columns the patterns are arrange in */\n+    private static final int PATTERN_COLUMNS = 8;\n+\n+    /** The list of banner patterns, cached */\n+    private static final BannerPattern[] PATTERNS = BannerPattern.values();\n+\n+    /** The list of banenr colors, cached **/\n+    private static final DyeColor[] DYES = DyeColor.values();\n+\n+    /** The currently selected layer. Zero is the base. */\n+    private int activeLayer = 0;\n+\n+    /** The currently selected palette color. */\n+    private DyeColor selectedColor = DyeColor.WHITE;\n+\n+    /** The final list of patterns and colors of the flag */\n+    private final List<Pair<BannerPattern, DyeColor>> layers;\n+\n+    private IColonyView colony;\n+\n+    private final ModelRenderer modelRender;\n+\n+    public WindowBannerPicker(IColonyView colony) {\n+        super(new StringTextComponent(\"Flag\"));\n+\n+        this.colony = colony;\n+        this.modelRender = BannerTileEntityRenderer.getModelRender();\n+\n+        LogManager.getLogger().info(colony.getColonyFlag());\n+        this.layers = BannerTileEntity.func_230138_a_(DyeColor.WHITE, colony.getColonyFlag());\n+        // Remove the extra base layer created by the above function\n+        if (this.layers.size() > 1)\n+            this.layers.remove(0);\n+    }\n+\n+    @Override\n+    protected void init()\n+    {\n+        int paletteX = (int) ((this.width - PATTERN_HEIGHT/2 * PATTERN_COLUMNS) / 2 - SIDE_LENGTH * 2.0);\n+        int paletteY = GUI_Y + SIDE_LENGTH; // Account for the \"Base\" button above it.\n+\n+        /* Draw the colour palette */\n+        for (DyeColor color : DYES)\n+        {\n+            int posX = paletteX + (color.getId() % COLUMNS) * SIDE_LENGTH;\n+            int posY = paletteY + SIDE_LENGTH * Math.floorDiv(color.getId(), COLUMNS);\n+\n+            this.addButton(new PaletteButton(posX, posY, SIDE_LENGTH, color));\n+        }\n+\n+        /* Draw the layer selection */\n+        for (int layer = 0; layer <= 6; layer++)\n+        {\n+            int posX = (this.width - SIDE_LENGTH * 6) / 2 + layer * SIDE_LENGTH;\n+\n+            this.addButton(new LayerButton(posX, GUI_Y, SIDE_LENGTH, SIDE_LENGTH, layer));\n+        }\n+\n+        /* Draw each of the patterns. Omit the last 8, which includes gradients and special banners */\n+        for (int i = 0; i < PATTERNS.length - 8; i++)\n+        {\n+            int posX = paletteX + 2*SIDE_LENGTH + (PATTERN_HEIGHT/2 + PATTERN_MARGIN) * (i % PATTERN_COLUMNS);\n+            int posY = paletteY + Math.floorDiv(i, PATTERN_COLUMNS) * (PATTERN_HEIGHT + PATTERN_MARGIN);\n+\n+            this.addButton(new PatternButton(posX, posY, PATTERN_HEIGHT, PATTERNS[i]));\n+        }\n+\n+        int x = (this.width - SIDE_LENGTH * 6) / 2 + 7 * SIDE_LENGTH;\n+        Button removeLayerButton = new Button(\n+                x, GUI_Y, SIDE_LENGTH, SIDE_LENGTH,\n+                TextFormatting.RED + \"X\",\n+                pressed -> layers.remove(activeLayer))\n+        {\n+            @Override\n+            public void render(int mouseX, int mouseY, float partialTicks)\n+            {\n+                this.active = activeLayer < layers.size();\n+                super.render(mouseX, mouseY, partialTicks);\n+            }\n+        };\n+        this.addButton(removeLayerButton);\n+\n+        this.addButton(new Button(\n+                (int) ((this.width + PATTERN_HEIGHT/2.0 * PATTERN_COLUMNS) / 2 + SIDE_LENGTH*2),\n+                GUI_Y + SIDE_LENGTH * 9,\n+                80, SIDE_LENGTH,\n+                I18n.format(\"gui.done\"),\n+                pressed -> {}\n+        ) {\n+            @Override\n+            public void onPress()\n+            {\n+                BannerPattern.Builder builder = new BannerPattern.Builder();\n+                for (Pair<BannerPattern, DyeColor> pair : layers)\n+                    builder.setPatternWithColor(pair.getFirst(), pair.getSecond());\n+\n+                colony.setColonyFlag(builder.func_222476_a());\n+                onClose();\n+            }\n+        });\n+        this.addButton(new Button(\n+                (int) ((this.width + PATTERN_HEIGHT/2.0 * PATTERN_COLUMNS) / 2 + SIDE_LENGTH*2 - 90),\n+                GUI_Y + SIDE_LENGTH * 9,\n+                80, SIDE_LENGTH,\n+                I18n.format(\"gui.cancel\"),\n+                pressed -> onClose()\n+        ));\n+    }\n+\n+    protected List<Pair<BannerPattern, DyeColor>> getPatterns () { return this.layers; }\n+\n+    public void render(int mouseX, int mouseY, float partialTicks) {\n+        this.renderBackground();\n+\n+        RenderHelper.setupGuiFlatDiffuseLighting();\n+        drawFlag();\n+\n+        super.render(mouseX, mouseY, partialTicks);\n+\n+        // Render the instructions\n+        this.drawCenteredString(\n+                this.font,\n+                \"Choose a colored pattern for up to 6 layers on your flag.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2MTIxNw=="}, "originalCommit": {"oid": "9264e8686637cb7f2757c3dd3273bc8d291711c8"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMDAyMTQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/ColonyView.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxMTozMzo1M1rOG9zRPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOFQxMTozMzo1M1rOG9zRPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ1NjMxOQ==", "bodyText": "constant for read and write string key", "url": "https://github.com/ldtteam/minecolonies/pull/5506#discussion_r467456319", "createdAt": "2020-08-08T11:33:53Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/ColonyView.java", "diffHunk": "@@ -289,6 +304,10 @@ public static void serializeNetworkData(@NotNull Colony colony, @NotNull PacketB\n \n         buf.writeInt(colony.getTeamColonyColor().ordinal());\n \n+        CompoundNBT flagNBT = new CompoundNBT();\n+        flagNBT.put(\"Patterns\", colony.getColonyFlag());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb11913dd26a3ad51786c3484db98fd8b879674"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3605, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}