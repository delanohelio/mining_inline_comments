{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNzA5NzAx", "number": 6181, "reviewThreads": {"totalCount": 171, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjoyNjowN1rOFJXwew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MzoxM1rOFfeGXw==", "hasNextPage": false, "hasPreviousPage": true}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzcwNzQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjoyNjowN1rOILsaiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjoyNjowN1rOILsaiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMjkzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        gradient.setPosition((6 - 1) * (GRADIENT_WIDTH + X_SPACING), 0);\n          \n          \n            \n                        gradient.setPosition((MAX_DEPTH - 1) * (GRADIENT_WIDTH + X_SPACING), 0);\n          \n      \n    \n    \n  \n\nonly if you are not gonna rewrite it", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549132939", "createdAt": "2020-12-27T16:26:07Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -137,299 +199,775 @@ public void onButtonClicked(@NotNull final Button button)\n     /**\n      * Draw the tree of research.\n      *\n-     * @param height           the start y offset.\n-     * @param depth            the current depth.\n-     * @param view             the view to append it to.\n-     * @param researchList     the list of research to go through.\n-     * @param tree             the local tree of the colony.\n-     * @param parentResearched if possibly can be researched.\n-     * @param abandoned        if abandoned child.\n-     * @param parentHeight     the height of the parent.\n+     * @param height                 the start y offset.\n+     * @param depth                  the current depth.\n+     * @param view                   the view to append it to.\n+     * @param researchList           the list of research to go through.\n+     * @param abandoned              if abandoned child.\n      * @return the next y offset.\n      */\n     public int drawTree(\n       final int height,\n       final int depth,\n       final ZoomDragView view,\n       final List<String> researchList,\n-      final ILocalResearchTree tree,\n-      final boolean parentResearched,\n-      final boolean abandoned,\n-      final int parentHeight)\n+      final boolean abandoned)\n     {\n         int nextHeight = height;\n         for (int i = 0; i < researchList.size(); i++)\n         {\n             final String researchLabel = researchList.get(i);\n-            int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n \n             final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchLabel);\n-            final ILocalResearch localResearch = tree.getResearch(branch, research.getId());\n-            final ResearchState state = localResearch == null ? ResearchState.NOT_STARTED : localResearch.getState();\n-            final IGlobalResearch parentResearch = IGlobalResearchTree.getInstance().getResearch(branch, research.getParent());\n+            if (research.isHidden() && !IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), this.building.getColony()))\n+            {\n+                continue;\n+            }\n+\n+            final int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n+            final int offsetY = (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING + TIMELABEL_Y_POSITION;\n \n-            boolean trueAbandoned = abandoned;\n-            if (depth != 0 && abandoned == false && state == ResearchState.NOT_STARTED && parentResearch.hasResearchedChild(tree) && parentResearch.hasOnlyChild())\n+            final boolean trueAbandoned = drawResearchItem(view, offsetX, offsetY, research, abandoned);\n+\n+            if (!research.getParent().isEmpty())\n             {\n-                trueAbandoned = true;\n+                drawArrows(view, offsetX + INITIAL_X_OFFSET - X_SPACING, offsetY, researchList, research.getParent(), i, nextHeight, height);\n             }\n \n-            final Gradient gradient = new Gradient();\n-            gradient.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n-            gradient.setPosition(offsetX + INITIAL_X_OFFSET, (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING);\n-            if (state == ResearchState.IN_PROGRESS)\n+            if (!research.getChildren().isEmpty())\n             {\n-                gradient.setGradientStart(227, 249, 184, 255);\n-                gradient.setGradientEnd(227, 249, 184, 255);\n-                view.addChild(gradient);\n+                nextHeight =\n+                  drawTree(nextHeight + Math.min(i, 1), depth + 1, view, research.getChildren(), trueAbandoned);\n             }\n-            else if (trueAbandoned && state != ResearchState.FINISHED)\n+            else\n             {\n-                gradient.setGradientStart(191, 184, 172, 255);\n-                gradient.setGradientEnd(191, 184, 172, 255);\n-                view.addChild(gradient);\n+                nextHeight += Math.min(i, 1);\n             }\n-            else if (!parentResearched)\n+        }\n+\n+        return nextHeight;\n+    }\n+\n+    /**\n+     * Draw the background gradients and labels for the research tree.\n+     *\n+     * @param view the view to append it to.\n+     */\n+    private void drawTreeBackground(final ZoomDragView view)\n+    {\n+        for (int i = 1; i < MAX_DEPTH; i++)\n+        {\n+            if (building.getBuildingLevel() < i)\n             {\n-                gradient.setGradientStart(239, 230, 215, 255);\n-                gradient.setGradientEnd(239, 230, 215, 255);\n+                final Gradient gradient = new Gradient();\n+                gradient.setGradientStart(80, 80, 80, 70);\n+                gradient.setGradientEnd(60, 60, 60, 70);\n+                gradient.setSize(GRADIENT_WIDTH + X_SPACING, 1200);\n+                gradient.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING), 0);\n                 view.addChild(gradient);\n             }\n-            else if (state != ResearchState.FINISHED)\n+        }\n+\n+        if (building.getBuildingLevel() < building.getBuildingMaxLevel() || hasMax)\n+        {\n+            final Gradient gradient = new Gradient();\n+            gradient.setGradientStart(80, 80, 80, 70);\n+            gradient.setGradientEnd(60, 60, 60, 70);\n+            gradient.setSize(GRADIENT_WIDTH + X_SPACING, 1200);\n+            gradient.setPosition((6 - 1) * (GRADIENT_WIDTH + X_SPACING), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 317}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzcwOTk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjoyODoyMVrOILsbnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNzoyNzoyM1rOILsz5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMzIxMg==", "bodyText": "can you rewrite this method to one for loop?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549133212", "createdAt": "2020-12-27T16:28:21Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -137,299 +199,775 @@ public void onButtonClicked(@NotNull final Button button)\n     /**\n      * Draw the tree of research.\n      *\n-     * @param height           the start y offset.\n-     * @param depth            the current depth.\n-     * @param view             the view to append it to.\n-     * @param researchList     the list of research to go through.\n-     * @param tree             the local tree of the colony.\n-     * @param parentResearched if possibly can be researched.\n-     * @param abandoned        if abandoned child.\n-     * @param parentHeight     the height of the parent.\n+     * @param height                 the start y offset.\n+     * @param depth                  the current depth.\n+     * @param view                   the view to append it to.\n+     * @param researchList           the list of research to go through.\n+     * @param abandoned              if abandoned child.\n      * @return the next y offset.\n      */\n     public int drawTree(\n       final int height,\n       final int depth,\n       final ZoomDragView view,\n       final List<String> researchList,\n-      final ILocalResearchTree tree,\n-      final boolean parentResearched,\n-      final boolean abandoned,\n-      final int parentHeight)\n+      final boolean abandoned)\n     {\n         int nextHeight = height;\n         for (int i = 0; i < researchList.size(); i++)\n         {\n             final String researchLabel = researchList.get(i);\n-            int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n \n             final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchLabel);\n-            final ILocalResearch localResearch = tree.getResearch(branch, research.getId());\n-            final ResearchState state = localResearch == null ? ResearchState.NOT_STARTED : localResearch.getState();\n-            final IGlobalResearch parentResearch = IGlobalResearchTree.getInstance().getResearch(branch, research.getParent());\n+            if (research.isHidden() && !IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), this.building.getColony()))\n+            {\n+                continue;\n+            }\n+\n+            final int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n+            final int offsetY = (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING + TIMELABEL_Y_POSITION;\n \n-            boolean trueAbandoned = abandoned;\n-            if (depth != 0 && abandoned == false && state == ResearchState.NOT_STARTED && parentResearch.hasResearchedChild(tree) && parentResearch.hasOnlyChild())\n+            final boolean trueAbandoned = drawResearchItem(view, offsetX, offsetY, research, abandoned);\n+\n+            if (!research.getParent().isEmpty())\n             {\n-                trueAbandoned = true;\n+                drawArrows(view, offsetX + INITIAL_X_OFFSET - X_SPACING, offsetY, researchList, research.getParent(), i, nextHeight, height);\n             }\n \n-            final Gradient gradient = new Gradient();\n-            gradient.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n-            gradient.setPosition(offsetX + INITIAL_X_OFFSET, (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING);\n-            if (state == ResearchState.IN_PROGRESS)\n+            if (!research.getChildren().isEmpty())\n             {\n-                gradient.setGradientStart(227, 249, 184, 255);\n-                gradient.setGradientEnd(227, 249, 184, 255);\n-                view.addChild(gradient);\n+                nextHeight =\n+                  drawTree(nextHeight + Math.min(i, 1), depth + 1, view, research.getChildren(), trueAbandoned);\n             }\n-            else if (trueAbandoned && state != ResearchState.FINISHED)\n+            else\n             {\n-                gradient.setGradientStart(191, 184, 172, 255);\n-                gradient.setGradientEnd(191, 184, 172, 255);\n-                view.addChild(gradient);\n+                nextHeight += Math.min(i, 1);\n             }\n-            else if (!parentResearched)\n+        }\n+\n+        return nextHeight;\n+    }\n+\n+    /**\n+     * Draw the background gradients and labels for the research tree.\n+     *\n+     * @param view the view to append it to.\n+     */\n+    private void drawTreeBackground(final ZoomDragView view)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 293}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzOTQzMA==", "bodyText": "Good point.  Will do.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549139430", "createdAt": "2020-12-27T17:27:23Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -137,299 +199,775 @@ public void onButtonClicked(@NotNull final Button button)\n     /**\n      * Draw the tree of research.\n      *\n-     * @param height           the start y offset.\n-     * @param depth            the current depth.\n-     * @param view             the view to append it to.\n-     * @param researchList     the list of research to go through.\n-     * @param tree             the local tree of the colony.\n-     * @param parentResearched if possibly can be researched.\n-     * @param abandoned        if abandoned child.\n-     * @param parentHeight     the height of the parent.\n+     * @param height                 the start y offset.\n+     * @param depth                  the current depth.\n+     * @param view                   the view to append it to.\n+     * @param researchList           the list of research to go through.\n+     * @param abandoned              if abandoned child.\n      * @return the next y offset.\n      */\n     public int drawTree(\n       final int height,\n       final int depth,\n       final ZoomDragView view,\n       final List<String> researchList,\n-      final ILocalResearchTree tree,\n-      final boolean parentResearched,\n-      final boolean abandoned,\n-      final int parentHeight)\n+      final boolean abandoned)\n     {\n         int nextHeight = height;\n         for (int i = 0; i < researchList.size(); i++)\n         {\n             final String researchLabel = researchList.get(i);\n-            int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n \n             final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchLabel);\n-            final ILocalResearch localResearch = tree.getResearch(branch, research.getId());\n-            final ResearchState state = localResearch == null ? ResearchState.NOT_STARTED : localResearch.getState();\n-            final IGlobalResearch parentResearch = IGlobalResearchTree.getInstance().getResearch(branch, research.getParent());\n+            if (research.isHidden() && !IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), this.building.getColony()))\n+            {\n+                continue;\n+            }\n+\n+            final int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n+            final int offsetY = (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING + TIMELABEL_Y_POSITION;\n \n-            boolean trueAbandoned = abandoned;\n-            if (depth != 0 && abandoned == false && state == ResearchState.NOT_STARTED && parentResearch.hasResearchedChild(tree) && parentResearch.hasOnlyChild())\n+            final boolean trueAbandoned = drawResearchItem(view, offsetX, offsetY, research, abandoned);\n+\n+            if (!research.getParent().isEmpty())\n             {\n-                trueAbandoned = true;\n+                drawArrows(view, offsetX + INITIAL_X_OFFSET - X_SPACING, offsetY, researchList, research.getParent(), i, nextHeight, height);\n             }\n \n-            final Gradient gradient = new Gradient();\n-            gradient.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n-            gradient.setPosition(offsetX + INITIAL_X_OFFSET, (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING);\n-            if (state == ResearchState.IN_PROGRESS)\n+            if (!research.getChildren().isEmpty())\n             {\n-                gradient.setGradientStart(227, 249, 184, 255);\n-                gradient.setGradientEnd(227, 249, 184, 255);\n-                view.addChild(gradient);\n+                nextHeight =\n+                  drawTree(nextHeight + Math.min(i, 1), depth + 1, view, research.getChildren(), trueAbandoned);\n             }\n-            else if (trueAbandoned && state != ResearchState.FINISHED)\n+            else\n             {\n-                gradient.setGradientStart(191, 184, 172, 255);\n-                gradient.setGradientEnd(191, 184, 172, 255);\n-                view.addChild(gradient);\n+                nextHeight += Math.min(i, 1);\n             }\n-            else if (!parentResearched)\n+        }\n+\n+        return nextHeight;\n+    }\n+\n+    /**\n+     * Draw the background gradients and labels for the research tree.\n+     *\n+     * @param view the view to append it to.\n+     */\n+    private void drawTreeBackground(final ZoomDragView view)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMzIxMg=="}, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 293}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzcxOTIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjozODoxOVrOILsf9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNzoyNToxMlrOILsy6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzNDMyNQ==", "bodyText": "please, try to remove Math.min(i, 1) from logic of this method", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549134325", "createdAt": "2020-12-27T16:38:19Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -137,299 +199,775 @@ public void onButtonClicked(@NotNull final Button button)\n     /**\n      * Draw the tree of research.\n      *\n-     * @param height           the start y offset.\n-     * @param depth            the current depth.\n-     * @param view             the view to append it to.\n-     * @param researchList     the list of research to go through.\n-     * @param tree             the local tree of the colony.\n-     * @param parentResearched if possibly can be researched.\n-     * @param abandoned        if abandoned child.\n-     * @param parentHeight     the height of the parent.\n+     * @param height                 the start y offset.\n+     * @param depth                  the current depth.\n+     * @param view                   the view to append it to.\n+     * @param researchList           the list of research to go through.\n+     * @param abandoned              if abandoned child.\n      * @return the next y offset.\n      */\n     public int drawTree(\n       final int height,\n       final int depth,\n       final ZoomDragView view,\n       final List<String> researchList,\n-      final ILocalResearchTree tree,\n-      final boolean parentResearched,\n-      final boolean abandoned,\n-      final int parentHeight)\n+      final boolean abandoned)\n     {\n         int nextHeight = height;\n         for (int i = 0; i < researchList.size(); i++)\n         {\n             final String researchLabel = researchList.get(i);\n-            int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n \n             final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchLabel);\n-            final ILocalResearch localResearch = tree.getResearch(branch, research.getId());\n-            final ResearchState state = localResearch == null ? ResearchState.NOT_STARTED : localResearch.getState();\n-            final IGlobalResearch parentResearch = IGlobalResearchTree.getInstance().getResearch(branch, research.getParent());\n+            if (research.isHidden() && !IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), this.building.getColony()))\n+            {\n+                continue;\n+            }\n+\n+            final int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n+            final int offsetY = (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING + TIMELABEL_Y_POSITION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 250}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzOTE3OQ==", "bodyText": "Ok.  Was in original variant, but wasn't if something to keep.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549139179", "createdAt": "2020-12-27T17:25:12Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -137,299 +199,775 @@ public void onButtonClicked(@NotNull final Button button)\n     /**\n      * Draw the tree of research.\n      *\n-     * @param height           the start y offset.\n-     * @param depth            the current depth.\n-     * @param view             the view to append it to.\n-     * @param researchList     the list of research to go through.\n-     * @param tree             the local tree of the colony.\n-     * @param parentResearched if possibly can be researched.\n-     * @param abandoned        if abandoned child.\n-     * @param parentHeight     the height of the parent.\n+     * @param height                 the start y offset.\n+     * @param depth                  the current depth.\n+     * @param view                   the view to append it to.\n+     * @param researchList           the list of research to go through.\n+     * @param abandoned              if abandoned child.\n      * @return the next y offset.\n      */\n     public int drawTree(\n       final int height,\n       final int depth,\n       final ZoomDragView view,\n       final List<String> researchList,\n-      final ILocalResearchTree tree,\n-      final boolean parentResearched,\n-      final boolean abandoned,\n-      final int parentHeight)\n+      final boolean abandoned)\n     {\n         int nextHeight = height;\n         for (int i = 0; i < researchList.size(); i++)\n         {\n             final String researchLabel = researchList.get(i);\n-            int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n \n             final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchLabel);\n-            final ILocalResearch localResearch = tree.getResearch(branch, research.getId());\n-            final ResearchState state = localResearch == null ? ResearchState.NOT_STARTED : localResearch.getState();\n-            final IGlobalResearch parentResearch = IGlobalResearchTree.getInstance().getResearch(branch, research.getParent());\n+            if (research.isHidden() && !IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), this.building.getColony()))\n+            {\n+                continue;\n+            }\n+\n+            final int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n+            final int offsetY = (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING + TIMELABEL_Y_POSITION;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzNDMyNQ=="}, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 250}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzcyMzk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjo0NDoyNVrOILsiMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjo0NDoyNVrOILsiMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzNDg5OA==", "bodyText": "shouldn't this be +=1?\nI'm not sure if nextHeight is count of rows or Y offset in pixels, but this code seems a bit of both to me", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549134898", "createdAt": "2020-12-27T16:44:25Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -137,299 +199,775 @@ public void onButtonClicked(@NotNull final Button button)\n     /**\n      * Draw the tree of research.\n      *\n-     * @param height           the start y offset.\n-     * @param depth            the current depth.\n-     * @param view             the view to append it to.\n-     * @param researchList     the list of research to go through.\n-     * @param tree             the local tree of the colony.\n-     * @param parentResearched if possibly can be researched.\n-     * @param abandoned        if abandoned child.\n-     * @param parentHeight     the height of the parent.\n+     * @param height                 the start y offset.\n+     * @param depth                  the current depth.\n+     * @param view                   the view to append it to.\n+     * @param researchList           the list of research to go through.\n+     * @param abandoned              if abandoned child.\n      * @return the next y offset.\n      */\n     public int drawTree(\n       final int height,\n       final int depth,\n       final ZoomDragView view,\n       final List<String> researchList,\n-      final ILocalResearchTree tree,\n-      final boolean parentResearched,\n-      final boolean abandoned,\n-      final int parentHeight)\n+      final boolean abandoned)\n     {\n         int nextHeight = height;\n         for (int i = 0; i < researchList.size(); i++)\n         {\n             final String researchLabel = researchList.get(i);\n-            int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n \n             final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchLabel);\n-            final ILocalResearch localResearch = tree.getResearch(branch, research.getId());\n-            final ResearchState state = localResearch == null ? ResearchState.NOT_STARTED : localResearch.getState();\n-            final IGlobalResearch parentResearch = IGlobalResearchTree.getInstance().getResearch(branch, research.getParent());\n+            if (research.isHidden() && !IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), this.building.getColony()))\n+            {\n+                continue;\n+            }\n+\n+            final int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n+            final int offsetY = (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING + TIMELABEL_Y_POSITION;\n \n-            boolean trueAbandoned = abandoned;\n-            if (depth != 0 && abandoned == false && state == ResearchState.NOT_STARTED && parentResearch.hasResearchedChild(tree) && parentResearch.hasOnlyChild())\n+            final boolean trueAbandoned = drawResearchItem(view, offsetX, offsetY, research, abandoned);\n+\n+            if (!research.getParent().isEmpty())\n             {\n-                trueAbandoned = true;\n+                drawArrows(view, offsetX + INITIAL_X_OFFSET - X_SPACING, offsetY, researchList, research.getParent(), i, nextHeight, height);\n             }\n \n-            final Gradient gradient = new Gradient();\n-            gradient.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n-            gradient.setPosition(offsetX + INITIAL_X_OFFSET, (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING);\n-            if (state == ResearchState.IN_PROGRESS)\n+            if (!research.getChildren().isEmpty())\n             {\n-                gradient.setGradientStart(227, 249, 184, 255);\n-                gradient.setGradientEnd(227, 249, 184, 255);\n-                view.addChild(gradient);\n+                nextHeight =\n+                  drawTree(nextHeight + Math.min(i, 1), depth + 1, view, research.getChildren(), trueAbandoned);\n             }\n-            else if (trueAbandoned && state != ResearchState.FINISHED)\n+            else\n             {\n-                gradient.setGradientStart(191, 184, 172, 255);\n-                gradient.setGradientEnd(191, 184, 172, 255);\n-                view.addChild(gradient);\n+                nextHeight += Math.min(i, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 280}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzcyODEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjo0ODozOFrOILskEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjo0ODozOFrOILskEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzNTM3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (research.getDepth() == 6 && hasMax)\n          \n          \n            \n                        if (research.getDepth() == MAX_DEPTH && hasMax)", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549135376", "createdAt": "2020-12-27T16:48:38Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -137,299 +199,775 @@ public void onButtonClicked(@NotNull final Button button)\n     /**\n      * Draw the tree of research.\n      *\n-     * @param height           the start y offset.\n-     * @param depth            the current depth.\n-     * @param view             the view to append it to.\n-     * @param researchList     the list of research to go through.\n-     * @param tree             the local tree of the colony.\n-     * @param parentResearched if possibly can be researched.\n-     * @param abandoned        if abandoned child.\n-     * @param parentHeight     the height of the parent.\n+     * @param height                 the start y offset.\n+     * @param depth                  the current depth.\n+     * @param view                   the view to append it to.\n+     * @param researchList           the list of research to go through.\n+     * @param abandoned              if abandoned child.\n      * @return the next y offset.\n      */\n     public int drawTree(\n       final int height,\n       final int depth,\n       final ZoomDragView view,\n       final List<String> researchList,\n-      final ILocalResearchTree tree,\n-      final boolean parentResearched,\n-      final boolean abandoned,\n-      final int parentHeight)\n+      final boolean abandoned)\n     {\n         int nextHeight = height;\n         for (int i = 0; i < researchList.size(); i++)\n         {\n             final String researchLabel = researchList.get(i);\n-            int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n \n             final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchLabel);\n-            final ILocalResearch localResearch = tree.getResearch(branch, research.getId());\n-            final ResearchState state = localResearch == null ? ResearchState.NOT_STARTED : localResearch.getState();\n-            final IGlobalResearch parentResearch = IGlobalResearchTree.getInstance().getResearch(branch, research.getParent());\n+            if (research.isHidden() && !IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), this.building.getColony()))\n+            {\n+                continue;\n+            }\n+\n+            final int offsetX = (depth * (GRADIENT_WIDTH + X_SPACING));\n+            final int offsetY = (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING + TIMELABEL_Y_POSITION;\n \n-            boolean trueAbandoned = abandoned;\n-            if (depth != 0 && abandoned == false && state == ResearchState.NOT_STARTED && parentResearch.hasResearchedChild(tree) && parentResearch.hasOnlyChild())\n+            final boolean trueAbandoned = drawResearchItem(view, offsetX, offsetY, research, abandoned);\n+\n+            if (!research.getParent().isEmpty())\n             {\n-                trueAbandoned = true;\n+                drawArrows(view, offsetX + INITIAL_X_OFFSET - X_SPACING, offsetY, researchList, research.getParent(), i, nextHeight, height);\n             }\n \n-            final Gradient gradient = new Gradient();\n-            gradient.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n-            gradient.setPosition(offsetX + INITIAL_X_OFFSET, (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING);\n-            if (state == ResearchState.IN_PROGRESS)\n+            if (!research.getChildren().isEmpty())\n             {\n-                gradient.setGradientStart(227, 249, 184, 255);\n-                gradient.setGradientEnd(227, 249, 184, 255);\n-                view.addChild(gradient);\n+                nextHeight =\n+                  drawTree(nextHeight + Math.min(i, 1), depth + 1, view, research.getChildren(), trueAbandoned);\n             }\n-            else if (trueAbandoned && state != ResearchState.FINISHED)\n+            else\n             {\n-                gradient.setGradientStart(191, 184, 172, 255);\n-                gradient.setGradientEnd(191, 184, 172, 255);\n-                view.addChild(gradient);\n+                nextHeight += Math.min(i, 1);\n             }\n-            else if (!parentResearched)\n+        }\n+\n+        return nextHeight;\n+    }\n+\n+    /**\n+     * Draw the background gradients and labels for the research tree.\n+     *\n+     * @param view the view to append it to.\n+     */\n+    private void drawTreeBackground(final ZoomDragView view)\n+    {\n+        for (int i = 1; i < MAX_DEPTH; i++)\n+        {\n+            if (building.getBuildingLevel() < i)\n             {\n-                gradient.setGradientStart(239, 230, 215, 255);\n-                gradient.setGradientEnd(239, 230, 215, 255);\n+                final Gradient gradient = new Gradient();\n+                gradient.setGradientStart(80, 80, 80, 70);\n+                gradient.setGradientEnd(60, 60, 60, 70);\n+                gradient.setSize(GRADIENT_WIDTH + X_SPACING, 1200);\n+                gradient.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING), 0);\n                 view.addChild(gradient);\n             }\n-            else if (state != ResearchState.FINISHED)\n+        }\n+\n+        if (building.getBuildingLevel() < building.getBuildingMaxLevel() || hasMax)\n+        {\n+            final Gradient gradient = new Gradient();\n+            gradient.setGradientStart(80, 80, 80, 70);\n+            gradient.setGradientEnd(60, 60, 60, 70);\n+            gradient.setSize(GRADIENT_WIDTH + X_SPACING, 1200);\n+            gradient.setPosition((6 - 1) * (GRADIENT_WIDTH + X_SPACING), 0);\n+            view.addChild(gradient);\n+        }\n+        for (int i = 1; i <= MAX_DEPTH; i++)\n+        {\n+            final Label timeLabel = new Label();\n+            timeLabel.setSize(TIME_WIDTH, TIME_HEIGHT);\n+            timeLabel.setLabelText(new TranslationTextComponent(\"com.minecolonies.coremod.gui.research.tier.header\",\n+              (i > building.getBuildingMaxLevel()) ? i : building.getBuildingMaxLevel(),\n+              (IGlobalResearchTree.getInstance().getBranchTime(branch) * Math.pow(2, i - 1))));\n+            timeLabel.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING) + GRADIENT_WIDTH / 2 - TIME_WIDTH / 4, TIMELABEL_Y_POSITION);\n+            if (building.getBuildingLevel() < i && building.getBuildingLevel() != MAX_DEPTH - 1)\n+            {\n+                timeLabel.setColor(COLOR_TEXT_NEGATIVE, COLOR_TEXT_NEGATIVE);\n+            }\n+            else\n             {\n-                gradient.setGradientStart(102, 204, 255, 255);\n-                gradient.setGradientEnd(102, 204, 255, 255);\n-                view.addChild(gradient);\n+                timeLabel.setColor(COLOR_TEXT_LABEL, COLOR_TEXT_LABEL);\n             }\n+            view.addChild(timeLabel);\n+        }\n+    }\n+\n+    /**\n+     * Draw the entirety of an individual research item on a tree, including icons and tooltips.\n+     *\n+     * @param view                  the view to append it to.\n+     * @param offsetX               the horizontal offset of the left side of the research block.\n+     * @param offsetY               the vertical offset of the top side of the research block.\n+     * @param research              the global research characteristics to draw.\n+     * @param abandoned             the abandoned status of the parent of the research, if one is present.\n+     * @return abandoned status, true if the research is blocked in the local colony the completion of a sibling research, or an ancestor's sibling's research.\n+     */\n+    private boolean drawResearchItem(final ZoomDragView view, final int offsetX, final int offsetY, final IGlobalResearch research, boolean abandoned)\n+    {\n+        final ILocalResearchTree tree = building.getColony().getResearchManager().getResearchTree();\n+        final boolean parentResearched = tree.hasCompletedResearch(research.getParent());\n+        final IGlobalResearch parentResearch = IGlobalResearchTree.getInstance().getResearch(branch, research.getParent());\n+        final ResearchState state = tree.getResearch(branch, research.getId()) == null ? ResearchState.NOT_STARTED : tree.getResearch(branch, research.getId()).getState();\n \n-            final Box box = new Box();\n-            box.setColor(218, 202, 171);\n-            box.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n-            box.setPosition(gradient.getX(), gradient.getY());\n-            view.addChild(box);\n+        if (research.getDepth() != 1 && state != ResearchState.FINISHED\n+              && parentResearch.hasResearchedChild(tree) && parentResearch.hasOnlyChild())\n+        {\n+            abandoned = true;\n+        }\n \n-            final Label nameLabel = new Label();\n-            nameLabel.setLabelText(research.getDesc());\n-            nameLabel.setPosition(offsetX + INITIAL_X_OFFSET + NAME_OFFSET, (nextHeight + Math.min(i, 1)) * (GRADIENT_HEIGHT + Y_SPACING) + Y_SPACING + INITIAL_Y_OFFSET);\n-            nameLabel.setColor(Color.rgbaToInt(160, 160, 160, 255));\n-            view.addChild(nameLabel);\n+        drawResearchBox(view, offsetX, offsetY, state, parentResearched, abandoned);\n+        if (state == ResearchState.IN_PROGRESS)\n+        {\n+            drawResearchProgress(view, offsetX, offsetY, research, tree.getResearch(branch, research.getId()).getDepth());\n+        }\n \n-            if (state == ResearchState.IN_PROGRESS)\n-            {\n-                //The player will reach the end of the research if he is in creative mode and the research was in progress\n-                if (mc.player.isCreative() && localResearch.getProgress() < BASE_RESEARCH_TIME * Math.pow(2, depth - 1))\n-                {\n-                    Network.getNetwork().sendToServer(new TryResearchMessage(building, research.getId(), research.getBranch()));\n-                }\n-                //Calculates how much percent of the next level has been completed.\n-                final double progressRatio = (localResearch.getProgress() + 1) / (Math.pow(2, localResearch.getDepth() - 1) * (double) BASE_RESEARCH_TIME) * 100;\n+        drawResearchLabels(view, offsetX, offsetY, research, parentResearched);\n+        drawResearchButton(view, offsetX, offsetY, research, state, parentResearched, abandoned);\n+        drawResearchIcons(view, offsetX, offsetY, research, state != ResearchState.NOT_STARTED, abandoned);\n \n-                @NotNull final Image xpBar = new Image();\n-                xpBar.setImage(Screen.GUI_ICONS_LOCATION, XP_BAR_ICON_COLUMN, XP_BAR_EMPTY_ROW, XP_BAR_WIDTH, XP_HEIGHT, false);\n-                xpBar.setPosition(offsetX + X_SPACING + TEXT_X_OFFSET, nameLabel.getY() + nameLabel.getHeight() + XPBAR_Y_OFFSET);\n+        return abandoned;\n+    }\n \n-                @NotNull final Image xpBar2 = new Image();\n-                xpBar2.setImage(Screen.GUI_ICONS_LOCATION, XP_BAR_ICON_COLUMN_END, XP_BAR_EMPTY_ROW, XP_BAR_ICON_COLUMN_END_WIDTH, XP_HEIGHT, false);\n-                xpBar2.setPosition(XPBAR_LENGTH + offsetX + X_SPACING + TEXT_X_OFFSET, nameLabel.getY() + nameLabel.getHeight() + XPBAR_Y_OFFSET);\n+    /**\n+     * Draw the container block of an individual research item on a tree.\n+     *\n+     * @param view             the view to append it to.\n+     * @param offsetX          the horizontal offset of the left side of the research block.\n+     * @param offsetY          the vertical offset of the top side of the research block.\n+     * @param state            the status of the selected research.\n+     * @param parentResearched if the parent\n+     * @param abandoned        the abandoned status of the research.\n+     */\n+    private void drawResearchBox(final ZoomDragView view, final int offsetX, final int offsetY, final ResearchState state, final boolean parentResearched, final boolean abandoned)\n+    {\n+        final Gradient gradient = new Gradient();\n+        gradient.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n+        gradient.setPosition(offsetX + INITIAL_X_OFFSET, offsetY);\n+        if (state == ResearchState.IN_PROGRESS)\n+        {\n+            gradient.setGradientStart(227, 249, 184, 255);\n+            gradient.setGradientEnd(227, 249, 184, 255);\n+            view.addChild(gradient);\n+        }\n+        else if (abandoned && state != ResearchState.FINISHED)\n+        {\n+            gradient.setGradientStart(191, 184, 172, 255);\n+            gradient.setGradientEnd(191, 184, 172, 255);\n+            view.addChild(gradient);\n+        }\n+        else if (!parentResearched)\n+        {\n+            gradient.setGradientStart(80, 80, 80, 100);\n+            gradient.setGradientEnd(70, 70, 70, 100);\n+            view.addChild(gradient);\n+        }\n+        else if (state != ResearchState.FINISHED)\n+        {\n+            gradient.setGradientStart(102, 204, 255, 255);\n+            gradient.setGradientEnd(102, 204, 255, 255);\n+            view.addChild(gradient);\n+        }\n+        else if (state == ResearchState.FINISHED)\n+        {\n+            gradient.setGradientStart(102, 225, 80, 30);\n+            gradient.setGradientEnd(102, 225, 80, 30);\n+            view.addChild(gradient);\n+        }\n \n-                view.addChild(xpBar);\n-                view.addChild(xpBar2);\n+        final Box box = new Box();\n+        box.setColor(218, 202, 171);\n+        box.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n+        box.setPosition(offsetX + INITIAL_X_OFFSET, offsetY);\n+        view.addChild(box);\n+    }\n \n-                if (progressRatio > 0)\n+    /**\n+     * Generates and attaches tooltips for a given research to input tipItem.\n+     *\n+     * @param tipItem  the Pane to apply the tooltip.\n+     * @param research the global research characteristics to draw.\n+     * @param state    the status of the selected research.\n+     */\n+    private void generateResearchTooltips(final Pane tipItem, final IGlobalResearch research, final ResearchState state)\n+    {\n+        final List<IFormattableTextComponent> hoverTexts = new ArrayList<>();\n+        hoverTexts.add(new TranslationTextComponent(research.getDesc()).setStyle(Style.EMPTY.setBold(true).setFormatting(TextFormatting.GOLD)));\n+        if(!research.getSubtitle().isEmpty())\n+        {\n+            hoverTexts.add(new TranslationTextComponent(research.getSubtitle()).setStyle(Style.EMPTY.setItalic(true).setFormatting(TextFormatting.GRAY)));\n+        }\n+        for (int txt = 0; txt < research.getEffects().size(); txt++)\n+        {\n+            hoverTexts.add(research.getEffects().get(txt).getDesc());\n+            if(!research.getEffects().get(txt).getSubtitle().isEmpty())\n+            {\n+                hoverTexts.add(new StringTextComponent(\"-\").append(new TranslationTextComponent(research.getEffects().get(txt).getSubtitle())));\n+            }\n+        }\n+        if (state != ResearchState.FINISHED)\n+        {\n+            for (int txt = 0; txt < research.getResearchRequirement().size(); txt++)\n+            {\n+                if(research.getResearchRequirement().get(txt).isFulfilled(this.building.getColony()))\n                 {\n-                    @NotNull final Image xpBarFull = new Image();\n-                    xpBarFull.setImage(Screen.GUI_ICONS_LOCATION, XP_BAR_ICON_COLUMN, XP_BAR_FULL_ROW, (int) progressRatio, XP_HEIGHT, false);\n-                    xpBarFull.setPosition(offsetX + X_SPACING + TEXT_X_OFFSET, nameLabel.getY() + nameLabel.getHeight() + XPBAR_Y_OFFSET);\n-                    view.addChild(xpBarFull);\n+                    hoverTexts.add(new TranslationTextComponent(\" - \").append(research.getResearchRequirement().get(txt).getDesc().setStyle(Style.EMPTY.setFormatting(TextFormatting.AQUA))));\n+                }\n+                else\n+                {\n+                    hoverTexts.add(new TranslationTextComponent(\" - \").append(research.getResearchRequirement().get(txt).getDesc().setStyle(Style.EMPTY.setFormatting(TextFormatting.RED))));\n                 }\n             }\n-            else if (research.getResearchRequirement() != null && state != ResearchState.FINISHED)\n+            if (research.getDepth() > building.getBuildingLevel() && building.getBuildingLevel() != building.getBuildingMaxLevel())\n             {\n-                final Label requirementLabel = new Label();\n-                requirementLabel.setLabelText(research.getResearchRequirement().getDesc().getString());\n-                requirementLabel.setPosition(offsetX + INITIAL_X_OFFSET + TEXT_X_OFFSET, nameLabel.getY() + nameLabel.getHeight() + INITIAL_Y_OFFSET);\n-                requirementLabel.setColor(Color.rgbaToInt(160, 160, 160, 255));\n-\n-                view.addChild(requirementLabel);\n+                hoverTexts.add(new TranslationTextComponent(\"com.minecolonies.coremod.research.requirement.university.level\", research.getDepth()));\n             }\n+            if (research.getDepth() == MAX_DEPTH)\n+            {\n+                if(hasMax)\n+                {\n+                    hoverTexts.add(new TranslationTextComponent(\"com.minecolonies.coremod.research.limit.onemaxperbranch\").setStyle(Style.EMPTY.setFormatting(TextFormatting.GOLD)));\n+                }\n+                else\n+                {\n+                    hoverTexts.add(new TranslationTextComponent(\"com.minecolonies.coremod.research.limit.onemaxperbranch\").setStyle(Style.EMPTY.setFormatting(TextFormatting.RED)));\n+                }\n+            }\n+        }\n+        if (research.isImmutable())\n+        {\n+            hoverTexts.add(new TranslationTextComponent(\"com.minecolonies.coremod.research.limit.immutable\").setStyle(Style.EMPTY.setFormatting(TextFormatting.RED)));\n+        }\n+        tipItem.setHoverToolTip(hoverTexts);\n+    }\n \n-            final Label effectLabel = new Label();\n-            effectLabel.setLabelText(research.getEffect().getDesc().getString());\n-            effectLabel.setPosition(offsetX + INITIAL_X_OFFSET + TEXT_X_OFFSET, nameLabel.getY() + nameLabel.getHeight() * 2 + INITIAL_Y_OFFSET + INITIAL_Y_OFFSET);\n-            effectLabel.setColor(Color.rgbaToInt(160, 160, 160, 255));\n+    /**\n+     * Draw the progress bar for a given research.\n+     *\n+     * @param view     the view to append it to.\n+     * @param offsetX  the horizontal offset of the left side of the research block.\n+     * @param offsetY  the vertical offset of the top side of the research block.\n+     * @param research the global research characteristics to draw.\n+     * @param progress the current research progress.\n+     */\n+    private void drawResearchProgress(final ZoomDragView view, final int offsetX, final int offsetY, final IGlobalResearch research, final int progress)\n+    {\n+        //The player will reach the end of the research if he is in creative mode, auto-completion is enabled, and the research was in progress\n+        if (mc.player.isCreative() && MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchCreativeCompletion.get()\n+              && progress < BASE_RESEARCH_TIME * IGlobalResearchTree.getInstance().getBranchTime(branch) * Math.pow(2, research.getDepth() - 1))\n+        {\n+            Network.getNetwork().sendToServer(new TryResearchMessage(building, research.getId(), research.getBranch(), false));\n+        }\n+\n+        //Calculates how much percent of the next level has been completed.\n+        final double progressRatio = (progress + 1) / (Math.pow(2, research.getDepth() - 1) * (double) BASE_RESEARCH_TIME * IGlobalResearchTree.getInstance().getBranchTime(branch)) * 100;\n+\n+        @NotNull final Image xpBar = new Image();\n+        xpBar.setImage(Screen.GUI_ICONS_LOCATION, XP_BAR_ICON_COLUMN, XP_BAR_EMPTY_ROW, XP_BAR_WIDTH, XP_HEIGHT, false);\n+        xpBar.setPosition(offsetX + X_SPACING - TEXT_X_OFFSET, offsetY + INITIAL_Y_OFFSET + +XPBAR_Y_OFFSET);\n+\n+        @NotNull final Image xpBar2 = new Image();\n+        xpBar2.setImage(Screen.GUI_ICONS_LOCATION, XP_BAR_ICON_COLUMN_END, XP_BAR_EMPTY_ROW, XP_BAR_ICON_COLUMN_END_WIDTH, XP_HEIGHT, false);\n+        xpBar2.setPosition(XPBAR_LENGTH + offsetX + X_SPACING - TEXT_X_OFFSET, offsetY + INITIAL_Y_OFFSET + XPBAR_Y_OFFSET);\n+\n+        view.addChild(xpBar);\n+        view.addChild(xpBar2);\n \n+        if (progressRatio > 0)\n+        {\n+            @NotNull final Image xpBarFull = new Image();\n+            xpBarFull.setImage(Screen.GUI_ICONS_LOCATION, XP_BAR_ICON_COLUMN, XP_BAR_FULL_ROW, (int) progressRatio, XP_HEIGHT, false);\n+            xpBarFull.setPosition(offsetX + X_SPACING - TEXT_X_OFFSET, offsetY + INITIAL_Y_OFFSET + XPBAR_Y_OFFSET);\n+            view.addChild(xpBarFull);\n+        }\n+    }\n+\n+    /**\n+     * Draw the labels for a given research\n+     *\n+     * @param view             the view to append it to.\n+     * @param offsetX          the horizontal offset of the left side of the research block.\n+     * @param offsetY          the vertical offset of the top side of the research block.\n+     * @param research         the global research characteristics to draw.\n+     * @param parentResearched if the parent research has been completed.\n+     */\n+    private void drawResearchLabels(final ZoomDragView view, final int offsetX, final int offsetY, final IGlobalResearch research, final boolean parentResearched)\n+    {\n+        final Label nameLabel = new Label();\n+        nameLabel.setSize(BUTTON_LENGTH, INITIAL_Y_OFFSET);\n+        nameLabel.setLabelText(new TranslationTextComponent(research.getDesc()));\n+        nameLabel.setPosition(offsetX + INITIAL_X_OFFSET + NAME_OFFSET, offsetY + (NAME_OFFSET / 2));\n+        if (parentResearched)\n+        {\n+            nameLabel.setColor(COLOR_TEXT_LABEL, COLOR_TEXT_LABEL);\n+        }\n+        else\n+        {\n+            nameLabel.setColor(COLOR_TEXT_LIGHT, COLOR_TEXT_LIGHT);\n+        }\n+        view.addChild(nameLabel);\n+\n+        if (MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get() && !research.getEffects().isEmpty())\n+        {\n+            final TranslationTextComponent effectText = new TranslationTextComponent(\"\");\n+            for (int txt = 0; txt < research.getEffects().size(); txt++)\n+            {\n+                effectText.append(research.getEffects().get(txt).getDesc());\n+            }\n+            final Label effectLabel = new Label();\n+            effectLabel.setSize(BUTTON_LENGTH, INITIAL_Y_OFFSET);\n+            effectLabel.setPosition(offsetX + INITIAL_X_OFFSET + 2 * TEXT_X_OFFSET, offsetY + INITIAL_Y_OFFSET + nameLabel.getHeight() * 2 + INITIAL_Y_OFFSET + INITIAL_Y_OFFSET);\n+            effectLabel.setColor(COLOR_TEXT_LABEL, COLOR_TEXT_LABEL);\n+            effectLabel.setLabelText(effectText);\n             view.addChild(effectLabel);\n+        }\n+        if (MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get()\n+              && !research.getResearchRequirement().isEmpty())\n+        {\n+            final TranslationTextComponent requirementText = new TranslationTextComponent(\"\");\n+            for (int txt = 0; txt < research.getResearchRequirement().size(); txt++)\n+            {\n+                requirementText.append(research.getResearchRequirement().get(txt).getDesc());\n+            }\n+            final Label requirementLabel = new Label();\n+            requirementLabel.setSize(BUTTON_LENGTH, INITIAL_Y_OFFSET);\n+            requirementLabel.setPosition(offsetX + INITIAL_X_OFFSET + TEXT_X_OFFSET, offsetY + INITIAL_Y_OFFSET + INITIAL_Y_OFFSET);\n+            requirementLabel.setColor(COLOR_TEXT_LABEL);\n+            requirementLabel.setLabelText(requirementText);\n+            view.addChild(requirementLabel);\n+        }\n+    }\n+\n+    /**\n+     * Draw the buttons and button images for a given research.\n+     *\n+     * @param view              the view to append it to.\n+     * @param offsetX           the horizontal offset of the left side of the research block.\n+     * @param offsetY           the vertical offset of the top side of the research block.\n+     * @param research          the global research characteristics to draw.\n+     * @param state             the research state.\n+     * @param parentResearched  if the parent research has been completed.\n+     * @param abandoned         if the research or an ancestor research has a completed sibling preventing it from being studied.\n+     */\n+    private void drawResearchButton(final ZoomDragView view, final int offsetX, final int offsetY, final IGlobalResearch research,\n+                                    final ResearchState state, final boolean parentResearched, final boolean abandoned)\n+    {\n+        final Button button = new Button();\n+        button.setSize(GRADIENT_WIDTH, GRADIENT_HEIGHT);\n+        button.setPosition(offsetX + INITIAL_X_OFFSET, offsetY);\n+        if(!abandoned && parentResearched && (!hasMax || research.getDepth() != MAX_DEPTH || state != ResearchState.NOT_STARTED))\n+        {\n+            button.setID(research.getId());\n+        }\n+        view.addChild(button);\n+        generateResearchTooltips(button, research, state);\n+\n+        if ((mc.player.isCreative() && state != ResearchState.NOT_STARTED) || abandoned || !parentResearched)\n+        {\n+            return;\n+        }\n+\n+        final ButtonImage buttonImage = new ButtonImage();\n+        buttonImage.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+        buttonImage.setLabel(new TranslationTextComponent(\"com.minecolonies.coremod.research.research\"));\n+        buttonImage.setTextColor(Color.getByName(\"black\", 0));\n+        buttonImage.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+        buttonImage.setPosition(offsetX + INITIAL_X_OFFSET + TEXT_X_OFFSET,\n+          offsetY + GRADIENT_HEIGHT - INITIAL_Y_OFFSET);\n \n-            if (parentResearched && state == ResearchState.NOT_STARTED && !trueAbandoned)\n+        if (mc.player.isCreative())\n+        {\n+            if (research.getDepth() == 6 && hasMax)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 671}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU3MDcxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0NToxMFrOIMECuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0NToxMFrOIMECuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMDA1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"minecolonies.config.researchresetcost.comment\": \"A list of items to charge players when resetting completed research.\",\n          \n          \n            \n              \"minecolonies.config.researchresetcost.comment\": \"A list of items to charge players when undoing an already-completed research.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549520056", "createdAt": "2020-12-28T23:45:10Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -38,6 +38,16 @@\n   \"minecolonies.config.badvisitorchance\": \"Bad recruitment chance\",\n   \"minecolonies.config.badvisitorchance.comment\": \"Chance to get an evil tavern visitor which can run off with the resources, in % [Default: 2]\",\n \n+  \"minecolonies.config.research\": \"Research-Related Settings\",\n+  \"minecolonies.config.researchcreativecompletion\": \"Research Creative Completion\",\n+  \"minecolonies.config.researchcreativecompletion.comment\": \"Allows automatic and (near) instant completion of research for players in creative mode.  If false, creative players will still be able to begin researches, but will have normal progress rates.\",\n+\n+  \"minecolonies.config.researchdebuglog\": \"Log Research Data\",\n+  \"minecolonies.config.researchdebuglog.comment\": \"Significantly increases the amount of information related to research datapacks that is logged during the world load.\",\n+\n+  \"minecolonies.config.researchresetcost\": \"Cost To Reset Completed Research\",\n+  \"minecolonies.config.researchresetcost.comment\": \"A list of items to charge players when resetting completed research.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU3MjI5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0NjoxMlrOIMEDew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0NjoxMlrOIMEDew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMDI1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"minecolonies.config.researchresetcost\": \"Cost To Reset Completed Research\",\n          \n          \n            \n              \"minecolonies.config.researchresetcost\": \"Cost to Undo a Completed Research\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549520251", "createdAt": "2020-12-28T23:46:12Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -38,6 +38,16 @@\n   \"minecolonies.config.badvisitorchance\": \"Bad recruitment chance\",\n   \"minecolonies.config.badvisitorchance.comment\": \"Chance to get an evil tavern visitor which can run off with the resources, in % [Default: 2]\",\n \n+  \"minecolonies.config.research\": \"Research-Related Settings\",\n+  \"minecolonies.config.researchcreativecompletion\": \"Research Creative Completion\",\n+  \"minecolonies.config.researchcreativecompletion.comment\": \"Allows automatic and (near) instant completion of research for players in creative mode.  If false, creative players will still be able to begin researches, but will have normal progress rates.\",\n+\n+  \"minecolonies.config.researchdebuglog\": \"Log Research Data\",\n+  \"minecolonies.config.researchdebuglog.comment\": \"Significantly increases the amount of information related to research datapacks that is logged during the world load.\",\n+\n+  \"minecolonies.config.researchresetcost\": \"Cost To Reset Completed Research\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU3NDY5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0NzozN1rOIMEEpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0NzozN1rOIMEEpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMDU0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.limit.immutable\": \"This Research Can Not Be Undone.\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.limit.immutable\": \"This research cannot be undone.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549520548", "createdAt": "2020-12-28T23:47:37Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1528,19 +1538,41 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.1\": \"Too many researches\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.2\": \"already in progress\",\n+  \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing Resources\",\n+  \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \"or \",\n+  \"com.minecolonies.coremod.research.requirement.research\": \"Requires %s!\",\n+  \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University Level %d\",\n+  \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only One Max-Level Research Can Be Unlocked per Branch\",\n+  \"com.minecolonies.coremod.research.limit.immutable\": \"This Research Can Not Be Undone.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU3NTIyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0ODowMVrOIMEE4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0ODowMVrOIMEE4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMDYxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.costnotavailable\": \"Missing necessarily items.\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.costnotavailable\": \"Missing necessary items.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549520610", "createdAt": "2020-12-28T23:48:01Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1528,19 +1538,41 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.1\": \"Too many researches\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.2\": \"already in progress\",\n+  \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing Resources\",\n+  \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \"or \",\n+  \"com.minecolonies.coremod.research.requirement.research\": \"Requires %s!\",\n+  \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University Level %d\",\n+  \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only One Max-Level Research Can Be Unlocked per Branch\",\n+  \"com.minecolonies.coremod.research.limit.immutable\": \"This Research Can Not Be Undone.\",\n   \"com.minecolonies.coremod.research.effect.modifier.multiplication\": \"%s by %d percent\",\n   \"com.minecolonies.coremod.research.effect.modifier.addition\": \"%s + %d\",\n-\n   \"com.minecolonies.coremod.research.effect.unlock\": \"Unlocks %s\",\n   \"com.minecolonies.coremod.research.research\": \"Research\",\n   \"com.minecolonies.coremod.research.alreadystarted\": \"Research already started, please refresh the user interface\",\n   \"com.minecolonies.coremod.research.requirementnotmet\": \"Minimum research requirement not met!\",\n+  \"com.minecolonies.coremod.research.costnotavailable\": \"Missing necessarily items.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU3NTg5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0ODoyMlrOIMEFMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0ODoyMlrOIMEFMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMDY4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.undo.haschilds\": \"You can't reset research with completed offshoots.\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.undo.haschilds\": \"You can't reset a research with completed offshoots.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549520688", "createdAt": "2020-12-28T23:48:22Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1528,19 +1538,41 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.1\": \"Too many researches\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.2\": \"already in progress\",\n+  \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing Resources\",\n+  \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \"or \",\n+  \"com.minecolonies.coremod.research.requirement.research\": \"Requires %s!\",\n+  \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University Level %d\",\n+  \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only One Max-Level Research Can Be Unlocked per Branch\",\n+  \"com.minecolonies.coremod.research.limit.immutable\": \"This Research Can Not Be Undone.\",\n   \"com.minecolonies.coremod.research.effect.modifier.multiplication\": \"%s by %d percent\",\n   \"com.minecolonies.coremod.research.effect.modifier.addition\": \"%s + %d\",\n-\n   \"com.minecolonies.coremod.research.effect.unlock\": \"Unlocks %s\",\n   \"com.minecolonies.coremod.research.research\": \"Research\",\n   \"com.minecolonies.coremod.research.alreadystarted\": \"Research already started, please refresh the user interface\",\n   \"com.minecolonies.coremod.research.requirementnotmet\": \"Minimum research requirement not met!\",\n+  \"com.minecolonies.coremod.research.costnotavailable\": \"Missing necessarily items.\",\n   \"com.minecolonies.coremod.research.started\": \"Researchers have begun to investigate '%s'.\",\n+  \"com.minecolonies.coremod.research.stopped\": \"Researchers have stopped investigating '%s'.\",\n+  \"com.minecolonies.coremod.research.undo\": \"Researchers have torn up their notes about '%s'.\",\n+  \"com.minecolonies.coremod.research.undo.haschilds\": \"You can't reset research with completed offshoots.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU3Njc5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0OTowMVrOIMEFpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0OTowMVrOIMEFpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMDgwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.unlocktougprade\": \"Upgrading to %s requires research at the University!\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.unlocktougprade\": \"Upgrading to level %s requires you to complete a research at the University!\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549520805", "createdAt": "2020-12-28T23:49:01Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1528,19 +1538,41 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.1\": \"Too many researches\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.2\": \"already in progress\",\n+  \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing Resources\",\n+  \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \"or \",\n+  \"com.minecolonies.coremod.research.requirement.research\": \"Requires %s!\",\n+  \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University Level %d\",\n+  \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only One Max-Level Research Can Be Unlocked per Branch\",\n+  \"com.minecolonies.coremod.research.limit.immutable\": \"This Research Can Not Be Undone.\",\n   \"com.minecolonies.coremod.research.effect.modifier.multiplication\": \"%s by %d percent\",\n   \"com.minecolonies.coremod.research.effect.modifier.addition\": \"%s + %d\",\n-\n   \"com.minecolonies.coremod.research.effect.unlock\": \"Unlocks %s\",\n   \"com.minecolonies.coremod.research.research\": \"Research\",\n   \"com.minecolonies.coremod.research.alreadystarted\": \"Research already started, please refresh the user interface\",\n   \"com.minecolonies.coremod.research.requirementnotmet\": \"Minimum research requirement not met!\",\n+  \"com.minecolonies.coremod.research.costnotavailable\": \"Missing necessarily items.\",\n   \"com.minecolonies.coremod.research.started\": \"Researchers have begun to investigate '%s'.\",\n+  \"com.minecolonies.coremod.research.stopped\": \"Researchers have stopped investigating '%s'.\",\n+  \"com.minecolonies.coremod.research.undo\": \"Researchers have torn up their notes about '%s'.\",\n+  \"com.minecolonies.coremod.research.undo.haschilds\": \"You can't reset research with completed offshoots.\",\n   \"com.minecolonies.coremod.research.havetounlock\": \"Build a University and research this hut to unlock it!\",\n+  \"com.minecolonies.coremod.research.unlocktougprade\": \"Upgrading to %s requires research at the University!\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU3NzYzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0OTo1MVrOIMEGFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo0OTo1MVrOIMEGFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMDkxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.undo.progress.tooltip.1\": \"Canceled Research will lose all progress\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.undo.progress.tooltip.1\": \"A canceled research will lose all progress\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549520917", "createdAt": "2020-12-28T23:49:51Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1528,19 +1538,41 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.1\": \"Too many researches\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.2\": \"already in progress\",\n+  \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing Resources\",\n+  \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \"or \",\n+  \"com.minecolonies.coremod.research.requirement.research\": \"Requires %s!\",\n+  \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University Level %d\",\n+  \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only One Max-Level Research Can Be Unlocked per Branch\",\n+  \"com.minecolonies.coremod.research.limit.immutable\": \"This Research Can Not Be Undone.\",\n   \"com.minecolonies.coremod.research.effect.modifier.multiplication\": \"%s by %d percent\",\n   \"com.minecolonies.coremod.research.effect.modifier.addition\": \"%s + %d\",\n-\n   \"com.minecolonies.coremod.research.effect.unlock\": \"Unlocks %s\",\n   \"com.minecolonies.coremod.research.research\": \"Research\",\n   \"com.minecolonies.coremod.research.alreadystarted\": \"Research already started, please refresh the user interface\",\n   \"com.minecolonies.coremod.research.requirementnotmet\": \"Minimum research requirement not met!\",\n+  \"com.minecolonies.coremod.research.costnotavailable\": \"Missing necessarily items.\",\n   \"com.minecolonies.coremod.research.started\": \"Researchers have begun to investigate '%s'.\",\n+  \"com.minecolonies.coremod.research.stopped\": \"Researchers have stopped investigating '%s'.\",\n+  \"com.minecolonies.coremod.research.undo\": \"Researchers have torn up their notes about '%s'.\",\n+  \"com.minecolonies.coremod.research.undo.haschilds\": \"You can't reset research with completed offshoots.\",\n   \"com.minecolonies.coremod.research.havetounlock\": \"Build a University and research this hut to unlock it!\",\n+  \"com.minecolonies.coremod.research.unlocktougprade\": \"Upgrading to %s requires research at the University!\",\n   \"com.minecolonies.coremod.research.item1\": \"\u00a7cThe %s requires research\",\n   \"com.minecolonies.coremod.research.item2\": \"\u00a7cat the University to be built.\",\n-\n+  \"com.minecolonies.coremod.research.available\": \"Your colonists have found the precursors to '%s' research.\",\n+  \"com.minecolonies.coremod.research.locked\": \"Locked.\",\n+  \"com.minecolonies.coremod.research.undo.progress\": \"Cancel Research?\",\n+  \"com.minecolonies.coremod.research.undo.progress.tooltip.1\": \"Canceled Research will lose all progress\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU3ODcwOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo1MTowNVrOIMEGtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo1MTowNVrOIMEGtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMTA3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.taunt.subtitle\": \"Your mother was a hamster, and your father smelt of elderberries.\",\n          \n          \n            \n              \"com.minecolonies.research.taunt.subtitle\": \"Your mother was a hamster and your father smelt of elderberries!\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549521077", "createdAt": "2020-12-28T23:51:05Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1967,248 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.taunt.subtitle\": \"Your mother was a hamster, and your father smelt of elderberries.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 248}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU4MDE4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo1Mjo0NlrOIMEHgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo1Mjo0NlrOIMEHgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMTI4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Plants at Once\",\n          \n          \n            \n              \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Crops at Once\",\n          \n      \n    \n    \n  \n\nRepetition removal \ud83d\ude04", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549521283", "createdAt": "2020-12-28T23:52:46Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1967,248 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.taunt.subtitle\": \"Your mother was a hamster, and your father smelt of elderberries.\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Raider Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Guard Armor +%3$d%% Durability\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Minimum Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Shield Blocking Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Can Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Citizen Tools +%3$d%% Durability\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Plants at Once\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 304}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjU4MDg2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo1MzozMFrOIMEH5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMzo1MzozMFrOIMEH5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMTM4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone Recipe.  Bakers Learn Chorus Bread Recipe\",\n          \n          \n            \n              \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone Recipe and Bakers Learn Chorus Bread Recipe\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549521380", "createdAt": "2020-12-28T23:53:30Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1967,248 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.taunt.subtitle\": \"Your mother was a hamster, and your father smelt of elderberries.\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Raider Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Guard Armor +%3$d%% Durability\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Minimum Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Shield Blocking Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Can Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Citizen Tools +%3$d%% Durability\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Plants at Once\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Have Fire and Lava Immunity\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack Which Damages and Knocks Back Nearby Enemies\",\n+  \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone Recipe.  Bakers Learn Chorus Bread Recipe\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fc04c8520a35c8ff84ed88b5bce9c9593055e7"}, "originalPosition": 308}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODMwMjcyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjowODowNVrOIMStIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjowODowNVrOIMStIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2MDI5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only one max-level Research can be unlocked per Branch\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only one max-level research can be unlocked per branch.\",\n          \n      \n    \n    \n  \n\nIf part of it is changed to lowercase, it all needs to be.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549760291", "createdAt": "2020-12-29T16:08:05Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1528,19 +1538,40 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.1\": \"Too many researches\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.2\": \"already in progress\",\n+  \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing Resources\",\n+  \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \"or \",\n+  \"com.minecolonies.coremod.research.requirement.research\": \"Requires %s!\",\n+  \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University Level %d\",\n+  \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only one max-level Research can be unlocked per Branch\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17f1b5f18518a03270b4917e3c29b6495f3c6cb"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODMxOTM3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoxNToxMVrOIMS2vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoxNToxMVrOIMS2vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2Mjc0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n          \n          \n            \n              \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n          \n          \n            \n              \"com.minecolonies.research.nightowl2.subtitle\": \"Got any coffee?\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549762748", "createdAt": "2020-12-29T16:15:11Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17f1b5f18518a03270b4917e3c29b6495f3c6cb"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODMyNDgyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/4_2_nightowl2.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoxNjo1NlrOIMS5hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoxNjo1NlrOIMS5hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2MzQ2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"branch\": \"civilian\",\n          \n          \n            \n              \"branch\": \"civilian\",\n          \n          \n            \n              \"subtitle\": \"com.minecolonies.research.nightowl2.subtitle\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549763460", "createdAt": "2020-12-29T16:16:56Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/civilian/4_2_nightowl2.json", "diffHunk": "@@ -0,0 +1,23 @@\n+{\n+  \"comment\": \"name: Nightowl II * description : Working Day H\",\n+  \"id\": \"nightowl2\",\n+  \"branch\": \"civilian\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17f1b5f18518a03270b4917e3c29b6495f3c6cb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODMzMzY2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoyMDo0OVrOIMS-uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoyMDo0OVrOIMS-uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2NDc5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n          \n          \n            \n              \"com.minecolonies.research.evasion.subtitle\": \"\\\"Duck!\\\" \\\"No, that's a goose.\\\"\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549764795", "createdAt": "2020-12-29T16:20:49Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODMzODM3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoyMjo1NFrOIMTBUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoyMjo1NFrOIMTBUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2NTQ1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n          \n          \n            \n              \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n          \n          \n            \n              \"com.minecolonies.research.beanstalk.subtitle\": \"That's one heck of a growth spurt!\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549765459", "createdAt": "2020-12-29T16:22:54Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODM0MDg0OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/6_beanstalk.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoyMzo1OVrOIMTCwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjoyMzo1OVrOIMTCwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc2NTgyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"branch\": \"civilian\",\n          \n          \n            \n              \"branch\": \"civilian\",\n          \n          \n            \n              \"subtitle\": \"com.minecolonies.research.beanstalk.subtitle\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549765826", "createdAt": "2020-12-29T16:23:59Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/civilian/6_beanstalk.json", "diffHunk": "@@ -0,0 +1,19 @@\n+{\n+  \"comment\": \"name: Beanstalk * description : Growth\",\n+  \"id\": \"beanstalk\",\n+  \"branch\": \"civilian\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODM3NzI4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjozOToyMFrOIMTXMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjozOToyMFrOIMTXMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTA1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n          \n          \n            \n              \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n          \n          \n            \n              \"com.minecolonies.research.stonecake.subtitle\": \"Don't break a tooth!\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549771056", "createdAt": "2020-12-29T16:39:20Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.phd.subtitle\": \"Not that sort of doctor.\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.arrowuse.subtitle\": \"They work better with ammo.\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.taunt.subtitle\": \"Your mother was a hamster and your father smelt of elderberries!\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.improvedswords.subtitle\": \"Pointy end goes into the zombie.\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 266}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODM3ODczOnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/technology/1_3_stonecake.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjozOTo1OVrOIMTYAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjozOTo1OVrOIMTYAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MTI2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"subtitle\": \"com.minecolonies.research.stonecake.subtitle\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549771266", "createdAt": "2020-12-29T16:39:59Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/technology/1_3_stonecake.json", "diffHunk": "@@ -0,0 +1,22 @@\n+{\n+  \"comment\": \"name: Stone Cake * description : Stonemason\",\n+  \"id\": \"stonecake\",\n+  \"branch\": \"technology\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODM4NTU5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo0MzoxNFrOIMTbyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo0MzoxNFrOIMTbyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3MjIzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.rainman.name\": \"Rainman\",\n          \n          \n            \n              \"com.minecolonies.research.rainman.name\": \"Rainman\",\n          \n          \n            \n              \"com.minecolonies.research.rainman.subtitle\": \"Raindrops are falling on my head...\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549772235", "createdAt": "2020-12-29T16:43:14Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.phd.subtitle\": \"Not that sort of doctor.\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.arrowuse.subtitle\": \"They work better with ammo.\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 247}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODM5MDQ0OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/technology/6_rainman.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo0NToyM1rOIMTeYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNjo0NToyM1rOIMTeYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc3Mjg5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"subtitle\": \"com.minecolonies.research.rainman.subtitle\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549772896", "createdAt": "2020-12-29T16:45:23Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/technology/6_rainman.json", "diffHunk": "@@ -0,0 +1,19 @@\n+{\n+  \"comment\": \"name: Rainman * description : Working In Rain\",\n+  \"id\": \"rainman\",\n+  \"branch\": \"technology\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ0MjA3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzowNzoxN1rOIMT7zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzowNzoxN1rOIMT7zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MDQyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n          \n          \n            \n              \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision double vision.\",\n          \n      \n    \n    \n  \n\nDouble it double it!", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549780429", "createdAt": "2020-12-29T17:07:17Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ0NjU3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzowOTozNFrOIMT-gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzowOTozNFrOIMT-gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MTEyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n          \n          \n            \n              \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n          \n          \n            \n              \"com.minecolonies.research.doubletrouble.subtitle\": \"Double Trouble\",\n          \n      \n    \n    \n  \n\nAm I using this too much too much?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549781120", "createdAt": "2020-12-29T17:09:34Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.phd.subtitle\": \"Not that sort of doctor.\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.arrowuse.subtitle\": \"They work better with ammo.\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 240}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ0ODUxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/technology/3_doubletrouble.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxMDozMVrOIMT_kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxMDozMVrOIMT_kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MTM5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"subtitle\": \"com.minecolonies.research.doubletrouble.subtitle\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549781394", "createdAt": "2020-12-29T17:10:31Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/technology/3_doubletrouble.json", "diffHunk": "@@ -0,0 +1,31 @@\n+{\n+  \"comment\": \"name: Double Trouble * description : Plant 2\",\n+  \"id\": \"doubletrouble\",\n+  \"branch\": \"technology\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ2MzgyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxNzo0M1rOIMUIiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxNzo0M1rOIMUIiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4MzY4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.riposte.name\": \"Riposte\",\n          \n          \n            \n              \"com.minecolonies.research.riposte.name\": \"Riposte\",\n          \n          \n            \n              \"com.minecolonies.research.riposte.subtitle\": \"Oh yeah? Well, I, uh, um...\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549783688", "createdAt": "2020-12-29T17:17:43Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.phd.subtitle\": \"Not that sort of doctor.\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 217}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ2NzQ5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/combat/3_riposte.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxOToxOVrOIMUKkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoxOToxOVrOIMUKkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NDIxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"branch\": \"combat\",\n          \n          \n            \n              \"branch\": \"combat\",\n          \n          \n            \n              \"subtitle\": \"com.minecolonies.research.riposte.subtitle\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549784210", "createdAt": "2020-12-29T17:19:19Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/combat/3_riposte.json", "diffHunk": "@@ -0,0 +1,23 @@\n+{\n+  \"comment\": \"name: Riposte * description : Melee Armor\",\n+  \"id\": \"riposte\",\n+  \"branch\": \"combat\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ4MDkzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoyNTo1MFrOIMUSUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoyNTo1MFrOIMUSUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NjE5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n          \n          \n            \n              \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n          \n          \n            \n              \"com.minecolonies.research.knowtheend.subtitle\": \"Unlock the secrets of the most mysterious dimension.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549786193", "createdAt": "2020-12-29T17:25:50Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.phd.subtitle\": \"Not that sort of doctor.\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.arrowuse.subtitle\": \"They work better with ammo.\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 244}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ4MzM5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/technology/3_knowtheend.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoyNjo0M1rOIMUTqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzoyNjo0M1rOIMUTqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4NjUzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"subtitle\": \"com.minecolonies.research.knowtheend.subtitle\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549786536", "createdAt": "2020-12-29T17:26:43Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/technology/3_knowtheend.json", "diffHunk": "@@ -0,0 +1,23 @@\n+{\n+  \"comment\": \"name: Know the End? * description : Knowledge of The End\",\n+  \"id\": \"knowtheend\",\n+  \"branch\": \"technology\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ5NTk4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzozMjo1MlrOIMUa0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzozMjo1MlrOIMUa0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODM3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n          \n          \n            \n              \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n          \n          \n            \n              \"com.minecolonies.research.theflintstones.subtitle\": \"Yabba Dabba Doo!\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549788371", "createdAt": "2020-12-29T17:32:52Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1938,6 +1966,251 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.agilearcher.subtitle\": \"Dodge... Again!\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.dodge.subtitle\": \"If you can dodge a wrench...\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.evasion.subtitle\": \"Duck\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improveddodge.subtitle\": \"Dip\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedevasion.subtitle\": \"Dive\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multishot\",\n+  \"com.minecolonies.research.multishot.subtitle\": \"Known side effects include double vision.\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.phd.subtitle\": \"Not that sort of doctor.\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.arrowuse.subtitle\": \"They work better with ammo.\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.taunt.subtitle\": \"Your mother was a hamster and your father smelt of elderberries!\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.improvedswords.subtitle\": \"Pointy end goes into the zombie.\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 269}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODQ5ODE1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/technology/2_2_theflintstones.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzozMzo1MVrOIMUb_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzozMzo1MVrOIMUb_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4ODY2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"branch\": \"technology\",\n          \n          \n            \n              \"subtitle\": \"com.minecolonies.research.theflintstones.subtitle\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549788668", "createdAt": "2020-12-29T17:33:51Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/technology/2_2_theflintstones.json", "diffHunk": "@@ -0,0 +1,23 @@\n+{\n+  \"comment\": \"name: The Flintstones * description : Stonesmeltery\",\n+  \"id\": \"theflintstones\",\n+  \"branch\": \"technology\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2610aeb289b4ec1c171755ae790c5aa6c0529b8e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2MTU0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMjowOVrOIOQGkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMjowOVrOIOQGkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNDgwMg==", "bodyText": "Needs to be a translation key.\nIf it is already then this needs to be documented.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551814802", "createdAt": "2021-01-05T09:32:09Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -53,26 +48,43 @@\n \n     /**\n      * Start the research.\n-     *\n-     * @param player            the player starting it.\n      * @param localResearchTree the local research tree to store in the colony.\n      */\n-    void startResearch(@NotNull final PlayerEntity player, @NotNull final ILocalResearchTree localResearchTree);\n+    void startResearch(@NotNull final ILocalResearchTree localResearchTree);\n \n     /**\n      * Human readable description of research.\n-     *\n      * @return the description.\n      */\n     String getDesc();\n \n+    /**\n+     * Subtitle description of research.\n+     * @return the optional subtitle name.\n+     */\n+    String getSubtitle();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2MjMzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMjoyM1rOIOQHCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMjoyM1rOIOQHCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNDkyMg==", "bodyText": "This needs to be a ResourceLocation.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551814922", "createdAt": "2021-01-05T09:32:23Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -53,26 +48,43 @@\n \n     /**\n      * Start the research.\n-     *\n-     * @param player            the player starting it.\n      * @param localResearchTree the local research tree to store in the colony.\n      */\n-    void startResearch(@NotNull final PlayerEntity player, @NotNull final ILocalResearchTree localResearchTree);\n+    void startResearch(@NotNull final ILocalResearchTree localResearchTree);\n \n     /**\n      * Human readable description of research.\n-     *\n      * @return the description.\n      */\n     String getDesc();\n \n+    /**\n+     * Subtitle description of research.\n+     * @return the optional subtitle name.\n+     */\n+    String getSubtitle();\n+\n     /**\n      * Getter of the id of the research.\n-     *\n      * @return the String id.\n      */\n     String getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2MjkxOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMjozNFrOIOQHXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwNzo0MjoxM1rOIjsSWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTAwNA==", "bodyText": "This needs to be a ResourceLocation.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815004", "createdAt": "2021-01-05T09:32:34Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -53,26 +48,43 @@\n \n     /**\n      * Start the research.\n-     *\n-     * @param player            the player starting it.\n      * @param localResearchTree the local research tree to store in the colony.\n      */\n-    void startResearch(@NotNull final PlayerEntity player, @NotNull final ILocalResearchTree localResearchTree);\n+    void startResearch(@NotNull final ILocalResearchTree localResearchTree);\n \n     /**\n      * Human readable description of research.\n-     *\n      * @return the description.\n      */\n     String getDesc();\n \n+    /**\n+     * Subtitle description of research.\n+     * @return the optional subtitle name.\n+     */\n+    String getSubtitle();\n+\n     /**\n      * Getter of the id of the research.\n-     *\n      * @return the String id.\n      */\n     String getId();\n \n+    /**\n+     * Getter of the research icon's resource location.\n+     * @return the string of the ResourceLocation of the icon, in the pattern namespace:directory:(optional count).\n+     */\n+    String getIcon();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIzOTgxNQ==", "bodyText": "That one can possibly include pseudo-ItemStack data, including item counts, or a texture location.  I'll change the jdoc to be clearer on that, but it can't be a ResourceLocation, and it can't be turned into other relevant objects because textures at least may not exist on the server side.\n((Also currently under debate if it should even be used; the current commit has drawing of research icons disabled.))", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574239815", "createdAt": "2021-02-11T04:00:05Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -53,26 +48,43 @@\n \n     /**\n      * Start the research.\n-     *\n-     * @param player            the player starting it.\n      * @param localResearchTree the local research tree to store in the colony.\n      */\n-    void startResearch(@NotNull final PlayerEntity player, @NotNull final ILocalResearchTree localResearchTree);\n+    void startResearch(@NotNull final ILocalResearchTree localResearchTree);\n \n     /**\n      * Human readable description of research.\n-     *\n      * @return the description.\n      */\n     String getDesc();\n \n+    /**\n+     * Subtitle description of research.\n+     * @return the optional subtitle name.\n+     */\n+    String getSubtitle();\n+\n     /**\n      * Getter of the id of the research.\n-     *\n      * @return the String id.\n      */\n     String getId();\n \n+    /**\n+     * Getter of the research icon's resource location.\n+     * @return the string of the ResourceLocation of the icon, in the pattern namespace:directory:(optional count).\n+     */\n+    String getIcon();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTAwNA=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI5NjY2Ng==", "bodyText": "Then make it something like IIcon and add a parser which can parse the json spec into the IIcon object used for rendering.\nBut leaving this as a string is just asking for problems", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574296666", "createdAt": "2021-02-11T07:42:13Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -53,26 +48,43 @@\n \n     /**\n      * Start the research.\n-     *\n-     * @param player            the player starting it.\n      * @param localResearchTree the local research tree to store in the colony.\n      */\n-    void startResearch(@NotNull final PlayerEntity player, @NotNull final ILocalResearchTree localResearchTree);\n+    void startResearch(@NotNull final ILocalResearchTree localResearchTree);\n \n     /**\n      * Human readable description of research.\n-     *\n      * @return the description.\n      */\n     String getDesc();\n \n+    /**\n+     * Subtitle description of research.\n+     * @return the optional subtitle name.\n+     */\n+    String getSubtitle();\n+\n     /**\n      * Getter of the id of the research.\n-     *\n      * @return the String id.\n      */\n     String getId();\n \n+    /**\n+     * Getter of the research icon's resource location.\n+     * @return the string of the ResourceLocation of the icon, in the pattern namespace:directory:(optional count).\n+     */\n+    String getIcon();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTAwNA=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2NDIwOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMjo1NlrOIOQIGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMzoxNVrOIOQI1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTE5Mg==", "bodyText": "This can be collapsed into the id of the research.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815192", "createdAt": "2021-01-05T09:32:56Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -53,26 +48,43 @@\n \n     /**\n      * Start the research.\n-     *\n-     * @param player            the player starting it.\n      * @param localResearchTree the local research tree to store in the colony.\n      */\n-    void startResearch(@NotNull final PlayerEntity player, @NotNull final ILocalResearchTree localResearchTree);\n+    void startResearch(@NotNull final ILocalResearchTree localResearchTree);\n \n     /**\n      * Human readable description of research.\n-     *\n      * @return the description.\n      */\n     String getDesc();\n \n+    /**\n+     * Subtitle description of research.\n+     * @return the optional subtitle name.\n+     */\n+    String getSubtitle();\n+\n     /**\n      * Getter of the id of the research.\n-     *\n      * @return the String id.\n      */\n     String getId();\n \n+    /**\n+     * Getter of the research icon's resource location.\n+     * @return the string of the ResourceLocation of the icon, in the pattern namespace:directory:(optional count).\n+     */\n+    String getIcon();\n+\n+    /**\n+     * Getter of the resource location of the research, if loaded by datapack.\n+     *\n+     * @return the resource location for a dynamically loaded research,\n+     * minecolonies:staticresearch/id if statically assigned,\n+     * or minecolonies:clientlocal/id if received from a server in a remote environment.\n+     */\n+    ResourceLocation getResourceLocation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTM4MA==", "bodyText": "Id == Location on disk, as with everything else that MC loads from datapacks.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815380", "createdAt": "2021-01-05T09:33:15Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -53,26 +48,43 @@\n \n     /**\n      * Start the research.\n-     *\n-     * @param player            the player starting it.\n      * @param localResearchTree the local research tree to store in the colony.\n      */\n-    void startResearch(@NotNull final PlayerEntity player, @NotNull final ILocalResearchTree localResearchTree);\n+    void startResearch(@NotNull final ILocalResearchTree localResearchTree);\n \n     /**\n      * Human readable description of research.\n-     *\n      * @return the description.\n      */\n     String getDesc();\n \n+    /**\n+     * Subtitle description of research.\n+     * @return the optional subtitle name.\n+     */\n+    String getSubtitle();\n+\n     /**\n      * Getter of the id of the research.\n-     *\n      * @return the String id.\n      */\n     String getId();\n \n+    /**\n+     * Getter of the research icon's resource location.\n+     * @return the string of the ResourceLocation of the icon, in the pattern namespace:directory:(optional count).\n+     */\n+    String getIcon();\n+\n+    /**\n+     * Getter of the resource location of the research, if loaded by datapack.\n+     *\n+     * @return the resource location for a dynamically loaded research,\n+     * minecolonies:staticresearch/id if statically assigned,\n+     * or minecolonies:clientlocal/id if received from a server in a remote environment.\n+     */\n+    ResourceLocation getResourceLocation();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTE5Mg=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2NzM2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMzo0NVrOIOQJ6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMzo0NVrOIOQJ6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTY1Nw==", "bodyText": "ResearchIds should be resource locations.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815657", "createdAt": "2021-01-05T09:33:45Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -123,12 +163,36 @@\n      */\n     void addChild(IGlobalResearch child);\n \n+    /**\n+     * Add a child to a research, without setting parentage.\n+     * @param child the child to add\n+     */\n+    void addChild(final String child);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2NzczOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMzo1MVrOIOQKIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwNzo0MzoyNFrOIjsUFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTcxNQ==", "bodyText": "ResearchIds should be resource locations.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815715", "createdAt": "2021-01-05T09:33:51Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -123,12 +163,36 @@\n      */\n     void addChild(IGlobalResearch child);\n \n+    /**\n+     * Add a child to a research, without setting parentage.\n+     * @param child the child to add\n+     */\n+    void addChild(final String child);\n+\n+    /**\n+     * Add an individual cost.\n+     * @param cost the individual itemstack to add to the cost list, as a string.\n+     */\n+    void addCost(final String cost);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI0MDk4NQ==", "bodyText": "Costs are ItemStacks, including quantity (and, while not currently supported, down the road possibly NBT) information.  These ones I can pre-format into their ItemStacks if that's preferred, but it will make the serialization/deserialization much worse from a performance perspective.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574240985", "createdAt": "2021-02-11T04:06:06Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -123,12 +163,36 @@\n      */\n     void addChild(IGlobalResearch child);\n \n+    /**\n+     * Add a child to a research, without setting parentage.\n+     * @param child the child to add\n+     */\n+    void addChild(final String child);\n+\n+    /**\n+     * Add an individual cost.\n+     * @param cost the individual itemstack to add to the cost list, as a string.\n+     */\n+    void addCost(final String cost);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTcxNQ=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI5NzExMA==", "bodyText": "Then make it item stacks\nOr something that generally represents itemstacks or other objects like an interface implemented on wrappers.\nWe are in an object oriented language with java. Make use of it and it's compiler to prevent runtime problems.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574297110", "createdAt": "2021-02-11T07:43:24Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -123,12 +163,36 @@\n      */\n     void addChild(IGlobalResearch child);\n \n+    /**\n+     * Add a child to a research, without setting parentage.\n+     * @param child the child to add\n+     */\n+    void addChild(final String child);\n+\n+    /**\n+     * Add an individual cost.\n+     * @param cost the individual itemstack to add to the cost list, as a string.\n+     */\n+    void addCost(final String cost);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTcxNQ=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2Nzk4OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMzo1NlrOIOQKSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMzo1NlrOIOQKSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTc1Mw==", "bodyText": "ResearchIds should be resource locations.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815753", "createdAt": "2021-01-05T09:33:56Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -123,12 +163,36 @@\n      */\n     void addChild(IGlobalResearch child);\n \n+    /**\n+     * Add a child to a research, without setting parentage.\n+     * @param child the child to add\n+     */\n+    void addChild(final String child);\n+\n+    /**\n+     * Add an individual cost.\n+     * @param cost the individual itemstack to add to the cost list, as a string.\n+     */\n+    void addCost(final String cost);\n+\n+    /**\n+     * Add an individual effect.\n+     * @param effect the individual effect to add to the research, as a string.\n+     */\n+    void addEffect(final String effect);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2ODI0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDowMFrOIOQKcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDowMFrOIOQKcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTc5NA==", "bodyText": "ResearchIds should be resource locations.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815794", "createdAt": "2021-01-05T09:34:00Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -123,12 +163,36 @@\n      */\n     void addChild(IGlobalResearch child);\n \n+    /**\n+     * Add a child to a research, without setting parentage.\n+     * @param child the child to add\n+     */\n+    void addChild(final String child);\n+\n+    /**\n+     * Add an individual cost.\n+     * @param cost the individual itemstack to add to the cost list, as a string.\n+     */\n+    void addCost(final String cost);\n+\n+    /**\n+     * Add an individual effect.\n+     * @param effect the individual effect to add to the research, as a string.\n+     */\n+    void addEffect(final String effect);\n+\n+    /**\n+     * Add an individual requirement\n+     * @param requirement the individual requirement to add to the research, as a string.\n+     */\n+    void addRequirement(final String requirement);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2ODUyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDowOFrOIOQKoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDowOFrOIOQKoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTg0MQ==", "bodyText": "ResearchIds should be resource locations.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815841", "createdAt": "2021-01-05T09:34:08Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearch.java", "diffHunk": "@@ -123,12 +163,36 @@\n      */\n     void addChild(IGlobalResearch child);\n \n+    /**\n+     * Add a child to a research, without setting parentage.\n+     * @param child the child to add\n+     */\n+    void addChild(final String child);\n+\n+    /**\n+     * Add an individual cost.\n+     * @param cost the individual itemstack to add to the cost list, as a string.\n+     */\n+    void addCost(final String cost);\n+\n+    /**\n+     * Add an individual effect.\n+     * @param effect the individual effect to add to the research, as a string.\n+     */\n+    void addEffect(final String effect);\n+\n+    /**\n+     * Add an individual requirement\n+     * @param requirement the individual requirement to add to the research, as a string.\n+     */\n+    void addRequirement(final String requirement);\n+\n     /**\n      * Get the list of children of the research.\n      *\n      * @return a copy of the list of child identifiers.\n      */\n-    ImmutableList<String> getChilds();\n+    List<String> getChildren();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2OTUyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDoyNFrOIOQLPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDoyNFrOIOQLPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTk5OA==", "bodyText": "ResearchIds should be resource locations.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551815998", "createdAt": "2021-01-05T09:34:24Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearchTree.java", "diffHunk": "@@ -37,15 +45,40 @@ static IGlobalResearchTree getInstance()\n      * @param id    the id of the research.\n      * @return the effect id\n      */\n-    String getEffectIdForResearch(final @NotNull String id);\n+    List<IResearchEffect<?>> getEffectsForResearch(final @NotNull String id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk3MDk0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IGlobalResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDo0NVrOIOQMCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDo0NVrOIOQMCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNjIwMA==", "bodyText": "This should be collapsed into the research id as stated above.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551816200", "createdAt": "2021-01-05T09:34:45Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IGlobalResearchTree.java", "diffHunk": "@@ -37,15 +45,40 @@ static IGlobalResearchTree getInstance()\n      * @param id    the id of the research.\n      * @return the effect id\n      */\n-    String getEffectIdForResearch(final @NotNull String id);\n+    List<IResearchEffect<?>> getEffectsForResearch(final @NotNull String id);\n+\n+   /** Get a research's resource location.\n+     *\n+     * @param id     the id of the research.\n+     * @return the IResearch object.\n+     */\n+    ResourceLocation getResearchResourceLocation(final String branch, final String id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk3MTUwOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDo1NFrOIOQMXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDo1NFrOIOQMXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNjI4Ng==", "bodyText": "ResearchIds should be resource locations.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551816286", "createdAt": "2021-01-05T09:34:54Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "diffHunk": "@@ -42,13 +45,37 @@\n      */\n     List<ILocalResearch> getResearchInProgress();\n \n+    /**\n+     * Checks if a given research is complete.\n+     *\n+     * @return true if complete or if no such research is loaded, false if not completed.\n+     */\n+     boolean hasCompletedResearch(final String researchId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk3MTg1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDo1OVrOIOQMmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNDo1OVrOIOQMmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNjM0NA==", "bodyText": "ResearchIds should be resource locations.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551816344", "createdAt": "2021-01-05T09:34:59Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "diffHunk": "@@ -42,13 +45,37 @@\n      */\n     List<ILocalResearch> getResearchInProgress();\n \n+    /**\n+     * Checks if a given research is complete.\n+     *\n+     * @return true if complete or if no such research is loaded, false if not completed.\n+     */\n+     boolean hasCompletedResearch(final String researchId);\n+\n     /**\n      * Finish a research and remove it from the inProgress list.\n      *\n-     * @param id the id of the research to remove.\n+     * @param id the id of the research to finish.\n      */\n     void finishResearch(final String id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk3NDg2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IResearchManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNTo1MVrOIOQOWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQxNDozNToyN1rOIj7toQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNjc5NA==", "bodyText": "Why is the colony needed here? Are instances of this interface not linked to the actuall colony they work on?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551816794", "createdAt": "2021-01-05T09:35:51Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IResearchManager.java", "diffHunk": "@@ -36,4 +37,11 @@\n      * @return the ResearchEffects object.\n      */\n     IResearchEffectManager getResearchEffects();\n+\n+    /**\n+     * Checks if any autostart research has its prerequisites filled,\n+     * and if so, prompts the player for resources or begins research if no resources required.\n+     * @param colony       The colony where the research is being checked.\n+     */\n+    void checkAutoStartResearch(IColony colony);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIyNzUwNg==", "bodyText": "ResearchManagers exist within the Colony, but they don't have the colony as an internally-accessible property the way that RequestManagers do.  I can change that if it'd be considered a cleaner option, but I wasn't sure if that would be preferable given the colony/colonyview split.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574227506", "createdAt": "2021-02-11T03:05:20Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/IResearchManager.java", "diffHunk": "@@ -36,4 +37,11 @@\n      * @return the ResearchEffects object.\n      */\n     IResearchEffectManager getResearchEffects();\n+\n+    /**\n+     * Checks if any autostart research has its prerequisites filled,\n+     * and if so, prompts the player for resources or begins research if no resources required.\n+     * @param colony       The colony where the research is being checked.\n+     */\n+    void checkAutoStartResearch(IColony colony);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNjc5NA=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI5NzU3Mg==", "bodyText": "If the manager is inheritable linked to the colony then it should have the colony internally.\nIf there is a need for you to have a view then your research manager needs a view class of it's own", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574297572", "createdAt": "2021-02-11T07:44:36Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IResearchManager.java", "diffHunk": "@@ -36,4 +37,11 @@\n      * @return the ResearchEffects object.\n      */\n     IResearchEffectManager getResearchEffects();\n+\n+    /**\n+     * Checks if any autostart research has its prerequisites filled,\n+     * and if so, prompts the player for resources or begins research if no resources required.\n+     * @param colony       The colony where the research is being checked.\n+     */\n+    void checkAutoStartResearch(IColony colony);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNjc5NA=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDU0OTQwOQ==", "bodyText": "I can make that change if desired, but ResearchManager may be linked to Colony or a ColonyView depending on where it's created, and there are a lot of ColonyView properties that will return nulls where Colony would not, many of them places it would be really bulky to do the necessary null or instanceof checks.\nThat's not a problem for checkAutoStartResearch (or startCostlessResearch), which neither request or would need something that fails that problem, and they're always called on the server-side anyway.  But it seems like setting up a landmine for other coders.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574549409", "createdAt": "2021-02-11T14:35:27Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/IResearchManager.java", "diffHunk": "@@ -36,4 +37,11 @@\n      * @return the ResearchEffects object.\n      */\n     IResearchEffectManager getResearchEffects();\n+\n+    /**\n+     * Checks if any autostart research has its prerequisites filled,\n+     * and if so, prompts the player for resources or begins research if no resources required.\n+     * @param colony       The colony where the research is being checked.\n+     */\n+    void checkAutoStartResearch(IColony colony);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNjc5NA=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk3NjMxOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/IResearchRequirement.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNjoxNVrOIOQPQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwMzoxMDo1NVrOIjoJUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNzAyNw==", "bodyText": "More documentation is needed.\nI have no clue what this is.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551817027", "createdAt": "2021-01-05T09:36:15Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IResearchRequirement.java", "diffHunk": "@@ -22,4 +22,11 @@\n      * @return translation text component.\n      */\n     TranslationTextComponent getDesc();\n+\n+    /**\n+     * Get a string description of the requirement, to simplify serialization.\n+     * @return string description of the research requirement.\n+     */\n+    String getAttributes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNzI0MA==", "bodyText": "Are these effects?\nAre these the results of the research?\nAre theese requirements?\nWhat are these?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551817240", "createdAt": "2021-01-05T09:36:38Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/IResearchRequirement.java", "diffHunk": "@@ -22,4 +22,11 @@\n      * @return translation text component.\n      */\n     TranslationTextComponent getDesc();\n+\n+    /**\n+     * Get a string description of the requirement, to simplify serialization.\n+     * @return string description of the research requirement.\n+     */\n+    String getAttributes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNzAyNw=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIyODgxNg==", "bodyText": "They return a string containing the necessary information to rebuild the client-visible traits for the given research requirement, whatever those may be.\nI can get them out of the API methods, if that'd be preferred, since in practice there's not a huge benefit from parsing them versus the traits individually, and most likely only need to be called from within coremod (specifically GlobalResearchFactory).  But they are traits that people making new types of ResearchRequirements would need to implement, or the requirements won't show up properly for the .\nThe goal here was to provide an easy way for other mods to include new types of ResearchRequirements without having to have a deep understanding of the GlobalResearchFactory's internal implementation, or even necessarily having to implement a full serialization/deserialization for ResearchRequirements where that would be impractical (eg, the client side doesn't need to understand the trigger behavior, or where the mod maker would want to have misleading results on the client sides when connecting to a multiplayer server).\nI can make them into serialize/deserialize functions instead of constructor and getX, instead, if the concern is readability/legibility.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574228816", "createdAt": "2021-02-11T03:10:55Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/IResearchRequirement.java", "diffHunk": "@@ -22,4 +22,11 @@\n      * @return translation text component.\n      */\n     TranslationTextComponent getDesc();\n+\n+    /**\n+     * Get a string description of the requirement, to simplify serialization.\n+     * @return string description of the research requirement.\n+     */\n+    String getAttributes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNzAyNw=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk3OTUwOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNjo1OFrOIOQQ_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNjo1OFrOIOQQ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNzQ2OQ==", "bodyText": "Again needs to be a translation key, or if it is already one it should be documented.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551817469", "createdAt": "2021-01-05T09:36:58Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "diffHunk": "@@ -38,11 +38,31 @@\n      */\n     TranslationTextComponent getDesc();\n \n+    /**\n+     * Effect subtitle description.\n+     *\n+     * @return the Subtitle desc.\n+     */\n+    String getSubtitle();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk4MTQxOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozNzozOFrOIOQSHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwMzo0OTo1N1rOIjoshQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNzc1Nw==", "bodyText": "What does this \"display\" value represent in the context of the effect?\nIs the the strength/level?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551817757", "createdAt": "2021-01-05T09:37:38Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "diffHunk": "@@ -38,11 +38,31 @@\n      */\n     TranslationTextComponent getDesc();\n \n+    /**\n+     * Effect subtitle description.\n+     *\n+     * @return the Subtitle desc.\n+     */\n+    String getSubtitle();\n+\n+    /**\n+     * Returns the effect's display value\n+     *\n+     * @return the display value.\n+     */\n+    Double getDisplay();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIzNzgyOQ==", "bodyText": "At least as currently implemented, it's the difference between the effect's strength at that level of effect, and the previous level, ie the relative effect.  If the effect strength goes [0, 0.1, 0.2, 0.5], the display values will be [0, 0.1, 0.1, 0.3].  I'd used the more specific relative/absolute names previously, but that was shot down as imprecise because these values are only and should only be used for display purposes, and their internal implementation would have to become more varied to support the data-driven effect PR-to-PR.\nI will copy more of the GlobalResearchEffect jdoc which explains this behavior in greater detail to this location, though.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574237829", "createdAt": "2021-02-11T03:49:57Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "diffHunk": "@@ -38,11 +38,31 @@\n      */\n     TranslationTextComponent getDesc();\n \n+    /**\n+     * Effect subtitle description.\n+     *\n+     * @return the Subtitle desc.\n+     */\n+    String getSubtitle();\n+\n+    /**\n+     * Returns the effect's display value\n+     *\n+     * @return the display value.\n+     */\n+    Double getDisplay();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNzc1Nw=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzUyMDMwOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNDo0MFrOIOVTFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwMzozODoyM1rOIjogXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5OTkyNw==", "bodyText": "With datadriven how is overriding supposed to work?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551899927", "createdAt": "2021-01-05T12:24:40Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "diffHunk": "@@ -38,11 +38,31 @@\n      */\n     TranslationTextComponent getDesc();\n \n+    /**\n+     * Effect subtitle description.\n+     *\n+     * @return the Subtitle desc.\n+     */\n+    String getSubtitle();\n+\n+    /**\n+     * Returns the effect's display value\n+     *\n+     * @return the display value.\n+     */\n+    Double getDisplay();\n+\n     /**\n      * Does this effect override another effect with the same id?\n      *\n      * @param other the effect to check.\n      * @return true if so.\n      */\n     boolean overrides(@NotNull final IResearchEffect<?> other);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIzNDcxNw==", "bodyText": "That's been one of the challenges for the data-driven effects PR-to-PR you asked for.\nWhere a numeric output exists these comparisons aren't terribly hard to work with, but for tagged functions that overrides method may well get removed.  I've left it for now because a) it existed and b) it will provide some protection against packmaker created research trees where an effect of the same type exists on multiple different branches or subbranches, but, yes, the data-driven effects will probably see it disappear.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574234717", "createdAt": "2021-02-11T03:38:23Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "diffHunk": "@@ -38,11 +38,31 @@\n      */\n     TranslationTextComponent getDesc();\n \n+    /**\n+     * Effect subtitle description.\n+     *\n+     * @return the Subtitle desc.\n+     */\n+    String getSubtitle();\n+\n+    /**\n+     * Returns the effect's display value\n+     *\n+     * @return the display value.\n+     */\n+    Double getDisplay();\n+\n     /**\n      * Does this effect override another effect with the same id?\n      *\n      * @param other the effect to check.\n      * @return true if so.\n      */\n     boolean overrides(@NotNull final IResearchEffect<?> other);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg5OTkyNw=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzUyMTE2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNDo1NlrOIOVTlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNDo1NlrOIOVTlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwMDA1NA==", "bodyText": "See comment before on this.\nWhat are attributes?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551900054", "createdAt": "2021-01-05T12:24:56Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffect.java", "diffHunk": "@@ -38,11 +38,31 @@\n      */\n     TranslationTextComponent getDesc();\n \n+    /**\n+     * Effect subtitle description.\n+     *\n+     * @return the Subtitle desc.\n+     */\n+    String getSubtitle();\n+\n+    /**\n+     * Returns the effect's display value\n+     *\n+     * @return the display value.\n+     */\n+    Double getDisplay();\n+\n     /**\n      * Does this effect override another effect with the same id?\n      *\n      * @param other the effect to check.\n      * @return true if so.\n      */\n     boolean overrides(@NotNull final IResearchEffect<?> other);\n+\n+    /**\n+     * Get the attributes of the research effect, for easier serialization.\n+     * @return the string representation of the effect and its magnitudes.\n+     */\n+    String getAttributes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzUyMjQ3OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNToxOFrOIOVUVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNToxOFrOIOVUVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwMDI0NQ==", "bodyText": "Again this makes no sense to me.\nWhat is the value? The Strength? The Multiplier?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551900245", "createdAt": "2021-01-05T12:25:18Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "diffHunk": "@@ -17,10 +17,32 @@\n      */\n     <W extends IResearchEffect<?>> W getEffect(final String id, @NotNull final Class<W> type);\n \n+    /**\n+     * Get the research effect strength which is assigned to a particular string\n+     * or zero, if no matching effect is present.\n+     *\n+     * @param id   the id of the effect.\n+     * @return the strength of the effect, or zero if it isn't present.\n+     */\n+     double getEffectValue(final String id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzUyNDMyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNTo1N1rOIOVVcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwNDozMToyOFrOIjpNQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwMDUzMA==", "bodyText": "And what is this doing here?\nThis feels like a massive code smell if the manager has different methods to get the type of an effect.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551900530", "createdAt": "2021-01-05T12:25:57Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "diffHunk": "@@ -17,10 +17,32 @@\n      */\n     <W extends IResearchEffect<?>> W getEffect(final String id, @NotNull final Class<W> type);\n \n+    /**\n+     * Get the research effect strength which is assigned to a particular string\n+     * or zero, if no matching effect is present.\n+     *\n+     * @param id   the id of the effect.\n+     * @return the strength of the effect, or zero if it isn't present.\n+     */\n+     double getEffectValue(final String id);\n+\n+    /**\n+     * Gets whether a research effect is enabled with a non-zero value.\n+     *\n+     * @param id   the id of the effect.\n+     * @return true if the is greater than zero, false if less than or equal to zero or not present.\n+     */\n+    boolean getEffectBoolean(final String id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI0NjIxMQ==", "bodyText": "Was largely a helper method to make it easier to move back and forth during December when there was debate over retaining the multiple implementations of IResearchEffect for multiplier/additive/unlockbuilding/unlockability, and over supporting multiple levels of building unlocks.\nWill remove the boolean variant, as with the movement to make buildings and abilities support different strengths, it's become little more than a != null && > 0 check.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574246211", "createdAt": "2021-02-11T04:31:28Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "diffHunk": "@@ -17,10 +17,32 @@\n      */\n     <W extends IResearchEffect<?>> W getEffect(final String id, @NotNull final Class<W> type);\n \n+    /**\n+     * Get the research effect strength which is assigned to a particular string\n+     * or zero, if no matching effect is present.\n+     *\n+     * @param id   the id of the effect.\n+     * @return the strength of the effect, or zero if it isn't present.\n+     */\n+     double getEffectValue(final String id);\n+\n+    /**\n+     * Gets whether a research effect is enabled with a non-zero value.\n+     *\n+     * @param id   the id of the effect.\n+     * @return true if the is greater than zero, false if less than or equal to zero or not present.\n+     */\n+    boolean getEffectBoolean(final String id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwMDUzMA=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzUyNjMyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNjozMFrOIOVWkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNjozMFrOIOVWkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwMDgxOA==", "bodyText": "Okey..... So we have effects with a numeric value, with a boolean value, and with no value......\nThis does really feel wrong.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551900818", "createdAt": "2021-01-05T12:26:30Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "diffHunk": "@@ -17,10 +17,32 @@\n      */\n     <W extends IResearchEffect<?>> W getEffect(final String id, @NotNull final Class<W> type);\n \n+    /**\n+     * Get the research effect strength which is assigned to a particular string\n+     * or zero, if no matching effect is present.\n+     *\n+     * @param id   the id of the effect.\n+     * @return the strength of the effect, or zero if it isn't present.\n+     */\n+     double getEffectValue(final String id);\n+\n+    /**\n+     * Gets whether a research effect is enabled with a non-zero value.\n+     *\n+     * @param id   the id of the effect.\n+     * @return true if the is greater than zero, false if less than or equal to zero or not present.\n+     */\n+    boolean getEffectBoolean(final String id);\n+\n     /**\n      * Apply the effect to the research effects class.\n      *\n      * @param effect the effect to apply.\n      */\n     void applyEffect(final IResearchEffect<?> effect);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzUyNzc0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNjo1MlrOIOVXUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjoyNjo1MlrOIOVXUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwMTAwOQ==", "bodyText": "Documentation: When is this needed? How and why?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551901009", "createdAt": "2021-01-05T12:26:52Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "diffHunk": "@@ -17,10 +17,32 @@\n      */\n     <W extends IResearchEffect<?>> W getEffect(final String id, @NotNull final Class<W> type);\n \n+    /**\n+     * Get the research effect strength which is assigned to a particular string\n+     * or zero, if no matching effect is present.\n+     *\n+     * @param id   the id of the effect.\n+     * @return the strength of the effect, or zero if it isn't present.\n+     */\n+     double getEffectValue(final String id);\n+\n+    /**\n+     * Gets whether a research effect is enabled with a non-zero value.\n+     *\n+     * @param id   the id of the effect.\n+     * @return true if the is greater than zero, false if less than or equal to zero or not present.\n+     */\n+    boolean getEffectBoolean(final String id);\n+\n     /**\n      * Apply the effect to the research effects class.\n      *\n      * @param effect the effect to apply.\n      */\n     void applyEffect(final IResearchEffect<?> effect);\n+\n+    /**\n+     * Clear the contents of the effect manager.\n+     */\n+    void clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzU1NDQzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/factories/IGlobalResearchFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjozNTo0N1rOIOVnIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjozNTo0N1rOIOVnIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwNTA1OA==", "bodyText": "If you have a better idea how to make this (some sort of functional programming with codecs?!?!?) then I am all ears.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551905058", "createdAt": "2021-01-05T12:35:47Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/research/factories/IGlobalResearchFactory.java", "diffHunk": "@@ -25,55 +25,101 @@ default IGlobalResearch getNewInstance(@NotNull final IFactoryController factory\n \n         if (!(context[0] instanceof String))\n         {\n-            throw new IllegalArgumentException(\"First parameter is supposed to be the String ID!\");\n+            throw new IllegalArgumentException(\"First parameter is supposed to be the ID (String)!\");\n         }\n \n         if (!(context[1] instanceof String))\n         {\n-            throw new IllegalArgumentException(\"Second parameter is supposed to be the IResearch parent!\");\n+            throw new IllegalArgumentException(\"Second parameter is supposed to be the ResourceLocation Path (String)!\");\n         }\n \n         if (!(context[2] instanceof String))\n         {\n-            throw new IllegalArgumentException(\"Third parameter is supposed to be the Branch (String)!\");\n+            throw new IllegalArgumentException(\"Third parameter is supposed to be the branchID (String)!\");\n         }\n \n         if (!(context[3] instanceof String))\n         {\n-            throw new IllegalArgumentException(\"Fourth parameter is supposed to be the Desc (String)!\");\n+            throw new IllegalArgumentException(\"Fourth parameter is supposed to be the parent (String)!\");\n         }\n \n-        if (!(context[4] instanceof Integer))\n+        if (!(context[4] instanceof String))\n         {\n-            throw new IllegalArgumentException(\"Fifth parameter is supposed to be the Depth (int)!\");\n+            throw new IllegalArgumentException(\"Fifth parameter is supposed to be the description (String)!\");\n         }\n \n-        if (!(context[5] instanceof IResearchEffect))\n+        if (!(context[5] instanceof Integer))\n         {\n-            throw new IllegalArgumentException(\"Last parameter is supposed to be the IResearchEffect!\");\n+            throw new IllegalArgumentException(\"Sixth parameter is supposed to be the Depth (int)!\");\n         }\n \n         final String id = (String) context[0];\n-        final String parent = (String) context[1];\n+        final String resourcePath = (String) context[1];\n         final String branch = (String) context[2];\n-        final String desc = (String) context[3];\n-        final int depth = (int) context[4];\n-        final IResearchEffect<?> effect = (IResearchEffect<?>) context[5];\n-        return getNewInstance(id, parent, branch, desc, depth, effect);\n+        final String parent = (String) context[3];\n+        final String desc = (String) context[4];\n+        final int depth = (int) context[5];\n+        final String icon;\n+        if(context.length > 6)\n+        {\n+            icon = (String) context[6];\n+        }\n+        else\n+        {\n+            icon = \"\";\n+        }\n+        final String subtitle;\n+        if(context.length > 7)\n+        {\n+            subtitle = (String) context[7];\n+        }\n+        else\n+        {\n+            subtitle = \"\";\n+        }\n+        final boolean onlyChild;\n+        final boolean hidden;\n+        final boolean autostart;\n+        final boolean instant;\n+        final boolean immutable;\n+        if (context.length == 13)\n+        {\n+            onlyChild = (boolean) context[8];\n+            hidden = (boolean) context[9];\n+            autostart = (boolean) context[10];\n+            instant = (boolean) context[11];\n+            immutable = (boolean) context[12];\n+        }\n+        else\n+        {\n+            onlyChild = false;\n+            hidden = false;\n+            autostart = false;\n+            instant = false;\n+            immutable = false;\n+        }\n+        return getNewInstance(id, resourcePath, branch, parent, desc, depth, icon, subtitle, onlyChild, hidden, autostart, instant, immutable);\n     }\n \n     /**\n      * Method to get a new Instance of a Research.\n      *\n-     * @param id     the id.\n-     * @param parent the parent.\n-     * @param branch the branch.\n-     * @param desc   the description.\n-     * @param depth  the depth.\n-     * @param effect the effect.\n+     * @param id                the id.\n+     * @param resourcePath      the path representation of the ResourceLocation for the research.\n+     * @param branch            the branch.\n+     * @param parent            the research's parent, or \"\" if no parent.\n+     * @param desc              the description of the research.\n+     * @param universityLevel   the university tier of the research.\n+     * @param icon              the string of the icon's characteristics.\n+     * @param subtitle          the optional subtitle description of the research.\n+     * @param onlyChild         if the research's completion prohibits its siblings from being completed.\n+     * @param hidden            if the research is visible only when it is eligible for research.\n+     * @param autostart         if the research attempts to automatically start when eligible, or reports to the player if unable.\n+     * @param instant           if the research should complete immediately.\n+     * @param immutable         if the research is locking, and can not be undone once completed.\n      * @return a new Instance of Research.\n      */\n     @NotNull\n-    IGlobalResearch getNewInstance(final String id, final String parent, final String branch, @NotNull final String desc, final int depth, final IResearchEffect<?> effect);\n+    IGlobalResearch getNewInstance(final String id, final String resourcePath, final String branch, final String parent, final String desc, final int universityLevel,\n+      final String icon,final String subtitle, final boolean onlyChild, final boolean hidden, final boolean autostart, final boolean instant, final boolean immutable);\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzU2MjczOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjozODoxMFrOIOVrtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjozODoxMFrOIOVrtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwNjIzMA==", "bodyText": "I think this can already be done with existing handlers, since builders etc need this logic.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551906230", "createdAt": "2021-01-05T12:38:10Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -282,6 +282,33 @@ public static int getItemCountInItemHandlers(@Nullable final Collection<IItemHan\n         return count;\n     }\n \n+    /**\n+     * Checks if an ItemHandler has an ItemStack, including count, optionally checking to match damage and NBT.\n+     *\n+     * @param handler       ItemHandler to search in.\n+     * @param input         ItemStack to search for.\n+     * @param matchDamage   If item damage values should be used.\n+     * @param matchNBT      If item NBT values should be used.\n+     * @return      true if the ItemHandler has the items, false if not.\n+     */\n+    public static boolean hasItemStackInItemHandler(IItemHandler handler, @NotNull ItemStack input, boolean matchDamage, boolean matchNBT)\n+    {\n+        int amount = input.getCount();\n+        for (int i = 0; i < handler.getSlots(); i++)\n+        {\n+            if (ItemStackUtils.compareItemStacksIgnoreStackSize(handler.getStackInSlot(i), input, matchDamage, matchNBT))\n+            {\n+                amount = amount - handler.extractItem(i, amount, false).getCount();\n+\n+                if (amount <= 0)\n+                {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzU2NDQ1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjozODo0MVrOIOVsrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjozOToxNFrOIOVtwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwNjQ3Ng==", "bodyText": "Double loop: Extremely bad for performance.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551906476", "createdAt": "2021-01-05T12:38:41Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2149,13 +2180,47 @@ public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler,\n                 }\n             }\n         }\n-\n-        final ItemStack revertStack = input.copy();\n-        revertStack.setCount(input.getCount() - amount);\n-        addItemStackToItemHandler(handler, revertStack);\n+        // This should never happen.\n         return false;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwNjc1NA==", "bodyText": "Since this has nothing todo with data driven research, I see no reason to have these changes in this PR.\nCreate a new PR if you want bugs to be fixed.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551906754", "createdAt": "2021-01-05T12:39:14Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2149,13 +2180,47 @@ public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler,\n                 }\n             }\n         }\n-\n-        final ItemStack revertStack = input.copy();\n-        revertStack.setCount(input.getCount() - amount);\n-        addItemStackToItemHandler(handler, revertStack);\n+        // This should never happen.\n         return false;\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwNjQ3Ng=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzU2ODM2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjozOTo1NFrOIOVu2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwMzoyMzozN1rOIjoTUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwNzAzNQ==", "bodyText": "This again makes no sense here.\nWhy was this added? What has this todo with data driven PRs?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551907035", "createdAt": "2021-01-05T12:39:54Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2149,13 +2180,47 @@ public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler,\n                 }\n             }\n         }\n-\n-        final ItemStack revertStack = input.copy();\n-        revertStack.setCount(input.getCount() - amount);\n-        addItemStackToItemHandler(handler, revertStack);\n+        // This should never happen.\n         return false;\n     }\n \n+    /**\n+     * Tries to remove a group of ItemStorages with its size from a given ItemHandler. Only removes stacks if every stack's full count is present.\n+     *\n+     * @param handler      the itemHandler.\n+     * @param input        the List of ItemStorage to remove.\n+     * @return true if removed the stacks\n+     */\n+    public static boolean tryRemoveStorageFromItemHandler(final IItemHandler handler, final List<ItemStorage> input)\n+    {\n+        for(final ItemStorage is : input)\n+        {\n+            if(!hasItemStackInItemHandler(handler, is.getItemStack(), is.ignoreDamageValue(), is.ignoreNBT()))\n+            {\n+                return false;\n+            }\n+        }\n+\n+        for(final ItemStorage is : input)\n+        {\n+            int amount = is.getItemStack().getCount();\n+\n+            for (int i = 0; i < handler.getSlots(); i++)\n+            {\n+                if (ItemStackUtils.compareItemStacksIgnoreStackSize(handler.getStackInSlot(i), is.getItemStack()))\n+                {\n+                    amount = amount - handler.extractItem(i, amount, false).getCount();\n+\n+                    if (amount == 0)\n+                    {\n+                        break;\n+                    }\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIzMTM3OQ==", "bodyText": "As far as I can tell, all of the similar functions use either require NBT and damage matching (recipes, builder items), or use Predicates (builder tools).  Because one of the possible supported (and default) items for the Undo Research function is Ancient Tomes (which always have NBT data when held by players) and this was better handled in the server-config file than a datapack, we need some approach for item selection which can be implemented in the config readably.\nOnce it came to that, the previous method was functional enough for me to use and copy, but had potential issues and the change to this implementation was requested as part of the conversation here with Raycoms.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574231379", "createdAt": "2021-02-11T03:23:37Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2149,13 +2180,47 @@ public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler,\n                 }\n             }\n         }\n-\n-        final ItemStack revertStack = input.copy();\n-        revertStack.setCount(input.getCount() - amount);\n-        addItemStackToItemHandler(handler, revertStack);\n+        // This should never happen.\n         return false;\n     }\n \n+    /**\n+     * Tries to remove a group of ItemStorages with its size from a given ItemHandler. Only removes stacks if every stack's full count is present.\n+     *\n+     * @param handler      the itemHandler.\n+     * @param input        the List of ItemStorage to remove.\n+     * @return true if removed the stacks\n+     */\n+    public static boolean tryRemoveStorageFromItemHandler(final IItemHandler handler, final List<ItemStorage> input)\n+    {\n+        for(final ItemStorage is : input)\n+        {\n+            if(!hasItemStackInItemHandler(handler, is.getItemStack(), is.ignoreDamageValue(), is.ignoreNBT()))\n+            {\n+                return false;\n+            }\n+        }\n+\n+        for(final ItemStorage is : input)\n+        {\n+            int amount = is.getItemStack().getCount();\n+\n+            for (int i = 0; i < handler.getSlots(); i++)\n+            {\n+                if (ItemStackUtils.compareItemStacksIgnoreStackSize(handler.getStackInSlot(i), is.getItemStack()))\n+                {\n+                    amount = amount - handler.extractItem(i, amount, false).getCount();\n+\n+                    if (amount == 0)\n+                    {\n+                        break;\n+                    }\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwNzAzNQ=="}, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzU2ODg0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjo0MDowN1rOIOVvJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMjo0MDowN1rOIOVvJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkwNzExMA==", "bodyText": "NOOP Line change. Please remove.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r551907110", "createdAt": "2021-01-05T12:40:07Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2188,6 +2253,7 @@ public static void removeStackFromItemHandler(final IItemHandler handler, final\n             }\n             tries++;\n         }\n+        return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14d6e68d321cfbc7fa9980d73db1387c8b51fadb"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxODc1NjI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/planter/EntityAIWorkPlanter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQyMToxNTo1MFrOIjfObg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMVQwNDowMToyMlrOIjo1RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDA4MjY3MA==", "bodyText": "Why'd you add this whitespace?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574082670", "createdAt": "2021-02-10T21:15:50Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/planter/EntityAIWorkPlanter.java", "diffHunk": "@@ -199,7 +199,7 @@ protected IAIState decide()\n                 return PLANTATION_PLANT;\n             }\n         }\n-\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c10ce1c73fb789edb377dbac32b308d33a2cb865"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIxODY0MA==", "bodyText": "Think it was accidentally left-over from fighting with PLANT2.  Will see about fixing that next commit.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574218640", "createdAt": "2021-02-11T02:34:22Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/planter/EntityAIWorkPlanter.java", "diffHunk": "@@ -199,7 +199,7 @@ protected IAIState decide()\n                 return PLANTATION_PLANT;\n             }\n         }\n-\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDA4MjY3MA=="}, "originalCommit": {"oid": "c10ce1c73fb789edb377dbac32b308d33a2cb865"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDIzODI2MA==", "bodyText": "Probably accidental when working on the PLANT_2 research effect.  Thanks for catching that.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574238260", "createdAt": "2021-02-11T03:52:25Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/planter/EntityAIWorkPlanter.java", "diffHunk": "@@ -199,7 +199,7 @@ protected IAIState decide()\n                 return PLANTATION_PLANT;\n             }\n         }\n-\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDA4MjY3MA=="}, "originalCommit": {"oid": "c10ce1c73fb789edb377dbac32b308d33a2cb865"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDI0MDA2OQ==", "bodyText": "Ofc, no problem", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r574240069", "createdAt": "2021-02-11T04:01:22Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/planter/EntityAIWorkPlanter.java", "diffHunk": "@@ -199,7 +199,7 @@ protected IAIState decide()\n                 return PLANTATION_PLANT;\n             }\n         }\n-\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDA4MjY3MA=="}, "originalCommit": {"oid": "c10ce1c73fb789edb377dbac32b308d33a2cb865"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1NjA3OTA0OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/ModResearchEffects.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMFQxNzo1NjowMVrOIo1T3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMFQxNzo1NjowMVrOIo1T3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTY4NzM5MA==", "bodyText": "contains what? sth is missing here", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r579687390", "createdAt": "2021-02-20T17:56:01Z", "author": {"login": "ravenbuilder934"}, "path": "src/api/java/com/minecolonies/api/research/effects/ModResearchEffects.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.minecolonies.api.research.effects;\n+\n+import com.minecolonies.api.research.effects.registry.ResearchEffectEntry;\n+import com.minecolonies.api.util.constant.Constants;\n+import net.minecraft.util.ResourceLocation;\n+\n+/**\n+ *  Contains", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "185fb2b796f6dc2d13ec5a1d33348129d7ee9d69"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY1NjA4NzAzOnYy", "diffSide": "LEFT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/planter/EntityAIWorkPlanter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMFQxODowNDo0NVrOIo1Xlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMFQxODowNDo0NVrOIo1Xlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3OTY4ODM0Mg==", "bodyText": "still have a change here \ud83d\ude1b", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r579688342", "createdAt": "2021-02-20T18:04:45Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/planter/EntityAIWorkPlanter.java", "diffHunk": "@@ -199,7 +199,6 @@ protected IAIState decide()\n                 return PLANTATION_PLANT;\n             }\n         }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "185fb2b796f6dc2d13ec5a1d33348129d7ee9d69"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY2Njg0NDc0OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QxODoyNjozNVrOIqW3DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QxOToyNTozOVrOIqZQ7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTI4NTY0NA==", "bodyText": "you have two \"or\"s (another on line 1592). Is this intentional?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r581285644", "createdAt": "2021-02-23T18:26:35Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1316,19 +1325,41 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try to cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.gui.research.time\": \"%s remaining\",\n+  \"com.minecolonies.coremod.gui.research.countinprogress\": \"%d/%d Research in Progress\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.1\": \"Too many researches\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.2\": \"already in progress\",\n+  \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing Resources\",\n+  \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \" or \",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b34ba68cfa4ef836fc9b7ceaebbc9783606032"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTMyNTAzNw==", "bodyText": "One of them has spaces and is used in hovertext (for now, alternate-building research requirements, but might be relevant for other alternate-x requirements or costs down the road), while the other has no spaces and is used for graphics layout (for now, the onlyChild arrows).\nFor Romantic languages it's not a critical difference, but there's a few languages where translators are very likely to want to have a different option.  If I understand Finnish properly, com.minecolonies.coremod.research.requirement.building.or would probably be better translated as 'tai' (inclusive or), where com.minecolonies.coremod.research.research.or would use 'vai' (exclusive or).  Some languages don't use spaces, either at all (Thai) or in some contexts.\nThat said, if it's more effort than it's worth to maintain, I can collapse the two and call it good enough.  Or I can put them into a different path for generic grammar, if you want one set up.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r581325037", "createdAt": "2021-02-23T19:25:39Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1316,19 +1325,41 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try to cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.gui.research.time\": \"%s remaining\",\n+  \"com.minecolonies.coremod.gui.research.countinprogress\": \"%d/%d Research in Progress\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.1\": \"Too many researches\",\n+  \"com.minecolonies.coremod.research.research.toomanyinprogress.2\": \"already in progress\",\n+  \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing Resources\",\n+  \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \" or \",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTI4NTY0NA=="}, "originalCommit": {"oid": "04b34ba68cfa4ef836fc9b7ceaebbc9783606032"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4NDM3ODgxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QwMzoxNToxMVrOIs-SlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QwMzoxNToxMVrOIs-SlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDAyODgyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.blockhutstonesmeltery.description\": \"Unlocks Stonesmeltery\",\n          \n          \n            \n              \"com.minecolonies.research.effects.blockhutstonesmeltery.description\": \"Unlocks Stone Smeltery\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r584028820", "createdAt": "2021-02-27T03:15:11Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1725,6 +1753,319 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%s\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Guard Armor +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Shield Blocking Chance +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%s\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%s Slots\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$s%%\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100% Raider Swarm Resistance\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$s%% Crops\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$s%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$s\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$s%%\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$s%%\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %s\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%s\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Damage +%s\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Minimum Stock %3$s%% More\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$s%% More Ores\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Can Learn +%3$s%% More Recipes\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$s%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$s%%\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$s%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Citizen Tools +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%sH\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%\",\n+  \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs to Target Them\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Have Fire and Lava Immunity\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Crops at Once\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.retreatunlock.description\": \"Guards Flee Under 20% HP\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$s%% Less Sleep\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack Which Damages and Knocks Back Nearby Enemies\",\n+  \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work In Rain\",\n+  \"com.minecolonies.research.effects.blockhutarchery.description\": \"Unlocks Archery\",\n+  \"com.minecolonies.research.effects.blockhutbarracks.description\": \"Unlocks Barracks\",\n+  \"com.minecolonies.research.effects.blockhutblacksmith.description\": \"Unlocks Blacksmith\",\n+  \"com.minecolonies.research.effects.blockhutcombatacademy.description\": \"Unlocks Combat Academy\",\n+  \"com.minecolonies.research.effects.blockhutcomposter.description\": \"Unlocks Composter\",\n+  \"com.minecolonies.research.effects.blockhutconcretemixer.description\": \"Unlocks Concrete Mixer\",\n+  \"com.minecolonies.research.effects.blockhutcrusher.description\": \"Unlocks Crusher\",\n+  \"com.minecolonies.research.effects.blockhutdyer.description\": \"Unlocks Dyer\",\n+  \"com.minecolonies.research.effects.blockhutfletcher.description\": \"Unlocks Fletcher\",\n+  \"com.minecolonies.research.effects.blockhutflorist.description\": \"Unlocks Florist\",\n+  \"com.minecolonies.research.effects.blockhutglassblower.description\": \"Unlocks Glassblower\",\n+  \"com.minecolonies.research.effects.blockhuthospital.description\": \"Unlocks Hospital\",\n+  \"com.minecolonies.research.effects.blockhutlibrary.description\": \"Unlocks Library\",\n+  \"com.minecolonies.research.effects.blockhutmechanic.description\": \"Unlocks Mechanic\",\n+  \"com.minecolonies.research.effects.blockhutmysticalsite.description\": \"Unlocks Mystical Site\",\n+  \"com.minecolonies.research.effects.blockhutplantation.description\": \"Unlocks Plantation\",\n+  \"com.minecolonies.research.effects.blockhutsawmill.description\": \"Unlocks Sawmill\",\n+  \"com.minecolonies.research.effects.blockhutschool.description\": \"Unlocks School\",\n+  \"com.minecolonies.research.effects.blockhutsifter.description\": \"Unlocks Sifter\",\n+  \"com.minecolonies.research.effects.blockhutsmeltery.description\": \"Unlocks Smeltery\",\n+  \"com.minecolonies.research.effects.blockhutstonemason.description\": \"Unlocks Stonemason\",\n+  \"com.minecolonies.research.effects.blockhutstonesmeltery.description\": \"Unlocks Stonesmeltery\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0f6655c6ef992d19ba5fd0f06d914f15f858503"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4NTQzMjIxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MToyOVrOItHL1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MToyOVrOItHL1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE3NDU0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack Which Damages and Knocks Back Nearby Enemies\",\n          \n          \n            \n              \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack That Damages and Knocks Back Nearby Enemies\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r584174549", "createdAt": "2021-02-27T18:51:29Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1725,6 +1753,319 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%s\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Guard Armor +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Shield Blocking Chance +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%s\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%s Slots\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$s%%\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100% Raider Swarm Resistance\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$s%% Crops\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$s%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$s\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$s%%\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$s%%\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %s\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%s\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Damage +%s\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Minimum Stock %3$s%% More\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$s%% More Ores\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Can Learn +%3$s%% More Recipes\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$s%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$s%%\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$s%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Citizen Tools +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%sH\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%\",\n+  \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs to Target Them\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Have Fire and Lava Immunity\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Crops at Once\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.retreatunlock.description\": \"Guards Flee Under 20% HP\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$s%% Less Sleep\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack Which Damages and Knocks Back Nearby Enemies\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bdc3fa494da069fc258fe8b82252824e68dbf9b"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4NTQzMjI4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MTo0MVrOItHL4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MTo0MVrOItHL4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE3NDU2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work In Rain\",\n          \n          \n            \n              \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work in Rain\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r584174561", "createdAt": "2021-02-27T18:51:41Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1725,6 +1753,319 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%s\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Guard Armor +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Shield Blocking Chance +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%s\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%s Slots\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$s%%\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100% Raider Swarm Resistance\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$s%% Crops\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$s%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$s\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$s%%\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$s%%\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %s\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%s\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Damage +%s\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Minimum Stock %3$s%% More\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$s%% More Ores\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Can Learn +%3$s%% More Recipes\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$s%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$s%%\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$s%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Citizen Tools +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%sH\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%\",\n+  \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs to Target Them\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Have Fire and Lava Immunity\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Crops at Once\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.retreatunlock.description\": \"Guards Flee Under 20% HP\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$s%% Less Sleep\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack Which Damages and Knocks Back Nearby Enemies\",\n+  \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work In Rain\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bdc3fa494da069fc258fe8b82252824e68dbf9b"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4NTQzMjUzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MjowMVrOItHMAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MjowMVrOItHMAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE3NDU5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.blockhutcomposter.description\": \"Unlocks Composter\",\n          \n          \n            \n              \"com.minecolonies.research.effects.blockhutcomposter.description\": \"Unlocks Composter's Hut\",\n          \n      \n    \n    \n  \n\nfor the others too", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r584174594", "createdAt": "2021-02-27T18:52:01Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1725,6 +1753,319 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%s\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Guard Armor +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Shield Blocking Chance +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%s\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%s Slots\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$s%%\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100% Raider Swarm Resistance\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$s%% Crops\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$s%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$s\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$s%%\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$s%%\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %s\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%s\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Damage +%s\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Minimum Stock %3$s%% More\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$s%% More Ores\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Can Learn +%3$s%% More Recipes\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$s%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$s%%\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$s%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Citizen Tools +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%sH\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%\",\n+  \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs to Target Them\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Have Fire and Lava Immunity\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Crops at Once\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.retreatunlock.description\": \"Guards Flee Under 20% HP\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$s%% Less Sleep\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack Which Damages and Knocks Back Nearby Enemies\",\n+  \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work In Rain\",\n+  \"com.minecolonies.research.effects.blockhutarchery.description\": \"Unlocks Archery\",\n+  \"com.minecolonies.research.effects.blockhutbarracks.description\": \"Unlocks Barracks\",\n+  \"com.minecolonies.research.effects.blockhutblacksmith.description\": \"Unlocks Blacksmith\",\n+  \"com.minecolonies.research.effects.blockhutcombatacademy.description\": \"Unlocks Combat Academy\",\n+  \"com.minecolonies.research.effects.blockhutcomposter.description\": \"Unlocks Composter\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bdc3fa494da069fc258fe8b82252824e68dbf9b"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY4NTQzMzI3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MzoxM1rOItHMXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yN1QxODo1MzoxM1rOItHMXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NDE3NDY4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.civilian.rails.subtitle\": \"final Research is progressing right on track.\",\n          \n          \n            \n              \"com.minecolonies.research.civilian.rails.subtitle\": \"Research is progressing right on track.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r584174685", "createdAt": "2021-02-27T18:53:13Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1725,6 +1753,319 @@\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n   \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.civilian.name\": \"Civilian\",\n+  \"com.minecolonies.research.combat.name\": \"Combat\",\n+  \"com.minecolonies.research.technology.name\": \"Technology\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%s\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Guard Armor +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Shield Blocking Chance +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%s\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%s Slots\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$s%%\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100% Raider Swarm Resistance\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$s%% Crops\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$s%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$s\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$s%%\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$s%%\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %s\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%s\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$s%%\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Damage +%s\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Minimum Stock %3$s%% More\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$s%% More Ores\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Can Learn +%3$s%% More Recipes\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$s%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$s%%\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$s%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Citizen Tools +%3$s%% Durability\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$s%%\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%sH\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%\",\n+  \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs to Target Them\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Have Fire and Lava Immunity\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Crops at Once\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.retreatunlock.description\": \"Guards Flee Under 20% HP\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$s%% Less Sleep\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack Which Damages and Knocks Back Nearby Enemies\",\n+  \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work In Rain\",\n+  \"com.minecolonies.research.effects.blockhutarchery.description\": \"Unlocks Archery\",\n+  \"com.minecolonies.research.effects.blockhutbarracks.description\": \"Unlocks Barracks\",\n+  \"com.minecolonies.research.effects.blockhutblacksmith.description\": \"Unlocks Blacksmith\",\n+  \"com.minecolonies.research.effects.blockhutcombatacademy.description\": \"Unlocks Combat Academy\",\n+  \"com.minecolonies.research.effects.blockhutcomposter.description\": \"Unlocks Composter\",\n+  \"com.minecolonies.research.effects.blockhutconcretemixer.description\": \"Unlocks Concrete Mixer\",\n+  \"com.minecolonies.research.effects.blockhutcrusher.description\": \"Unlocks Crusher\",\n+  \"com.minecolonies.research.effects.blockhutdyer.description\": \"Unlocks Dyer\",\n+  \"com.minecolonies.research.effects.blockhutfletcher.description\": \"Unlocks Fletcher\",\n+  \"com.minecolonies.research.effects.blockhutflorist.description\": \"Unlocks Florist\",\n+  \"com.minecolonies.research.effects.blockhutglassblower.description\": \"Unlocks Glassblower\",\n+  \"com.minecolonies.research.effects.blockhuthospital.description\": \"Unlocks Hospital\",\n+  \"com.minecolonies.research.effects.blockhutlibrary.description\": \"Unlocks Library\",\n+  \"com.minecolonies.research.effects.blockhutmechanic.description\": \"Unlocks Mechanic\",\n+  \"com.minecolonies.research.effects.blockhutmysticalsite.description\": \"Unlocks Mystical Site\",\n+  \"com.minecolonies.research.effects.blockhutplantation.description\": \"Unlocks Plantation\",\n+  \"com.minecolonies.research.effects.blockhutsawmill.description\": \"Unlocks Sawmill\",\n+  \"com.minecolonies.research.effects.blockhutschool.description\": \"Unlocks School\",\n+  \"com.minecolonies.research.effects.blockhutsifter.description\": \"Unlocks Sifter\",\n+  \"com.minecolonies.research.effects.blockhutsmeltery.description\": \"Unlocks Smeltery\",\n+  \"com.minecolonies.research.effects.blockhutstonemason.description\": \"Unlocks Stonemason\",\n+  \"com.minecolonies.research.effects.blockhutstonesmeltery.description\": \"Unlocks Stone Smeltery\",\n+  \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone Recipe and Bakers Learn Chorus Bread Recipe\",\n+  \"com.minecolonies.research.effects.morescrollsunlock.description\": \"Enchanter Learns Scroll Recipes to Locate Workers and Summon Guards\",\n+  \"com.minecolonies.research.effects.platearmorunlock.description\": \"Blacksmith Learns Plate Armor Recipes\",\n+  \"com.minecolonies.research.civilian.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.civilian.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.civilian.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.civilian.healingcream.subtitle\": \"You missed a spot...\",\n+  \"com.minecolonies.research.civilian.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.civilian.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.civilian.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.civilian.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.civilian.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.civilian.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.civilian.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.civilian.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.civilian.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.civilian.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.civilian.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.civilian.village.name\": \"Village\",\n+  \"com.minecolonies.research.civilian.city.name\": \"City\",\n+  \"com.minecolonies.research.civilian.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.civilian.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.civilian.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.civilian.scholarly.subtitle\": \"Homework for the next decade... check!\",\n+  \"com.minecolonies.research.civilian.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.civilian.reflective.subtitle\": \"Let me think about that for a moment.\",\n+  \"com.minecolonies.research.civilian.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.civilian.academic.subtitle\": \"Think about what you thought when you thought of what you will think now.\",\n+  \"com.minecolonies.research.civilian.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.civilian.rails.subtitle\": \"final Research is progressing right on track.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bdc3fa494da069fc258fe8b82252824e68dbf9b"}, "originalPosition": 181}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTY1MjI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDozODozNVrOH9KKFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjoxMjoyNFrOH9L5lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MTYwNQ==", "bodyText": "We should consider storing the ResourceLocation on each research. This loading code is great for adding researches, but but we need a way to remove researches too, and the best match for that is going to the resource location.\nPlease add a mechanism for removing researches.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533891605", "createdAt": "2020-12-02T04:38:35Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        final Map<String, GlobalResearch> researchMap = new HashMap<String, GlobalResearch>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            //Note that we don't actually use the resource folders or file names; those are only for organization purposes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNDc3NA==", "bodyText": "Ok.  I can put that in pretty fast, though I will warn that deregistering a research will need to hide all of its children on the University UI, at least without a significant rewrite there,, and deregistering a researchEffect may cause it to lose progress or reset, so going to put in different methods for each of those two use cases.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533904774", "createdAt": "2020-12-02T05:25:30Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        final Map<String, GlobalResearch> researchMap = new HashMap<String, GlobalResearch>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            //Note that we don't actually use the resource folders or file names; those are only for organization purposes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MTYwNQ=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkyMDE1MQ==", "bodyText": "Yup. There isn't a clean solution for removing a research from an existing world, but for a modpack, removal should allow it to never exist in the world.  As for the children issue, yeah, a child without a parent should either 'disappear' or move to the top.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533920151", "createdAt": "2020-12-02T06:12:24Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,101 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        final Map<String, GlobalResearch> researchMap = new HashMap<String, GlobalResearch>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            //Note that we don't actually use the resource folders or file names; those are only for organization purposes.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5MTYwNQ=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTY3MjM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/event/EventHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDo0ODo1MVrOH9KVPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDo0ODo1MVrOH9KVPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5NDQ2MA==", "bodyText": "We're doing something similar for recipes in the RecipeManager. We should use a common approach for this problem.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533894460", "createdAt": "2020-12-02T04:48:51Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/event/EventHandler.java", "diffHunk": "@@ -754,5 +755,8 @@ public static void onWorldUnload(@NotNull final WorldEvent.Unload event)\n             ItemBlockHut.checkResearch(null);\n             Log.getLogger().info(\"Removed all colony views\");\n         }\n+        // Since there doesn't seem to be a Forge event for a datapack being unloaded, there's not many better places to handle this.\n+        // Otherwise, loading a world with any custom research will show research effects that don't exist on other worlds in the same instance.\n+        IResearchEffectRegistry.getInstance().resetRegistry();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTY5OTg4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTowMzo0MFrOH9KlOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyNjoxN1rOH9ycJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5ODU1Mw==", "bodyText": "Can we also add a description here? the autogenerated descriptions aren't great, and aren't localizable.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533898553", "createdAt": "2020-12-02T05:03:40Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5OTkxNw==", "bodyText": "Yeah, I've got some tools to bulk-add json traits.  In a perfect world, I was hoping to get \"name\" to be that human-facing one, but I think that transition is going to involve a lot of pecking at ui-side stuff I don't understand yet.\nAlways good to be forward-thinking toward that point, though.  Want a separate translation \"key\" and \"description\" field?  Or an object containing them?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533899917", "createdAt": "2020-12-02T05:08:25Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5ODU1Mw=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMjI3NA==", "bodyText": "Simply put, id==code/json reference, name==displayname (and should be capable of being a tranlation key) and description is what it sounds like, again capable of being a translation key (and ours should be)", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533902274", "createdAt": "2020-12-02T05:16:46Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5ODU1Mw=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNDUzNQ==", "bodyText": "Specifically, I'd like to see Description be a better write up of what the effect actually does. Gilded Hammer is a good example where the name is only partially indicative of the result of the unlock ability. There are some, like endknowlege that have potentially multiple results of a single unlock, and it would be great for the description to give us a mechanism for communicating that.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533904535", "createdAt": "2020-12-02T05:24:50Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5ODU1Mw=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0Mzg4NA==", "bodyText": "if we're going to localize it anyway I don't think there's a need for both name and id fields, I'd much rather form the translation key dynamically from the id.\nAs for the descriptions, we probably just need to have an autogenerated system with localization. It won't be hard to convert something from this effects list to something quite descriptive with localization. Maybe design the system with a fallback for the more complex use cases. If you like, you can leave this to me when I update the UI and pick on me then if it doesn't work.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534543884", "createdAt": "2020-12-02T23:08:17Z", "author": {"login": "ShadowProtocol"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5ODU1Mw=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzAwNw==", "bodyText": "Yeah we should get the name from the id, and query that from the GUI, no need to have that anywhere in the datapacks", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534547007", "createdAt": "2020-12-02T23:15:08Z", "author": {"login": "Raycoms"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5ODU1Mw=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MTU4OQ==", "bodyText": "(same for effects, same for descriptions)", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534551589", "createdAt": "2020-12-02T23:26:17Z", "author": {"login": "Raycoms"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5ODU1Mw=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTcwMzY5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTowNToyM1rOH9KnYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNToxNzo0M1rOH9K0qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5OTEwNw==", "bodyText": "Thinking about making a modpack, I can see wanting to have required RESEARCHES (beyond parent) in addition to buildings and items.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533899107", "createdAt": "2020-12-02T05:05:23Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:hay_block\",\n+    \"itemCount\": 8\n+  }\n+  ],\n+  \"requiredBuildings\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMTI4MA==", "bodyText": "That was definitely an intent here, though making it clear enough from the user perspective without significant modifications to the UniversityWindow stuff was a little daunting.\nAdding parsing support for additional requiredResearch is definitely a thing I can do now.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533901280", "createdAt": "2020-12-02T05:13:17Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:hay_block\",\n+    \"itemCount\": 8\n+  }\n+  ],\n+  \"requiredBuildings\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5OTEwNw=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMjUwNA==", "bodyText": "That sounds good. Let's get the JSON right, and if there is later UI stuff, we can do that separately, or I can help do it here. There are options. :)", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533902504", "createdAt": "2020-12-02T05:17:43Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:hay_block\",\n+    \"itemCount\": 8\n+  }\n+  ],\n+  \"requiredBuildings\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5OTEwNw=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTcwNzkzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/1_higherlearning.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTowNzozOFrOH9Kp1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTowNzozOFrOH9Kp1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg5OTczNA==", "bodyText": "So, if we know the building here, why do we have all the buildings/blocks with overrides for validating individual researches? We should be able to have a single baseclass implementation that checks if there is an unlock for the current building that needs to be unlocked. As a modpack/datapack author, I may not want to have researches in place for particular buildings, I may be gating on a questbook.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533899734", "createdAt": "2020-12-02T05:07:38Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_higherlearning.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"higherlearning\",\n+  \"name\": \"Higher Learning\",\n+  \"branch\": \"civilian\",\n+  \"exclusiveChildResearch\": true,\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:book\",\n+    \"itemCount\": 3\n+  }\n+  ],\n+  \"requiredBuildings\":\n+  [\n+  {\n+    \"building\": \"citizen\",\n+    \"buildingLevel\": 3\n+  }\n+  ],\n+  \"effects\":\n+  [\n+  {\n+    \"unlockBuilding\": \"School\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTcxMDIzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/1_higherlearning.json", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNTowOTowMVrOH9KrPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDo1NjoyMlrOH90hGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDA5Mg==", "bodyText": "I'm wondering if we should have a separate JSON for Research effects, and then have the researches refer to them by ID.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533900092", "createdAt": "2020-12-02T05:09:01Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_higherlearning.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"higherlearning\",\n+  \"name\": \"Higher Learning\",\n+  \"branch\": \"civilian\",\n+  \"exclusiveChildResearch\": true,\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:book\",\n+    \"itemCount\": 3\n+  }\n+  ],\n+  \"requiredBuildings\":\n+  [\n+  {\n+    \"building\": \"citizen\",\n+    \"buildingLevel\": 3\n+  }\n+  ],\n+  \"effects\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNDE2NA==", "bodyText": "It's definitely something I was considering: the systems management side of me really doesn't like all those string constants.  Ideal situation would be to have a pile of hooks set up everywhere in as generic a situation as possible, and then only apply the relevant ones -- I could plausibly see even some behaviors like a modpack where a Quest locks access to (tiers of the!) Builder Hut behind a Research unlocked externally, or where certain citizens can only use certain tools after getting the University to a tier.\nJust a little nervous about digging too deep into the implementation side of things without more planning on the topic.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533904164", "createdAt": "2020-12-02T05:23:32Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_higherlearning.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"higherlearning\",\n+  \"name\": \"Higher Learning\",\n+  \"branch\": \"civilian\",\n+  \"exclusiveChildResearch\": true,\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:book\",\n+    \"itemCount\": 3\n+  }\n+  ],\n+  \"requiredBuildings\":\n+  [\n+  {\n+    \"building\": \"citizen\",\n+    \"buildingLevel\": 3\n+  }\n+  ],\n+  \"effects\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDA5Mg=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwNTA4MA==", "bodyText": "I hear you. This is why I was thinking we should separate the effects now. We can then design what we want the effect definition to look like, and evolve that separately from the research.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533905080", "createdAt": "2020-12-02T05:26:32Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_higherlearning.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"higherlearning\",\n+  \"name\": \"Higher Learning\",\n+  \"branch\": \"civilian\",\n+  \"exclusiveChildResearch\": true,\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:book\",\n+    \"itemCount\": 3\n+  }\n+  ],\n+  \"requiredBuildings\":\n+  [\n+  {\n+    \"building\": \"citizen\",\n+    \"buildingLevel\": 3\n+  }\n+  ],\n+  \"effects\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDA5Mg=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2NTUwMQ==", "bodyText": "I see that creating more work for potentially everyone involved. This is currently a pretty satisfactory way of expressing effects, and I think it's outside the bounds of this research system to make it any more complicated. Maybe I just don't quite get what you have in mind, idk.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533965501", "createdAt": "2020-12-02T08:04:44Z", "author": {"login": "ShadowProtocol"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_higherlearning.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"higherlearning\",\n+  \"name\": \"Higher Learning\",\n+  \"branch\": \"civilian\",\n+  \"exclusiveChildResearch\": true,\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:book\",\n+    \"itemCount\": 3\n+  }\n+  ],\n+  \"requiredBuildings\":\n+  [\n+  {\n+    \"building\": \"citizen\",\n+    \"buildingLevel\": 3\n+  }\n+  ],\n+  \"effects\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDA5Mg=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU4NTYyNA==", "bodyText": "Eh, I find the multi-level effects defined across multiple files problematic. I'd prefer to have a single effect file with levels defined, and then have the researches refer to effect and level.  In some ways I think about the potions system, where the effects are separate from the item that applies them.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534585624", "createdAt": "2020-12-03T00:56:22Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_higherlearning.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"higherlearning\",\n+  \"name\": \"Higher Learning\",\n+  \"branch\": \"civilian\",\n+  \"exclusiveChildResearch\": true,\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":\n+  [\n+  {\n+    \"itemName\": \"minecraft:book\",\n+    \"itemCount\": 3\n+  }\n+  ],\n+  \"requiredBuildings\":\n+  [\n+  {\n+    \"building\": \"citizen\",\n+    \"buildingLevel\": 3\n+  }\n+  ],\n+  \"effects\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDA5Mg=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTcxNDgyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/4_livesaver2.json", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNToxMTowN1rOH9Ktvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjowODoyMlrOH9icgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDczNQ==", "bodyText": "Shouldn't this be Lifesaver vs Livesaver?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533900735", "createdAt": "2020-12-02T05:11:07Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/4_livesaver2.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"livesaver2\",\n+  \"name\": \"Livesaver II\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMjU1NQ==", "bodyText": "Ah, thanks for catching that.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533902555", "createdAt": "2020-12-02T05:17:56Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/4_livesaver2.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"livesaver2\",\n+  \"name\": \"Livesaver II\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDczNQ=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI4Mjg0OA==", "bodyText": "Also for Lifesaver I", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534282848", "createdAt": "2020-12-02T16:00:10Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/civilian/4_livesaver2.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"livesaver2\",\n+  \"name\": \"Livesaver II\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDczNQ=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI4OTUzOQ==", "bodyText": "Thanks.  Got them, and added update handlers to the file loader for both.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534289539", "createdAt": "2020-12-02T16:08:22Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/4_livesaver2.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"livesaver2\",\n+  \"name\": \"Livesaver II\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkwMDczNQ=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTgzNTU1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "isResolved": true, "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjowNjoxNlrOH9LwUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDoyOTozOFrOH-7YxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA==", "bodyText": "I feel like it would be much more succinct to simply have\n\"requiredItems\": {\n    \"hay_block\": 8\n}\nunless you were getting fancy with NBT conditions down the track.\n(and the resource location should default to the minecraft namespace)", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533917778", "createdAt": "2020-12-02T06:06:16Z", "author": {"login": "ShadowProtocol"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE3NjY0NQ==", "bodyText": "Code-side, it does default to minecraft as a namespace to match other behaviors in jsons, using the schema :\n                if (itemName.length == 2)\n                {\n                    item = ForgeRegistries.ITEMS.getValue(new ResourceLocation(itemName[0], itemName[1]));\n                }\n                else if (itemName.length == 1)\n                {\n                    item = ForgeRegistries.ITEMS.getValue(new ResourceLocation(\"minecraft\", itemName[0]));\n                }\n\nI've just included it for the existing items to be a clearer example for non-vanilla requirements, since very few current researches use non-vanilla items (mostly ancient tomes).\nNBT was a possible use case (custom tools, god items like GregTech's dynamic stuff), more flexible item damage values (eg a chief sword with >50% durability), and also just if pack makers wanted to support multiple itemstacks of the same item instead of ItemStack(128) or ItemStack(75).  But the biggest reason was just parallelism: if requiredBuildings and effects are arrays of objects, it's a little clearer to end users if requiredItems does the same.  There's very little way to give feedback regarding malformed jsons since forge doesn't even report them up, so trying to make it as copy-pastable is ideal.\nI could swap all of them, since both requiredBuildings and effects match the tag:property pattern, but input sanitization get messier.  Up to you all what you think's gonna be saner, though.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534176645", "createdAt": "2020-12-02T13:44:45Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNjg0MQ==", "bodyText": "For the NBT stuff, it might make sense to use the functionality I added to parsing the ResourceLocation for crafterrecipes that understands an extended syntax with NBT support.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534336841", "createdAt": "2020-12-02T17:10:05Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDcwNjM4MQ==", "bodyText": "Does this look better in terms of format and readability (outside of the few joke descriptions, in here temporarily so I could test some ui-side stuff)?  I'm not entirely sure on how we want to split the Name/Description/EffectDescription setup -- right now, the University only displays the Description (derived from ID) and Effects, which works, but is a little unintuitive, and it might be useful to have longer descriptions in the WindowUI and shorter names for dialogue text.  And it might be useful to distinguish effects descriptions, especially for more complex behaviors (the earlier discord example being Knowledge Of The End).\nCould alternatively separate effect translations from the effectIds (say, into com.mine colonies.research.effects..description, to better handle research with multiple effects, but that seemed prone to issues on the rendering or implementation side.  Was trying to just one shared string for all research of a given effect type, and that works reasonably well for effects like +hp or +flee damage, but there's at least a few research effects where the first step won't make sense when framed in the same way as the rest of the path (enhanced gates most obviously).  Have the code to swap it back if preferred for upkeep reasons.\nI've got the English translations defaulting to relative values (for First Aid, HP+2, HP+2, HP+2, HP+2, HP+2, HP +10), but the second variable being passed in (though not used) is absolute values (for First Aid, HP +2, HP +4, HP +6, HP +8, HP +10),  so it's not very hard to swap or even show both.   Thanks again to Mekle001 for the example and pointer on that behavior.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534706381", "createdAt": "2020-12-03T06:04:24Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMTMzMw==", "bodyText": "Okay. I thought about it a bit now. I don't think the description will ever be different than the actual effect (because that's what matters.\nSo you can scrap the desc, and leave only the name (I'd make that id.name=\"\") and the effect (I'd make this dependent on the effect ID and NOT on the research id though).", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534921333", "createdAt": "2020-12-03T08:34:44Z", "author": {"login": "Raycoms"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNzE4NA==", "bodyText": "If I am understanding Mekle right, you could now change the effects to their own files, and instead of\n\"effects\": {\n    \"additionModifier\": \"Health*6\"\n}\nYou have something along the lines of\n\"effects\": {\n    \"health\": 6\n}\nand that \"health\" will be used as the id for an effect JSON object in another file, or even just as the effect id. Each effect would have its own lang key, regardless of how many research cards it was associated with.\nHowever this proceeds, I would avoid putting two distinct values in a single string if they are not a set of similar delimited values.\nIn terms of UI, here was what I had in mind:\nResearch would be an icon and title, then underneath would be the required resources lined up on the right, and the building requirement represented with the building's hut block and number on the left. Then the description (if we still wnat one) and effects would be listed in the research title's tooltip. Click the title to start, click again to cancel.\n... thiat might be hard to visualise; I'll draw a diagram if I get time.\nAnd as a side note: it's usually better to paste the code blocks instead of screenshots.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534927184", "createdAt": "2020-12-03T08:38:50Z", "author": {"login": "ShadowProtocol"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkzNjIwNw==", "bodyText": "I agree with the above. It should just be the effect id with the value. I'd go as far as doing \"healthaddition\": 6. To make it more verbose.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534936207", "createdAt": "2020-12-03T08:44:47Z", "author": {"login": "Raycoms"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI0NDEyMg==", "bodyText": "Sorry about that.  Something along the lines of :\ncivilian/6_indefatigability.json\n\n{\n\"comment\": \"name: Indefatigability * description : Healing Saturation Min +%s\",\n\"id\": \"indefatigability\",\n\"branch\": \"civilian\",\n\"requiredUniversityLevel\": 6,\n\"parentResearch\": \"fortitude\",\n\"requiredItems\":\n[\n\"minecraft:golden_apple\": 64\n],\n\"effects\":\n[\n\"healingSaturationAddition\": 5\n]\n}\n\neffects/healingSaturationAddition.json:\n\n{\n\"id\": \"healingSaturationAddition\",\n\"type\": \"addition\",\n\"levels\":\n[\n-0.5,\n-1,\n-1.5,\n-2,\n-5,\n]\n}\n\nseem like it covers things, then?\n@ShadowProtocol , that workflow makes sense, and also makes for a much more resilient solution for managing research with long effect descriptions.  Merkle001 has also requested non-parent research dependency, so it may be worth considering how to implement that, but it's neither likely to come up in the short term nor too bad if it becomes part of the tooltip as well.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r535244122", "createdAt": "2020-12-03T13:53:06Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ5MjQxNw==", "bodyText": "Overall, I'm liking where this is going. The one thing that grates a bit still is the way requirements are handled. Here's my thinking:\n\"requirements\":\n[\n{\"item\" : \"minecraft:golden_apple\", \"quantity\": 64 },\n{\"building\" : \"cook\", \"level\": 3 }\n]\n\nDo we need something in the effect that specifically identifies the attribute it modifies, to make them more generic?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r535492417", "createdAt": "2020-12-03T18:48:11Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUyMjcyMQ==", "bodyText": "That's doable, as long as it's no issue to see\n\n\"requirements\":\n[\n{\"item\" : \"minecolonies:gate_iron\", \"quantity\": 64 },\n{\"item\" : \"minecolonies:ancienttome\", \"quantity\": 2 },\n{\"building\" : \"builder\", \"level\": 3 },\n{\"research\" : \"letitgrow\" },\n{\"research\" : \"plant_2\" }\n]\n\nfor a more complex use case.  I would like to keep requiredUniversityLevel and Parent separate from the requirements tags, simply because they have such different side effects.\n\nDo we need something in the effect that specifically identifies the attribute it modifies, to make them more generic?\n\nI was intending some way to identify the attribute an effect modifies before the GlobalResearches are created (even if that means just indexing all effect files to get types), but strictly speaking it's not necessary.  The actual IResearchEffect extenders are mostly there to predict return on getEffect, and to aid localization between :\n\n\"com.minecolonies.coremod.research.effect.modifier.multiplication\": \"%s by %d percent\",\n\"com.minecolonies.coremod.research.effect.modifier.addition\": \"%s + %d\",\n\"com.minecolonies.coremod.research.effect.unlock\": \"Unlocks %s\",\n\nIf you want to keep that space for autogeneration of text, that \"type\" tag in the effects.json will be enough.  If you're okay with this collapsing down to just BooleanResearchEffect and LeveledResearchEffect, the difference between :\n\n\"effects\":\n[\n\"healingSaturationAddition\": 5,\n\"unlockbuildingsifter\" : true\n]\n\nIs enough and easily parsed with GSON, and the only reason I'd been moving to put the prefixes into the tag name was for readability rather than a logic requirement.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r535522721", "createdAt": "2020-12-03T19:30:10Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTYzMzc0NQ==", "bodyText": "That's exactly what I was thinking for requirements, and I'm fine with university level and parent separate, as they are more structural than requirements in many ways.\nAs for the effects, I dislike mixing data and directive in property names. \"unlockbuilding\" : \"sifter\" makes the property names predictable, rather than something requireing parsing.\nIn general, that's what I want to see for the effects definition, and why I was asking for \"modifiedAttribute\" as part of it, as \"healingSaturationAddition\" feels like a case of something that needs to be parsed to understand, instead of a simple 'enum'/registry lookup.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r535633745", "createdAt": "2020-12-03T21:21:23Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY5MDEzMA==", "bodyText": "Understood.  I'm intending for effect->ID to be only used as a string and never parsed beyond that, instead using effectType to handle casting if you all decide to keep the four separate IGlobalResearch variants.\nMostly a question of how much to have available for humans reading through the things, either in data packs, making localization files, so on.  It works fine for the ResearchConstants and ResearchInitializer, but tracking down and understanding \"saturation\" or \"cap\" in en_lang without the code context might benefit from more verbose matters.\nBut it does admittedly come with cost of upkeep/writing.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r535690130", "createdAt": "2020-12-03T22:28:58Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczOTQ4Nw==", "bodyText": "Right. I'm sorry, I think you're on the right path with the broken out effects. the unlockbuildingsifter:true is what threw me, I didn't originally get that the true was just \"presence\", so I was looking at IDs as embedded meaning rather than as an ID.\nI see some cases where we might want to have levels for unlockability affects, so a 1 rather than a true might be for the best, unless there is a compelling reason to use a boolean.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r535739487", "createdAt": "2020-12-04T00:11:12Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0Njc1Ng==", "bodyText": "Since I have to do input sanitization anyway, having different object types means that I could distinguish different effectCategories from their tag-properties without doing the lookup.  But if unlocks have even a small chance of using numeric, probably better to just parse and map out the effects first, and that'll also let me log references in researches to non-existent effects better anyway.\nMostly just don't want to have the same property data defined in multiple places, since that's a quick path to consistency problems.  But if there's only effectname:level in the research json, that's less of a problem.\nWill have to make clear that the level depends on the effect file, but that's documentation.\nCan swap to a less verbose option for effectIds.  Raycoms used healthaddition as a moderately verbose example above, and that's not a bad model.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r535746756", "createdAt": "2020-12-04T00:29:38Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_firstaid.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"id\": \"firstaid\",\n+  \"name\": \"First Aid\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"requiredItems\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkxNzc3OA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTk0NTA1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjo1MzowMVrOH9Mvqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNToxMjozNFrOH9frNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzMzk5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate research is completed.  Default will correspond to ~ 1h, 2h, 4h, 8h, 16h, 32h. \\n Because of sleep cycles, high values will progress much faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",\n          \n          \n            \n              \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate at which research is completed. the default value corresponds to ~ 1h, 2h, 4h, 8h, 16h, and 32h for each tier respectively. \\n Because of sleep cycles, high values will progress much faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r533933994", "createdAt": "2020-12-02T06:53:01Z", "author": {"login": "ShadowProtocol"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -38,6 +38,12 @@\n   \"minecolonies.config.badvisitorchance\": \"Bad recruitment chance\",\n   \"minecolonies.config.badvisitorchance.comment\": \"Chance to get an evil tavern visitor which can run off with the resources, in % [Default: 2]\",\n \n+  \"minecolonies.config.researchspeedmultiplier\": \"Research Speed Multiplier\",\n+  \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate research is completed.  Default will correspond to ~ 1h, 2h, 4h, 8h, 16h, 32h. \\n Because of sleep cycles, high values will progress much faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI0NDE0OQ==", "bodyText": "Shadow, doesn't \"the\" need to be capitalized at the beginning of the second sentence?\nAlso, the \"Because of sleep cycles\" is confusing and not explained. Just saying \"High values will progress much faster.\" would be fine in my opinion.\nShould it be \"corresponds to ~1h, 2h, 4h\" with the tilde moved closer?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534244149", "createdAt": "2020-12-02T15:12:34Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -38,6 +38,12 @@\n   \"minecolonies.config.badvisitorchance\": \"Bad recruitment chance\",\n   \"minecolonies.config.badvisitorchance.comment\": \"Chance to get an evil tavern visitor which can run off with the resources, in % [Default: 2]\",\n \n+  \"minecolonies.config.researchspeedmultiplier\": \"Research Speed Multiplier\",\n+  \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate research is completed.  Default will correspond to ~ 1h, 2h, 4h, 8h, 16h, 32h. \\n Because of sleep cycles, high values will progress much faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzMzk5NA=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDQwMjEwOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/registry/IResearchEffectRegistry.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowODozMlrOH9Q9vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDowMDoyOVrOH9cO2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwMzEzMg==", "bodyText": "I've been wondering wether we need this at all, as our current effects are already very general and the way I see it are enclosing all possible use cases. We've got a boolean yes/no effect and a numeric effect to retrive as information, so not sure if this isnt just an overkill.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534003132", "createdAt": "2020-12-02T09:08:32Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/research/registry/IResearchEffectRegistry.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.minecolonies.api.research.registry;\n+\n+import com.minecolonies.api.IMinecoloniesAPI;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+\n+import java.util.Collection;\n+import java.util.Set;\n+\n+/**\n+ *   An interface providing information about Minecolonies Research Effects,\n+ *   and the ability to register new effects.  Also some helper classes to reduce later sorting.\n+ *   This ResearchEffectRegistry should include both research effects regardless of status:\n+ *   Use {@link com.minecolonies.api.research.effects.IResearchEffectManager}\n+ *   to set and apply effects for completed research.\n+ *   Use {MinecoloniesAPIProxy.getInstance().getGlobalResearchTree()}\n+ *   to add research to the University Research System.\n+ */\n+\n+public interface IResearchEffectRegistry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4NTk2OA==", "bodyText": "Raycoms requested it in #5842 (comment) . It's implemented as an interface to specific effects (healthboost, invslots, citizen-cap, unlock Building X) rather than of effect types (unlockBuilding, unlockAbility, multiplication, addition).\nIt's currently not used at all, and the only real use case I can come up with inside the mod proper is for more generic implementations, so if it's out of scope it's not hard to delete.  I think the intended situation was more for outside modders intending to register effects without putting them into the research tree (such as a consumed item from another mod unlocking a crafterrecipe) or where the effect might not normally exist and they can't use the existing blockhut checkResearch approach (such as if they want a behavior in their own mod to be dependent on a research unlock, but only if that unlock exists).", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534185968", "createdAt": "2020-12-02T13:58:05Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/registry/IResearchEffectRegistry.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.minecolonies.api.research.registry;\n+\n+import com.minecolonies.api.IMinecoloniesAPI;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+\n+import java.util.Collection;\n+import java.util.Set;\n+\n+/**\n+ *   An interface providing information about Minecolonies Research Effects,\n+ *   and the ability to register new effects.  Also some helper classes to reduce later sorting.\n+ *   This ResearchEffectRegistry should include both research effects regardless of status:\n+ *   Use {@link com.minecolonies.api.research.effects.IResearchEffectManager}\n+ *   to set and apply effects for completed research.\n+ *   Use {MinecoloniesAPIProxy.getInstance().getGlobalResearchTree()}\n+ *   to add research to the University Research System.\n+ */\n+\n+public interface IResearchEffectRegistry", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwMzEzMg=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4NzczOA==", "bodyText": "Yeah, I had talked that over with someaddons 1-2 days ago. I had thought we might need a bunch of additional ones, but I think overally we're actually fine. The generic types we have (number, unlock) are probably all we need. And even if someone come sup with sth more complex we can still PR that into the mod.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534187738", "createdAt": "2020-12-02T14:00:29Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/research/registry/IResearchEffectRegistry.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.minecolonies.api.research.registry;\n+\n+import com.minecolonies.api.IMinecoloniesAPI;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+\n+import java.util.Collection;\n+import java.util.Set;\n+\n+/**\n+ *   An interface providing information about Minecolonies Research Effects,\n+ *   and the ability to register new effects.  Also some helper classes to reduce later sorting.\n+ *   This ResearchEffectRegistry should include both research effects regardless of status:\n+ *   Use {@link com.minecolonies.api.research.effects.IResearchEffectManager}\n+ *   to set and apply effects for completed research.\n+ *   Use {MinecoloniesAPIProxy.getInstance().getGlobalResearchTree()}\n+ *   to add research to the University Research System.\n+ */\n+\n+public interface IResearchEffectRegistry", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAwMzEzMg=="}, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjEyMTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0NzoxM1rOH9hZww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0NzoxM1rOH9hZww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI3MjQ1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"minecolonies.config.researchcreativecompletion.comment\": \"Allows automatic and (near) instant completion of research for players in creative mode.  If false, creative players will still be able to begun research, but will see normal progress rates.\",\n          \n          \n            \n              \"minecolonies.config.researchcreativecompletion.comment\": \"Allows automatic and (near) instant completion of research for players in creative mode.  If false, creative players will still be able to begin researches, but will have normal progress rates.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534272451", "createdAt": "2020-12-02T15:47:13Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -38,6 +38,12 @@\n   \"minecolonies.config.badvisitorchance\": \"Bad recruitment chance\",\n   \"minecolonies.config.badvisitorchance.comment\": \"Chance to get an evil tavern visitor which can run off with the resources, in % [Default: 2]\",\n \n+  \"minecolonies.config.researchspeedmultiplier\": \"Research Speed Multiplier\",\n+  \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate research is completed.  Default will correspond to ~ 1h, 2h, 4h, 8h, 16h, 32h. \\n Because of sleep cycles, high values will progress much faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",\n+\n+  \"minecolonies.config.researchcreativecompletion\": \"Research Creative Completion\",\n+  \"minecolonies.config.researchcreativecompletion.comment\": \"Allows automatic and (near) instant completion of research for players in creative mode.  If false, creative players will still be able to begun research, but will see normal progress rates.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjEyMzQ1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0Nzo0MVrOH9hbDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0Nzo0MVrOH9hbDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI3Mjc4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"minecolonies.config.updaterate.comment\": \"AI Update rate. Increase this to improve performance. This throttles citizen updates. Higher update rates will make citizens take increasingly long to make decisions, a setting of 6 will have some longer checks occur only every two minutes.\",\n          \n          \n            \n              \"minecolonies.config.updaterate.comment\": \"AI Update rate. Increase this to improve performance. This throttles citizen updates. Higher update rates will make citizens take increasingly long to make decisions. A setting of 6 will have some longer checks occur only every two minutes.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534272782", "createdAt": "2020-12-02T15:47:41Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -108,7 +114,7 @@\n   \"minecolonies.config.holidayfeatures\": \"Holiday Features\",\n   \"minecolonies.config.holidayfeatures.comment\": \"Should special holiday content be displayed?\",\n   \"minecolonies.config.updaterate\": \"Update-Rate\",\n-  \"minecolonies.config.updaterate.comment\": \"AI Update rate. Increase this to improve performance. This throttles citizen updates.\",\n+  \"minecolonies.config.updaterate.comment\": \"AI Update rate. Increase this to improve performance. This throttles citizen updates. Higher update rates will make citizens take increasingly long to make decisions, a setting of 6 will have some longer checks occur only every two minutes.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjE3NTM2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/technology/4_recipebook.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo1Nzo1N1rOH9h7aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo1Nzo1N1rOH9h7aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI4MTA2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"name\": \"Recipe book\",\n          \n          \n            \n              \"name\": \"Recipe Book\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534281064", "createdAt": "2020-12-02T15:57:57Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/data/minecolonies/researches/technology/4_recipebook.json", "diffHunk": "@@ -0,0 +1,28 @@\n+{\n+  \"id\": \"recipebook\",\n+  \"name\": \"Recipe book\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af6b37f2f56ad33702cec2d24493beab62614ad3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MjUyMzA1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOTo0OFrOH9lUfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNzowOTo0OFrOH9lUfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMzNjYzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate at which research is completed. the default value corresponds to ~ 1h, 2h, 4h, 8h, 16h, and 32h for each tier respectively. \\n Because of sleep cycles, high values will progress much faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",\n          \n          \n            \n              \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate at which research is completed. The default value corresponds to ~1h, 2h, 4h, 8h, 16h, and 32h for each tier respectively. \\n High values will progress faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r534336637", "createdAt": "2020-12-02T17:09:48Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -38,6 +38,12 @@\n   \"minecolonies.config.badvisitorchance\": \"Bad recruitment chance\",\n   \"minecolonies.config.badvisitorchance.comment\": \"Chance to get an evil tavern visitor which can run off with the resources, in % [Default: 2]\",\n \n+  \"minecolonies.config.researchspeedmultiplier\": \"Research Speed Multiplier\",\n+  \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate at which research is completed. the default value corresponds to ~ 1h, 2h, 4h, 8h, 16h, and 32h for each tier respectively. \\n Because of sleep cycles, high values will progress much faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c338dbf6e35bf0ade4502aa7396b638174e3b1b2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTM2NDE1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/blocks/AbstractBlockHut.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoxNTowMVrOIAB8Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyOToyM1rOIACEvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwMjc1NA==", "bodyText": "this JDoc doesn't seem to match?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r536902754", "createdAt": "2020-12-05T22:15:01Z", "author": {"login": "Mekle001"}, "path": "src/api/java/com/minecolonies/api/blocks/AbstractBlockHut.java", "diffHunk": "@@ -89,6 +89,12 @@\n      */\n     protected boolean needsResearch = false;\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "765a14c06e0aee88995ee83e03d5031ffc373f41"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwNDg5NA==", "bodyText": "Ah, thanks.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r536904894", "createdAt": "2020-12-05T22:29:23Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/blocks/AbstractBlockHut.java", "diffHunk": "@@ -89,6 +89,12 @@\n      */\n     protected boolean needsResearch = false;\n \n+    /**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwMjc1NA=="}, "originalCommit": {"oid": "765a14c06e0aee88995ee83e03d5031ffc373f41"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTM2ODM1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/items/ItemBlockHut.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoxNzo0MFrOIAB-Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjo0MDo1MFrOIACLZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwMzIwMg==", "bodyText": "Should both of these be translated?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r536903202", "createdAt": "2020-12-05T22:17:40Z", "author": {"login": "Mekle001"}, "path": "src/api/java/com/minecolonies/api/items/ItemBlockHut.java", "diffHunk": "@@ -47,7 +47,7 @@ public void addInformation(@NotNull ItemStack stack, World worldIn, @NotNull Lis\n         super.addInformation(stack, worldIn, tooltip, flagIn);\n         if (block.needsResearch())\n         {\n-            tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_1, block.getName()));\n+            tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_1, block.getTranslatedName()));\n             tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_2, block.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "765a14c06e0aee88995ee83e03d5031ffc373f41"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwMzgxMA==", "bodyText": "Only HUT_NEEDS_RESEARCH_TOOLTIP_1 (\"\u00a7cThe %s requires research\") actually supports arguments, the second is just \"\u00a7cat the University to be built.\"  I could see a point where people would want a way to get the block's id as used in the argument, and using a lang file to do so seems reasonable.  But that could also be done other ways, or using translatedName as the first argument as Name as the second.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r536903810", "createdAt": "2020-12-05T22:21:52Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/items/ItemBlockHut.java", "diffHunk": "@@ -47,7 +47,7 @@ public void addInformation(@NotNull ItemStack stack, World worldIn, @NotNull Lis\n         super.addInformation(stack, worldIn, tooltip, flagIn);\n         if (block.needsResearch())\n         {\n-            tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_1, block.getName()));\n+            tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_1, block.getTranslatedName()));\n             tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_2, block.getName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwMzIwMg=="}, "originalCommit": {"oid": "765a14c06e0aee88995ee83e03d5031ffc373f41"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwNjU5Nw==", "bodyText": "Yeah, I'd update this to pass the parameters you expect somebody might need to both of these, even if we're not using them today.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r536906597", "createdAt": "2020-12-05T22:40:50Z", "author": {"login": "Mekle001"}, "path": "src/api/java/com/minecolonies/api/items/ItemBlockHut.java", "diffHunk": "@@ -47,7 +47,7 @@ public void addInformation(@NotNull ItemStack stack, World worldIn, @NotNull Lis\n         super.addInformation(stack, worldIn, tooltip, flagIn);\n         if (block.needsResearch())\n         {\n-            tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_1, block.getName()));\n+            tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_1, block.getTranslatedName()));\n             tooltip.add(new TranslationTextComponent(TranslationConstants.HUT_NEEDS_RESEARCH_TOOLTIP_2, block.getName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwMzIwMg=="}, "originalCommit": {"oid": "765a14c06e0aee88995ee83e03d5031ffc373f41"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTM3MTk5OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyMDozN1rOIAB_sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyMDozN1rOIAB_sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwMzYwMw==", "bodyText": "this seems in confusing/conflicting with the function right above. Perhaps hasEffect or effectExists as a name?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r536903603", "createdAt": "2020-12-05T22:20:37Z", "author": {"login": "Mekle001"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "diffHunk": "@@ -17,6 +17,13 @@\n      */\n     <W extends IResearchEffect<?>> W getEffect(final String id, @NotNull final Class<W> type);\n \n+    /**\n+     * Check if the research effect exists, and if so, if it has been completed.\n+     * @param  id   the id of the effect\n+     * @return null if not existing, false if incomplete, true if complete.\n+     */\n+    Boolean getEffect(final String id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "765a14c06e0aee88995ee83e03d5031ffc373f41"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTM3ODIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingArchery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyNTowNlrOIACCTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyNTowNlrOIACCTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwNDI3MQ==", "bodyText": "do we still need this override? or can we centralize this?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r536904271", "createdAt": "2020-12-05T22:25:06Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingArchery.java", "diffHunk": "@@ -127,7 +127,7 @@ else if (block == Blocks.GLOWSTONE)\n     @Override\n     public void requestUpgrade(final PlayerEntity player, final BlockPos builder)\n     {\n-        final UnlockBuildingResearchEffect effect = colony.getResearchManager().getResearchEffects().getEffect(ResearchInitializer.ARCHERY_RESEARCH, UnlockBuildingResearchEffect.class);\n+        final UnlockBuildingResearchEffect effect = colony.getResearchManager().getResearchEffects().getEffect(ARCHERY_RESEARCH, UnlockBuildingResearchEffect.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "765a14c06e0aee88995ee83e03d5031ffc373f41"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTM4MjIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyNzo1N1rOIACD_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQyMjoyNzo1N1rOIACD_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkwNDcwMw==", "bodyText": "Ok, this change doesn't make any sense. You're potentially setting the required effect multiple times, with the last one winning. I'd rather see us pick the first unlockability effect, or correctly recognize all of them.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r536904703", "createdAt": "2020-12-05T22:27:57Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -363,12 +363,18 @@ public boolean isValidForBuilding(IBuildingWorker building)\n         IGlobalResearchTree gr = IGlobalResearchTree.getInstance();\n         if (researchId != null)\n         {\n-            requiredEffect = colony.getResearchManager().getResearchEffects().getEffect(gr.getEffectIdForResearch(researchId), AbstractResearchEffect.class);\n+            for(IResearchEffect effect : gr.getEffectsForResearch(researchId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "765a14c06e0aee88995ee83e03d5031ffc373f41"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTAwODg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxNzozNzo1M1rOIANNMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxNzozNzo1M1rOIANNMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA4NzI4MA==", "bodyText": "This looks off. The check is against excluded, but changing required?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r537087280", "createdAt": "2020-12-06T17:37:53Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -391,16 +395,18 @@ public boolean isValidForBuilding(IBuildingWorker building)\n         {\n             if(Boolean.TRUE.equals(IGlobalResearchTree.getInstance().hasUnlockAbilityEffect(excludedResearchId)))\n             {\n-                excludedEffect = true;\n+                requiredEffect = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b23746b3ae37e9548d30a96039c1614e52deb48"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MTAwOTk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxNzozODo1OFrOIANNtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMzoxMjozNlrOIAQ0Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA4NzQxNQ==", "bodyText": "This also looks off", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r537087415", "createdAt": "2020-12-06T17:38:58Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -391,16 +395,18 @@ public boolean isValidForBuilding(IBuildingWorker building)\n         {\n             if(Boolean.TRUE.equals(IGlobalResearchTree.getInstance().hasUnlockAbilityEffect(excludedResearchId)))\n             {\n-                excludedEffect = true;\n+                requiredEffect = true;\n             }\n             else\n             {\n-                for (ILocalResearch research : colony.getResearchManager().getResearchTree().getCompletedResearch())\n+                if(Boolean.TRUE.equals(colony.getResearchManager().getResearchTree().hasCompletedResearch(excludedResearchId)))\n                 {\n-                    if(research.getId().equals(excludedResearchId) && MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().hasUnlockAbilityEffect(research.getId()))\n+                    for(IResearchEffect effect : IGlobalResearchTree.getInstance().getEffectsForResearch(excludedResearchId))\n                     {\n-                        excludedEffect = true;\n-                        //return false;\n+                        if(effect instanceof UnlockAbilityResearchEffect)\n+                        {\n+                            requiredEffect = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b23746b3ae37e9548d30a96039c1614e52deb48"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA5MTUyMg==", "bodyText": "Yeah, those seem to be it.  Testing against Crusher and Bakery.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r537091522", "createdAt": "2020-12-06T18:00:32Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -391,16 +395,18 @@ public boolean isValidForBuilding(IBuildingWorker building)\n         {\n             if(Boolean.TRUE.equals(IGlobalResearchTree.getInstance().hasUnlockAbilityEffect(excludedResearchId)))\n             {\n-                excludedEffect = true;\n+                requiredEffect = true;\n             }\n             else\n             {\n-                for (ILocalResearch research : colony.getResearchManager().getResearchTree().getCompletedResearch())\n+                if(Boolean.TRUE.equals(colony.getResearchManager().getResearchTree().hasCompletedResearch(excludedResearchId)))\n                 {\n-                    if(research.getId().equals(excludedResearchId) && MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().hasUnlockAbilityEffect(research.getId()))\n+                    for(IResearchEffect effect : IGlobalResearchTree.getInstance().getEffectsForResearch(excludedResearchId))\n                     {\n-                        excludedEffect = true;\n-                        //return false;\n+                        if(effect instanceof UnlockAbilityResearchEffect)\n+                        {\n+                            requiredEffect = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA4NzQxNQ=="}, "originalCommit": {"oid": "3b23746b3ae37e9548d30a96039c1614e52deb48"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA5NDMwNQ==", "bodyText": "Takes about 30 seconds to update the recipes being used, working now.  The hut recipe list doesn't seem to update for much longer (I had to open/close the world), not sure if that's worth fixing at this point.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r537094305", "createdAt": "2020-12-06T18:15:02Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -391,16 +395,18 @@ public boolean isValidForBuilding(IBuildingWorker building)\n         {\n             if(Boolean.TRUE.equals(IGlobalResearchTree.getInstance().hasUnlockAbilityEffect(excludedResearchId)))\n             {\n-                excludedEffect = true;\n+                requiredEffect = true;\n             }\n             else\n             {\n-                for (ILocalResearch research : colony.getResearchManager().getResearchTree().getCompletedResearch())\n+                if(Boolean.TRUE.equals(colony.getResearchManager().getResearchTree().hasCompletedResearch(excludedResearchId)))\n                 {\n-                    if(research.getId().equals(excludedResearchId) && MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().hasUnlockAbilityEffect(research.getId()))\n+                    for(IResearchEffect effect : IGlobalResearchTree.getInstance().getEffectsForResearch(excludedResearchId))\n                     {\n-                        excludedEffect = true;\n-                        //return false;\n+                        if(effect instanceof UnlockAbilityResearchEffect)\n+                        {\n+                            requiredEffect = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA4NzQxNQ=="}, "originalCommit": {"oid": "3b23746b3ae37e9548d30a96039c1614e52deb48"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE0NjQxNA==", "bodyText": "Eh, I've not see the UI out of date like that, but if resolution is working with the right counts, I'm good.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r537146414", "createdAt": "2020-12-06T23:12:36Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -391,16 +395,18 @@ public boolean isValidForBuilding(IBuildingWorker building)\n         {\n             if(Boolean.TRUE.equals(IGlobalResearchTree.getInstance().hasUnlockAbilityEffect(excludedResearchId)))\n             {\n-                excludedEffect = true;\n+                requiredEffect = true;\n             }\n             else\n             {\n-                for (ILocalResearch research : colony.getResearchManager().getResearchTree().getCompletedResearch())\n+                if(Boolean.TRUE.equals(colony.getResearchManager().getResearchTree().hasCompletedResearch(excludedResearchId)))\n                 {\n-                    if(research.getId().equals(excludedResearchId) && MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().hasUnlockAbilityEffect(research.getId()))\n+                    for(IResearchEffect effect : IGlobalResearchTree.getInstance().getEffectsForResearch(excludedResearchId))\n                     {\n-                        excludedEffect = true;\n-                        //return false;\n+                        if(effect instanceof UnlockAbilityResearchEffect)\n+                        {\n+                            requiredEffect = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA4NzQxNQ=="}, "originalCommit": {"oid": "3b23746b3ae37e9548d30a96039c1614e52deb48"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTM1Nzc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzozNTozOVrOIAyS1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNzozNTozOVrOIAyS1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY5NDkzNA==", "bodyText": "I love this possibility. I believe that to do this right though, we need to notify that a new research has been discovered, which means checking for these being unlocked onColonyTick somewhere. I'd suggest not on the university itself, but on the TownHall, so that it could be extended to auto-start researches marked appropriately there, and enable scenarios like blocking the university itself until some other criteria is met (School built?)", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r537694934", "createdAt": "2020-12-07T17:35:39Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -312,6 +317,12 @@ public int getDepth()\n         return this.depth;\n     }\n \n+    @Override\n+    public boolean isHidden()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b41294b0cd5e9325163fb60bc55ff8f0ae370e65"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzgyODcwOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDowNzoyMFrOIDbMeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyODo1NlrOIDgLbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2MjIwMA==", "bodyText": "do we need the Boolean wrapper?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540462200", "createdAt": "2020-12-10T20:07:20Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "diffHunk": "@@ -42,6 +42,13 @@\n      */\n     List<ILocalResearch> getResearchInProgress();\n \n+    /**\n+     * Checks if a given research is complete.\n+     *\n+     * @return null if doesn't exist, true if complete, false if not completed.\n+     */\n+     Boolean hasCompletedResearch(String researchId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0Mzg1NQ==", "bodyText": "It's not really used anywhere right now, so it's easy enough to swap.  The goal down the road would be to support cases where an Unlock behaves differently if the research doesn't exist -- say, if you wanted a world with Plant2 removed to allow Sugar Cane and Cactus but not bamboo -- but that is enough of an edge case that we can wait til it comes up and then handle it (or to numeric unlock levels, which I think is what Mekle001 was starting to push toward).", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540543855", "createdAt": "2020-12-10T22:28:56Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "diffHunk": "@@ -42,6 +42,13 @@\n      */\n     List<ILocalResearch> getResearchInProgress();\n \n+    /**\n+     * Checks if a given research is complete.\n+     *\n+     * @return null if doesn't exist, true if complete, false if not completed.\n+     */\n+     Boolean hasCompletedResearch(String researchId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2MjIwMA=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzg0Njk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutUniversity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoxMjowNVrOIDbXNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoxMjowNVrOIDbXNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2NDk0OA==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540464948", "createdAt": "2020-12-10T20:12:05Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutUniversity.java", "diffHunk": "@@ -36,19 +43,92 @@ public WindowHutUniversity(final BuildingUniversity.View building)\n \n         final View view = this.findPaneOfTypeByID(BRANCH_VIEW_ID, View.class);\n         int offset = 0;\n-        for (final String branch : IGlobalResearchTree.getInstance().getBranches())\n+        // For now, sort research branches by name, as they may be loaded in any order.\n+        branches.addAll(IGlobalResearchTree.getInstance().getBranches());\n+        branches.sort(Comparator.comparing(String::toString, String.CASE_INSENSITIVE_ORDER));\n+        for (final String branch : branches)\n         {\n-            final ButtonImage button = new ButtonImage();\n-            button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n-            button.setLabel(branch);\n-            button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n-            button.setTextColor(SLIGHTLY_BLUE);\n-            button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n-            view.addChild(button);\n-            branches.add(branch);\n+            List<IFormattableTextComponent> requirements = getHidingRequirementDesc(branch);\n+            if(requirements.isEmpty())\n+            {\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(branch);\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n \n-            offset += button.getHeight() + BUTTON_PADDING;\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+            else\n+            {\n+                final Gradient gradient = new Gradient();\n+                gradient.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                gradient.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                gradient.setGradientStart(239, 230, 215, 255);\n+                gradient.setGradientEnd(239, 230, 215, 255);\n+                gradient.setHoverToolTip(requirements);\n+                view.addChild(gradient);\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(\"-----------\");\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n+\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+        }\n+    }\n+\n+    public List<IFormattableTextComponent> getHidingRequirementDesc(String branch)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzg2NjM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/ColonyManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoxNzowNVrOIDbitQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDowNzoxNlrOIDjKEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2Nzg5Mw==", "bodyText": "hm what is the purpose of resetting on world unloads? those also do happen for e.g. a modded dimension or then end/may not happen when the server crashes", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540467893", "createdAt": "2020-12-10T20:17:05Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/ColonyManager.java", "diffHunk": "@@ -713,6 +714,7 @@ public void onWorldUnload(@NotNull final World world)\n                 loaded = false;\n             }\n         }\n+        IGlobalResearchTree.getInstance().reset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU5MjY1OA==", "bodyText": "The goal is to handle situations where one save file on a single-player instance has different data pack configuration than another save.  If someone enters World A where there's a datapack with an additional research locking the Mine, then goes back to the menu, and enters World B where there is no such research, some way of purging the GlobalResearchTree of dynamically-assigned researches is necessary.\nBut I misunderstood its behavior on servers.  Thanks for catching that, and to Raycoms for also helping explain what it does.  Probably saner to have the reset just done during the first stage of the ResearchListener for world load events.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540592658", "createdAt": "2020-12-11T00:07:16Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/ColonyManager.java", "diffHunk": "@@ -713,6 +714,7 @@ public void onWorldUnload(@NotNull final World world)\n                 loaded = false;\n             }\n         }\n+        IGlobalResearchTree.getInstance().reset();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ2Nzg5Mw=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzg5Nzg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoyNTowM1rOIDb1QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzoyNjoxM1rOIDndNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjY0MA==", "bodyText": "what are these new autostartedresearches about? What are they used for?\nNot sure if this is the right places, as a colony can exist without a townhall", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540472640", "createdAt": "2020-12-10T20:25:03Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3ODQwNg==", "bodyText": "I believe Mekle001's more extreme use case was someone intending to thoroughly rework the trees, to such extent where the University itself was locked; having a way to start research outside of the University thus becomes necessary.  Outside of that, I think it's fairly plausible to see a more progression-oriented modpack use the research trees such that they'd have low or no research start costs, but intend to have a lot of low-tier research that's intended to be started as soon as it was unlocked.\nYou're probably right in the Town Hall not being the right place for it; there's a lot of early-game where you might not even have a constructed town hall, and maybe not even have the town hall block placed.  Maybe Colony itself?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540578406", "createdAt": "2020-12-10T23:32:50Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjY0MA=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4NDY3OQ==", "bodyText": "So, I see several places where onColonyTick is fired from: Citizens through CitizenManager, Visitors through visitorManager, buildings through BuidingManager, workorders through workManager, and colonyEvents through eventManager.\nFinally, you could do it directly in worldTickSlow for the colony. I'm going to suggest that is where we should do this work, as it will handle the case where the townhall block is broken and not yet placed again.  The colony doesn't exist until it's created from the town hall, which is why I originally suggested there, but I had forgotten about the broken townhall case.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540584679", "createdAt": "2020-12-10T23:47:32Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjY0MA=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY1NDY1NQ==", "bodyText": "Is it okay if I add an onColonyTick to ResearchManager and attach it to the worldTicksSlow in colony?  That seems like the logical place, and should reduce clutter in since ResearchManager is a lot less crowded than Colony right now.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540654655", "createdAt": "2020-12-11T03:00:38Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjY0MA=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2MzA5NQ==", "bodyText": "That seems like a fantastic solution.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540663095", "createdAt": "2020-12-11T03:26:13Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3MjY0MA=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzkxMDk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoyODozOFrOIDb9Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoyODozOFrOIDb9Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3NDYzOA==", "bodyText": "is there a reason for only requiring the name?  like having another schematic with the same name and different building?\nThink you want to compared getBuildingEntry() == ModBuildings.university", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540474638", "createdAt": "2020-12-10T20:28:38Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())\n+        {\n+            if (!IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), colony))\n+            {\n+                continue;\n+            }\n+            Map<BlockPos, IBuilding> buildings = colony.getBuildingManager().getBuildings();\n+            int level = 0;\n+            for (Map.Entry<BlockPos, IBuilding> building : buildings.entrySet())\n+            {\n+                if (building.getValue().getSchematicName().equals(ModBuildings.UNIVERSITY_ID))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzkxODAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDozMDoyN1rOIDcBNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNDowMzozOVrOIDoKDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3NTcwMQ==", "bodyText": "thinking it may confuse the user when researches are completed which he did not start?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540475701", "createdAt": "2020-12-10T20:30:27Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())\n+        {\n+            if (!IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), colony))\n+            {\n+                continue;\n+            }\n+            Map<BlockPos, IBuilding> buildings = colony.getBuildingManager().getBuildings();\n+            int level = 0;\n+            for (Map.Entry<BlockPos, IBuilding> building : buildings.entrySet())\n+            {\n+                if (building.getValue().getSchematicName().equals(ModBuildings.UNIVERSITY_ID))\n+                {\n+                    if (building.getValue().getBuildingLevel() > level)\n+                    {\n+                        level = building.getValue().getBuildingLevel();\n+                    }\n+                }\n+            }\n+            if (level < research.getDepth())\n+            {\n+                continue;\n+            }\n+            boolean researchAlreadyRun = false;\n+            for (ILocalResearch progressResearch : colony.getResearchManager().getResearchTree().getResearchInProgress())\n+            {\n+                if(progressResearch.getId().equals(research.getId()))\n+                {\n+                    researchAlreadyRun = true;\n+                    break;\n+                }\n+            }\n+            // Don't want to spam people about in-progress or already-completed research.  Because these might change within a world,\n+            // we can't just save them or check against effects.\n+            if(researchAlreadyRun || Boolean.TRUE.equals(colony.getResearchManager().getResearchTree().hasCompletedResearch(research.getId())))\n+            {\n+                removes.add(research);\n+                continue;\n+            }\n+\n+            // if research has item requirements, only notify player; we don't want to have items disappearing from inventories.\n+            if (!research.getCostList().isEmpty())\n+            {\n+                for (PlayerEntity player : this.colony.getMessagePlayerEntities())\n+                {\n+                    player.sendMessage(new TranslationTextComponent(TranslationConstants.RESEARCH_AVAILABLE, research.getDesc()), player.getUniqueID());\n+                }\n+            }\n+            // Otherwise, we can start the research without user intervention.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY3NDU3Mg==", "bodyText": "Possible.  I think a lot of the intended use case involves places where the player doesn't have a user interface to click yet, either because they don't have the University unlocked or it's not part of the intended gameplay path at that point, but there's definitely a tradeoff between requiring players to run back and forth with every unlock, and it being kinda mysterious why some start themselves and others don't.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540674572", "createdAt": "2020-12-11T04:03:39Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())\n+        {\n+            if (!IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), colony))\n+            {\n+                continue;\n+            }\n+            Map<BlockPos, IBuilding> buildings = colony.getBuildingManager().getBuildings();\n+            int level = 0;\n+            for (Map.Entry<BlockPos, IBuilding> building : buildings.entrySet())\n+            {\n+                if (building.getValue().getSchematicName().equals(ModBuildings.UNIVERSITY_ID))\n+                {\n+                    if (building.getValue().getBuildingLevel() > level)\n+                    {\n+                        level = building.getValue().getBuildingLevel();\n+                    }\n+                }\n+            }\n+            if (level < research.getDepth())\n+            {\n+                continue;\n+            }\n+            boolean researchAlreadyRun = false;\n+            for (ILocalResearch progressResearch : colony.getResearchManager().getResearchTree().getResearchInProgress())\n+            {\n+                if(progressResearch.getId().equals(research.getId()))\n+                {\n+                    researchAlreadyRun = true;\n+                    break;\n+                }\n+            }\n+            // Don't want to spam people about in-progress or already-completed research.  Because these might change within a world,\n+            // we can't just save them or check against effects.\n+            if(researchAlreadyRun || Boolean.TRUE.equals(colony.getResearchManager().getResearchTree().hasCompletedResearch(research.getId())))\n+            {\n+                removes.add(research);\n+                continue;\n+            }\n+\n+            // if research has item requirements, only notify player; we don't want to have items disappearing from inventories.\n+            if (!research.getCostList().isEmpty())\n+            {\n+                for (PlayerEntity player : this.colony.getMessagePlayerEntities())\n+                {\n+                    player.sendMessage(new TranslationTextComponent(TranslationConstants.RESEARCH_AVAILABLE, research.getDesc()), player.getUniqueID());\n+                }\n+            }\n+            // Otherwise, we can start the research without user intervention.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3NTcwMQ=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzkyNDA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDozMjowM1rOIDcEvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDozMjowM1rOIDcEvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3NjYwNQ==", "bodyText": "here when one colony finishes and removes a research we are removing it for all colonies?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540476605", "createdAt": "2020-12-10T20:32:03Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -85,6 +93,86 @@ public BuildingEntry getBuildingRegistryEntry()\n         return ModBuildings.townHall;\n     }\n \n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        super.onColonyTick(colony);\n+\n+        List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches())\n+        {\n+            if (!IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), colony))\n+            {\n+                continue;\n+            }\n+            Map<BlockPos, IBuilding> buildings = colony.getBuildingManager().getBuildings();\n+            int level = 0;\n+            for (Map.Entry<BlockPos, IBuilding> building : buildings.entrySet())\n+            {\n+                if (building.getValue().getSchematicName().equals(ModBuildings.UNIVERSITY_ID))\n+                {\n+                    if (building.getValue().getBuildingLevel() > level)\n+                    {\n+                        level = building.getValue().getBuildingLevel();\n+                    }\n+                }\n+            }\n+            if (level < research.getDepth())\n+            {\n+                continue;\n+            }\n+            boolean researchAlreadyRun = false;\n+            for (ILocalResearch progressResearch : colony.getResearchManager().getResearchTree().getResearchInProgress())\n+            {\n+                if(progressResearch.getId().equals(research.getId()))\n+                {\n+                    researchAlreadyRun = true;\n+                    break;\n+                }\n+            }\n+            // Don't want to spam people about in-progress or already-completed research.  Because these might change within a world,\n+            // we can't just save them or check against effects.\n+            if(researchAlreadyRun || Boolean.TRUE.equals(colony.getResearchManager().getResearchTree().hasCompletedResearch(research.getId())))\n+            {\n+                removes.add(research);\n+                continue;\n+            }\n+\n+            // if research has item requirements, only notify player; we don't want to have items disappearing from inventories.\n+            if (!research.getCostList().isEmpty())\n+            {\n+                for (PlayerEntity player : this.colony.getMessagePlayerEntities())\n+                {\n+                    player.sendMessage(new TranslationTextComponent(TranslationConstants.RESEARCH_AVAILABLE, research.getDesc()), player.getUniqueID());\n+                }\n+            }\n+            // Otherwise, we can start the research without user intervention.\n+            else\n+            {\n+                boolean creativePlayer = false;\n+                for (PlayerEntity player : this.colony.getMessagePlayerEntities())\n+                {\n+                    player.sendMessage(new TranslationTextComponent(TranslationConstants.RESEARCH_AVAILABLE, research.getDesc()), player.getUniqueID());\n+                    player.sendMessage(new TranslationTextComponent(\"com.minecolonies.coremod.research.started\", new TranslationTextComponent(research.getDesc())),\n+                      player.getUniqueID());\n+                    if (player.isCreative() && MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchCreativeCompletion.get())\n+                    {\n+                        creativePlayer = true;\n+                    }\n+                }\n+                if (creativePlayer && MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchCreativeCompletion.get())\n+                {\n+                    colony.getResearchManager().getResearchTree().getResearch(research.getBranch(),\n+                      research.getId()).setProgress((int)(BASE_RESEARCH_TIME * Math.pow(2, research.getDepth() - 1)));\n+                }\n+            }\n+            //  If we've successfully done all those things, now we can remove the object from the list.\n+            //  This will reannounce on world reload, but that's probably ideal, in case someone missed the message once.\n+            removes.add(research);\n+        }\n+        MinecoloniesAPIProxy.getInstance().getGlobalResearchTree().getAutostartResearches().removeAll(removes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzkyOTcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDozMzoyOVrOIDcH8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDozMzoyOVrOIDcH8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3NzQyNg==", "bodyText": "Do we need the Boolean wrappers? if(IGlobalResearchTree.getInstance().hasUnlockAbilityEffect(researchId)) would be so much simpler", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540477426", "createdAt": "2020-12-10T20:33:29Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -409,20 +416,54 @@ public void setRecipeId(ResourceLocation recipeId)\n      */\n     public boolean isValidForBuilding(IBuildingWorker building)\n     {\n-        AbstractResearchEffect<?> requiredEffect = null;\n-        AbstractResearchEffect<?> excludedEffect = null;\n+        boolean requiredEffect = false;\n+        boolean excludedEffect = false;\n+        //List<AbstractResearchEffect<?>> requiredEffects = new ArrayList<>();\n+        //List<AbstractResearchEffect<?>> excludedEffects = new ArrayList<>();\n         final IColony colony = building.getColony();\n         final int bldgLevel = building.getBuildingLevel();\n \n         IGlobalResearchTree gr = IGlobalResearchTree.getInstance();\n         if (researchId != null)\n         {\n-            requiredEffect = colony.getResearchManager().getResearchEffects().getEffect(gr.getEffectIdForResearch(researchId), AbstractResearchEffect.class);\n+            if(Boolean.TRUE.equals(IGlobalResearchTree.getInstance().hasUnlockAbilityEffect(researchId)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzk0NzY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDozNzo1NVrOIDcSMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMDo0MTowMlrOIDj7Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4MDA1MA==", "bodyText": "crafter recipes? xD", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540480050", "createdAt": "2020-12-10T20:37:55Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.configuration.Configuration;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.research.IGlobalResearch;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import com.minecolonies.coremod.research.ResearchEffectCategory;\n+import jdk.nashorn.internal.objects.Global;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.minecolonies.coremod.research.GlobalResearch.*;\n+import static com.minecolonies.coremod.research.ResearchEffectCategory.*;\n+\n+/**\n+ * Loader for Json based crafter specific recipes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYwNTIyMg==", "bodyText": "My not-so secret shame of copy-pasting code and comments!  Thanks for catching that.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540605222", "createdAt": "2020-12-11T00:41:02Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.configuration.Configuration;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.research.IGlobalResearch;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import com.minecolonies.coremod.research.ResearchEffectCategory;\n+import jdk.nashorn.internal.objects.Global;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.minecolonies.coremod.research.GlobalResearch.*;\n+import static com.minecolonies.coremod.research.ResearchEffectCategory.*;\n+\n+/**\n+ * Loader for Json based crafter specific recipes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4MDA1MA=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzk1MzI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDozOToyNVrOIDcVhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDozOToyNVrOIDcVhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4MDkwMQ==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540480901", "createdAt": "2020-12-10T20:39:25Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.configuration.Configuration;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.research.IGlobalResearch;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import com.minecolonies.coremod.research.ResearchEffectCategory;\n+import jdk.nashorn.internal.objects.Global;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.minecolonies.coremod.research.GlobalResearch.*;\n+import static com.minecolonies.coremod.research.ResearchEffectCategory.*;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, index and map out all research effects.  We need to be able to map them before creating Researches themselves.\n+        // Because datapacks, can't assume effects are in one specific location.\n+        // For now, we'll populate relative levels when doing so, but we probably want to do that dynamically.\n+        Map<String, ResearchEffectCategory> effectCategories = parseResearchEffects(object);\n+\n+        // Next, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        // We need the effectCategories and levels to do this.\n+        Map<String, GlobalResearch> researchMap = parseResearches(object, effectCategories);\n+\n+        // We /shouldn't/ get any removes before the Research they're trying to remove exists,\n+        // but it can happen if multiple datapacks affect each other.\n+        // So now that we've loaded everything, then we can start removes.\n+        parseRemoveResearches(object, researchMap);\n+\n+        // After we've loaded all researches, we can then try to assign child relationships.\n+        // This is also the phase where we'd try to support back-calculating university levels for researches without them/with incorrect ones.\n+        IGlobalResearchTree researchTree = calcResearchTree(researchMap);\n+\n+        Log.getLogger().info(\"Loaded \" + researchMap.values().size() + \" recipes for \" + researchTree.getBranches().size() + \" research branches\");\n+    }\n+\n+    private Map<String, ResearchEffectCategory> parseResearchEffects(Map<ResourceLocation, JsonElement> object)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzk2NTY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0MjoyNFrOIDccnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0MjoyNFrOIDccnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4MjcxNg==", "bodyText": "Do we maybe want some error logs when we get a malformed input?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540482716", "createdAt": "2020-12-10T20:42:24Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.configuration.Configuration;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.research.IGlobalResearch;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import com.minecolonies.coremod.research.ResearchEffectCategory;\n+import jdk.nashorn.internal.objects.Global;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.minecolonies.coremod.research.GlobalResearch.*;\n+import static com.minecolonies.coremod.research.ResearchEffectCategory.*;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, index and map out all research effects.  We need to be able to map them before creating Researches themselves.\n+        // Because datapacks, can't assume effects are in one specific location.\n+        // For now, we'll populate relative levels when doing so, but we probably want to do that dynamically.\n+        Map<String, ResearchEffectCategory> effectCategories = parseResearchEffects(object);\n+\n+        // Next, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        // We need the effectCategories and levels to do this.\n+        Map<String, GlobalResearch> researchMap = parseResearches(object, effectCategories);\n+\n+        // We /shouldn't/ get any removes before the Research they're trying to remove exists,\n+        // but it can happen if multiple datapacks affect each other.\n+        // So now that we've loaded everything, then we can start removes.\n+        parseRemoveResearches(object, researchMap);\n+\n+        // After we've loaded all researches, we can then try to assign child relationships.\n+        // This is also the phase where we'd try to support back-calculating university levels for researches without them/with incorrect ones.\n+        IGlobalResearchTree researchTree = calcResearchTree(researchMap);\n+\n+        Log.getLogger().info(\"Loaded \" + researchMap.values().size() + \" recipes for \" + researchTree.getBranches().size() + \" research branches\");\n+    }\n+\n+    private Map<String, ResearchEffectCategory> parseResearchEffects(Map<ResourceLocation, JsonElement> object)\n+    {\n+        final Map<String, ResearchEffectCategory> effectCategories = new HashMap<>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            JsonObject effectJson = entry.getValue().getAsJsonObject();\n+\n+            if (effectJson.has(RESEARCH_EFFECT_PROP) && effectJson.has(RESEARCH_ID_PROP)\n+                  && effectJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString()\n+                  &&  effectJson.has(RESEARCH_EFFECT_TYPE_PROP) && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).isJsonPrimitive()\n+                  && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsJsonPrimitive().isString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzk3NzIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NToyOVrOIDcjfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NToyOVrOIDcjfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NDQ3Ng==", "bodyText": "should proably print the fields that are required", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540484476", "createdAt": "2020-12-10T20:45:29Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.configuration.Configuration;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.research.IGlobalResearch;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import com.minecolonies.coremod.research.ResearchEffectCategory;\n+import jdk.nashorn.internal.objects.Global;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.minecolonies.coremod.research.GlobalResearch.*;\n+import static com.minecolonies.coremod.research.ResearchEffectCategory.*;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, index and map out all research effects.  We need to be able to map them before creating Researches themselves.\n+        // Because datapacks, can't assume effects are in one specific location.\n+        // For now, we'll populate relative levels when doing so, but we probably want to do that dynamically.\n+        Map<String, ResearchEffectCategory> effectCategories = parseResearchEffects(object);\n+\n+        // Next, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        // We need the effectCategories and levels to do this.\n+        Map<String, GlobalResearch> researchMap = parseResearches(object, effectCategories);\n+\n+        // We /shouldn't/ get any removes before the Research they're trying to remove exists,\n+        // but it can happen if multiple datapacks affect each other.\n+        // So now that we've loaded everything, then we can start removes.\n+        parseRemoveResearches(object, researchMap);\n+\n+        // After we've loaded all researches, we can then try to assign child relationships.\n+        // This is also the phase where we'd try to support back-calculating university levels for researches without them/with incorrect ones.\n+        IGlobalResearchTree researchTree = calcResearchTree(researchMap);\n+\n+        Log.getLogger().info(\"Loaded \" + researchMap.values().size() + \" recipes for \" + researchTree.getBranches().size() + \" research branches\");\n+    }\n+\n+    private Map<String, ResearchEffectCategory> parseResearchEffects(Map<ResourceLocation, JsonElement> object)\n+    {\n+        final Map<String, ResearchEffectCategory> effectCategories = new HashMap<>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            JsonObject effectJson = entry.getValue().getAsJsonObject();\n+\n+            if (effectJson.has(RESEARCH_EFFECT_PROP) && effectJson.has(RESEARCH_ID_PROP)\n+                  && effectJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString()\n+                  &&  effectJson.has(RESEARCH_EFFECT_TYPE_PROP) && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).isJsonPrimitive()\n+                  && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsJsonPrimitive().isString())\n+            {\n+                final ResearchEffectCategory category;\n+                if((effectJson.has(RESEARCH_NAME_PROP) && effectJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString()))\n+                {\n+                    category = new ResearchEffectCategory(effectJson.get(RESEARCH_ID_PROP).getAsString(), effectJson.get(RESEARCH_NAME_PROP).getAsString(), effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsString());\n+                }\n+                else\n+                {\n+                    category = new ResearchEffectCategory(effectJson.get(RESEARCH_ID_PROP).getAsString(), effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsString());\n+                }\n+                if (effectJson.has(RESEARCH_EFFECT_LEVELS_PROP) && effectJson.get(RESEARCH_EFFECT_LEVELS_PROP).isJsonArray())\n+                {\n+                    for(JsonElement levelElement : effectJson.get(RESEARCH_EFFECT_LEVELS_PROP).getAsJsonArray())\n+                    {\n+                        if(levelElement.isJsonPrimitive() && levelElement.getAsJsonPrimitive().isNumber())\n+                        {\n+                            category.add(levelElement.getAsNumber().floatValue());\n+                        }\n+                    }\n+                }\n+                // If no levels are defined, assume temporarily boolean, and store on/off.\n+                else\n+                {\n+                    category.add(1f);\n+                }\n+                effectCategories.put(category.getId(), category);\n+            }\n+        }\n+        return effectCategories;\n+    }\n+\n+    private Map<String, GlobalResearch> parseResearches(Map<ResourceLocation, JsonElement> object, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        final Map<String, GlobalResearch> researchMap = new HashMap<String, GlobalResearch>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            //Note that we don't actually use the resource folders or file names; those are only for organization purposes.\n+            JsonObject researchJson = entry.getValue().getAsJsonObject();\n+\n+            //Can ignore those effect jsons now:\n+            if (researchJson.has(RESEARCH_EFFECT_PROP))\n+            {\n+                continue;\n+            }\n+\n+            //Check for absolute minimum required types, and log as warning if malformed.\n+            if (MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get() &&\n+                  !(researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive()\n+                    && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+                  || !(researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive()\n+                         && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString()))\n+            {\n+                Log.getLogger().warn(entry.getKey() + \"missing required fields\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzk3ODQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NTo1MFrOIDckRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NTo1MFrOIDckRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NDY3Nw==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540484677", "createdAt": "2020-12-10T20:45:50Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.configuration.Configuration;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.research.IGlobalResearch;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import com.minecolonies.coremod.research.ResearchEffectCategory;\n+import jdk.nashorn.internal.objects.Global;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.minecolonies.coremod.research.GlobalResearch.*;\n+import static com.minecolonies.coremod.research.ResearchEffectCategory.*;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, index and map out all research effects.  We need to be able to map them before creating Researches themselves.\n+        // Because datapacks, can't assume effects are in one specific location.\n+        // For now, we'll populate relative levels when doing so, but we probably want to do that dynamically.\n+        Map<String, ResearchEffectCategory> effectCategories = parseResearchEffects(object);\n+\n+        // Next, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        // We need the effectCategories and levels to do this.\n+        Map<String, GlobalResearch> researchMap = parseResearches(object, effectCategories);\n+\n+        // We /shouldn't/ get any removes before the Research they're trying to remove exists,\n+        // but it can happen if multiple datapacks affect each other.\n+        // So now that we've loaded everything, then we can start removes.\n+        parseRemoveResearches(object, researchMap);\n+\n+        // After we've loaded all researches, we can then try to assign child relationships.\n+        // This is also the phase where we'd try to support back-calculating university levels for researches without them/with incorrect ones.\n+        IGlobalResearchTree researchTree = calcResearchTree(researchMap);\n+\n+        Log.getLogger().info(\"Loaded \" + researchMap.values().size() + \" recipes for \" + researchTree.getBranches().size() + \" research branches\");\n+    }\n+\n+    private Map<String, ResearchEffectCategory> parseResearchEffects(Map<ResourceLocation, JsonElement> object)\n+    {\n+        final Map<String, ResearchEffectCategory> effectCategories = new HashMap<>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            JsonObject effectJson = entry.getValue().getAsJsonObject();\n+\n+            if (effectJson.has(RESEARCH_EFFECT_PROP) && effectJson.has(RESEARCH_ID_PROP)\n+                  && effectJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString()\n+                  &&  effectJson.has(RESEARCH_EFFECT_TYPE_PROP) && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).isJsonPrimitive()\n+                  && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsJsonPrimitive().isString())\n+            {\n+                final ResearchEffectCategory category;\n+                if((effectJson.has(RESEARCH_NAME_PROP) && effectJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString()))\n+                {\n+                    category = new ResearchEffectCategory(effectJson.get(RESEARCH_ID_PROP).getAsString(), effectJson.get(RESEARCH_NAME_PROP).getAsString(), effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsString());\n+                }\n+                else\n+                {\n+                    category = new ResearchEffectCategory(effectJson.get(RESEARCH_ID_PROP).getAsString(), effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsString());\n+                }\n+                if (effectJson.has(RESEARCH_EFFECT_LEVELS_PROP) && effectJson.get(RESEARCH_EFFECT_LEVELS_PROP).isJsonArray())\n+                {\n+                    for(JsonElement levelElement : effectJson.get(RESEARCH_EFFECT_LEVELS_PROP).getAsJsonArray())\n+                    {\n+                        if(levelElement.isJsonPrimitive() && levelElement.getAsJsonPrimitive().isNumber())\n+                        {\n+                            category.add(levelElement.getAsNumber().floatValue());\n+                        }\n+                    }\n+                }\n+                // If no levels are defined, assume temporarily boolean, and store on/off.\n+                else\n+                {\n+                    category.add(1f);\n+                }\n+                effectCategories.put(category.getId(), category);\n+            }\n+        }\n+        return effectCategories;\n+    }\n+\n+    private Map<String, GlobalResearch> parseResearches(Map<ResourceLocation, JsonElement> object, Map<String, ResearchEffectCategory> effectCategories)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzk3OTQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NjowNVrOIDck2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NjowNVrOIDck2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NDgyNg==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540484826", "createdAt": "2020-12-10T20:46:05Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.configuration.Configuration;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.research.IGlobalResearch;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import com.minecolonies.coremod.research.ResearchEffectCategory;\n+import jdk.nashorn.internal.objects.Global;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.minecolonies.coremod.research.GlobalResearch.*;\n+import static com.minecolonies.coremod.research.ResearchEffectCategory.*;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, index and map out all research effects.  We need to be able to map them before creating Researches themselves.\n+        // Because datapacks, can't assume effects are in one specific location.\n+        // For now, we'll populate relative levels when doing so, but we probably want to do that dynamically.\n+        Map<String, ResearchEffectCategory> effectCategories = parseResearchEffects(object);\n+\n+        // Next, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        // We need the effectCategories and levels to do this.\n+        Map<String, GlobalResearch> researchMap = parseResearches(object, effectCategories);\n+\n+        // We /shouldn't/ get any removes before the Research they're trying to remove exists,\n+        // but it can happen if multiple datapacks affect each other.\n+        // So now that we've loaded everything, then we can start removes.\n+        parseRemoveResearches(object, researchMap);\n+\n+        // After we've loaded all researches, we can then try to assign child relationships.\n+        // This is also the phase where we'd try to support back-calculating university levels for researches without them/with incorrect ones.\n+        IGlobalResearchTree researchTree = calcResearchTree(researchMap);\n+\n+        Log.getLogger().info(\"Loaded \" + researchMap.values().size() + \" recipes for \" + researchTree.getBranches().size() + \" research branches\");\n+    }\n+\n+    private Map<String, ResearchEffectCategory> parseResearchEffects(Map<ResourceLocation, JsonElement> object)\n+    {\n+        final Map<String, ResearchEffectCategory> effectCategories = new HashMap<>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            JsonObject effectJson = entry.getValue().getAsJsonObject();\n+\n+            if (effectJson.has(RESEARCH_EFFECT_PROP) && effectJson.has(RESEARCH_ID_PROP)\n+                  && effectJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString()\n+                  &&  effectJson.has(RESEARCH_EFFECT_TYPE_PROP) && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).isJsonPrimitive()\n+                  && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsJsonPrimitive().isString())\n+            {\n+                final ResearchEffectCategory category;\n+                if((effectJson.has(RESEARCH_NAME_PROP) && effectJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString()))\n+                {\n+                    category = new ResearchEffectCategory(effectJson.get(RESEARCH_ID_PROP).getAsString(), effectJson.get(RESEARCH_NAME_PROP).getAsString(), effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsString());\n+                }\n+                else\n+                {\n+                    category = new ResearchEffectCategory(effectJson.get(RESEARCH_ID_PROP).getAsString(), effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsString());\n+                }\n+                if (effectJson.has(RESEARCH_EFFECT_LEVELS_PROP) && effectJson.get(RESEARCH_EFFECT_LEVELS_PROP).isJsonArray())\n+                {\n+                    for(JsonElement levelElement : effectJson.get(RESEARCH_EFFECT_LEVELS_PROP).getAsJsonArray())\n+                    {\n+                        if(levelElement.isJsonPrimitive() && levelElement.getAsJsonPrimitive().isNumber())\n+                        {\n+                            category.add(levelElement.getAsNumber().floatValue());\n+                        }\n+                    }\n+                }\n+                // If no levels are defined, assume temporarily boolean, and store on/off.\n+                else\n+                {\n+                    category.add(1f);\n+                }\n+                effectCategories.put(category.getId(), category);\n+            }\n+        }\n+        return effectCategories;\n+    }\n+\n+    private Map<String, GlobalResearch> parseResearches(Map<ResourceLocation, JsonElement> object, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        final Map<String, GlobalResearch> researchMap = new HashMap<String, GlobalResearch>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            //Note that we don't actually use the resource folders or file names; those are only for organization purposes.\n+            JsonObject researchJson = entry.getValue().getAsJsonObject();\n+\n+            //Can ignore those effect jsons now:\n+            if (researchJson.has(RESEARCH_EFFECT_PROP))\n+            {\n+                continue;\n+            }\n+\n+            //Check for absolute minimum required types, and log as warning if malformed.\n+            if (MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get() &&\n+                  !(researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive()\n+                    && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+                  || !(researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive()\n+                         && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString()))\n+            {\n+                Log.getLogger().warn(entry.getKey() + \"missing required fields\");\n+                continue;\n+            }\n+\n+            //Missing university level data may not necessarily be a show-stopper, but it is worth warning about.\n+            if(MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get() &&\n+                 (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isNumber()))\n+            {\n+                Log.getLogger().warn(entry.getKey() + \"has invalid or no university level requirements.\");\n+            }\n+\n+            //Next, check for remove-type recipes.  We don't want to accidentally add them just because they have too much detail.\n+            if ((researchJson.has(RESEARCH_REMOVE_PROP) && researchJson.get(RESEARCH_REMOVE_PROP).getAsJsonPrimitive().isBoolean())\n+                  && researchJson.get(RESEARCH_REMOVE_PROP).getAsJsonPrimitive().getAsBoolean())\n+            {\n+                continue;\n+            }\n+\n+            //Pretty much anything else should be allowed: it's plausible pack designers may want a research type without a cost or effect.\n+            //It's possible we could dynamically derive university levels from parents, but doing so as a rule will prevent research branches that start at T2 or deeper.\n+            final GlobalResearch research = new GlobalResearch(researchJson, entry.getKey(), effectCategories);\n+            if(MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get())\n+            {\n+                Log.getLogger().info(\"Parsed research recipe from \" + entry.getKey() + \" [\" + research.getBranch() + \"/\" + research.getId() + \"]\");\n+                Log.getLogger().info(research.getDesc() + \" at \" + research.getDepth() + \"/\" + research.getParent());\n+                for(IResearchRequirement requirement : research.getResearchRequirement())\n+                {\n+                    Log.getLogger().info(\"Requirement: \" + requirement.getDesc());\n+                }\n+                for(ItemStorage itemS : research.getCostList())\n+                {\n+                    Log.getLogger().info(\"Cost: \" + itemS.toString());\n+                }\n+                for(IResearchEffect researchEffect : research.getEffects())\n+                {\n+                    Log.getLogger().info(\"Effect: \" + researchEffect.getId() + \" \" + researchEffect.getDesc());\n+                }\n+            }\n+            researchMap.put(research.getId(), research);\n+        }\n+        return researchMap;\n+    }\n+\n+    private void parseRemoveResearches(Map<ResourceLocation, JsonElement> object, Map<String, GlobalResearch> researchMap)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 176}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mzk4MTU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NjozNlrOIDcmCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NjozNlrOIDcmCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NTEzMQ==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540485131", "createdAt": "2020-12-10T20:46:36Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/datalistener/ResearchListener.java", "diffHunk": "@@ -0,0 +1,233 @@\n+package com.minecolonies.coremod.datalistener;\n+\n+import com.google.gson.*;\n+import com.minecolonies.api.MinecoloniesAPIProxy;\n+import com.minecolonies.api.configuration.Configuration;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.research.IGlobalResearch;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.Log;\n+\n+import com.minecolonies.coremod.research.GlobalResearch;\n+import com.minecolonies.coremod.research.ResearchEffectCategory;\n+import jdk.nashorn.internal.objects.Global;\n+import net.minecraft.client.resources.JsonReloadListener;\n+import net.minecraft.profiler.IProfiler;\n+import net.minecraft.resources.IResourceManager;\n+import net.minecraft.util.ResourceLocation;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static com.minecolonies.coremod.research.GlobalResearch.*;\n+import static com.minecolonies.coremod.research.ResearchEffectCategory.*;\n+\n+/**\n+ * Loader for Json based crafter specific recipes\n+ */\n+public class ResearchListener extends JsonReloadListener\n+{\n+    private static final Gson GSON = new GsonBuilder().setPrettyPrinting().disableHtmlEscaping().create();\n+\n+    /**\n+     * Set up the core loading, with the directory in the datapack that contains this data\n+     * Directory is: <namespace>/researches/<path>\n+     */\n+    public ResearchListener()\n+    {\n+        super(GSON, \"researches\");\n+    }\n+\n+    @Override\n+    protected void apply(final Map<ResourceLocation, JsonElement> object, final IResourceManager resourceManagerIn, final IProfiler profilerIn)\n+    {\n+        Log.getLogger().info(\"Beginning load of research for University.\");\n+\n+        // First, index and map out all research effects.  We need to be able to map them before creating Researches themselves.\n+        // Because datapacks, can't assume effects are in one specific location.\n+        // For now, we'll populate relative levels when doing so, but we probably want to do that dynamically.\n+        Map<String, ResearchEffectCategory> effectCategories = parseResearchEffects(object);\n+\n+        // Next, populate a new map of IGlobalResearches, identified by researchID.\n+        // This allows us to figure out root/branch relationships more sanely.\n+        // We need the effectCategories and levels to do this.\n+        Map<String, GlobalResearch> researchMap = parseResearches(object, effectCategories);\n+\n+        // We /shouldn't/ get any removes before the Research they're trying to remove exists,\n+        // but it can happen if multiple datapacks affect each other.\n+        // So now that we've loaded everything, then we can start removes.\n+        parseRemoveResearches(object, researchMap);\n+\n+        // After we've loaded all researches, we can then try to assign child relationships.\n+        // This is also the phase where we'd try to support back-calculating university levels for researches without them/with incorrect ones.\n+        IGlobalResearchTree researchTree = calcResearchTree(researchMap);\n+\n+        Log.getLogger().info(\"Loaded \" + researchMap.values().size() + \" recipes for \" + researchTree.getBranches().size() + \" research branches\");\n+    }\n+\n+    private Map<String, ResearchEffectCategory> parseResearchEffects(Map<ResourceLocation, JsonElement> object)\n+    {\n+        final Map<String, ResearchEffectCategory> effectCategories = new HashMap<>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            JsonObject effectJson = entry.getValue().getAsJsonObject();\n+\n+            if (effectJson.has(RESEARCH_EFFECT_PROP) && effectJson.has(RESEARCH_ID_PROP)\n+                  && effectJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString()\n+                  &&  effectJson.has(RESEARCH_EFFECT_TYPE_PROP) && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).isJsonPrimitive()\n+                  && effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsJsonPrimitive().isString())\n+            {\n+                final ResearchEffectCategory category;\n+                if((effectJson.has(RESEARCH_NAME_PROP) && effectJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && effectJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString()))\n+                {\n+                    category = new ResearchEffectCategory(effectJson.get(RESEARCH_ID_PROP).getAsString(), effectJson.get(RESEARCH_NAME_PROP).getAsString(), effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsString());\n+                }\n+                else\n+                {\n+                    category = new ResearchEffectCategory(effectJson.get(RESEARCH_ID_PROP).getAsString(), effectJson.get(RESEARCH_EFFECT_TYPE_PROP).getAsString());\n+                }\n+                if (effectJson.has(RESEARCH_EFFECT_LEVELS_PROP) && effectJson.get(RESEARCH_EFFECT_LEVELS_PROP).isJsonArray())\n+                {\n+                    for(JsonElement levelElement : effectJson.get(RESEARCH_EFFECT_LEVELS_PROP).getAsJsonArray())\n+                    {\n+                        if(levelElement.isJsonPrimitive() && levelElement.getAsJsonPrimitive().isNumber())\n+                        {\n+                            category.add(levelElement.getAsNumber().floatValue());\n+                        }\n+                    }\n+                }\n+                // If no levels are defined, assume temporarily boolean, and store on/off.\n+                else\n+                {\n+                    category.add(1f);\n+                }\n+                effectCategories.put(category.getId(), category);\n+            }\n+        }\n+        return effectCategories;\n+    }\n+\n+    private Map<String, GlobalResearch> parseResearches(Map<ResourceLocation, JsonElement> object, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        final Map<String, GlobalResearch> researchMap = new HashMap<String, GlobalResearch>();\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            //Note that we don't actually use the resource folders or file names; those are only for organization purposes.\n+            JsonObject researchJson = entry.getValue().getAsJsonObject();\n+\n+            //Can ignore those effect jsons now:\n+            if (researchJson.has(RESEARCH_EFFECT_PROP))\n+            {\n+                continue;\n+            }\n+\n+            //Check for absolute minimum required types, and log as warning if malformed.\n+            if (MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get() &&\n+                  !(researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive()\n+                    && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+                  || !(researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive()\n+                         && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString()))\n+            {\n+                Log.getLogger().warn(entry.getKey() + \"missing required fields\");\n+                continue;\n+            }\n+\n+            //Missing university level data may not necessarily be a show-stopper, but it is worth warning about.\n+            if(MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get() &&\n+                 (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isNumber()))\n+            {\n+                Log.getLogger().warn(entry.getKey() + \"has invalid or no university level requirements.\");\n+            }\n+\n+            //Next, check for remove-type recipes.  We don't want to accidentally add them just because they have too much detail.\n+            if ((researchJson.has(RESEARCH_REMOVE_PROP) && researchJson.get(RESEARCH_REMOVE_PROP).getAsJsonPrimitive().isBoolean())\n+                  && researchJson.get(RESEARCH_REMOVE_PROP).getAsJsonPrimitive().getAsBoolean())\n+            {\n+                continue;\n+            }\n+\n+            //Pretty much anything else should be allowed: it's plausible pack designers may want a research type without a cost or effect.\n+            //It's possible we could dynamically derive university levels from parents, but doing so as a rule will prevent research branches that start at T2 or deeper.\n+            final GlobalResearch research = new GlobalResearch(researchJson, entry.getKey(), effectCategories);\n+            if(MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchDebugLog.get())\n+            {\n+                Log.getLogger().info(\"Parsed research recipe from \" + entry.getKey() + \" [\" + research.getBranch() + \"/\" + research.getId() + \"]\");\n+                Log.getLogger().info(research.getDesc() + \" at \" + research.getDepth() + \"/\" + research.getParent());\n+                for(IResearchRequirement requirement : research.getResearchRequirement())\n+                {\n+                    Log.getLogger().info(\"Requirement: \" + requirement.getDesc());\n+                }\n+                for(ItemStorage itemS : research.getCostList())\n+                {\n+                    Log.getLogger().info(\"Cost: \" + itemS.toString());\n+                }\n+                for(IResearchEffect researchEffect : research.getEffects())\n+                {\n+                    Log.getLogger().info(\"Effect: \" + researchEffect.getId() + \" \" + researchEffect.getDesc());\n+                }\n+            }\n+            researchMap.put(research.getId(), research);\n+        }\n+        return researchMap;\n+    }\n+\n+    private void parseRemoveResearches(Map<ResourceLocation, JsonElement> object, Map<String, GlobalResearch> researchMap)\n+    {\n+        for(final Map.Entry<ResourceLocation, JsonElement> entry : object.entrySet())\n+        {\n+            JsonObject researchJson = entry.getValue().getAsJsonObject();\n+\n+            //not allowing duplicate id across separate branches for now, so we just need removes and Id.\n+            if ((researchJson.has(RESEARCH_REMOVE_PROP) && researchJson.get(RESEARCH_REMOVE_PROP).getAsJsonPrimitive().isBoolean())\n+                  && researchJson.get(RESEARCH_REMOVE_PROP).getAsJsonPrimitive().getAsBoolean()\n+                  && researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString()\n+                /*&& (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())*/)\n+            {\n+                if(researchMap.containsKey(researchJson.get(RESEARCH_ID_PROP).getAsString()))\n+                {\n+                    researchMap.remove(researchJson.get(RESEARCH_ID_PROP).getAsString());\n+                }\n+            }\n+        }\n+    }\n+\n+    private IGlobalResearchTree calcResearchTree(Map<String, GlobalResearch> researchMap)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 196}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA2MTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowNzoxNlrOIDdUHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowNzoxNlrOIDdUHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NjkyNg==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540496926", "createdAt": "2020-12-10T21:07:16Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -262,8 +401,239 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect<?>> getEffects()\n+    {\n+        return effects;\n+    }\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, ResourceLocation resourceLocation, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    private String getResearchId(JsonObject researchJson, ResourceLocation resourceLocation)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 396}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA2NDg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODowOVrOIDdWBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODowOVrOIDdWBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NzQxMw==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540497413", "createdAt": "2020-12-10T21:08:09Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -262,8 +401,239 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect<?>> getEffects()\n+    {\n+        return effects;\n+    }\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, ResourceLocation resourceLocation, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    private String getResearchId(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    private String getResearchName(JsonObject researchJson)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 409}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA2NTUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODoyMFrOIDdWaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODoyMFrOIDdWaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NzUxNQ==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540497515", "createdAt": "2020-12-10T21:08:20Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -262,8 +401,239 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect<?>> getEffects()\n+    {\n+        return effects;\n+    }\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, ResourceLocation resourceLocation, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    private String getResearchId(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    private String getResearchName(JsonObject researchJson)\n     {\n-        return effect;\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private String getBranch(JsonObject researchJson, ResourceLocation resourceLocation)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 422}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA2NjM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODozNVrOIDdW8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODozNVrOIDdW8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NzY1MQ==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540497651", "createdAt": "2020-12-10T21:08:35Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -262,8 +401,239 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect<?>> getEffects()\n+    {\n+        return effects;\n+    }\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, ResourceLocation resourceLocation, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    private String getResearchId(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    private String getResearchName(JsonObject researchJson)\n     {\n-        return effect;\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private String getBranch(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_BRANCH_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research Branch for\" + resourceLocation);\n+            return \"parserrors\";\n+        }\n+    }\n+\n+    private int getUniversityLevel(JsonObject researchJson)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 435}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA2Njk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODo0M1rOIDdXUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODo0M1rOIDdXUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5Nzc0NQ==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540497745", "createdAt": "2020-12-10T21:08:43Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -262,8 +401,239 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect<?>> getEffects()\n+    {\n+        return effects;\n+    }\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, ResourceLocation resourceLocation, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    private String getResearchId(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    private String getResearchName(JsonObject researchJson)\n     {\n-        return effect;\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private String getBranch(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_BRANCH_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research Branch for\" + resourceLocation);\n+            return \"parserrors\";\n+        }\n+    }\n+\n+    private int getUniversityLevel(JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsJsonPrimitive().isNumber())\n+        {\n+            return researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsNumber().intValue();\n+        }\n+        else\n+        {\n+            Log.getLogger().info(\"No declared university level for \" + this.branch + \"/\" + this.id );\n+            return 1;\n+        }\n+    }\n+\n+    private String getParent(JsonObject researchJson)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 448}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA2NzY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODo1NVrOIDdXxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMTowODo1NVrOIDdXxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5Nzg2MA==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540497860", "createdAt": "2020-12-10T21:08:55Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -262,8 +401,239 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect<?>> getEffects()\n+    {\n+        return effects;\n+    }\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, ResourceLocation resourceLocation, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    private String getResearchId(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    private String getResearchName(JsonObject researchJson)\n     {\n-        return effect;\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private String getBranch(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_BRANCH_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research Branch for\" + resourceLocation);\n+            return \"parserrors\";\n+        }\n+    }\n+\n+    private int getUniversityLevel(JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsJsonPrimitive().isNumber())\n+        {\n+            return researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsNumber().intValue();\n+        }\n+        else\n+        {\n+            Log.getLogger().info(\"No declared university level for \" + this.branch + \"/\" + this.id );\n+            return 1;\n+        }\n+    }\n+\n+    private String getParent(JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_PARENT_PROP) && researchJson.get(RESEARCH_PARENT_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_PARENT_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_PARENT_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private boolean getBooleanSafe(JsonObject researchJson, String property)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 460}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA3MTk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMDowMVrOIDdaPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMDowMVrOIDdaPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5ODQ5Mw==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540498493", "createdAt": "2020-12-10T21:10:01Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -262,8 +401,239 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect<?>> getEffects()\n+    {\n+        return effects;\n+    }\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, ResourceLocation resourceLocation, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    private String getResearchId(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    private String getResearchName(JsonObject researchJson)\n     {\n-        return effect;\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private String getBranch(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_BRANCH_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research Branch for\" + resourceLocation);\n+            return \"parserrors\";\n+        }\n+    }\n+\n+    private int getUniversityLevel(JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsJsonPrimitive().isNumber())\n+        {\n+            return researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsNumber().intValue();\n+        }\n+        else\n+        {\n+            Log.getLogger().info(\"No declared university level for \" + this.branch + \"/\" + this.id );\n+            return 1;\n+        }\n+    }\n+\n+    private String getParent(JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_PARENT_PROP) && researchJson.get(RESEARCH_PARENT_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_PARENT_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_PARENT_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private boolean getBooleanSafe(JsonObject researchJson, String property)\n+    {\n+        if (researchJson.has(property) && researchJson.get(property).isJsonPrimitive() && researchJson.get(property).getAsJsonPrimitive().isBoolean())\n+        {\n+            return researchJson.get(property).getAsBoolean();\n+        }\n+        else\n+        {\n+            return false;\n+        }\n+    }\n+\n+    private void parseRequirements(JsonObject researchJson)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 472}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA3MjcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMDoxMlrOIDdamw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMDoxMlrOIDdamw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5ODU4Nw==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540498587", "createdAt": "2020-12-10T21:10:12Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -262,8 +401,239 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect<?>> getEffects()\n+    {\n+        return effects;\n+    }\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, ResourceLocation resourceLocation, Map<String, ResearchEffectCategory> effectCategories)\n+    {\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    private String getResearchId(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    private String getResearchName(JsonObject researchJson)\n     {\n-        return effect;\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private String getBranch(JsonObject researchJson, ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_BRANCH_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research Branch for\" + resourceLocation);\n+            return \"parserrors\";\n+        }\n+    }\n+\n+    private int getUniversityLevel(JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsJsonPrimitive().isNumber())\n+        {\n+            return researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsNumber().intValue();\n+        }\n+        else\n+        {\n+            Log.getLogger().info(\"No declared university level for \" + this.branch + \"/\" + this.id );\n+            return 1;\n+        }\n+    }\n+\n+    private String getParent(JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_PARENT_PROP) && researchJson.get(RESEARCH_PARENT_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_PARENT_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_PARENT_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    private boolean getBooleanSafe(JsonObject researchJson, String property)\n+    {\n+        if (researchJson.has(property) && researchJson.get(property).isJsonPrimitive() && researchJson.get(property).getAsJsonPrimitive().isBoolean())\n+        {\n+            return researchJson.get(property).getAsBoolean();\n+        }\n+        else\n+        {\n+            return false;\n+        }\n+    }\n+\n+    private void parseRequirements(JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_REQUIREMENTS_PROP) && researchJson.get(RESEARCH_REQUIREMENTS_PROP).isJsonArray())\n+        {\n+            for (final JsonElement reqArrayElement : researchJson.get(RESEARCH_REQUIREMENTS_PROP).getAsJsonArray())\n+            {\n+                // ItemRequirements.  If no count, assumes 1x.\n+                if(reqArrayElement.isJsonObject() && reqArrayElement.getAsJsonObject().has(RESEARCH_ITEM_NAME_PROP) &&\n+                     reqArrayElement.getAsJsonObject().get(RESEARCH_ITEM_NAME_PROP).isJsonPrimitive() && reqArrayElement.getAsJsonObject().get(RESEARCH_ITEM_NAME_PROP).getAsJsonPrimitive().isString())\n+                {\n+                    final String[] itemName = reqArrayElement.getAsJsonObject().get(RESEARCH_ITEM_NAME_PROP).getAsString().split(\":\");\n+                    final Item item;\n+                    if  (itemName.length == 2)\n+                    {\n+                        item = ForgeRegistries.ITEMS.getValue(new ResourceLocation(itemName[0], itemName[1]));\n+                    }\n+                    else if (itemName.length == 1)\n+                    {\n+                        item = ForgeRegistries.ITEMS.getValue(new ResourceLocation(\"minecraft\", itemName[0]));\n+                    }\n+                    else\n+                    {\n+                        item = ForgeRegistries.ITEMS.getValue(new ResourceLocation(\"minecraft\", \"cobblestone\"));\n+                    }\n+                    final ItemStack itemStack = new ItemStack(item);\n+                    if(reqArrayElement.getAsJsonObject().has(RESEARCH_QUANTITY_PROP) && reqArrayElement.getAsJsonObject().get(RESEARCH_QUANTITY_PROP).isJsonPrimitive()\n+                         && reqArrayElement.getAsJsonObject().get(RESEARCH_QUANTITY_PROP).getAsJsonPrimitive().isNumber())\n+                    {\n+                        itemStack.setCount(reqArrayElement.getAsJsonObject().get(RESEARCH_QUANTITY_PROP).getAsNumber().intValue());\n+                    }\n+                    this.costList.add(new ItemStorage(itemStack, false));\n+                }\n+                // Building Requirements.  If no level, assume 1x.\n+                else if(reqArrayElement.isJsonObject() && reqArrayElement.getAsJsonObject().has(RESEARCH_REQUIRED_BUILDING_PROP) &&\n+                          reqArrayElement.getAsJsonObject().get(RESEARCH_REQUIRED_BUILDING_PROP).isJsonPrimitive() && reqArrayElement.getAsJsonObject().get(RESEARCH_REQUIRED_BUILDING_PROP).getAsJsonPrimitive().isString())\n+                {\n+                    final int level;\n+                    if(reqArrayElement.getAsJsonObject().has(RESEARCH_LEVEL_PROP) && reqArrayElement.getAsJsonObject().get(RESEARCH_LEVEL_PROP).isJsonPrimitive()\n+                         && reqArrayElement.getAsJsonObject().get(RESEARCH_LEVEL_PROP).getAsJsonPrimitive().isNumber())\n+                    {\n+                        level = reqArrayElement.getAsJsonObject().get(RESEARCH_LEVEL_PROP).getAsNumber().intValue();\n+                    }\n+                    else\n+                    {\n+                        level = 1;\n+                    }\n+                    BuildingResearchRequirement requirement = new BuildingResearchRequirement(level, reqArrayElement.getAsJsonObject().get(RESEARCH_REQUIRED_BUILDING_PROP).getAsString());\n+                    this.requirements.add(requirement);\n+                }\n+                // Research Requirements.  Only partially implemented.\n+                else if(reqArrayElement.isJsonObject() && reqArrayElement.getAsJsonObject().has(RESEARCH_REQUIRED_RESEARCH_PROP) &&\n+                          reqArrayElement.getAsJsonObject().get(RESEARCH_REQUIRED_RESEARCH_PROP).isJsonPrimitive() && reqArrayElement.getAsJsonObject().get(RESEARCH_REQUIRED_RESEARCH_PROP).getAsJsonPrimitive().isString())\n+                {\n+                    this.requirements.add(new ResearchResearchRequirement(reqArrayElement.getAsJsonObject().get(RESEARCH_REQUIRED_RESEARCH_PROP).getAsString(), this.name));\n+                }\n+                else\n+                {\n+                    Log.getLogger().warn(\"Invalid Research Requirement formatting for \" + this.branch + \"/\" + this.id);\n+                }\n+            }\n+        }\n+    }\n+\n+    private void parseEffects(JsonObject researchJson, Map<String, ResearchEffectCategory> effectCategories)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 535}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDA3Njc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMDo1M1rOIDdcpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMDo1M1rOIDdcpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5OTEwOQ==", "bodyText": "javadoc on all fields :)", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540499109", "createdAt": "2020-12-10T21:10:53Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearchTree.java", "diffHunk": "@@ -21,18 +30,37 @@\n public class GlobalResearchTree implements IGlobalResearchTree\n {\n     /**\n-     * The map containing all researches by ID.\n+     * The map containing all researches by ID and branch.\n      */\n     private final Map<String, Map<String, IGlobalResearch>> researchTree = new HashMap<>();\n \n+    private final Map<ResourceLocation, String> researchResourceLocations = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDEwNDY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/MultiplierModifierResearchEffect.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxNzozNFrOIDdslQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMTo0NTo1M1rOIDlXPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMzE4OQ==", "bodyText": "maybe displayValue is better", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540503189", "createdAt": "2020-12-10T21:17:34Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/MultiplierModifierResearchEffect.java", "diffHunk": "@@ -15,16 +16,22 @@\n      */\n     private double effect;\n \n+    /**\n+     * The relative value of the effect, for display purposes.\n+     */\n+    private double relativeEffect;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYyODc5OQ==", "bodyText": "Right now, both are fed into the translationtexts, with relativeEffects simply the first argument and absolute effects the second. They only translation that displays absolute values for English is fleeingspeedaddition (which applies a potion effect, where absolute values make more sense).\nBut displayEffect is probably more logical of a separation.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540628799", "createdAt": "2020-12-11T01:45:53Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/research/MultiplierModifierResearchEffect.java", "diffHunk": "@@ -15,16 +16,22 @@\n      */\n     private double effect;\n \n+    /**\n+     * The relative value of the effect, for display purposes.\n+     */\n+    private double relativeEffect;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMzE4OQ=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDEwNTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/ResearchEffectCategory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxNzo0NVrOIDdtEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxNzo0NVrOIDdtEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMzMxNA==", "bodyText": "javadoc in this class/above", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540503314", "createdAt": "2020-12-10T21:17:45Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/ResearchEffectCategory.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package com.minecolonies.coremod.research;\n+\n+import com.minecolonies.api.util.constant.TranslationConstants;\n+import net.minecraft.util.text.TranslationTextComponent;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class ResearchEffectCategory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDEzNDI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/UnlockAbilityResearchEffect.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToyNDo1NVrOIDd9jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMjoxNTowMFrOIDl_Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwNzUzNQ==", "bodyText": "before we had the two different \"effects\" which were unlock yes/No or unlock with value. Now we can combine them as int as you kinda did here which makes me wonder if we actually need different \"effects\". As the way I see it its just a rich information return of the research, and not the actual effect of the research. In that case we wouldnt need effect lists at all/neither any of the current \"effect\" implementation", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540507535", "createdAt": "2020-12-10T21:24:55Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/research/UnlockAbilityResearchEffect.java", "diffHunk": "@@ -13,36 +14,36 @@\n     /**\n      * Whether the effect has been unlocked or not.\n      */\n-    private boolean unlocked;\n+    private int level;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYzOTA2Ng==", "bodyText": "There's technically four, split between the Addition and Multiplication floats, and the UnlockAbility, UnlockBuilding booleans.  From a logical perspective they can definitely be merged into a single implementation; it's as much a matter from presentation and programming maintenance that it's a question.  Addition and Multiplication have different approaches to translation arguments due to different magnitudes of their most common values, for example.\nDefinitely can be reduced down if that simplifies matters for you all, though.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r540639066", "createdAt": "2020-12-11T02:15:00Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/research/UnlockAbilityResearchEffect.java", "diffHunk": "@@ -13,36 +14,36 @@\n     /**\n      * Whether the effect has been unlocked or not.\n      */\n-    private boolean unlocked;\n+    private int level;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwNzUzNQ=="}, "originalCommit": {"oid": "1fd3ef00855bc49555a11acca10d891539dd68bc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU0MjQzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0MDoxMVrOIE2nGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0MDoxMVrOIE2nGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk1OTk2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate at which research is completed. The default value corresponds to ~1h, 2h, 4h, 8h, 16h, and 32h for each tier respectively. \\n High values will progress faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",\n          \n          \n            \n              \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate at which research is completed. The default value corresponds to ~1h, 2h, 4h, 8h, 16h, and 32h for each tier respectively. \\n High values will progress faster. \\n Generally only recommended for packs that increase research unlock costs or add many additional researches.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541959961", "createdAt": "2020-12-13T16:40:11Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -38,6 +38,15 @@\n   \"minecolonies.config.badvisitorchance\": \"Bad recruitment chance\",\n   \"minecolonies.config.badvisitorchance.comment\": \"Chance to get an evil tavern visitor which can run off with the resources, in % [Default: 2]\",\n \n+  \"minecolonies.config.researchspeedmultiplier\": \"Research Speed Multiplier\",\n+  \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate at which research is completed. The default value corresponds to ~1h, 2h, 4h, 8h, 16h, and 32h for each tier respectively. \\n High values will progress faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU0Mzk2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0MToyMFrOIE2nyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0MToyMFrOIE2nyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MDEzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"minecolonies.config.researchdebuglog.comment\": \"Significantly increases information logged during World Load related to Research Data Packs.\",\n          \n          \n            \n              \"minecolonies.config.researchdebuglog.comment\": \"Significantly increases the amount of information related to research datapacks that is logged during the world load.\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541960138", "createdAt": "2020-12-13T16:41:20Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -38,6 +38,15 @@\n   \"minecolonies.config.badvisitorchance\": \"Bad recruitment chance\",\n   \"minecolonies.config.badvisitorchance.comment\": \"Chance to get an evil tavern visitor which can run off with the resources, in % [Default: 2]\",\n \n+  \"minecolonies.config.researchspeedmultiplier\": \"Research Speed Multiplier\",\n+  \"minecolonies.config.researchspeedmultiplier.comment\": \"Rate at which research is completed. The default value corresponds to ~1h, 2h, 4h, 8h, 16h, and 32h for each tier respectively. \\n High values will progress faster. \\n Generally only recommended for packs that increase research unlock costs, or add many additional researches.\",\n+\n+  \"minecolonies.config.researchcreativecompletion\": \"Research Creative Completion\",\n+  \"minecolonies.config.researchcreativecompletion.comment\": \"Allows automatic and (near) instant completion of research for players in creative mode.  If false, creative players will still be able to begin researches, but will have normal progress rates.\",\n+\n+  \"minecolonies.config.researchdebuglog\": \"Log Research Data\",\n+  \"minecolonies.config.researchdebuglog.comment\": \"Significantly increases information logged during World Load related to Research Data Packs.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU0NTE4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0MjowMFrOIE2oUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0MjowMFrOIE2oUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MDI3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"University Building requires upgrade.\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low University level\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541960272", "createdAt": "2020-12-13T16:42:00Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1725,7 +1736,7 @@\n   \"com.minecolonies.coremod.research.research.toomanyinprogress\": \"Too many researches already in progress\",\n   \"com.minecolonies.coremod.research.research.notenoughresources\": \"Missing resources\",\n   \"com.minecolonies.coremod.research.research.missingrequirements\": \"Missing Requirements\",\n-  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"Too low building level\",\n+  \"com.minecolonies.coremod.research.research.buildingleveltoolow\": \"University Building requires upgrade.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU0Nzc4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0MzozOVrOIE2paQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0MzozOVrOIE2paQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MDU1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n          \n          \n            \n              \"com.minecolonies.research.multishot.name\": \"Multishot\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541960553", "createdAt": "2020-12-13T16:43:39Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1MDQ1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0NToxOVrOIE2qmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0NToxOVrOIE2qmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MDg1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n          \n          \n            \n              \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Damage +%d\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541960859", "createdAt": "2020-12-13T16:45:19Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 228}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1MTE1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0NTo1NVrOIE2q7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0NTo1NVrOIE2q7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MDk0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n          \n          \n            \n              \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Raider Swarm Resistance\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541960943", "createdAt": "2020-12-13T16:45:55Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 231}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1MjUyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0Njo1MVrOIE2rhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0Njo1MVrOIE2rhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTA5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.morescrollsunlock.description\": \"Enchanter Learns Scrolls to Speed Workers and Summon Guards\",\n          \n          \n            \n              \"com.minecolonies.research.effects.morescrollsunlock.description\": \"Enchanter Learns Scroll Recipes to Locate Workers and Summon Guards\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961095", "createdAt": "2020-12-13T16:46:51Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Guards Learn Whirlwind Attack\",\n+  \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone | Bakers Cook Chorus Bread\",\n+  \"com.minecolonies.research.effects.morescrollsunlock.description\": \"Enchanter Learns Scrolls to Speed Workers and Summon Guards\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 264}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1Mjk1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0NzowMFrOIE2rtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0NzowMFrOIE2rtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTE0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work Even In Rain\",\n          \n          \n            \n              \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work In Rain\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961143", "createdAt": "2020-12-13T16:47:00Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Guards Learn Whirlwind Attack\",\n+  \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone | Bakers Cook Chorus Bread\",\n+  \"com.minecolonies.research.effects.morescrollsunlock.description\": \"Enchanter Learns Scrolls to Speed Workers and Summon Guards\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work Even In Rain\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 266}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1MzczOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0NzoxM1rOIE2sDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0NzoxM1rOIE2sDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTIyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs To Target Them\",\n          \n          \n            \n              \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs to Target Them\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961229", "createdAt": "2020-12-13T16:47:13Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Guards Learn Whirlwind Attack\",\n+  \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone | Bakers Cook Chorus Bread\",\n+  \"com.minecolonies.research.effects.morescrollsunlock.description\": \"Enchanter Learns Scrolls to Speed Workers and Summon Guards\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work Even In Rain\",\n+  \"com.minecolonies.research.effects.retreatunlock.description\": \"Guards Flee Under 20%% HP\",\n+  \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs To Target Them\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 268}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1NDUxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0Nzo0NFrOIE2sXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0Nzo0NFrOIE2sXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTMxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n          \n          \n            \n              \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Two Plants at Once\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961311", "createdAt": "2020-12-13T16:47:44Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 259}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1NDkzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0ODoxNFrOIE2slg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0ODoxNFrOIE2slg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTM2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",\n          \n          \n            \n              \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Have Fire and Lava Immunity\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961366", "createdAt": "2020-12-13T16:48:14Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 261}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1NTQ3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0ODozOFrOIE2s0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0ODozOFrOIE2s0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTQyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n          \n          \n            \n              \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Guard Armor Durability +%3$d%%\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961427", "createdAt": "2020-12-13T16:48:38Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 244}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1Njk0OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0OTozOVrOIE2teg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0OTozOVrOIE2teg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTU5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n          \n          \n            \n              \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Minimum Stock %3$d%% More\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961594", "createdAt": "2020-12-13T16:49:39Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 246}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1NzQxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0OTo1NVrOIE2trw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo0OTo1NVrOIE2trw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTY0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n          \n          \n            \n              \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Can Learn +%3$d%% More Recipes\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961647", "createdAt": "2020-12-13T16:49:55Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 248}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1ODAyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MDozMFrOIE2t9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MDozMFrOIE2t9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTcxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n          \n          \n            \n              \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Shield Blocking Chance +%3$d%%\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961717", "createdAt": "2020-12-13T16:50:30Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 247}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU1ODQ4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MDo1MlrOIE2uKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MDo1MlrOIE2uKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTc2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone | Bakers Cook Chorus Bread\",\n          \n          \n            \n              \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone Recipe | Bakers Learn Chorus Bread Recipe\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961769", "createdAt": "2020-12-13T16:50:52Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Guards Learn Whirlwind Attack\",\n+  \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone | Bakers Cook Chorus Bread\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 263}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU2MDQ3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MTo1OVrOIE2vAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MTo1OVrOIE2vAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MTk4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Guards Learn Whirlwind Attack\",\n          \n          \n            \n              \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Knights Learn Special Attack Which Damages and Knocks Back Nearby Enemies\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541961987", "createdAt": "2020-12-13T16:51:59Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Guards Learn Whirlwind Attack\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 262}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU2MTQxOnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MjoyN1rOIE2vaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MjoyN1rOIE2vaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MjA5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.blockhutarchery.description\": \"Unlocks Archery Building\",\n          \n          \n            \n              \"com.minecolonies.research.effects.blockhutarchery.description\": \"Unlocks Archery\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541962091", "createdAt": "2020-12-13T16:52:27Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Guards Learn Whirlwind Attack\",\n+  \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone | Bakers Cook Chorus Bread\",\n+  \"com.minecolonies.research.effects.morescrollsunlock.description\": \"Enchanter Learns Scrolls to Speed Workers and Summon Guards\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work Even In Rain\",\n+  \"com.minecolonies.research.effects.retreatunlock.description\": \"Guards Flee Under 20%% HP\",\n+  \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs To Target Them\",\n+\n+  \"com.minecolonies.research.effects.blockhutcomposter.description\": \"Unlocks Composter\",\n+  \"com.minecolonies.research.effects.blockhutflorist.description\": \"Unlocks Florist\",\n+  \"com.minecolonies.research.effects.blockhutschool.description\": \"Unlocks School\",\n+  \"com.minecolonies.research.effects.blockhutblacksmith.description\": \"Unlocks Blacksmith\",\n+  \"com.minecolonies.research.effects.blockhutsmeltery.description\": \"Unlocks Smeltery\",\n+  \"com.minecolonies.research.effects.blockhutarchery.description\": \"Unlocks Archery Building\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 275}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDU2MTU5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MjozNVrOIE2vfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNjo1MjozNVrOIE2vfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2MjExMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.research.effects.blockhutcombatacademy.description\": \"Unlock Combat Academy\",\n          \n          \n            \n              \"com.minecolonies.research.effects.blockhutcombatacademy.description\": \"Unlocks Combat Academy\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r541962110", "createdAt": "2020-12-13T16:52:35Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1931,6 +1942,237 @@\n   \"com.minecolonies.coremod.gui.happiness.negative\": \"Negative\",\n   \"com.minecolonies.coremod.gui.happiness.slightlynegative\": \"Slightly Negative\",\n   \"com.minecolonies.coremod.gui.happiness.neutral\": \"Neutral\",\n-  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\"\n-\n+  \"com.minecolonies.coremod.gui.happiness.positive\": \"Positive\",\n+\n+  \"com.minecolonies.research.avoid.name\": \"Avoid\",\n+  \"com.minecolonies.research.city.name\": \"City\",\n+  \"com.minecolonies.research.cleave.name\": \"Cleave\",\n+  \"com.minecolonies.research.deadlyaim.name\": \"Deadly Aim\",\n+  \"com.minecolonies.research.deeppockets.name\": \"Deep Pockets\",\n+  \"com.minecolonies.research.enhanced_gates1.name\": \"Enhanced Gates I\",\n+  \"com.minecolonies.research.enhanced_gates2.name\": \"Enhanced Gates II\",\n+  \"com.minecolonies.research.evade.name\": \"Evade\",\n+  \"com.minecolonies.research.firstaid.name\": \"First Aid\",\n+  \"com.minecolonies.research.firstaid2.name\": \"First Aid II\",\n+  \"com.minecolonies.research.flee.name\": \"Flee\",\n+  \"com.minecolonies.research.fortitude.name\": \"Fortitude\",\n+  \"com.minecolonies.research.guardianangel.name\": \"Guardian Angel\",\n+  \"com.minecolonies.research.guardianangel2.name\": \"Guardian Angel II\",\n+  \"com.minecolonies.research.hamlet.name\": \"Hamlet\",\n+  \"com.minecolonies.research.heavilyloaded.name\": \"Heavily Loaded\",\n+  \"com.minecolonies.research.hotfoot.name\": \"Hotfoot\",\n+  \"com.minecolonies.research.indefatigability.name\": \"Indefatigability\",\n+  \"com.minecolonies.research.lifesaver.name\": \"Lifesaver\",\n+  \"com.minecolonies.research.lifesaver2.name\": \"Lifesaver II\",\n+  \"com.minecolonies.research.loaded.name\": \"Loaded\",\n+  \"com.minecolonies.research.mightycleave.name\": \"Mighty Cleave\",\n+  \"com.minecolonies.research.nightowl.name\": \"Night Owl\",\n+  \"com.minecolonies.research.nightowl2.name\": \"Night Owl II\",\n+  \"com.minecolonies.research.outpost.name\": \"Outpost\",\n+  \"com.minecolonies.research.penetratingshot.name\": \"Penetrating Shot\",\n+  \"com.minecolonies.research.piercingshot.name\": \"Piercing Shot\",\n+  \"com.minecolonies.research.powerattack.name\": \"Power Attack\",\n+  \"com.minecolonies.research.preciseshot.name\": \"Precise Shot\",\n+  \"com.minecolonies.research.quickdraw.name\": \"Quick Draw\",\n+  \"com.minecolonies.research.resilience.name\": \"Resilience\",\n+  \"com.minecolonies.research.resistance.name\": \"Resistance\",\n+  \"com.minecolonies.research.village.name\": \"Village\",\n+  \"com.minecolonies.research.vitality.name\": \"Vitality\",\n+  \"com.minecolonies.research.whirlwind.name\": \"Whirlwind\",\n+  \"com.minecolonies.research.woundingshot.name\": \"Wounding Shot\",\n+  \"com.minecolonies.research.ability.name\": \"Ability\",\n+  \"com.minecolonies.research.academic.name\": \"Academic\",\n+  \"com.minecolonies.research.accuracy.name\": \"Accuracy\",\n+  \"com.minecolonies.research.agile.name\": \"Agile\",\n+  \"com.minecolonies.research.agilearcher.name\": \"Agile Archer\",\n+  \"com.minecolonies.research.amazingveins.name\": \"Amazing Veins\",\n+  \"com.minecolonies.research.athlete.name\": \"Athlete\",\n+  \"com.minecolonies.research.bachelor.name\": \"Bachelor\",\n+  \"com.minecolonies.research.bandages.name\": \"Bandages\",\n+  \"com.minecolonies.research.bandaid.name\": \"Band Aid\",\n+  \"com.minecolonies.research.beanstalk.name\": \"Beanstalk\",\n+  \"com.minecolonies.research.boiledleather.name\": \"Boiled Leather\",\n+  \"com.minecolonies.research.bonemeal.name\": \"Bonemeal\",\n+  \"com.minecolonies.research.bookworm.name\": \"Bookworm\",\n+  \"com.minecolonies.research.capacity.name\": \"Capacity\",\n+  \"com.minecolonies.research.captainoftheguard.name\": \"Captain of the Guard\",\n+  \"com.minecolonies.research.captaintraining.name\": \"Captain Training\",\n+  \"com.minecolonies.research.cast.name\": \"Cast\",\n+  \"com.minecolonies.research.cheatsheet.name\": \"Cheat Sheet\",\n+  \"com.minecolonies.research.circus.name\": \"Circus\",\n+  \"com.minecolonies.research.compost.name\": \"Compost\",\n+  \"com.minecolonies.research.compress.name\": \"Compress\",\n+  \"com.minecolonies.research.diamondcoated.name\": \"Diamond Coated\",\n+  \"com.minecolonies.research.diamondskin.name\": \"Diamond Skin\",\n+  \"com.minecolonies.research.diligent.name\": \"Diligent\",\n+  \"com.minecolonies.research.dodge.name\": \"Dodge\",\n+  \"com.minecolonies.research.duelist.name\": \"Duelist\",\n+  \"com.minecolonies.research.dung.name\": \"Dung\",\n+  \"com.minecolonies.research.epicure.name\": \"Epicure\",\n+  \"com.minecolonies.research.evasion.name\": \"Evasion\",\n+  \"com.minecolonies.research.fear.name\": \"Fear\",\n+  \"com.minecolonies.research.feint.name\": \"Feint\",\n+  \"com.minecolonies.research.fertilizer.name\": \"Fertilizer\",\n+  \"com.minecolonies.research.festival.name\": \"Festival\",\n+  \"com.minecolonies.research.fullretreat.name\": \"Full Retreat\",\n+  \"com.minecolonies.research.fullstock.name\": \"Full Stock!\",\n+  \"com.minecolonies.research.glutton.name\": \"Glutton\",\n+  \"com.minecolonies.research.goodveins.name\": \"Good Veins\",\n+  \"com.minecolonies.research.gorger.name\": \"Gorger\",\n+  \"com.minecolonies.research.gourmand.name\": \"Gourmand\",\n+  \"com.minecolonies.research.growth.name\": \"Growth\",\n+  \"com.minecolonies.research.hardened.name\": \"Hardened\",\n+  \"com.minecolonies.research.healingcream.name\": \"Healing Cream\",\n+  \"com.minecolonies.research.heavymachinery.name\": \"Heavy Machinery\",\n+  \"com.minecolonies.research.hormones.name\": \"Hormones\",\n+  \"com.minecolonies.research.improveddodge.name\": \"Improved Dodge\",\n+  \"com.minecolonies.research.improvedevasion.name\": \"Improved Evasion\",\n+  \"com.minecolonies.research.improvedleather.name\": \"Improved Leather\",\n+  \"com.minecolonies.research.ironarmor.name\": \"Iron Armor\",\n+  \"com.minecolonies.research.ironskin.name\": \"Iron Skin\",\n+  \"com.minecolonies.research.isthisredstone.name\": \"Is This Redstone?\",\n+  \"com.minecolonies.research.knighttraining.name\": \"Knight Training\",\n+  \"com.minecolonies.research.lightning.name\": \"Lightning\",\n+  \"com.minecolonies.research.madness.name\": \"Madness!\",\n+  \"com.minecolonies.research.magiccompost.name\": \"Magic Compost\",\n+  \"com.minecolonies.research.master.name\": \"Master\",\n+  \"com.minecolonies.research.masterbowman.name\": \"Master Bowman\",\n+  \"com.minecolonies.research.masterswordsman.name\": \"Master Swordsman\",\n+  \"com.minecolonies.research.memoryaid.name\": \"Memory Aid\",\n+  \"com.minecolonies.research.morebooks.name\": \"More Books\",\n+  \"com.minecolonies.research.motherlode.name\": \"Motherlode\",\n+  \"com.minecolonies.research.multishot.name\": \"Multi Shot\",\n+  \"com.minecolonies.research.nimble.name\": \"Nimble\",\n+  \"com.minecolonies.research.nurture.name\": \"Nurture\",\n+  \"com.minecolonies.research.opera.name\": \"Opera\",\n+  \"com.minecolonies.research.parry.name\": \"Parry\",\n+  \"com.minecolonies.research.phd.name\": \"PhD\",\n+  \"com.minecolonies.research.provost.name\": \"Provost\",\n+  \"com.minecolonies.research.puberty.name\": \"Puberty\",\n+  \"com.minecolonies.research.rapidshot.name\": \"Rapid Shot\",\n+  \"com.minecolonies.research.recipebook.name\": \"Recipe Book\",\n+  \"com.minecolonies.research.redstonepowered.name\": \"Redstone Powered\",\n+  \"com.minecolonies.research.reflective.name\": \"Reflective\",\n+  \"com.minecolonies.research.reinforced.name\": \"Reinforced\",\n+  \"com.minecolonies.research.retreat.name\": \"Retreat\",\n+  \"com.minecolonies.research.richveins.name\": \"Rich Veins\",\n+  \"com.minecolonies.research.riposte.name\": \"Riposte\",\n+  \"com.minecolonies.research.rtm.name\": \"RTM\",\n+  \"com.minecolonies.research.scholarly.name\": \"Scholarly\",\n+  \"com.minecolonies.research.seemsautomatic.name\": \"Seems Automatic\",\n+  \"com.minecolonies.research.skills.name\": \"Skills\",\n+  \"com.minecolonies.research.space.name\": \"Space\",\n+  \"com.minecolonies.research.spectacle.name\": \"Spectacle\",\n+  \"com.minecolonies.research.squiretraining.name\": \"Squire Training\",\n+  \"com.minecolonies.research.steelarmor.name\": \"Steel Armor\",\n+  \"com.minecolonies.research.steelbracing.name\": \"Steel Bracing\",\n+  \"com.minecolonies.research.strong.name\": \"Strong\",\n+  \"com.minecolonies.research.studious.name\": \"Studious\",\n+  \"com.minecolonies.research.stuffer.name\": \"Stuffer\",\n+  \"com.minecolonies.research.swift.name\": \"Swift\",\n+  \"com.minecolonies.research.theater.name\": \"Theater\",\n+  \"com.minecolonies.research.tools.name\": \"Tools\",\n+  \"com.minecolonies.research.trickshot.name\": \"Trick Shot\",\n+  \"com.minecolonies.research.veinminer.name\": \"Veinminer\",\n+  \"com.minecolonies.research.whatisthisspeed.name\": \"What Is This Speed?\",\n+  \"com.minecolonies.research.arrowpierce.name\": \"Arrow Piercing\",\n+  \"com.minecolonies.research.arrowuse.name\": \"Consume Arrows\",\n+  \"com.minecolonies.research.avoidance.name\": \"Avoidance\",\n+  \"com.minecolonies.research.doubletrouble.name\": \"Double Trouble\",\n+  \"com.minecolonies.research.gildedhammer.name\": \"Gilded Hammer\",\n+  \"com.minecolonies.research.hotboots.name\": \"Hot Boots\",\n+  \"com.minecolonies.research.knockbackaoe.name\": \"Knockback\",\n+  \"com.minecolonies.research.knowtheend.name\": \"Know the End\",\n+  \"com.minecolonies.research.morescrolls.name\": \"More Scrolls\",\n+  \"com.minecolonies.research.rails.name\": \"Rails\",\n+  \"com.minecolonies.research.rainman.name\": \"Rainman\",\n+  \"com.minecolonies.research.regeneration.name\": \"Regeneration\",\n+  \"com.minecolonies.research.taunt.name\": \"Taunt\",\n+  \"com.minecolonies.research.biodegradable.name\": \"Biodegradable\",\n+  \"com.minecolonies.research.flowerpower.name\": \"Flower Power\",\n+  \"com.minecolonies.research.higherlearning.name\": \"Higher Learning\",\n+  \"com.minecolonies.research.hittingiron.name\": \"Hitting Iron!\",\n+  \"com.minecolonies.research.hot.name\": \"Hot!\",\n+  \"com.minecolonies.research.improvedbows.name\": \"Improved Bows\",\n+  \"com.minecolonies.research.improvedswords.name\": \"Improved Swords\",\n+  \"com.minecolonies.research.keen.name\": \"Keen\",\n+  \"com.minecolonies.research.letitgrow.name\": \"Let It Grow\",\n+  \"com.minecolonies.research.pavetheroad.name\": \"Pave the Road\",\n+  \"com.minecolonies.research.rainbowheaven.name\": \"Rainbow Heaven\",\n+  \"com.minecolonies.research.rockingroll.name\": \"Rocking Roll\",\n+  \"com.minecolonies.research.sieving.name\": \"Sieving\",\n+  \"com.minecolonies.research.stamina.name\": \"Stamina\",\n+  \"com.minecolonies.research.stonecake.name\": \"Stone Cake\",\n+  \"com.minecolonies.research.stringwork.name\": \"Stringwork\",\n+  \"com.minecolonies.research.tactictraining.name\": \"Tactic Training\",\n+  \"com.minecolonies.research.theflintstones.name\": \"The Flintstones\",\n+  \"com.minecolonies.research.thoselungs.name\": \"Those Lungs!\",\n+  \"com.minecolonies.research.whatyaneed.name\": \"What ya Need?\",\n+  \"com.minecolonies.research.woodwork.name\": \"Woodwork\",\n+\n+  \"com.minecolonies.research.effects.fleeingspeedaddition.description\": \"Fleeing Citizens Gain Swiftness %2$d\",\n+  \"com.minecolonies.research.effects.citizencapaddition.description\": \"Increase Max Citizens +%d\",\n+  \"com.minecolonies.research.effects.meleedamageaddition.description\": \"Knight Melee Damage +%d\",\n+  \"com.minecolonies.research.effects.archerdamageaddition.description\": \"Archer Damage +%d\",\n+  \"com.minecolonies.research.effects.citizeninvslotsaddition.description\": \"Citizen Inventory +%d Slots\",\n+  \"com.minecolonies.research.effects.enhancesgatedurabilityaddition.description\": \"Gates Gain +100%% Swarm Resistance\",\n+  \"com.minecolonies.research.effects.healthaddition.description\": \"Citizen HP +%d\",\n+  \"com.minecolonies.research.effects.healingsaturationlimitaddition.description\": \"Healing Saturation Min %d\",\n+  \"com.minecolonies.research.effects.workingdayhaddition.description\": \"Citizen Work Day +%dH\",\n+  \"com.minecolonies.research.effects.blockplacespeedmultiplier.description\": \"Citizen Block Place Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.levelingmultiplier.description\": \"Citizen XP Growth +%3$d%%\",\n+  \"com.minecolonies.research.effects.sleeplessmultiplier.description\": \"Guards Need %3$d%% Less Sleep\",\n+  \"com.minecolonies.research.effects.walkingmultiplier.description\": \"Citizen Walk Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.archerarmormultiplier.description\": \"Archer Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.moreoresmultiplier.description\": \"Miners Find +%3$d%% More Ores\",\n+  \"com.minecolonies.research.effects.teachingmultiplier.description\": \"XP Gain When Studying +%3$d%%\",\n+  \"com.minecolonies.research.effects.regenerationmultiplier.description\": \"Citizen Regeneration +%3$d%%\",\n+  \"com.minecolonies.research.effects.growthmultiplier.description\": \"Child Growth Rate +%3$d%%\",\n+  \"com.minecolonies.research.effects.armordurabilitymultiplier.description\": \"Citizen Armor Durability +%3$d%%\",\n+  \"com.minecolonies.research.effects.farmingmultiplier.description\": \"Farmers Harvest +%3$d%% Crops\",\n+  \"com.minecolonies.research.effects.minimumstockmultiplier.description\": \"Buildings Can Stock %3$d%% More\",\n+  \"com.minecolonies.research.effects.blockattacksmultiplier.description\": \"Knight Block Chance +%3$d%%\",\n+  \"com.minecolonies.research.effects.recipesmultiplier.description\": \"Workers Learn +%3$d%% More Recipes\",\n+  \"com.minecolonies.research.effects.happinessmultiplier.description\": \"Citizen Happiness +%3$d%%\",\n+  \"com.minecolonies.research.effects.tooldurabilitymultiplier.description\": \"Tools Take %3$d%% Less Damage\",\n+  \"com.minecolonies.research.effects.meleearmormultiplier.description\": \"Knights Armor +%3$d%%\",\n+  \"com.minecolonies.research.effects.saturationmultiplier.description\": \"Citizen Saturation Per Meal +%3$d%%\",\n+  \"com.minecolonies.research.effects.fleeingdamagemultiplier.description\": \"Guards Take -%3$d%% Damage When Fleeing\",\n+  \"com.minecolonies.research.effects.blockbreakspeedmultiplier.description\": \"Citizen Block Break Speed +%3$d%%\",\n+  \"com.minecolonies.research.effects.doublearrowsmultiplier.description\": \"Archer Multishot +%3$d%%\",\n+  \"com.minecolonies.research.effects.piercingarrowsunlock.description\": \"Archers Gain Piercing II\",\n+  \"com.minecolonies.research.effects.consumearrowsunlock.description\": \"Archers Use Arrows For +2 Damage\",\n+  \"com.minecolonies.research.effects.shieldusageunlock.description\": \"Knights Unlock Shield Use\",\n+  \"com.minecolonies.research.effects.plant2unlock.description\": \"Plantations Grow Cactus/Bamboo\",\n+  \"com.minecolonies.research.effects.crushing11unlock.description\": \"Crusher Recipes Cost -50%%\",\n+  \"com.minecolonies.research.effects.minerfireresunlock.description\": \"Miners Fire And Lava Immunity\",\n+  \"com.minecolonies.research.effects.whirlwindabilityunlock.description\": \"Guards Learn Whirlwind Attack\",\n+  \"com.minecolonies.research.effects.knowledgeoftheendunlock.description\": \"Stonemasons Learn Endstone | Bakers Cook Chorus Bread\",\n+  \"com.minecolonies.research.effects.morescrollsunlock.description\": \"Enchanter Learns Scrolls to Speed Workers and Summon Guards\",\n+  \"com.minecolonies.research.effects.railsunlock.description\": \"Citizens Use Rails\",\n+  \"com.minecolonies.research.effects.workinginrainunlock.description\": \"Citizens Work Even In Rain\",\n+  \"com.minecolonies.research.effects.retreatunlock.description\": \"Guards Flee Under 20%% HP\",\n+  \"com.minecolonies.research.effects.knighttauntmobsunlock.description\": \"Knights Force Mobs To Target Them\",\n+\n+  \"com.minecolonies.research.effects.blockhutcomposter.description\": \"Unlocks Composter\",\n+  \"com.minecolonies.research.effects.blockhutflorist.description\": \"Unlocks Florist\",\n+  \"com.minecolonies.research.effects.blockhutschool.description\": \"Unlocks School\",\n+  \"com.minecolonies.research.effects.blockhutblacksmith.description\": \"Unlocks Blacksmith\",\n+  \"com.minecolonies.research.effects.blockhutsmeltery.description\": \"Unlocks Smeltery\",\n+  \"com.minecolonies.research.effects.blockhutarchery.description\": \"Unlocks Archery Building\",\n+  \"com.minecolonies.research.effects.blockhutcombatacademy.description\": \"Unlock Combat Academy\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c570b3467e5bc3815a4abedc726f29a3bee2379d"}, "originalPosition": 276}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDg0NjU2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNDozNjo0NlrOIJEt8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNDozNjo0NlrOIJEt8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM4NTM5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totalling at least %d levels!\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totaling at least %d levels!\",\n          \n      \n    \n    \n  \n\nThis is the json for American English, not British English \ud83d\ude04", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r546385395", "createdAt": "2020-12-20T14:36:46Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1522,19 +1531,27 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totalling at least %d levels!\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb94c3548e4c9050c3ffd736107ffd3fd0c86a3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDg0Njk2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNDozNzoxOFrOIJEuKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNDozNzoxOFrOIJEuKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM4NTQ1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University %d\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University Level %d\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r546385450", "createdAt": "2020-12-20T14:37:18Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1522,19 +1531,27 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totalling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \"or \\n\",\n+  \"com.minecolonies.coremod.research.requirement.research\": \"Requires %s!\",\n+  \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University %d\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb94c3548e4c9050c3ffd736107ffd3fd0c86a3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDg0NzQ5OnYy", "diffSide": "RIGHT", "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNDozODowOVrOIJEucQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNDozODowOVrOIJEucQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM4NTUyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only One Max-Level Research Can Be Unlocked Per Branch\",\n          \n          \n            \n              \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only One Max-Level Research Can Be Unlocked per Branch\",", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r546385521", "createdAt": "2020-12-20T14:38:09Z", "author": {"login": "ravenbuilder934"}, "path": "src/main/resources/assets/minecolonies/lang/en_us.json", "diffHunk": "@@ -1522,19 +1531,27 @@\n   \"com.minecolonies.coremod.gui.chat.cancel\": \"Try cancel that request!\",\n   \"com.minecolonies.coremod.gui.chat.fulfill\": \"More details please!\",\n   \"com.minecolonies.coremod.gui.research.title\": \"Research Branches\",\n-  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s at least level %d!\",\n+  \"com.minecolonies.coremod.gui.research.tier.header\": \"Level %d (%d hr)\",\n+  \"com.minecolonies.coremod.research.requirement.building.level\": \"Requires %s(s) totalling at least %d levels!\",\n+  \"com.minecolonies.coremod.research.requirement.building.or\": \"or \\n\",\n+  \"com.minecolonies.coremod.research.requirement.research\": \"Requires %s!\",\n+  \"com.minecolonies.coremod.research.requirement.university.level\": \"Requires University %d\",\n+  \"com.minecolonies.coremod.research.limit.onemaxperbranch\": \"Only One Max-Level Research Can Be Unlocked Per Branch\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb94c3548e4c9050c3ffd736107ffd3fd0c86a3"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODcxMzI1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/MinecoloniesAPIProxy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwOTo1NzozN1rOILEPtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwOTo1NzozN1rOILEPtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3NDgwNg==", "bodyText": "Probably good to remove this extra line here", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548474806", "createdAt": "2020-12-24T09:57:37Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/MinecoloniesAPIProxy.java", "diffHunk": "@@ -143,6 +143,7 @@ public IGlobalResearchTree getGlobalResearchTree()\n         return apiInstance.getColonyEventRegistry();\n     }\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODcyMzk1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowMjoyM1rOILEVug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowMjoyM1rOILEVug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3NjM0Ng==", "bodyText": "That's not the annotation we're using, we're using the Intellij ones", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548476346", "createdAt": "2020-12-24T10:02:23Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/research/ILocalResearchTree.java", "diffHunk": "@@ -1,8 +1,10 @@\n package com.minecolonies.api.research;\n \n+import com.minecolonies.api.colony.IColony;\n import com.minecolonies.api.research.effects.IResearchEffectManager;\n import net.minecraft.nbt.CompoundNBT;\n \n+import javax.annotation.Nullable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODcyNTIyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowMzowNlrOILEWiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowMzowNlrOILEWiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3NjU1Mw==", "bodyText": "let's make those doubles and not floats, floats should be reserved to rendering logic", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548476553", "createdAt": "2020-12-24T10:03:06Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/research/effects/IResearchEffectManager.java", "diffHunk": "@@ -17,10 +17,32 @@\n      */\n     <W extends IResearchEffect<?>> W getEffect(final String id, @NotNull final Class<W> type);\n \n+    /**\n+     * Get the research effect strength which is assigned to a particular string\n+     * or zero, if no matching effect is present.\n+     *\n+     * @param id   the id of the effect.\n+     * @return the strength of the effect, or zero if it isn't present.\n+     */\n+     float getEffectValue(final String id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODcyNjg3OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/research/util/ResearchConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowMzo0N1rOILEXZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowMzo0N1rOILEXZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3Njc3NA==", "bodyText": "we can remove those, np", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548476774", "createdAt": "2020-12-24T10:03:47Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/research/util/ResearchConstants.java", "diffHunk": "@@ -53,58 +57,93 @@\n     public static final int    LOCK_HEIGHT          = 17;\n     public static final int    OR_X_OFFSET          = 14;\n     public static final int    OR_Y_OFFSET          = 10;\n+    public static final int    OR_HEIGHT            = 16;\n+    public static final int    OR_WIDTH             = 16;\n+    public static final int    TIME_HEIGHT          = 5;\n+    public static final int    TIME_WIDTH           = 95;\n+\n+    public static final int    COLOR_TEXT_NEGATIVE  = Color.rgbaToInt(218, 10, 10, 255);\n+    public static final int    COLOR_TEXT_LABEL     = Color.rgbaToInt(218, 202, 171, 255);\n+    public static final int    COLOR_TEXT_LIGHT     = Color.rgbaToInt(60, 60, 60, 255);\n \n     /**\n-     * Research effects.\n+     * Research Effect Name strings, used for ResearchEffectManager and ResearchRegistry lookups.\n      */\n-    public static final String ARCHER_ARMOR     = \"Archer Armour\";\n-    public static final String MELEE_ARMOR      = \"Melee Armour\";\n-    public static final String ARMOR_DURABILITY = \"Armor Durability\";\n-    public static final String FLEEING_DAMAGE   = \"Fleeing Damage\";\n-    public static final String FLEEING_SPEED    = \"Fleeing Speed\";\n-    public static final String MELEE_DAMAGE     = \"Melee Damage\";\n-    public static final String ARCHER_DAMAGE    = \"Archer Damage\";\n-    public static final String RETREAT          = \"Retreat\";\n-    public static final String NONE             = \"None\";\n-    public static final String SHIELD_USAGE     = \"Shield Usage\";\n-    public static final String KNIGHT_TAUNT     = \"Knight taunt mobs\";\n-    public static final String DOUBLE_ARROWS    = \"Double Arrows\";\n-    public static final String ARROW_ITEMS      = \"Consume Arrows\";\n-    public static final String ARROW_PIERCE     = \"Piercing Arrows\";\n-    public static final String KNIGHT_WHIRLWIND = \"Whirldwind ability\";\n-    public static final String BLOCK_ATTACKS    = \"Block Attacks\";\n-    public static final String SLEEP_LESS       = \"Sleep Less\";\n-    public static final String WORK_LONGER      = \"Working day h\";\n-\n-    public static final String TEACHING = \"Teaching\";\n-    public static final String GROWTH   = \"Growth\";\n-    public static final String CAP      = \"Citizen-Cap\";\n-    public static final String RAILS    = \"Rails\";\n-    public static final String WALKING  = \"Walking\";\n-    public static final String LEVELING  = \"Leveling\";\n+    //Addition Multipliers\n+    public static final String ARCHER_DAMAGE                = \"archerdamageaddition\";\n+    public static final String CITIZEN_INV_SLOTS                    = \"citizeninvslotsaddition\";\n+    public static final String CITIZEN_CAP                  = \"citizencapaddition\";\n+    public static final String MECHANIC_ENHANCED_GATES      = \"enhancesgatedurabilityaddition\";\n+    public static final String FLEEING_SPEED                = \"fleeingspeedaddition\";\n+    public static final String SATLIMIT                     = \"healingsaturationlimitaddition\";\n+    public static final String HEALTH_BOOST                 = \"healthaddition\";\n+    public static final String MELEE_DAMAGE                 = \"meleedamageaddition\";\n+    public static final String WORK_LONGER                  = \"workingdayhaddition\";\n \n-    public static final String HEALTH       = \"Health\";\n-    public static final String REGENERATION = \"Regeneration\";\n-    public static final String SATLIMIT     = \"Healing Saturation Limit\";\n-    public static final String HAPPINESS    = \"Happiness\";\n-    public static final String SATURATION   = \"Saturation\";\n+    //Multiplier Modifiers\n+    public static final String ARCHER_ARMOR      = \"archerarmormultiplier\";\n+    public static final String ARMOR_DURABILITY  = \"armordurabilitymultiplier\";\n+    public static final String BLOCK_ATTACKS     = \"blockattacksmultiplier\";\n+    public static final String BLOCK_BREAK_SPEED = \"blockbreakspeedmultiplier\";\n+    public static final String BLOCK_PLACE_SPEED = \"blockplacespeedmultiplier\";\n+    public static final String DOUBLE_ARROWS     = \"doublearrowsmultiplier\";\n+    public static final String FARMING           = \"farmingmultiplier\";\n+    public static final String FLEEING_DAMAGE    = \"fleeingdamagemultiplier\";;\n+    public static final String GROWTH            = \"growthmultiplier\";\n+    public static final String HAPPINESS         = \"happinessmultiplier\";\n+    public static final String LEVELING          = \"levelingmultiplier\";\n+    public static final String MELEE_ARMOR       = \"meleearmormultiplier\";\n+    public static final String MINIMUM_STOCK     = \"minimumstockmultiplier\";\n+    public static final String MORE_ORES         = \"moreoresmultiplier\";\n+    public static final String RECIPES           = \"recipesmultiplier\";\n+    public static final String REGENERATION      = \"regenerationmultiplier\";\n+    public static final String SATURATION        = \"saturationmultiplier\";\n+    public static final String SLEEP_LESS        = \"sleeplessmultiplier\";\n+    public static final String TEACHING          = \"teachingmultiplier\";\n+    public static final String TOOL_DURABILITY   = \"tooldurabilitymultiplier\";\n+    public static final String WALKING           = \"walkingmultiplier\";\n \n-    public static final String FARMING           = \"Farming\";\n-    public static final String BLOCK_BREAK_SPEED = \"Block Break Speed\";\n-    public static final String MINIMUM_STOCK     = \"Minimum Stock\";\n-    public static final String RECIPES           = \"Recipes\";\n-    public static final String BLOCK_PLACE_SPEED = \"Block Place Speed\";\n-    public static final String MORE_ORES         = \"More Ores\";\n-    public static final String WORKING_IN_RAIN   = \"Working in Rain\";\n-    public static final String TOOL_DURABILITY   = \"Tool Durability\";\n-    public static final String INV_SLOTS         = \"Citizen Inv Slots\";\n+    //Unlock Ability modifiers.\n+    public static final String CRUSHING_11       = \"crushing11unlock\";\n+    public static final String ARCHER_USE_ARROWS = \"consumearrowsunlock\";\n+    public static final String KNIGHT_TAUNT      = \"knighttauntmobsunlock\";\n+    public static final String FIRE_RES          = \"minerfireresunlock\";\n+    public static final String ARROW_PIERCE      = \"piercingarrowsunlock\";\n+    public static final String PLANT_2           = \"plant2unlock\";\n+    public static final String RAILS             = \"railsunlock\";\n+    public static final String RETREAT           = \"retreatunlock\";\n+    public static final String SHIELD_USAGE      = \"shieldusageunlock\";\n+    public static final String KNIGHT_WHIRLWIND  = \"whirlwindabilityunlock\";\n+    public static final String WORKING_IN_RAIN   = \"workinginrainunlock\";\n \n-    public static final String PLANT_2     = \"Plant 2\";\n-    public static final String CRUSHING_11 = \"1:1 Crushing\";\n-    public static final String FIRE_RES    = \"Miner Fire Res\";\n+    /* // Recipe-only unlocks don't really need specific effects.  Leaving here in case we do want to add AbilityEffects to them.\n+    /public static final String END_KNOWLEDGE     = \"knowledgeoftheendunlock\";\n+    /public static final String MORE_SCROLLS      = \"morescrollsunlock\";\n+     */\n \n-    public static final String END_KNOWLEGE = \"Knowledge of The End\";\n-    public static final String MORE_SCROLLS = \"more scroll recipes\";\n+    //Unlock Building modifiers.\n+    /*public static final String COMPOSTER_RESEARCH      = \"blockhutcomposter\";\n+    public static final String FLORIST_RESEARCH        = \"blockhutflorist\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODczMjE2OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowNjoxOVrOILEaSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMTowMDo0MVrOILFYxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3NzUxNA==", "bodyText": "Not 100% happy with all this. It's probably better to first loop over all and do a count of the inventory and if the count is fine we loop and remove. For both we have utils already. I know it's a bit less efficient but this is \"on button press\" logic that is executed not so often, so it should be fine", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548477514", "createdAt": "2020-12-24T10:06:19Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2156,12 +2156,58 @@ public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler,\n         return false;\n     }\n \n+    /**\n+     * Tries to remove a group of stacks with its size from a given Itemhandler. Only removes stacks if every stack's full count is present.\n+     *\n+     * @param handler      the itemHandler.\n+     * @param input        the stack to remove.\n+     * @return true if removed the stack\n+     */\n+    public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler, final List<ItemStorage> input)\n+    {\n+        List<ItemStack> removedItems = new ArrayList<>();\n+        for(final ItemStorage is : input)\n+        {\n+            int amount = is.getItemStack().getCount();\n+\n+            for (int i = 0; i < handler.getSlots(); i++)\n+            {\n+                if (ItemStackUtils.compareItemStacksIgnoreStackSize(handler.getStackInSlot(i), is.getItemStack(), !is.ignoreDamageValue(), !is.ignoreNBT()))\n+                {\n+                    amount = amount - handler.extractItem(i, amount, false).getCount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5Mjc1MQ==", "bodyText": "Wasn\u2019t sure on that myself. Want the non-List variant of the method changed as well?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548492751", "createdAt": "2020-12-24T10:57:55Z", "author": {"login": "gattsuru"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2156,12 +2156,58 @@ public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler,\n         return false;\n     }\n \n+    /**\n+     * Tries to remove a group of stacks with its size from a given Itemhandler. Only removes stacks if every stack's full count is present.\n+     *\n+     * @param handler      the itemHandler.\n+     * @param input        the stack to remove.\n+     * @return true if removed the stack\n+     */\n+    public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler, final List<ItemStorage> input)\n+    {\n+        List<ItemStack> removedItems = new ArrayList<>();\n+        for(final ItemStorage is : input)\n+        {\n+            int amount = is.getItemStack().getCount();\n+\n+            for (int i = 0; i < handler.getSlots(); i++)\n+            {\n+                if (ItemStackUtils.compareItemStacksIgnoreStackSize(handler.getStackInSlot(i), is.getItemStack(), !is.ignoreDamageValue(), !is.ignoreNBT()))\n+                {\n+                    amount = amount - handler.extractItem(i, amount, false).getCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3NzUxNA=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5MzUwOA==", "bodyText": "sure", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548493508", "createdAt": "2020-12-24T11:00:41Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2156,12 +2156,58 @@ public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler,\n         return false;\n     }\n \n+    /**\n+     * Tries to remove a group of stacks with its size from a given Itemhandler. Only removes stacks if every stack's full count is present.\n+     *\n+     * @param handler      the itemHandler.\n+     * @param input        the stack to remove.\n+     * @return true if removed the stack\n+     */\n+    public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler, final List<ItemStorage> input)\n+    {\n+        List<ItemStack> removedItems = new ArrayList<>();\n+        for(final ItemStorage is : input)\n+        {\n+            int amount = is.getItemStack().getCount();\n+\n+            for (int i = 0; i < handler.getSlots(); i++)\n+            {\n+                if (ItemStackUtils.compareItemStacksIgnoreStackSize(handler.getStackInSlot(i), is.getItemStack(), !is.ignoreDamageValue(), !is.ignoreNBT()))\n+                {\n+                    amount = amount - handler.extractItem(i, amount, false).getCount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3NzUxNA=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODczNTg3OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowNzo1NVrOILEcOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowNzo1NVrOILEcOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3ODAxMQ==", "bodyText": "no return type", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548478011", "createdAt": "2020-12-24T10:07:55Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/util/InventoryUtils.java", "diffHunk": "@@ -2156,12 +2156,58 @@ public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler,\n         return false;\n     }\n \n+    /**\n+     * Tries to remove a group of stacks with its size from a given Itemhandler. Only removes stacks if every stack's full count is present.\n+     *\n+     * @param handler      the itemHandler.\n+     * @param input        the stack to remove.\n+     * @return true if removed the stack\n+     */\n+    public static boolean tryRemoveStackFromItemHandler(final IItemHandler handler, final List<ItemStorage> input)\n+    {\n+        List<ItemStack> removedItems = new ArrayList<>();\n+        for(final ItemStorage is : input)\n+        {\n+            int amount = is.getItemStack().getCount();\n+\n+            for (int i = 0; i < handler.getSlots(); i++)\n+            {\n+                if (ItemStackUtils.compareItemStacksIgnoreStackSize(handler.getStackInSlot(i), is.getItemStack(), !is.ignoreDamageValue(), !is.ignoreNBT()))\n+                {\n+                    amount = amount - handler.extractItem(i, amount, false).getCount();\n+\n+                    if (amount == 0)\n+                    {\n+                        break;\n+                    }\n+                }\n+            }\n+            if(amount == 0)\n+            {\n+                removedItems.add(is.getItemStack());\n+            }\n+            else\n+            {\n+                final ItemStack revertStack = is.getItemStack().copy();\n+                revertStack.setCount(is.getItemStack().getCount() - amount);\n+                addItemStackToItemHandler(handler, revertStack);\n+                for(final ItemStack returnItems : removedItems)\n+                {\n+                    addItemStackToItemHandler(handler, returnItems);\n+                }\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n+\n     /**\n      * Force remove a stack with a certain amount from a given Itemhandler\n      *\n      * @param handler the itemHandler.\n      * @param input   the stack to remove.\n      * @param count   the amount to remove.\n+     * @return        true if the requested count was successfully removed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODczNzY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowODo0N1rOILEdRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo1NzozOVrOILFVig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3ODI3OA==", "bodyText": "What, how were those two not here?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548478278", "createdAt": "2020-12-24T10:08:47Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "diffHunk": "@@ -33,6 +33,13 @@ public static void init(final RegistryEvent.Register<BuildingEntry> event)\n                                  .setRegistryName(new ResourceLocation(Constants.MOD_ID, ModBuildings.ARCHERY_ID))\n                                  .createBuildingEntry();\n \n+        ModBuildings.baker = new BuildingEntry.Builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5MTk2Mw==", "bodyText": "They\u2019re present as bakery and home, respectively.  This is kinda a hacky workaround, but too many places this code touches straddle between the code-side, desc, blockdesc, and user-side hard coded names.\nI\u2019m open to any smarter or more elegant solution; the duplicate entries just seemed the ones least likely to have a negative impact or confuse actual devs by renaming classes or screwing with internal static strings.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548491963", "createdAt": "2020-12-24T10:55:01Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "diffHunk": "@@ -33,6 +33,13 @@ public static void init(final RegistryEvent.Register<BuildingEntry> event)\n                                  .setRegistryName(new ResourceLocation(Constants.MOD_ID, ModBuildings.ARCHERY_ID))\n                                  .createBuildingEntry();\n \n+        ModBuildings.baker = new BuildingEntry.Builder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3ODI3OA=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5MjY4Mg==", "bodyText": "Ohh, we shouldn't have duplicate entries at all. I'd prefer renaming the original one then.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548492682", "createdAt": "2020-12-24T10:57:39Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "diffHunk": "@@ -33,6 +33,13 @@ public static void init(final RegistryEvent.Register<BuildingEntry> event)\n                                  .setRegistryName(new ResourceLocation(Constants.MOD_ID, ModBuildings.ARCHERY_ID))\n                                  .createBuildingEntry();\n \n+        ModBuildings.baker = new BuildingEntry.Builder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3ODI3OA=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODczOTIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/blocks/huts/BlockHutChickenHerder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowOToyMlrOILEeDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDowOToyMlrOILEeDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3ODQ3OA==", "bodyText": "weird", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548478478", "createdAt": "2020-12-24T10:09:22Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/blocks/huts/BlockHutChickenHerder.java", "diffHunk": "@@ -19,9 +19,7 @@ public BlockHutChickenHerder()\n     @NotNull\n     @Override\n     public String getName()\n-    {\n-        return \"blockhutchickenherder\";\n-    }\n+    { return \"blockhutchickenherder\"; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc0MTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/blocks/huts/BlockHutComposter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoxMDoyNVrOILEfVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoxMDoyNVrOILEfVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3ODgwNw==", "bodyText": "formatting", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548478807", "createdAt": "2020-12-24T10:10:25Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/blocks/huts/BlockHutComposter.java", "diffHunk": "@@ -22,15 +21,5 @@ public String getName()\n     }\n \n     @Override\n-    public BuildingEntry getBuildingEntry()\n-    {\n-        return ModBuildings.composter;\n-    }\n-\n-    @Override\n-    @OnlyIn(Dist.CLIENT)\n-    public void checkResearch(final IColonyView colony)\n-    {\n-        checkResearch(colony, ResearchInitializer.COMPOSTER_RESEARCH);\n-    }\n+    public BuildingEntry getBuildingEntry() { return ModBuildings.composter; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc0NjI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutUniversity.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoxMjo1N1rOILEiEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMTozOToxOFrOILGBig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3OTUwNw==", "bodyText": "return empty list here already?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548479507", "createdAt": "2020-12-24T10:12:57Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutUniversity.java", "diffHunk": "@@ -36,19 +44,105 @@ public WindowHutUniversity(final BuildingUniversity.View building)\n \n         final View view = this.findPaneOfTypeByID(BRANCH_VIEW_ID, View.class);\n         int offset = 0;\n-        for (final String branch : IGlobalResearchTree.getInstance().getBranches())\n+        // For now, sort research branches by name, as they may be loaded in any order.\n+        branches.addAll(IGlobalResearchTree.getInstance().getBranches());\n+        branches.sort(Comparator.comparing(String::toString, String.CASE_INSENSITIVE_ORDER));\n+        for (final String branch : branches)\n         {\n-            final ButtonImage button = new ButtonImage();\n-            button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n-            button.setLabel(branch);\n-            button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n-            button.setTextColor(SLIGHTLY_BLUE);\n-            button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n-            view.addChild(button);\n-            branches.add(branch);\n+            List<IFormattableTextComponent> requirements = getHidingRequirementDesc(branch);\n+            if(requirements.isEmpty())\n+            {\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(branch);\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n \n-            offset += button.getHeight() + BUTTON_PADDING;\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+            else\n+            {\n+                final Gradient gradient = new Gradient();\n+                gradient.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                gradient.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                gradient.setGradientStart(239, 230, 215, 255);\n+                gradient.setGradientEnd(239, 230, 215, 255);\n+                gradient.setHoverToolTip(requirements);\n+                view.addChild(gradient);\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(\"-----------\");\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n+\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Gets a list describing what requirements must be met to make at least one primary research for a branch visible.\n+     *\n+     * @param branch  The identifier for a branch.\n+     * @return An empty list if at least one primary research is visible, or a list of IFormattableTextComponents describing the dependencies for each hidden primary research.\n+     */\n+    public List<IFormattableTextComponent> getHidingRequirementDesc(final String branch)\n+    {\n+        final List<IFormattableTextComponent> requirements = new ArrayList<>();\n+        for(final String primary : IGlobalResearchTree.getInstance().getPrimaryResearch(branch))\n+        {\n+            if(!IGlobalResearchTree.getInstance().getResearch(branch, primary).isHidden()\n+                 || IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(IGlobalResearchTree.getInstance().getResearch(branch, primary).getResearchRequirement(), building.getColony()))\n+            {\n+                requirements.clear();\n+                break;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5ODE1NQ==", "bodyText": "Yes. The goal is to have the branch locked until one Research is visible. If any one is complete, we don\u2019t want to show a tooltip regarding the others, or require all of the primary research to be unlocked before you can start any of them.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548498155", "createdAt": "2020-12-24T11:17:50Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutUniversity.java", "diffHunk": "@@ -36,19 +44,105 @@ public WindowHutUniversity(final BuildingUniversity.View building)\n \n         final View view = this.findPaneOfTypeByID(BRANCH_VIEW_ID, View.class);\n         int offset = 0;\n-        for (final String branch : IGlobalResearchTree.getInstance().getBranches())\n+        // For now, sort research branches by name, as they may be loaded in any order.\n+        branches.addAll(IGlobalResearchTree.getInstance().getBranches());\n+        branches.sort(Comparator.comparing(String::toString, String.CASE_INSENSITIVE_ORDER));\n+        for (final String branch : branches)\n         {\n-            final ButtonImage button = new ButtonImage();\n-            button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n-            button.setLabel(branch);\n-            button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n-            button.setTextColor(SLIGHTLY_BLUE);\n-            button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n-            view.addChild(button);\n-            branches.add(branch);\n+            List<IFormattableTextComponent> requirements = getHidingRequirementDesc(branch);\n+            if(requirements.isEmpty())\n+            {\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(branch);\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n \n-            offset += button.getHeight() + BUTTON_PADDING;\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+            else\n+            {\n+                final Gradient gradient = new Gradient();\n+                gradient.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                gradient.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                gradient.setGradientStart(239, 230, 215, 255);\n+                gradient.setGradientEnd(239, 230, 215, 255);\n+                gradient.setHoverToolTip(requirements);\n+                view.addChild(gradient);\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(\"-----------\");\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n+\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Gets a list describing what requirements must be met to make at least one primary research for a branch visible.\n+     *\n+     * @param branch  The identifier for a branch.\n+     * @return An empty list if at least one primary research is visible, or a list of IFormattableTextComponents describing the dependencies for each hidden primary research.\n+     */\n+    public List<IFormattableTextComponent> getHidingRequirementDesc(final String branch)\n+    {\n+        final List<IFormattableTextComponent> requirements = new ArrayList<>();\n+        for(final String primary : IGlobalResearchTree.getInstance().getPrimaryResearch(branch))\n+        {\n+            if(!IGlobalResearchTree.getInstance().getResearch(branch, primary).isHidden()\n+                 || IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(IGlobalResearchTree.getInstance().getResearch(branch, primary).getResearchRequirement(), building.getColony()))\n+            {\n+                requirements.clear();\n+                break;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3OTUwNw=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5OTEwNQ==", "bodyText": "I mean, instead of break and clear, we can just return Collections.emptyList(), no?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548499105", "createdAt": "2020-12-24T11:21:00Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutUniversity.java", "diffHunk": "@@ -36,19 +44,105 @@ public WindowHutUniversity(final BuildingUniversity.View building)\n \n         final View view = this.findPaneOfTypeByID(BRANCH_VIEW_ID, View.class);\n         int offset = 0;\n-        for (final String branch : IGlobalResearchTree.getInstance().getBranches())\n+        // For now, sort research branches by name, as they may be loaded in any order.\n+        branches.addAll(IGlobalResearchTree.getInstance().getBranches());\n+        branches.sort(Comparator.comparing(String::toString, String.CASE_INSENSITIVE_ORDER));\n+        for (final String branch : branches)\n         {\n-            final ButtonImage button = new ButtonImage();\n-            button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n-            button.setLabel(branch);\n-            button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n-            button.setTextColor(SLIGHTLY_BLUE);\n-            button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n-            view.addChild(button);\n-            branches.add(branch);\n+            List<IFormattableTextComponent> requirements = getHidingRequirementDesc(branch);\n+            if(requirements.isEmpty())\n+            {\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(branch);\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n \n-            offset += button.getHeight() + BUTTON_PADDING;\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+            else\n+            {\n+                final Gradient gradient = new Gradient();\n+                gradient.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                gradient.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                gradient.setGradientStart(239, 230, 215, 255);\n+                gradient.setGradientEnd(239, 230, 215, 255);\n+                gradient.setHoverToolTip(requirements);\n+                view.addChild(gradient);\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(\"-----------\");\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n+\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Gets a list describing what requirements must be met to make at least one primary research for a branch visible.\n+     *\n+     * @param branch  The identifier for a branch.\n+     * @return An empty list if at least one primary research is visible, or a list of IFormattableTextComponents describing the dependencies for each hidden primary research.\n+     */\n+    public List<IFormattableTextComponent> getHidingRequirementDesc(final String branch)\n+    {\n+        final List<IFormattableTextComponent> requirements = new ArrayList<>();\n+        for(final String primary : IGlobalResearchTree.getInstance().getPrimaryResearch(branch))\n+        {\n+            if(!IGlobalResearchTree.getInstance().getResearch(branch, primary).isHidden()\n+                 || IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(IGlobalResearchTree.getInstance().getResearch(branch, primary).getResearchRequirement(), building.getColony()))\n+            {\n+                requirements.clear();\n+                break;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3OTUwNw=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUwMzk0Ng==", "bodyText": "Oh. Yeah, derp on my part.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548503946", "createdAt": "2020-12-24T11:39:18Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutUniversity.java", "diffHunk": "@@ -36,19 +44,105 @@ public WindowHutUniversity(final BuildingUniversity.View building)\n \n         final View view = this.findPaneOfTypeByID(BRANCH_VIEW_ID, View.class);\n         int offset = 0;\n-        for (final String branch : IGlobalResearchTree.getInstance().getBranches())\n+        // For now, sort research branches by name, as they may be loaded in any order.\n+        branches.addAll(IGlobalResearchTree.getInstance().getBranches());\n+        branches.sort(Comparator.comparing(String::toString, String.CASE_INSENSITIVE_ORDER));\n+        for (final String branch : branches)\n         {\n-            final ButtonImage button = new ButtonImage();\n-            button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n-            button.setLabel(branch);\n-            button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n-            button.setTextColor(SLIGHTLY_BLUE);\n-            button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n-            view.addChild(button);\n-            branches.add(branch);\n+            List<IFormattableTextComponent> requirements = getHidingRequirementDesc(branch);\n+            if(requirements.isEmpty())\n+            {\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(branch);\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n \n-            offset += button.getHeight() + BUTTON_PADDING;\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+            else\n+            {\n+                final Gradient gradient = new Gradient();\n+                gradient.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                gradient.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                gradient.setGradientStart(239, 230, 215, 255);\n+                gradient.setGradientEnd(239, 230, 215, 255);\n+                gradient.setHoverToolTip(requirements);\n+                view.addChild(gradient);\n+                final ButtonImage button = new ButtonImage();\n+                button.setImage(new ResourceLocation(Constants.MOD_ID, MEDIUM_SIZED_BUTTON_RES));\n+                button.setLabel(\"-----------\");\n+                button.setSize(BUTTON_LENGTH, BUTTON_HEIGHT);\n+                button.setTextColor(SLIGHTLY_BLUE);\n+                button.setPosition(x + INITITAL_X_OFFSET, y + offset + INITITAL_Y_OFFSET);\n+                view.addChild(button);\n+\n+                offset += button.getHeight() + BUTTON_PADDING;\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Gets a list describing what requirements must be met to make at least one primary research for a branch visible.\n+     *\n+     * @param branch  The identifier for a branch.\n+     * @return An empty list if at least one primary research is visible, or a list of IFormattableTextComponents describing the dependencies for each hidden primary research.\n+     */\n+    public List<IFormattableTextComponent> getHidingRequirementDesc(final String branch)\n+    {\n+        final List<IFormattableTextComponent> requirements = new ArrayList<>();\n+        for(final String primary : IGlobalResearchTree.getInstance().getPrimaryResearch(branch))\n+        {\n+            if(!IGlobalResearchTree.getInstance().getResearch(branch, primary).isHidden()\n+                 || IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(IGlobalResearchTree.getInstance().getResearch(branch, primary).getResearchRequirement(), building.getColony()))\n+            {\n+                requirements.clear();\n+                break;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ3OTUwNw=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc2OTAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/ColonyManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoyMzoyN1rOILEupA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoyMzoyN1rOILEupA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MjcyNA==", "bodyText": "can also probably cleaned up", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548482724", "createdAt": "2020-12-24T10:23:27Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/ColonyManager.java", "diffHunk": "@@ -11,6 +11,7 @@\n import com.minecolonies.api.compatibility.ICompatibilityManager;\n import com.minecolonies.api.crafting.IRecipeManager;\n import com.minecolonies.api.items.ModTags;\n+import com.minecolonies.api.research.IGlobalResearchTree;\n import com.minecolonies.api.util.ItemStackUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc3MzY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoyNToyMlrOILExAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoyNToyMlrOILExAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MzMzMQ==", "bodyText": "Can those also be cleaned up?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548483331", "createdAt": "2020-12-24T10:25:22Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -7,25 +7,33 @@\n import com.minecolonies.api.colony.buildings.IBuilding;\n import com.minecolonies.api.colony.buildings.ModBuildings;\n import com.minecolonies.api.colony.buildings.registry.BuildingEntry;\n+import com.minecolonies.api.colony.buildings.views.IBuildingView;\n import com.minecolonies.api.colony.buildings.workerbuildings.ITownHall;\n import com.minecolonies.api.colony.buildings.workerbuildings.ITownHallView;\n import com.minecolonies.api.colony.colonyEvents.descriptions.IColonyEventDescription;\n import com.minecolonies.api.colony.colonyEvents.registry.ColonyEventDescriptionTypeRegistryEntry;\n import com.minecolonies.api.colony.permissions.PermissionEvent;\n+import com.minecolonies.api.research.*;\n import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.TranslationConstants;\n import com.minecolonies.coremod.MineColonies;\n import com.minecolonies.coremod.client.gui.WindowTownHall;\n import com.minecolonies.coremod.colony.buildings.AbstractBuilding;\n import com.minecolonies.coremod.colony.buildings.views.AbstractBuildingView;\n \n+import com.minecolonies.coremod.research.BuildingResearchRequirement;\n+import com.minecolonies.coremod.research.ResearchResearchRequirement;\n+import net.minecraft.client.Minecraft;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc3NjA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingUniversity.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoyNjozMFrOILEyVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQwMzo0NjowOVrOILXoYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MzY3MQ==", "bodyText": "We shouldn't use I18n.format, can't we just give it a TranslationTextComponent?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548483671", "createdAt": "2020-12-24T10:26:30Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingUniversity.java", "diffHunk": "@@ -241,8 +244,7 @@ public void onSuccess(final ILocalResearch research)\n         }\n \n         LanguageHandler.sendPlayersMessage(colony.getMessagePlayerEntities(),\n-          RESEARCH_CONCLUDED + random.nextInt(3),\n-          IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc());\n+          RESEARCH_CONCLUDED + random.nextInt(3), I18n.format(IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5NjQxMg==", "bodyText": "I\u2019ll take another shot at doing it that way, if it\u2019s possible.  Was having a hell of a time with TranslationTextComponents not handling insert of a translated text into a %s, and instead doing an appended of translated text.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548496412", "createdAt": "2020-12-24T11:11:41Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingUniversity.java", "diffHunk": "@@ -241,8 +244,7 @@ public void onSuccess(final ILocalResearch research)\n         }\n \n         LanguageHandler.sendPlayersMessage(colony.getMessagePlayerEntities(),\n-          RESEARCH_CONCLUDED + random.nextInt(3),\n-          IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc());\n+          RESEARCH_CONCLUDED + random.nextInt(3), I18n.format(IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MzY3MQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5NzUwMA==", "bodyText": "Because formatting on the server side, afaik, will only ever return english translations to people.\nYou could try to wrap a translationcomponent inside a string component, that might work if the other doesn't.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548497500", "createdAt": "2020-12-24T11:15:45Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingUniversity.java", "diffHunk": "@@ -241,8 +244,7 @@ public void onSuccess(final ILocalResearch research)\n         }\n \n         LanguageHandler.sendPlayersMessage(colony.getMessagePlayerEntities(),\n-          RESEARCH_CONCLUDED + random.nextInt(3),\n-          IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc());\n+          RESEARCH_CONCLUDED + random.nextInt(3), I18n.format(IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MzY3MQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc3ODgwMQ==", "bodyText": "Looks like it's a part of the logic in https://github.com/ldtteam/Structurize/blob/version/1.16.3/src/main/java/com/ldtteam/structurize/util/LanguageHandler.java 's buildChatComponent to treat ITextComponents of any type as appends.  Probably easier to work around it for this case, ugly as the hack would be, than to revamp it there.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548778801", "createdAt": "2020-12-25T02:06:13Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingUniversity.java", "diffHunk": "@@ -241,8 +244,7 @@ public void onSuccess(final ILocalResearch research)\n         }\n \n         LanguageHandler.sendPlayersMessage(colony.getMessagePlayerEntities(),\n-          RESEARCH_CONCLUDED + random.nextInt(3),\n-          IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc());\n+          RESEARCH_CONCLUDED + random.nextInt(3), I18n.format(IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MzY3MQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODc5MjQxNw==", "bodyText": "Yeah, SendPlayersMessage is painful with it's behavior on TranslationTextComponent.\nIf you look in AbstractBuildingWorker|ImproveRecipe you can see a similar chunk of code that is very simple and does the replacements the way you expect.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548792417", "createdAt": "2020-12-25T03:46:09Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingUniversity.java", "diffHunk": "@@ -241,8 +244,7 @@ public void onSuccess(final ILocalResearch research)\n         }\n \n         LanguageHandler.sendPlayersMessage(colony.getMessagePlayerEntities(),\n-          RESEARCH_CONCLUDED + random.nextInt(3),\n-          IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc());\n+          RESEARCH_CONCLUDED + random.nextInt(3), I18n.format(IGlobalResearchTree.getInstance().getResearch(research.getBranch(), research.getId()).getDesc()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MzY3MQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc4MDEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/managers/CitizenManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoyODoyMFrOILE0jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo1NDoxNFrOILFR1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NDIzNw==", "bodyText": "What is this todo for?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548484237", "createdAt": "2020-12-24T10:28:20Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/CitizenManager.java", "diffHunk": "@@ -463,16 +462,11 @@ public int getPotentialMaxCitizens()\n      */\n     private double maxCitizensFromResearch()\n     {\n-        double max = 25;\n-        final AdditionModifierResearchEffect effect = colony.getResearchManager().getResearchEffects().getEffect(CAP, AdditionModifierResearchEffect.class);\n-        if (effect != null)\n+        final double max = 25 + colony.getResearchManager().getResearchEffects().getEffectValue(CITIZEN_CAP);\n+        // TODO research data rework\n+        if (max >= MineColonies.getConfig().getServer().maxCitizenPerColony.get())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4OTY5Mw==", "bodyText": "No clue.  Was present before I started, and I don\u2019t think I finished it.  Presumably want to handle broader max citizen caps, but I don\u2019t have enough experience with big colonies to be comfortable changing that behavior", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548489693", "createdAt": "2020-12-24T10:47:04Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/CitizenManager.java", "diffHunk": "@@ -463,16 +462,11 @@ public int getPotentialMaxCitizens()\n      */\n     private double maxCitizensFromResearch()\n     {\n-        double max = 25;\n-        final AdditionModifierResearchEffect effect = colony.getResearchManager().getResearchEffects().getEffect(CAP, AdditionModifierResearchEffect.class);\n-        if (effect != null)\n+        final double max = 25 + colony.getResearchManager().getResearchEffects().getEffectValue(CITIZEN_CAP);\n+        // TODO research data rework\n+        if (max >= MineColonies.getConfig().getServer().maxCitizenPerColony.get())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NDIzNw=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5MTczNQ==", "bodyText": "You can remove it then.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548491735", "createdAt": "2020-12-24T10:54:14Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/CitizenManager.java", "diffHunk": "@@ -463,16 +462,11 @@ public int getPotentialMaxCitizens()\n      */\n     private double maxCitizensFromResearch()\n     {\n-        double max = 25;\n-        final AdditionModifierResearchEffect effect = colony.getResearchManager().getResearchEffects().getEffect(CAP, AdditionModifierResearchEffect.class);\n-        if (effect != null)\n+        final double max = 25 + colony.getResearchManager().getResearchEffects().getEffectValue(CITIZEN_CAP);\n+        // TODO research data rework\n+        if (max >= MineColonies.getConfig().getServer().maxCitizenPerColony.get())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NDIzNw=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc4Mzk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/managers/ResearchManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoyOTo1N1rOILE2lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo1OTo1OFrOILFYGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NDc1OA==", "bodyText": "I'm not fully sure I grasp the idea behind Auto start research. What are the use cases for it? Don't we need a university for this too?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548484758", "createdAt": "2020-12-24T10:29:57Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/ResearchManager.java", "diffHunk": "@@ -45,4 +80,123 @@ public IResearchEffectManager getResearchEffects()\n     {\n         return this.effects;\n     }\n+\n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        checkAutoStartResearch(colony);\n+        checkInprogressResearch(colony);\n+    }\n+\n+    /**\n+     * Checks if any autostart research has its prerequisites filled,\n+     * and if so, prompts the player for resources or begins research if no resources required.\n+     * @param colony       The colony where the research is being checked.\n+     */\n+    private void checkAutoStartResearch(final IColony colony)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4OTA3OA==", "bodyText": "I think Mekle001\u2019s central use case involved situations where the university itself was locked, such as wanting to make it unbuildable until after a Town Hall T1 was constructed. Without having access to the WindowResearchTree GUI, you\u2019d need some way to start it.\nQuest-focused modpacks can kinda handle things by removing the University hut block recipe and making it a quest reward, but that\u2019s vulnerable to problems (ie, losing it to lava).\nOr if a modpack just wants to make a very linear path through the huts, it would save walking to the Uni and back each time for 10-20 unlocks.\nThe other situation, and one more common for your use, would just be to notify on reveal of Hidden research.  If More Scrolls should only be visible after getting a T3 Enchanter, it makes sense to tell the player that the new research is there \u2014 but it may not be desirable to always do such notification.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548489078", "createdAt": "2020-12-24T10:45:06Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/ResearchManager.java", "diffHunk": "@@ -45,4 +80,123 @@ public IResearchEffectManager getResearchEffects()\n     {\n         return this.effects;\n     }\n+\n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        checkAutoStartResearch(colony);\n+        checkInprogressResearch(colony);\n+    }\n+\n+    /**\n+     * Checks if any autostart research has its prerequisites filled,\n+     * and if so, prompts the player for resources or begins research if no resources required.\n+     * @param colony       The colony where the research is being checked.\n+     */\n+    private void checkAutoStartResearch(final IColony colony)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NDc1OA=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5MzMzOQ==", "bodyText": "I get the notification part. But for that we don't need to auto start the research. We'd just need an event based approach and a \"on unlock message\" that may be defined for a research. This way no ticking is required.\nFor the \"lock/unlock\" things without a university I'd probably go the same way. Just an unlock event", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548493339", "createdAt": "2020-12-24T10:59:58Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/ResearchManager.java", "diffHunk": "@@ -45,4 +80,123 @@ public IResearchEffectManager getResearchEffects()\n     {\n         return this.effects;\n     }\n+\n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        checkAutoStartResearch(colony);\n+        checkInprogressResearch(colony);\n+    }\n+\n+    /**\n+     * Checks if any autostart research has its prerequisites filled,\n+     * and if so, prompts the player for resources or begins research if no resources required.\n+     * @param colony       The colony where the research is being checked.\n+     */\n+    private void checkAutoStartResearch(final IColony colony)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NDc1OA=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc4NTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/managers/ResearchManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozMDo1MlrOILE3hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozMDo1MlrOILE3hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NDk5Nw==", "bodyText": "Why isn't this anymore in the place where the progress is incremented?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548484997", "createdAt": "2020-12-24T10:30:52Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/ResearchManager.java", "diffHunk": "@@ -45,4 +80,123 @@ public IResearchEffectManager getResearchEffects()\n     {\n         return this.effects;\n     }\n+\n+    @Override\n+    public void onColonyTick(final IColony colony)\n+    {\n+        checkAutoStartResearch(colony);\n+        checkInprogressResearch(colony);\n+    }\n+\n+    /**\n+     * Checks if any autostart research has its prerequisites filled,\n+     * and if so, prompts the player for resources or begins research if no resources required.\n+     * @param colony       The colony where the research is being checked.\n+     */\n+    private void checkAutoStartResearch(final IColony colony)\n+    {\n+        final List<IGlobalResearch> removes = new ArrayList<>();\n+        for(IGlobalResearch research : autoStartResearch)\n+        {\n+            if (!IGlobalResearchTree.getInstance().isResearchRequirementsFulfilled(research.getResearchRequirement(), colony))\n+            {\n+                continue;\n+            }\n+            Map<BlockPos, IBuilding> buildings = colony.getBuildingManager().getBuildings();\n+            int level = 0;\n+            for (Map.Entry<BlockPos, IBuilding> building : buildings.entrySet())\n+            {\n+                if (building.getValue().getBuildingRegistryEntry() == ModBuildings.university)\n+                {\n+                    if (building.getValue().getBuildingLevel() > level)\n+                    {\n+                        level = building.getValue().getBuildingLevel();\n+                    }\n+                }\n+            }\n+            if (level < research.getDepth())\n+            {\n+                continue;\n+            }\n+            boolean researchAlreadyRun = false;\n+            for (ILocalResearch progressResearch : colony.getResearchManager().getResearchTree().getResearchInProgress())\n+            {\n+                if(progressResearch.getId().equals(research.getId()))\n+                {\n+                    researchAlreadyRun = true;\n+                    break;\n+                }\n+            }\n+            // Don't want to spam people about in-progress or already-completed research.  Because these might change within a world,\n+            // we can't just save them or check against effects.\n+            if(researchAlreadyRun || colony.getResearchManager().getResearchTree().hasCompletedResearch(research.getId()))\n+            {\n+                removes.add(research);\n+                continue;\n+            }\n+\n+            // if research has item requirements, only notify player; we don't want to have items disappearing from inventories.\n+            if (!research.getCostList().isEmpty())\n+            {\n+                for (PlayerEntity player : colony.getMessagePlayerEntities())\n+                {\n+                    player.sendMessage(new TranslationTextComponent(TranslationConstants.RESEARCH_AVAILABLE, research.getDesc()), player.getUniqueID());\n+                }\n+            }\n+            // Otherwise, we can start the research without user intervention.\n+            else\n+            {\n+                boolean creativePlayer = false;\n+                tree.addResearch(research.getBranch(), new LocalResearch(research.getId(), research.getBranch(), research.getDepth()));\n+                for (PlayerEntity player : colony.getMessagePlayerEntities())\n+                {\n+                    player.sendMessage(new TranslationTextComponent(TranslationConstants.RESEARCH_AVAILABLE, research.getDesc()).\n+                                      append(new TranslationTextComponent(\"com.minecolonies.coremod.research.started\", new TranslationTextComponent(research.getDesc()))),\n+                      player.getUniqueID());\n+                    if (player.isCreative())\n+                    {\n+                        creativePlayer = true;\n+                    }\n+                }\n+                if (creativePlayer && MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchCreativeCompletion.get())\n+                {\n+                    tree.getResearch(research.getBranch(), research.getId()).setProgress((int)(BASE_RESEARCH_TIME * Math.pow(2, research.getDepth() - 1)));\n+                }\n+            }\n+            //  If we've successfully done all those things, now we can remove the object from the list.\n+            //  This will reannounce on world reload, but that's probably ideal, in case someone missed the message once.\n+            removes.add(research);\n+        }\n+        autoStartResearch.removeAll(removes);\n+    }\n+\n+    /**\n+     * Checks if any started research has progress greater than or equal to the amount required for completion, and if so, pushes it into\n+     * finished status.\n+     * @param colony        The colony being checked for completed research, and to which research effects will be applied.\n+     */\n+    private void checkInprogressResearch(final IColony colony)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc5NTY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/university/TryResearchMessage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozNTo1MFrOILE9Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozNTo1MFrOILE9Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NjQ1MQ==", "bodyText": "I've added a new sound handler thing for success and failure sounds, would make sense to integrate this here", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548486451", "createdAt": "2020-12-24T10:35:50Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/university/TryResearchMessage.java", "diffHunk": "@@ -76,50 +96,132 @@ protected void onExecute(\n             return;\n         }\n \n+        final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchId);\n+        if(reset)\n+        {\n+            if(colony.getResearchManager().getResearchTree().getResearch(branch, researchId) != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc5Nzc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/university/TryResearchMessage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozNjozN1rOILE-Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozNjozN1rOILE-Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NjcyMg==", "bodyText": "I feel like this code should be in the ResearchManager or even in the ResearchTree", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548486722", "createdAt": "2020-12-24T10:36:37Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/university/TryResearchMessage.java", "diffHunk": "@@ -76,50 +96,132 @@ protected void onExecute(\n             return;\n         }\n \n+        final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchId);\n+        if(reset)\n+        {\n+            if(colony.getResearchManager().getResearchTree().getResearch(branch, researchId) != null)\n+            {\n+                attemptResetResearch(player, colony, research);\n+            }\n+        }\n+        else\n+        {\n+            attemptBeginResearch(player, colony, building, research);\n+        }\n+    }\n+\n+    /**\n+     * Attempt to begin a research.\n+     * @param player     the player making the request (and to apply costs toward)\n+     * @param colony     the colony doing the research\n+     * @param building   the university doing the research\n+     * @param research   the research.\n+     */\n+    private void attemptBeginResearch(final PlayerEntity player, final IColony colony, final BuildingUniversity building, final IGlobalResearch research)\n+    {\n         if (colony.getResearchManager().getResearchTree().getResearch(branch, researchId) == null)\n         {\n-            final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchId);\n             if (research.canResearch(building.getBuildingLevel() == building.getMaxBuildingLevel() ? Integer.MAX_VALUE : building.getBuildingLevel(),\n               colony.getResearchManager().getResearchTree()) && research.hasEnoughResources(new InvWrapper(player.inventory)) || player.isCreative())\n             {\n                 if (player.isCreative())\n                 {\n-                    research.startResearch(player, colony.getResearchManager().getResearchTree());\n-                    colony.getResearchManager()\n-                      .getResearchTree()\n-                      .getResearch(branch, research.getId())\n-                      .setProgress((int) (BASE_RESEARCH_TIME * Math.pow(2, research.getDepth() - 1)));\n-                }\n-                else if (research.getResearchRequirement() != null && !research.getResearchRequirement().isFulfilled(colony))\n-                {\n-                    player.sendMessage(new TranslationTextComponent(\"com.minecolonies.coremod.research.requirementnotmet\"), player.getUniqueID());\n+                    research.startResearch(colony.getResearchManager().getResearchTree());\n+                    if (MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchCreativeCompletion.get())\n+                    {\n+                        colony.getResearchManager()\n+                          .getResearchTree()\n+                          .getResearch(branch, research.getId())\n+                          .setProgress((int) (BASE_RESEARCH_TIME * Math.pow(2, research.getDepth() - 1)));\n+                    }\n                     return;\n                 }\n-                else\n+                else if (!research.getResearchRequirement().isEmpty())\n                 {\n-                    for (final ItemStorage cost : research.getCostList())\n+                    for (IResearchRequirement requirement : research.getResearchRequirement())\n                     {\n-                        InventoryUtils.removeStackFromItemHandler(new InvWrapper(player.inventory), cost.getItemStack(), cost.getAmount());\n+                        if (!requirement.isFulfilled(colony))\n+                        {\n+                            player.sendMessage(new TranslationTextComponent(\"com.minecolonies.coremod.research.requirementnotmet\"), player.getUniqueID());\n+                            return;\n+                        }\n+                    }\n+                    // Remove items from player\n+                    if (!InventoryUtils.tryRemoveStackFromItemHandler(new InvWrapper(player.inventory), research.getCostList()))\n+                    {\n+                        player.sendMessage(new TranslationTextComponent(\"com.minecolonies.coremod.research.costnotavailable\", new TranslationTextComponent(research.getDesc())),\n+                          player.getUniqueID());\n+                        return;\n                     }\n-\n-                    player.sendMessage(new TranslationTextComponent(\"com.minecolonies.coremod.research.started\", research.getDesc()), player.getUniqueID());\n-                    research.startResearch(player, colony.getResearchManager().getResearchTree());\n                 }\n-                colony.markDirty();\n-                // Remove items from player\n+                player.sendMessage(new TranslationTextComponent(\"com.minecolonies.coremod.research.started\", new TranslationTextComponent(research.getDesc())),\n+                  player.getUniqueID());\n+                research.startResearch(colony.getResearchManager().getResearchTree());\n             }\n         }\n         else\n         {\n-            if (player.isCreative() && colony.getResearchManager().getResearchTree().getResearch(branch, researchId).getState() == ResearchState.IN_PROGRESS)\n+            if(player.isCreative())\n             {\n-                final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, researchId);\n-                colony.getResearchManager().getResearchTree().getResearch(branch, research.getId()).setProgress((int) (BASE_RESEARCH_TIME * Math.pow(2, research.getDepth() - 1)));\n+                if (MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchCreativeCompletion.get())\n+                {\n+                    colony.getResearchManager()\n+                      .getResearchTree()\n+                      .getResearch(branch, research.getId())\n+                      .setProgress((int) (BASE_RESEARCH_TIME * Math.pow(2, research.getDepth() - 1)));\n+                }\n             }\n             else\n             {\n                 player.sendMessage(new TranslationTextComponent(\"com.minecolonies.coremod.research.alreadystarted\"), player.getUniqueID());\n             }\n         }\n+        colony.markDirty();\n+    }\n+\n+    /**\n+     * Attempt to reset research for a colony.\n+     * @param player     the player making the request (and to apply costs toward)\n+     * @param colony     the colony to remove the research from.\n+     * @param research   the research.\n+     */\n+    private void attemptResetResearch(final PlayerEntity player, final IColony colony, final IGlobalResearch research)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc5OTc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/AlternateBuildingResearchRequirement.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozNzozNFrOILE_Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozNzozNFrOILE_Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4Njk5NA==", "bodyText": "newline", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548486994", "createdAt": "2020-12-24T10:37:34Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/AlternateBuildingResearchRequirement.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package com.minecolonies.coremod.research;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyView;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.colony.buildings.views.IBuildingView;\n+import com.minecolonies.api.research.IResearchRequirement;\n+import net.minecraft.util.text.TranslationTextComponent;\n+\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+/**\n+ * Requires one out of a list of buildings to be present.\n+ */\n+public class AlternateBuildingResearchRequirement implements IResearchRequirement\n+{\n+    /**\n+     * The list of buildings, by level.\n+     */\n+    final private Map<String, Integer> buildings = new HashMap<>();\n+\n+    /**\n+     * Create a building-based research requirement, that requires one of multiple buildings be constructed.\n+     *\n+     */\n+    public AlternateBuildingResearchRequirement add(String building, int level)\n+    {\n+        if(buildings.containsKey(building))\n+        {\n+            buildings.put(building, buildings.get(building) + level);\n+        }\n+        else\n+        {\n+            buildings.put(building, level);\n+        }\n+        return this;\n+    }\n+\n+\n+    /**\n+     * @return the building description\n+     */\n+    public Map<String, Integer> getBuildings()\n+    {\n+        return buildings;\n+    }\n+\n+    @Override\n+    public boolean isFulfilled(final IColony colony)\n+    {\n+        for(Map.Entry<String, Integer> requirement : buildings.entrySet())\n+        {\n+            int sum = 0;\n+            if(colony instanceof IColonyView)\n+            {\n+                for (final IBuildingView building : ((IColonyView) colony).getBuildings())\n+                {\n+                    if (building.getSchematicName().equals(requirement.getKey()))\n+                    {\n+                        sum += building.getBuildingLevel();\n+\n+                        if(sum >= requirement.getValue())\n+                        {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+            else if(colony instanceof IColony)\n+            {\n+                for (final IBuilding building : colony.getBuildingManager().getBuildings().values())\n+                {\n+                    if (building.getSchematicName().equalsIgnoreCase(requirement.getKey()))\n+                    {\n+                        sum += building.getBuildingLevel();\n+\n+                        if (sum >= requirement.getValue())\n+                        {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+            return false;\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public TranslationTextComponent getDesc()\n+    {\n+        final TranslationTextComponent requirementList = new TranslationTextComponent(\"\");\n+        final Iterator<Map.Entry<String, Integer>> iterator = buildings.entrySet().iterator();\n+        while(iterator.hasNext())\n+        {\n+            final Map.Entry<String, Integer> kvp = iterator.next();\n+            requirementList.append(new TranslationTextComponent(\"com.minecolonies.coremod.research.requirement.building.level\", new TranslationTextComponent(\"block.minecolonies.blockhut\" + kvp.getKey()), kvp.getValue()));\n+            if(iterator.hasNext())\n+            {\n+                requirementList.append(new TranslationTextComponent(\"com.minecolonies.coremod.research.requirement.building.or\"));\n+            }\n+        }\n+        return requirementList;\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODgwMjg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozOTowNVrOILFA9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozOTowNVrOILFA9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NzQxNQ==", "bodyText": "Use the dist executor for this then", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548487415", "createdAt": "2020-12-24T10:39:05Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -256,14 +438,396 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public ImmutableList<String> getChilds()\n+    public ImmutableList<String> getChildren()\n     {\n-        return ImmutableList.copyOf(this.childs);\n+        return ImmutableList.copyOf(this.children);\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect> getEffects()\n+    {\n+        return this.effects;\n+    }\n+\n+    @Override\n+    public String getIcon() {return this.icon;}\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, final ResourceLocation resourceLocation, final Map<String, ResearchEffectCategory> effectCategories)\n     {\n-        return effect;\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        //TODO: make getResearchIcon fire only for client-side.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 475}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODgwNDc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDozOTo1OFrOILFB_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMTo0ODo0MVrOILGKgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NzY3OQ==", "bodyText": "This seems overly complex to just get a resource location?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548487679", "createdAt": "2020-12-24T10:39:58Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -256,14 +438,396 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public ImmutableList<String> getChilds()\n+    public ImmutableList<String> getChildren()\n     {\n-        return ImmutableList.copyOf(this.childs);\n+        return ImmutableList.copyOf(this.children);\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect> getEffects()\n+    {\n+        return this.effects;\n+    }\n+\n+    @Override\n+    public String getIcon() {return this.icon;}\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, final ResourceLocation resourceLocation, final Map<String, ResearchEffectCategory> effectCategories)\n     {\n-        return effect;\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        //TODO: make getResearchIcon fire only for client-side.\n+        // icons are only used in client, and may reference files that don't exist on server.\n+        // Performance impact is relatively low, but may leave erroneous log errors.\n+        this.icon = getResearchIcon(researchJson);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+        this.immutable = getBooleanSafe(researchJson, RESEARCH_NO_RESET_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    /**\n+     * Gets the unique ID for a research from a JSON object, if it exists and is valid, or an empty string otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the ID from.\n+     * @param resourceLocation    The {@link ResourceLocation} of the json being parsed.\n+     * @return                    The ResearchID as a String.\n+     */\n+    private String getResearchId(final JsonObject researchJson, final ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the optional name for a research from a JSON object, if it exists and is valid, or an empty string otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the Name from.\n+     * @return                    The Research Name as a String.\n+     */\n+    private String getResearchName(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the branch for a research from a JSON object, if it exists and is valid, or \"parseerrors\" otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the ID from.\n+     * @param resourceLocation    The {@link ResourceLocation} of the json being parsed.\n+     * @return                    The Research Branch as a String.\n+     */\n+    private String getBranch(final JsonObject researchJson, final ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_BRANCH_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research Branch for\" + resourceLocation);\n+            return \"parseerrors\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the required university level from a JSON object, if it exists and is valid, or returns 1 if not.\n+     *\n+     * @param researchJson        A json object to retrieve the requiredUniversityLevel from.\n+     * @return                    The required university level as an integer.\n+     */\n+    private int getUniversityLevel(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsJsonPrimitive().isNumber())\n+        {\n+            return researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsNumber().intValue();\n+        }\n+        else\n+        {\n+            Log.getLogger().info(\"No declared university level for \" + this.branch + \"/\" + this.id );\n+            return 1;\n+        }\n+    }\n+\n+    /**\n+     * Gets the optional icon location from a research json, if present.  If not available, or if requests a file or block that does not exist, returns an empty string.\n+     * @param researchJson        A json object to retrieve the requiredUniversityLevel from.\n+     * @return                    The required university level as an integer.\n+     */\n+    private String getResearchIcon(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_ICON_PROP) && researchJson.get(RESEARCH_ICON_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ICON_PROP).getAsJsonPrimitive().isString())\n+        {\n+            final String[] iconParts = researchJson.get(RESEARCH_ICON_PROP).getAsString().split(\":\");\n+            final String[] outputString = new String[3];\n+            // Do preliminary validation here, as later uses will always be in UI space.\n+            if(iconParts.length > 3)\n+            {\n+                Log.getLogger().info(\"Malformed icon property for \" + this.branch + \"/\" + this.id + \".  Icons may contain at most namespace:identifier:count.\");\n+                return \"\";\n+            }\n+\n+            if(iconParts.length == 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 586}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUwNTU5Nw==", "bodyText": "Needs to handle and distinguish textures or items, with and without namespaces, and for items with or without counts, which may be entered by typo if users and not just developers.\nI can move the validation stuff elsewhere, but most of it is important: a bad texture location just spams the console each time it\u2019s called , but an unparsable number would just crash Minecraft entirely with an awful stack trace since it\u2019s going to GUI space.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548505597", "createdAt": "2020-12-24T11:46:00Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -256,14 +438,396 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public ImmutableList<String> getChilds()\n+    public ImmutableList<String> getChildren()\n     {\n-        return ImmutableList.copyOf(this.childs);\n+        return ImmutableList.copyOf(this.children);\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect> getEffects()\n+    {\n+        return this.effects;\n+    }\n+\n+    @Override\n+    public String getIcon() {return this.icon;}\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, final ResourceLocation resourceLocation, final Map<String, ResearchEffectCategory> effectCategories)\n     {\n-        return effect;\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        //TODO: make getResearchIcon fire only for client-side.\n+        // icons are only used in client, and may reference files that don't exist on server.\n+        // Performance impact is relatively low, but may leave erroneous log errors.\n+        this.icon = getResearchIcon(researchJson);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+        this.immutable = getBooleanSafe(researchJson, RESEARCH_NO_RESET_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    /**\n+     * Gets the unique ID for a research from a JSON object, if it exists and is valid, or an empty string otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the ID from.\n+     * @param resourceLocation    The {@link ResourceLocation} of the json being parsed.\n+     * @return                    The ResearchID as a String.\n+     */\n+    private String getResearchId(final JsonObject researchJson, final ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the optional name for a research from a JSON object, if it exists and is valid, or an empty string otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the Name from.\n+     * @return                    The Research Name as a String.\n+     */\n+    private String getResearchName(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the branch for a research from a JSON object, if it exists and is valid, or \"parseerrors\" otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the ID from.\n+     * @param resourceLocation    The {@link ResourceLocation} of the json being parsed.\n+     * @return                    The Research Branch as a String.\n+     */\n+    private String getBranch(final JsonObject researchJson, final ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_BRANCH_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research Branch for\" + resourceLocation);\n+            return \"parseerrors\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the required university level from a JSON object, if it exists and is valid, or returns 1 if not.\n+     *\n+     * @param researchJson        A json object to retrieve the requiredUniversityLevel from.\n+     * @return                    The required university level as an integer.\n+     */\n+    private int getUniversityLevel(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsJsonPrimitive().isNumber())\n+        {\n+            return researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsNumber().intValue();\n+        }\n+        else\n+        {\n+            Log.getLogger().info(\"No declared university level for \" + this.branch + \"/\" + this.id );\n+            return 1;\n+        }\n+    }\n+\n+    /**\n+     * Gets the optional icon location from a research json, if present.  If not available, or if requests a file or block that does not exist, returns an empty string.\n+     * @param researchJson        A json object to retrieve the requiredUniversityLevel from.\n+     * @return                    The required university level as an integer.\n+     */\n+    private String getResearchIcon(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_ICON_PROP) && researchJson.get(RESEARCH_ICON_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ICON_PROP).getAsJsonPrimitive().isString())\n+        {\n+            final String[] iconParts = researchJson.get(RESEARCH_ICON_PROP).getAsString().split(\":\");\n+            final String[] outputString = new String[3];\n+            // Do preliminary validation here, as later uses will always be in UI space.\n+            if(iconParts.length > 3)\n+            {\n+                Log.getLogger().info(\"Malformed icon property for \" + this.branch + \"/\" + this.id + \".  Icons may contain at most namespace:identifier:count.\");\n+                return \"\";\n+            }\n+\n+            if(iconParts.length == 3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NzY3OQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 586}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUwNjI0Mg==", "bodyText": "ok", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548506242", "createdAt": "2020-12-24T11:48:41Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearch.java", "diffHunk": "@@ -256,14 +438,396 @@ public void setParent(final String id)\n     }\n \n     @Override\n-    public ImmutableList<String> getChilds()\n+    public ImmutableList<String> getChildren()\n     {\n-        return ImmutableList.copyOf(this.childs);\n+        return ImmutableList.copyOf(this.children);\n     }\n \n     @Override\n-    public IResearchEffect<?> getEffect()\n+    public List<IResearchEffect> getEffects()\n+    {\n+        return this.effects;\n+    }\n+\n+    @Override\n+    public String getIcon() {return this.icon;}\n+\n+    /**\n+     * Parse a Json object into a new GlobalResearch.\n+     *\n+     * @param researchJson the json representing the recipe\n+     * @return new instance of ResearchRecipe\n+     */\n+    public GlobalResearch(@NotNull final JsonObject researchJson, final ResourceLocation resourceLocation, final Map<String, ResearchEffectCategory> effectCategories)\n     {\n-        return effect;\n+        this.resourceLocation = resourceLocation;\n+\n+        this.id = getResearchId(researchJson, resourceLocation);\n+        this.name = getResearchName(researchJson);\n+        this.branch = getBranch(researchJson, resourceLocation);\n+        //TODO: make getResearchIcon fire only for client-side.\n+        // icons are only used in client, and may reference files that don't exist on server.\n+        // Performance impact is relatively low, but may leave erroneous log errors.\n+        this.icon = getResearchIcon(researchJson);\n+        this.depth = getUniversityLevel(researchJson);\n+        this.parent = getParent(researchJson);\n+        this.onlyChild = getBooleanSafe(researchJson, RESEARCH_EXCLUSIVE_CHILD_PROP);\n+        this.instant = getBooleanSafe(researchJson, RESEARCH_INSTANT_PROP);\n+        this.autostart = getBooleanSafe(researchJson, RESEARCH_AUTOSTART_PROP);\n+        this.hidden = getBooleanSafe(researchJson, RESEARCH_HIDDEN_PROP);\n+        this.immutable = getBooleanSafe(researchJson, RESEARCH_NO_RESET_PROP);\n+\n+        parseRequirements(researchJson);\n+        parseEffects(researchJson, effectCategories);\n+    }\n+\n+    /**\n+     * Gets the unique ID for a research from a JSON object, if it exists and is valid, or an empty string otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the ID from.\n+     * @param resourceLocation    The {@link ResourceLocation} of the json being parsed.\n+     * @return                    The ResearchID as a String.\n+     */\n+    private String getResearchId(final JsonObject researchJson, final ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_ID_PROP) && researchJson.get(RESEARCH_ID_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ID_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_ID_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research ID for\" + resourceLocation);\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the optional name for a research from a JSON object, if it exists and is valid, or an empty string otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the Name from.\n+     * @return                    The Research Name as a String.\n+     */\n+    private String getResearchName(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_NAME_PROP) && researchJson.get(RESEARCH_NAME_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_NAME_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_NAME_PROP).getAsString();\n+        }\n+        else\n+        {\n+            return \"\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the branch for a research from a JSON object, if it exists and is valid, or \"parseerrors\" otherwise.\n+     *\n+     * @param researchJson        A json object to retrieve the ID from.\n+     * @param resourceLocation    The {@link ResourceLocation} of the json being parsed.\n+     * @return                    The Research Branch as a String.\n+     */\n+    private String getBranch(final JsonObject researchJson, final ResourceLocation resourceLocation)\n+    {\n+        if (researchJson.has(RESEARCH_BRANCH_PROP) && researchJson.get(RESEARCH_BRANCH_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_BRANCH_PROP).getAsJsonPrimitive().isString())\n+        {\n+            return researchJson.get(RESEARCH_BRANCH_PROP).getAsString();\n+        }\n+        else\n+        {\n+            Log.getLogger().error(\"Error in Research Branch for\" + resourceLocation);\n+            return \"parseerrors\";\n+        }\n+    }\n+\n+    /**\n+     * Gets the required university level from a JSON object, if it exists and is valid, or returns 1 if not.\n+     *\n+     * @param researchJson        A json object to retrieve the requiredUniversityLevel from.\n+     * @return                    The required university level as an integer.\n+     */\n+    private int getUniversityLevel(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_UNIVERSITY_LEVEL_PROP) && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsJsonPrimitive().isNumber())\n+        {\n+            return researchJson.get(RESEARCH_UNIVERSITY_LEVEL_PROP).getAsNumber().intValue();\n+        }\n+        else\n+        {\n+            Log.getLogger().info(\"No declared university level for \" + this.branch + \"/\" + this.id );\n+            return 1;\n+        }\n+    }\n+\n+    /**\n+     * Gets the optional icon location from a research json, if present.  If not available, or if requests a file or block that does not exist, returns an empty string.\n+     * @param researchJson        A json object to retrieve the requiredUniversityLevel from.\n+     * @return                    The required university level as an integer.\n+     */\n+    private String getResearchIcon(final JsonObject researchJson)\n+    {\n+        if (researchJson.has(RESEARCH_ICON_PROP) && researchJson.get(RESEARCH_ICON_PROP).isJsonPrimitive() && researchJson.get(RESEARCH_ICON_PROP).getAsJsonPrimitive().isString())\n+        {\n+            final String[] iconParts = researchJson.get(RESEARCH_ICON_PROP).getAsString().split(\":\");\n+            final String[] outputString = new String[3];\n+            // Do preliminary validation here, as later uses will always be in UI space.\n+            if(iconParts.length > 3)\n+            {\n+                Log.getLogger().info(\"Malformed icon property for \" + this.branch + \"/\" + this.id + \".  Icons may contain at most namespace:identifier:count.\");\n+                return \"\";\n+            }\n+\n+            if(iconParts.length == 3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4NzY3OQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 586}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODgxMDgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearchTree.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo0MzowNVrOILFFUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMTozMzo0MVrOILF75g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4ODUyOA==", "bodyText": "I still don't fully understand what and why it does this.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548488528", "createdAt": "2020-12-24T10:43:05Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearchTree.java", "diffHunk": "@@ -65,9 +139,63 @@ public void addResearch(final String branch, final IGlobalResearch research)\n         {\n             return Collections.emptyList();\n         }\n-        return researchTree.get(branch).values().stream().filter(research -> research.getParent().isEmpty()).map(IGlobalResearch::getId).collect(Collectors.toList());\n+        return researchTree.get(branch).values().stream().filter(research -> research.getParent().isEmpty())\n+                 .sorted(Comparator.comparing(IGlobalResearch::getResourceLocation))\n+                 .map(IGlobalResearch::getId).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public void reset()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUwMTMyNQ==", "bodyText": "Data packs are per-world, not per-Minecraft instance, while the Global Research Tree is per-Minecraft instance.  If someone logs into World A, which has several extra researches in its data pack, then into World B, which only has the defaults, the tree needs to be reset lest the client see the extra researches on a world that doesn\u2019t have them.\nThis gets worse for multiplayer.\nI don\u2019t think it\u2019s a common failure mode, but it would be especially frustrating to diagnose due to its specific nature.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548501325", "createdAt": "2020-12-24T11:28:57Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearchTree.java", "diffHunk": "@@ -65,9 +139,63 @@ public void addResearch(final String branch, final IGlobalResearch research)\n         {\n             return Collections.emptyList();\n         }\n-        return researchTree.get(branch).values().stream().filter(research -> research.getParent().isEmpty()).map(IGlobalResearch::getId).collect(Collectors.toList());\n+        return researchTree.get(branch).values().stream().filter(research -> research.getParent().isEmpty())\n+                 .sorted(Comparator.comparing(IGlobalResearch::getResourceLocation))\n+                 .map(IGlobalResearch::getId).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public void reset()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4ODUyOA=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUwMjUwMg==", "bodyText": "Ahh, makes sense, okay", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548502502", "createdAt": "2020-12-24T11:33:41Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/GlobalResearchTree.java", "diffHunk": "@@ -65,9 +139,63 @@ public void addResearch(final String branch, final IGlobalResearch research)\n         {\n             return Collections.emptyList();\n         }\n-        return researchTree.get(branch).values().stream().filter(research -> research.getParent().isEmpty()).map(IGlobalResearch::getId).collect(Collectors.toList());\n+        return researchTree.get(branch).values().stream().filter(research -> research.getParent().isEmpty())\n+                 .sorted(Comparator.comparing(IGlobalResearch::getResourceLocation))\n+                 .map(IGlobalResearch::getId).collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public void reset()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4ODUyOA=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODgxNjQ0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/LocalResearch.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo0NTo1NFrOILFIbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMToyMTozOFrOILFvSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4OTMyNQ==", "bodyText": "I don't think I want this to be configurable via the config file so easily. Either people play creative mode and get it instant, or wait 1h for a level 1 research.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548489325", "createdAt": "2020-12-24T10:45:54Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/LocalResearch.java", "diffHunk": "@@ -57,11 +59,14 @@ public boolean research(final IResearchEffectManager effects, final ILocalResear\n     {\n         if (state == ResearchState.IN_PROGRESS)\n         {\n-            progress++;\n+            progress += (1 * MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchSpeedMultiplier.get());\n             if (progress >= BASE_RESEARCH_TIME * Math.pow(2, depth - 1))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5NDcwMg==", "bodyText": "Largely trying to consider the modpack case, where there may be a whole ton of extra recipe-related use cases (and testing non-creative behavior).   Would making it a separate Json in the data pack avoid the \u2018every schmuck immediately configs to max\u2019 issue?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548494702", "createdAt": "2020-12-24T11:05:25Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/research/LocalResearch.java", "diffHunk": "@@ -57,11 +59,14 @@ public boolean research(final IResearchEffectManager effects, final ILocalResear\n     {\n         if (state == ResearchState.IN_PROGRESS)\n         {\n-            progress++;\n+            progress += (1 * MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchSpeedMultiplier.get());\n             if (progress >= BASE_RESEARCH_TIME * Math.pow(2, depth - 1))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4OTMyNQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5NTkwOQ==", "bodyText": "Potentially we could have a setting per \"main branch\" on how long each research needs in the datapack.\nLike:\n\"combat\": \"1: (1h per level)\n\"civilian\": 2 (2h per level)\n\"technology\": 0.5 (30min per level)\nCould be a configuration, this way we can also display the exact time each of them needs in the top", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548495909", "createdAt": "2020-12-24T11:09:30Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/LocalResearch.java", "diffHunk": "@@ -57,11 +59,14 @@ public boolean research(final IResearchEffectManager effects, final ILocalResear\n     {\n         if (state == ResearchState.IN_PROGRESS)\n         {\n-            progress++;\n+            progress += (1 * MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchSpeedMultiplier.get());\n             if (progress >= BASE_RESEARCH_TIME * Math.pow(2, depth - 1))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4OTMyNQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5ODc1NA==", "bodyText": "Prefer to keep the power-of-two approach in that case over defining levels individually?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548498754", "createdAt": "2020-12-24T11:19:46Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/research/LocalResearch.java", "diffHunk": "@@ -57,11 +59,14 @@ public boolean research(final IResearchEffectManager effects, final ILocalResear\n     {\n         if (state == ResearchState.IN_PROGRESS)\n         {\n-            progress++;\n+            progress += (1 * MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchSpeedMultiplier.get());\n             if (progress >= BASE_RESEARCH_TIME * Math.pow(2, depth - 1))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4OTMyNQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5OTI3Mg==", "bodyText": "I'd keep the power of two. If one day a pack maker actually wants to define this more fine grained, we can think about this.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548499272", "createdAt": "2020-12-24T11:21:38Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/LocalResearch.java", "diffHunk": "@@ -57,11 +59,14 @@ public boolean research(final IResearchEffectManager effects, final ILocalResear\n     {\n         if (state == ResearchState.IN_PROGRESS)\n         {\n-            progress++;\n+            progress += (1 * MinecoloniesAPIProxy.getInstance().getConfig().getServer().researchSpeedMultiplier.get());\n             if (progress >= BASE_RESEARCH_TIME * Math.pow(2, depth - 1))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4OTMyNQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODgxOTUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/LocalResearchTree.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo0NzoxNlrOILFKDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo0NzoxNlrOILFKDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4OTc0Mw==", "bodyText": "I would only allow to reset research without concluded parents. This way players have to reset one by one.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548489743", "createdAt": "2020-12-24T10:47:16Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/LocalResearchTree.java", "diffHunk": "@@ -94,7 +129,68 @@ public boolean branchFinishedHighestLevel(final String branch)\n     @Override\n     public void finishResearch(final String id)\n     {\n-        inProgress.remove(id);\n+        inProgress.remove(id); isComplete.add(id);\n+    }\n+\n+    @Override\n+    public void cancelResearch(final String branch, final String id, final IColony colony)\n+    {\n+        checkAndResetDescendants(branch, Arrays.asList(id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODgyMjg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/research/ResearchEffectManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo0OTowMlrOILFL9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo0OTowMlrOILFL9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5MDIzMQ==", "bodyText": "double too", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548490231", "createdAt": "2020-12-24T10:49:02Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/research/ResearchEffectManager.java", "diffHunk": "@@ -25,10 +27,35 @@\n         {\n             return (W) effect;\n         }\n-\n         return null;\n     }\n \n+    @Override\n+    public float getEffectValue(final String id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODgyNzY2OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/researches/civilian/1_1_stamina.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDo1MToxOVrOILFOkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMTo0Nzo1MFrOILGJsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5MDg5OQ==", "bodyText": "can you run the idea auto formatter on the jsons only?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548490899", "createdAt": "2020-12-24T10:51:19Z", "author": {"login": "Raycoms"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_1_stamina.json", "diffHunk": "@@ -0,0 +1,16 @@\n+{\n+  \"comment\": \"name: Stamina * description : Hospital\",\n+  \"id\": \"stamina\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"icon\": \"minecolonies:blockhuthospital\",\n+  \"exclusiveChildResearch\": true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUwNjAzMg==", "bodyText": "Yeah. Sorry about those, the auto generate tool I\u2019ve got was originally for a different context", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r548506032", "createdAt": "2020-12-24T11:47:50Z", "author": {"login": "gattsuru"}, "path": "src/main/resources/data/minecolonies/researches/civilian/1_1_stamina.json", "diffHunk": "@@ -0,0 +1,16 @@\n+{\n+  \"comment\": \"name: Stamina * description : Hospital\",\n+  \"id\": \"stamina\",\n+  \"branch\": \"civilian\",\n+  \"requiredUniversityLevel\": 1,\n+  \"icon\": \"minecolonies:blockhuthospital\",\n+  \"exclusiveChildResearch\": true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ5MDg5OQ=="}, "originalCommit": {"oid": "e4248071b4dc8fa7f5fb2bf5f2586c650a04fc86"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzY4OTkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjoxMToxMFrOILsRWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjoxMToxMFrOILsRWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMDU4Ng==", "bodyText": "probably use else if\nand put research into else branch", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549130586", "createdAt": "2020-12-27T16:11:10Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -74,57 +99,94 @@ public WindowResearchTree(final String branch, final BuildingUniversity.View bui\n \n         final ZoomDragView view = findPaneOfTypeByID(DRAG_VIEW_ID, ZoomDragView.class);\n \n-        drawTree(0, 0, view, researchList, building.getColony().getResearchManager().getResearchTree(), true, false, 0);\n-\n-        for (int i = 1; i <= MAX_DEPTH; i++)\n-        {\n-            final Label timeLabel = new Label();\n-            timeLabel.setLabelText(Math.pow(2, i - 1) + \"h\");\n-            timeLabel.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING) + GRADIENT_WIDTH / 2, TIMELABEL_Y_POSITION);\n-            timeLabel.setColor(Color.rgbaToInt(218, 202, 171, 255));\n-            view.addChild(timeLabel);\n-        }\n+        drawTreeBackground(view);\n+        drawTree(0, 0, view, researchList, false);\n     }\n \n-    /**\n-     *\n-     * @param researchRequirement requirement to start research\n-     * @return whether the requirement has been satisfied for research\n-     */\n-    private boolean isResearchFulfilled(final BuildingResearchRequirement researchRequirement)\n+    @Override\n+    public void onButtonClicked(@NotNull final Button button)\n     {\n-        List<IBuildingView> buildings = building.getColony().getBuildings();\n-        int levels = 0;\n-\n-        if (researchRequirement == null)\n+        super.onButtonClicked(button);\n+        if (button.getParent().getChildren().contains(undoButton))\n         {\n-            return true;\n+            button.getParent().removeChild(undoButton);\n         }\n-\n-        for (IBuildingView building : buildings)\n+        for(ItemIcon icon : undoCostIcons)\n         {\n-            if (building.getSchematicName().equals(researchRequirement.getBuilding()))\n+            if(button.getParent().getChildren().contains(icon))\n             {\n-                levels += building.getBuildingLevel();\n+                button.getParent().removeChild(icon);\n             }\n         }\n-\n-        return levels >= researchRequirement.getBuildingLevel();\n-    }\n-\n-    @Override\n-    public void onButtonClicked(@NotNull final Button button)\n-    {\n-        super.onButtonClicked(button);\n+        if(displacedButton != null && displacedHoverText != null)\n+        {\n+            displacedButton.setHoverToolTip(displacedHoverText);\n+        }\n+        if(button.getID().isEmpty())\n+        {\n+            return;\n+        }\n \n         final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, button.getID());\n-        if (research != null &&\n-              building.getBuildingLevel() > building.getColony().getResearchManager().getResearchTree().getResearchInProgress().size() &&\n-              (building.getBuildingLevel() >= research.getDepth() || building.getBuildingLevel() == building.getBuildingMaxLevel()) &&\n-              research.hasEnoughResources(new InvWrapper(Minecraft.getInstance().player.inventory)) || (research != null && mc.player.isCreative()))\n+        if (research != null && (building.getBuildingLevel() >= research.getDepth() || building.getBuildingLevel() == building.getBuildingMaxLevel()))\n         {\n-            Network.getNetwork().sendToServer(new TryResearchMessage(building, research.getId(), research.getBranch()));\n-            close();\n+            final ILocalResearch localResearch = building.getColony().getResearchManager().getResearchTree().getResearch(branch, research.getId());\n+            if (localResearch == null && building.getBuildingLevel() > building.getColony().getResearchManager().getResearchTree().getResearchInProgress().size()&&\n+                  (research.hasEnoughResources(new InvWrapper(Minecraft.getInstance().player.inventory)) || (mc.player.isCreative())))\n+            {\n+                // this side won't actually start research; it'll be overridden the next colony update from the server.\n+                // It will, however, update for the next WindowResearchTree if the colony update is slow to come back.\n+                research.startResearch(building.getColony().getResearchManager().getResearchTree());\n+                Network.getNetwork().sendToServer(new TryResearchMessage(building, research.getId(), research.getBranch(), false));\n+                close();\n+            }\n+            else if (localResearch != null)\n+            {\n+                if (localResearch.getState() == ResearchState.IN_PROGRESS)\n+                {\n+                    drawUndoProgressButton(button);\n+                }\n+                if (localResearch.getState() == ResearchState.FINISHED)\n+                {\n+                    if(hasMax && research.getDepth() == MAX_DEPTH && building.getBuildingLevel() == building.getBuildingMaxLevel() && !research.isImmutable())\n+                    {\n+                        drawUndoCompleteButton(button);\n+                    }\n+                    for(String childId : research.getChildren())\n+                    {\n+                        if(building.getColony().getResearchManager().getResearchTree().getResearch(branch, childId) != null\n+                          && building.getColony().getResearchManager().getResearchTree().getResearch(branch, childId).getState() != ResearchState.NOT_STARTED)\n+                        {\n+                            return;\n+                        }\n+                    }\n+                    String parentId = IGlobalResearchTree.getInstance().getResearch(branch, research.getId()).getParent();\n+                    while(!parentId.isEmpty())\n+                    {\n+                        if (IGlobalResearchTree.getInstance().getResearch(branch, parentId) != null\n+                              && IGlobalResearchTree.getInstance().getResearch(branch, parentId).hasOnlyChild())\n+                        {\n+                            drawUndoCompleteButton(button);\n+                            break;\n+                        }\n+                        parentId = IGlobalResearchTree.getInstance().getResearch(branch, parentId).getParent();\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (button.getID().contains(\"undo.\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 189}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzY5MDM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjoxMTo0MlrOILsRiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNzo0MjoxNlrOILtH-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMDYzNQ==", "bodyText": "This sounds a bit weird handling to me", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549130635", "createdAt": "2020-12-27T16:11:42Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -74,57 +99,94 @@ public WindowResearchTree(final String branch, final BuildingUniversity.View bui\n \n         final ZoomDragView view = findPaneOfTypeByID(DRAG_VIEW_ID, ZoomDragView.class);\n \n-        drawTree(0, 0, view, researchList, building.getColony().getResearchManager().getResearchTree(), true, false, 0);\n-\n-        for (int i = 1; i <= MAX_DEPTH; i++)\n-        {\n-            final Label timeLabel = new Label();\n-            timeLabel.setLabelText(Math.pow(2, i - 1) + \"h\");\n-            timeLabel.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING) + GRADIENT_WIDTH / 2, TIMELABEL_Y_POSITION);\n-            timeLabel.setColor(Color.rgbaToInt(218, 202, 171, 255));\n-            view.addChild(timeLabel);\n-        }\n+        drawTreeBackground(view);\n+        drawTree(0, 0, view, researchList, false);\n     }\n \n-    /**\n-     *\n-     * @param researchRequirement requirement to start research\n-     * @return whether the requirement has been satisfied for research\n-     */\n-    private boolean isResearchFulfilled(final BuildingResearchRequirement researchRequirement)\n+    @Override\n+    public void onButtonClicked(@NotNull final Button button)\n     {\n-        List<IBuildingView> buildings = building.getColony().getBuildings();\n-        int levels = 0;\n-\n-        if (researchRequirement == null)\n+        super.onButtonClicked(button);\n+        if (button.getParent().getChildren().contains(undoButton))\n         {\n-            return true;\n+            button.getParent().removeChild(undoButton);\n         }\n-\n-        for (IBuildingView building : buildings)\n+        for(ItemIcon icon : undoCostIcons)\n         {\n-            if (building.getSchematicName().equals(researchRequirement.getBuilding()))\n+            if(button.getParent().getChildren().contains(icon))\n             {\n-                levels += building.getBuildingLevel();\n+                button.getParent().removeChild(icon);\n             }\n         }\n-\n-        return levels >= researchRequirement.getBuildingLevel();\n-    }\n-\n-    @Override\n-    public void onButtonClicked(@NotNull final Button button)\n-    {\n-        super.onButtonClicked(button);\n+        if(displacedButton != null && displacedHoverText != null)\n+        {\n+            displacedButton.setHoverToolTip(displacedHoverText);\n+        }\n+        if(button.getID().isEmpty())\n+        {\n+            return;\n+        }\n \n         final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, button.getID());\n-        if (research != null &&\n-              building.getBuildingLevel() > building.getColony().getResearchManager().getResearchTree().getResearchInProgress().size() &&\n-              (building.getBuildingLevel() >= research.getDepth() || building.getBuildingLevel() == building.getBuildingMaxLevel()) &&\n-              research.hasEnoughResources(new InvWrapper(Minecraft.getInstance().player.inventory)) || (research != null && mc.player.isCreative()))\n+        if (research != null && (building.getBuildingLevel() >= research.getDepth() || building.getBuildingLevel() == building.getBuildingMaxLevel()))\n         {\n-            Network.getNetwork().sendToServer(new TryResearchMessage(building, research.getId(), research.getBranch()));\n-            close();\n+            final ILocalResearch localResearch = building.getColony().getResearchManager().getResearchTree().getResearch(branch, research.getId());\n+            if (localResearch == null && building.getBuildingLevel() > building.getColony().getResearchManager().getResearchTree().getResearchInProgress().size()&&\n+                  (research.hasEnoughResources(new InvWrapper(Minecraft.getInstance().player.inventory)) || (mc.player.isCreative())))\n+            {\n+                // this side won't actually start research; it'll be overridden the next colony update from the server.\n+                // It will, however, update for the next WindowResearchTree if the colony update is slow to come back.\n+                research.startResearch(building.getColony().getResearchManager().getResearchTree());\n+                Network.getNetwork().sendToServer(new TryResearchMessage(building, research.getId(), research.getBranch(), false));\n+                close();\n+            }\n+            else if (localResearch != null)\n+            {\n+                if (localResearch.getState() == ResearchState.IN_PROGRESS)\n+                {\n+                    drawUndoProgressButton(button);\n+                }\n+                if (localResearch.getState() == ResearchState.FINISHED)\n+                {\n+                    if(hasMax && research.getDepth() == MAX_DEPTH && building.getBuildingLevel() == building.getBuildingMaxLevel() && !research.isImmutable())\n+                    {\n+                        drawUndoCompleteButton(button);\n+                    }\n+                    for(String childId : research.getChildren())\n+                    {\n+                        if(building.getColony().getResearchManager().getResearchTree().getResearch(branch, childId) != null\n+                          && building.getColony().getResearchManager().getResearchTree().getResearch(branch, childId).getState() != ResearchState.NOT_STARTED)\n+                        {\n+                            return;\n+                        }\n+                    }\n+                    String parentId = IGlobalResearchTree.getInstance().getResearch(branch, research.getId()).getParent();\n+                    while(!parentId.isEmpty())\n+                    {\n+                        if (IGlobalResearchTree.getInstance().getResearch(branch, parentId) != null\n+                              && IGlobalResearchTree.getInstance().getResearch(branch, parentId).hasOnlyChild())\n+                        {\n+                            drawUndoCompleteButton(button);\n+                            break;\n+                        }\n+                        parentId = IGlobalResearchTree.getInstance().getResearch(branch, parentId).getParent();\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (button.getID().contains(\"undo.\"))\n+        {\n+            final ILocalResearch cancelResearch = building.getColony().getResearchManager().getResearchTree().getResearch(branch, button.getID().split(\"\\\\.\")[1]);\n+            if (cancelResearch != null)\n+            {\n+                // Canceled research will eventually be removed from the local tree on synchronization from server,\n+                // But this can be long enough to be confusing.  NOT_STARTED isn't the same thing,\n+                // but will render closely enough to prevent some confusion /or/ accidentally restarting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE0NDU3MA==", "bodyText": "There's logic on the server side that prevents clients issuing bad requests from resulting in lost items, so I can get rid of it if we don't want munging of the localResearchTree between updates from the server.  It just seemed clearer a way to show the research as removed while waiting for the next colony.markDirty() result to come in -- I've seen ~5 seconds on a same-machine dedicated server, and I'm sure it could be longer.\nNOT_STARTED without nulling it prevents people from unintentionally trying to issue a begin research command, which may be part of why it's a bit hacky.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549144570", "createdAt": "2020-12-27T17:42:16Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -74,57 +99,94 @@ public WindowResearchTree(final String branch, final BuildingUniversity.View bui\n \n         final ZoomDragView view = findPaneOfTypeByID(DRAG_VIEW_ID, ZoomDragView.class);\n \n-        drawTree(0, 0, view, researchList, building.getColony().getResearchManager().getResearchTree(), true, false, 0);\n-\n-        for (int i = 1; i <= MAX_DEPTH; i++)\n-        {\n-            final Label timeLabel = new Label();\n-            timeLabel.setLabelText(Math.pow(2, i - 1) + \"h\");\n-            timeLabel.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING) + GRADIENT_WIDTH / 2, TIMELABEL_Y_POSITION);\n-            timeLabel.setColor(Color.rgbaToInt(218, 202, 171, 255));\n-            view.addChild(timeLabel);\n-        }\n+        drawTreeBackground(view);\n+        drawTree(0, 0, view, researchList, false);\n     }\n \n-    /**\n-     *\n-     * @param researchRequirement requirement to start research\n-     * @return whether the requirement has been satisfied for research\n-     */\n-    private boolean isResearchFulfilled(final BuildingResearchRequirement researchRequirement)\n+    @Override\n+    public void onButtonClicked(@NotNull final Button button)\n     {\n-        List<IBuildingView> buildings = building.getColony().getBuildings();\n-        int levels = 0;\n-\n-        if (researchRequirement == null)\n+        super.onButtonClicked(button);\n+        if (button.getParent().getChildren().contains(undoButton))\n         {\n-            return true;\n+            button.getParent().removeChild(undoButton);\n         }\n-\n-        for (IBuildingView building : buildings)\n+        for(ItemIcon icon : undoCostIcons)\n         {\n-            if (building.getSchematicName().equals(researchRequirement.getBuilding()))\n+            if(button.getParent().getChildren().contains(icon))\n             {\n-                levels += building.getBuildingLevel();\n+                button.getParent().removeChild(icon);\n             }\n         }\n-\n-        return levels >= researchRequirement.getBuildingLevel();\n-    }\n-\n-    @Override\n-    public void onButtonClicked(@NotNull final Button button)\n-    {\n-        super.onButtonClicked(button);\n+        if(displacedButton != null && displacedHoverText != null)\n+        {\n+            displacedButton.setHoverToolTip(displacedHoverText);\n+        }\n+        if(button.getID().isEmpty())\n+        {\n+            return;\n+        }\n \n         final IGlobalResearch research = IGlobalResearchTree.getInstance().getResearch(branch, button.getID());\n-        if (research != null &&\n-              building.getBuildingLevel() > building.getColony().getResearchManager().getResearchTree().getResearchInProgress().size() &&\n-              (building.getBuildingLevel() >= research.getDepth() || building.getBuildingLevel() == building.getBuildingMaxLevel()) &&\n-              research.hasEnoughResources(new InvWrapper(Minecraft.getInstance().player.inventory)) || (research != null && mc.player.isCreative()))\n+        if (research != null && (building.getBuildingLevel() >= research.getDepth() || building.getBuildingLevel() == building.getBuildingMaxLevel()))\n         {\n-            Network.getNetwork().sendToServer(new TryResearchMessage(building, research.getId(), research.getBranch()));\n-            close();\n+            final ILocalResearch localResearch = building.getColony().getResearchManager().getResearchTree().getResearch(branch, research.getId());\n+            if (localResearch == null && building.getBuildingLevel() > building.getColony().getResearchManager().getResearchTree().getResearchInProgress().size()&&\n+                  (research.hasEnoughResources(new InvWrapper(Minecraft.getInstance().player.inventory)) || (mc.player.isCreative())))\n+            {\n+                // this side won't actually start research; it'll be overridden the next colony update from the server.\n+                // It will, however, update for the next WindowResearchTree if the colony update is slow to come back.\n+                research.startResearch(building.getColony().getResearchManager().getResearchTree());\n+                Network.getNetwork().sendToServer(new TryResearchMessage(building, research.getId(), research.getBranch(), false));\n+                close();\n+            }\n+            else if (localResearch != null)\n+            {\n+                if (localResearch.getState() == ResearchState.IN_PROGRESS)\n+                {\n+                    drawUndoProgressButton(button);\n+                }\n+                if (localResearch.getState() == ResearchState.FINISHED)\n+                {\n+                    if(hasMax && research.getDepth() == MAX_DEPTH && building.getBuildingLevel() == building.getBuildingMaxLevel() && !research.isImmutable())\n+                    {\n+                        drawUndoCompleteButton(button);\n+                    }\n+                    for(String childId : research.getChildren())\n+                    {\n+                        if(building.getColony().getResearchManager().getResearchTree().getResearch(branch, childId) != null\n+                          && building.getColony().getResearchManager().getResearchTree().getResearch(branch, childId).getState() != ResearchState.NOT_STARTED)\n+                        {\n+                            return;\n+                        }\n+                    }\n+                    String parentId = IGlobalResearchTree.getInstance().getResearch(branch, research.getId()).getParent();\n+                    while(!parentId.isEmpty())\n+                    {\n+                        if (IGlobalResearchTree.getInstance().getResearch(branch, parentId) != null\n+                              && IGlobalResearchTree.getInstance().getResearch(branch, parentId).hasOnlyChild())\n+                        {\n+                            drawUndoCompleteButton(button);\n+                            break;\n+                        }\n+                        parentId = IGlobalResearchTree.getInstance().getResearch(branch, parentId).getParent();\n+                    }\n+                }\n+            }\n+        }\n+\n+        if (button.getID().contains(\"undo.\"))\n+        {\n+            final ILocalResearch cancelResearch = building.getColony().getResearchManager().getResearchTree().getResearch(branch, button.getID().split(\"\\\\.\")[1]);\n+            if (cancelResearch != null)\n+            {\n+                // Canceled research will eventually be removed from the local tree on synchronization from server,\n+                // But this can be long enough to be confusing.  NOT_STARTED isn't the same thing,\n+                // but will render closely enough to prevent some confusion /or/ accidentally restarting.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMDYzNQ=="}, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 196}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MzY5NTI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxNjoxNzoxMFrOILsT8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yN1QxODowMDozNFrOILtP9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMTI0OA==", "bodyText": "not sure about this button handling, shouldn't this be in \"if undo pressed\" branch?\nand also the for cycle below in this if branch?", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549131248", "createdAt": "2020-12-27T16:17:10Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -74,57 +99,94 @@ public WindowResearchTree(final String branch, final BuildingUniversity.View bui\n \n         final ZoomDragView view = findPaneOfTypeByID(DRAG_VIEW_ID, ZoomDragView.class);\n \n-        drawTree(0, 0, view, researchList, building.getColony().getResearchManager().getResearchTree(), true, false, 0);\n-\n-        for (int i = 1; i <= MAX_DEPTH; i++)\n-        {\n-            final Label timeLabel = new Label();\n-            timeLabel.setLabelText(Math.pow(2, i - 1) + \"h\");\n-            timeLabel.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING) + GRADIENT_WIDTH / 2, TIMELABEL_Y_POSITION);\n-            timeLabel.setColor(Color.rgbaToInt(218, 202, 171, 255));\n-            view.addChild(timeLabel);\n-        }\n+        drawTreeBackground(view);\n+        drawTree(0, 0, view, researchList, false);\n     }\n \n-    /**\n-     *\n-     * @param researchRequirement requirement to start research\n-     * @return whether the requirement has been satisfied for research\n-     */\n-    private boolean isResearchFulfilled(final BuildingResearchRequirement researchRequirement)\n+    @Override\n+    public void onButtonClicked(@NotNull final Button button)\n     {\n-        List<IBuildingView> buildings = building.getColony().getBuildings();\n-        int levels = 0;\n-\n-        if (researchRequirement == null)\n+        super.onButtonClicked(button);\n+        if (button.getParent().getChildren().contains(undoButton))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzODkwMg==", "bodyText": "These are a hacky way to handle removing the \"undo\" button, icon, and tooltips, and then replace the original contents of the tooltips they were taking the position of (bc multiple overlapping items with hovertext will render all of the hovertext in a mouse position), if any button other than the confirm-undo is pressed.  Because the positions are so malleable, it's hard to redraw individual Research Items without redrawing the entire branch, but I'm certainly open to different approaches.\nIt technically doesn't need to be done for logic paths where the research tree gets closed, but the performance cost of doing them is pretty low, and eventually we may want the ability to handle begin-research or cancel-research events without having to close the tree.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549138902", "createdAt": "2020-12-27T17:22:17Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -74,57 +99,94 @@ public WindowResearchTree(final String branch, final BuildingUniversity.View bui\n \n         final ZoomDragView view = findPaneOfTypeByID(DRAG_VIEW_ID, ZoomDragView.class);\n \n-        drawTree(0, 0, view, researchList, building.getColony().getResearchManager().getResearchTree(), true, false, 0);\n-\n-        for (int i = 1; i <= MAX_DEPTH; i++)\n-        {\n-            final Label timeLabel = new Label();\n-            timeLabel.setLabelText(Math.pow(2, i - 1) + \"h\");\n-            timeLabel.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING) + GRADIENT_WIDTH / 2, TIMELABEL_Y_POSITION);\n-            timeLabel.setColor(Color.rgbaToInt(218, 202, 171, 255));\n-            view.addChild(timeLabel);\n-        }\n+        drawTreeBackground(view);\n+        drawTree(0, 0, view, researchList, false);\n     }\n \n-    /**\n-     *\n-     * @param researchRequirement requirement to start research\n-     * @return whether the requirement has been satisfied for research\n-     */\n-    private boolean isResearchFulfilled(final BuildingResearchRequirement researchRequirement)\n+    @Override\n+    public void onButtonClicked(@NotNull final Button button)\n     {\n-        List<IBuildingView> buildings = building.getColony().getBuildings();\n-        int levels = 0;\n-\n-        if (researchRequirement == null)\n+        super.onButtonClicked(button);\n+        if (button.getParent().getChildren().contains(undoButton))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMTI0OA=="}, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE0NTI0Mw==", "bodyText": "bc multiple overlapping items with hovertext will render all of the hovertext in a mouse position\n\nhow about making an issue and let someone actually fix it? :D\nbtw towards \"hacky ways\", sure use them, but make sure they work under every condition and comment them", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549145243", "createdAt": "2020-12-27T17:46:24Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -74,57 +99,94 @@ public WindowResearchTree(final String branch, final BuildingUniversity.View bui\n \n         final ZoomDragView view = findPaneOfTypeByID(DRAG_VIEW_ID, ZoomDragView.class);\n \n-        drawTree(0, 0, view, researchList, building.getColony().getResearchManager().getResearchTree(), true, false, 0);\n-\n-        for (int i = 1; i <= MAX_DEPTH; i++)\n-        {\n-            final Label timeLabel = new Label();\n-            timeLabel.setLabelText(Math.pow(2, i - 1) + \"h\");\n-            timeLabel.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING) + GRADIENT_WIDTH / 2, TIMELABEL_Y_POSITION);\n-            timeLabel.setColor(Color.rgbaToInt(218, 202, 171, 255));\n-            view.addChild(timeLabel);\n-        }\n+        drawTreeBackground(view);\n+        drawTree(0, 0, view, researchList, false);\n     }\n \n-    /**\n-     *\n-     * @param researchRequirement requirement to start research\n-     * @return whether the requirement has been satisfied for research\n-     */\n-    private boolean isResearchFulfilled(final BuildingResearchRequirement researchRequirement)\n+    @Override\n+    public void onButtonClicked(@NotNull final Button button)\n     {\n-        List<IBuildingView> buildings = building.getColony().getBuildings();\n-        int levels = 0;\n-\n-        if (researchRequirement == null)\n+        super.onButtonClicked(button);\n+        if (button.getParent().getChildren().contains(undoButton))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMTI0OA=="}, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE0NjYxMw==", "bodyText": "Fair.  I could see cases where it'd be useful and intentional -- the ItemIcons render their tooltips over the research tooltips, for example, which I kinda like -- but should have brought it up in Structurize.\nDefinitely will implement better comments for the hacky bits here and elsewhere, rather than just the javadocs.", "url": "https://github.com/ldtteam/minecolonies/pull/6181#discussion_r549146613", "createdAt": "2020-12-27T18:00:34Z", "author": {"login": "gattsuru"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowResearchTree.java", "diffHunk": "@@ -74,57 +99,94 @@ public WindowResearchTree(final String branch, final BuildingUniversity.View bui\n \n         final ZoomDragView view = findPaneOfTypeByID(DRAG_VIEW_ID, ZoomDragView.class);\n \n-        drawTree(0, 0, view, researchList, building.getColony().getResearchManager().getResearchTree(), true, false, 0);\n-\n-        for (int i = 1; i <= MAX_DEPTH; i++)\n-        {\n-            final Label timeLabel = new Label();\n-            timeLabel.setLabelText(Math.pow(2, i - 1) + \"h\");\n-            timeLabel.setPosition((i - 1) * (GRADIENT_WIDTH + X_SPACING) + GRADIENT_WIDTH / 2, TIMELABEL_Y_POSITION);\n-            timeLabel.setColor(Color.rgbaToInt(218, 202, 171, 255));\n-            view.addChild(timeLabel);\n-        }\n+        drawTreeBackground(view);\n+        drawTree(0, 0, view, researchList, false);\n     }\n \n-    /**\n-     *\n-     * @param researchRequirement requirement to start research\n-     * @return whether the requirement has been satisfied for research\n-     */\n-    private boolean isResearchFulfilled(final BuildingResearchRequirement researchRequirement)\n+    @Override\n+    public void onButtonClicked(@NotNull final Button button)\n     {\n-        List<IBuildingView> buildings = building.getColony().getBuildings();\n-        int levels = 0;\n-\n-        if (researchRequirement == null)\n+        super.onButtonClicked(button);\n+        if (button.getParent().getChildren().contains(undoButton))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTEzMTI0OA=="}, "originalCommit": {"oid": "85bf74e02a2059bdfec659503a04ecb4037bf91b"}, "originalPosition": 102}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3267, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}