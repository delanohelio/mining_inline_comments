{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1Mjc0ODA3", "number": 5939, "title": "Feature/building rework 0.1", "bodyText": "Closes #5934\nThis is the first part of the building rework.\nThis creates a building module list as well as some interfaces and abstract classes for building-modules.\nIt's a first attempt to modularize buildings.\nEach building has the module list and might have several modules.\nModules depend on the hutblock and are queried from it.\nBuildings switching to the modularized version will become \"DefaultBuildingInstances\" where only the modules define the behaviour.\nModules do not need a registry for now since they are queried on building creation and then serialized/deserialized.\nThis also allows us to maintain backwards dependency.\nWe might extend this to a registry in the future if we deem it necessary. I would like to avoid it during the transition period though (afterwards the building registry could be re-used for this sake for example).\nThis is also the first step where only the Tavern and HomeBuilding is modularized.\nIn the following step I will modularize the views and allow drawing one page per module (optional).\nAfter that I will start modularizing the other building types.\nI have broken this apart into multiple pull-requests to avoid too many merge conflicts and to allow to review the base mechanics decently.\nReview please", "createdAt": "2020-10-17T12:35:11Z", "url": "https://github.com/ldtteam/minecolonies/pull/5939", "merged": true, "mergeCommit": {"oid": "2bbdb2db61597614de27c1bbe51d67b45eede76b"}, "closed": true, "closedAt": "2020-11-15T15:36:51Z", "author": {"login": "Raycoms"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRiMJJgH2gAyNTA1Mjc0ODA3OmZmYmQ2MTEwM2RhOWQzNDY0NGI0YTZiYTRhNTAzNDgwYTM1YzlhNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbfpkTgFqTUyODI3MzUwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ffbd61103da9d34644b4a6ba4a503480a35c9a41", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/ffbd61103da9d34644b4a6ba4a503480a35c9a41", "committedDate": "2020-10-11T16:43:59Z", "message": "Add notnulls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a70f8f3f724a9493da2c0932a020cbc1dca84542", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/a70f8f3f724a9493da2c0932a020cbc1dca84542", "committedDate": "2020-10-11T18:32:14Z", "message": "Initital part of building rework"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86ce6bc7c253de26797910ada2884fb1faaa87c6", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/86ce6bc7c253de26797910ada2884fb1faaa87c6", "committedDate": "2020-10-12T11:40:34Z", "message": "awaiting resolver hotfix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bae85a4975c3e6f5150855473d813820fd9f6e6", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/5bae85a4975c3e6f5150855473d813820fd9f6e6", "committedDate": "2020-10-12T11:50:27Z", "message": "Merge branch 'version/1.15' into feature/building-rework-0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4522d688d2ce2bb790a846dbf260aca1dfc4a73c", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/4522d688d2ce2bb790a846dbf260aca1dfc4a73c", "committedDate": "2020-10-13T14:01:19Z", "message": "Merge branch 'version/1.15' into feature/building-rework-0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3de6f3791179207c433fc28154f7e9294dfafcf", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/d3de6f3791179207c433fc28154f7e9294dfafcf", "committedDate": "2020-10-14T21:40:42Z", "message": "adjust home an dtavern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "997e8239bfb71b9fcf8b9b0b4b792f1c646a6fc4", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/997e8239bfb71b9fcf8b9b0b4b792f1c646a6fc4", "committedDate": "2020-10-17T10:28:43Z", "message": "Merge branch 'version/1.15' into feature/building-rework-0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a61fef35f455363fce6dcc166f4cfa28f3e1f867", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/a61fef35f455363fce6dcc166f4cfa28f3e1f867", "committedDate": "2020-10-17T11:03:14Z", "message": "adjust inhabitants calculation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eb755525abeac0e5fc78bb37d23157501590a29", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/8eb755525abeac0e5fc78bb37d23157501590a29", "committedDate": "2020-10-17T12:30:34Z", "message": "improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/62945d6b0ddb17fab16e863ec60e4371891001a6", "committedDate": "2020-10-17T12:44:40Z", "message": "add doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTkwNTIw", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-510990520", "createdAt": "2020-10-17T14:40:26Z", "commit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNDo0MDoyNlrOHjdwmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxNDo1MDowOFrOHjdz1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0OTc4Nw==", "bodyText": "How is this going to work when we have multiple modules that need to participate in the view? For instance, Crafter (job queue) and Smelter (Fuel)", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506949787", "createdAt": "2020-10-17T14:40:26Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutTavern.java", "diffHunk": "@@ -8,19 +8,21 @@\n import com.minecolonies.api.colony.ICitizenDataView;\n import com.minecolonies.api.util.constant.Constants;\n import com.minecolonies.coremod.Network;\n-import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingHome;\n-import com.minecolonies.coremod.colony.buildings.workerbuildings.BuildingTavern;\n+import com.minecolonies.coremod.colony.buildings.modules.TavernBuildingModule;\n+import com.minecolonies.coremod.colony.buildings.views.LivingBuildingView;\n+import com.minecolonies.coremod.network.messages.server.colony.building.RecallCitizenHutMessage;\n import com.minecolonies.coremod.network.messages.server.colony.building.home.AssignUnassignMessage;\n import net.minecraft.client.Minecraft;\n import org.jetbrains.annotations.NotNull;\n \n import static com.minecolonies.api.util.constant.TranslationConstants.COM_MINECOLONIES_COREMOD_GUI_HOME_ASSIGN;\n import static com.minecolonies.api.util.constant.TranslationConstants.COM_MINECOLONIES_COREMOD_GUI_WORKERHUTS_LEVEL_0;\n+import static com.minecolonies.api.util.constant.WindowConstants.BUTTON_RECALL;\n \n /**\n  * Window for the tavern\n  */\n-public class WindowHutTavern extends AbstractWindowBuilding<BuildingTavern.View>\n+public class WindowHutTavern extends AbstractWindowBuilding<TavernBuildingModule.View>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MDI2Nw==", "bodyText": "How do you see modules working together here? Specifically, the restaurant has two citizens with very different jobs. I expect that will be two modules, each with one citizen assigned. Is it First one wins? or do we expect a priority, and thus support promotion? If the cook dies, does the assistant cook become the cook?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506950267", "createdAt": "2020-10-17T14:45:51Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuilding.java", "diffHunk": "@@ -343,6 +397,65 @@ public void onDestroyed()\n \n         ChunkDataHelper.claimColonyChunks(colony, false, this.getID(), getClaimRadius(getBuildingLevel()));\n         ConstructionTapeHelper.removeConstructionTape(getCorners(), world);\n+\n+        for (final IBuildingModule module : modules.values())\n+        {\n+            module.onDestroyed();\n+        }\n+    }\n+\n+    @Override\n+    public void removeCitizen(final ICitizenData citizen)\n+    {\n+        for (final IBuildingModule module : modules.values())\n+        {\n+            module.removeCitizen(citizen);\n+        }\n+        super.removeCitizen(citizen);\n+    }\n+\n+    @Override\n+    public boolean assignCitizen(final ICitizenData citizen)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk1MDYxMg==", "bodyText": "Should this be part of LivingBuildingModule, or separate? Do you expect LivingBuildingModule to be used for towers and training facilities? If so, this then creates the potential to mix the two assignment types.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r506950612", "createdAt": "2020-10-17T14:50:08Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/modules/LivingBuildingModule.java", "diffHunk": "@@ -385,21 +362,15 @@ private void inheritLastName(@NotNull final ICitizenData child, final String par\n         child.setName(combinedName.toString().trim());\n     }\n \n-    @Override\n-    public int getMaxInhabitants()\n-    {\n-        return getBuildingLevel();\n-    }\n-\n     /**\n      * Looks for a homeless citizen to add to the current building Calls. {@link #assignCitizen(ICitizenData)}\n      */\n     private void addHomelessCitizens()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 260}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDA5ODM5", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-511009839", "createdAt": "2020-10-17T19:29:01Z", "commit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNjQ2MDU0", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-511646054", "createdAt": "2020-10-19T11:03:18Z", "commit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTowMzoxOFrOHkJCbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTowMzoxOFrOHkJCbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY1ODg2MQ==", "bodyText": "This class is weird AF.\nThis is just an empty class which literally makes no sense.\nIf you want this to be the default behaviour for those empty methods for a module, then make it the default implementation of the method in the interface not in this weird abstract class.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r507658861", "createdAt": "2020-10-19T11:03:18Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/AbstractBuildingModule.java", "diffHunk": "@@ -0,0 +1,139 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Abstract class for all modules. Has base methods for all the necessary methods that have to be called from the building.\n+ */\n+public abstract class AbstractBuildingModule implements IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62945d6b0ddb17fab16e863ec60e4371891001a6"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29dae3d849609438d880a7a5eb3f9c8c25e09d24", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/29dae3d849609438d880a7a5eb3f9c8c25e09d24", "committedDate": "2020-10-25T10:36:03Z", "message": "Merge branch 'version/1.15' into feature/building-rework-0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "737aa22fae027fc03a2d1a39c1379c0c1e417ae6", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/737aa22fae027fc03a2d1a39c1379c0c1e417ae6", "committedDate": "2020-10-25T13:09:41Z", "message": "Adjust building module handling."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/87fff8bbaafe1196b6f90870a2217f00327c13d3", "committedDate": "2020-10-25T15:12:17Z", "message": "remove not necessary method hook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0fb2c438649c668badb1dc13928f33cedf3cc84", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/b0fb2c438649c668badb1dc13928f33cedf3cc84", "committedDate": "2020-10-25T18:58:31Z", "message": "Fix #5988"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NDAyNzc3", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-518402777", "createdAt": "2020-10-28T08:04:29Z", "commit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowNDozMFrOHpd-1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODoxNToyOVrOHpeVJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NDg4Ng==", "bodyText": "No, this should be Class<? extends IBuildingModule> or what ever the root interface for a module is.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513244886", "createdAt": "2020-10-28T08:04:30Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +34,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends AbstractBuildingModule> clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NDk1NA==", "bodyText": "See above", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513244954", "createdAt": "2020-10-28T08:04:38Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +34,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends AbstractBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    IBuildingModule getModule(Class<? extends AbstractBuildingModule> clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTAwNg==", "bodyText": "See above", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513245006", "createdAt": "2020-10-28T08:04:44Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +34,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends AbstractBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    IBuildingModule getModule(Class<? extends AbstractBuildingModule> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final AbstractBuildingModule module);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTYzMQ==", "bodyText": "You might want to consider firing an event here somehow.\nThis to allow external APIs to inject modules. It does not need to be implemented here yet, just a comment to mark it as a TODO somehow should suffice for this PR.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513245631", "createdAt": "2020-10-28T08:05:58Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/blocks/AbstractBlockHut.java", "diffHunk": "@@ -330,4 +332,10 @@ public boolean needsResearch()\n     {\n         return needsResearch;\n     }\n+\n+    @Override\n+    public void registerBuildingModules(final IBuilding building)\n+    {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTgwNw==", "bodyText": "Needs to extends IBuildingModule else this makes no sense.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513245807", "createdAt": "2020-10-28T08:06:20Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IAssignsCitizen.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.ICitizenData;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface for all modules that need special assignment handling.\n+ */\n+public interface IAssignsCitizen", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjAyNw==", "bodyText": "Formatting is of here. Remove the not needed empty lines.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513246027", "createdAt": "2020-10-28T08:06:46Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjI5OQ==", "bodyText": "Make this extend NBTSerializable or whatever the name of the vanilla interface is, and do not declare your own custom methods.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513246299", "createdAt": "2020-10-28T08:07:18Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjQyNg==", "bodyText": "Remove this method, see interface declaration comment.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513246426", "createdAt": "2020-10-28T08:07:34Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjUyMQ==", "bodyText": "Remove this method, see interface declaration comment", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513246521", "createdAt": "2020-10-28T08:07:45Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NzI3Mw==", "bodyText": "We should declare a standard interface for serialization to and from PacketBuffer and treat it in the same way vanilla treats NBT with its NBTSerializable interface. Aka create an empty instance and then call deserialize on it.\nI am pretty sure this interface was added when we added the PacketBuffer specific serialization for the RS.\nThis also makes it so that Views are not needed for modules, which is a huge improvement in maintainability.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513247273", "createdAt": "2020-10-28T08:09:16Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NzYxMA==", "bodyText": "Again this has no bearing on a default module.\nMove to a seperate interface.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513247610", "createdAt": "2020-10-28T08:09:53Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)\n+    {\n+\n+    }\n+\n+    /**\n+     * On destruction hook of the building, calling into the modules.\n+     */\n+    default void onDestroyed()\n+    {\n+\n+    }\n+\n+    /**\n+     * Colony tick hook.\n+     * @param colony the colony the tick is invoked from.\n+     */\n+    default void onColonyTick(@NotNull IColony colony)\n+    {\n+\n+    }\n+\n+    /**\n+     * Upgrade complete module hook.\n+     * @param newLevel the new level.\n+     */\n+    default void onUpgradeComplete(int newLevel)\n+    {\n+\n+    }\n+\n+    /**\n+     * On building move hook for modules.\n+     * @param oldBuilding the building that is going to be moved.\n+     */\n+    default void onBuildingMove(IBuilding oldBuilding)\n+    {\n+\n+    }\n+\n+    /**\n+     * Specific wakeup hook in modules.\n+     */\n+    default void onWakeUp()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0Nzc5MQ==", "bodyText": "Again this has no bearing being on a default module. Some modules do not tick and as such do not need this.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513247791", "createdAt": "2020-10-28T08:10:14Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)\n+    {\n+\n+    }\n+\n+    /**\n+     * On destruction hook of the building, calling into the modules.\n+     */\n+    default void onDestroyed()\n+    {\n+\n+    }\n+\n+    /**\n+     * Colony tick hook.\n+     * @param colony the colony the tick is invoked from.\n+     */\n+    default void onColonyTick(@NotNull IColony colony)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODExMw==", "bodyText": "Again see other methods in this class.\nThe base module spec should only specific the bare minimum to classify itself as a module.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513248113", "createdAt": "2020-10-28T08:10:51Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)\n+    {\n+\n+    }\n+\n+    /**\n+     * On destruction hook of the building, calling into the modules.\n+     */\n+    default void onDestroyed()\n+    {\n+\n+    }\n+\n+    /**\n+     * Colony tick hook.\n+     * @param colony the colony the tick is invoked from.\n+     */\n+    default void onColonyTick(@NotNull IColony colony)\n+    {\n+\n+    }\n+\n+    /**\n+     * Upgrade complete module hook.\n+     * @param newLevel the new level.\n+     */\n+    default void onUpgradeComplete(int newLevel)\n+    {\n+\n+    }\n+\n+    /**\n+     * On building move hook for modules.\n+     * @param oldBuilding the building that is going to be moved.\n+     */\n+    default void onBuildingMove(IBuilding oldBuilding)\n+    {\n+\n+    }\n+\n+    /**\n+     * Specific wakeup hook in modules.\n+     */\n+    default void onWakeUp()\n+    {\n+\n+    }\n+\n+    /**\n+     * On player entering hook.\n+     * @param player the player that entered the building.\n+     */\n+    default void onPlayerEnterBuilding(PlayerEntity player)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODQwNw==", "bodyText": "Move to a seperate interface not related to modules, called IHasDirtyState or something.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513248407", "createdAt": "2020-10-28T08:11:20Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModule.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IBuildingModule\n+{\n+    /**\n+     * Deserialize the module.\n+     * @param compound the nbt compound.\n+     */\n+    default void deserializeNBT(CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialize the module from a compound.\n+     * @param compound the compound.\n+     */\n+    default void serializeNBT(final CompoundNBT compound)\n+    {\n+\n+    }\n+\n+    /**\n+     * Serialization method to send the module data to the client side.\n+     * @param buf the buffer to write it to.\n+     */\n+    default void serializeToView(PacketBuffer buf)\n+    {\n+\n+    }\n+\n+    /**\n+     * On destruction hook of the building, calling into the modules.\n+     */\n+    default void onDestroyed()\n+    {\n+\n+    }\n+\n+    /**\n+     * Colony tick hook.\n+     * @param colony the colony the tick is invoked from.\n+     */\n+    default void onColonyTick(@NotNull IColony colony)\n+    {\n+\n+    }\n+\n+    /**\n+     * Upgrade complete module hook.\n+     * @param newLevel the new level.\n+     */\n+    default void onUpgradeComplete(int newLevel)\n+    {\n+\n+    }\n+\n+    /**\n+     * On building move hook for modules.\n+     * @param oldBuilding the building that is going to be moved.\n+     */\n+    default void onBuildingMove(IBuilding oldBuilding)\n+    {\n+\n+    }\n+\n+    /**\n+     * Specific wakeup hook in modules.\n+     */\n+    default void onWakeUp()\n+    {\n+\n+    }\n+\n+    /**\n+     * On player entering hook.\n+     * @param player the player that entered the building.\n+     */\n+    default void onPlayerEnterBuilding(PlayerEntity player)\n+    {\n+\n+    }\n+\n+    /**\n+     * Specific dirty marking of modules (separate from building dirty).\n+     */\n+    void markDirty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0ODY0Nw==", "bodyText": "We should not limit this to just blocks, adapt the javadoc.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513248647", "createdAt": "2020-10-28T08:11:48Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IBuildingModuleProvider.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+\n+/**\n+ * Blocks providing building modules.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTAzNA==", "bodyText": "Javadoc completely misleading. And the name is wrong: IDefinesCoreBuildingStatsModule is more accurate.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513249034", "createdAt": "2020-10-28T08:12:32Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IDefinesBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTE4Mg==", "bodyText": "Nope.\nThis is up to the module.\nEither make both methods have a default value or none.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513249182", "createdAt": "2020-10-28T08:12:52Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IDefinesBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default int getMaxBuildingLevel()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTI1NQ==", "bodyText": "See other method in this interface.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513249255", "createdAt": "2020-10-28T08:13:00Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesBuildingModule.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing the different modules.\n+ */\n+public interface IDefinesBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default int getMaxBuildingLevel()\n+    {\n+        return 5;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    int getMaxInhabitants();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0OTc3Mw==", "bodyText": "This clearly states remove in 1.16 why was this removed in a PR that targets 1.15", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513249773", "createdAt": "2020-10-28T08:14:00Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/compatibility/CompatibilityManager.java", "diffHunk": "@@ -283,15 +283,7 @@ public boolean isPlantable(final ItemStack itemStack)\n             }\n \n             String[] split = string.split(\":\");\n-            //todo, this is backwards compatibility, remove in 1.16", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI1MDUxMQ==", "bodyText": "This really really really feels like a code smell in my opinion. The building instance really should not care what building it is representing, neither should the modules which are inside it.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513250511", "createdAt": "2020-10-28T08:15:21Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "diffHunk": "@@ -137,8 +140,8 @@ public static void init(final RegistryEvent.Register<BuildingEntry> event)\n \n         ModBuildings.home = new BuildingEntry.Builder()\n                               .setBuildingBlock(ModBlocks.blockHutHome)\n-                              .setBuildingProducer(BuildingHome::new)\n-                              .setBuildingViewProducer(() -> BuildingHome.View::new)\n+                              .setBuildingProducer((colony, blockPos) -> new DefaultBuildingInstance(colony, blockPos, \"citizen\", ModBuildings.home))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI1MDU5Nw==", "bodyText": "See above.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r513250597", "createdAt": "2020-10-28T08:15:29Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModBuildingsInitializer.java", "diffHunk": "@@ -298,8 +301,8 @@ public static void init(final RegistryEvent.Register<BuildingEntry> event)\n \n         ModBuildings.tavern = new BuildingEntry.Builder()\n                                 .setBuildingBlock(ModBlocks.blockHutTavern)\n-                                .setBuildingProducer(BuildingTavern::new)\n-                                .setBuildingViewProducer(() -> BuildingTavern.View::new)\n+                                .setBuildingProducer((colony, blockPos) -> new DefaultBuildingInstance(colony, blockPos, \"tavern\", ModBuildings.tavern))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2cce6ecd78a10087cff276918209510ac327f08", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/c2cce6ecd78a10087cff276918209510ac327f08", "committedDate": "2020-10-28T21:31:40Z", "message": "some adjustments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c22e4bdd882fa2d8784e71251208fd8d9e26b43", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/4c22e4bdd882fa2d8784e71251208fd8d9e26b43", "committedDate": "2020-11-07T09:17:35Z", "message": "Merge branch 'version/1.15' into feature/building-rework-0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "429b37af6c4bbff3e01b3ea97a0c911c27c9644e", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/429b37af6c4bbff3e01b3ea97a0c911c27c9644e", "committedDate": "2020-11-07T09:28:21Z", "message": "Fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7fdc80363def42ee2049f1025f725f73e7c17cb", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/b7fdc80363def42ee2049f1025f725f73e7c17cb", "committedDate": "2020-11-07T09:52:39Z", "message": "more adjustments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/c46750c76edf1da5514c452a3dc2078ae510d60e", "committedDate": "2020-11-07T10:13:44Z", "message": "setup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjQ0Njcz", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-525644673", "createdAt": "2020-11-07T10:48:04Z", "commit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo0ODowNVrOHvHQxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QxMDo1MDoyMVrOHvHRnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDEwMA==", "bodyText": "So I thought about this a bit.\nI agree that these are indeed the core stats.\nBut I think we can flush out the API a bit here.\nHit me up on Discord we jump in voice and I will explain what my thoughts here were how we can make this a bit more precise.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164100", "createdAt": "2020-11-07T10:48:05Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default int getMaxBuildingLevel()\n+    {\n+        return 5;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    int getMaxInhabitants();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDEzOQ==", "bodyText": "Rename to IModuleWithExternalBlocks", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164139", "createdAt": "2020-11-07T10:48:42Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Module type to register specific blocks to a building (beds, workstations, etc).\n+ */\n+public interface IRegistersBlockModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDE1NA==", "bodyText": "Rename to onBlockBuildInBuilding", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164154", "createdAt": "2020-11-07T10:48:59Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Module type to register specific blocks to a building (beds, workstations, etc).\n+ */\n+public interface IRegistersBlockModule extends IBuildingModule\n+{\n+    /**\n+     * Attempt to register a specific block at a specific module.\n+     * @param blockState the state.\n+     * @param pos the position.\n+     * @param world the world.\n+     */\n+    void registerBlockPosition(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDI0MA==", "bodyText": "You should add a method that returns all Blocks registered to this module.\nSomething like getRegisteredPositions or getRegisteredBlocks(final IBlockReader world)", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164240", "createdAt": "2020-11-07T10:49:45Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IRegistersBlockModule.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Module type to register specific blocks to a building (beds, workstations, etc).\n+ */\n+public interface IRegistersBlockModule extends IBuildingModule\n+{\n+    /**\n+     * Attempt to register a specific block at a specific module.\n+     * @param blockState the state.\n+     * @param pos the position.\n+     * @param world the world.\n+     */\n+    void registerBlockPosition(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE2NDMxNg==", "bodyText": "Rename to: IModuleWithData.\nAlso extend the existing interface.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519164316", "createdAt": "2020-11-07T10:50:21Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IStoresDataModule.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+\n+/**\n+ * Interface for all building modules that store additional data.\n+ */\n+public interface IStoresDataModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c46750c76edf1da5514c452a3dc2078ae510d60e"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64f757153e9d7c55895aa6ce980fc2fbff29d62f", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/64f757153e9d7c55895aa6ce980fc2fbff29d62f", "committedDate": "2020-11-08T09:22:24Z", "message": "setup refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5742b34edf80a4e6935ea68ed17d2a78ee1c4d5", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/c5742b34edf80a4e6935ea68ed17d2a78ee1c4d5", "committedDate": "2020-11-08T09:22:31Z", "message": "commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/9597b4625c414873b3ccca6427de245e1a1d2ef4", "committedDate": "2020-11-08T15:35:33Z", "message": "Adjust supplyng"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1ODIxMjU4", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-525821258", "createdAt": "2020-11-08T15:59:08Z", "commit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNTo1OTowOFrOHvYUZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjowNDozNFrOHvYXAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzU1OQ==", "bodyText": "getRegisteredBlocks()", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519443559", "createdAt": "2020-11-08T15:59:08Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IModuleWithExternalBlocks.java", "diffHunk": "@@ -5,16 +5,24 @@\n import net.minecraft.world.World;\n import org.jetbrains.annotations.NotNull;\n \n+import java.util.List;\n+\n /**\n  * Module type to register specific blocks to a building (beds, workstations, etc).\n  */\n-public interface IRegistersBlockModule extends IBuildingModule\n+public interface IModuleWithExternalBlocks extends IBuildingModule\n {\n     /**\n      * Attempt to register a specific block at a specific module.\n      * @param blockState the state.\n      * @param pos the position.\n      * @param world the world.\n      */\n-    void registerBlockPosition(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);\n+    void onBlockPlacedInBuilding(@NotNull BlockState blockState, @NotNull BlockPos pos, @NotNull World world);\n+\n+    /**\n+     * Get the list of registered blocks.\n+     * @return the list of positions of the blocks.\n+     */\n+    List<BlockPos> getRegisterBlocks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0MzY3Ng==", "bodyText": "Not the version shown in the LDTTeam Discord.\nSo question, is this intended?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519443676", "createdAt": "2020-11-08T15:59:46Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/stat/IStat.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.minecolonies.api.colony.buildings.modules.stat;\n+\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * A specific stat.\n+ */\n+@FunctionalInterface\n+public interface IStat<N extends Number>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0Mzg0OQ==", "bodyText": "You can make this a set instead of a list to make logics a bit easier.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519443849", "createdAt": "2020-11-08T16:01:25Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/modules/BedHandlingModule.java", "diffHunk": "@@ -0,0 +1,115 @@\n+package com.minecolonies.coremod.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.colony.buildings.modules.*;\n+import net.minecraft.block.BedBlock;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.nbt.NBTUtil;\n+import net.minecraft.state.properties.BedPart;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import net.minecraftforge.common.util.Constants;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.*;\n+\n+import static com.minecolonies.api.util.constant.NbtTagConstants.TAG_BEDS;\n+\n+/**\n+ * The class of the citizen hut.\n+ */\n+public class BedHandlingModule extends AbstractBuildingModule implements IModuleWithExternalBlocks, IModuleWithData, IBuildingEventsModule\n+{\n+    /**\n+     * List of all beds.\n+     */\n+    @NotNull\n+    private final List<BlockPos> bedList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NDIyNw==", "bodyText": "Seeing this structure makes my stumach crinch a bit.\nI think we should add something like this to the building:\npublic Optional<T extends IModule> <T> getModule(Class<T> moduleClass)\nOn which we can then to chaining with things like .map(IModuleWithExternalBlocks::getRegisteredBlocks).orElse(Collections.emptyList())", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519444227", "createdAt": "2020-11-08T16:04:34Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/minimal/EntityAISleep.java", "diffHunk": "@@ -214,9 +215,9 @@ private void findBedAndTryToSleep()\n             {\n                 final IBuilding hut = colony.getBuildingManager().getBuilding(citizen.getHomePosition());\n                 List<BlockPos> bedList = new ArrayList<>();\n-                if (hut.hasModule(LivingBuildingModule.class))\n+                if (hut.hasModule(BedHandlingModule.class))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1ODIyODY5", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-525822869", "createdAt": "2020-11-08T16:16:58Z", "commit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNjoxNjo1OFrOHvYc2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQxNzozNDoyM1rOHvY_3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg==", "bodyText": "I thin inhabitants belong to assignments, as you cant have inhabitants without assignments", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519445722", "createdAt": "2020-11-08T16:16:58Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTc5Nw==", "bodyText": "need a more descriptive name for this, do we need this at all? afaik building levels are tied to schematics", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519445797", "createdAt": "2020-11-08T16:17:45Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTg3Mg==", "bodyText": "ISerializeableModule?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519445872", "createdAt": "2020-11-08T16:18:42Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IModuleWithData.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.network.PacketBuffer;\n+\n+/**\n+ * Interface for all building modules that store additional data.\n+ */\n+public interface IModuleWithData extends IBuildingModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ1NDY4Ng==", "bodyText": "this class is kinda duplicated with IHasDirty, use either or?", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r519454686", "createdAt": "2020-11-08T17:34:23Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/AbstractBuildingModule.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+\n+/**\n+ * Abstract class for all modules. Has base methods for all the necessary methods that have to be called from the building.\n+ */\n+public abstract class AbstractBuildingModule implements IBuildingModule\n+{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c34e297296f9c4b2f1782ebd31493d49b73a524", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/1c34e297296f9c4b2f1782ebd31493d49b73a524", "committedDate": "2020-11-08T18:54:30Z", "message": "fix some review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76c9f7aeb165580004504eddcd1c416bbcd1b746", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/76c9f7aeb165580004504eddcd1c416bbcd1b746", "committedDate": "2020-11-08T19:04:20Z", "message": "adjust remaining comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8efe944bf34d12677e85f4252da4079097d13629", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/8efe944bf34d12677e85f4252da4079097d13629", "committedDate": "2020-11-08T19:04:58Z", "message": "fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/3880ef67b40213db6ea52b1a89bfc4357a77ccb0", "committedDate": "2020-11-08T19:52:26Z", "message": "fix bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MDMxNzAz", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-528031703", "createdAt": "2020-11-11T10:06:48Z", "commit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDowNjo0OFrOHxGhdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMDoxMDozNVrOHxGqOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTE0Mg==", "bodyText": "I do not think this method should be in the API.\nAs stated before: building modules should be immutable once the building is constructed.\nSo I do not see a reason to have a registerModule method.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521249142", "createdAt": "2020-11-11T10:06:48Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);\n+\n+    /**\n+     * Register a specific module to the building.\n+     * @param module the module to register.\n+     */\n+    void registerModule(@NotNull final IBuildingModule module);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTgzMg==", "bodyText": "I do not like nullables.\nIt can cause weird issues.\nUse an optional here, which forces people to think about what todo when the module is not available in the expected building automatically.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521249832", "createdAt": "2020-11-11T10:07:58Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1MDEwNw==", "bodyText": "Might additionally collapse the hasModule into this method when switched to the optional.\nComputationally it is identical.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521250107", "createdAt": "2020-11-11T10:08:24Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/IBuilding.java", "diffHunk": "@@ -32,6 +33,27 @@\n \n public interface IBuilding extends IBuildingContainer, IRequestResolverProvider, IRequester\n {\n+    /**\n+     * Check if the building has a particular module.\n+     * @param clazz the module of the class to check.\n+     * @return true if so.\n+     */\n+    boolean hasModule(final Class<? extends IBuildingModule> clazz);\n+\n+    /**\n+     * Get the module with a particular class.\n+     * @param clazz the modules class.\n+     * @return the module or null of not existant.\n+     */\n+    @Nullable\n+    <T extends IBuildingModule> T getModule(Class<T> clazz);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI0OTgzMg=="}, "originalCommit": {"oid": "3880ef67b40213db6ea52b1a89bfc4357a77ccb0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTI1MTM4Ng==", "bodyText": "I am going to argue that we should release that inhabitants <-> assigning logic in the near future.\nWe should add modules which allow assigning workers with specific jobs to a building. But the count should be up to the player in a certain degree.\nAka it should be possible to have 1 cook and 6 helpers or\n2 cooks and 1 helper.\nWe should envision some kind of slot like mechanism where certain assignments of jobs use more slots, and where this method returns the amount of slots available.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521251386", "createdAt": "2020-11-11T10:10:35Z", "author": {"login": "OrionDevelopment"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aaf694a6e259c5d712b8aa789ef604de1189451", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/4aaf694a6e259c5d712b8aa789ef604de1189451", "committedDate": "2020-11-11T11:46:59Z", "message": "optional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MDk1OTUx", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-528095951", "createdAt": "2020-11-11T11:39:24Z", "commit": {"oid": "87fff8bbaafe1196b6f90870a2217f00327c13d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoyNToxNVrOHxNBQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzoyNToxNVrOHxNBQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM1NTU4Ng==", "bodyText": "no you need to flesh this out before just merging it, else we end up with you using it in 10 places and needing a big refactor after. Not saying you need to make worker/living modules now, but put a getMaxAssignees into the Assignment base module and just remove the getMaxinhabitants here. As far as I see this there is no reason at all for this interface to exist.", "url": "https://github.com/ldtteam/minecolonies/pull/5939#discussion_r521355586", "createdAt": "2020-11-11T13:25:15Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/colony/buildings/modules/IDefinesCoreBuildingStatsModule.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.minecolonies.api.colony.buildings.modules;\n+\n+import com.minecolonies.api.colony.buildings.modules.stat.IStat;\n+\n+/**\n+ * Interface describing core building stats.\n+ * The first core stats module that is found in the building will define the values.\n+ */\n+public interface IDefinesCoreBuildingStatsModule extends IBuildingModule\n+{\n+    /**\n+     * Get the max building level a module allows.\n+     * By default this is 5.\n+     * @return the max level.\n+     */\n+    default IStat<Integer> getMaxBuildingLevel()\n+    {\n+        return (prev) -> prev == 0 ? 5 : prev;\n+    }\n+\n+    /**\n+     * Get the max number of inhabitants this module allows.\n+     * @return the modules max number of assigned citizens.\n+     */\n+    IStat<Integer> getMaxInhabitants();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ0NTcyMg=="}, "originalCommit": {"oid": "9597b4625c414873b3ccca6427de245e1a1d2ef4"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebdc303629649a2f347d716f2f176a469a17188b", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/ebdc303629649a2f347d716f2f176a469a17188b", "committedDate": "2020-11-11T13:40:53Z", "message": "remove IAffectsWalkingSpeed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a9b8e3dc5580235342330cbd86ea06a83ed956d", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/1a9b8e3dc5580235342330cbd86ea06a83ed956d", "committedDate": "2020-11-11T13:41:17Z", "message": "Merge branch 'version/1.15' into feature/building-rework-0.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a024c7798d86f9dbab6e93fa68048556962b0c", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/a3a024c7798d86f9dbab6e93fa68048556962b0c", "committedDate": "2020-11-11T15:08:30Z", "message": "this time sam is unreasonable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjczNTAy", "url": "https://github.com/ldtteam/minecolonies/pull/5939#pullrequestreview-528273502", "createdAt": "2020-11-11T15:25:39Z", "commit": {"oid": "a3a024c7798d86f9dbab6e93fa68048556962b0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1779, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}