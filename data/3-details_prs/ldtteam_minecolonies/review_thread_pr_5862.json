{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MjM4MjEz", "number": 5862, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMTo0ODozOVrOEqAwSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMjowNDo1MlrOEqAzag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg4MDExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/managers/BuildingManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMTo0ODozOVrOHcBKng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMTo0ODozOVrOHcBKng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MTI3OA==", "bodyText": "if you only need the closest just keep the closest saved, no need to re-sort the entire list", "url": "https://github.com/ldtteam/minecolonies/pull/5862#discussion_r499141278", "createdAt": "2020-10-03T11:48:39Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/BuildingManager.java", "diffHunk": "@@ -257,6 +257,34 @@ public IBuilding getBuilding(final BlockPos buildingId)\n         return null;\n     }\n \n+    @Nullable\n+    @Override\n+    public IWareHouse getClosestWarehouseInColony(final BlockPos pos)\n+    {\n+        final List<IWareHouse> wareHouses = new ArrayList<>();\n+        for (final IBuilding building : colony.getBuildingManager().getBuildings().values())\n+        {\n+            if (building instanceof BuildingWareHouse && building.getTileEntity() != null)\n+            {\n+                wareHouses.add((IWareHouse) building);\n+            }\n+        }\n+\n+        wareHouses.removeIf(Objects::isNull);\n+        wareHouses.sort((w1, w2) ->\n+        {\n+            final double dist1 = w1.getPosition().distanceSq(pos);\n+            final double dist2 = w2.getPosition().distanceSq(pos);\n+            return Double.compare(dist1, dist2);\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32789e9e4062edc2a267ebf8e666e592e40cdcab"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg4NDI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractWarehouseRequestResolver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMTo1Njo1N1rOHcBMnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMTo1Njo1N1rOHcBMnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MTc4OA==", "bodyText": "unneeded null check, we only add notnull objects", "url": "https://github.com/ldtteam/minecolonies/pull/5862#discussion_r499141788", "createdAt": "2020-10-03T11:56:57Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/requestsystem/resolvers/core/AbstractWarehouseRequestResolver.java", "diffHunk": "@@ -264,6 +262,14 @@ public void onAssignedRequestCancelled(@NotNull final IRequestManager manager, @\n             }\n         }\n \n+        wareHouses.removeIf(Objects::isNull);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32789e9e4062edc2a267ebf8e666e592e40cdcab"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDg4ODEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/RecallCitizenHutMessage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMjowNDo1MlrOHcBObw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMjowNDo1MlrOHcBObw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0MjI1NQ==", "bodyText": "could we here instead do data.setLastpos(buildingpos) -> existing entity remove(or null) -> data.updateEntityIfNecessary() ?\nThen we're making sure to cleanup the references and get a valid entity in any case. E.g. when the data somehow has a no longer valid entities but still keeps that", "url": "https://github.com/ldtteam/minecolonies/pull/5862#discussion_r499142255", "createdAt": "2020-10-03T12:04:52Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/network/messages/server/colony/building/RecallCitizenHutMessage.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.minecolonies.coremod.network.messages.server.colony.building;\n+\n+import com.ldtteam.structurize.util.LanguageHandler;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.buildings.IBuilding;\n+import com.minecolonies.api.entity.citizen.AbstractEntityCitizen;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.coremod.colony.buildings.views.AbstractBuildingView;\n+import com.minecolonies.coremod.network.messages.server.AbstractBuildingServerMessage;\n+import com.minecolonies.coremod.util.TeleportHelper;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import net.minecraftforge.fml.network.NetworkEvent;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.Optional;\n+\n+/**\n+ * Used to handle citizen recalls to their hut.\n+ */\n+public class RecallCitizenHutMessage extends AbstractBuildingServerMessage<IBuilding>\n+{\n+    /**\n+     * Empty public constructor.\n+     */\n+    public RecallCitizenHutMessage()\n+    {\n+        super();\n+    }\n+\n+    /**\n+     * Creates a message to recall all citizens to their hut.\n+     *\n+     * @param building {@link AbstractBuildingView}\n+     */\n+    public RecallCitizenHutMessage(@NotNull final AbstractBuildingView building)\n+    {\n+        super(building);\n+    }\n+\n+    @Override\n+    protected void onExecute(@NotNull final NetworkEvent.Context ctxIn, final boolean isLogicalServer, @NotNull final IColony colony, @NotNull final IBuilding building)\n+    {\n+        final BlockPos location = building.getPosition();\n+        final World world = colony.getWorld();\n+        for (final ICitizenData citizenData : building.getAssignedCitizen())\n+        {\n+            Optional<AbstractEntityCitizen> optionalEntityCitizen = citizenData.getEntity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32789e9e4062edc2a267ebf8e666e592e40cdcab"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3526, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}