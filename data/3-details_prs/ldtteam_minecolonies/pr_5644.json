{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyMTQyNjE3", "number": 5644, "title": "Enable datapack-based loading of worker specific recipes", "bodyText": "Changes proposed in this pull request:\n\nEnable loading of embedded recipes for workers from datapacks\nUpdate Crusher to load from data\nUpdate Dyer to load from data\nUpdate Farmer to load from data\nUpdate Fletcher to load from data\nUpdate Lumberjack to load from data\nUpdate Stonemason to load from data\n\nReview please", "createdAt": "2020-08-23T15:56:16Z", "url": "https://github.com/ldtteam/minecolonies/pull/5644", "merged": true, "mergeCommit": {"oid": "909affd5be8901ab6219c58c16cf2c37c995dff8"}, "closed": true, "closedAt": "2020-08-24T19:12:33Z", "author": {"login": "Mekle001"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBwBrRAH2gAyNDcyMTQyNjE3OjJjNTU3N2ZlMjQzNmI3YjRjOTMwMjI0ZjM5YjlkMGY1ZmU5NDAxYjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCHgnvgH2gAyNDcyMTQyNjE3OjViNGVhZDViOWM4MGQyMWY1MzdjOGFlMzE0MmE0MDY3OTVkNTJhODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2c5577fe2436b7b4c930224f39b9d0f5fe9401b4", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/2c5577fe2436b7b4c930224f39b9d0f5fe9401b4", "committedDate": "2020-08-23T15:48:26Z", "message": "Add support for custom recipes from data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "186bd1ce141cfd21be850f4611b8876ec65957b4", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/186bd1ce141cfd21be850f4611b8876ec65957b4", "committedDate": "2020-08-23T15:52:15Z", "message": "Make Crusher Dynamic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7b416d542a2a84a53134096c0e8dc2ccc758263", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/c7b416d542a2a84a53134096c0e8dc2ccc758263", "committedDate": "2020-08-23T15:52:54Z", "message": "Make Dyer Dynamic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d415d6a9221389e7b261419f8003c4a2a6b008ee", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/d415d6a9221389e7b261419f8003c4a2a6b008ee", "committedDate": "2020-08-23T15:53:05Z", "message": "Make farmer dynamic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60bd61888f5c4c1d23acccfe4026d9a2922bf533", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/60bd61888f5c4c1d23acccfe4026d9a2922bf533", "committedDate": "2020-08-23T15:53:17Z", "message": "Make Fletcher dynamic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45608823a9ff843aa42018977b9bd8bccea47ab4", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/45608823a9ff843aa42018977b9bd8bccea47ab4", "committedDate": "2020-08-23T15:53:36Z", "message": "Make Lumberjack Dynamic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a73469de1eb9cd30c040f918f39b64235718014", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/1a73469de1eb9cd30c040f918f39b64235718014", "committedDate": "2020-08-23T15:53:50Z", "message": "Make Stonemason dynamic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85bb2d5352c9b5b0852b3aeee640b4aa02e2e169", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/85bb2d5352c9b5b0852b3aeee640b4aa02e2e169", "committedDate": "2020-08-23T15:58:55Z", "message": "clean up excess logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/42b70b383278867cbdaa29f9fa779a084a4025fd", "committedDate": "2020-08-23T18:03:10Z", "message": "More logging cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMxNzk3", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473031797", "createdAt": "2020-08-23T18:15:16Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoxNToxNlrOHFO5jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoxNToxNlrOHFO5jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTAzNw==", "bodyText": "might need some finals around here (final Set, final CustomRecipe, final IRecipeStorage final IToken)", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249037", "createdAt": "2020-08-23T18:15:16Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -787,7 +789,70 @@ public boolean canEat(final ItemStack stack)\n      */\n     public void checkForWorkerSpecificRecipes()\n     {\n-        // Override if necessary.\n+        Set<CustomRecipe> staticRecipes = CustomRecipeManager.getInstance().getRecipes(getJobName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMxODU4", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473031858", "createdAt": "2020-08-23T18:16:21Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoxNjoyMVrOHFO55w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoxNjoyMVrOHFO55w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTEyNw==", "bodyText": "formatting", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249127", "createdAt": "2020-08-23T18:16:21Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -787,7 +789,70 @@ public boolean canEat(final ItemStack stack)\n      */\n     public void checkForWorkerSpecificRecipes()\n     {\n-        // Override if necessary.\n+        Set<CustomRecipe> staticRecipes = CustomRecipeManager.getInstance().getRecipes(getJobName());\n+\n+        for(CustomRecipe newRecipe : staticRecipes)\n+        {\n+            IRecipeStorage recipeStorage = newRecipe.getRecipeStorage();\n+            IToken<?> recipeToken = IColonyManager.getInstance().getRecipeManager().checkOrAddRecipe(recipeStorage);\n+\n+            if(newRecipe.isValidForColony(colony))\n+            {   \n+                boolean duplicateFound = false; \n+                for(IToken<?> token : recipes)\n+                {\n+                    if(token == recipeToken)\n+                    {\n+                        duplicateFound = true;\n+                        break;\n+                    }\n+                    final IRecipeStorage storage = IColonyManager.getInstance().getRecipeManager().getRecipes().get(token);\n+\n+                    //Let's verify that this recipe doesn't exist in an improved form\n+                    if(storage != null && storage.getPrimaryOutput().equals(recipeStorage.getPrimaryOutput(), true))\n+                    {\n+                        List<ItemStorage> storageInput = storage.getCleanedInput();\n+                        List<ItemStorage> recipeInput = recipeStorage.getCleanedInput();\n+\n+                        if(storageInput.size() != recipeInput.size())\n+                        {\n+                            continue;\n+                        }\n+                        \n+                        if(storageInput.size() > 1) {\n+                            storageInput.sort(Comparator.comparing(item -> item.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMxODc1", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473031875", "createdAt": "2020-08-23T18:16:42Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoxNjo0M1rOHFO6Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoxNjo0M1rOHFO6Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTE2Mw==", "bodyText": "maybe better recipeInput1 and recipeInput2", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249163", "createdAt": "2020-08-23T18:16:43Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -787,7 +789,70 @@ public boolean canEat(final ItemStack stack)\n      */\n     public void checkForWorkerSpecificRecipes()\n     {\n-        // Override if necessary.\n+        Set<CustomRecipe> staticRecipes = CustomRecipeManager.getInstance().getRecipes(getJobName());\n+\n+        for(CustomRecipe newRecipe : staticRecipes)\n+        {\n+            IRecipeStorage recipeStorage = newRecipe.getRecipeStorage();\n+            IToken<?> recipeToken = IColonyManager.getInstance().getRecipeManager().checkOrAddRecipe(recipeStorage);\n+\n+            if(newRecipe.isValidForColony(colony))\n+            {   \n+                boolean duplicateFound = false; \n+                for(IToken<?> token : recipes)\n+                {\n+                    if(token == recipeToken)\n+                    {\n+                        duplicateFound = true;\n+                        break;\n+                    }\n+                    final IRecipeStorage storage = IColonyManager.getInstance().getRecipeManager().getRecipes().get(token);\n+\n+                    //Let's verify that this recipe doesn't exist in an improved form\n+                    if(storage != null && storage.getPrimaryOutput().equals(recipeStorage.getPrimaryOutput(), true))\n+                    {\n+                        List<ItemStorage> storageInput = storage.getCleanedInput();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMxOTQ2", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473031946", "createdAt": "2020-08-23T18:18:00Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoxODowMFrOHFO6ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoxODowMFrOHFO6ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTI1Mw==", "bodyText": "break?", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249253", "createdAt": "2020-08-23T18:18:00Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -787,7 +789,70 @@ public boolean canEat(final ItemStack stack)\n      */\n     public void checkForWorkerSpecificRecipes()\n     {\n-        // Override if necessary.\n+        Set<CustomRecipe> staticRecipes = CustomRecipeManager.getInstance().getRecipes(getJobName());\n+\n+        for(CustomRecipe newRecipe : staticRecipes)\n+        {\n+            IRecipeStorage recipeStorage = newRecipe.getRecipeStorage();\n+            IToken<?> recipeToken = IColonyManager.getInstance().getRecipeManager().checkOrAddRecipe(recipeStorage);\n+\n+            if(newRecipe.isValidForColony(colony))\n+            {   \n+                boolean duplicateFound = false; \n+                for(IToken<?> token : recipes)\n+                {\n+                    if(token == recipeToken)\n+                    {\n+                        duplicateFound = true;\n+                        break;\n+                    }\n+                    final IRecipeStorage storage = IColonyManager.getInstance().getRecipeManager().getRecipes().get(token);\n+\n+                    //Let's verify that this recipe doesn't exist in an improved form\n+                    if(storage != null && storage.getPrimaryOutput().equals(recipeStorage.getPrimaryOutput(), true))\n+                    {\n+                        List<ItemStorage> storageInput = storage.getCleanedInput();\n+                        List<ItemStorage> recipeInput = recipeStorage.getCleanedInput();\n+\n+                        if(storageInput.size() != recipeInput.size())\n+                        {\n+                            continue;\n+                        }\n+                        \n+                        if(storageInput.size() > 1) {\n+                            storageInput.sort(Comparator.comparing(item -> item.toString()));\n+                            recipeInput.sort(Comparator.comparing(item -> item.toString()));\n+                        }\n+\n+                        boolean allMatch = true;\n+                        for(int i=0; i<storageInput.size(); i++)\n+                        {\n+                            if(!storageInput.get(i).getItem().equals(recipeInput.get(i).getItem()))\n+                            {\n+                                allMatch = false;\n+                                break;\n+                            }\n+                        }\n+                        if(allMatch)\n+                        {\n+                            duplicateFound = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMyMDg4", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473032088", "createdAt": "2020-08-23T18:20:23Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMDoyM1rOHFO7Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMDoyM1rOHFO7Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTQ3NA==", "bodyText": "maybe call the property ones RECIPE_TYPE_PROP, so the next one doesn't have such a confusing name =D", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249474", "createdAt": "2020-08-23T18:20:23Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -0,0 +1,232 @@\n+package com.minecolonies.coremod.colony.crafting;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.requestsystem.StandardFactoryController;\n+import com.minecolonies.api.crafting.IRecipeStorage;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.research.UnlockAbilityResearchEffect;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.item.Item;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraftforge.registries.ForgeRegistries;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * This class represents a recipe loaded from custom data that is available to a crafter\n+ * but not to a player\n+ */\n+public class CustomRecipe\n+{\n+\n+    /**\n+     * The property name that indicates type for the recipe\n+     */\n+    public static final String RECIPE_TYPE = \"type\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMyMTE5", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473032119", "createdAt": "2020-08-23T18:20:53Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMDo1M1rOHFO7hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMDo1M1rOHFO7hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTU0Mw==", "bodyText": "formatting", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249543", "createdAt": "2020-08-23T18:20:53Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -0,0 +1,232 @@\n+package com.minecolonies.coremod.colony.crafting;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.requestsystem.StandardFactoryController;\n+import com.minecolonies.api.crafting.IRecipeStorage;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.research.UnlockAbilityResearchEffect;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.item.Item;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraftforge.registries.ForgeRegistries;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * This class represents a recipe loaded from custom data that is available to a crafter\n+ * but not to a player\n+ */\n+public class CustomRecipe\n+{\n+\n+    /**\n+     * The property name that indicates type for the recipe\n+     */\n+    public static final String RECIPE_TYPE = \"type\";\n+\n+    /**\n+     * The recipe type \n+     */\n+    public static final String RECIPE_TYPE_RECIPE = \"recipe\";\n+\n+    /**\n+     * The remove type \n+     */\n+    public static final String RECIPE_TYPE_REMOVE = \"remove\";\n+\n+    /**\n+     * The property name that indicates crafter type for the recipe\n+     */\n+    public static final String RECIPE_CRAFTER = \"crafter\";\n+\n+    /**\n+     * The property name for the inputs array\n+     */\n+    public static final String RECIPE_INPUTS = \"inputs\";\n+\n+    /**\n+     * The property name for the result item \n+     */\n+    public static final String RECIPE_RESULT = \"result\";\n+\n+    /**\n+     * The property name for Count, used both in inputs array and for result\n+     */\n+    public static final String COUNT = \"count\";\n+\n+    /**\n+     * The property name for the item id in the inputs array\n+     */\n+    public static final String ITEM = \"item\";\n+\n+    /**\n+     * The property name for the intermediate block ID\n+     */\n+    public static final String RECIPE_INTERMEDIATE = \"intermediate\";\n+\n+    /**\n+     * The property name for the required research id\n+     */\n+    public static final String RECIPE_RESEARCHID = \"research-id\";\n+\n+    /**\n+     * The property name for the research id that invalidates this recipe\n+     */\n+    public static final String RECIPE_EXCLUDED_RESEARCHID = \"not-research-id\";\n+\n+    /**\n+     * The crafter name for this instance, defaults to 'unknown'\n+     */\n+    private String crafter = \"unknown\";\n+\n+    /**\n+     * The recipe id for this instance, used for removal and lookup\n+     */\n+    private String recipeId = \"\";\n+\n+    private ArrayList<ItemStack> inputs = new ArrayList<>();\n+    private ItemStack result = null;\n+    private Block intermediate = Blocks.AIR;\n+\n+    private String researchId = null;\n+    private String excludedResearchId = null;\n+\n+\n+    /**\n+     * This class can only be created by the parse static\n+     */\n+    private CustomRecipe() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 104}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMyMTg5", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473032189", "createdAt": "2020-08-23T18:21:54Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMTo1NFrOHFO77Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMTo1NFrOHFO77Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTY0NQ==", "bodyText": "final (also for input @NotNull final probably)", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249645", "createdAt": "2020-08-23T18:21:54Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipe.java", "diffHunk": "@@ -0,0 +1,232 @@\n+package com.minecolonies.coremod.colony.crafting;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.requestsystem.StandardFactoryController;\n+import com.minecolonies.api.crafting.IRecipeStorage;\n+import com.minecolonies.api.research.effects.IResearchEffect;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.research.UnlockAbilityResearchEffect;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.item.Item;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraftforge.registries.ForgeRegistries;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * This class represents a recipe loaded from custom data that is available to a crafter\n+ * but not to a player\n+ */\n+public class CustomRecipe\n+{\n+\n+    /**\n+     * The property name that indicates type for the recipe\n+     */\n+    public static final String RECIPE_TYPE = \"type\";\n+\n+    /**\n+     * The recipe type \n+     */\n+    public static final String RECIPE_TYPE_RECIPE = \"recipe\";\n+\n+    /**\n+     * The remove type \n+     */\n+    public static final String RECIPE_TYPE_REMOVE = \"remove\";\n+\n+    /**\n+     * The property name that indicates crafter type for the recipe\n+     */\n+    public static final String RECIPE_CRAFTER = \"crafter\";\n+\n+    /**\n+     * The property name for the inputs array\n+     */\n+    public static final String RECIPE_INPUTS = \"inputs\";\n+\n+    /**\n+     * The property name for the result item \n+     */\n+    public static final String RECIPE_RESULT = \"result\";\n+\n+    /**\n+     * The property name for Count, used both in inputs array and for result\n+     */\n+    public static final String COUNT = \"count\";\n+\n+    /**\n+     * The property name for the item id in the inputs array\n+     */\n+    public static final String ITEM = \"item\";\n+\n+    /**\n+     * The property name for the intermediate block ID\n+     */\n+    public static final String RECIPE_INTERMEDIATE = \"intermediate\";\n+\n+    /**\n+     * The property name for the required research id\n+     */\n+    public static final String RECIPE_RESEARCHID = \"research-id\";\n+\n+    /**\n+     * The property name for the research id that invalidates this recipe\n+     */\n+    public static final String RECIPE_EXCLUDED_RESEARCHID = \"not-research-id\";\n+\n+    /**\n+     * The crafter name for this instance, defaults to 'unknown'\n+     */\n+    private String crafter = \"unknown\";\n+\n+    /**\n+     * The recipe id for this instance, used for removal and lookup\n+     */\n+    private String recipeId = \"\";\n+\n+    private ArrayList<ItemStack> inputs = new ArrayList<>();\n+    private ItemStack result = null;\n+    private Block intermediate = Blocks.AIR;\n+\n+    private String researchId = null;\n+    private String excludedResearchId = null;\n+\n+\n+    /**\n+     * This class can only be created by the parse static\n+     */\n+    private CustomRecipe() {\n+\n+    }\n+    \n+    /**\n+     * Parse a Json object into a Custom recipe\n+     * @param recipeJson the json representing the recipe\n+     * @return new instance of CustomRecipe\n+     */\n+    public static CustomRecipe parse(JsonObject recipeJson)\n+    {\n+        CustomRecipe recipe = new CustomRecipe();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMyMjU5", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473032259", "createdAt": "2020-08-23T18:22:54Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMjo1NFrOHFO8TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMjo1NFrOHFO8TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTc0MA==", "bodyText": "jdoc on fields too", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249740", "createdAt": "2020-08-23T18:22:54Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipeManager.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.minecolonies.coremod.colony.crafting;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+import com.google.gson.JsonObject;\n+\n+import static com.minecolonies.coremod.colony.crafting.CustomRecipe.*;\n+\n+/**\n+ * Manager class for tracking Custom recipes during load and use\n+ * This class is a singleton\n+ */\n+public class CustomRecipeManager\n+{\n+    private static CustomRecipeManager instance = new CustomRecipeManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMyMjcw", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473032270", "createdAt": "2020-08-23T18:23:09Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMzowOVrOHFO8XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyMzowOVrOHFO8XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTc1Ng==", "bodyText": "@NotNull final", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249756", "createdAt": "2020-08-23T18:23:09Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipeManager.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.minecolonies.coremod.colony.crafting;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+import com.google.gson.JsonObject;\n+\n+import static com.minecolonies.coremod.colony.crafting.CustomRecipe.*;\n+\n+/**\n+ * Manager class for tracking Custom recipes during load and use\n+ * This class is a singleton\n+ */\n+public class CustomRecipeManager\n+{\n+    private static CustomRecipeManager instance = new CustomRecipeManager();\n+    private HashMap<String, HashMap<String, CustomRecipe>> recipeMap = new HashMap<>();\n+\n+    private CustomRecipeManager()\n+    {\n+    }\n+        \n+    /**\n+     * Get the singleton instance of this class\n+     * @return\n+     */\n+    public static CustomRecipeManager getInstance()\n+    {\n+        return instance;\n+    }\n+\n+    /**\n+     * Add a recipe Json to the manager\n+     * @param recipeJson\n+     * @param namespace\n+     * @param path\n+     */\n+    public void addRecipe(JsonObject recipeJson, String namespace, String path)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMyMzc0", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473032374", "createdAt": "2020-08-23T18:24:53Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyNDo1M1rOHFO9FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyNDo1M1rOHFO9FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI0OTk0MQ==", "bodyText": "I think in general we might be able to simplify a lot of this using a resource location =D", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475249941", "createdAt": "2020-08-23T18:24:53Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/crafting/CustomRecipeManager.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package com.minecolonies.coremod.colony.crafting;\n+\n+import java.util.*;\n+import java.util.stream.Collectors;\n+import com.google.gson.JsonObject;\n+\n+import static com.minecolonies.coremod.colony.crafting.CustomRecipe.*;\n+\n+/**\n+ * Manager class for tracking Custom recipes during load and use\n+ * This class is a singleton\n+ */\n+public class CustomRecipeManager\n+{\n+    private static CustomRecipeManager instance = new CustomRecipeManager();\n+    private HashMap<String, HashMap<String, CustomRecipe>> recipeMap = new HashMap<>();\n+\n+    private CustomRecipeManager()\n+    {\n+    }\n+        \n+    /**\n+     * Get the singleton instance of this class\n+     * @return\n+     */\n+    public static CustomRecipeManager getInstance()\n+    {\n+        return instance;\n+    }\n+\n+    /**\n+     * Add a recipe Json to the manager\n+     * @param recipeJson\n+     * @param namespace\n+     * @param path\n+     */\n+    public void addRecipe(JsonObject recipeJson, String namespace, String path)\n+    {\n+        CustomRecipe recipe = CustomRecipe.parse(recipeJson);\n+        recipe.setRecipeId(namespace + \":\" + path);\n+\n+        if(!recipeMap.containsKey(recipe.getCrafter()))\n+        {\n+            recipeMap.put(recipe.getCrafter(), new HashMap<>());\n+        }\n+        recipeMap.get(recipe.getCrafter()).put(recipe.getRecipeId(), recipe);\n+    }\n+\n+    /**\n+     * Remove a recipe from the manager\n+     * This allows modpacks to remove 'bad' recipes in addition to adding good ones\n+     * @param recipeJson\n+     * @param namespace\n+     * @param path\n+     */\n+    public void removeRecipe(JsonObject recipeJson, String namespace, String path)\n+    {\n+        final String id = namespace + \":\" + path;\n+        if (recipeJson.has(RECIPE_TYPE) && recipeJson.get(RECIPE_TYPE).getAsString().equals(\"remove\") && recipeJson.has(\"recipe-id-to-remove\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMDMyNDIw", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473032420", "createdAt": "2020-08-23T18:25:38Z", "commit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyNTozOFrOHFO9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODoyNTozOFrOHFO9Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1MDAxNQ==", "bodyText": "can be straight getResourceManager().add for now I guess", "url": "https://github.com/ldtteam/minecolonies/pull/5644#discussion_r475250015", "createdAt": "2020-08-23T18:25:38Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/event/FMLEventHandler.java", "diffHunk": "@@ -51,6 +54,14 @@ public static void onPlayerLogin(@NotNull final PlayerEvent.PlayerLoggedInEvent\n         }\n     }\n \n+    @SubscribeEvent\n+    public static void onServerAboutToStart(FMLServerAboutToStartEvent event)\n+    {\n+        IReloadableResourceManager resourceManager = event.getServer().getResourceManager();\n+\n+        resourceManager.addReloadListener(new CrafterRecipeListener());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42b70b383278867cbdaa29f9fa779a084a4025fd"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae6a6b3db55838a946fbc4fa6f6811ba1ba8c4d", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/2ae6a6b3db55838a946fbc4fa6f6811ba1ba8c4d", "committedDate": "2020-08-23T18:35:21Z", "message": "Review Feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c78bdc4d011915f74b6e3bacc2796bebdcb2b0cf", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/c78bdc4d011915f74b6e3bacc2796bebdcb2b0cf", "committedDate": "2020-08-23T19:00:57Z", "message": "Switch to ResourceLocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0395bb343ed012615355ea44ee6d2d71dd5dbfe7", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/0395bb343ed012615355ea44ee6d2d71dd5dbfe7", "committedDate": "2020-08-24T15:47:32Z", "message": "Merge branch 'version/1.15' into customdata/recipes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b704e1070850437419139530fdd6d9ade60f5517", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/b704e1070850437419139530fdd6d9ade60f5517", "committedDate": "2020-08-24T16:25:56Z", "message": "Merge branch 'version/1.15' into customdata/recipes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNjcwNjQz", "url": "https://github.com/ldtteam/minecolonies/pull/5644#pullrequestreview-473670643", "createdAt": "2020-08-24T16:37:39Z", "commit": {"oid": "b704e1070850437419139530fdd6d9ade60f5517"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f1ef6a25ecd5e7ff62ed816da071fcfdb1ba3b9", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/7f1ef6a25ecd5e7ff62ed816da071fcfdb1ba3b9", "committedDate": "2020-08-24T19:08:15Z", "message": "fix this"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b4ead5b9c80d21f537c8ae3142a406795d52a86", "author": {"user": {"login": "Mekle001", "name": "Mike Garlick"}}, "url": "https://github.com/ldtteam/minecolonies/commit/5b4ead5b9c80d21f537c8ae3142a406795d52a86", "committedDate": "2020-08-24T19:10:03Z", "message": "Fix Null during walking"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1872, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}