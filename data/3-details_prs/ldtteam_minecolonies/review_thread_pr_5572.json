{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NzQzMDQx", "number": 5572, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1MjoxNlrOEYZCew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToyMDozN1rOEYgsxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDExNTE1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/data/minecolonies/tags/items/reduceable_product_excluded.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1MjoxNlrOHAs4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToxNjo1M1rOHA4iwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5NzQ2Mg==", "bodyText": "There is an overlap with the above one? I think only storage_blocks should be excluded?", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470497462", "createdAt": "2020-08-14T08:52:16Z", "author": {"login": "Raycoms"}, "path": "src/main/resources/data/minecolonies/tags/items/reduceable_product_excluded.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"replace\": false,\n+  \"values\": [\n+    \"#forge:stone\",\n+    \"#forge:cobblestone\",\n+    \"#forge:gravel\",\n+    \"#forge:sand\",\n+    \"#forge:ingots\",\n+    \"#forge:storage_blocks\"\n+  ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4MjA5OQ==", "bodyText": "The logic here is that we can reduce ingots and stone etc. when used as ingredients, unless the output is ingots or stone etc.\nThis allows the stonemason to reduce the cobblestone in cobblestone stairs, but not have the crusher reduce the cobblestone in sand, as that's the responsibility of \"Gilded Hammer\" research.\nSo, we exclude as a product the things the crusher makes, and both types of storage (ingots/storage blocks) to avoid duplication exploits.", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470682099", "createdAt": "2020-08-14T15:05:41Z", "author": {"login": "Mekle001"}, "path": "src/main/resources/data/minecolonies/tags/items/reduceable_product_excluded.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"replace\": false,\n+  \"values\": [\n+    \"#forge:stone\",\n+    \"#forge:cobblestone\",\n+    \"#forge:gravel\",\n+    \"#forge:sand\",\n+    \"#forge:ingots\",\n+    \"#forge:storage_blocks\"\n+  ]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5NzQ2Mg=="}, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4ODQ1MA==", "bodyText": "ahh okay", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470688450", "createdAt": "2020-08-14T15:16:53Z", "author": {"login": "Raycoms"}, "path": "src/main/resources/data/minecolonies/tags/items/reduceable_product_excluded.json", "diffHunk": "@@ -0,0 +1,11 @@\n+{\n+  \"replace\": false,\n+  \"values\": [\n+    \"#forge:stone\",\n+    \"#forge:cobblestone\",\n+    \"#forge:gravel\",\n+    \"#forge:sand\",\n+    \"#forge:ingots\",\n+    \"#forge:storage_blocks\"\n+  ]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5NzQ2Mg=="}, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDExODA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1MzoxM1rOHAs6gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToxNzoxMVrOHA4jQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5NzkyMw==", "bodyText": "This seems to go through ALL ingredients to improve then. But it should pick one at random actually.", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470497923", "createdAt": "2020-08-14T08:53:13Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;\n+        final ResourceLocation reducableIngredients = new ResourceLocation(\"minecolonies\", \"reduceable_ingredient\");\n+        final ResourceLocation reducableProductExclusions = new ResourceLocation(\"minecolonies\", \"reduceable_product_excluded\");\n+        final List<ItemStorage> inputs = recipe.getCleanedInput().stream().sorted(Comparator.comparingInt(ItemStorage::getAmount).reversed()).collect(Collectors.toList());\n+\n+        final double actualChance = Math.min(5.0, (baseChance * count) + (baseChance * citizen.getCitizenSkillHandler().getLevel(getPrimarySkill())));\n+        final double roll = citizen.getRandom().nextDouble() * 100;\n+\n+        Log.getLogger().info(this.getJobName() + \": for \" + recipe.getPrimaryOutput().getItem() + \" improvement roll is \" + roll + \" with an actual chance of: \" + actualChance);\n+        if(roll <= actualChance && !ItemTags.getCollection().getOrCreate(reducableProductExclusions).contains(recipe.getPrimaryOutput().getItem()))\n+        {\n+            ArrayList<ItemStack> newRecipe = new ArrayList<>();\n+            boolean didReduction = false;\n+            Log.getLogger().info(this.getJobName() + \": attempting to improve recipe for: \" + recipe.getPrimaryOutput().getItem());\n+            for(ItemStorage input : inputs)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4NjE0NA==", "bodyText": "It only improves one, and while it's not random, it will improve the one with the largest starting count.  It touches all of the ingredients to copy them to the 'new' recipe.", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470686144", "createdAt": "2020-08-14T15:12:48Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;\n+        final ResourceLocation reducableIngredients = new ResourceLocation(\"minecolonies\", \"reduceable_ingredient\");\n+        final ResourceLocation reducableProductExclusions = new ResourceLocation(\"minecolonies\", \"reduceable_product_excluded\");\n+        final List<ItemStorage> inputs = recipe.getCleanedInput().stream().sorted(Comparator.comparingInt(ItemStorage::getAmount).reversed()).collect(Collectors.toList());\n+\n+        final double actualChance = Math.min(5.0, (baseChance * count) + (baseChance * citizen.getCitizenSkillHandler().getLevel(getPrimarySkill())));\n+        final double roll = citizen.getRandom().nextDouble() * 100;\n+\n+        Log.getLogger().info(this.getJobName() + \": for \" + recipe.getPrimaryOutput().getItem() + \" improvement roll is \" + roll + \" with an actual chance of: \" + actualChance);\n+        if(roll <= actualChance && !ItemTags.getCollection().getOrCreate(reducableProductExclusions).contains(recipe.getPrimaryOutput().getItem()))\n+        {\n+            ArrayList<ItemStack> newRecipe = new ArrayList<>();\n+            boolean didReduction = false;\n+            Log.getLogger().info(this.getJobName() + \": attempting to improve recipe for: \" + recipe.getPrimaryOutput().getItem());\n+            for(ItemStorage input : inputs)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5NzkyMw=="}, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4ODU3OQ==", "bodyText": "kk", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470688579", "createdAt": "2020-08-14T15:17:11Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;\n+        final ResourceLocation reducableIngredients = new ResourceLocation(\"minecolonies\", \"reduceable_ingredient\");\n+        final ResourceLocation reducableProductExclusions = new ResourceLocation(\"minecolonies\", \"reduceable_product_excluded\");\n+        final List<ItemStorage> inputs = recipe.getCleanedInput().stream().sorted(Comparator.comparingInt(ItemStorage::getAmount).reversed()).collect(Collectors.toList());\n+\n+        final double actualChance = Math.min(5.0, (baseChance * count) + (baseChance * citizen.getCitizenSkillHandler().getLevel(getPrimarySkill())));\n+        final double roll = citizen.getRandom().nextDouble() * 100;\n+\n+        Log.getLogger().info(this.getJobName() + \": for \" + recipe.getPrimaryOutput().getItem() + \" improvement roll is \" + roll + \" with an actual chance of: \" + actualChance);\n+        if(roll <= actualChance && !ItemTags.getCollection().getOrCreate(reducableProductExclusions).contains(recipe.getPrimaryOutput().getItem()))\n+        {\n+            ArrayList<ItemStack> newRecipe = new ArrayList<>();\n+            boolean didReduction = false;\n+            Log.getLogger().info(this.getJobName() + \": attempting to improve recipe for: \" + recipe.getPrimaryOutput().getItem());\n+            for(ItemStorage input : inputs)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5NzkyMw=="}, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDExODU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1MzoyMlrOHAs6zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToxNjoyMFrOHA4hWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5Nzk5OA==", "bodyText": "This could cause logging spam", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470497998", "createdAt": "2020-08-14T08:53:22Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;\n+        final ResourceLocation reducableIngredients = new ResourceLocation(\"minecolonies\", \"reduceable_ingredient\");\n+        final ResourceLocation reducableProductExclusions = new ResourceLocation(\"minecolonies\", \"reduceable_product_excluded\");\n+        final List<ItemStorage> inputs = recipe.getCleanedInput().stream().sorted(Comparator.comparingInt(ItemStorage::getAmount).reversed()).collect(Collectors.toList());\n+\n+        final double actualChance = Math.min(5.0, (baseChance * count) + (baseChance * citizen.getCitizenSkillHandler().getLevel(getPrimarySkill())));\n+        final double roll = citizen.getRandom().nextDouble() * 100;\n+\n+        Log.getLogger().info(this.getJobName() + \": for \" + recipe.getPrimaryOutput().getItem() + \" improvement roll is \" + roll + \" with an actual chance of: \" + actualChance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4Mjk5Ng==", "bodyText": "Yeah, this currently shows up once per crafting job in my server. I intend to remove all the Log.getLogger()... statements before merge.", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470682996", "createdAt": "2020-08-14T15:07:18Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;\n+        final ResourceLocation reducableIngredients = new ResourceLocation(\"minecolonies\", \"reduceable_ingredient\");\n+        final ResourceLocation reducableProductExclusions = new ResourceLocation(\"minecolonies\", \"reduceable_product_excluded\");\n+        final List<ItemStorage> inputs = recipe.getCleanedInput().stream().sorted(Comparator.comparingInt(ItemStorage::getAmount).reversed()).collect(Collectors.toList());\n+\n+        final double actualChance = Math.min(5.0, (baseChance * count) + (baseChance * citizen.getCitizenSkillHandler().getLevel(getPrimarySkill())));\n+        final double roll = citizen.getRandom().nextDouble() * 100;\n+\n+        Log.getLogger().info(this.getJobName() + \": for \" + recipe.getPrimaryOutput().getItem() + \" improvement roll is \" + roll + \" with an actual chance of: \" + actualChance);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5Nzk5OA=="}, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4ODA5MA==", "bodyText": "kk", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470688090", "createdAt": "2020-08-14T15:16:20Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;\n+        final ResourceLocation reducableIngredients = new ResourceLocation(\"minecolonies\", \"reduceable_ingredient\");\n+        final ResourceLocation reducableProductExclusions = new ResourceLocation(\"minecolonies\", \"reduceable_product_excluded\");\n+        final List<ItemStorage> inputs = recipe.getCleanedInput().stream().sorted(Comparator.comparingInt(ItemStorage::getAmount).reversed()).collect(Collectors.toList());\n+\n+        final double actualChance = Math.min(5.0, (baseChance * count) + (baseChance * citizen.getCitizenSkillHandler().getLevel(getPrimarySkill())));\n+        final double roll = citizen.getRandom().nextDouble() * 100;\n+\n+        Log.getLogger().info(this.getJobName() + \": for \" + recipe.getPrimaryOutput().getItem() + \" improvement roll is \" + roll + \" with an actual chance of: \" + actualChance);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5Nzk5OA=="}, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MDExOTI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODo1MzozNlrOHAs7SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTowOTo1N1rOHA4TEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5ODEyMQ==", "bodyText": "final List", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470498121", "createdAt": "2020-08-14T08:53:36Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;\n+        final ResourceLocation reducableIngredients = new ResourceLocation(\"minecolonies\", \"reduceable_ingredient\");\n+        final ResourceLocation reducableProductExclusions = new ResourceLocation(\"minecolonies\", \"reduceable_product_excluded\");\n+        final List<ItemStorage> inputs = recipe.getCleanedInput().stream().sorted(Comparator.comparingInt(ItemStorage::getAmount).reversed()).collect(Collectors.toList());\n+\n+        final double actualChance = Math.min(5.0, (baseChance * count) + (baseChance * citizen.getCitizenSkillHandler().getLevel(getPrimarySkill())));\n+        final double roll = citizen.getRandom().nextDouble() * 100;\n+\n+        Log.getLogger().info(this.getJobName() + \": for \" + recipe.getPrimaryOutput().getItem() + \" improvement roll is \" + roll + \" with an actual chance of: \" + actualChance);\n+        if(roll <= actualChance && !ItemTags.getCollection().getOrCreate(reducableProductExclusions).contains(recipe.getPrimaryOutput().getItem()))\n+        {\n+            ArrayList<ItemStack> newRecipe = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4NDQzMg==", "bodyText": "Good catch. Fix incoming", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470684432", "createdAt": "2020-08-14T15:09:57Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;\n+        final ResourceLocation reducableIngredients = new ResourceLocation(\"minecolonies\", \"reduceable_ingredient\");\n+        final ResourceLocation reducableProductExclusions = new ResourceLocation(\"minecolonies\", \"reduceable_product_excluded\");\n+        final List<ItemStorage> inputs = recipe.getCleanedInput().stream().sorted(Comparator.comparingInt(ItemStorage::getAmount).reversed()).collect(Collectors.toList());\n+\n+        final double actualChance = Math.min(5.0, (baseChance * count) + (baseChance * citizen.getCitizenSkillHandler().getLevel(getPrimarySkill())));\n+        final double roll = citizen.getRandom().nextDouble() * 100;\n+\n+        Log.getLogger().info(this.getJobName() + \": for \" + recipe.getPrimaryOutput().getItem() + \" improvement roll is \" + roll + \" with an actual chance of: \" + actualChance);\n+        if(roll <= actualChance && !ItemTags.getCollection().getOrCreate(reducableProductExclusions).contains(recipe.getPrimaryOutput().getItem()))\n+        {\n+            ArrayList<ItemStack> newRecipe = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5ODEyMQ=="}, "originalCommit": {"oid": "dbff602cafb12df4c423eabfd2f967b23d02a3a9"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTM3MDI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToyMDozN1rOHA4qvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTozODowMlrOHA5YbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5MDQ5Mg==", "bodyText": "could use some more constants for the numbers and strings used, instead of \"minecolonies\" use MOD_ID", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470690492", "createdAt": "2020-08-14T15:20:37Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d285857efbd1dfc9833a55e48c4d4a27c76c0944"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5MjExMQ==", "bodyText": "import static com.minecolonies.api.util.constant.Constants.MOD_ID;", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470692111", "createdAt": "2020-08-14T15:22:37Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5MDQ5Mg=="}, "originalCommit": {"oid": "d285857efbd1dfc9833a55e48c4d4a27c76c0944"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5MjI2NQ==", "bodyText": "doesnt VS code find that? :D", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470692265", "createdAt": "2020-08-14T15:22:46Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5MDQ5Mg=="}, "originalCommit": {"oid": "d285857efbd1dfc9833a55e48c4d4a27c76c0944"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDcwMjE4OA==", "bodyText": "It didn't find it on it's own, since we already had a minecraft constants included. I found it by looking at other references.", "url": "https://github.com/ldtteam/minecolonies/pull/5572#discussion_r470702188", "createdAt": "2020-08-14T15:38:02Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractBuildingWorker.java", "diffHunk": "@@ -265,6 +267,59 @@ public boolean canRecipeBeAdded(final IToken<?> ignored)\n         return Optional.empty();\n     }\n \n+    /**\n+     * Has a chance to reduce the resource requirements for the recipe in this building\n+     * @param recipe the recipe we're possibly improving\n+     * @param count the number of items (chances) \n+     * @param citizen The citizen, as the primary skill can improve the chances\n+     */\n+    public void improveRecipe(IRecipeStorage recipe, int count, ICitizenData citizen)\n+    {\n+        final double baseChance = 0.0625;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5MDQ5Mg=="}, "originalCommit": {"oid": "d285857efbd1dfc9833a55e48c4d4a27c76c0944"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3612, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}