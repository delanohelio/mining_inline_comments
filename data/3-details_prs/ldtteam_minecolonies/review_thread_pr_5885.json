{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NDIzMTUz", "number": 5885, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoyMDowNVrOEqqVzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoyMDowNVrOEqqVzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTY5MzU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/network/NetworkChannel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoyMDowNVrOHc_ofA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDoyMDowNVrOHc_ofA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE2NDczMg==", "bodyText": "move to start of method", "url": "https://github.com/ldtteam/minecolonies/pull/5885#discussion_r500164732", "createdAt": "2020-10-06T10:20:05Z", "author": {"login": "Nightenom"}, "path": "src/main/java/com/minecolonies/coremod/network/NetworkChannel.java", "diffHunk": "@@ -353,6 +389,53 @@ public void sendToTrackingEntityAndSelf(final IMessage msg, final Entity entity)\n      */\n     public void sendToTrackingChunk(final IMessage msg, final Chunk chunk)\n     {\n-        rawChannel.send(PacketDistributor.TRACKING_CHUNK.with(() -> chunk), msg);\n+        handleSplitting(msg, s -> rawChannel.send(PacketDistributor.TRACKING_CHUNK.with(() -> chunk), s));\n+    }\n+\n+    private void handleSplitting(final IMessage msg, final Consumer<IMessage> splitMessageConsumer) {\n+        final ByteBuf buffer = Unpooled.buffer();\n+        final PacketBuffer innerPacketBuffer = new PacketBuffer(buffer);\n+        msg.toBytes(innerPacketBuffer);\n+        final byte[] data = new byte[buffer.capacity()];\n+        buffer.getBytes(0, data);\n+        buffer.release();\n+\n+        int max_packet_size = 943718; //This is 90% of max packet size.\n+        int currentIndex = 0;\n+        int packetIndex = 0;\n+        int comId = messageCounter.getAndIncrement();\n+        while(currentIndex < data.length) {\n+            final byte[] subPacketData = Arrays.copyOfRange(data, currentIndex, currentIndex+max_packet_size);\n+            final int messageId = this.messageTypeToIdMap.getOrDefault(msg.getClass(), -1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7447c1e62a231646a49910031779d0c3b725a0a"}, "originalPosition": 199}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3327, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}