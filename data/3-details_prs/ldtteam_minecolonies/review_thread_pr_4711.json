{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDU1Nzc2", "number": 4711, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOToxMzo0NFrOD07Drw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODo0MTozMVrOD1Kt1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODIwMTQzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/entity/pathfinding/PathingOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOToxMzo0NFrOGKGy7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOToxMzo0NFrOGKGy7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI1MDI4NQ==", "bodyText": "If they are not constants, lowercase", "url": "https://github.com/ldtteam/minecolonies/pull/4711#discussion_r413250285", "createdAt": "2020-04-22T19:13:44Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/entity/pathfinding/PathingOptions.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package com.minecolonies.api.entity.pathfinding;\n+\n+/**\n+ * Configuration values for pathing, used by pathjobs and normally set through the navigator\n+ */\n+public class PathingOptions\n+{\n+    /**\n+     * Additional cost of jumping and dropping - base 1.\n+     */\n+    public double JUMP_DROP_COST = 2.0D;\n+\n+    /**\n+     * Cost improvement of paths - base 1.\n+     */\n+    public double ON_PATH_COST = 0.1D;\n+\n+    /**\n+     * Cost improvement of paths - base 1.\n+     */\n+    public double ON_RAIL_COST = 0.01D;\n+\n+    /**\n+     * The rails exit cost.\n+     */\n+    public double RAILS_EXIT_COST = 5;\n+\n+    /**\n+     * Additional cost of swimming - base 1.\n+     */\n+    public double SWIM_COST = 1.5D;\n+\n+    /**\n+     * Additional cost enter entering water\n+     */\n+    public double SWIM_COST_ENTER = 25D;\n+\n+    /**\n+     * Whether to use minecart rail pathing\n+     */\n+    private boolean canUseRails  = false;\n+    /**\n+     * Can swim\n+     */\n+    private boolean canSwim      = false;\n+    /**\n+     * Allowed to enter doors?\n+     */\n+    private boolean enterDoors   = false;\n+    /**\n+     * Allowed to open doors?\n+     */\n+    private boolean canOpenDoors = false;\n+\n+    public PathingOptions()\n+    {}\n+\n+    public boolean canOpenDoors()\n+    {\n+        return canOpenDoors;\n+    }\n+\n+    public void setCanOpenDoors(final boolean canOpenDoors)\n+    {\n+        this.canOpenDoors = canOpenDoors;\n+    }\n+\n+    public boolean canUseRails()\n+    {\n+        return canUseRails;\n+    }\n+\n+    public void setCanUseRails(final boolean canUseRails)\n+    {\n+        this.canUseRails = canUseRails;\n+    }\n+\n+    public boolean canSwim()\n+    {\n+        return canSwim;\n+    }\n+\n+    public void setCanSwim(final boolean canSwim)\n+    {\n+        this.canSwim = canSwim;\n+    }\n+\n+    public boolean canEnterDoors()\n+    {\n+        return enterDoors;\n+    }\n+\n+    public void setEnterDoors(final boolean enterDoors)\n+    {\n+        this.enterDoors = enterDoors;\n+    }\n+\n+    public PathingOptions withStartSwimCost(final double startSwimCost)\n+    {\n+        SWIM_COST_ENTER = startSwimCost;\n+        return this;\n+    }\n+\n+    public PathingOptions withSwimCost(final double swimCost)\n+    {\n+        SWIM_COST = swimCost;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "284a06f707e13cce861a90fcb3e5e2a978412a0e"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDc2Njk0OnYy", "diffSide": "LEFT", "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODo0MTozMVrOGKdykg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwOToyMjoxMVrOGKfjVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNzAyNg==", "bodyText": "Why was this removed?", "url": "https://github.com/ldtteam/minecolonies/pull/4711#discussion_r413627026", "createdAt": "2020-04-23T08:41:31Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -113,10 +113,6 @@ public void serializeToView(@NotNull final PacketBuffer buf)\n     @Override\n     public int getClaimRadius(final int newLevel)\n     {\n-        if (newLevel + 1 < MineColonies.getConfig().getCommon().minTownHallPadding.get())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "318ab3c6ed8d42f5d3c61bad6662ff300d7a37af"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY1NTg5NQ==", "bodyText": "ah because we're always claiming the initial radius when creating the colony now", "url": "https://github.com/ldtteam/minecolonies/pull/4711#discussion_r413655895", "createdAt": "2020-04-23T09:22:11Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingTownHall.java", "diffHunk": "@@ -113,10 +113,6 @@ public void serializeToView(@NotNull final PacketBuffer buf)\n     @Override\n     public int getClaimRadius(final int newLevel)\n     {\n-        if (newLevel + 1 < MineColonies.getConfig().getCommon().minTownHallPadding.get())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYyNzAyNg=="}, "originalCommit": {"oid": "318ab3c6ed8d42f5d3c61bad6662ff300d7a37af"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3146, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}