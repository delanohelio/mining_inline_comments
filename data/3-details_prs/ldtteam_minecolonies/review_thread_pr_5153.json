{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3ODk0NjAz", "number": 5153, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozNjoxOVrOECnmsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoyMzozOFrOECo18w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTgxNDg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/util/CreativeRaiderStructureHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozNjoxOVrOGfL56w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozNjoxOVrOGfL56w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NDA5MQ==", "bodyText": "constants for all the NBT Tags please :D", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435354091", "createdAt": "2020-06-04T15:36:19Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/util/CreativeRaiderStructureHandler.java", "diffHunk": "@@ -0,0 +1,152 @@\n+package com.minecolonies.coremod.util;\n+\n+import com.ldtteam.structures.blueprints.v1.Blueprint;\n+import com.ldtteam.structurize.api.util.Log;\n+import com.ldtteam.structurize.blocks.interfaces.IBlueprintDataProvider;\n+import com.ldtteam.structurize.management.Manager;\n+import com.ldtteam.structurize.placement.StructurePlacer;\n+import com.ldtteam.structurize.placement.structure.CreativeStructureHandler;\n+import com.ldtteam.structurize.placement.structure.IStructureHandler;\n+import com.ldtteam.structurize.util.BlockInfo;\n+import com.ldtteam.structurize.util.PlacementSettings;\n+import com.ldtteam.structurize.util.TickedWorldOperation;\n+import com.minecolonies.api.colony.colonyEvents.IColonyRaidEvent;\n+import com.minecolonies.api.util.BlockPosUtil;\n+import com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent.ShipBasedRaiderUtils;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.tileentity.TileEntity;\n+import net.minecraft.util.Mirror;\n+import net.minecraft.util.Rotation;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.World;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.ldtteam.structurize.blocks.interfaces.IBlueprintDataProvider.TAG_BLUEPRINTDATA;\n+\n+/**\n+ * Raider specific creative structure handler.\n+ * Will correctly place spawners\n+ */\n+public final class CreativeRaiderStructureHandler extends CreativeStructureHandler\n+{\n+    /**\n+     * Map for the spawner positions.\n+     */\n+    private Map<BlockPos, List<String>> map;\n+\n+    /**\n+     * The raid event associated to this.\n+     */\n+    private IColonyRaidEvent event;\n+\n+    /**\n+     * The colony id.\n+     */\n+    private int colonyId;\n+\n+    /**\n+     * The minecolonies specific creative structure placer.\n+     * @param world the world.\n+     * @param pos the pos it is placed at.\n+     * @param structureName the name of the structure.\n+     * @param settings the placement settings.\n+     * @param fancyPlacement if fancy or complete.\n+     * @param event the raid event.\n+     * @param colonyId the colony id.\n+     */\n+    public CreativeRaiderStructureHandler(final World world, final BlockPos pos, final String structureName, final PlacementSettings settings, final boolean fancyPlacement, final IColonyRaidEvent event, final int colonyId)\n+    {\n+        super(world, pos, structureName, settings, fancyPlacement);\n+        getBluePrint().rotateWithMirror(settings.getRotation(), settings.getMirror(), world);\n+\n+        this.event = event;\n+        this.colonyId = colonyId;\n+        final BlockInfo info = getBluePrint().getBlockInfoAsMap().getOrDefault(getBluePrint().getPrimaryBlockOffset(), null);\n+        if (info.getTileEntityData() != null)\n+        {\n+            final CompoundNBT teData = getBluePrint().getTileEntityData(pos, getBluePrint().getPrimaryBlockOffset());\n+            if (teData != null && teData.contains(TAG_BLUEPRINTDATA))\n+            {\n+                final TileEntity entity = TileEntity.create(info.getTileEntityData());\n+                if (entity instanceof IBlueprintDataProvider)\n+                {\n+                    entity.setPos(pos);\n+                    this.map = ((IBlueprintDataProvider) entity).getWorldTagPosMap();\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void triggerSuccess(final BlockPos pos, final List<ItemStack> list, final boolean placement)\n+    {\n+        super.triggerSuccess(pos, list, placement);\n+        final BlockPos worldPos = getProgressPosInWorld(pos);\n+        if (getWorld().getBlockState(worldPos).getBlock() == Blocks.GOLD_BLOCK)\n+        {\n+            final List<String> tags = map.getOrDefault(worldPos, Collections.emptyList());\n+            for (final String tag: tags)\n+            {\n+                switch (tag)\n+                {\n+                    case \"normal\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTgyMzYyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/entity/mobs/egyptians/IMeleeMummyEntity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozNzo0M1rOGfL_ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozNzo0M1rOGfL_ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NTUzMA==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435355530", "createdAt": "2020-06-04T15:37:43Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/entity/mobs/egyptians/IMeleeMummyEntity.java", "diffHunk": "@@ -1,7 +1,6 @@\n package com.minecolonies.api.entity.mobs.egyptians;\n \n import com.minecolonies.api.entity.mobs.IMeleeMobEntity;\n-import com.minecolonies.api.entity.mobs.pirates.IPirateEntity;\n \n public interface IMeleeMummyEntity extends IEgyptianEntity, IMeleeMobEntity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTgyNjgyOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/IArcherNorsemenEntity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozODoxMFrOGfMBWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozODoxMFrOGfMBWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NTk5NQ==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435355995", "createdAt": "2020-06-04T15:38:10Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/IArcherNorsemenEntity.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.minecolonies.api.entity.mobs.vikings;\n+\n+import com.minecolonies.api.entity.mobs.IArcherMobEntity;\n+\n+public interface IArcherNorsemenEntity extends IVikingEntity, IArcherMobEntity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTgyODIzOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/IMeleeNorsemenEntity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozODoyNFrOGfMCYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozODoyNFrOGfMCYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NjI1Ng==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435356256", "createdAt": "2020-06-04T15:38:24Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/IMeleeNorsemenEntity.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.minecolonies.api.entity.mobs.vikings;\n+\n+import com.minecolonies.api.entity.mobs.IMeleeMobEntity;\n+import com.minecolonies.api.entity.mobs.egyptians.IEgyptianEntity;\n+import com.minecolonies.api.entity.mobs.pirates.IPirateEntity;\n+\n+public interface IMeleeNorsemenEntity extends IVikingEntity, IMeleeMobEntity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTgyOTExOnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/INorsemenChiefEntity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozODozMlrOGfMC6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozODozMlrOGfMC6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NjM5NA==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435356394", "createdAt": "2020-06-04T15:38:32Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/INorsemenChiefEntity.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.minecolonies.api.entity.mobs.vikings;\n+\n+import com.minecolonies.api.entity.mobs.IChiefMobEntity;\n+\n+public interface INorsemenChiefEntity extends IVikingEntity, IChiefMobEntity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTgyOTg1OnYy", "diffSide": "RIGHT", "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/IVikingEntity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozODozOVrOGfMDWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTowNzo0OVrOGfUIHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NjUwNQ==", "bodyText": "javadoc", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435356505", "createdAt": "2020-06-04T15:38:39Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/IVikingEntity.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.minecolonies.api.entity.mobs.vikings;\n+\n+import net.minecraft.command.ICommandSource;\n+import net.minecraft.entity.monster.IMob;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraftforge.common.capabilities.ICapabilitySerializable;\n+\n+public interface IVikingEntity extends IMob, ICommandSource, ICapabilitySerializable<CompoundNBT>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NzEyOA==", "bodyText": "ICommandSource, ICapabilitySerializable whatfor does it use those?", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435357128", "createdAt": "2020-06-04T15:39:16Z", "author": {"login": "someaddons"}, "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/IVikingEntity.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.minecolonies.api.entity.mobs.vikings;\n+\n+import net.minecraft.command.ICommandSource;\n+import net.minecraft.entity.monster.IMob;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraftforge.common.capabilities.ICapabilitySerializable;\n+\n+public interface IVikingEntity extends IMob, ICommandSource, ICapabilitySerializable<CompoundNBT>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NjUwNQ=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4ODc5OA==", "bodyText": "I don't recall, all of our entities main interfaces got those", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435488798", "createdAt": "2020-06-04T19:07:49Z", "author": {"login": "Raycoms"}, "path": "src/api/java/com/minecolonies/api/entity/mobs/vikings/IVikingEntity.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.minecolonies.api.entity.mobs.vikings;\n+\n+import net.minecraft.command.ICommandSource;\n+import net.minecraft.entity.monster.IMob;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraftforge.common.capabilities.ICapabilitySerializable;\n+\n+public interface IVikingEntity extends IMob, ICommandSource, ICapabilitySerializable<CompoundNBT>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1NjUwNQ=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTg0MTMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/apiimp/initializer/ModItemsInitializer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0MDoyOVrOGfMKjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToxMTozOFrOGfUPgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1ODM1MA==", "bodyText": "not sure why you're making the items for them, spawn items arent working for raiders anyways :D", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435358350", "createdAt": "2020-06-04T15:40:29Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModItemsInitializer.java", "diffHunk": "@@ -115,6 +115,10 @@ public static void init(final IForgeRegistry<Item> registry)\n         registry.register(new SpawnEggItem(ModEntities.ARCHERMUMMY, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"mummyarcheregg\"));\n         registry.register(new SpawnEggItem(ModEntities.PHARAO, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"pharaoegg\"));\n \n+        registry.register(new SpawnEggItem(ModEntities.SHIELDMAIDEN, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"shieldmaidenegg\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4ODkwMQ==", "bodyText": "I use them to debug things, I turn off the AI and use those.", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435488901", "createdAt": "2020-06-04T19:08:02Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModItemsInitializer.java", "diffHunk": "@@ -115,6 +115,10 @@ public static void init(final IForgeRegistry<Item> registry)\n         registry.register(new SpawnEggItem(ModEntities.ARCHERMUMMY, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"mummyarcheregg\"));\n         registry.register(new SpawnEggItem(ModEntities.PHARAO, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"pharaoegg\"));\n \n+        registry.register(new SpawnEggItem(ModEntities.SHIELDMAIDEN, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"shieldmaidenegg\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1ODM1MA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5MDY5MQ==", "bodyText": "oh lol :D", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435490691", "createdAt": "2020-06-04T19:11:38Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/apiimp/initializer/ModItemsInitializer.java", "diffHunk": "@@ -115,6 +115,10 @@ public static void init(final IForgeRegistry<Item> registry)\n         registry.register(new SpawnEggItem(ModEntities.ARCHERMUMMY, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"mummyarcheregg\"));\n         registry.register(new SpawnEggItem(ModEntities.PHARAO, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"pharaoegg\"));\n \n+        registry.register(new SpawnEggItem(ModEntities.SHIELDMAIDEN, PRIMARY_COLOR_EG, SECONDARY_COLOR_EG, (new Item.Properties()).group(ModCreativeTabs.MINECOLONIES)).setRegistryName(\"shieldmaidenegg\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1ODM1MA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTg1Nzc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/client/render/mobs/norsemen/RendererArcherNorsemen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0NDowMlrOGfMUog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOTowODoyMlrOGfUJQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MDkzMA==", "bodyText": "what is the difference between those two textures? could maybe use that as name instead of var1 var2", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435360930", "createdAt": "2020-06-04T15:44:02Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/client/render/mobs/norsemen/RendererArcherNorsemen.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.minecolonies.coremod.client.render.mobs.norsemen;\n+\n+import com.minecolonies.api.entity.mobs.vikings.AbstractEntityNorsemen;\n+import com.minecolonies.coremod.client.model.raiders.ModelArcherNorsemen;\n+import net.minecraft.client.renderer.entity.EntityRendererManager;\n+import net.minecraft.entity.MobEntity;\n+import net.minecraft.util.ResourceLocation;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Renderer used for archer amazons.\n+ */\n+public class RendererArcherNorsemen extends AbstractRendererNorsemen\n+{\n+    /**\n+     * Texture of the entity.\n+     */\n+    private static final ResourceLocation TEXTURE1 = new ResourceLocation(\"minecolonies:textures/entity/raiders/norsemen_archer1.png\");\n+    private static final ResourceLocation TEXTURE2 = new ResourceLocation(\"minecolonies:textures/entity/raiders/norsemen_archer2.png\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4OTA5MQ==", "bodyText": "it's just a small variance to make it look more interesting.", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435489091", "createdAt": "2020-06-04T19:08:22Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/client/render/mobs/norsemen/RendererArcherNorsemen.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package com.minecolonies.coremod.client.render.mobs.norsemen;\n+\n+import com.minecolonies.api.entity.mobs.vikings.AbstractEntityNorsemen;\n+import com.minecolonies.coremod.client.model.raiders.ModelArcherNorsemen;\n+import net.minecraft.client.renderer.entity.EntityRendererManager;\n+import net.minecraft.entity.MobEntity;\n+import net.minecraft.util.ResourceLocation;\n+import org.jetbrains.annotations.NotNull;\n+\n+/**\n+ * Renderer used for archer amazons.\n+ */\n+public class RendererArcherNorsemen extends AbstractRendererNorsemen\n+{\n+    /**\n+     * Texture of the entity.\n+     */\n+    private static final ResourceLocation TEXTURE1 = new ResourceLocation(\"minecolonies:textures/entity/raiders/norsemen_archer1.png\");\n+    private static final ResourceLocation TEXTURE2 = new ResourceLocation(\"minecolonies:textures/entity/raiders/norsemen_archer2.png\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2MDkzMA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTk3Mjc0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoxMjowNVrOGfNfFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoxMjowNVrOGfNfFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM3OTk5MA==", "bodyText": "I just had nerfed it down to 1 captain, sure you want to buff it up again? :D", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435379990", "createdAt": "2020-06-04T16:12:05Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "diffHunk": "@@ -1,42 +1,33 @@\n package com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent;\n \n import com.minecolonies.api.util.constant.ColonyConstants;\n-import net.minecraft.entity.EntityType;\n-\n-import static com.minecolonies.api.entity.ModEntities.*;\n \n /**\n  * Enum for ship sizes.\n  */\n public enum ShipSize\n {\n-    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_PIRATE_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 1, PIRATE, PIRATE),\n+    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 2, 2, 0, 0),\n     MEDIUM(ColonyConstants.MEDIUM_HORDE_SIZE,\n-      ColonyConstants.MEDIUM_PIRATE_SHIP,\n+      ColonyConstants.MEDIUM_SHIP,\n       ColonyConstants.MEDIUM_HORDE_MESSAGE_ID,\n-      3,\n-      PIRATE,\n-      ARCHERPIRATE,\n-      CHIEFPIRATE),\n+      4,\n+      1, 1, 1),\n     BIG(ColonyConstants.BIG_HORDE_SIZE,\n-      ColonyConstants.BIG_PIRATE_SHIP,\n+      ColonyConstants.BIG_SHIP,\n       ColonyConstants.BIG_HORDE_MESSAGE_ID,\n       11,\n-      PIRATE,\n-      PIRATE,\n-      ARCHERPIRATE,\n-      ARCHERPIRATE,\n-      CHIEFPIRATE);\n+      2, 2, 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTk3ODQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoxMzozOFrOGfNi0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzo1ODoyNFrOGfRc8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MDk0NA==", "bodyText": "increased from 2 normal to 2 normal 2 archers, think 1 normal 1 archer fits best", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435380944", "createdAt": "2020-06-04T16:13:38Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "diffHunk": "@@ -1,42 +1,33 @@\n package com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent;\n \n import com.minecolonies.api.util.constant.ColonyConstants;\n-import net.minecraft.entity.EntityType;\n-\n-import static com.minecolonies.api.entity.ModEntities.*;\n \n /**\n  * Enum for ship sizes.\n  */\n public enum ShipSize\n {\n-    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_PIRATE_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 1, PIRATE, PIRATE),\n+    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 2, 2, 0, 0),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0MjQxMQ==", "bodyText": "the first 2 is for the number of spawners", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435442411", "createdAt": "2020-06-04T17:54:09Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "diffHunk": "@@ -1,42 +1,33 @@\n package com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent;\n \n import com.minecolonies.api.util.constant.ColonyConstants;\n-import net.minecraft.entity.EntityType;\n-\n-import static com.minecolonies.api.entity.ModEntities.*;\n \n /**\n  * Enum for ship sizes.\n  */\n public enum ShipSize\n {\n-    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_PIRATE_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 1, PIRATE, PIRATE),\n+    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 2, 2, 0, 0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MDk0NA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0NDk3Ng==", "bodyText": "you're right nvm^^", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435444976", "createdAt": "2020-06-04T17:58:24Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "diffHunk": "@@ -1,42 +1,33 @@\n package com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent;\n \n import com.minecolonies.api.util.constant.ColonyConstants;\n-import net.minecraft.entity.EntityType;\n-\n-import static com.minecolonies.api.entity.ModEntities.*;\n \n /**\n  * Enum for ship sizes.\n  */\n public enum ShipSize\n {\n-    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_PIRATE_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 1, PIRATE, PIRATE),\n+    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 2, 2, 0, 0),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MDk0NA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTk4NDY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoxNToxM1rOGfNmqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODowMTo0MVrOGfRkPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MTkyOA==", "bodyText": "medium ship now has 4 spawners?", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435381928", "createdAt": "2020-06-04T16:15:13Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "diffHunk": "@@ -1,42 +1,33 @@\n package com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent;\n \n import com.minecolonies.api.util.constant.ColonyConstants;\n-import net.minecraft.entity.EntityType;\n-\n-import static com.minecolonies.api.entity.ModEntities.*;\n \n /**\n  * Enum for ship sizes.\n  */\n public enum ShipSize\n {\n-    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_PIRATE_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 1, PIRATE, PIRATE),\n+    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 2, 2, 0, 0),\n     MEDIUM(ColonyConstants.MEDIUM_HORDE_SIZE,\n-      ColonyConstants.MEDIUM_PIRATE_SHIP,\n+      ColonyConstants.MEDIUM_SHIP,\n       ColonyConstants.MEDIUM_HORDE_MESSAGE_ID,\n-      3,\n-      PIRATE,\n-      ARCHERPIRATE,\n-      CHIEFPIRATE),\n+      4,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0MjY2OA==", "bodyText": "No, 6, good point", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435442668", "createdAt": "2020-06-04T17:54:34Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "diffHunk": "@@ -1,42 +1,33 @@\n package com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent;\n \n import com.minecolonies.api.util.constant.ColonyConstants;\n-import net.minecraft.entity.EntityType;\n-\n-import static com.minecolonies.api.entity.ModEntities.*;\n \n /**\n  * Enum for ship sizes.\n  */\n public enum ShipSize\n {\n-    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_PIRATE_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 1, PIRATE, PIRATE),\n+    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 2, 2, 0, 0),\n     MEDIUM(ColonyConstants.MEDIUM_HORDE_SIZE,\n-      ColonyConstants.MEDIUM_PIRATE_SHIP,\n+      ColonyConstants.MEDIUM_SHIP,\n       ColonyConstants.MEDIUM_HORDE_MESSAGE_ID,\n-      3,\n-      PIRATE,\n-      ARCHERPIRATE,\n-      CHIEFPIRATE),\n+      4,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MTkyOA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0MjkzNw==", "bodyText": "6? It was 3 originally :D", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435442937", "createdAt": "2020-06-04T17:54:58Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "diffHunk": "@@ -1,42 +1,33 @@\n package com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent;\n \n import com.minecolonies.api.util.constant.ColonyConstants;\n-import net.minecraft.entity.EntityType;\n-\n-import static com.minecolonies.api.entity.ModEntities.*;\n \n /**\n  * Enum for ship sizes.\n  */\n public enum ShipSize\n {\n-    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_PIRATE_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 1, PIRATE, PIRATE),\n+    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 2, 2, 0, 0),\n     MEDIUM(ColonyConstants.MEDIUM_HORDE_SIZE,\n-      ColonyConstants.MEDIUM_PIRATE_SHIP,\n+      ColonyConstants.MEDIUM_SHIP,\n       ColonyConstants.MEDIUM_HORDE_MESSAGE_ID,\n-      3,\n-      PIRATE,\n-      ARCHERPIRATE,\n-      CHIEFPIRATE),\n+      4,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MTkyOA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0Njg0Nw==", "bodyText": "Gotta double check then, Carlsanor switched those things up =D", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435446847", "createdAt": "2020-06-04T18:01:41Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/colonyEvents/raidEvents/pirateEvent/ShipSize.java", "diffHunk": "@@ -1,42 +1,33 @@\n package com.minecolonies.coremod.colony.colonyEvents.raidEvents.pirateEvent;\n \n import com.minecolonies.api.util.constant.ColonyConstants;\n-import net.minecraft.entity.EntityType;\n-\n-import static com.minecolonies.api.entity.ModEntities.*;\n \n /**\n  * Enum for ship sizes.\n  */\n public enum ShipSize\n {\n-    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_PIRATE_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 1, PIRATE, PIRATE),\n+    SMALL(ColonyConstants.SMALL_HORDE_SIZE, ColonyConstants.SMALL_SHIP, ColonyConstants.SMALL_HORDE_MESSAGE_ID, 2, 2, 0, 0),\n     MEDIUM(ColonyConstants.MEDIUM_HORDE_SIZE,\n-      ColonyConstants.MEDIUM_PIRATE_SHIP,\n+      ColonyConstants.MEDIUM_SHIP,\n       ColonyConstants.MEDIUM_HORDE_MESSAGE_ID,\n-      3,\n-      PIRATE,\n-      ARCHERPIRATE,\n-      CHIEFPIRATE),\n+      4,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MTkyOA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTk5MjYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoxNzoxM1rOGfNrkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzo1NzoyMVrOGfRaVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MzE4Nw==", "bodyText": "isnt the anchor structure.getPrimaryBlockOffset()?", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435383187", "createdAt": "2020-06-04T16:17:13Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -87,28 +94,55 @@ public boolean spawnTemporaryStructure(\n \n         final World world = colony.getWorld();\n \n-        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + targetSpawnPoint.down(3);\n-        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset());\n+        int y = 3;\n+\n+        final BlockInfo info = structure.getBlockInfoAsMap().getOrDefault(structure.getPrimaryBlockOffset(), null);\n+        if (info.getTileEntityData() != null)\n+        {\n+            final CompoundNBT teData = structure.getTileEntityData(targetSpawnPoint, structure.getPrimaryBlockOffset());\n+            if (teData != null && teData.contains(TAG_BLUEPRINTDATA))\n+            {\n+                final TileEntity entity = TileEntity.create(info.getTileEntityData());\n+                if (entity instanceof IBlueprintDataProvider)\n+                {\n+                    for (final Map.Entry<BlockPos, List<String>> entry : ((IBlueprintDataProvider) entity).getPositionedTags().entrySet())\n+                    {\n+                        if (entry.getValue().contains(\"groundlevel\"))\n+                        {\n+                            y = entry.getKey().getY();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        final BlockPos spawnPos = targetSpawnPoint.add(0, -y ,0);\n+\n+        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset()).add(0, -y, 0);\n+        final BlockPos cornerPos = new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1);\n+\n+        final BlockPos anchor = new BlockPos(zeroPos.getX() + structure.getSizeX()/2, zeroPos.getY(), zeroPos.getZ() + structure.getSizeZ()/2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0MzA4MQ==", "bodyText": "But we don't have the structure there yet. This is the scanned area in the world anchor.", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435443081", "createdAt": "2020-06-04T17:55:10Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -87,28 +94,55 @@ public boolean spawnTemporaryStructure(\n \n         final World world = colony.getWorld();\n \n-        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + targetSpawnPoint.down(3);\n-        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset());\n+        int y = 3;\n+\n+        final BlockInfo info = structure.getBlockInfoAsMap().getOrDefault(structure.getPrimaryBlockOffset(), null);\n+        if (info.getTileEntityData() != null)\n+        {\n+            final CompoundNBT teData = structure.getTileEntityData(targetSpawnPoint, structure.getPrimaryBlockOffset());\n+            if (teData != null && teData.contains(TAG_BLUEPRINTDATA))\n+            {\n+                final TileEntity entity = TileEntity.create(info.getTileEntityData());\n+                if (entity instanceof IBlueprintDataProvider)\n+                {\n+                    for (final Map.Entry<BlockPos, List<String>> entry : ((IBlueprintDataProvider) entity).getPositionedTags().entrySet())\n+                    {\n+                        if (entry.getValue().contains(\"groundlevel\"))\n+                        {\n+                            y = entry.getKey().getY();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        final BlockPos spawnPos = targetSpawnPoint.add(0, -y ,0);\n+\n+        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset()).add(0, -y, 0);\n+        final BlockPos cornerPos = new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1);\n+\n+        final BlockPos anchor = new BlockPos(zeroPos.getX() + structure.getSizeX()/2, zeroPos.getY(), zeroPos.getZ() + structure.getSizeZ()/2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MzE4Nw=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0NDMxMQ==", "bodyText": "ah I see", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435444311", "createdAt": "2020-06-04T17:57:21Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -87,28 +94,55 @@ public boolean spawnTemporaryStructure(\n \n         final World world = colony.getWorld();\n \n-        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + targetSpawnPoint.down(3);\n-        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset());\n+        int y = 3;\n+\n+        final BlockInfo info = structure.getBlockInfoAsMap().getOrDefault(structure.getPrimaryBlockOffset(), null);\n+        if (info.getTileEntityData() != null)\n+        {\n+            final CompoundNBT teData = structure.getTileEntityData(targetSpawnPoint, structure.getPrimaryBlockOffset());\n+            if (teData != null && teData.contains(TAG_BLUEPRINTDATA))\n+            {\n+                final TileEntity entity = TileEntity.create(info.getTileEntityData());\n+                if (entity instanceof IBlueprintDataProvider)\n+                {\n+                    for (final Map.Entry<BlockPos, List<String>> entry : ((IBlueprintDataProvider) entity).getPositionedTags().entrySet())\n+                    {\n+                        if (entry.getValue().contains(\"groundlevel\"))\n+                        {\n+                            y = entry.getKey().getY();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        final BlockPos spawnPos = targetSpawnPoint.add(0, -y ,0);\n+\n+        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset()).add(0, -y, 0);\n+        final BlockPos cornerPos = new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1);\n+\n+        final BlockPos anchor = new BlockPos(zeroPos.getX() + structure.getSizeX()/2, zeroPos.getY(), zeroPos.getZ() + structure.getSizeZ()/2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MzE4Nw=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjAxNzc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoyMzozOFrOGfN7rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzo1Njo1MlrOGfRZYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4NzMwOA==", "bodyText": "how come we're saving now the schematic's middle position as spawnpoint instead of the spawnpoint?", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435387308", "createdAt": "2020-06-04T16:23:38Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -87,28 +94,55 @@ public boolean spawnTemporaryStructure(\n \n         final World world = colony.getWorld();\n \n-        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + targetSpawnPoint.down(3);\n-        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset());\n+        int y = 3;\n+\n+        final BlockInfo info = structure.getBlockInfoAsMap().getOrDefault(structure.getPrimaryBlockOffset(), null);\n+        if (info.getTileEntityData() != null)\n+        {\n+            final CompoundNBT teData = structure.getTileEntityData(targetSpawnPoint, structure.getPrimaryBlockOffset());\n+            if (teData != null && teData.contains(TAG_BLUEPRINTDATA))\n+            {\n+                final TileEntity entity = TileEntity.create(info.getTileEntityData());\n+                if (entity instanceof IBlueprintDataProvider)\n+                {\n+                    for (final Map.Entry<BlockPos, List<String>> entry : ((IBlueprintDataProvider) entity).getPositionedTags().entrySet())\n+                    {\n+                        if (entry.getValue().contains(\"groundlevel\"))\n+                        {\n+                            y = entry.getKey().getY();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        final BlockPos spawnPos = targetSpawnPoint.add(0, -y ,0);\n+\n+        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset()).add(0, -y, 0);\n+        final BlockPos cornerPos = new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1);\n+\n+        final BlockPos anchor = new BlockPos(zeroPos.getX() + structure.getSizeX()/2, zeroPos.getY(), zeroPos.getZ() + structure.getSizeZ()/2);\n+\n+        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + anchor;\n \n         if (!ItemScanTool.saveStructureOnServer(world,\n           zeroPos,\n-          new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1),\n+          cornerPos,\n           backupPath,\n           false))\n         {\n             // No structure spawn if we didnt successfully save the surroundings before\n             Log.getLogger().info(\"Failed to save schematics for event\");\n             return false;\n         }\n+        backupSchematics.put(anchor, eventID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0MzI2Ng==", "bodyText": "because that is what is used by the scan tool code.", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435443266", "createdAt": "2020-06-04T17:55:29Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -87,28 +94,55 @@ public boolean spawnTemporaryStructure(\n \n         final World world = colony.getWorld();\n \n-        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + targetSpawnPoint.down(3);\n-        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset());\n+        int y = 3;\n+\n+        final BlockInfo info = structure.getBlockInfoAsMap().getOrDefault(structure.getPrimaryBlockOffset(), null);\n+        if (info.getTileEntityData() != null)\n+        {\n+            final CompoundNBT teData = structure.getTileEntityData(targetSpawnPoint, structure.getPrimaryBlockOffset());\n+            if (teData != null && teData.contains(TAG_BLUEPRINTDATA))\n+            {\n+                final TileEntity entity = TileEntity.create(info.getTileEntityData());\n+                if (entity instanceof IBlueprintDataProvider)\n+                {\n+                    for (final Map.Entry<BlockPos, List<String>> entry : ((IBlueprintDataProvider) entity).getPositionedTags().entrySet())\n+                    {\n+                        if (entry.getValue().contains(\"groundlevel\"))\n+                        {\n+                            y = entry.getKey().getY();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        final BlockPos spawnPos = targetSpawnPoint.add(0, -y ,0);\n+\n+        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset()).add(0, -y, 0);\n+        final BlockPos cornerPos = new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1);\n+\n+        final BlockPos anchor = new BlockPos(zeroPos.getX() + structure.getSizeX()/2, zeroPos.getY(), zeroPos.getZ() + structure.getSizeZ()/2);\n+\n+        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + anchor;\n \n         if (!ItemScanTool.saveStructureOnServer(world,\n           zeroPos,\n-          new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1),\n+          cornerPos,\n           backupPath,\n           false))\n         {\n             // No structure spawn if we didnt successfully save the surroundings before\n             Log.getLogger().info(\"Failed to save schematics for event\");\n             return false;\n         }\n+        backupSchematics.put(anchor, eventID);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4NzMwOA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0NDA2NA==", "bodyText": "ok", "url": "https://github.com/ldtteam/minecolonies/pull/5153#discussion_r435444064", "createdAt": "2020-06-04T17:56:52Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/colony/managers/EventStructureManager.java", "diffHunk": "@@ -87,28 +94,55 @@ public boolean spawnTemporaryStructure(\n \n         final World world = colony.getWorld();\n \n-        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + targetSpawnPoint.down(3);\n-        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset());\n+        int y = 3;\n+\n+        final BlockInfo info = structure.getBlockInfoAsMap().getOrDefault(structure.getPrimaryBlockOffset(), null);\n+        if (info.getTileEntityData() != null)\n+        {\n+            final CompoundNBT teData = structure.getTileEntityData(targetSpawnPoint, structure.getPrimaryBlockOffset());\n+            if (teData != null && teData.contains(TAG_BLUEPRINTDATA))\n+            {\n+                final TileEntity entity = TileEntity.create(info.getTileEntityData());\n+                if (entity instanceof IBlueprintDataProvider)\n+                {\n+                    for (final Map.Entry<BlockPos, List<String>> entry : ((IBlueprintDataProvider) entity).getPositionedTags().entrySet())\n+                    {\n+                        if (entry.getValue().contains(\"groundlevel\"))\n+                        {\n+                            y = entry.getKey().getY();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+\n+        final BlockPos spawnPos = targetSpawnPoint.add(0, -y ,0);\n+\n+        final BlockPos zeroPos = targetSpawnPoint.subtract(structure.getPrimaryBlockOffset()).add(0, -y, 0);\n+        final BlockPos cornerPos = new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1);\n+\n+        final BlockPos anchor = new BlockPos(zeroPos.getX() + structure.getSizeX()/2, zeroPos.getY(), zeroPos.getZ() + structure.getSizeZ()/2);\n+\n+        final String backupPath = Structures.SCHEMATICS_PREFIX + STRUCTURE_BACKUP_FOLDER + colony.getID() + colony.getDimension() + anchor;\n \n         if (!ItemScanTool.saveStructureOnServer(world,\n           zeroPos,\n-          new BlockPos(zeroPos.getX() + structure.getSizeX() - 1, zeroPos.getY() + structure.getSizeY(), zeroPos.getZ() + structure.getSizeZ() - 1),\n+          cornerPos,\n           backupPath,\n           false))\n         {\n             // No structure spawn if we didnt successfully save the surroundings before\n             Log.getLogger().info(\"Failed to save schematics for event\");\n             return false;\n         }\n+        backupSchematics.put(anchor, eventID);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4NzMwOA=="}, "originalCommit": {"oid": "450a959a0093b5c372ef72f7ad73579b16a1c6d6"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3097, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}