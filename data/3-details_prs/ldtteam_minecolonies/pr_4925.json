{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTU2Njcy", "number": 4925, "title": "Feature/stripped lumberjack", "bodyText": "Feature Suggestion\nThe new (awesome) Asian building style requires a fair bit of stripped wood.\nStripped variants of woods cannot be crafted, but must be made by right-clicking woods/logs with an axe. Which becomes old really quickly when the buildings require hundreds of them.\nIt makes sense for the lumberjack to be able to craft stripped versions of logs.\nDraft implementation\n\nLumberjack turns vanilla wood/log to stripped versions if a request for this exists in the request pipeline.\nThe lumberjack hut's GUI shows the list of recipes (i.e. the stripped versions), but you can't remove them and you also can't teach new recipes.\n\nOpen considerations\n\nTurning wood into its stripped version does not cost anything (but the original wood) currently. This is because I have no idea how to damage the axe properly (I looked at AbstractEntityAllInteract.java:234, and I don't understand how that would do anything). We could just make it cost 2 logs per stripped version :-P\nIt would be preferable if this was gated behind a university research. I have not found a way to update the building's recipe list onResearchCompleted (this event doesn't seem to exist). Therefore, one would have to reload the chunk/restart the server after researching to enable the feature. Which is worse than not gating the feature at all imho. How about linking this to the building level instead? There's an onUpdate-event for that.\n\nPlease review (thoroughly! I touched a lot of code in there with which I have no experience yet). Thanks :-)", "createdAt": "2020-05-07T22:44:23Z", "url": "https://github.com/ldtteam/minecolonies/pull/4925", "merged": true, "mergeCommit": {"oid": "fd7909edb79dfe5346dd454f5302ed1bb4543821"}, "closed": true, "closedAt": "2020-05-12T13:06:06Z", "author": {"login": "JiaYow"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcetwu3AH2gAyNDE0OTU2NjcyOjU3NmRkMTA3YmFjNDcwZjljNzgzMjFlYWRhYTE3NmYzMmIwMzU0NTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgjlXcgH2gAyNDE0OTU2NjcyOmE0MGY4NzcwZDA2MzMxMzRlZDdhMDI4MTQxZTk1NTY1MDc1NjkyODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "576dd107bac470f9c78321eadaa176f32b035457", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/576dd107bac470f9c78321eadaa176f32b035457", "committedDate": "2020-05-06T19:22:46Z", "message": "Initial attempt at adding crafting functionality to the lumberjack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "120fb6afef19495522bcf0326d2d8ac3047dbdf3", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/120fb6afef19495522bcf0326d2d8ac3047dbdf3", "committedDate": "2020-05-07T00:46:53Z", "message": "Added AI logic (needs doublecheck though, not production-ready yet) and recipe stubs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7af13e995421eac5c58cacde42fc97d146290842", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/7af13e995421eac5c58cacde42fc97d146290842", "committedDate": "2020-05-07T19:43:05Z", "message": "The lumberjack now fully and correctly decides between chopping wood and crafting stripped reciped :-D"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30623c9488b16e92d012213e4b1343348a2ee678", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/30623c9488b16e92d012213e4b1343348a2ee678", "committedDate": "2020-05-07T21:14:08Z", "message": "GUI will now prevent people from messing with recipes from intrinsic crafters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/97de96332eefa49c3d9d535d1ee8a897de0c41fe", "committedDate": "2020-05-07T22:23:44Z", "message": "Reordered the decision priority to make more sense, and refactored hardcoded values to the proper overridden method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODkwMTIy", "url": "https://github.com/ldtteam/minecolonies/pull/4925#pullrequestreview-407890122", "createdAt": "2020-05-07T22:52:09Z", "commit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo1MjowOVrOGSTA7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzowNjo0N1rOGSTThQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzOTA4NQ==", "bodyText": "While i agree the lumberjack shouldn't have recipes since it has normal ones, we probably shouldn't call this method hasReadOnlyRecipes and make it not show the recipes window, instead we should rename this to something more like allowsRecipeModification or something similar, in the future we may have huts that have both readOnlyRecipes and the ability to add recipes from the player", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r421839085", "createdAt": "2020-05-07T22:52:09Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/AbstractWindowWorkerBuilding.java", "diffHunk": "@@ -96,6 +97,14 @@\n \n     private String stateString = state ? DP_MODE_STATIC : DP_MODE_AUTOMATIC;\n \n+    /**\n+     * Defines whether or not the recipes of this buildings are read-only.\n+     * Crafters with intrinsic recipes for example would override this to return true.\n+     * @return Boolean stating if the teach-recipes button should be shown and Remove should be available.\n+     */\n+    protected boolean hasReadOnlyRecipes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzOTIyMw==", "bodyText": "javadoc here is off", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r421839223", "createdAt": "2020-05-07T22:52:39Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowListRecipes.java", "diffHunk": "@@ -81,6 +82,23 @@ public WindowListRecipes(final IColonyView c, final BlockPos buildingId)\n         updateRecipes();\n     }\n \n+    /**\n+     * Constructor for the window when the player wants to assign a worker for a certain home building.\n+     * Can additionally disable remove-buttons", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzOTYxNg==", "bodyText": "can we make this per recipe? So that in the future we can have both readOnly and editable ones?", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r421839616", "createdAt": "2020-05-07T22:53:48Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowListRecipes.java", "diffHunk": "@@ -126,6 +144,13 @@ public void updateElement(final int index, @NotNull final Pane rowPane)\n                 final ItemIcon icon = rowPane.findPaneOfTypeByID(OUTPUT_ICON, ItemIcon.class);\n                 icon.setItem(recipe.getPrimaryOutput());\n \n+                if (!isRemovalPossible) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MDY5Ng==", "bodyText": "While the name is okay, i can already imagine myself and others getting confused by this name when searching for the class(es) that does this stuff\nCan we rename the Intrinsic in these classes to Predefined or something similar?", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r421840696", "createdAt": "2020-05-07T22:57:03Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractFilterableListIntrinsicCrafter.java", "diffHunk": "@@ -0,0 +1,174 @@\n+package com.minecolonies.coremod.colony.buildings;\n+\n+import com.google.common.collect.ImmutableCollection;\n+import com.google.common.collect.ImmutableList;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyView;\n+import com.minecolonies.api.colony.requestsystem.request.IRequest;\n+import com.minecolonies.api.colony.requestsystem.requestable.crafting.PublicCrafting;\n+import com.minecolonies.api.colony.requestsystem.resolver.IRequestResolver;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.crafting.IRecipeStorage;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.inventory.container.ContainerCrafting;\n+import com.minecolonies.api.util.Log;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.jobs.AbstractJobCrafter;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PrivateWorkerCraftingProductionResolver;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PrivateWorkerCraftingRequestResolver;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PublicWorkerCraftingProductionResolver;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PublicWorkerCraftingRequestResolver;\n+import io.netty.buffer.Unpooled;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.inventory.container.Container;\n+import net.minecraft.inventory.container.INamedContainerProvider;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.nbt.CompoundNBT;\n+import net.minecraft.nbt.ListNBT;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraft.util.Tuple;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.StringTextComponent;\n+import net.minecraftforge.common.util.Constants;\n+import net.minecraftforge.fml.network.NetworkHooks;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.*;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import static com.minecolonies.api.util.constant.BuildingConstants.CONST_DEFAULT_MAX_BUILDING_LEVEL;\n+import static com.minecolonies.api.util.constant.NbtTagConstants.TAG_ID;\n+\n+/**\n+ * Abstract class for all buildings which require a filterable list of allowed items.\n+ */\n+public abstract class AbstractFilterableListIntrinsicCrafter extends AbstractFilterableListBuilding", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MjA5NA==", "bodyText": "maybe just use \"they\" here in the javadoc, or \"it\" lol", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r421842094", "createdAt": "2020-05-07T23:01:16Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -209,6 +215,47 @@ public Class getExpectedBuildingClass()\n         return BuildingLumberjack.class;\n     }\n \n+    /**\n+     * The lumberjack is a special worker.\n+     * In his/her decision state, he/she will try to add lumberjack cycles\n+     * If there's nothing left to craft, he/she will proceed with woodworking", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0MzE0MQ==", "bodyText": "This is missing @OverRide", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r421843141", "createdAt": "2020-05-07T23:04:34Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -209,6 +215,47 @@ public Class getExpectedBuildingClass()\n         return BuildingLumberjack.class;\n     }\n \n+    /**\n+     * The lumberjack is a special worker.\n+     * In his/her decision state, he/she will try to add lumberjack cycles\n+     * If there's nothing left to craft, he/she will proceed with woodworking\n+     * @return the next state to go to.\n+     */\n+    protected IAIState decide()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0Mzg0NQ==", "bodyText": "can you please make sure this isn't being run every tick or whatever now?", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r421843845", "createdAt": "2020-05-07T23:06:47Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -314,10 +361,6 @@ private IAIState findTree()\n                                  copy.getOrDefault(SAPLINGS_LIST, Collections.emptyList()),\n                                  worker.getCitizenColonyHandler().getColony());\n             }\n-\n-            // Delay between area searches\n-            setDelay(100);\n-            return getState();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODk3NTEx", "url": "https://github.com/ldtteam/minecolonies/pull/4925#pullrequestreview-407897511", "createdAt": "2020-05-07T23:12:16Z", "commit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzoxMjoxNlrOGSTalg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMzoxMjoxNlrOGSTalg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg0NTY1NA==", "bodyText": "I haven't looked at the Log code and etc but i would assume there's some way, either in the block or otherwise, to get the stripped version of a log from a log. Doing this would add better support for modded logs", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r421845654", "createdAt": "2020-05-07T23:12:16Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/workerbuildings/BuildingLumberjack.java", "diffHunk": "@@ -95,6 +105,32 @@ public BuildingLumberjack(final IColony c, final BlockPos l)\n         super(c, l);\n \n         keepX.put(itemStack -> ItemStackUtils.hasToolLevel(itemStack, ToolType.AXE, TOOL_LEVEL_WOOD_OR_GOLD, getMaxToolLevel()), new Tuple<>(1, true));\n+\n+        if (recipes.isEmpty()) {\n+            addStrippedWoodRecipe(Items.OAK_LOG, Items.STRIPPED_OAK_LOG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97de96332eefa49c3d9d535d1ee8a897de0c41fe"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8176249365026b2f99ee5cf9f241282cefca5ac", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/e8176249365026b2f99ee5cf9f241282cefca5ac", "committedDate": "2020-05-08T16:19:57Z", "message": "Merge branch 'upstream/version/1.15' into feature/stripped-lumberjack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ba6f114e8ad2b3297d8688d81d2f7de05006be5", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/4ba6f114e8ad2b3297d8688d81d2f7de05006be5", "committedDate": "2020-05-08T16:37:20Z", "message": "Ran a round of code-formatting on every file touched in this branch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44f106f7b215d494f098b6c5c9390df1566cb120", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/44f106f7b215d494f098b6c5c9390df1566cb120", "committedDate": "2020-05-08T16:57:32Z", "message": "Fixed manual linebreaks in comments. Auto-Code-Style messed up this setting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d230c917e9b9ed3dbc80ccca9345ce6dd11beab7", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/d230c917e9b9ed3dbc80ccca9345ce6dd11beab7", "committedDate": "2020-05-08T18:43:15Z", "message": "Renamed readOnlyRecipe-stuff to \"isRecipeAlterationAllowed()\" and also now hides the recipe list button if modifications are not allowed and the list is empty."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/7541035a65bf06d75eb1e4e5eef57014cda0830a", "committedDate": "2020-05-08T20:43:06Z", "message": "Couple of stylechanges, but mainly made the AbstractFilterableListCrafter a full crafter, while placing the restrictions into the lumberjack instead. More futureproof this way."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjI3NTI4", "url": "https://github.com/ldtteam/minecolonies/pull/4925#pullrequestreview-408627528", "createdAt": "2020-05-09T08:30:32Z", "commit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODozMDozMlrOGS5fTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODozMDozMlrOGS5fTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2OTQ1NQ==", "bodyText": "bracket format is still an issue", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r422469455", "createdAt": "2020-05-09T08:30:32Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/AbstractWindowWorkerBuilding.java", "diffHunk": "@@ -148,7 +162,14 @@ private void changeDPState()\n \n     private void recipeListClicked()\n     {\n-        @NotNull final WindowListRecipes window = new WindowListRecipes(building.getColony(), building.getPosition());\n+        if (!isRecipeAlterationAllowed() && building.getRecipes().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjI3NjQ4", "url": "https://github.com/ldtteam/minecolonies/pull/4925#pullrequestreview-408627648", "createdAt": "2020-05-09T08:32:08Z", "commit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODozMjowOFrOGS5f0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODozMjowOFrOGS5f0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2OTU4NQ==", "bodyText": "overriden method doesn't need the javadoc then. (javadoc only at origin method)", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r422469585", "createdAt": "2020-05-09T08:32:08Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/client/gui/WindowHutLumberjack.java", "diffHunk": "@@ -77,12 +77,24 @@ public WindowHutLumberjack(final BuildingLumberjack.View building)\n         registerButton(BUTTON_TOGGLE_RESTRICTION, this::toggleRestriction);\n         registerButton(BUTTON_GIVE_TOOL, this::giveTool);\n \n-\n         setupReplantButton(findPaneOfTypeByID(BUTTON_TOGGLE_REPLANT, Button.class));\n         setupRestrictionButton(findPaneOfTypeByID(BUTTON_TOGGLE_RESTRICTION, Button.class));\n         setupGiveToolButton(findPaneOfTypeByID(BUTTON_GIVE_TOOL, Button.class));\n+    }\n \n-\n+    /**\n+     * Defines whether or not players can change the building's recipe list.\n+     * This is the case for most current buildings, but some buildings might only work on built-in recipes.\n+     * It's recommended to turn this off for buildings that make no use of player-thaught recipes, to avoid confusion for new players.\n+     * Turning this on will hide the \"Teach recipes\" button, hide the remove-buttons in the recipe list,\n+     * and also hide the recipe list altogether if no recipes are present.\n+     *\n+     * @return true if player is allowed to alter  recipes, false if not\n+     */\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjI3OTgy", "url": "https://github.com/ldtteam/minecolonies/pull/4925#pullrequestreview-408627982", "createdAt": "2020-05-09T08:35:59Z", "commit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODozNTo1OVrOGS5hNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODozNTo1OVrOGS5hNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ2OTk0MA==", "bodyText": "I guess we don't need those methods here (canCraft, canRecipeBeAdded, openCraftingcontainer)", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r422469940", "createdAt": "2020-05-09T08:35:59Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/colony/buildings/AbstractFilterableListCrafter.java", "diffHunk": "@@ -0,0 +1,214 @@\n+package com.minecolonies.coremod.colony.buildings;\n+\n+import com.google.common.collect.ImmutableCollection;\n+import com.google.common.collect.ImmutableList;\n+import com.minecolonies.api.colony.ICitizenData;\n+import com.minecolonies.api.colony.IColony;\n+import com.minecolonies.api.colony.IColonyView;\n+import com.minecolonies.api.colony.requestsystem.request.IRequest;\n+import com.minecolonies.api.colony.requestsystem.requestable.crafting.PublicCrafting;\n+import com.minecolonies.api.colony.requestsystem.resolver.IRequestResolver;\n+import com.minecolonies.api.colony.requestsystem.token.IToken;\n+import com.minecolonies.api.crafting.IRecipeStorage;\n+import com.minecolonies.api.crafting.ItemStorage;\n+import com.minecolonies.api.inventory.container.ContainerCrafting;\n+import com.minecolonies.api.util.constant.TypeConstants;\n+import com.minecolonies.coremod.colony.jobs.AbstractJobCrafter;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PrivateWorkerCraftingProductionResolver;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PrivateWorkerCraftingRequestResolver;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PublicWorkerCraftingProductionResolver;\n+import com.minecolonies.coremod.colony.requestsystem.resolvers.PublicWorkerCraftingRequestResolver;\n+import io.netty.buffer.Unpooled;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.entity.player.ServerPlayerEntity;\n+import net.minecraft.inventory.container.Container;\n+import net.minecraft.inventory.container.INamedContainerProvider;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.network.PacketBuffer;\n+import net.minecraft.util.Tuple;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.text.ITextComponent;\n+import net.minecraft.util.text.StringTextComponent;\n+import net.minecraftforge.fml.network.NetworkHooks;\n+import org.jetbrains.annotations.NotNull;\n+\n+import java.util.*;\n+import java.util.function.Predicate;\n+import java.util.stream.Collectors;\n+\n+import static com.minecolonies.api.util.constant.BuildingConstants.CONST_DEFAULT_MAX_BUILDING_LEVEL;\n+\n+/**\n+ * Abstract class for all buildings which require a filterable list of allowed items AND can also craft stuff.\n+ *\n+ * TODO: The crafter logic is just a copypaste from {@link AbstractBuildingCrafter} to avoid diamond inheritance.\n+ * This should be fixed at some point.\n+ */\n+public abstract class AbstractFilterableListCrafter extends AbstractFilterableListBuilding\n+{\n+    /**\n+     * Extra amount of recipes the crafters can learn.\n+     */\n+    private static final int EXTRA_RECIPE_MULTIPLIER = 10;\n+\n+    /**\n+     * The constructor of the building.\n+     *\n+     * @param c the colony\n+     * @param l the position\n+     */\n+    protected AbstractFilterableListCrafter(@NotNull final IColony c, final BlockPos l)\n+    {\n+        super(c, l);\n+    }\n+\n+    @Override\n+    public int getMaxBuildingLevel()\n+    {\n+        return CONST_DEFAULT_MAX_BUILDING_LEVEL;\n+    }\n+\n+    @Override\n+    public boolean canBeGathered()\n+    {\n+        return super.canBeGathered() &&\n+                 this.getAssignedCitizen().stream()\n+                   .map(c -> c.getJob(AbstractJobCrafter.class))\n+                   .filter(Objects::nonNull)\n+                   .allMatch(AbstractJobCrafter::hasTask);\n+    }\n+\n+    @Override\n+    public ImmutableCollection<IRequestResolver<?>> createResolvers()\n+    {\n+        final Collection<IRequestResolver<?>> supers =\n+          super.createResolvers().stream()\n+            .filter(r -> !(r instanceof PrivateWorkerCraftingProductionResolver || r instanceof PrivateWorkerCraftingRequestResolver)).collect(\n+            Collectors.toList());\n+        final ImmutableList.Builder<IRequestResolver<?>> builder = ImmutableList.builder();\n+\n+        builder.addAll(supers);\n+        builder.add(new PublicWorkerCraftingRequestResolver(getRequester().getLocation(),\n+          getColony().getRequestManager().getFactoryController().getNewInstance(TypeConstants.ITOKEN)));\n+        builder.add(new PublicWorkerCraftingProductionResolver(getRequester().getLocation(),\n+          getColony().getRequestManager().getFactoryController().getNewInstance(TypeConstants.ITOKEN)));\n+\n+        return builder.build();\n+    }\n+\n+    @Override\n+    public Map<Predicate<ItemStack>, Tuple<Integer, Boolean>> getRequiredItemsAndAmount()\n+    {\n+        final Map<ItemStorage, Tuple<Integer, Boolean>> recipeOutputs = new HashMap<>();\n+        for (final ICitizenData citizen : getAssignedCitizen())\n+        {\n+            if (citizen.getJob() instanceof AbstractJobCrafter)\n+            {\n+                final List<IToken<?>> assignedTasks = citizen.getJob(AbstractJobCrafter.class).getAssignedTasks();\n+                for (final IToken taskToken : assignedTasks)\n+                {\n+                    final IRequest<? extends PublicCrafting> request = (IRequest<? extends PublicCrafting>) colony.getRequestManager().getRequestForToken(taskToken);\n+                    final IRecipeStorage recipeStorage = getFirstRecipe(request.getRequest().getStack());\n+                    if (recipeStorage != null)\n+                    {\n+                        for (final ItemStorage itemStorage : recipeStorage.getCleanedInput())\n+                        {\n+                            int amount = itemStorage.getAmount();\n+                            if (recipeOutputs.containsKey(itemStorage))\n+                            {\n+                                amount = recipeOutputs.get(itemStorage).getA() + itemStorage.getAmount();\n+                            }\n+                            recipeOutputs.put(itemStorage, new Tuple<>(amount, false));\n+                        }\n+\n+                        final ItemStorage output = new ItemStorage(recipeStorage.getPrimaryOutput());\n+                        if (recipeOutputs.containsKey(output))\n+                        {\n+                            output.setAmount(recipeOutputs.get(output).getA() + output.getAmount());\n+                        }\n+                        recipeOutputs.put(output, new Tuple<>(output.getAmount(), false));\n+                    }\n+                }\n+            }\n+        }\n+\n+        final Map<Predicate<ItemStack>, Tuple<Integer, Boolean>> toKeep = new HashMap<>(keepX);\n+        toKeep.putAll(recipeOutputs.entrySet().stream().collect(Collectors.toMap(key -> (stack -> stack.isItemEqual(key.getKey().getItemStack())), Map.Entry::getValue)));\n+        return toKeep;\n+    }\n+\n+    @Override\n+    public boolean canCraftComplexRecipes()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a"}, "originalPosition": 142}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjI4MTk5", "url": "https://github.com/ldtteam/minecolonies/pull/4925#pullrequestreview-408628199", "createdAt": "2020-05-09T08:38:19Z", "commit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODozODoxOVrOGS5iCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODozODoxOVrOGS5iCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MDE1NQ==", "bodyText": "comment on previous line please (also for line 314)", "url": "https://github.com/ldtteam/minecolonies/pull/4925#discussion_r422470155", "createdAt": "2020-05-09T08:38:19Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/lumberjack/EntityAIWorkLumberjack.java", "diffHunk": "@@ -243,7 +295,7 @@ private IAIState prepareForWoodcutting()\n     {\n         if (checkForToolOrWeapon(ToolType.AXE))\n         {\n-            return getState();\n+            return START_WORKING; // Reset everything, maybe there are new crafting requests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7541035a65bf06d75eb1e4e5eef57014cda0830a"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d82e6d20633e6180ba69cd2bcdc051d47f5260f", "author": {"user": {"login": "Raycoms", "name": null}}, "url": "https://github.com/ldtteam/minecolonies/commit/2d82e6d20633e6180ba69cd2bcdc051d47f5260f", "committedDate": "2020-05-09T08:39:32Z", "message": "Merge branch 'version/1.15' into feature/stripped-lumberjack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c49066c41aef1aafb00cb706fb62e35b86fc6b5b", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/c49066c41aef1aafb00cb706fb62e35b86fc6b5b", "committedDate": "2020-05-09T09:19:06Z", "message": "Fixed a bracket formatting and removed/@inheritDoc'ed all JDoc from @overridden methods touched in this branch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3658aba681f346ec0e695db61b7d0ddf866300ca", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/3658aba681f346ec0e695db61b7d0ddf866300ca", "committedDate": "2020-05-09T09:20:06Z", "message": "Merge branch 'feature/stripped-lumberjack' of github.com:JiaYow/minecolonies into feature/stripped-lumberjack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1bab0eb2c5621efbb9cf868482802fd4d835b47", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/f1bab0eb2c5621efbb9cf868482802fd4d835b47", "committedDate": "2020-05-09T10:53:46Z", "message": "Moved isRecipeAlterationAllowed to building instead of window. Also stylefixes. Again."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b53f2ae3cb5019b6dc15314b36c458fd1bff0d2", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/4b53f2ae3cb5019b6dc15314b36c458fd1bff0d2", "committedDate": "2020-05-09T12:37:26Z", "message": "Fixed bug where the LJ's gatherings would never get collected by the dman"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78e626fddec0aa19ec9bb2d66c84ec4e6614b97f", "author": {"user": {"login": "JiaYow", "name": "JiaYow"}}, "url": "https://github.com/ldtteam/minecolonies/commit/78e626fddec0aa19ec9bb2d66c84ec4e6614b97f", "committedDate": "2020-05-09T20:28:18Z", "message": "Merge branch 'upstream/version/1.15' into feature/stripped-lumberjack"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4Njg5MTc3", "url": "https://github.com/ldtteam/minecolonies/pull/4925#pullrequestreview-408689177", "createdAt": "2020-05-09T22:35:40Z", "commit": {"oid": "78e626fddec0aa19ec9bb2d66c84ec4e6614b97f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5OTk2NjQz", "url": "https://github.com/ldtteam/minecolonies/pull/4925#pullrequestreview-409996643", "createdAt": "2020-05-12T12:38:21Z", "commit": {"oid": "78e626fddec0aa19ec9bb2d66c84ec4e6614b97f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a40f8770d0633134ed7a028141e9556507569288", "author": {"user": {"login": "OrionDevelopment", "name": "Marc Hermans"}}, "url": "https://github.com/ldtteam/minecolonies/commit/a40f8770d0633134ed7a028141e9556507569288", "committedDate": "2020-05-12T12:39:09Z", "message": "Merge branch 'version/1.15' into feature/stripped-lumberjack"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2103, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}