{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MTAwNzM0", "number": 5928, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzozMjoyOVrOEt_x8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzozMjoyOVrOEt_x8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjY2MzU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/CustomArrowEntity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzozMjoyOVrOHiH_rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzozMjoyOVrOHiH_rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU0NDYyMQ==", "bodyText": "maybe a constant?", "url": "https://github.com/ldtteam/minecolonies/pull/5928#discussion_r505544621", "createdAt": "2020-10-15T13:32:29Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/CustomArrowEntity.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package com.minecolonies.coremod.entity;\n+\n+import net.minecraft.entity.EntityType;\n+import net.minecraft.entity.LivingEntity;\n+import net.minecraft.entity.projectile.ArrowEntity;\n+import net.minecraft.util.math.EntityRayTraceResult;\n+import net.minecraft.world.World;\n+\n+/**\n+ * Custom arrow entity class which remove themselves when on the ground for a bit to not cause lag and they do not scale in damage with their motion.\n+ */\n+public class CustomArrowEntity extends ArrowEntity\n+{\n+    public CustomArrowEntity(final EntityType<? extends ArrowEntity> type, final World world)\n+    {\n+        super(type, world);\n+    }\n+\n+    @Override\n+    protected void arrowHit(LivingEntity target)\n+    {\n+        // TODO add enderman damage hit research here not that this is also used by mobs so check the shooter\n+        super.arrowHit(target);\n+    }\n+\n+    @Override\n+    protected void onEntityHit(EntityRayTraceResult traceResult)\n+    {\n+        final double prevDamage = getDamage();\n+\n+        // Reduce damage by motion before vanilla increases it by the same factor, so our damage stays.\n+        float f = (float) this.getMotion().length();\n+        if (f != 0)\n+        {\n+            setDamage(prevDamage / f);\n+        }\n+\n+        super.onEntityHit(traceResult);\n+\n+        // Set the old actual damage value back\n+        setDamage(prevDamage);\n+    }\n+\n+    @Override\n+    public void tick()\n+    {\n+        super.tick();\n+\n+        if (this.timeInGround > 10)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390670e03d362970fa029d47eacfbc3292ea13cd"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3343, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}