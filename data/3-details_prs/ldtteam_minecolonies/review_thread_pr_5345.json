{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDUxMTM5", "number": 5345, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjowODowMFrOEL29PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjowODowMFrOEL29PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODcwMjA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjowODowMFrOGtoovA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxODo1Njo1N1rOGvd3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg==", "bodyText": "Could we get a highlight on the Tileentity to render aswell? would be very useful for finding buried buildings.\nShould be a simple RenderBox() or so call, the code for that exists in structurize", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r450504892", "createdAt": "2020-07-06T22:08:00Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNjcwNQ==", "bodyText": "i'd say it'd be simpler to bring up the marker for the anchorPos (which is the TE in any building schematic)", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r450506705", "createdAt": "2020-07-06T22:13:02Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg=="}, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUxMjk3Ng==", "bodyText": "Highlighting the TE doesn't help with finding it, because if it's buried, the highlight will also be buried. By the time you find the highlight, you can see the hut anyway. I experimented with removing the depth check on the TE-highlight to make it shine through other solid blocks like a wallhack, but I couldn't make it work.\nHowever, since the PR will render the full lvl5 building now (it works a bit different now than when you last saw it someaddons), it should be a bit easier to find the hut \"intuitively\".\nAshers, what do you mean with \"bring up the marker\"?", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r450512976", "createdAt": "2020-07-06T22:31:18Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg=="}, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUxNjM0Mg==", "bodyText": "https://github.com/ldtteam/Structurize/blob/9dfc02da242ee5b6f7ac4ecb49e6722f19ad262f/src/main/java/com/ldtteam/structurize/event/ClientEventSubscriber.java#L120", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r450516342", "createdAt": "2020-07-06T22:42:11Z", "author": {"login": "Asherslab"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg=="}, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUxNzMxNA==", "bodyText": "Ah yes. Then my comment stands, the highlight isn't really useful for finding the hut, especially if it's buried. Would be a whole different story if the highlight were wallhacky, but no idea how to accomplish that.", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r450517314", "createdAt": "2020-07-06T22:45:22Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg=="}, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUxODk5OQ==", "bodyText": "the tag hightling in structurize actually can be seen through blocks hmm", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r450518999", "createdAt": "2020-07-06T22:51:07Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg=="}, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUyNzA3Ng==", "bodyText": "oh funny its actually only the text highlightning which goes through blocks xD", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r450527076", "createdAt": "2020-07-06T23:18:17Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg=="}, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQxNTAxOQ==", "bodyText": "I tried reproducing the behavior of the icons of the workers, based on Ray's comment. It refused to work. The icons render as textures, and use .depthTest(RenderState.DEPTH_ALWAYS), but no matter how much I fiddle around with this and culling, it just doesn't work. Maybe there's one or fifty other GL flags I need to set, I don't know.\nAdditionally, the icons of the workers are not visible through ghostblocks, so it wouldn't work for this PR anyway.\nIn short, sorry but I give up. Someone who understands rendering better than I do should take a look at this please, in a separate PR.", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r452415019", "createdAt": "2020-07-09T18:37:16Z", "author": {"login": "JiaYow"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg=="}, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQyNTUyMA==", "bodyText": "Okay, we'll leave it for someone else to do it for a future PR. It's not actually so directly connected to this.", "url": "https://github.com/ldtteam/minecolonies/pull/5345#discussion_r452425520", "createdAt": "2020-07-09T18:56:57Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/event/ClientEventHandler.java", "diffHunk": "@@ -77,18 +103,128 @@ public static void renderWorldLastEvent(@NotNull final RenderWorldLastEvent even\n         {\n             handleRenderStructure(event, world, player);\n         }\n-        else if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n+\n+        if (player.getHeldItemMainhand().getItem() == ModItems.scepterGuard)\n         {\n             handleRenderScepterGuard(event, world, player);\n         }\n         else if (player.getHeldItemMainhand().getItem() == ModItems.bannerRallyGuards)\n         {\n             handleRenderBannerRallyGuards(event, world, player);\n         }\n+        else if (player.getHeldItemMainhand().getItem() == com.ldtteam.structurize.items.ModItems.buildTool)\n+        {\n+            handleRenderBuildTool(event, world, player);\n+        }\n+    }\n+\n+    /**\n+     * Renders building bounding boxes into the client\n+     *\n+     * @param event  The caught event\n+     * @param world  The world in which to render\n+     * @param player The player for which to render\n+     */\n+    private static void handleRenderBuildTool(@NotNull final RenderWorldLastEvent event, final ClientWorld world, final PlayerEntity player)\n+    {\n+        final IColonyView colony = IColonyManager.getInstance().getClosestColonyView(world, player.getPosition());\n+        if (colony == null)\n+        {\n+            return;\n+        }\n+\n+        if (Settings.instance.getActiveStructure() == null)\n+        {\n+            return;\n+        }\n+\n+        final BlockPos activePosition = Settings.instance.getPosition();\n+        final Map<BlockPos, Triple<Blueprint, BlockPos, BlockPos>> newCache = new HashMap<>();\n+        for (final IBuildingView buildingView : colony.getBuildings())\n+        {\n+            final BlockPos currentPosition = buildingView.getPosition();\n+\n+            if (activePosition.withinDistance(currentPosition, PREVIEW_RANGE))\n+            {\n+                if (blueprintCache.containsKey(currentPosition))\n+                {\n+                    newCache.put(currentPosition, blueprintCache.get(currentPosition));\n+                }\n+                else\n+                {\n+                    final StructureName sn =\n+                      new StructureName(Structures.SCHEMATICS_PREFIX,\n+                        buildingView.getStyle(),\n+                        buildingView.getSchematicName() + buildingView.getBuildingMaxLevel());\n+\n+                    final String structureName = sn.toString();\n+                    final String md5 = Structures.getMD5(structureName);\n+\n+                    final IStructureHandler wrapper = new LoadOnlyStructureHandler(world, buildingView.getID(), structureName, new PlacementSettings(), true);\n+                    if (!wrapper.hasBluePrint() || !wrapper.isCorrectMD5(md5))\n+                    {\n+                        Log.getLogger().debug(\"Blueprint error, requesting\" + structureName + \" from server.\");\n+                        if (ServerLifecycleHooks.getCurrentServer() == null)\n+                        {\n+                            Network.getNetwork().sendToServer(new SchematicRequestMessage(structureName));\n+                            continue;\n+                        }\n+                    }\n+\n+                    final Blueprint blueprint = wrapper.getBluePrint();\n+\n+                    if (blueprint != null)\n+                    {\n+                        Mirror mirror = buildingView.isMirrored() ? Mirror.FRONT_BACK : Mirror.NONE;\n+\n+                        final TileEntity tileEntity = world.getTileEntity(currentPosition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDg5Mg=="}, "originalCommit": {"oid": "6479a2efd1220812056dde3bdddd117e0b5b5904"}, "originalPosition": 153}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3643, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}