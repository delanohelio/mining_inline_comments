{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjcyNDY1", "number": 6020, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxOTo1NzoyN1rOE0LYoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxOTo1ODoyOVrOE0LY5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTQ3OTM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIUsesFurnace.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxOTo1NzoyN1rOHrxrOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMzo1MjoxMFrOHrzPCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2NDY5OQ==", "bodyText": "Is this even valid?\nThis should probably return some same default state.", "url": "https://github.com/ldtteam/minecolonies/pull/6020#discussion_r515664699", "createdAt": "2020-11-01T19:57:27Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIUsesFurnace.java", "diffHunk": "@@ -231,7 +231,7 @@ private IAIState accelerateFurnaces()\n                 }\n             }\n         }\n-        return getState();\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13eb0ee0d45d23955473a98aa05b95fe562a3514"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY4Njk5OQ==", "bodyText": "Actually, there is a significant behavior difference between null and getState. Returning a valid state here stops further execution on that tick, where returning null allows further execution. I can add comments here, though I found that documentation in AbstractEntityAIBasic", "url": "https://github.com/ldtteam/minecolonies/pull/6020#discussion_r515686999", "createdAt": "2020-11-01T23:24:04Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIUsesFurnace.java", "diffHunk": "@@ -231,7 +231,7 @@ private IAIState accelerateFurnaces()\n                 }\n             }\n         }\n-        return getState();\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2NDY5OQ=="}, "originalCommit": {"oid": "13eb0ee0d45d23955473a98aa05b95fe562a3514"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY4ODI3MQ==", "bodyText": "@someaddons can probably confirm", "url": "https://github.com/ldtteam/minecolonies/pull/6020#discussion_r515688271", "createdAt": "2020-11-01T23:34:59Z", "author": {"login": "Raycoms"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIUsesFurnace.java", "diffHunk": "@@ -231,7 +231,7 @@ private IAIState accelerateFurnaces()\n                 }\n             }\n         }\n-        return getState();\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2NDY5OQ=="}, "originalCommit": {"oid": "13eb0ee0d45d23955473a98aa05b95fe562a3514"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY5MDI0OA==", "bodyText": "ye null state return means no action, not null means we traverse into that state and do not check further transitions of this state in the current tick. I thought about changing it, but back then this was needed for backwards compat due to the way our AI is structured/used.", "url": "https://github.com/ldtteam/minecolonies/pull/6020#discussion_r515690248", "createdAt": "2020-11-01T23:52:10Z", "author": {"login": "someaddons"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/basic/AbstractEntityAIUsesFurnace.java", "diffHunk": "@@ -231,7 +231,7 @@ private IAIState accelerateFurnaces()\n                 }\n             }\n         }\n-        return getState();\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2NDY5OQ=="}, "originalCommit": {"oid": "13eb0ee0d45d23955473a98aa05b95fe562a3514"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTQ4MDA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/composter/EntityAIWorkComposter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxOTo1ODoyOVrOHrxrlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQyMzoyNDoxOVrOHrzCeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2NDc5MA==", "bodyText": "Again return some same default state here.", "url": "https://github.com/ldtteam/minecolonies/pull/6020#discussion_r515664790", "createdAt": "2020-11-01T19:58:29Z", "author": {"login": "OrionDevelopment"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/composter/EntityAIWorkComposter.java", "diffHunk": "@@ -92,6 +97,35 @@ public EntityAIWorkComposter(@NotNull final JobComposter job)\n         worker.setCanPickUpLoot(true);\n     }\n \n+    /**\n+     * Actually accelerate the Barrels\n+     */\n+    private IAIState accelerateBarrels()\n+    {\n+        final int accelerationTicks = (worker.getCitizenData().getCitizenSkillHandler().getLevel(getOwnBuilding().getPrimarySkill()) / 10) * 2;\n+        final World world = getOwnBuilding().getColony().getWorld();\n+        for (final BlockPos pos : getOwnBuilding().getBarrels())\n+        {\n+            if (WorldUtil.isBlockLoaded(world, pos))\n+            {\n+                final TileEntity entity = world.getTileEntity(pos);\n+                if (entity instanceof TileEntityBarrel)\n+                {\n+                    final TileEntityBarrel barrel = (TileEntityBarrel) entity;\n+                    for(int i = 0; i < accelerationTicks; i++)\n+                    {\n+                        if (barrel.checkIfWorking() && !barrel.isDone())\n+                        {\n+                            barrel.tick();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13eb0ee0d45d23955473a98aa05b95fe562a3514"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY4NzAzNA==", "bodyText": "See previous comments", "url": "https://github.com/ldtteam/minecolonies/pull/6020#discussion_r515687034", "createdAt": "2020-11-01T23:24:19Z", "author": {"login": "Mekle001"}, "path": "src/main/java/com/minecolonies/coremod/entity/ai/citizen/composter/EntityAIWorkComposter.java", "diffHunk": "@@ -92,6 +97,35 @@ public EntityAIWorkComposter(@NotNull final JobComposter job)\n         worker.setCanPickUpLoot(true);\n     }\n \n+    /**\n+     * Actually accelerate the Barrels\n+     */\n+    private IAIState accelerateBarrels()\n+    {\n+        final int accelerationTicks = (worker.getCitizenData().getCitizenSkillHandler().getLevel(getOwnBuilding().getPrimarySkill()) / 10) * 2;\n+        final World world = getOwnBuilding().getColony().getWorld();\n+        for (final BlockPos pos : getOwnBuilding().getBarrels())\n+        {\n+            if (WorldUtil.isBlockLoaded(world, pos))\n+            {\n+                final TileEntity entity = world.getTileEntity(pos);\n+                if (entity instanceof TileEntityBarrel)\n+                {\n+                    final TileEntityBarrel barrel = (TileEntityBarrel) entity;\n+                    for(int i = 0; i < accelerationTicks; i++)\n+                    {\n+                        if (barrel.checkIfWorking() && !barrel.isDone())\n+                        {\n+                            barrel.tick();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY2NDc5MA=="}, "originalCommit": {"oid": "13eb0ee0d45d23955473a98aa05b95fe562a3514"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3379, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}