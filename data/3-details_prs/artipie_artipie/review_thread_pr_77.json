{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTI2NTQ1", "number": 77, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxMToyNDo1OFrODzNjlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxMToyNDo1OFrODzNjlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDI2MDcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/Pie.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxMToyNDo1OVrOGHqQTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNTo1Nzo1NlrOGIETKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY4NTUxNw==", "bodyText": "@g4s8 this switch/case is pretty ugly and error prone. How about we extract a class SliceFromCfg (it can be protected) which will contain a map of slices by their type? Something like Map<String, Function<RepoConfig, CompletitionStage<Slice>>. It can be tested separately and further updates are done only on the map. WDYT? It can be even made extendable so that a user can put its own slice definitions but this is maybe an overkill.", "url": "https://github.com/artipie/artipie/pull/77#discussion_r410685517", "createdAt": "2020-04-18T11:24:59Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/Pie.java", "diffHunk": "@@ -117,6 +118,9 @@ public Response response(final String line, final Iterable<Map.Entry<String, Str\n                     case \"gem\":\n                         slice = CompletableFuture.completedStage(new GemSlice(storage));\n                         break;\n+                    case \"rpm\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f23333586a19e0a206a26bfa8969d5c324a24cbd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTExMjIzMw==", "bodyText": "@Vatavuk thanks, fixed", "url": "https://github.com/artipie/artipie/pull/77#discussion_r411112233", "createdAt": "2020-04-20T05:57:56Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/Pie.java", "diffHunk": "@@ -117,6 +118,9 @@ public Response response(final String line, final Iterable<Map.Entry<String, Str\n                     case \"gem\":\n                         slice = CompletableFuture.completedStage(new GemSlice(storage));\n                         break;\n+                    case \"rpm\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY4NTUxNw=="}, "originalCommit": {"oid": "f23333586a19e0a206a26bfa8969d5c324a24cbd"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2368, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}