{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MTcxMjc5", "number": 438, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOToxMjoxMlrOEX93dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOToxMjoxMlrOEX93dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTY2MzI3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/ResponseMetricsSliceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOToxMjoxMlrOHAC_0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOToxMjoxMlrOHAC_0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgxMTE1NA==", "bodyText": "@olenagerasimova I'd use SliceHasResponse + RsHasStatus, RsHasHeaders and RsHasBody matchers instead of checking it inside the callback, since it can be never called and test passes.", "url": "https://github.com/artipie/artipie/pull/438#discussion_r469811154", "createdAt": "2020-08-13T09:12:12Z", "author": {"login": "g4s8"}, "path": "src/test/java/com/artipie/ResponseMetricsSliceTest.java", "diffHunk": "@@ -113,6 +122,57 @@ public void shouldReportBadAuthResponse() {\n         );\n     }\n \n+    @Test\n+    void shouldForwardRequestUnmodified() {\n+        final String line = new RequestLine(RqMethod.POST, \"/some_upload.war\").toString();\n+        final Header header = new Header(\"header1\", \"value1\");\n+        final byte[] body = \"some code\".getBytes();\n+        new ResponseMetricsSlice(\n+            (rqline, rqheaders, rqbody) -> {\n+                MatcherAssert.assertThat(\n+                    \"Request line is forwarded as is\",\n+                    rqline,\n+                    new IsEqual<>(line)\n+                );\n+                MatcherAssert.assertThat(\n+                    \"Headers are forwarded unmodified\",\n+                    rqheaders,\n+                    Matchers.containsInAnyOrder(header)\n+                );\n+                MatcherAssert.assertThat(\n+                    \"Body is forwarded unmodified\",\n+                    new PublisherAs(rqbody).bytes().toCompletableFuture().join(),\n+                    new IsEqual<>(body)\n+                );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10180c4fb96e9d245150f547608a3ab326b47cdf"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2314, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}