{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MTA5OTg0", "number": 580, "title": "#535 - Add mavenProxyIT", "bodyText": "Part of #535\nAdd MavenProxyIT. Artifact are downloading from maven central.", "createdAt": "2020-09-11T14:04:38Z", "url": "https://github.com/artipie/artipie/pull/580", "merged": true, "mergeCommit": {"oid": "73440223750c7c41a6b003377dfea61f7fdd325e"}, "closed": true, "closedAt": "2020-09-24T17:10:15Z", "author": {"login": "genryxy"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH15u6AH2gAyNDg1MTA5OTg0OjEyNjgzYTcyNjJiYTc3MmIyZTEwZDZlMDQ0OTc1MTMyNDMzMWQwMmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMEJbtgH2gAyNDg1MTA5OTg0OmM4YWU3OGRjMWJlZmY1MTUzMWQyZjQwNmMwZjY0MTI0NTBkNzA4NDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "12683a7262ba772b2e10d6e0449751324331d02f", "author": {"user": {"login": "genryxy", "name": "Alexander"}}, "url": "https://github.com/artipie/artipie/commit/12683a7262ba772b2e10d6e0449751324331d02f", "committedDate": "2020-09-11T14:02:44Z", "message": "#535 - Add mavenProxyIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b407d3feb4975c13e0718f005ad16d3e65197132", "author": {"user": {"login": "genryxy", "name": "Alexander"}}, "url": "https://github.com/artipie/artipie/commit/b407d3feb4975c13e0718f005ad16d3e65197132", "committedDate": "2020-09-13T22:50:19Z", "message": "Merge remote-tracking branch 'upstream/master' into 535-mavenProxyIT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3NjU0NDU0", "url": "https://github.com/artipie/artipie/pull/580#pullrequestreview-487654454", "createdAt": "2020-09-14T11:17:58Z", "commit": {"oid": "12683a7262ba772b2e10d6e0449751324331d02f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMToxNzo1OFrOHRPHfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMToxNzo1OFrOHRPHfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNTUxOA==", "bodyText": "@genryxy I see that this command is executed twice, is it really necessary?", "url": "https://github.com/artipie/artipie/pull/580#discussion_r487835518", "createdAt": "2020-09-14T11:17:58Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/maven/MavenProxyIT.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.maven;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.artipie.ArtipieServer;\n+import com.artipie.docker.junit.DockerClientSupport;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.List;\n+import org.cactoos.list.ListOf;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.AllOf;\n+import org.hamcrest.core.IsNot;\n+import org.hamcrest.core.StringContains;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.condition.EnabledOnOs;\n+import org.junit.jupiter.api.condition.OS;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+\n+/**\n+ * Integration test for {@link com.artipie.maven.http.MavenProxySlice}.\n+ *\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n+ * @since 0.11\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+@EnabledOnOs(OS.LINUX)\n+@DockerClientSupport\n+final class MavenProxyIT {\n+\n+    /**\n+     * Temporary directory for all tests.\n+     * @checkstyle VisibilityModifierCheck (3 lines)\n+     */\n+    @TempDir\n+    Path tmp;\n+\n+    /**\n+     * Subdirectory in temporary directory.\n+     */\n+    private Path subdir;\n+\n+    /**\n+     * Local Artipie server that stores artifacts.\n+     */\n+    private ArtipieServer server;\n+\n+    /**\n+     * Container for local server.\n+     */\n+    private GenericContainer<?> cntn;\n+\n+    /**\n+     * Proxy Artipie server port.\n+     */\n+    private int port;\n+\n+    @BeforeEach\n+    void setUp() throws Exception {\n+        this.subdir = Files.createDirectory(Path.of(this.tmp.toString(), \"subdir\"));\n+        this.server = new ArtipieServer(this.subdir, \"my-maven\", this.configsProxy());\n+        this.port = this.server.start();\n+        final Path setting = this.subdir.resolve(\"settings.xml\");\n+        setting.toFile().createNewFile();\n+        Files.write(setting, this.settings());\n+        this.cntn = new GenericContainer<>(\"centos:centos8\")\n+            .withCommand(\"tail\", \"-f\", \"/dev/null\")\n+            .withWorkingDirectory(\"/home/\")\n+            .withFileSystemBind(this.subdir.toString(), \"/home\");\n+        Testcontainers.exposeHostPorts(this.port);\n+        this.cntn.start();\n+        this.cntn.execInContainer(\"yum\", \"-y\", \"install\", \"maven\");\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        this.server.stop();\n+        this.cntn.close();\n+    }\n+\n+    @Test\n+    void shouldGetArtifactFromLocalAndSaveInCache() throws Exception {\n+        final String artifact = \"-Dartifact=aspectj:aspectj-ant:1.0.6:jar\";\n+        this.exec(\"mvn\", \"-s\", \"/home/settings.xml\", \"dependency:get\", artifact);\n+        MatcherAssert.assertThat(\n+            this.exec(\n+                \"mvn\", \"-s\", \"/home/settings.xml\", \"dependency:get\", artifact", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12683a7262ba772b2e10d6e0449751324331d02f"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3Nzk0OTgz", "url": "https://github.com/artipie/artipie/pull/580#pullrequestreview-487794983", "createdAt": "2020-09-14T13:56:38Z", "commit": {"oid": "12683a7262ba772b2e10d6e0449751324331d02f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo1NjozOFrOHRVkDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzo1NjozOFrOHRVkDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzk0MTEzNA==", "bodyText": "@genryxy have you tried simply check temp directory structure? You can add brake point, copy path and use ls -la. As far as see files should be ./subdir/repos/. When you understand where files are, you can create FileStorage instance over subdir and check that files are loaded by corresponding keys", "url": "https://github.com/artipie/artipie/pull/580#discussion_r487941134", "createdAt": "2020-09-14T13:56:38Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/maven/MavenProxyIT.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.maven;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.artipie.ArtipieServer;\n+import com.artipie.docker.junit.DockerClientSupport;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import java.util.List;\n+import org.cactoos.list.ListOf;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.AllOf;\n+import org.hamcrest.core.IsNot;\n+import org.hamcrest.core.StringContains;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.condition.EnabledOnOs;\n+import org.junit.jupiter.api.condition.OS;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+\n+/**\n+ * Integration test for {@link com.artipie.maven.http.MavenProxySlice}.\n+ *\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n+ * @since 0.11\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+@EnabledOnOs(OS.LINUX)\n+@DockerClientSupport\n+final class MavenProxyIT {\n+\n+    /**\n+     * Temporary directory for all tests.\n+     * @checkstyle VisibilityModifierCheck (3 lines)\n+     */\n+    @TempDir\n+    Path tmp;\n+\n+    /**\n+     * Subdirectory in temporary directory.\n+     */\n+    private Path subdir;\n+\n+    /**\n+     * Local Artipie server that stores artifacts.\n+     */\n+    private ArtipieServer server;\n+\n+    /**\n+     * Container for local server.\n+     */\n+    private GenericContainer<?> cntn;\n+\n+    /**\n+     * Proxy Artipie server port.\n+     */\n+    private int port;\n+\n+    @BeforeEach\n+    void setUp() throws Exception {\n+        this.subdir = Files.createDirectory(Path.of(this.tmp.toString(), \"subdir\"));\n+        this.server = new ArtipieServer(this.subdir, \"my-maven\", this.configsProxy());\n+        this.port = this.server.start();\n+        final Path setting = this.subdir.resolve(\"settings.xml\");\n+        setting.toFile().createNewFile();\n+        Files.write(setting, this.settings());\n+        this.cntn = new GenericContainer<>(\"centos:centos8\")\n+            .withCommand(\"tail\", \"-f\", \"/dev/null\")\n+            .withWorkingDirectory(\"/home/\")\n+            .withFileSystemBind(this.subdir.toString(), \"/home\");\n+        Testcontainers.exposeHostPorts(this.port);\n+        this.cntn.start();\n+        this.cntn.execInContainer(\"yum\", \"-y\", \"install\", \"maven\");\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        this.server.stop();\n+        this.cntn.close();\n+    }\n+\n+    @Test\n+    void shouldGetArtifactFromLocalAndSaveInCache() throws Exception {\n+        final String artifact = \"-Dartifact=aspectj:aspectj-ant:1.0.6:jar\";\n+        this.exec(\"mvn\", \"-s\", \"/home/settings.xml\", \"dependency:get\", artifact);\n+        MatcherAssert.assertThat(\n+            this.exec(\n+                \"mvn\", \"-s\", \"/home/settings.xml\", \"dependency:get\", artifact", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzgzNTUxOA=="}, "originalCommit": {"oid": "12683a7262ba772b2e10d6e0449751324331d02f"}, "originalPosition": 115}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cade41bf2882908d4dea93dd0408b68ce912271c", "author": {"user": {"login": "genryxy", "name": "Alexander"}}, "url": "https://github.com/artipie/artipie/commit/cade41bf2882908d4dea93dd0408b68ce912271c", "committedDate": "2020-09-17T06:11:22Z", "message": "Merge remote-tracking branch 'upstream/master' into 535-mavenProxyIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "370251f567e8192915b94458f92df11df8d99d4a", "author": {"user": {"login": "genryxy", "name": "Alexander"}}, "url": "https://github.com/artipie/artipie/commit/370251f567e8192915b94458f92df11df8d99d4a", "committedDate": "2020-09-22T09:46:53Z", "message": "Merge remote-tracking branch 'upstream/master' into 535-mavenProxyIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7297b7a551f4105c24f3220bba78dca076348f9d", "author": {"user": {"login": "genryxy", "name": "Alexander"}}, "url": "https://github.com/artipie/artipie/commit/7297b7a551f4105c24f3220bba78dca076348f9d", "committedDate": "2020-09-22T10:33:11Z", "message": "#535 - Add storage checking, disable test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e59cdde76f27c8da3f4fc1ef4add0b8512ed1383", "author": {"user": {"login": "genryxy", "name": "Alexander"}}, "url": "https://github.com/artipie/artipie/commit/e59cdde76f27c8da3f4fc1ef4add0b8512ed1383", "committedDate": "2020-09-24T08:22:56Z", "message": "#535 - Change artifact name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da0eed32342a7d6a5673aa285f7955a545ce25a9", "author": {"user": {"login": "genryxy", "name": "Alexander"}}, "url": "https://github.com/artipie/artipie/commit/da0eed32342a7d6a5673aa285f7955a545ce25a9", "committedDate": "2020-09-24T08:24:55Z", "message": "Merge remote-tracking branch 'upstream/master' into 535-mavenProxyIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8ae78dc1beff51531d2f406c0f6412450d70849", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/artipie/commit/c8ae78dc1beff51531d2f406c0f6412450d70849", "committedDate": "2020-09-24T16:54:15Z", "message": "Merge branch 'master' into 535-mavenProxyIT"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3562, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}