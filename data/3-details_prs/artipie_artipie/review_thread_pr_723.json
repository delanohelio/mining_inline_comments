{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNTk5MjA0", "number": 723, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjoyNDozMFrOEyU3cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjoyNDozMFrOEyU3cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjA2MTI5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/test/TestContainer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjoyNDozMFrOHo5lTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjoyNDozMFrOHo5lTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0ODUyNQ==", "bodyText": "@genryxy I'd suggest moving this command to start() method, it seems more logical and we will not need any suppressions here", "url": "https://github.com/artipie/artipie/pull/723#discussion_r512648525", "createdAt": "2020-10-27T12:24:30Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/test/TestContainer.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.test;\n+\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.Container;\n+import org.testcontainers.containers.GenericContainer;\n+\n+/**\n+ * Class for creating test container and for executing queries in it.\n+ * @since 0.12\n+ */\n+public final class TestContainer implements AutoCloseable {\n+\n+    /**\n+     * Container.\n+     */\n+    private final GenericContainer<?> cntn;\n+\n+    /**\n+     * Ctor.\n+     * @param image Docker image\n+     * @param path Path for binding file system\n+     * @param port Port for exposing\n+     */\n+    @SuppressWarnings(\"PMD.ConstructorOnlyInitializesOrCallOtherConstructors\")\n+    public TestContainer(final String image, final Path path, final int port) {\n+        this.cntn = new GenericContainer<>(image)\n+            .withCommand(\"tail\", \"-f\", \"/dev/null\")\n+            .withWorkingDirectory(\"/home/\")\n+            .withFileSystemBind(path.toString(), \"/home\");\n+        Testcontainers.exposeHostPorts(port);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faf85dc01834b9790f78a42d97127cf756428d3c"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2083, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}