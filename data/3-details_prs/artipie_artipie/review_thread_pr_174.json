{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjc1ODgz", "number": 174, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjoxNjoxN1rOD_8v5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjoxNzoyOFrOD_8w6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzgyMTgzOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjoxNjoxN1rOGa605A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDoxNzoyMVrOGbCy9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3OTk3Mg==", "bodyText": "@brastak can we parse the path dynamically? It seems to be the same as repository name always, can we use it instead of config param?", "url": "https://github.com/artipie/artipie/pull/174#discussion_r430879972", "createdAt": "2020-05-27T06:16:17Z", "author": {"login": "g4s8"}, "path": "README.md", "diffHunk": "@@ -182,19 +182,16 @@ Try this `npm.yaml` file:\n ```yaml\n repo:\n   type: npm\n+  path: /npm", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6210659811c364fef49f826cde129929206a6b40"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5MDc5Nw==", "bodyText": "@g4s8 It's the question of component's responsibility. I think, it's better if the Pie class will know about repositories and the paths they handled. Then we will be able to introduces the changes in the single place. Currently, we have 2 path-related issues:\n\nIn generally we handles flat repositories structure only (repo path is always single-level). It is bad for the case of personal repos in central.artipie.com - we need to use user-repo-name naming policy instead of more suitable user/repo-name. Single-level path requirement is the strange restriction and I'm not sure that we shall to handle it;\nMany of our adapters contain tests for the case when no context path exists at all and the repo handles root path (this case is impossible in our runtime).\n\nI think, it's better to do the following:\n\nremove all paths from repo configs (not only NPM adapters containt it);\npass actual repo path from Pie to SliceFromConfig and use it in adapter's constructor if they need this information.\n\nBut I think that this refactoring should be done as separate set of issues.\nIf you want, I can remove the path from here and will be always use the first part of URL, but it looks like that we are changing one temporary solution to another", "url": "https://github.com/artipie/artipie/pull/174#discussion_r430990797", "createdAt": "2020-05-27T09:42:24Z", "author": {"login": "brastak"}, "path": "README.md", "diffHunk": "@@ -182,19 +182,16 @@ Try this `npm.yaml` file:\n ```yaml\n repo:\n   type: npm\n+  path: /npm", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3OTk3Mg=="}, "originalCommit": {"oid": "6210659811c364fef49f826cde129929206a6b40"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAxMDU0OA==", "bodyText": "@brastak yes, it sounds reasonable. I think you can submit a ticket to propose /user/repo schema instead of /repo.", "url": "https://github.com/artipie/artipie/pull/174#discussion_r431010548", "createdAt": "2020-05-27T10:17:21Z", "author": {"login": "g4s8"}, "path": "README.md", "diffHunk": "@@ -182,19 +182,16 @@ Try this `npm.yaml` file:\n ```yaml\n repo:\n   type: npm\n+  path: /npm", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3OTk3Mg=="}, "originalCommit": {"oid": "6210659811c364fef49f826cde129929206a6b40"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzgyNDQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/SliceFromConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjoxNzoyOFrOGa62ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTo1MTo0NVrOGbB7OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg4MDM5NA==", "bodyText": "@brastak why do we need both: storage and Npm(storage)? It seems we can pass only storage and construct Npm(storage) internally in NpmSlice, WDYT?", "url": "https://github.com/artipie/artipie/pull/174#discussion_r430880394", "createdAt": "2020-05-27T06:17:28Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/SliceFromConfig.java", "diffHunk": "@@ -90,9 +91,16 @@ public SliceFromConfig(final RepoConfig config, final Vertx vertx,\n                         \"file\", config -> CompletableFuture.completedStage(new FilesSlice(storage, permissions, auth))\n                     ),\n                     new MapEntry<>(\n-                        \"npm\", config -> CompletableFuture.completedStage(\n-                        new NpmSlice(new Npm(storage), storage)\n-                    )\n+                        \"npm\", config -> config.path().thenCombine(\n+                            config.settings(),\n+                            (path, settings) -> new NpmSlice(\n+                                path,\n+                                new Npm(storage),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6210659811c364fef49f826cde129929206a6b40"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk5NjI4MQ==", "bodyText": "@g4s8 It's previous design that I have not changed. Currently, UploadSlice saves a file directly to Storage, then Npm  processes the uploaded file and saves transformed metadata to Storage, then UploadSlice removes an original uploaded file from Storage.\nReally, such design makes sense because of Npm is used by our clients and it's their responsibility to put initial file to the right place. But I can add todo and introduce all processing cycle into Npm", "url": "https://github.com/artipie/artipie/pull/174#discussion_r430996281", "createdAt": "2020-05-27T09:51:45Z", "author": {"login": "brastak"}, "path": "src/main/java/com/artipie/SliceFromConfig.java", "diffHunk": "@@ -90,9 +91,16 @@ public SliceFromConfig(final RepoConfig config, final Vertx vertx,\n                         \"file\", config -> CompletableFuture.completedStage(new FilesSlice(storage, permissions, auth))\n                     ),\n                     new MapEntry<>(\n-                        \"npm\", config -> CompletableFuture.completedStage(\n-                        new NpmSlice(new Npm(storage), storage)\n-                    )\n+                        \"npm\", config -> config.path().thenCombine(\n+                            config.settings(),\n+                            (path, settings) -> new NpmSlice(\n+                                path,\n+                                new Npm(storage),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg4MDM5NA=="}, "originalCommit": {"oid": "6210659811c364fef49f826cde129929206a6b40"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2408, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}