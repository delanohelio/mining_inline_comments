{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNDczNTY2", "number": 165, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzo0Njo0N1rOD-3AtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo0MDoyOVrOD-39HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjM5NjA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/Settings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzo0Njo0N1rOGZN18w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzo0Njo0N1rOGZN18w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NDM4Nw==", "bodyText": "@olenagerasimova most probably we will need to parse data from Publisher to read authentication config, if so, we have to return CompletionStage<List<>> here instead of List<>", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429094387", "createdAt": "2020-05-22T07:46:47Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/Settings.java", "diffHunk": "@@ -39,4 +41,12 @@\n      * @throws IOException In case of problems with reading settings.\n      */\n     Storage storage() throws IOException;\n+\n+    /**\n+     * Provides authorization.\n+     *\n+     * @return Authentication instance\n+     * @throws IOException In case of problems with reading settings.\n+     */\n+    List<Authentication> auth() throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3a679eef3b2a444b3a775dfa89a96817eede729"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjQwMjkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/YamlSettings.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzo0ODo1M1rOGZN6BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTozMjoxMVrOGZQ2Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NTQyOA==", "bodyText": "@olenagerasimova I'd also make credentials.type to be required and either be env or file, so AuthFromEnv will be enabled only when type == env", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429095428", "createdAt": "2020-05-22T07:48:53Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -65,4 +68,20 @@ public Storage storage() throws IOException {\n                 this.vertx\n         ).storage();\n     }\n+\n+    @Override\n+    public List<Authentication> auth() throws IOException {\n+        //@checkstyle MethodBodyCommentsCheck (11 lines)\n+        // @todo #146:30min Implement this method to obtain authentications: for now\n+        //  we have AuthFromEnv, which is always available and should be active by default, and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3a679eef3b2a444b3a775dfa89a96817eede729"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE0MzY0Mw==", "bodyText": "@g4s8 ok, then we do not need a list (for now at least)", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429143643", "createdAt": "2020-05-22T09:32:11Z", "author": {"login": "olenagerasimova"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -65,4 +68,20 @@ public Storage storage() throws IOException {\n                 this.vertx\n         ).storage();\n     }\n+\n+    @Override\n+    public List<Authentication> auth() throws IOException {\n+        //@checkstyle MethodBodyCommentsCheck (11 lines)\n+        // @todo #146:30min Implement this method to obtain authentications: for now\n+        //  we have AuthFromEnv, which is always available and should be active by default, and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5NTQyOA=="}, "originalCommit": {"oid": "c3a679eef3b2a444b3a775dfa89a96817eede729"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU0ODIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozOTo0MVrOGZPU9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODozOTo0MVrOGZPU9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExODcxMQ==", "bodyText": "@olenagerasimova I think this name doesn't describe this method correctly according to javadocs", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429118711", "createdAt": "2020-05-22T08:39:41Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "diffHunk": "@@ -52,12 +56,38 @@\n      * Ctor.\n      * @param cred Credentials settings\n      */\n-    public YamlAuth(final YamlMapping cred) {\n+    public AuthFromYaml(final YamlMapping cred) {\n         this.cred = cred;\n     }\n \n     @Override\n     public Optional<String> user(final String user, final String pass) {\n-        throw new NotImplementedException(\"Not yet implemented\");\n+        final YamlMapping users = this.cred.yamlMapping(\"credentials\");\n+        Optional<String> res = Optional.empty();\n+        if (users != null && users.yamlMapping(user) != null) {\n+            final String stored = users.yamlMapping(user).string(\"pass\");\n+            if (stored != null && check(stored, pass)) {\n+                res = Optional.of(user);\n+            }\n+        }\n+        return res;\n+    }\n+\n+    /**\n+     * Obtains password from settings by username.\n+     * @param stored Password from settings\n+     * @param given Password to check\n+     * @return Password if present and properly formatted\n+     */\n+    private static boolean check(final String stored, final String given) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3a679eef3b2a444b3a775dfa89a96817eede729"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjU1MDY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo0MDoyOVrOGZPWgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODo0MDoyOVrOGZPWgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTExOTEwNQ==", "bodyText": "@olenagerasimova why find instead of match? match checks the whole string, but find only first match", "url": "https://github.com/artipie/artipie/pull/165#discussion_r429119105", "createdAt": "2020-05-22T08:40:29Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "diffHunk": "@@ -52,12 +56,38 @@\n      * Ctor.\n      * @param cred Credentials settings\n      */\n-    public YamlAuth(final YamlMapping cred) {\n+    public AuthFromYaml(final YamlMapping cred) {\n         this.cred = cred;\n     }\n \n     @Override\n     public Optional<String> user(final String user, final String pass) {\n-        throw new NotImplementedException(\"Not yet implemented\");\n+        final YamlMapping users = this.cred.yamlMapping(\"credentials\");\n+        Optional<String> res = Optional.empty();\n+        if (users != null && users.yamlMapping(user) != null) {\n+            final String stored = users.yamlMapping(user).string(\"pass\");\n+            if (stored != null && check(stored, pass)) {\n+                res = Optional.of(user);\n+            }\n+        }\n+        return res;\n+    }\n+\n+    /**\n+     * Obtains password from settings by username.\n+     * @param stored Password from settings\n+     * @param given Password to check\n+     * @return Password if present and properly formatted\n+     */\n+    private static boolean check(final String stored, final String given) {\n+        boolean res = false;\n+        final Matcher matcher = AuthFromYaml.PSWD.matcher(stored);\n+        if (matcher.find()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3a679eef3b2a444b3a775dfa89a96817eede729"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2400, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}