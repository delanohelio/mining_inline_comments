{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyODAwNzU5", "number": 557, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzowNDowM1rOEhqZ4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxMDoxNVrOEhqktg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzMzMjE2OnYy", "diffSide": "RIGHT", "path": "ARTIFACTORY_API_SUPPORT.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzowNDowM1rOHPGS3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzowNDowM1rOHPGS3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5MzgyMA==", "bodyText": "@olenagerasimova typo in REQUIEST", "url": "https://github.com/artipie/artipie/pull/557#discussion_r485593820", "createdAt": "2020-09-09T13:04:03Z", "author": {"login": "olegmoz"}, "path": "ARTIFACTORY_API_SUPPORT.md", "diffHunk": "@@ -0,0 +1,64 @@\n+# Artifactory API support\n+\n+Artipie supports artifactory API to manage repositories, users and repository permissions.\n+\n+## Create Repository\n+\n+Creates new docker repository with `default` storage alias and provided name.\n+\n+> **PUT** /api/repositories/{repoKey}\n+\n+Consumes json with the following fields (any other fields are ignored): \n+\n+Field name | Type | Meaning | Required\n+------------ | ------------- | ------------ | ---------\n+key | string | New repository name | Y\n+rclass | string | Repository class, only `local` type is supported | Y\n+packageType | string | Artifact type, only `docker` type is supported | Y\n+dockerApiVersion | string | Docker API version, we only support `V2` | Y\n+\n+Possible responses:\n+- `200 OK` when new repository was successfully created\n+- `400 BAD REQUIEST` in the cases when repository with such name already exists or invalid json was sent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631b267e41e26676e64e7f1e0d3d602a07ce3c55"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzM0Mjk3OnYy", "diffSide": "RIGHT", "path": "ARTIFACTORY_API_SUPPORT.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzowNjoyMFrOHPGZWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzowNjoyMFrOHPGZWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5NTQ4MA==", "bodyText": "@olenagerasimova title should be capitalized to be in line with other titles in the file and general formatting rules for English texts", "url": "https://github.com/artipie/artipie/pull/557#discussion_r485595480", "createdAt": "2020-09-09T13:06:20Z", "author": {"login": "olegmoz"}, "path": "ARTIFACTORY_API_SUPPORT.md", "diffHunk": "@@ -0,0 +1,64 @@\n+# Artifactory API support\n+\n+Artipie supports artifactory API to manage repositories, users and repository permissions.\n+\n+## Create Repository\n+\n+Creates new docker repository with `default` storage alias and provided name.\n+\n+> **PUT** /api/repositories/{repoKey}\n+\n+Consumes json with the following fields (any other fields are ignored): \n+\n+Field name | Type | Meaning | Required\n+------------ | ------------- | ------------ | ---------\n+key | string | New repository name | Y\n+rclass | string | Repository class, only `local` type is supported | Y\n+packageType | string | Artifact type, only `docker` type is supported | Y\n+dockerApiVersion | string | Docker API version, we only support `V2` | Y\n+\n+Possible responses:\n+- `200 OK` when new repository was successfully created\n+- `400 BAD REQUIEST` in the cases when repository with such name already exists or invalid json was sent\n+- `500 INTERNAL ERROR` in the case of unexpected server error\n+\n+## Users\n+\n+### Get the users list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631b267e41e26676e64e7f1e0d3d602a07ce3c55"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzM1OTkwOnYy", "diffSide": "RIGHT", "path": "ARTIFACTORY_API_SUPPORT.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxMDoxNVrOHPGj4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzo0MjoyM1rOHPH9LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5ODE3Nw==", "bodyText": "@olenagerasimova we have got Internal and internal values in the docs. Is it a typo or these values are actually different?", "url": "https://github.com/artipie/artipie/pull/557#discussion_r485598177", "createdAt": "2020-09-09T13:10:15Z", "author": {"login": "olegmoz"}, "path": "ARTIFACTORY_API_SUPPORT.md", "diffHunk": "@@ -0,0 +1,64 @@\n+# Artifactory API support\n+\n+Artipie supports artifactory API to manage repositories, users and repository permissions.\n+\n+## Create Repository\n+\n+Creates new docker repository with `default` storage alias and provided name.\n+\n+> **PUT** /api/repositories/{repoKey}\n+\n+Consumes json with the following fields (any other fields are ignored): \n+\n+Field name | Type | Meaning | Required\n+------------ | ------------- | ------------ | ---------\n+key | string | New repository name | Y\n+rclass | string | Repository class, only `local` type is supported | Y\n+packageType | string | Artifact type, only `docker` type is supported | Y\n+dockerApiVersion | string | Docker API version, we only support `V2` | Y\n+\n+Possible responses:\n+- `200 OK` when new repository was successfully created\n+- `400 BAD REQUIEST` in the cases when repository with such name already exists or invalid json was sent\n+- `500 INTERNAL ERROR` in the case of unexpected server error\n+\n+## Users\n+\n+### Get the users list\n+\n+Endpoint to obtain list of the existing users.\n+\n+> **GET** /api/security/users\n+\n+Returns json array of the following form:\n+```json\n+[\n+  {\n+    \"name\": \"davids\",\n+    \"uri\" : \"http://localhost:8081/artifactory/api/security/users/davids\",\n+    \"realm\" : \"internal\"\n+  }, {\n+    \"name\": \"danl\",\n+    \"uri\" : \"http://localhost:8081/artifactory/api/security/users/danl\",\n+    \"realm\" : \"internal\"\n+  }\n+]\n+```\n+Where `name` field contains user name, `uri` - URI to obtain user details, user `realm` is always `internal`.\n+\n+### Get User Details\n+\n+Endpoint to obtain user details.\n+\n+> **GET** /api/security/users/{userName}\n+\n+Returns json with the following fields:\n+\n+Field name | Type | Meaning | Required\n+------ | ------ | ------ | ------\n+name | string | User name | Y\n+email | string | User email, always constructed as {userName}@artipie.com | Y\n+lastLoggedIn | string | Default `2020-01-01T01:01:01.000+01:00` | Y\n+realm | string | User realm, value `Internal` is always returned | Y\n+\n+If user is not found `404 NOT FOUND` status is returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "631b267e41e26676e64e7f1e0d3d602a07ce3c55"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYyMTAzNw==", "bodyText": "@olegmoz hm, good question. I've copied this example from artifactory, there they use internal, but this example have Internal.\nIn artipie we actually always use Internal with the capital I.", "url": "https://github.com/artipie/artipie/pull/557#discussion_r485621037", "createdAt": "2020-09-09T13:42:23Z", "author": {"login": "olenagerasimova"}, "path": "ARTIFACTORY_API_SUPPORT.md", "diffHunk": "@@ -0,0 +1,64 @@\n+# Artifactory API support\n+\n+Artipie supports artifactory API to manage repositories, users and repository permissions.\n+\n+## Create Repository\n+\n+Creates new docker repository with `default` storage alias and provided name.\n+\n+> **PUT** /api/repositories/{repoKey}\n+\n+Consumes json with the following fields (any other fields are ignored): \n+\n+Field name | Type | Meaning | Required\n+------------ | ------------- | ------------ | ---------\n+key | string | New repository name | Y\n+rclass | string | Repository class, only `local` type is supported | Y\n+packageType | string | Artifact type, only `docker` type is supported | Y\n+dockerApiVersion | string | Docker API version, we only support `V2` | Y\n+\n+Possible responses:\n+- `200 OK` when new repository was successfully created\n+- `400 BAD REQUIEST` in the cases when repository with such name already exists or invalid json was sent\n+- `500 INTERNAL ERROR` in the case of unexpected server error\n+\n+## Users\n+\n+### Get the users list\n+\n+Endpoint to obtain list of the existing users.\n+\n+> **GET** /api/security/users\n+\n+Returns json array of the following form:\n+```json\n+[\n+  {\n+    \"name\": \"davids\",\n+    \"uri\" : \"http://localhost:8081/artifactory/api/security/users/davids\",\n+    \"realm\" : \"internal\"\n+  }, {\n+    \"name\": \"danl\",\n+    \"uri\" : \"http://localhost:8081/artifactory/api/security/users/danl\",\n+    \"realm\" : \"internal\"\n+  }\n+]\n+```\n+Where `name` field contains user name, `uri` - URI to obtain user details, user `realm` is always `internal`.\n+\n+### Get User Details\n+\n+Endpoint to obtain user details.\n+\n+> **GET** /api/security/users/{userName}\n+\n+Returns json with the following fields:\n+\n+Field name | Type | Meaning | Required\n+------ | ------ | ------ | ------\n+name | string | User name | Y\n+email | string | User email, always constructed as {userName}@artipie.com | Y\n+lastLoggedIn | string | Default `2020-01-01T01:01:01.000+01:00` | Y\n+realm | string | User realm, value `Internal` is always returned | Y\n+\n+If user is not found `404 NOT FOUND` status is returned.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5ODE3Nw=="}, "originalCommit": {"oid": "631b267e41e26676e64e7f1e0d3d602a07ce3c55"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2178, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}