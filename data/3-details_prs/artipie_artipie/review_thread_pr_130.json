{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NjMwNDIz", "number": 130, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMTo1NzoyMlrOD74huA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMTo1OTozMFrOD74i9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTE4NzEyOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/RepoConfigTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMTo1NzoyMlrOGUe2GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo1NDozNVrOGU1muA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzMDA3Mg==", "bodyText": "@olegmoz let's compare the value directly by getting Optional.value() instead of creating Optional.of() in the assertion.", "url": "https://github.com/artipie/artipie/pull/130#discussion_r424130072", "createdAt": "2020-05-13T01:57:22Z", "author": {"login": "carlosmiranda"}, "path": "src/test/java/com/artipie/RepoConfigTest.java", "diffHunk": "@@ -59,13 +60,32 @@ public void readsCustom()\n     @Test\n     public void failsToReadCustom()\n         throws URISyntaxException, ExecutionException, InterruptedException {\n-        final RepoConfig config = this.readFromResource(\"repo-min-config.yml\");\n+        final RepoConfig config = this.readMin();\n         MatcherAssert.assertThat(\n             \"Unexpected custom config\",\n             config.settings().toCompletableFuture().get().isEmpty()\n         );\n     }\n \n+    @Test\n+    public void readContentLengthMax() throws Exception {\n+        final RepoConfig config = this.readFull();\n+        final long value = 123L;\n+        MatcherAssert.assertThat(\n+            config.contentLengthMax().toCompletableFuture().join(),\n+            new IsEqual<>(Optional.of(value))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35900ff09c6072e9f89cfc9590dd127b29258959"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNTk2Nw==", "bodyText": "@carlosmiranda it is better to compare Optional, not it's value here. If the Optional is absent, then we will receive assertion exception which is expected in test, not IllegalStateException on attempt to read it's value", "url": "https://github.com/artipie/artipie/pull/130#discussion_r424235967", "createdAt": "2020-05-13T07:43:42Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/RepoConfigTest.java", "diffHunk": "@@ -59,13 +60,32 @@ public void readsCustom()\n     @Test\n     public void failsToReadCustom()\n         throws URISyntaxException, ExecutionException, InterruptedException {\n-        final RepoConfig config = this.readFromResource(\"repo-min-config.yml\");\n+        final RepoConfig config = this.readMin();\n         MatcherAssert.assertThat(\n             \"Unexpected custom config\",\n             config.settings().toCompletableFuture().get().isEmpty()\n         );\n     }\n \n+    @Test\n+    public void readContentLengthMax() throws Exception {\n+        final RepoConfig config = this.readFull();\n+        final long value = 123L;\n+        MatcherAssert.assertThat(\n+            config.contentLengthMax().toCompletableFuture().join(),\n+            new IsEqual<>(Optional.of(value))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzMDA3Mg=="}, "originalCommit": {"oid": "35900ff09c6072e9f89cfc9590dd127b29258959"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwMjk2OA==", "bodyText": "@olegmoz ok, that makes sense, let's keep it as is.", "url": "https://github.com/artipie/artipie/pull/130#discussion_r424502968", "createdAt": "2020-05-13T14:54:35Z", "author": {"login": "carlosmiranda"}, "path": "src/test/java/com/artipie/RepoConfigTest.java", "diffHunk": "@@ -59,13 +60,32 @@ public void readsCustom()\n     @Test\n     public void failsToReadCustom()\n         throws URISyntaxException, ExecutionException, InterruptedException {\n-        final RepoConfig config = this.readFromResource(\"repo-min-config.yml\");\n+        final RepoConfig config = this.readMin();\n         MatcherAssert.assertThat(\n             \"Unexpected custom config\",\n             config.settings().toCompletableFuture().get().isEmpty()\n         );\n     }\n \n+    @Test\n+    public void readContentLengthMax() throws Exception {\n+        final RepoConfig config = this.readFull();\n+        final long value = 123L;\n+        MatcherAssert.assertThat(\n+            config.contentLengthMax().toCompletableFuture().join(),\n+            new IsEqual<>(Optional.of(value))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzMDA3Mg=="}, "originalCommit": {"oid": "35900ff09c6072e9f89cfc9590dd127b29258959"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MTE5MDMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/RepoConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMTo1OTozMFrOGUe4Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo1NDoxOVrOGU1l8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzMDYwNw==", "bodyText": "@olegmoz what does this change have to do with the current task?", "url": "https://github.com/artipie/artipie/pull/130#discussion_r424130607", "createdAt": "2020-05-13T01:59:30Z", "author": {"login": "carlosmiranda"}, "path": "src/main/java/com/artipie/RepoConfig.java", "diffHunk": "@@ -140,14 +149,23 @@ public Vertx vertx() {\n      * @return String value.\n      */\n     private CompletionStage<String> string(final String key) {\n-        return this.repo().thenApply(\n-            map -> Objects.requireNonNull(\n-                map.string(key),\n-                String.format(\"yaml repo.%s is null\", key)\n+        return this.stringOpt(key).thenApply(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35900ff09c6072e9f89cfc9590dd127b29258959"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDIzNjYwNQ==", "bodyText": "@carlosmiranda I needed stringOpt method, so extracted it from existing string method. That's why this change is here", "url": "https://github.com/artipie/artipie/pull/130#discussion_r424236605", "createdAt": "2020-05-13T07:44:48Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/RepoConfig.java", "diffHunk": "@@ -140,14 +149,23 @@ public Vertx vertx() {\n      * @return String value.\n      */\n     private CompletionStage<String> string(final String key) {\n-        return this.repo().thenApply(\n-            map -> Objects.requireNonNull(\n-                map.string(key),\n-                String.format(\"yaml repo.%s is null\", key)\n+        return this.stringOpt(key).thenApply(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzMDYwNw=="}, "originalCommit": {"oid": "35900ff09c6072e9f89cfc9590dd127b29258959"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwMjc2OQ==", "bodyText": "@olegmoz all right, thanks for the explanation.", "url": "https://github.com/artipie/artipie/pull/130#discussion_r424502769", "createdAt": "2020-05-13T14:54:19Z", "author": {"login": "carlosmiranda"}, "path": "src/main/java/com/artipie/RepoConfig.java", "diffHunk": "@@ -140,14 +149,23 @@ public Vertx vertx() {\n      * @return String value.\n      */\n     private CompletionStage<String> string(final String key) {\n-        return this.repo().thenApply(\n-            map -> Objects.requireNonNull(\n-                map.string(key),\n-                String.format(\"yaml repo.%s is null\", key)\n+        return this.stringOpt(key).thenApply(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzMDYwNw=="}, "originalCommit": {"oid": "35900ff09c6072e9f89cfc9590dd127b29258959"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2388, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}