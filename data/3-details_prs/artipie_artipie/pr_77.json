{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTI2NTQ1", "number": 77, "title": "RPM repository", "bodyText": "#76 - added rpm repository support", "createdAt": "2020-04-16T16:40:58Z", "url": "https://github.com/artipie/artipie/pull/77", "merged": true, "mergeCommit": {"oid": "20dab472e9a0771c8ea1cc5c71a692efa0ef8cf0"}, "closed": true, "closedAt": "2020-04-20T06:09:24Z", "author": {"login": "g4s8"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYPXwFgH2gAyNDA0NTI2NTQ1OjkxMTYwNjA4NzMxM2U5OTgyMzFkNGY1ZmUzYWQ1MjZjNWRiNGJmZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZYos3AH2gAyNDA0NTI2NTQ1OmUwM2ZlY2NhMGQzZTkzZjkwODZjYWM2ZDU1Mjc4MGQ3MjNlMWU1Yjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "911606087313e998231d4f5fe3ad526c5db4bff6", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/911606087313e998231d4f5fe3ad526c5db4bff6", "committedDate": "2020-04-16T16:34:47Z", "message": "#76 - rpm repository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f23333586a19e0a206a26bfa8969d5c324a24cbd", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/f23333586a19e0a206a26bfa8969d5c324a24cbd", "committedDate": "2020-04-16T17:11:59Z", "message": "#96 - using completed stage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTA1NDE4", "url": "https://github.com/artipie/artipie/pull/77#pullrequestreview-395905418", "createdAt": "2020-04-18T11:24:58Z", "commit": {"oid": "f23333586a19e0a206a26bfa8969d5c324a24cbd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxMToyNDo1OVrOGHqQTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxMToyNDo1OVrOGHqQTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY4NTUxNw==", "bodyText": "@g4s8 this switch/case is pretty ugly and error prone. How about we extract a class SliceFromCfg (it can be protected) which will contain a map of slices by their type? Something like Map<String, Function<RepoConfig, CompletitionStage<Slice>>. It can be tested separately and further updates are done only on the map. WDYT? It can be even made extendable so that a user can put its own slice definitions but this is maybe an overkill.", "url": "https://github.com/artipie/artipie/pull/77#discussion_r410685517", "createdAt": "2020-04-18T11:24:59Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/Pie.java", "diffHunk": "@@ -117,6 +118,9 @@ public Response response(final String line, final Iterable<Map.Entry<String, Str\n                     case \"gem\":\n                         slice = CompletableFuture.completedStage(new GemSlice(storage));\n                         break;\n+                    case \"rpm\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f23333586a19e0a206a26bfa8969d5c324a24cbd"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b73df77a7405e9a0dd3d32b5fde969f204d4f3cb", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/b73df77a7405e9a0dd3d32b5fde969f204d4f3cb", "committedDate": "2020-04-20T05:51:13Z", "message": "#76 - (cr) added todo for refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e03fecca0d3e93f9086cac6d552780d723e1e5b7", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/e03fecca0d3e93f9086cac6d552780d723e1e5b7", "committedDate": "2020-04-20T05:56:22Z", "message": "Merge branch 'master' into 76"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3158, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}