{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NzYwNzk3", "number": 710, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo1MjowOFrOExF-7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo1MjowOFrOExF-7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTEzNzA5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/npm/NpmITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo1MjowOFrOHnCrIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo1MjowOFrOHnCrIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcwMDMyMw==", "bodyText": "@genryxy this method's name is misleading, looks like the method itself is adding package to repository. Please correct method name", "url": "https://github.com/artipie/artipie/pull/710#discussion_r510700323", "createdAt": "2020-10-23T07:52:08Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/npm/NpmITCase.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.npm;\n+\n+import com.artipie.ArtipieServer;\n+import com.artipie.RepoConfigYaml;\n+import com.artipie.RepoPerms;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.asto.test.TestResource;\n+import com.artipie.nuget.RandomFreePort;\n+import com.jcabi.log.Logger;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Arrays;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.hamcrest.text.StringContainsInOrder;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.condition.EnabledOnOs;\n+import org.junit.jupiter.api.condition.OS;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+\n+/**\n+ * Integration tests for Npm repository.\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n+ * @since 0.12\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+@EnabledOnOs({OS.LINUX, OS.MAC})\n+final class NpmITCase {\n+\n+    /**\n+     * Temporary directory for all tests.\n+     * @checkstyle VisibilityModifierCheck (3 lines)\n+     */\n+    @TempDir\n+    Path tmp;\n+\n+    /**\n+     * Tested Artipie server.\n+     */\n+    private ArtipieServer server;\n+\n+    /**\n+     * Container.\n+     */\n+    private GenericContainer<?> cntn;\n+\n+    /**\n+     * Storage.\n+     */\n+    private Storage storage;\n+\n+    /**\n+     * URL 'http://host:port/my-npm/'.\n+     */\n+    private String url;\n+\n+    /**\n+     * Artipie server port.\n+     */\n+    private int port;\n+\n+    @Test\n+    void npmInstall() throws Exception {\n+        final boolean anonymous = true;\n+        final String proj = \"@hello/simple-npm-project\";\n+        this.init(anonymous);\n+        this.prepareDirectory(proj);\n+        MatcherAssert.assertThat(\n+            this.exec(\"npm\", \"install\", proj, \"--registry\", this.url),\n+            new StringContainsInOrder(\n+                Arrays.asList(\n+                    String.format(\"+ %s@1.0.1\", proj),\n+                    \"added 1 package\"\n+                )\n+            )\n+        );\n+        MatcherAssert.assertThat(\n+            \"Installed project should contain index.js\",\n+            this.inNpmModule(proj, \"index.js\"),\n+            new IsEqual<>(true)\n+        );\n+        MatcherAssert.assertThat(\n+            \"Installed project should contain package.json\",\n+            this.inNpmModule(proj, \"package.json\"),\n+            new IsEqual<>(true)\n+        );\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        this.server.stop();\n+        this.cntn.stop();\n+    }\n+\n+    private void init(final boolean anonymous) throws IOException {\n+        this.storage = new FileStorage(this.tmp);\n+        this.port = new RandomFreePort().value();\n+        this.server = new ArtipieServer(\n+            this.tmp, \"my-npm\", this.config(anonymous).toString(), this.port\n+        );\n+        this.server.start();\n+        this.url = String.format(\"http://host.testcontainers.internal:%d/my-npm/\", this.port);\n+        Testcontainers.exposeHostPorts(this.port);\n+        this.cntn = new GenericContainer<>(\"node:14-alpine\")\n+            .withCommand(\"tail\", \"-f\", \"/dev/null\")\n+            .withWorkingDirectory(\"/home/\")\n+            .withFileSystemBind(this.tmp.toString(), \"/home\");\n+        this.cntn.start();\n+    }\n+\n+    private void prepareDirectory(final String proj) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27ccf59025af8823c7da2273d936fed90c5a44c"}, "originalPosition": 139}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2073, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}