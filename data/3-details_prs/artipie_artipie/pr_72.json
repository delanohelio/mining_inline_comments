{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNzQyNTIw", "number": 72, "title": "#71 Auth: implemented RpPermissions", "bodyText": "As requested in #71 I've implemented RpPermissions, also we agreed to change format of the permissions section as suggested here.", "createdAt": "2020-04-15T12:55:40Z", "url": "https://github.com/artipie/artipie/pull/72", "merged": true, "mergeCommit": {"oid": "6954805ba8e2a66000b7b2b62693ac63a966760c"}, "closed": true, "closedAt": "2020-04-17T08:37:13Z", "author": {"login": "olenagerasimova"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX3mGWAH2gAyNDAzNzQyNTIwOjFlMmViMTU2ZDZkZWU0YmY0OWY2MDcxZDM3NDRiMWQyZTVmZTA4OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYc5_igFqTM5NTI1NDY0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1e2eb156d6dee4bf49f6071d3744b1d2e5fe0893", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/artipie/commit/1e2eb156d6dee4bf49f6071d3744b1d2e5fe0893", "committedDate": "2020-04-15T12:52:44Z", "message": "#71 Auth: implemented RpPermissions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNzQ4MDM1", "url": "https://github.com/artipie/artipie/pull/72#pullrequestreview-393748035", "createdAt": "2020-04-15T12:59:07Z", "commit": {"oid": "1e2eb156d6dee4bf49f6071d3744b1d2e5fe0893"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMjo1OTowN1rOGF4e8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzowODowM1rOGF40ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgyMTQ5MQ==", "bodyText": "@olenagerasimova  you have logic in constructor, as far as I know it's not accepted here. And I personally think it should be moved to a method.", "url": "https://github.com/artipie/artipie/pull/72#discussion_r408821491", "createdAt": "2020-04-15T12:59:07Z", "author": {"login": "Guseyn"}, "path": "src/main/java/com/artipie/RpPermissions.java", "diffHunk": "@@ -23,38 +23,70 @@\n  */\n package com.artipie;\n \n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlSequence;\n import com.artipie.http.auth.Permissions;\n import java.io.File;\n-import org.apache.commons.lang3.NotImplementedException;\n+import java.io.IOException;\n \n /**\n  * Repository permissions: this implementation is based on\n  * on repository yaml configuration file.\n  * @since 0.2\n- * @todo #69:30min Implement this interface to read and process permissions from\n- *  repository yaml configuration file. Test is already implemented, see {@link RpPermissionsTest},\n- *  don't forget to enable is when this class is ready. Remove also PMD suppressions please.\n- *  For more details check issue #69.\n  */\n-@SuppressWarnings({\"PMD.UnusedPrivateField\", \"PMD.SingularField\"})\n public final class RpPermissions implements Permissions {\n \n     /**\n-     * Repository yaml configuration file.\n+     * YAML storage settings.\n      */\n-    private final File conf;\n+    private final YamlMapping yaml;\n \n     /**\n      * Ctor.\n-     * @param conf Conf file\n+     * @param conf Config file\n      */\n     public RpPermissions(final File conf) {\n-        this.conf = conf;\n+        this(readYaml(conf));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e2eb156d6dee4bf49f6071d3744b1d2e5fe0893"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgyNDI0OQ==", "bodyText": "@olenagerasimova  add empty line in the end of the file", "url": "https://github.com/artipie/artipie/pull/72#discussion_r408824249", "createdAt": "2020-04-15T13:03:40Z", "author": {"login": "Guseyn"}, "path": "src/test/resources/repo_permissions.yml", "diffHunk": "@@ -9,12 +9,12 @@ repo:\n     # john can deploy and delete\n     # jane can only deploy\n     # any user can download\n-    - admin:\n-        - \"*\"\n-    - john:\n-        - deploy\n-        - delete\n-    - jane:\n-        - deploy\n-    - \"*\":\n-        - download\n\\ No newline at end of file\n+    admin:\n+      - \\*\n+    john:\n+      - deploy\n+      - delete\n+    jane:\n+      - deploy\n+    \\*:\n+      - download", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e2eb156d6dee4bf49f6071d3744b1d2e5fe0893"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgyNjk4MQ==", "bodyText": "@olenagerasimova  Checks if permissions sequence has given an action.", "url": "https://github.com/artipie/artipie/pull/72#discussion_r408826981", "createdAt": "2020-04-15T13:08:03Z", "author": {"login": "Guseyn"}, "path": "src/main/java/com/artipie/RpPermissions.java", "diffHunk": "@@ -23,38 +23,70 @@\n  */\n package com.artipie;\n \n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlSequence;\n import com.artipie.http.auth.Permissions;\n import java.io.File;\n-import org.apache.commons.lang3.NotImplementedException;\n+import java.io.IOException;\n \n /**\n  * Repository permissions: this implementation is based on\n  * on repository yaml configuration file.\n  * @since 0.2\n- * @todo #69:30min Implement this interface to read and process permissions from\n- *  repository yaml configuration file. Test is already implemented, see {@link RpPermissionsTest},\n- *  don't forget to enable is when this class is ready. Remove also PMD suppressions please.\n- *  For more details check issue #69.\n  */\n-@SuppressWarnings({\"PMD.UnusedPrivateField\", \"PMD.SingularField\"})\n public final class RpPermissions implements Permissions {\n \n     /**\n-     * Repository yaml configuration file.\n+     * YAML storage settings.\n      */\n-    private final File conf;\n+    private final YamlMapping yaml;\n \n     /**\n      * Ctor.\n-     * @param conf Conf file\n+     * @param conf Config file\n      */\n     public RpPermissions(final File conf) {\n-        this.conf = conf;\n+        this(readYaml(conf));\n+    }\n+\n+    /**\n+     * Ctor.\n+     * @param yaml Configuration yaml\n+     */\n+    public RpPermissions(final YamlMapping yaml) {\n+        this.yaml = yaml;\n     }\n \n     @Override\n     public boolean allowed(final String name, final String action) {\n-        throw new NotImplementedException(\"this method is not yet implemented\");\n+        final YamlMapping all = this.yaml.yamlMapping(\"permissions\");\n+        return check(all.yamlSequence(name), action) || check(all.yamlSequence(\"*\"), action);\n+    }\n+\n+    /**\n+     * Read provided file into Yaml object.\n+     * @param conf File\n+     * @return Yaml mapping\n+     */\n+    private static YamlMapping readYaml(final File conf) {\n+        try {\n+            return Yaml.createYamlInput(conf).readYamlMapping().yamlMapping(\"repo\");\n+        } catch (final IOException ex) {\n+            throw new IllegalArgumentException(\"Invalid configuration file\", ex);\n+        }\n+    }\n+\n+    /**\n+     * Checks if permissions sequence has given action.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e2eb156d6dee4bf49f6071d3744b1d2e5fe0893"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ec6a969b0697a77dfea354f573ff8ef7a316b79", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/artipie/commit/8ec6a969b0697a77dfea354f573ff8ef7a316b79", "committedDate": "2020-04-15T17:57:13Z", "message": "#71 CR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzOTUwNjk3", "url": "https://github.com/artipie/artipie/pull/72#pullrequestreview-393950697", "createdAt": "2020-04-15T16:42:41Z", "commit": {"oid": "1e2eb156d6dee4bf49f6071d3744b1d2e5fe0893"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo0Mjo0MVrOGGCY2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo0Mjo0MVrOGGCY2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk4Mzc3MQ==", "bodyText": "@olenagerasimova alright", "url": "https://github.com/artipie/artipie/pull/72#discussion_r408983771", "createdAt": "2020-04-15T16:42:41Z", "author": {"login": "Guseyn"}, "path": "src/main/java/com/artipie/RpPermissions.java", "diffHunk": "@@ -23,38 +23,70 @@\n  */\n package com.artipie;\n \n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlSequence;\n import com.artipie.http.auth.Permissions;\n import java.io.File;\n-import org.apache.commons.lang3.NotImplementedException;\n+import java.io.IOException;\n \n /**\n  * Repository permissions: this implementation is based on\n  * on repository yaml configuration file.\n  * @since 0.2\n- * @todo #69:30min Implement this interface to read and process permissions from\n- *  repository yaml configuration file. Test is already implemented, see {@link RpPermissionsTest},\n- *  don't forget to enable is when this class is ready. Remove also PMD suppressions please.\n- *  For more details check issue #69.\n  */\n-@SuppressWarnings({\"PMD.UnusedPrivateField\", \"PMD.SingularField\"})\n public final class RpPermissions implements Permissions {\n \n     /**\n-     * Repository yaml configuration file.\n+     * YAML storage settings.\n      */\n-    private final File conf;\n+    private final YamlMapping yaml;\n \n     /**\n      * Ctor.\n-     * @param conf Conf file\n+     * @param conf Config file\n      */\n     public RpPermissions(final File conf) {\n-        this.conf = conf;\n+        this(readYaml(conf));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgyMTQ5MQ=="}, "originalCommit": {"oid": "1e2eb156d6dee4bf49f6071d3744b1d2e5fe0893"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MTkzMDMx", "url": "https://github.com/artipie/artipie/pull/72#pullrequestreview-395193031", "createdAt": "2020-04-17T06:32:55Z", "commit": {"oid": "8ec6a969b0697a77dfea354f573ff8ef7a316b79"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjozMjo1NVrOGHBhyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjo0NDoxOVrOGHBxgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAxODI1MQ==", "bodyText": "@olenagerasimova let's extract the * to a static variable and use it in check and allowed methods.", "url": "https://github.com/artipie/artipie/pull/72#discussion_r410018251", "createdAt": "2020-04-17T06:32:55Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/RpPermissions.java", "diffHunk": "@@ -23,38 +23,70 @@\n  */\n package com.artipie;\n \n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlSequence;\n import com.artipie.http.auth.Permissions;\n import java.io.File;\n-import org.apache.commons.lang3.NotImplementedException;\n+import java.io.IOException;\n \n /**\n  * Repository permissions: this implementation is based on\n  * on repository yaml configuration file.\n  * @since 0.2\n- * @todo #69:30min Implement this interface to read and process permissions from\n- *  repository yaml configuration file. Test is already implemented, see {@link RpPermissionsTest},\n- *  don't forget to enable is when this class is ready. Remove also PMD suppressions please.\n- *  For more details check issue #69.\n  */\n-@SuppressWarnings({\"PMD.UnusedPrivateField\", \"PMD.SingularField\"})\n public final class RpPermissions implements Permissions {\n \n     /**\n-     * Repository yaml configuration file.\n+     * YAML storage settings.\n      */\n-    private final File conf;\n+    private final YamlMapping yaml;\n \n     /**\n      * Ctor.\n-     * @param conf Conf file\n+     * @param conf Config file\n      */\n     public RpPermissions(final File conf) {\n-        this.conf = conf;\n+        this(readYaml(conf));\n+    }\n+\n+    /**\n+     * Ctor.\n+     * @param yaml Configuration yaml\n+     */\n+    public RpPermissions(final YamlMapping yaml) {\n+        this.yaml = yaml;\n     }\n \n     @Override\n     public boolean allowed(final String name, final String action) {\n-        throw new NotImplementedException(\"this method is not yet implemented\");\n+        final YamlMapping all = this.yaml.yamlMapping(\"permissions\");\n+        return check(all.yamlSequence(name), action) || check(all.yamlSequence(\"*\"), action);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ec6a969b0697a77dfea354f573ff8ef7a316b79"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyMjI3NA==", "bodyText": "@olenagerasimova Im thinking about testing \"negative\" scenarios which can be possibly defined in yml file to validate that no exceptions are raised. For instance\n- john:\n    -\n    - delete\n- jane:\n\nWDYT is it worth testing?", "url": "https://github.com/artipie/artipie/pull/72#discussion_r410022274", "createdAt": "2020-04-17T06:44:19Z", "author": {"login": "Vatavuk"}, "path": "src/test/resources/repo_permissions.yml", "diffHunk": "@@ -9,12 +9,12 @@ repo:\n     # john can deploy and delete\n     # jane can only deploy\n     # any user can download\n-    - admin:\n-        - \"*\"\n-    - john:\n-        - deploy\n-        - delete\n-    - jane:\n-        - deploy\n-    - \"*\":\n-        - download\n\\ No newline at end of file\n+    admin:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ec6a969b0697a77dfea354f573ff8ef7a316b79"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b44295e400ff6d1b74c89f304f859ef64ab77b7", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/artipie/commit/4b44295e400ff6d1b74c89f304f859ef64ab77b7", "committedDate": "2020-04-17T07:43:15Z", "message": "#71 CR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715742ca60b9d0fa0e1cccfa4b11d466542b0149", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/artipie/commit/715742ca60b9d0fa0e1cccfa4b11d466542b0149", "committedDate": "2020-04-17T07:44:24Z", "message": "Merge branch 'master' of https://github.com/artipie/artipie into 71"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjU0NjQ3", "url": "https://github.com/artipie/artipie/pull/72#pullrequestreview-395254647", "createdAt": "2020-04-17T08:20:57Z", "commit": {"oid": "715742ca60b9d0fa0e1cccfa4b11d466542b0149"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3155, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}