{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MzAzNTM3", "number": 748, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0NTo0NVrOE3yTcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0NjozMVrOE3yUsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTMxMzE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/api/ApiRepoCreateSlice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0NTo0NVrOHxVYeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0NTo0NVrOHxVYeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5MjYwMQ==", "bodyText": "@olenagerasimova do not really understand why it is needed to keep this Single.fromCallable(...) part, it could be simplified to new RxStorageWrapper(this.storage).exists().map(...)", "url": "https://github.com/artipie/artipie/pull/748#discussion_r521492601", "createdAt": "2020-11-11T16:45:45Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/api/ApiRepoCreateSlice.java", "diffHunk": "@@ -86,13 +86,13 @@ public Response response(final String line,\n         // @checkstyle LineLengthCheck (50 lines)\n         // @checkstyle ReturnCountCheck (50 lines)\n         return new AsyncResponse(\n-            Single.fromCallable(this.settings::storage).map(RxStorageWrapper::new).flatMap(\n-                storage -> storage.exists(key).flatMap(\n+            Single.fromCallable(() -> this.storage).map(RxStorageWrapper::new).flatMap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5705a7104e1ec558bae0ee889deb3bc185b23776"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTMxNDMwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/api/ApiRepoGetSlice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0NjowMlrOHxVZMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0NjowMlrOHxVZMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5Mjc4NQ==", "bodyText": "@olenagerasimova same concern here", "url": "https://github.com/artipie/artipie/pull/748#discussion_r521492785", "createdAt": "2020-11-11T16:46:02Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/api/ApiRepoGetSlice.java", "diffHunk": "@@ -83,10 +83,10 @@ public Response response(final String line, final Iterable<Map.Entry<String, Str\n         final Key.From key = new Key.From(String.format(\"%s.yaml\", name));\n         // @checkstyle LineLengthCheck (50 lines)\n         return new AsyncResponse(\n-            Single.fromCallable(this.settings::storage).map(RxStorageWrapper::new).flatMap(\n-                storage -> storage.exists(key).filter(exists -> exists)\n+            Single.fromCallable(() -> this.storage).map(RxStorageWrapper::new).flatMap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5705a7104e1ec558bae0ee889deb3bc185b23776"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTMxNjMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/api/ApiRepoListSlice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0NjozMVrOHxVaZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0NjozMVrOHxVaZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5MzA5NA==", "bodyText": "@olenagerasimova and here", "url": "https://github.com/artipie/artipie/pull/748#discussion_r521493094", "createdAt": "2020-11-11T16:46:31Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/api/ApiRepoListSlice.java", "diffHunk": "@@ -74,7 +74,7 @@ public Response response(final String line, final Iterable<Map.Entry<String, Str\n         }\n         final String user = matcher.group(\"user\");\n         return new AsyncResponse(\n-            Single.fromCallable(this.settings::storage)\n+            Single.fromCallable(() -> this.storage)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5705a7104e1ec558bae0ee889deb3bc185b23776"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2095, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}