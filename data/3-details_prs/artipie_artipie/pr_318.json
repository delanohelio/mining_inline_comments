{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MjU1NzQy", "number": 318, "title": "Authentication by github tokens", "bodyText": "#285 - authentication by GitHub tokens:\n\nadded GitHub auth provider\nadded chained auth provider to compose different providers\nadded cached auth decorator to avoid fetching GitHub API too frequently\nadded puzzles for cache cleanup and auth settings configuration", "createdAt": "2020-07-13T13:27:18Z", "url": "https://github.com/artipie/artipie/pull/318", "merged": true, "mergeCommit": {"oid": "ffa80d987bd1476a2c360facbcb8d37f7d54810a"}, "closed": true, "closedAt": "2020-07-15T12:42:32Z", "author": {"login": "g4s8"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0hZzsAH2gAyNDQ4MjU1NzQyOmRjNzMzMDI2NWJmNGQzOWVmYjlkMzQ0NGQ3ZjQ1NDQwMWU1NDM3ZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1J6BDgH2gAyNDQ4MjU1NzQyOjQ2ZjlmZWY0N2RiYjY1OWQ5M2NiYTRjOTc4ZGEwZTQ0ODgzMjNlMWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/dc7330265bf4d39efb9d3444d7f454401e5437dd", "committedDate": "2020-07-13T13:25:12Z", "message": "#285 - authentication by github tokens"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDcwMzI5", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447470329", "createdAt": "2020-07-13T17:50:24Z", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNzo1MDoyNVrOGwzR0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODoxMzowNlrOGw0Euw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgyNDk3Nw==", "bodyText": "@g4s8 seems like \"not\" should be \"now\"", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453824977", "createdAt": "2020-07-13T17:50:25Z", "author": {"login": "olenagerasimova"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -45,6 +47,11 @@\n  * Settings built from YAML.\n  *\n  * @since 0.1\n+ * @todo #285:30min Settings configuration for GitHub auth.\n+ *  Add additional settings configuration for GitHub authentication,\n+ *  not it's applied by default to auth from yaml using chained authentication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgyOTY1Mw==", "bodyText": "@g4s8 guava has time evicted cache implementation, I'd suggest simply todo to use it here", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453829653", "createdAt": "2020-07-13T17:58:23Z", "author": {"login": "olenagerasimova"}, "path": "src/main/java/com/artipie/auth/CachedAuth.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.auth;\n+\n+import com.artipie.http.auth.Authentication;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentMap;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import org.jruby.util.collections.ConcurrentWeakHashMap;\n+\n+/**\n+ * Cached authentication decorator.\n+ * <p>\n+ * It remembers the result of decorated authentication provider and returns it\n+ * instead of calling origin authentication.\n+ * </p>\n+ * @since 0.10\n+ * @todo #285:30min Specify expiration time configuration.\n+ *  Instead of using scheduled executor to clean-up all cache map, use\n+ *  some configuration to clean-up only expired items, e.g. if token was not accessed for\n+ *  X minutes, then remove only this token.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgzNzU0NQ==", "bodyText": "@g4s8 hm, assertion message usually (in EO style code) specify that is expected, not what was wrong. I'm not sure this is some kind of rule though and hamcrest does not specify what we should put in the message...", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453837545", "createdAt": "2020-07-13T18:12:19Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/auth/CachedAuthTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.auth;\n+\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import org.cactoos.map.MapEntry;\n+import org.cactoos.map.MapOf;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link CachedAuth}.\n+ *\n+ * @since 0.10\n+ */\n+final class CachedAuthTest {\n+\n+    @Test\n+    void usesCache() {\n+        final String username = \"test/user\";\n+        final String user = \"user\";\n+        MatcherAssert.assertThat(\n+            new CachedAuth(\n+                (usr, pass) -> Optional.empty(),\n+                new ConcurrentHashMap<>(new MapOf<>(new MapEntry<>(username, Optional.of(user))))\n+            ).user(username, \"any\").orElseThrow(),\n+            new IsEqual<>(user)\n+        );\n+    }\n+\n+    @Test\n+    void callsOriginOnlyOnce() {\n+        final String username = \"usr\";\n+        final AtomicInteger counter = new AtomicInteger();\n+        final CachedAuth target = new CachedAuth(\n+            (usr, pass) -> Optional.of(String.format(\"%s-%d\", usr, counter.incrementAndGet())),\n+            new ConcurrentHashMap<>()\n+        );\n+        final String expected = \"usr-1\";\n+        MatcherAssert.assertThat(\n+            \"Wrong user on first cache call\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzgzODAxMQ==", "bodyText": "@g4s8 same here", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453838011", "createdAt": "2020-07-13T18:13:06Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/auth/CachedAuthTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.auth;\n+\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import org.cactoos.map.MapEntry;\n+import org.cactoos.map.MapOf;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link CachedAuth}.\n+ *\n+ * @since 0.10\n+ */\n+final class CachedAuthTest {\n+\n+    @Test\n+    void usesCache() {\n+        final String username = \"test/user\";\n+        final String user = \"user\";\n+        MatcherAssert.assertThat(\n+            new CachedAuth(\n+                (usr, pass) -> Optional.empty(),\n+                new ConcurrentHashMap<>(new MapOf<>(new MapEntry<>(username, Optional.of(user))))\n+            ).user(username, \"any\").orElseThrow(),\n+            new IsEqual<>(user)\n+        );\n+    }\n+\n+    @Test\n+    void callsOriginOnlyOnce() {\n+        final String username = \"usr\";\n+        final AtomicInteger counter = new AtomicInteger();\n+        final CachedAuth target = new CachedAuth(\n+            (usr, pass) -> Optional.of(String.format(\"%s-%d\", usr, counter.incrementAndGet())),\n+            new ConcurrentHashMap<>()\n+        );\n+        final String expected = \"usr-1\";\n+        MatcherAssert.assertThat(\n+            \"Wrong user on first cache call\",\n+            target.user(username, \"\").orElseThrow(),\n+            new IsEqual<>(expected)\n+        );\n+        MatcherAssert.assertThat(\n+            \"Wrong user on second cache call\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTE2NzQ1", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447516745", "createdAt": "2020-07-13T18:56:38Z", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODo1NjozOFrOGw1nzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODo1NjozOFrOGw1nzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2MzM3Mg==", "bodyText": "No reference to the official docs.\nwhat does \"prefixed by provider name username\" mean?", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453863372", "createdAt": "2020-07-13T18:56:38Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/auth/GithubAuth.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.auth;\n+\n+import com.artipie.http.auth.Authentication;\n+import com.jcabi.github.RtGithub;\n+import java.io.IOException;\n+import java.util.Locale;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * GitHub authentication uses prefixed by provider name username and personal access token", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTE5NjEy", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447519612", "createdAt": "2020-07-13T19:00:46Z", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTowMDo0NlrOGw1xPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTowMDo0NlrOGw1xPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2NTc5MA==", "bodyText": "The strangest general description I saw in my life. Can you explain for which purpose you plan to use it? And in which cases it is useful?", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453865790", "createdAt": "2020-07-13T19:00:46Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/auth/ChainedAuth.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.auth;\n+\n+import com.artipie.http.auth.Authentication;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * Chained authentication provider, composed by multiple", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTIxMDc0", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447521074", "createdAt": "2020-07-13T19:02:57Z", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTowMjo1N1rOGw12EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTowMjo1N1rOGw12EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2NzAyNA==", "bodyText": "The library is synchronous, it would not work well. You can make HTTP requests to Github with Vert.x HTTP client.", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453867024", "createdAt": "2020-07-13T19:02:57Z", "author": {"login": "Sammers21"}, "path": "pom.xml", "diffHunk": "@@ -115,6 +115,11 @@ SOFTWARE.\n       <artifactId>asto</artifactId>\n       <version>0.23.1</version>\n     </dependency>\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTI2NTc2", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447526576", "createdAt": "2020-07-13T19:11:19Z", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTI4NDM0", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447528434", "createdAt": "2020-07-13T19:14:19Z", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToxNDoxOVrOGw2OBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToxNDoxOVrOGw2OBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3MzE1OA==", "bodyText": "I can't understand the description. Can you explain what already done and what is planned to do in the puzzle?", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453873158", "createdAt": "2020-07-13T19:14:19Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -45,6 +47,11 @@\n  * Settings built from YAML.\n  *\n  * @since 0.1\n+ * @todo #285:30min Settings configuration for GitHub auth.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTMxNzYw", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447531760", "createdAt": "2020-07-13T19:19:27Z", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToxOToyN1rOGw2Y6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOToxOToyN1rOGw2Y6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg3NTk0Nw==", "bodyText": "The if statement looks ugly", "url": "https://github.com/artipie/artipie/pull/318#discussion_r453875947", "createdAt": "2020-07-13T19:19:27Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/auth/GithubAuth.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.auth;\n+\n+import com.artipie.http.auth.Authentication;\n+import com.jcabi.github.RtGithub;\n+import java.io.IOException;\n+import java.util.Locale;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * GitHub authentication uses prefixed by provider name username and personal access token\n+ * as a password.\n+ * @implNote This implementation is not case sensitive.\n+ * @since 0.10\n+ */\n+public final class GithubAuth implements Authentication {\n+\n+    /**\n+     * Username pattern, starts with provider name {@code github.com}, slash,\n+     * and GitHub username, e.g. {@code github.com/octocat}.\n+     */\n+    private static final Pattern PTN_NAME = Pattern.compile(\"^github\\\\.com/(.+)$\");\n+\n+    /**\n+     * Github username resolver by personal access token.\n+     */\n+    private final Function<String, String> github;\n+\n+    /**\n+     * New GitHub authentication.\n+     * @checkstyle ReturnCountCheck (10 lines)\n+     */\n+    public GithubAuth() {\n+        this(\n+            token -> {\n+                try {\n+                    return new RtGithub(token).users().self().login();\n+                } catch (final IOException unauthorized) {\n+                    return \"\";\n+                }\n+            }\n+        );\n+    }\n+\n+    /**\n+     * Primary constructor.\n+     * @param github Github username resolver\n+     */\n+    GithubAuth(final Function<String, String> github) {\n+        this.github = github;\n+    }\n+\n+    @Override\n+    public Optional<String> user(final String username, final String password) {\n+        Optional<String> result = Optional.empty();\n+        final Matcher matcher = GithubAuth.PTN_NAME.matcher(username);\n+        if (matcher.matches()) {\n+            final String login = this.github.apply(password).toLowerCase(Locale.US);\n+            if (\n+                Objects.equals(login, matcher.group(1).toLowerCase(Locale.US))\n+            ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTM0OTk5", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447534999", "createdAt": "2020-07-13T19:24:14Z", "commit": {"oid": "dc7330265bf4d39efb9d3444d7f454401e5437dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63f377d39cc64aa1aa886cacd32cfa6701888e65", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/63f377d39cc64aa1aa886cacd32cfa6701888e65", "committedDate": "2020-07-14T07:51:45Z", "message": "#285 - github auth review fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTM0ODI1", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447934825", "createdAt": "2020-07-14T09:19:02Z", "commit": {"oid": "63f377d39cc64aa1aa886cacd32cfa6701888e65"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTU1MjA1", "url": "https://github.com/artipie/artipie/pull/318#pullrequestreview-447955205", "createdAt": "2020-07-14T09:46:43Z", "commit": {"oid": "63f377d39cc64aa1aa886cacd32cfa6701888e65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTo0Njo0M1rOGxMZSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTo0Njo0M1rOGxMZSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIzNjQ5MQ==", "bodyText": "Resolves tokens to username? Right? can you specify it?", "url": "https://github.com/artipie/artipie/pull/318#discussion_r454236491", "createdAt": "2020-07-14T09:46:43Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/auth/GithubAuth.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.auth;\n+\n+import com.artipie.http.auth.Authentication;\n+import com.jcabi.github.RtGithub;\n+import java.io.IOException;\n+import java.util.Locale;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.function.Function;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+/**\n+ * GitHub authentication uses username prefixed by provider name {@code github.com}\n+ * and personal access token as a password.\n+ * See <a href=\"https://developer.github.com/v3/oauth_authorizations/\">GitHub docs</a>\n+ * for details.\n+ * @implNote This implementation is not case sensitive.\n+ * @since 0.10\n+ */\n+public final class GithubAuth implements Authentication {\n+\n+    /**\n+     * Username pattern, starts with provider name {@code github.com}, slash,\n+     * and GitHub username, e.g. {@code github.com/octocat}.\n+     */\n+    private static final Pattern PTN_NAME = Pattern.compile(\"^github\\\\.com/(.+)$\");\n+\n+    /**\n+     * Github username resolver by personal access token.\n+     */\n+    private final Function<String, String> github;\n+\n+    /**\n+     * New GitHub authentication.\n+     * @checkstyle ReturnCountCheck (10 lines)\n+     */\n+    public GithubAuth() {\n+        this(\n+            token -> {\n+                try {\n+                    return new RtGithub(token).users().self().login();\n+                } catch (final IOException unauthorized) {\n+                    return \"\";\n+                }\n+            }\n+        );\n+    }\n+\n+    /**\n+     * Primary constructor.\n+     * @param github Github username resolver", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f377d39cc64aa1aa886cacd32cfa6701888e65"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18380f66db404de355fd0e3b6cecc4edd4b627cd", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/18380f66db404de355fd0e3b6cecc4edd4b627cd", "committedDate": "2020-07-15T07:33:11Z", "message": "#285 - more javadocs, review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a74a1bcd857accc79f3a4e72bbdb842a11c0530", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/9a74a1bcd857accc79f3a4e72bbdb842a11c0530", "committedDate": "2020-07-15T07:34:46Z", "message": "Merge branch 'master' into 285"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46f9fef47dbb659d93cba4c978da0e4488323e1a", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/artipie/commit/46f9fef47dbb659d93cba4c978da0e4488323e1a", "committedDate": "2020-07-15T12:36:35Z", "message": "Merge branch 'master' into 285"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3040, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}