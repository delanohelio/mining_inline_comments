{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMDk2MjE5", "number": 501, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDozMTo1OFrOEcAc-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDozNToxOVrOEcAhNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODAzMDAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/RepoPermissions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDozMTo1OFrOHGR7Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDozMTo1OFrOHGR7Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM0NzE3OQ==", "bodyText": "@olenagerasimova I'd suggest to remove dynamic casting and change return type to <? extends YamlMapping> or specify type param for to method as <YamlMapping>", "url": "https://github.com/artipie/artipie/pull/501#discussion_r476347179", "createdAt": "2020-08-25T10:31:58Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/RepoPermissions.java", "diffHunk": "@@ -110,8 +118,37 @@ public FromSettings(final Settings settings) {\n         }\n \n         @Override\n-        public CompletionStage<Map<String, List<String>>> get(final String repo) {\n-            throw new UnsupportedOperationException(\"To implemented later\");\n+        public CompletionStage<Map<String, List<String>>> permissions(final String repo) {\n+            return this.yaml(new Key.From(String.format(\"%s.yaml\", repo))).thenApply(\n+                yaml -> Optional.ofNullable(yaml.yamlMapping(\"repo\").yamlMapping(\"permissions\"))\n+                .map(\n+                    perms -> {\n+                        final Map<String, List<String>> res = new HashMap<>();\n+                        perms.keys().forEach(\n+                            node -> res.put(\n+                                node.asScalar().value(),\n+                                perms.yamlSequence(node.asScalar().value()).values().stream()\n+                                .map(item -> Scalar.class.cast(item).value())\n+                                    .collect(Collectors.toList())\n+                            )\n+                        );\n+                        return res;\n+                    }\n+                ).orElse(Collections.emptyMap())\n+            );\n+        }\n+\n+        /**\n+         * Credentials as yaml.\n+         * @param key Repo settings key\n+         * @return Completion action with yaml\n+         */\n+        private CompletionStage<YamlMapping> yaml(final Key key) {\n+            return new RxStorageWrapper(this.storage())\n+                .value(key)\n+                .to(ContentAs.YAML)\n+                .to(SingleInterop.get())\n+                .thenApply(yaml -> (YamlMapping) yaml);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff1477c57ada40bd6fc5d782befaeb87f8721a7"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODA0MDg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/RepoPermissions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDozNToxOVrOHGSB7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMDozNToxOVrOHGSB7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjM0ODkwOQ==", "bodyText": "@olenagerasimova dynamic casting via Scalar.class.cast(item) could be avoided by using item.asScalar() method", "url": "https://github.com/artipie/artipie/pull/501#discussion_r476348909", "createdAt": "2020-08-25T10:35:19Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/RepoPermissions.java", "diffHunk": "@@ -110,8 +118,37 @@ public FromSettings(final Settings settings) {\n         }\n \n         @Override\n-        public CompletionStage<Map<String, List<String>>> get(final String repo) {\n-            throw new UnsupportedOperationException(\"To implemented later\");\n+        public CompletionStage<Map<String, List<String>>> permissions(final String repo) {\n+            return this.yaml(new Key.From(String.format(\"%s.yaml\", repo))).thenApply(\n+                yaml -> Optional.ofNullable(yaml.yamlMapping(\"repo\").yamlMapping(\"permissions\"))\n+                .map(\n+                    perms -> {\n+                        final Map<String, List<String>> res = new HashMap<>();\n+                        perms.keys().forEach(\n+                            node -> res.put(\n+                                node.asScalar().value(),\n+                                perms.yamlSequence(node.asScalar().value()).values().stream()\n+                                .map(item -> Scalar.class.cast(item).value())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff1477c57ada40bd6fc5d782befaeb87f8721a7"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2135, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}