{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MDQ0MTY5", "number": 532, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDoyODozN1rOEeP7sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDoyODozN1rOEeP7sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTUzNzc4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/http/DockerRoutingSliceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDoyODozN1rOHJzErg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMDoyODozN1rOHJzErg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDAzNjAxNA==", "bodyText": "@olegmoz you can use SliceHasResponse here:\nMatcherAssert.assertThat(\n  new DockerRoutingSlice(...),\n  new SliceHasResponse(\n    new RsHasStatus(status),\n    new RequestLine(...)\n  )\n)", "url": "https://github.com/artipie/artipie/pull/532#discussion_r480036014", "createdAt": "2020-08-31T10:28:37Z", "author": {"login": "g4s8"}, "path": "src/test/java/com/artipie/http/DockerRoutingSliceTest.java", "diffHunk": "@@ -54,19 +70,37 @@ void ignoresNonDockerRequests() throws Exception {\n         final String path = \"/repo/name\";\n         verify(\n             new DockerRoutingSlice(\n+                new Settings.Fake(),\n                 new AssertSlice(new RqLineHasUri(new RqLineHasUri.HasPath(path)))\n             ),\n             path\n         );\n     }\n \n     @Test\n-    void emptyDockerRequest() throws Exception {\n-        verify(\n-            new DockerRoutingSlice(\n-                new AssertSlice(new RqLineHasUri(new RqLineHasUri.HasPath(\"\")))\n-            ),\n-            \"/v2\"\n+    void emptyDockerRequest() {\n+        final String username = \"alice\";\n+        final String password = \"letmein\";\n+        final Response response = new DockerRoutingSlice(\n+            new SettingsWithAuth(new Authentication.Single(username, password)),\n+            (line, headers, body) -> {\n+                throw new UnsupportedOperationException();\n+            }\n+        ).response(\n+            new RequestLine(RqMethod.GET, \"/v2/\").toString(),\n+            new Headers.From(new Authorization.Basic(username, password)),\n+            Content.EMPTY\n+        );\n+        MatcherAssert.assertThat(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd4682ae03204e16f13acde48281f46391631f8"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2156, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}