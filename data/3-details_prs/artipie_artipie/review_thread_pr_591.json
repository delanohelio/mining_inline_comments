{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NjM3ODU2", "number": 591, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNToyNVrOEjdU_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNzozN1rOEjdYgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE2MTI1OnYy", "diffSide": "RIGHT", "path": "examples/go/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNToyNVrOHR0TTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNToyNVrOHR0TTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NDc1MA==", "bodyText": "@Sammers21 First seems odd as there is no second or something similar", "url": "https://github.com/artipie/artipie/pull/591#discussion_r488444750", "createdAt": "2020-09-15T07:25:25Z", "author": {"login": "olenagerasimova"}, "path": "examples/go/README.md", "diffHunk": "@@ -1,43 +1,47 @@\n ### Go Repo\n \n-![](https://github.com/artipie/artipie/workflows/Proof::go/badge.svg)\n+[![](https://github.com/artipie/artipie/workflows/Proof::go/badge.svg)](./examples/go)\n \n-Try this `go.yaml` file:\n+This directory contains a basic example of how artipie can be used as a GOPROXY. \n+Try this example by running `run.sh` script.\n+\n+Try this `my-go.yaml` file:\n \n ```yaml\n repo:\n   type: go\n-  path: go\n   storage:\n     type: fs\n-    path: /tmp/artipie/data/go\n+    path: /var/artipie/data\n ```\n \n-To use it for installing packages add it to `GOPROXY` environment variable:\n+After creating the configuration file below, the configured GOPROXY is ready for use. First, you have to declare the following environment variables:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0a6ea18855c0eaa26ef3942390763ec6f11b2d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NjE3MDI1OnYy", "diffSide": "RIGHT", "path": "examples/go/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNzozN1rOHR0YnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoyNzozN1rOHR0YnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ0NjEwOQ==", "bodyText": "@Sammers21 I do not think we need two configuration examples, go developers should know that GOPROXY excepts list and it's highly unlikely that someone do not need to stay connected to central", "url": "https://github.com/artipie/artipie/pull/591#discussion_r488446109", "createdAt": "2020-09-15T07:27:37Z", "author": {"login": "olenagerasimova"}, "path": "examples/go/README.md", "diffHunk": "@@ -1,43 +1,47 @@\n ### Go Repo\n \n-![](https://github.com/artipie/artipie/workflows/Proof::go/badge.svg)\n+[![](https://github.com/artipie/artipie/workflows/Proof::go/badge.svg)](./examples/go)\n \n-Try this `go.yaml` file:\n+This directory contains a basic example of how artipie can be used as a GOPROXY. \n+Try this example by running `run.sh` script.\n+\n+Try this `my-go.yaml` file:\n \n ```yaml\n repo:\n   type: go\n-  path: go\n   storage:\n     type: fs\n-    path: /tmp/artipie/data/go\n+    path: /var/artipie/data\n ```\n \n-To use it for installing packages add it to `GOPROXY` environment variable:\n+After creating the configuration file below, the configured GOPROXY is ready for use. First, you have to declare the following environment variables:\n \n ```bash\n-$ export GOPROXY=\"http://localhost:8080/go,https://proxy.golang.org,direct\"\n+export GO111MODULE=on\n+export GOPROXY=http://localhost:8080/my-go\n ```\n \n-Go packages have to be located in the local repository by their\n-names and versions, contain Go module and dependencies information\n-in `.mod` and `.info` files. Here is an example for package\n-`example.com/foo/bar` versions `0.0.1` and `0.0.2`:\n+Or, in case you want to stay connected with central proxy.golang.org, declare it in\n+the following way:\n \n+To use it for installing packages add it to `GOPROXY` environment variable:\n+\n+```bash\n+export GO111MODULE=on\n+export GOPROXY=http://localhost:8080/my-go\n+export GOPROXY=\"http://localhost:8080/my-go,https://proxy.golang.org,direct\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0a6ea18855c0eaa26ef3942390763ec6f11b2d"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2199, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}