{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODExMTE4", "number": 619, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0NjoxNFrOEmadgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0NjoxNFrOEmadgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzE0ODgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0NjoxNFrOHWasFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTowOToyNFrOHXVRpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2Nzk4OA==", "bodyText": "@genryxy passing nullable type into check method does not seem elegant, and also method with name check does not suppose to extract password type... So, I'd suggest create separate method to obtain password type (simply extract this logic from check) and then call check method with known password type.", "url": "https://github.com/artipie/artipie/pull/619#discussion_r493267988", "createdAt": "2020-09-23T07:46:14Z", "author": {"login": "olenagerasimova"}, "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "diffHunk": "@@ -74,24 +68,13 @@ public AuthFromYaml(final YamlMapping cred) {\n     public Optional<Authentication.User> user(final String user, final String pass) {\n         final YamlMapping users = this.cred.yamlMapping(\"credentials\");\n         Optional<Authentication.User> res = Optional.empty();\n-        //@checkstyle NestedIfDepthCheck (10 lines)\n         if (users != null && users.yamlMapping(user) != null) {\n             final String stored = users.yamlMapping(user).string(\"pass\");\n-            if (stored != null) {\n-                final String type = users.yamlMapping(user).string(\"type\");\n-                if (type != null) {\n-                    if (check(stored, type, pass)) {\n-                        res = Optional.of(\n-                            new User(user, AuthFromYaml.groups(users.yamlMapping(user)))\n-                        );\n-                    }\n-                } else {\n-                    if (check(stored, pass)) {\n-                        res = Optional.of(\n-                            new User(user, AuthFromYaml.groups(users.yamlMapping(user)))\n-                        );\n-                    }\n-                }\n+            final String type = users.yamlMapping(user).string(\"type\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e66542c31185278d4d8413495ac404c4db2a6a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3MjY3NA==", "bodyText": "@olenagerasimova thanks. If I obtain password type from the method it becomes more difficult to distinguish password that have type at the beginning plain:123 from the password 123. I can pass user and users to check() method instead of nullable type but in this case method will have 4 parameters. Or would it be better to find a solution that doesn't pass nullable value to the method?", "url": "https://github.com/artipie/artipie/pull/619#discussion_r494172674", "createdAt": "2020-09-24T09:31:13Z", "author": {"login": "genryxy"}, "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "diffHunk": "@@ -74,24 +68,13 @@ public AuthFromYaml(final YamlMapping cred) {\n     public Optional<Authentication.User> user(final String user, final String pass) {\n         final YamlMapping users = this.cred.yamlMapping(\"credentials\");\n         Optional<Authentication.User> res = Optional.empty();\n-        //@checkstyle NestedIfDepthCheck (10 lines)\n         if (users != null && users.yamlMapping(user) != null) {\n             final String stored = users.yamlMapping(user).string(\"pass\");\n-            if (stored != null) {\n-                final String type = users.yamlMapping(user).string(\"type\");\n-                if (type != null) {\n-                    if (check(stored, type, pass)) {\n-                        res = Optional.of(\n-                            new User(user, AuthFromYaml.groups(users.yamlMapping(user)))\n-                        );\n-                    }\n-                } else {\n-                    if (check(stored, pass)) {\n-                        res = Optional.of(\n-                            new User(user, AuthFromYaml.groups(users.yamlMapping(user)))\n-                        );\n-                    }\n-                }\n+            final String type = users.yamlMapping(user).string(\"type\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2Nzk4OA=="}, "originalCommit": {"oid": "53e66542c31185278d4d8413495ac404c4db2a6a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyNzg3Nw==", "bodyText": "@genryxy I see, sorry for the misguided suggestion. Maybe we can make type Optional<String> to avoid null and rename check method properly? The name of the method should show shortly explain what the method does.", "url": "https://github.com/artipie/artipie/pull/619#discussion_r494227877", "createdAt": "2020-09-24T11:09:24Z", "author": {"login": "olenagerasimova"}, "path": "src/main/java/com/artipie/auth/AuthFromYaml.java", "diffHunk": "@@ -74,24 +68,13 @@ public AuthFromYaml(final YamlMapping cred) {\n     public Optional<Authentication.User> user(final String user, final String pass) {\n         final YamlMapping users = this.cred.yamlMapping(\"credentials\");\n         Optional<Authentication.User> res = Optional.empty();\n-        //@checkstyle NestedIfDepthCheck (10 lines)\n         if (users != null && users.yamlMapping(user) != null) {\n             final String stored = users.yamlMapping(user).string(\"pass\");\n-            if (stored != null) {\n-                final String type = users.yamlMapping(user).string(\"type\");\n-                if (type != null) {\n-                    if (check(stored, type, pass)) {\n-                        res = Optional.of(\n-                            new User(user, AuthFromYaml.groups(users.yamlMapping(user)))\n-                        );\n-                    }\n-                } else {\n-                    if (check(stored, pass)) {\n-                        res = Optional.of(\n-                            new User(user, AuthFromYaml.groups(users.yamlMapping(user)))\n-                        );\n-                    }\n-                }\n+            final String type = users.yamlMapping(user).string(\"type\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2Nzk4OA=="}, "originalCommit": {"oid": "53e66542c31185278d4d8413495ac404c4db2a6a"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2211, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}