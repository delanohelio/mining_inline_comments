{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTgzMzcy", "number": 767, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoyODo0M1rOE7hWCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoyODo0M1rOE7hWCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODQ3NzU1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/gem/GemITCase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoyODo0M1rOH3NwVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo0MToyOVrOH3OKiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1OTA5Mg==", "bodyText": "@genryxy it seems odd that there is no GEM_HOST_API_KEY specified in case of non-anonymous operation", "url": "https://github.com/artipie/artipie/pull/767#discussion_r527659092", "createdAt": "2020-11-20T12:28:43Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/gem/GemITCase.java", "diffHunk": "@@ -121,18 +131,25 @@ void tearDown() {\n     }\n \n     private void push(final boolean anonymous) throws Exception {\n-        final String key = new Base64Encoded(\"any:any\").asString();\n         new TestResource(String.format(\"gem/%s\", GemITCase.RAILS))\n             .saveTo(this.storage, new Key.From(GemITCase.RAILS));\n         final String tmpurl = this.url.string(anonymous);\n-        this.cntn.execStdout(\n-            \"/bin/bash\", \"-c\",\n-            String.format(\n-                \"GEM_HOST_API_KEY=%s gem push %s --host %s\",\n-                key, GemITCase.RAILS,\n-                tmpurl.substring(0, tmpurl.length() - 1)\n-            )\n-        );\n+        if (anonymous) {\n+            final String key = new Base64Encoded(\"any:any\").asString();\n+            this.cntn.execStdout(\n+                \"/bin/bash\", \"-c\",\n+                String.format(\n+                    \"GEM_HOST_API_KEY=%s gem push %s --host %s\",\n+                    key, GemITCase.RAILS,\n+                    tmpurl.substring(0, tmpurl.length() - 1)\n+                )\n+            );\n+        } else {\n+            this.cntn.execStdout(\n+                \"gem\", \"push\", GemITCase.RAILS,\n+                \"--host\", tmpurl.substring(0, tmpurl.length() - 1)\n+            );\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e66fa5578576f20788ccf4790d210b06848411a1"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2Mzk0Mg==", "bodyText": "@olegmoz  I think that credentials in this case should be obtained from the url that looks like http://user:pass@host:port/my-gem", "url": "https://github.com/artipie/artipie/pull/767#discussion_r527663942", "createdAt": "2020-11-20T12:37:47Z", "author": {"login": "genryxy"}, "path": "src/test/java/com/artipie/gem/GemITCase.java", "diffHunk": "@@ -121,18 +131,25 @@ void tearDown() {\n     }\n \n     private void push(final boolean anonymous) throws Exception {\n-        final String key = new Base64Encoded(\"any:any\").asString();\n         new TestResource(String.format(\"gem/%s\", GemITCase.RAILS))\n             .saveTo(this.storage, new Key.From(GemITCase.RAILS));\n         final String tmpurl = this.url.string(anonymous);\n-        this.cntn.execStdout(\n-            \"/bin/bash\", \"-c\",\n-            String.format(\n-                \"GEM_HOST_API_KEY=%s gem push %s --host %s\",\n-                key, GemITCase.RAILS,\n-                tmpurl.substring(0, tmpurl.length() - 1)\n-            )\n-        );\n+        if (anonymous) {\n+            final String key = new Base64Encoded(\"any:any\").asString();\n+            this.cntn.execStdout(\n+                \"/bin/bash\", \"-c\",\n+                String.format(\n+                    \"GEM_HOST_API_KEY=%s gem push %s --host %s\",\n+                    key, GemITCase.RAILS,\n+                    tmpurl.substring(0, tmpurl.length() - 1)\n+                )\n+            );\n+        } else {\n+            this.cntn.execStdout(\n+                \"gem\", \"push\", GemITCase.RAILS,\n+                \"--host\", tmpurl.substring(0, tmpurl.length() - 1)\n+            );\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1OTA5Mg=="}, "originalCommit": {"oid": "e66fa5578576f20788ccf4790d210b06848411a1"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2NTgwMQ==", "bodyText": "@genryxy could you please prove it by some link to tutorial or docs? Or maybe there is existing test in gem-adapter repository? I am under the impression that GEM_HOST_API_KEY is the only authentication option supported by gem CLI tool", "url": "https://github.com/artipie/artipie/pull/767#discussion_r527665801", "createdAt": "2020-11-20T12:41:29Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/gem/GemITCase.java", "diffHunk": "@@ -121,18 +131,25 @@ void tearDown() {\n     }\n \n     private void push(final boolean anonymous) throws Exception {\n-        final String key = new Base64Encoded(\"any:any\").asString();\n         new TestResource(String.format(\"gem/%s\", GemITCase.RAILS))\n             .saveTo(this.storage, new Key.From(GemITCase.RAILS));\n         final String tmpurl = this.url.string(anonymous);\n-        this.cntn.execStdout(\n-            \"/bin/bash\", \"-c\",\n-            String.format(\n-                \"GEM_HOST_API_KEY=%s gem push %s --host %s\",\n-                key, GemITCase.RAILS,\n-                tmpurl.substring(0, tmpurl.length() - 1)\n-            )\n-        );\n+        if (anonymous) {\n+            final String key = new Base64Encoded(\"any:any\").asString();\n+            this.cntn.execStdout(\n+                \"/bin/bash\", \"-c\",\n+                String.format(\n+                    \"GEM_HOST_API_KEY=%s gem push %s --host %s\",\n+                    key, GemITCase.RAILS,\n+                    tmpurl.substring(0, tmpurl.length() - 1)\n+                )\n+            );\n+        } else {\n+            this.cntn.execStdout(\n+                \"gem\", \"push\", GemITCase.RAILS,\n+                \"--host\", tmpurl.substring(0, tmpurl.length() - 1)\n+            );\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1OTA5Mg=="}, "originalCommit": {"oid": "e66fa5578576f20788ccf4790d210b06848411a1"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2100, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}