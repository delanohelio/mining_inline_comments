{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0Njc4MjUx", "number": 525, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjo0MToyN1rOEdfraQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzozMDo1NVrOEeMaoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzYzMTc3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/BuildingRepoPermissions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjo0MToyN1rOHIrcdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTozMzozMlrOHI-HcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2MjQ1Mw==", "bodyText": "@genryxy I'd suggest to rename this class into RepoPermissions without Building", "url": "https://github.com/artipie/artipie/pull/525#discussion_r478862453", "createdAt": "2020-08-28T06:41:27Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/BuildingRepoPermissions.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlMappingBuilder;\n+import com.amihaiemil.eoyaml.YamlSequenceBuilder;\n+import com.artipie.asto.Content;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.ext.PublisherAs;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Class for generating repo permissions.\n+ * @since 0.10\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+public final class BuildingRepoPermissions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870394843c86b057a08301d3721a4eb37f70272b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE2ODM2OA==", "bodyText": "@olenagerasimova Maybe, it would be better to rename this class into RepoPerms because we have RepoPermissions interface with the class UserPermission inside that doesn't implement this interface. We need RepoPermissions.Userpermission field in the new class.", "url": "https://github.com/artipie/artipie/pull/525#discussion_r479168368", "createdAt": "2020-08-28T11:33:32Z", "author": {"login": "genryxy"}, "path": "src/test/java/com/artipie/BuildingRepoPermissions.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlMappingBuilder;\n+import com.amihaiemil.eoyaml.YamlSequenceBuilder;\n+import com.artipie.asto.Content;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.ext.PublisherAs;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Class for generating repo permissions.\n+ * @since 0.10\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+public final class BuildingRepoPermissions {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2MjQ1Mw=="}, "originalCommit": {"oid": "870394843c86b057a08301d3721a4eb37f70272b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MzYzNTY4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/BuildingRepoPermissions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjo0MzowNlrOHIrevQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNjo0MzowNlrOHIrevQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg2MzAzNw==", "bodyText": "@genryxy as this class main purpose is to build repo permissions, I think that it should have these permissions as a field. Also, sometimes adding this repo setting yaml to storage is not required", "url": "https://github.com/artipie/artipie/pull/525#discussion_r478863037", "createdAt": "2020-08-28T06:43:06Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/BuildingRepoPermissions.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlMappingBuilder;\n+import com.amihaiemil.eoyaml.YamlSequenceBuilder;\n+import com.artipie.asto.Content;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.ext.PublisherAs;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Class for generating repo permissions.\n+ * @since 0.10\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+public final class BuildingRepoPermissions {\n+    /**\n+     * Storage.\n+     */\n+    private final Storage storage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "870394843c86b057a08301d3721a4eb37f70272b"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDk1MjExOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/RepoPerms.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzoyODoyOFrOHJtnVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzoyODoyOFrOHJtnVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk0NjU4Mg==", "bodyText": "@genryxy I think we should support yaml style here and modify given reposection by adding permissions section and return this modified yaml without building", "url": "https://github.com/artipie/artipie/pull/525#discussion_r479946582", "createdAt": "2020-08-31T07:28:28Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/RepoPerms.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlMappingBuilder;\n+import com.amihaiemil.eoyaml.YamlNode;\n+import com.artipie.asto.Content;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Class for generating repo permissions.\n+ * @since 0.10\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+public final class RepoPerms {\n+    /**\n+     * Permissions section name.\n+     */\n+    private static final String PERMISSIONS = \"permissions\";\n+\n+    /**\n+     * Collection with user permissions.\n+     */\n+    private final Collection<RepoPermissions.UserPermission> usersperms;\n+\n+    /**\n+     * Ctor.\n+     */\n+    public RepoPerms() {\n+        this(Collections.emptyList());\n+    }\n+\n+    /**\n+     * Ctor.\n+     * @param userperm Permission for a single user\n+     */\n+    public RepoPerms(final RepoPermissions.UserPermission userperm) {\n+        this(Collections.singleton(userperm));\n+    }\n+\n+    /**\n+     * Primary ctor.\n+     * @param usersperms Collection with user permissions\n+     */\n+    public RepoPerms(final Collection<RepoPermissions.UserPermission> usersperms) {\n+        this.usersperms = usersperms;\n+    }\n+\n+    /**\n+     * Save to the storage repo with map with users and permissions.\n+     * @param storage Storage\n+     * @param repo Repo\n+     */\n+    public void saveSettings(final Storage storage, final String repo) {\n+        storage.save(\n+            new Key.From(String.format(\"%s.yaml\", repo)),\n+            new Content.From(\n+                Yaml.createYamlMappingBuilder().add(\n+                    \"repo\",\n+                    Yaml.createYamlMappingBuilder()\n+                        .add(\"type\", \"any\")\n+                        .add(RepoPerms.PERMISSIONS, this.permsYaml()).build()\n+                ).build().toString().getBytes(StandardCharsets.UTF_8)\n+            )\n+        ).join();\n+    }\n+\n+    /**\n+     * Add permissions to the repo section.\n+     * @param reposection YamlMapping with repo section\n+     * @return YamlMapping with repo section and permissions.\n+     */\n+    public YamlMapping addPermissions(final YamlMapping reposection) {\n+        return RepoPerms.repoSectionAsBuilder(reposection)\n+            .add(RepoPerms.PERMISSIONS, this.permsYaml())\n+            .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc45f25b93f674b72cd2fb77cb44add0395d0330"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDk1Mzk4OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/RepoPerms.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzoyOTowOFrOHJtofA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzoyOTowOFrOHJtofA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk0Njg3Ng==", "bodyText": "@genryxy as this method is never used, I'd suggest to remove it", "url": "https://github.com/artipie/artipie/pull/525#discussion_r479946876", "createdAt": "2020-08-31T07:29:08Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/RepoPerms.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlMappingBuilder;\n+import com.amihaiemil.eoyaml.YamlNode;\n+import com.artipie.asto.Content;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Class for generating repo permissions.\n+ * @since 0.10\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+public final class RepoPerms {\n+    /**\n+     * Permissions section name.\n+     */\n+    private static final String PERMISSIONS = \"permissions\";\n+\n+    /**\n+     * Collection with user permissions.\n+     */\n+    private final Collection<RepoPermissions.UserPermission> usersperms;\n+\n+    /**\n+     * Ctor.\n+     */\n+    public RepoPerms() {\n+        this(Collections.emptyList());\n+    }\n+\n+    /**\n+     * Ctor.\n+     * @param userperm Permission for a single user\n+     */\n+    public RepoPerms(final RepoPermissions.UserPermission userperm) {\n+        this(Collections.singleton(userperm));\n+    }\n+\n+    /**\n+     * Primary ctor.\n+     * @param usersperms Collection with user permissions\n+     */\n+    public RepoPerms(final Collection<RepoPermissions.UserPermission> usersperms) {\n+        this.usersperms = usersperms;\n+    }\n+\n+    /**\n+     * Save to the storage repo with map with users and permissions.\n+     * @param storage Storage\n+     * @param repo Repo\n+     */\n+    public void saveSettings(final Storage storage, final String repo) {\n+        storage.save(\n+            new Key.From(String.format(\"%s.yaml\", repo)),\n+            new Content.From(\n+                Yaml.createYamlMappingBuilder().add(\n+                    \"repo\",\n+                    Yaml.createYamlMappingBuilder()\n+                        .add(\"type\", \"any\")\n+                        .add(RepoPerms.PERMISSIONS, this.permsYaml()).build()\n+                ).build().toString().getBytes(StandardCharsets.UTF_8)\n+            )\n+        ).join();\n+    }\n+\n+    /**\n+     * Add permissions to the repo section.\n+     * @param reposection YamlMapping with repo section\n+     * @return YamlMapping with repo section and permissions.\n+     */\n+    public YamlMapping addPermissions(final YamlMapping reposection) {\n+        return RepoPerms.repoSectionAsBuilder(reposection)\n+            .add(RepoPerms.PERMISSIONS, this.permsYaml())\n+            .build();\n+    }\n+\n+    /**\n+     * Empty repo section with default values.\n+     * @return Empty repo section.\n+     */\n+    static YamlMappingBuilder emptyRepoSection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc45f25b93f674b72cd2fb77cb44add0395d0330"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMDk2MTYxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/RepoPerms.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzozMDo1NVrOHJtshg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwNzozMDo1NVrOHJtshg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk0NzkxMA==", "bodyText": "@genryxy I think we should call addPermissions() to create yaml file", "url": "https://github.com/artipie/artipie/pull/525#discussion_r479947910", "createdAt": "2020-08-31T07:30:55Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/RepoPerms.java", "diffHunk": "@@ -0,0 +1,148 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.amihaiemil.eoyaml.YamlMappingBuilder;\n+import com.amihaiemil.eoyaml.YamlNode;\n+import com.artipie.asto.Content;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * Class for generating repo permissions.\n+ * @since 0.10\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+public final class RepoPerms {\n+    /**\n+     * Permissions section name.\n+     */\n+    private static final String PERMISSIONS = \"permissions\";\n+\n+    /**\n+     * Collection with user permissions.\n+     */\n+    private final Collection<RepoPermissions.UserPermission> usersperms;\n+\n+    /**\n+     * Ctor.\n+     */\n+    public RepoPerms() {\n+        this(Collections.emptyList());\n+    }\n+\n+    /**\n+     * Ctor.\n+     * @param userperm Permission for a single user\n+     */\n+    public RepoPerms(final RepoPermissions.UserPermission userperm) {\n+        this(Collections.singleton(userperm));\n+    }\n+\n+    /**\n+     * Primary ctor.\n+     * @param usersperms Collection with user permissions\n+     */\n+    public RepoPerms(final Collection<RepoPermissions.UserPermission> usersperms) {\n+        this.usersperms = usersperms;\n+    }\n+\n+    /**\n+     * Save to the storage repo with map with users and permissions.\n+     * @param storage Storage\n+     * @param repo Repo\n+     */\n+    public void saveSettings(final Storage storage, final String repo) {\n+        storage.save(\n+            new Key.From(String.format(\"%s.yaml\", repo)),\n+            new Content.From(\n+                Yaml.createYamlMappingBuilder().add(\n+                    \"repo\",\n+                    Yaml.createYamlMappingBuilder()\n+                        .add(\"type\", \"any\")\n+                        .add(RepoPerms.PERMISSIONS, this.permsYaml()).build()\n+                ).build().toString().getBytes(StandardCharsets.UTF_8)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc45f25b93f674b72cd2fb77cb44add0395d0330"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2150, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}