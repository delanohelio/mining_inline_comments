{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MTQ3MDk1", "number": 20, "title": "YAML storage settings", "bodyText": "This PR is targeted to close issue #14\nSettings interface is introduced with storage() method in it, YamlSettings implementation is added which  parses YAML config and builds storage to use.", "createdAt": "2020-02-12T07:17:27Z", "url": "https://github.com/artipie/artipie/pull/20", "merged": true, "mergeCommit": {"oid": "554ae39602b5b0a60f6606cdc1e0760afba95a9d"}, "closed": true, "closedAt": "2020-02-13T14:04:47Z", "author": {"login": "olegmoz"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDn2-aAH2gAyMzc0MTQ3MDk1OmZjNjY1MWQ5NDNkMTc3MjM2OTBiOTMzNzllNjVkZTFjNTI2ZDIzMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcD7dWrgFqTM1ODIzOTY4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/artipie/commit/fc6651d943d17723690b93379e65de1c526d2325", "committedDate": "2020-02-12T15:14:12Z", "message": "#13 - Reading storage settings from YAML"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16c897575fd6313eff2bb37a04ab18ca3ced73dc", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/artipie/commit/16c897575fd6313eff2bb37a04ab18ca3ced73dc", "committedDate": "2020-02-12T07:16:36Z", "message": "#13 - Reading storage settings from YAML"}, "afterCommit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/artipie/commit/fc6651d943d17723690b93379e65de1c526d2325", "committedDate": "2020-02-12T15:14:12Z", "message": "#13 - Reading storage settings from YAML"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3OTgzMjcz", "url": "https://github.com/artipie/artipie/pull/20#pullrequestreview-357983273", "createdAt": "2020-02-13T06:39:34Z", "commit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNjozOTozNFrOFpIf-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNjo1MDo1NFrOFpIsjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3NTE5NA==", "bodyText": "@olegmoz seems like a redundant empty line. In two other classes in this PR there is no such empty line.", "url": "https://github.com/artipie/artipie/pull/20#discussion_r378675194", "createdAt": "2020-02-13T06:39:34Z", "author": {"login": "iakunin"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3Njg0OQ==", "bodyText": "@olegmoz maybe it'd be better to use yaml-library which throws exception when yaml-path is not found?\nIn this case this method could've been simplified into something like:\nreturn Yaml.createYamlInput(this.source)\n    .readYamlMapping()\n    .get(\"meta\")\n    .get(\"storage\");", "url": "https://github.com/artipie/artipie/pull/20#discussion_r378676849", "createdAt": "2020-02-13T06:45:31Z", "author": {"login": "iakunin"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.fs.FileStorage;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+/**\n+ * Settings built from YAML.\n+ *\n+ * @since 0.1\n+ */\n+public final class YamlSettings implements Settings {\n+\n+    /**\n+     * Source to read YAML from.\n+     */\n+    private final String source;\n+\n+    /**\n+     * Ctor.\n+     *\n+     * @param source Source to read YAML from.\n+     */\n+    public YamlSettings(final String source) {\n+        this.source = source;\n+    }\n+\n+    @Override\n+    public Storage storage() throws IOException {\n+        final YamlMapping yaml = this.storageYaml();\n+        final String type = yaml.string(\"type\");\n+        if (type == null) {\n+            throw new IllegalStateException(\n+                String.format(\"Cannot find 'type' in storage settings:\\n%s\", yaml)\n+            );\n+        }\n+        if (type.equals(\"fs\")) {\n+            final String path = yaml.string(\"path\");\n+            if (path == null) {\n+                throw new IllegalStateException(\n+                    String.format(\"Cannot find 'path' in storage settings:\\n%s\", yaml)\n+                );\n+            }\n+            return new FileStorage(Path.of(path));\n+        }\n+        throw new IllegalStateException(String.format(\"Unsupported storage type: '%s'\", type));\n+    }\n+\n+    /**\n+     * Read storage section from YAML.\n+     *\n+     * @return Storage section.\n+     * @throws IOException In case of problems with reading YAML from source.\n+     */\n+    private YamlMapping storageYaml() throws IOException {\n+        final YamlMapping root = Yaml.createYamlInput(this.source).readYamlMapping();\n+        final YamlMapping meta = root.yamlMapping(\"meta\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3ODEwNg==", "bodyText": "@olegmoz and again if (... == null) throw new IllegalStateException really clutters up the code. Please, think what can we do to get rid of it. My suggestion: is to use another yaml-library, which throws an exception instead of returning null.", "url": "https://github.com/artipie/artipie/pull/20#discussion_r378678106", "createdAt": "2020-02-13T06:49:52Z", "author": {"login": "iakunin"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.fs.FileStorage;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+/**\n+ * Settings built from YAML.\n+ *\n+ * @since 0.1\n+ */\n+public final class YamlSettings implements Settings {\n+\n+    /**\n+     * Source to read YAML from.\n+     */\n+    private final String source;\n+\n+    /**\n+     * Ctor.\n+     *\n+     * @param source Source to read YAML from.\n+     */\n+    public YamlSettings(final String source) {\n+        this.source = source;\n+    }\n+\n+    @Override\n+    public Storage storage() throws IOException {\n+        final YamlMapping yaml = this.storageYaml();\n+        final String type = yaml.string(\"type\");\n+        if (type == null) {\n+            throw new IllegalStateException(\n+                String.format(\"Cannot find 'type' in storage settings:\\n%s\", yaml)\n+            );\n+        }\n+        if (type.equals(\"fs\")) {\n+            final String path = yaml.string(\"path\");\n+            if (path == null) {\n+                throw new IllegalStateException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY3ODQxNQ==", "bodyText": "@olegmoz this test should also cover all (really all) negative cases when exception is thrown.", "url": "https://github.com/artipie/artipie/pull/20#discussion_r378678415", "createdAt": "2020-02-13T06:50:54Z", "author": {"login": "iakunin"}, "path": "src/test/java/com/artipie/YamlSettingsTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.Matchers;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Tests for {@link YamlSettings}.\n+ *\n+ * @since 0.1\n+ */\n+class YamlSettingsTest {\n+\n+    @Test\n+    public void shouldBuildStorageFromSettings() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MDEyOTc0", "url": "https://github.com/artipie/artipie/pull/20#pullrequestreview-358012974", "createdAt": "2020-02-13T07:57:02Z", "commit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNzo1NzowMlrOFpJ-cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwNzo1NzowMlrOFpJ-cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY5OTM3Ng==", "bodyText": "Repository settings can be stored on asto, we need to make this call either async one or assume it is a DTO", "url": "https://github.com/artipie/artipie/pull/20#discussion_r378699376", "createdAt": "2020-02-13T07:57:02Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/Settings.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.artipie.asto.Storage;\n+import java.io.IOException;\n+\n+/**\n+ * Application settings.\n+ *\n+ * @since 0.1\n+ */\n+public interface Settings {\n+    /**\n+     * Provides a storage.\n+     *\n+     * @return Storage instance.\n+     * @throws IOException In case of problems with reading settings.\n+     */\n+    Storage storage() throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6651d943d17723690b93379e65de1c526d2325"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc3cdc5e50d5bd4c543807ec798a6d32b22499f2", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/artipie/commit/cc3cdc5e50d5bd4c543807ec798a6d32b22499f2", "committedDate": "2020-02-13T07:57:49Z", "message": "#13 - Changes by review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MDIwNzE2", "url": "https://github.com/artipie/artipie/pull/20#pullrequestreview-358020716", "createdAt": "2020-02-13T08:13:35Z", "commit": {"oid": "cc3cdc5e50d5bd4c543807ec798a6d32b22499f2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwODoxMzozNVrOFpKVvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwODoxMzozNVrOFpKVvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcwNTM0MQ==", "bodyText": "Can you change the description to YAML file content?", "url": "https://github.com/artipie/artipie/pull/20#discussion_r378705341", "createdAt": "2020-02-13T08:13:35Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMapping;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.fs.FileStorage;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+\n+/**\n+ * Settings built from YAML.\n+ *\n+ * @since 0.1\n+ */\n+public final class YamlSettings implements Settings {\n+\n+    /**\n+     * Source to read YAML from.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3cdc5e50d5bd4c543807ec798a6d32b22499f2"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MDIyMzY2", "url": "https://github.com/artipie/artipie/pull/20#pullrequestreview-358022366", "createdAt": "2020-02-13T08:16:50Z", "commit": {"oid": "cc3cdc5e50d5bd4c543807ec798a6d32b22499f2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwODoxNjo1MFrOFpKa0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwODoxNjo1MFrOFpKa0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODcwNjY0Mw==", "bodyText": "Why does it throw IOException if the is no IO operations", "url": "https://github.com/artipie/artipie/pull/20#discussion_r378706643", "createdAt": "2020-02-13T08:16:50Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/Settings.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie;\n+\n+import com.artipie.asto.Storage;\n+import java.io.IOException;\n+\n+/**\n+ * Application settings.\n+ *\n+ * @since 0.1\n+ */\n+public interface Settings {\n+    /**\n+     * Provides a storage.\n+     *\n+     * @return Storage instance.\n+     * @throws IOException In case of problems with reading settings.\n+     */\n+    Storage storage() throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc3cdc5e50d5bd4c543807ec798a6d32b22499f2"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MDMwMTU0", "url": "https://github.com/artipie/artipie/pull/20#pullrequestreview-358030154", "createdAt": "2020-02-13T08:31:29Z", "commit": {"oid": "cc3cdc5e50d5bd4c543807ec798a6d32b22499f2"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MDM3NTMw", "url": "https://github.com/artipie/artipie/pull/20#pullrequestreview-358037530", "createdAt": "2020-02-13T08:44:42Z", "commit": {"oid": "cc3cdc5e50d5bd4c543807ec798a6d32b22499f2"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d02c8ecd046ca388fc18d2a01781b083826592f7", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/artipie/commit/d02c8ecd046ca388fc18d2a01781b083826592f7", "committedDate": "2020-02-13T09:17:47Z", "message": "Merge branch 'master' into 13-yaml-settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d35f6572bfe7d6709108580fd684b45c1f603260", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/artipie/commit/d35f6572bfe7d6709108580fd684b45c1f603260", "committedDate": "2020-02-13T11:16:46Z", "message": "#13 - Changes by review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1205f059e6b7c9389fe07651cdfff3aa4a622ae", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/artipie/commit/e1205f059e6b7c9389fe07651cdfff3aa4a622ae", "committedDate": "2020-02-13T13:59:44Z", "message": "Merge remote-tracking branch 'origin/master' into 13-yaml-settings\n\n# Conflicts:\n#\tpom.xml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MjM5Njgy", "url": "https://github.com/artipie/artipie/pull/20#pullrequestreview-358239682", "createdAt": "2020-02-13T14:04:20Z", "commit": {"oid": "e1205f059e6b7c9389fe07651cdfff3aa4a622ae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3121, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}