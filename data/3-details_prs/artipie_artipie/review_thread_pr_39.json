{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTYyMTg2", "number": 39, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMDoyMzowNVrODnA_rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo1Mjo1OFrODnYN1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMjM3MzU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/YamlSettings.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMDoyMzowNlrOF0w74g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMDoyMzowNlrOF0w74g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg3MjAzNA==", "bodyText": "@paulodamaso Please use the type variable declared in L58", "url": "https://github.com/artipie/artipie/pull/39#discussion_r390872034", "createdAt": "2020-03-11T10:23:06Z", "author": {"login": "HDouss"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -53,61 +53,12 @@ public YamlSettings(final String content) {\n \n     @Override\n     public Storage storage() throws IOException {\n-        final YamlMapping yaml = this.storageYaml();\n-        final String type = string(yaml, \"type\");\n-        if (type.equals(\"fs\")) {\n-            return new FileStorage(Path.of(string(yaml, \"path\")));\n+        final YamlMapping yaml =\n+            Yaml.createYamlInput(this.content).readYamlMapping().yamlMapping(\"meta\").yamlMapping(\"storage\");\n+        final String type =  yaml.string(\"type\");\n+        if (\"fs\".equals(yaml.string(\"type\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a63effe464c8d1d3add9ad501d56c911ea984357"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNjE3ODEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/YamlSettings.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODo1Mjo1OFrOF1VxJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMTo0NzowMVrOF1bWYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NTQ5NA==", "bodyText": "@paulodamaso previously we checked that the first and second mappings are not nulls, now we check only last string using  StrictYamlMapping, so if meta mapping is null then we'll get NullPointerException here. Maybe we need some unit tests before refactoring?", "url": "https://github.com/artipie/artipie/pull/39#discussion_r391475494", "createdAt": "2020-03-12T08:52:58Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -53,61 +54,17 @@ public YamlSettings(final String content) {\n \n     @Override\n     public Storage storage() throws IOException {\n-        final YamlMapping yaml = this.storageYaml();\n-        final String type = string(yaml, \"type\");\n-        if (type.equals(\"fs\")) {\n-            return new FileStorage(Path.of(string(yaml, \"path\")));\n-        }\n-        throw new IllegalStateException(String.format(\"Unsupported storage type: '%s'\", type));\n-    }\n-\n-    /**\n-     * Read storage section from YAML.\n-     *\n-     * @return Storage section.\n-     * @throws IOException In case of problems with reading YAML from source.\n-     */\n-    private YamlMapping storageYaml() throws IOException {\n-        return mapping(\n-            mapping(\n-                Yaml.createYamlInput(this.content).readYamlMapping(),\n-                \"meta\"\n-            ),\n-            \"storage\"\n-        );\n-    }\n-\n-    /**\n-     * Gets mapping by key from YAML, fails if no such key exists.\n-     *\n-     * @param yaml YAML to take the value from.\n-     * @param key Key to take value by.\n-     * @return Value found by key.\n-     */\n-    private static YamlMapping mapping(final YamlMapping yaml, final String key) {\n-        final YamlMapping mapping = yaml.yamlMapping(key);\n-        if (mapping == null) {\n-            throw new IllegalArgumentException(\n-                String.format(\"Cannot find '%s' mapping:\\n%s\", key, yaml)\n-            );\n-        }\n-        return mapping;\n-    }\n-\n-    /**\n-     * Gets string by key from YAML, fails if no such key exists.\n-     *\n-     * @param yaml YAML to take the value from.\n-     * @param key Key to take value by.\n-     * @return Value found by key.\n-     */\n-    private static String string(final YamlMapping yaml, final String key) {\n-        final String string = yaml.string(key);\n-        if (string == null) {\n-            throw new IllegalArgumentException(\n-                String.format(\"Cannot find '%s' string:\\n%s\", key, yaml)\n+        final YamlMapping yaml =\n+            new StrictYamlMapping(\n+                Yaml.createYamlInput(this.content)\n+                .readYamlMapping()\n+                .yamlMapping(\"meta\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "145972ebcedd8a4d7746e43aba4ce3dba709b815"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU2Njk0Nw==", "bodyText": "@g4s8 This case is already being tested in shouldFailProvideStorageFromBadYaml, first and second test cases", "url": "https://github.com/artipie/artipie/pull/39#discussion_r391566947", "createdAt": "2020-03-12T11:47:01Z", "author": {"login": "paulodamaso"}, "path": "src/main/java/com/artipie/YamlSettings.java", "diffHunk": "@@ -53,61 +54,17 @@ public YamlSettings(final String content) {\n \n     @Override\n     public Storage storage() throws IOException {\n-        final YamlMapping yaml = this.storageYaml();\n-        final String type = string(yaml, \"type\");\n-        if (type.equals(\"fs\")) {\n-            return new FileStorage(Path.of(string(yaml, \"path\")));\n-        }\n-        throw new IllegalStateException(String.format(\"Unsupported storage type: '%s'\", type));\n-    }\n-\n-    /**\n-     * Read storage section from YAML.\n-     *\n-     * @return Storage section.\n-     * @throws IOException In case of problems with reading YAML from source.\n-     */\n-    private YamlMapping storageYaml() throws IOException {\n-        return mapping(\n-            mapping(\n-                Yaml.createYamlInput(this.content).readYamlMapping(),\n-                \"meta\"\n-            ),\n-            \"storage\"\n-        );\n-    }\n-\n-    /**\n-     * Gets mapping by key from YAML, fails if no such key exists.\n-     *\n-     * @param yaml YAML to take the value from.\n-     * @param key Key to take value by.\n-     * @return Value found by key.\n-     */\n-    private static YamlMapping mapping(final YamlMapping yaml, final String key) {\n-        final YamlMapping mapping = yaml.yamlMapping(key);\n-        if (mapping == null) {\n-            throw new IllegalArgumentException(\n-                String.format(\"Cannot find '%s' mapping:\\n%s\", key, yaml)\n-            );\n-        }\n-        return mapping;\n-    }\n-\n-    /**\n-     * Gets string by key from YAML, fails if no such key exists.\n-     *\n-     * @param yaml YAML to take the value from.\n-     * @param key Key to take value by.\n-     * @return Value found by key.\n-     */\n-    private static String string(final YamlMapping yaml, final String key) {\n-        final String string = yaml.string(key);\n-        if (string == null) {\n-            throw new IllegalArgumentException(\n-                String.format(\"Cannot find '%s' string:\\n%s\", key, yaml)\n+        final YamlMapping yaml =\n+            new StrictYamlMapping(\n+                Yaml.createYamlInput(this.content)\n+                .readYamlMapping()\n+                .yamlMapping(\"meta\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NTQ5NA=="}, "originalCommit": {"oid": "145972ebcedd8a4d7746e43aba4ce3dba709b815"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2347, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}