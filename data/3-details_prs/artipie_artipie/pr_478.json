{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNDAzMjI1", "number": 478, "title": "#444 - Credentials.FromStorageYaml fully implemented", "bodyText": "Part of #444\nI've fully implemented Credentials.FromStorageYaml and added puzzles for DeleteUserSlice and for AddUpdateUserSlice.", "createdAt": "2020-08-21T05:38:38Z", "url": "https://github.com/artipie/artipie/pull/478", "merged": true, "mergeCommit": {"oid": "ffa7a6f39054970e6417d490d6f5c14f14f3ce37"}, "closed": true, "closedAt": "2020-08-21T08:12:29Z", "author": {"login": "olenagerasimova"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdA-FU3AH2gAyNDcxNDAzMjI1OjY1MWEwZWFjZGNkMzA2MWE2YTY4Y2NlZjVmNGY0MzgwMWE1ZDk3ZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBADZOAFqTQ3MjI4MDk2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "651a0eacdcd3061a6a68ccef5f4f43801a5d97fc", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/artipie/commit/651a0eacdcd3061a6a68ccef5f4f43801a5d97fc", "committedDate": "2020-08-21T05:37:10Z", "message": "#444 - Credentials.FromStorageYaml fully implemented"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMjcxMTgy", "url": "https://github.com/artipie/artipie/pull/478#pullrequestreview-472271182", "createdAt": "2020-08-21T07:38:18Z", "commit": {"oid": "651a0eacdcd3061a6a68ccef5f4f43801a5d97fc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNzozODoxOFrOHEfwlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNzozOTowNVrOHEfzXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ3NjY5Mw==", "bodyText": "@olenagerasimova this code snippet is repeated in remove method and it also proceeded with FromStorageYaml.buildCredentials. I'd suggest to extract method save(YamlMapping) that will build credentials YAML and save it to storage", "url": "https://github.com/artipie/artipie/pull/478#discussion_r474476693", "createdAt": "2020-08-21T07:38:18Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/Credentials.java", "diffHunk": "@@ -89,19 +99,42 @@ public FromStorageYaml(final Storage storage, final Key key) {\n         @Override\n         public CompletionStage<List<String>> users() {\n             return this.yaml().thenApply(\n-                yaml -> yaml.yamlMapping(\"credentials\").keys()\n+                yaml -> yaml.yamlMapping(FromStorageYaml.CREDENTIALS).keys()\n                     .stream().map(node -> node.asScalar().value()).collect(Collectors.toList())\n             );\n         }\n \n         @Override\n         public CompletionStage<Void> add(final String username, final String pswd) {\n-            throw new IllegalArgumentException(\"Not implemented yet\");\n+            return this.yaml().thenApply(\n+                yaml -> {\n+                    YamlMappingBuilder result = FromStorageYaml.removeUserRecord(username, yaml);\n+                    result = result.add(\n+                        username,\n+                        Yaml.createYamlMappingBuilder()\n+                            .add(\"pass\", String.format(\"plain:%s\", pswd))\n+                            .build()\n+                    );\n+                    return FromStorageYaml.buildCredentials(result);\n+                }\n+            ).thenCompose(\n+                updated -> this.storage.save(\n+                    this.key, new Content.From(updated.getBytes(StandardCharsets.UTF_8))\n+                )\n+            );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651a0eacdcd3061a6a68ccef5f4f43801a5d97fc"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ3NzQwNA==", "bodyText": "@olenagerasimova please specify in this test method name that we are talking about removing user", "url": "https://github.com/artipie/artipie/pull/478#discussion_r474477404", "createdAt": "2020-08-21T07:39:05Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/CredentialsFromStorageYamlTest.java", "diffHunk": "@@ -23,38 +23,145 @@\n  */\n package com.artipie;\n \n+import com.amihaiemil.eoyaml.Yaml;\n+import com.amihaiemil.eoyaml.YamlMappingBuilder;\n+import com.artipie.asto.Content;\n import com.artipie.asto.Key;\n import com.artipie.asto.Storage;\n-import com.artipie.asto.blocking.BlockingStorage;\n+import com.artipie.asto.ext.PublisherAs;\n import com.artipie.asto.memory.InMemoryStorage;\n import java.nio.charset.StandardCharsets;\n+import org.apache.commons.lang3.tuple.ImmutablePair;\n+import org.apache.commons.lang3.tuple.Pair;\n import org.hamcrest.MatcherAssert;\n import org.hamcrest.Matchers;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n /**\n  * Test for {@link Credentials.FromStorageYaml}.\n  * @since 0.9\n  */\n+@SuppressWarnings(\"unchecked\")\n class CredentialsFromStorageYamlTest {\n \n+    /**\n+     * Test storage.\n+     */\n+    private Storage storage;\n+\n+    /**\n+     * Test key.\n+     */\n+    private Key key;\n+\n+    @BeforeEach\n+    void init() {\n+        this.storage = new InMemoryStorage();\n+        this.key = new Key.From(\"_cred.yaml\");\n+    }\n+\n+    @Test\n+    void readsYamlFromStorage() {\n+        final String jane = \"jane\";\n+        final String john = \"john\";\n+        final String pass = \"111\";\n+        this.creds(new ImmutablePair<>(jane, pass), new ImmutablePair<>(john, pass));\n+        MatcherAssert.assertThat(\n+            new Credentials.FromStorageYaml(this.storage, this.key).users()\n+                .toCompletableFuture().join(),\n+            Matchers.containsInAnyOrder(jane, john)\n+        );\n+    }\n+\n     @Test\n-    void readsYamlFromStorage() throws InterruptedException {\n-        final Storage storage = new InMemoryStorage();\n-        final Key key = new Key.From(\"_cred.yaml\");\n-        final String yaml = String.join(\n-            \"\\n\",\n-            \"credentials:\",\n-            \"  jane:\",\n-            \"    pass: plain:123\",\n-            \"  john:\",\n-            \"    pass: plain:abc\"\n+    void addsUser() {\n+        final String maria = \"maria\";\n+        final String olga = \"olga\";\n+        final String pass = \"abc\";\n+        this.creds(new ImmutablePair<>(maria, pass));\n+        new Credentials.FromStorageYaml(this.storage, this.key).add(olga, pass)\n+            .toCompletableFuture().join();\n+        MatcherAssert.assertThat(\n+            new PublisherAs(this.storage.value(this.key).join())\n+                .asciiString().toCompletableFuture().join(),\n+            new IsEqual<>(\n+                this.getYaml(new ImmutablePair<>(maria, pass), new ImmutablePair<>(olga, pass))\n+            )\n         );\n-        new BlockingStorage(storage).save(key, yaml.getBytes(StandardCharsets.UTF_8));\n+    }\n+\n+    @Test\n+    void updatesUser() {\n+        final String jack = \"jack\";\n+        final String silvia = \"silvia\";\n+        final String old = \"345\";\n+        final String newpass = \"000\";\n+        this.creds(new ImmutablePair<>(jack, old), new ImmutablePair<>(silvia, old));\n+        new Credentials.FromStorageYaml(this.storage, this.key).add(silvia, newpass)\n+            .toCompletableFuture().join();\n         MatcherAssert.assertThat(\n-            new Credentials.FromStorageYaml(storage, key).users().toCompletableFuture().join(),\n-            Matchers.containsInAnyOrder(\"jane\", \"john\")\n+            new PublisherAs(this.storage.value(this.key).join())\n+                .asciiString().toCompletableFuture().join(),\n+            new IsEqual<>(\n+                this.getYaml(new ImmutablePair<>(jack, old), new ImmutablePair<>(silvia, newpass))\n+            )\n         );\n     }\n \n+    @Test\n+    void removesUser() {\n+        final String mark = \"mark\";\n+        final String ann = \"ann\";\n+        final String pass = \"123\";\n+        this.creds(new ImmutablePair<>(mark, pass), new ImmutablePair<>(ann, pass));\n+        new Credentials.FromStorageYaml(this.storage, this.key).remove(ann)\n+            .toCompletableFuture().join();\n+        MatcherAssert.assertThat(\n+            new PublisherAs(this.storage.value(this.key).join())\n+                .asciiString().toCompletableFuture().join(),\n+            new IsEqual<>(this.getYaml(new ImmutablePair<>(mark, pass)))\n+        );\n+    }\n+\n+    @Test\n+    void doNotChangeYamlIfUserNotFound() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651a0eacdcd3061a6a68ccef5f4f43801a5d97fc"}, "originalPosition": 121}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eee9221e3d4ed02e7c7e6f0763d21d578cfd544", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/artipie/commit/4eee9221e3d4ed02e7c7e6f0763d21d578cfd544", "committedDate": "2020-08-21T07:50:35Z", "message": "#444 - Credentials impl CR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01df29d10051b8ec49615a55adca291da1f9d0ea", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/artipie/commit/01df29d10051b8ec49615a55adca291da1f9d0ea", "committedDate": "2020-08-21T07:51:49Z", "message": "Merge branch 'master' into 444-creds-full-impl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMjgwOTYw", "url": "https://github.com/artipie/artipie/pull/478#pullrequestreview-472280960", "createdAt": "2020-08-21T07:54:52Z", "commit": {"oid": "01df29d10051b8ec49615a55adca291da1f9d0ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3480, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}