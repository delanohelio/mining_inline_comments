{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MzA1MjQ5", "number": 439, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0Mzo0NlrOEYFi8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NDowNFrOEYFjXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkyMTQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/metrics/MetricSlice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0Mzo0NlrOHAO3LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0Mzo0NlrOHAO3LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNTU0OQ==", "bodyText": "@g4s8 please add todo to create test for this slice", "url": "https://github.com/artipie/artipie/pull/439#discussion_r470005549", "createdAt": "2020-08-13T14:43:46Z", "author": {"login": "olenagerasimova"}, "path": "src/main/java/com/artipie/metrics/MetricSlice.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.metrics;\n+\n+import com.artipie.api.ContentAs;\n+import com.artipie.api.RsJson;\n+import com.artipie.asto.Key;\n+import com.artipie.asto.Storage;\n+import com.artipie.asto.rx.RxStorageWrapper;\n+import com.artipie.http.Response;\n+import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncResponse;\n+import hu.akarnokd.rxjava2.interop.SingleInterop;\n+import io.reactivex.Observable;\n+import java.nio.ByteBuffer;\n+import java.util.Map;\n+import javax.json.Json;\n+import javax.json.JsonArrayBuilder;\n+import org.reactivestreams.Publisher;\n+\n+/**\n+ * Slice with metrics JSON.\n+ * @since 0.10\n+ */\n+public final class MetricSlice implements Slice {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579c84c1757096b59e7239e7a5f26d7bb69a38ca"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkyMjU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/OptionalSlice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NDowNFrOHAO37g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDo0NDowNFrOHAO37g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwNTc0Mg==", "bodyText": "@g4s8 same here - we need test", "url": "https://github.com/artipie/artipie/pull/439#discussion_r470005742", "createdAt": "2020-08-13T14:44:04Z", "author": {"login": "olenagerasimova"}, "path": "src/main/java/com/artipie/http/OptionalSlice.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http;\n+\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithStatus;\n+import java.nio.ByteBuffer;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.function.Predicate;\n+import java.util.function.Supplier;\n+import org.reactivestreams.Publisher;\n+\n+/**\n+ * Optional slice that uses some source to create new slice\n+ * if this source matches specified predicate.\n+ * @param <T> Type of target to test\n+ * @since 0.10\n+ */\n+public final class OptionalSlice<T> implements Slice {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579c84c1757096b59e7239e7a5f26d7bb69a38ca"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2316, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}