{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzY5OTMy", "number": 653, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0ODowNlrOEpvQCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTozNDozM1rOEpwH-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjAxMjI3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0ODowNlrOHbl4mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0ODowNlrOHbl4mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY5NDI5Nw==", "bodyText": "@genryxy this method does not return anything, but does an action: creates NuGet config file. It should be renamed to indicate that", "url": "https://github.com/artipie/artipie/pull/653#discussion_r498694297", "createdAt": "2020-10-02T08:48:06Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.nuget;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.artipie.ArtipieServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.UUID;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.StringContains;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+\n+/**\n+ * Integration tests for Nuget repository.\n+ * @since 0.11\n+ */\n+@SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+final class NugetITCase {\n+\n+    /**\n+     * Temporary directory for all tests.\n+     * @checkstyle VisibilityModifierCheck (3 lines)\n+     */\n+    @TempDir\n+    Path tmp;\n+\n+    /**\n+     * Tested Artipie server.\n+     */\n+    private ArtipieServer server;\n+\n+    /**\n+     * Container.\n+     */\n+    private GenericContainer<?> cntn;\n+\n+    /**\n+     * Artipie server port.\n+     */\n+    private int port;\n+\n+    @BeforeEach\n+    void init() throws Exception {\n+        final String name = \"my-nuget\";\n+        this.server = new ArtipieServer(this.tmp, name, this.config());\n+        this.port = this.server.start();\n+        Testcontainers.exposeHostPorts(this.port);\n+        Files.write(\n+            this.tmp.resolve(String.format(\"repos/%s.yaml\", name)),\n+            this.config().getBytes()\n+        );\n+        this.nugetConfig();\n+        this.cntn = new GenericContainer<>(\"mcr.microsoft.com/dotnet/sdk:5.0\")\n+            .withCommand(\"tail\", \"-f\", \"/dev/null\")\n+            .withWorkingDirectory(\"/home/\")\n+            .withFileSystemBind(this.tmp.toString(), \"/home\");\n+        this.cntn.start();\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        this.server.stop();\n+        this.cntn.stop();\n+    }\n+\n+    @Test\n+    void shouldPushPackage() throws Exception {\n+        MatcherAssert.assertThat(\n+            this.pushPackage(),\n+            new StringContains(\"Your package was pushed.\")\n+        );\n+    }\n+\n+    private void nugetConfig() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "788a0a1074f100bdd1101f5ff814b60d153df134"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjAxNTk1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/nuget/NewtonJsonResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0OToxOFrOHbl7AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo0OToxOFrOHbl7AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY5NDkxMw==", "bodyText": "@genryxy @since tag value is off, it should be 0.12 now", "url": "https://github.com/artipie/artipie/pull/653#discussion_r498694913", "createdAt": "2020-10-02T08:49:18Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/nuget/NewtonJsonResource.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.nuget;\n+\n+import com.google.common.io.ByteStreams;\n+import org.cactoos.io.ResourceOf;\n+\n+/**\n+ * Newton.Json package resource.\n+ *\n+ * @since 0.1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "788a0a1074f100bdd1101f5ff814b60d153df134"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjAxODU2OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo1MDowNVrOHbl8lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwODo1MDowNVrOHbl8lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY5NTMxOA==", "bodyText": "@genryxy  @since tag value is off, it should be 0.12 now", "url": "https://github.com/artipie/artipie/pull/653#discussion_r498695318", "createdAt": "2020-10-02T08:50:05Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.nuget;\n+\n+import com.amihaiemil.eoyaml.Yaml;\n+import com.artipie.ArtipieServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.UUID;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.StringContains;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+import org.testcontainers.Testcontainers;\n+import org.testcontainers.containers.GenericContainer;\n+\n+/**\n+ * Integration tests for Nuget repository.\n+ * @since 0.11", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "788a0a1074f100bdd1101f5ff814b60d153df134"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjE1NTQ2OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTozNDozM1rOHbnSQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMDoxMToxNVrOHboTeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNzI1MQ==", "bodyText": "@genryxy probably you need to enable the test on windows only, not enable it unix-like systems", "url": "https://github.com/artipie/artipie/pull/653#discussion_r498717251", "createdAt": "2020-10-02T09:34:33Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "diffHunk": "@@ -43,6 +45,7 @@\n  * @since 0.12\n  */\n @SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+@EnabledOnOs({OS.LINUX, OS.MAC})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9965cbc103706b8f7bc574b088253fa7933f749"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxOTkyMw==", "bodyText": "@olegmoz in the previous commit it fails on windows https://github.com/artipie/artipie/runs/1197922355#step:5:7796", "url": "https://github.com/artipie/artipie/pull/653#discussion_r498719923", "createdAt": "2020-10-02T09:40:28Z", "author": {"login": "genryxy"}, "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "diffHunk": "@@ -43,6 +45,7 @@\n  * @since 0.12\n  */\n @SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+@EnabledOnOs({OS.LINUX, OS.MAC})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNzI1MQ=="}, "originalCommit": {"oid": "c9965cbc103706b8f7bc574b088253fa7933f749"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMjA0Mg==", "bodyText": "@genryxy that's because testcontainers library does not support Windows. That is sad. It means you need to use a Linux image instead of Windows one", "url": "https://github.com/artipie/artipie/pull/653#discussion_r498732042", "createdAt": "2020-10-02T10:06:54Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "diffHunk": "@@ -43,6 +45,7 @@\n  * @since 0.12\n  */\n @SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+@EnabledOnOs({OS.LINUX, OS.MAC})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNzI1MQ=="}, "originalCommit": {"oid": "c9965cbc103706b8f7bc574b088253fa7933f749"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMjMxOQ==", "bodyText": "@genryxy you may find such images here: https://hub.docker.com/_/microsoft-dotnet-core", "url": "https://github.com/artipie/artipie/pull/653#discussion_r498732319", "createdAt": "2020-10-02T10:07:31Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "diffHunk": "@@ -43,6 +45,7 @@\n  * @since 0.12\n  */\n @SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+@EnabledOnOs({OS.LINUX, OS.MAC})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNzI1MQ=="}, "originalCommit": {"oid": "c9965cbc103706b8f7bc574b088253fa7933f749"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODczMzk0NA==", "bodyText": "@olegmoz in this test mcr.microsoft.com/dotnet/sdk:5.0 image is used", "url": "https://github.com/artipie/artipie/pull/653#discussion_r498733944", "createdAt": "2020-10-02T10:11:15Z", "author": {"login": "genryxy"}, "path": "src/test/java/com/artipie/nuget/NugetITCase.java", "diffHunk": "@@ -43,6 +45,7 @@\n  * @since 0.12\n  */\n @SuppressWarnings(\"PMD.AvoidDuplicateLiterals\")\n+@EnabledOnOs({OS.LINUX, OS.MAC})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNzI1MQ=="}, "originalCommit": {"oid": "c9965cbc103706b8f7bc574b088253fa7933f749"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2034, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}