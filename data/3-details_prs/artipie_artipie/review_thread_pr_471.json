{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwODA0NjI5", "number": 471, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTowNTo0M1rOEaelfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMToyNjozN1rOEafAgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTk5NTQ5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/http/HealthSliceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTowNTo0M1rOHD73HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMTowNTo0M1rOHD73HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg4ODU0MA==", "bodyText": "@genryxy that's a smart fix, but in Artipie project we are trying to avoid using null values.\nCould you please implement Storage interface with all methods throwing exception? It's going to be more verbose, but will make intent more obvious. Using shortcuts is what brought us the problem in the first place.", "url": "https://github.com/artipie/artipie/pull/471#discussion_r473888540", "createdAt": "2020-08-20T11:05:43Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/http/HealthSliceTest.java", "diffHunk": "@@ -66,7 +64,7 @@ void returnsOkForValidStorage() {\n     @Test\n     void returnsBadRequestForBrokenStorage() {\n         MatcherAssert.assertThat(\n-            new HealthSlice(new Settings.Fake(new FileStorage(Paths.get(\"/\")))),\n+            new HealthSlice(new Settings.Fake(new FileStorage(null))),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b321939ac7a295d1a859513f9909134f94276e46"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjA2NDY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/HealthSlice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMToyNjozN1rOHD8fpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMToyNjozN1rOHD8fpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg5ODkxNw==", "bodyText": "@genryxy handling UncheckedIOException here is wrong. It covers only one special case, the FakeStorage you have introduced in this PR. You should catch Exception here, handling just IOException here was wrong.", "url": "https://github.com/artipie/artipie/pull/471#discussion_r473898917", "createdAt": "2020-08-20T11:26:37Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/http/HealthSlice.java", "diffHunk": "@@ -93,7 +94,7 @@ public Response response(final String line,\n                 new Key.From(\".system\", \"test\"),\n                 new Content.From(\"OK\".getBytes(StandardCharsets.US_ASCII))\n             ).thenApply(none -> true).exceptionally(ignore -> false);\n-        } catch (final IOException ignore) {\n+        } catch (final IOException | UncheckedIOException ignore) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7585d61ac6c1399f19f08c6f5bf7514da3b68c"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2106, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}