{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMTc4NDY4", "number": 639, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzowNTo0NVrOEn8tmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDo1Mjo1NlrOEoBp8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzI0NjM1OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/FilesRepoITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzowNTo0NVrOHYw4sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzowNTo0NVrOHYw4sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcyODgxOQ==", "bodyText": "@genryxy methods flag and user are tightly coupled, they are used together in same way with same argument all the time. I'd suggest to refactor exec method to accept anonymous flag and add necessary args to the command when enabled.\nMaybe we should even rename exec to curl and omit first string argument, as it is always \"curl\" in this test class.", "url": "https://github.com/artipie/artipie/pull/639#discussion_r495728819", "createdAt": "2020-09-28T07:05:45Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/FilesRepoITCase.java", "diffHunk": "@@ -81,29 +93,18 @@\n      */\n     private int port;\n \n-    @BeforeEach\n-    void init() throws Exception {\n-        this.storage = new FileStorage(this.tmp);\n-        this.server = new ArtipieServer(this.tmp, \"my-file\", this.config());\n-        this.port = this.server.start();\n-        this.server.start();\n-        Testcontainers.exposeHostPorts(this.port);\n-        this.cntn = new GenericContainer<>(\"centos:centos8\")\n-            .withCommand(\"tail\", \"-f\", \"/dev/null\")\n-            .withWorkingDirectory(\"/home/\")\n-            .withFileSystemBind(this.tmp.toString(), \"/home\");\n-        this.cntn.start();\n-        this.exec(\"yum\", \"-y\", \"install\", \"curl\");\n-    }\n-\n-    @Test\n-    void curlGetShouldReceiveFile() throws Exception {\n-        final String url = \"http://host.testcontainers.internal:%d/my-file/file-repo/curl.txt\";\n+    @ParameterizedTest\n+    @ValueSource(booleans = {true, false})\n+    void curlGetShouldReceiveFile(final boolean anonymous) throws Exception {\n+        this.init(this.config(anonymous));\n         this.addFilesToStorage(\n             \"file-repo\", new Key.From(\"repos\", \"my-file\", \"file-repo\")\n         );\n         MatcherAssert.assertThat(\n-            this.exec(\"curl\", \"-i\", \"-X\", \"GET\", String.format(url, this.port)),\n+            this.exec(\n+                \"curl\", \"-i\", \"-X\", \"GET\", String.format(FilesRepoITCase.URL, this.port),\n+                this.flag(anonymous), this.user(anonymous, ArtipieServer.ALICE)\n+            ),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca850852718950afce33dea1e60741f5d9ff5317"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzM0ODAwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/FilesRepoITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzozODoyMlrOHYx1GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzozODoyMlrOHYx1GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc0NDI4MQ==", "bodyText": "@genryxy please also add a test to see that download permission is checked as well. That will require to do GET with user who lacks download permission", "url": "https://github.com/artipie/artipie/pull/639#discussion_r495744281", "createdAt": "2020-09-28T07:38:22Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/FilesRepoITCase.java", "diffHunk": "@@ -130,8 +135,35 @@ void curlPutShouldSaveFile() throws Exception {\n         );\n     }\n \n+    @ParameterizedTest\n+    @ValueSource(strings = {\"PUT\", \"GET\"})\n+    void curlPutAndGetShouldFailWithUnauthorized(final String req) throws Exception {\n+        this.init(this.config(false));\n+        MatcherAssert.assertThat(\n+            this.exec(\n+                \"curl\", \"-i\", \"-X\", req, String.format(FilesRepoITCase.URL, this.port),\n+                \"--user\", String.format(\n+                    \"%s:bad%s\", ArtipieServer.ALICE.name(), ArtipieServer.ALICE.password()\n+                )\n+            ),\n+            new StringContains(\"HTTP/1.1 401 Unauthorized\")\n+        );\n+    }\n+\n+    @Test\n+    void curlPutShouldFailWithForbidden() throws Exception {\n+        this.init(this.config(false));\n+        MatcherAssert.assertThat(\n+            this.exec(\n+                \"curl\", \"-i\", \"-X\", \"PUT\", String.format(FilesRepoITCase.URL, this.port),\n+                this.flag(false), this.user(false, ArtipieServer.BOB)\n+            ),\n+            new StringContains(\"HTTP/1.1 403 Forbidden\")\n+        );\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca850852718950afce33dea1e60741f5d9ff5317"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzY5NDMwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/FilesRepoITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxMzozNVrOHY1Fkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxMzozNVrOHY1Fkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5NzY1MQ==", "bodyText": "@genryxy I'd suggest to refactor the method so it accepts Optional<ArtipieServer.User> instead of ArtipieServer.Userand removeanonymousflag. This way we avoid input that makes no sense withanonymous=true` and some user specified", "url": "https://github.com/artipie/artipie/pull/639#discussion_r495797651", "createdAt": "2020-09-28T09:13:35Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/FilesRepoITCase.java", "diffHunk": "@@ -168,9 +154,20 @@ void tearDown() {\n         this.cntn.stop();\n     }\n \n-    private String exec(final String... command) throws Exception {\n-        Logger.debug(this, \"Command:\\n%s\", String.join(\" \", command));\n-        return this.cntn.execInContainer(command).getStdout();\n+    private String curl(final boolean anonymous, final String action,\n+        final ArtipieServer.User usr) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96840b01f8b2393b0cb6263d11a5bf013616c447"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzcwMTg5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/FilesRepoITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxNToyMlrOHY1J9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxNToyMlrOHY1J9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5ODc3Mg==", "bodyText": "@genryxy the code would be easier to understand if just inline these flag and user methods, the issue with these methods tightly coupled and called with same arguments in every place still stands", "url": "https://github.com/artipie/artipie/pull/639#discussion_r495798772", "createdAt": "2020-09-28T09:15:22Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/FilesRepoITCase.java", "diffHunk": "@@ -168,9 +154,20 @@ void tearDown() {\n         this.cntn.stop();\n     }\n \n-    private String exec(final String... command) throws Exception {\n-        Logger.debug(this, \"Command:\\n%s\", String.join(\" \", command));\n-        return this.cntn.execInContainer(command).getStdout();\n+    private String curl(final boolean anonymous, final String action,\n+        final ArtipieServer.User usr) throws Exception {\n+        final String url = \"http://host.testcontainers.internal:%d/my-file/file-repo/curl.txt\";\n+        final List<String> cmdlst = new ArrayList<>(\n+            Arrays.asList(\n+                \"curl\", \"-i\", \"-X\", action, String.format(url, this.port)\n+            )\n+        );\n+        cmdlst.add(this.flag(anonymous));\n+        cmdlst.add(this.user(anonymous, usr));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96840b01f8b2393b0cb6263d11a5bf013616c447"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzcxMDY0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/FilesRepoITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxNzozOVrOHY1PFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxNzozOVrOHY1PFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgwMDA4Nw==", "bodyText": "@genryxy why not just change these two lines into String[] cmdarr = cmdlst.toArray(new String[cmdlst.size()]);, first assignment is just not needed and is mind-boggling", "url": "https://github.com/artipie/artipie/pull/639#discussion_r495800087", "createdAt": "2020-09-28T09:17:39Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/FilesRepoITCase.java", "diffHunk": "@@ -168,9 +154,20 @@ void tearDown() {\n         this.cntn.stop();\n     }\n \n-    private String exec(final String... command) throws Exception {\n-        Logger.debug(this, \"Command:\\n%s\", String.join(\" \", command));\n-        return this.cntn.execInContainer(command).getStdout();\n+    private String curl(final boolean anonymous, final String action,\n+        final ArtipieServer.User usr) throws Exception {\n+        final String url = \"http://host.testcontainers.internal:%d/my-file/file-repo/curl.txt\";\n+        final List<String> cmdlst = new ArrayList<>(\n+            Arrays.asList(\n+                \"curl\", \"-i\", \"-X\", action, String.format(url, this.port)\n+            )\n+        );\n+        cmdlst.add(this.flag(anonymous));\n+        cmdlst.add(this.user(anonymous, usr));\n+        String[] cmdarr = new String[cmdlst.size()];\n+        cmdarr = cmdlst.toArray(cmdarr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96840b01f8b2393b0cb6263d11a5bf013616c447"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDA1NjE3OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/FilesRepoITCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDo1Mjo1NlrOHY4caw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDo1Mjo1NlrOHY4caw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg1MjY1MQ==", "bodyText": "@genryxy when I said about in-lining these methods I meant that we can just put an if {...} here and it would be more simple and less verbose:\nif (user.isPresent()) {\n  cmdlst.add(\"--user\");\n  cmdlst.add(String.format(...));\n}\nor even\nuser.ifPresent(\n  usr -> {\n    cmdlst.add(\"--user\");\n    cmdlst.add(String.format(...));\n  }\n)", "url": "https://github.com/artipie/artipie/pull/639#discussion_r495852651", "createdAt": "2020-09-28T10:52:56Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/FilesRepoITCase.java", "diffHunk": "@@ -154,18 +158,18 @@ void tearDown() {\n         this.cntn.stop();\n     }\n \n-    private String curl(final boolean anonymous, final String action,\n-        final ArtipieServer.User usr) throws Exception {\n+    private String curl(final String action,\n+        final Optional<ArtipieServer.User> usr) throws Exception {\n         final String url = \"http://host.testcontainers.internal:%d/my-file/file-repo/curl.txt\";\n         final List<String> cmdlst = new ArrayList<>(\n             Arrays.asList(\n                 \"curl\", \"-i\", \"-X\", action, String.format(url, this.port)\n             )\n         );\n-        cmdlst.add(this.flag(anonymous));\n-        cmdlst.add(this.user(anonymous, usr));\n-        String[] cmdarr = new String[cmdlst.size()];\n-        cmdarr = cmdlst.toArray(cmdarr);\n+        final Pair<String, String> pair = this.flagAndUser(usr);\n+        cmdlst.add(pair.getLeft());\n+        cmdlst.add(pair.getRight());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "001e32ca680a85bf1630978a9cdef52c1b83c0eb"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2019, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}