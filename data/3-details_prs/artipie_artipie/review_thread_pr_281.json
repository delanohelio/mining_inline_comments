{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MDU1NDA3", "number": 281, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwOTowMzo1M1rOEMZg2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDowNjozM1rOEMgVLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNDM2Mzc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/SliceFromConfig.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwOTowMzo1M1rOGue7Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMDowOTowNlrOGuhOTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NDMwNg==", "bodyText": "@olegmoz can we add a test for this?", "url": "https://github.com/artipie/artipie/pull/281#discussion_r451394306", "createdAt": "2020-07-08T09:03:53Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/SliceFromConfig.java", "diffHunk": "@@ -243,10 +245,11 @@ static Slice build(final Settings settings, final Authentication auth,\n                 final String host = cfg.settings()\n                     .orElseThrow(() -> new IllegalStateException(\"Repo settings not found\"))\n                     .string(\"host\");\n-                slice = new DockerSlice(\n-                    cfg.path(),\n-                    new ProxyDocker(new ClientSlice(SliceFromConfig.HTTP, host))\n-                );\n+                final Docker proxy = new ProxyDocker(new ClientSlice(SliceFromConfig.HTTP, host));\n+                final Docker docker = cfg.storageOpt()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686a97a7741920bdf392830642ffb9a016d1fa2d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5Nzg1OQ==", "bodyText": "@Vatavuk I doubt that we can test this class in any meaningful way without significant refactoring. We may check that it returns DockerSlice, but cannot check what's inside in unit test", "url": "https://github.com/artipie/artipie/pull/281#discussion_r451397859", "createdAt": "2020-07-08T09:10:15Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/SliceFromConfig.java", "diffHunk": "@@ -243,10 +245,11 @@ static Slice build(final Settings settings, final Authentication auth,\n                 final String host = cfg.settings()\n                     .orElseThrow(() -> new IllegalStateException(\"Repo settings not found\"))\n                     .string(\"host\");\n-                slice = new DockerSlice(\n-                    cfg.path(),\n-                    new ProxyDocker(new ClientSlice(SliceFromConfig.HTTP, host))\n-                );\n+                final Docker proxy = new ProxyDocker(new ClientSlice(SliceFromConfig.HTTP, host));\n+                final Docker docker = cfg.storageOpt()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NDMwNg=="}, "originalCommit": {"oid": "686a97a7741920bdf392830642ffb9a016d1fa2d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQwOTIxMA==", "bodyText": "@olegmoz what about an IT test?", "url": "https://github.com/artipie/artipie/pull/281#discussion_r451409210", "createdAt": "2020-07-08T09:29:04Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/SliceFromConfig.java", "diffHunk": "@@ -243,10 +245,11 @@ static Slice build(final Settings settings, final Authentication auth,\n                 final String host = cfg.settings()\n                     .orElseThrow(() -> new IllegalStateException(\"Repo settings not found\"))\n                     .string(\"host\");\n-                slice = new DockerSlice(\n-                    cfg.path(),\n-                    new ProxyDocker(new ClientSlice(SliceFromConfig.HTTP, host))\n-                );\n+                final Docker proxy = new ProxyDocker(new ClientSlice(SliceFromConfig.HTTP, host));\n+                final Docker docker = cfg.storageOpt()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NDMwNg=="}, "originalCommit": {"oid": "686a97a7741920bdf392830642ffb9a016d1fa2d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTQzMjAxNQ==", "bodyText": "@Vatavuk that would be possible, but there no any IT tests in the project yet", "url": "https://github.com/artipie/artipie/pull/281#discussion_r451432015", "createdAt": "2020-07-08T10:09:06Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/SliceFromConfig.java", "diffHunk": "@@ -243,10 +245,11 @@ static Slice build(final Settings settings, final Authentication auth,\n                 final String host = cfg.settings()\n                     .orElseThrow(() -> new IllegalStateException(\"Repo settings not found\"))\n                     .string(\"host\");\n-                slice = new DockerSlice(\n-                    cfg.path(),\n-                    new ProxyDocker(new ClientSlice(SliceFromConfig.HTTP, host))\n-                );\n+                final Docker proxy = new ProxyDocker(new ClientSlice(SliceFromConfig.HTTP, host));\n+                final Docker docker = cfg.storageOpt()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTM5NDMwNg=="}, "originalCommit": {"oid": "686a97a7741920bdf392830642ffb9a016d1fa2d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTQ4MDc2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/RepoConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDowNjozM1rOGupyCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDo0NjoyMlrOGurnkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU3MjIzNQ==", "bodyText": "@olegmoz I think we can replace storage() with this implementation and just call storage().orElseThrow() to get storage where it's required", "url": "https://github.com/artipie/artipie/pull/281#discussion_r451572235", "createdAt": "2020-07-08T14:06:33Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/RepoConfig.java", "diffHunk": "@@ -128,17 +128,32 @@ public URL url() {\n      * @return Async storage for repo\n      */\n     public Storage storage() {\n-        final YamlMapping repo = this.repoConfig();\n-        final Storage storage;\n-        final YamlNode node = repo.value(\"storage\");\n-        if (node instanceof Scalar) {\n-            storage = this.storages.storage(((Scalar) node).value());\n-        } else if (node instanceof YamlMapping) {\n-            storage = new YamlStorage((YamlMapping) node).storage();\n-        } else {\n-            throw new IllegalStateException(String.format(\"Invalid storage config: %s\", node));\n-        }\n-        return new SubStorage(this.prefix, new LoggingStorage(Level.INFO, storage));\n+        return this.storageOpt().orElseThrow(\n+            () -> new IllegalStateException(\"Storage is not configured\")\n+        );\n+    }\n+\n+    /**\n+     * Create storage if configured.\n+     *\n+     * @return Async storage for repo\n+     */\n+    public Optional<Storage> storageOpt() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79c4f9f60269f5fdd5372be7276ff0c9a3c5b82b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMjMyMA==", "bodyText": "@g4s8 I think I did just that, RepoConfig.storage() method looks like that now:\npublic Storage storage() {\n        return this.storageOpt().orElseThrow(\n            () -> new IllegalStateException(\"Storage is not configured\")\n        );\n    }", "url": "https://github.com/artipie/artipie/pull/281#discussion_r451602320", "createdAt": "2020-07-08T14:46:22Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/RepoConfig.java", "diffHunk": "@@ -128,17 +128,32 @@ public URL url() {\n      * @return Async storage for repo\n      */\n     public Storage storage() {\n-        final YamlMapping repo = this.repoConfig();\n-        final Storage storage;\n-        final YamlNode node = repo.value(\"storage\");\n-        if (node instanceof Scalar) {\n-            storage = this.storages.storage(((Scalar) node).value());\n-        } else if (node instanceof YamlMapping) {\n-            storage = new YamlStorage((YamlMapping) node).storage();\n-        } else {\n-            throw new IllegalStateException(String.format(\"Invalid storage config: %s\", node));\n-        }\n-        return new SubStorage(this.prefix, new LoggingStorage(Level.INFO, storage));\n+        return this.storageOpt().orElseThrow(\n+            () -> new IllegalStateException(\"Storage is not configured\")\n+        );\n+    }\n+\n+    /**\n+     * Create storage if configured.\n+     *\n+     * @return Async storage for repo\n+     */\n+    public Optional<Storage> storageOpt() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU3MjIzNQ=="}, "originalCommit": {"oid": "79c4f9f60269f5fdd5372be7276ff0c9a3c5b82b"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2242, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}