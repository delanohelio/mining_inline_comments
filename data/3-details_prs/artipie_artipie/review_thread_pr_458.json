{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NTU1NjE1", "number": 458, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDoyOFrOEZ3kRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDoyOFrOEZ3kRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTYwMjYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/HealthSlice.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDoyOFrOHC8enw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODoyMDoyOFrOHC8enw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg1MDA3OQ==", "bodyText": "@g4s8 I am not sure if you are adapting to some existing health check protocol, but it does not look good to respond with 4xx client error response. I think some 5xx server error is more appropriate, maybe 503 Service Unavailable will make more sense?", "url": "https://github.com/artipie/artipie/pull/458#discussion_r472850079", "createdAt": "2020-08-19T08:20:28Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/http/HealthSlice.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http;\n+\n+import com.artipie.Settings;\n+import com.artipie.api.RsJson;\n+import com.artipie.asto.Content;\n+import com.artipie.asto.Key;\n+import com.artipie.http.async.AsyncResponse;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithStatus;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Map;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.CompletionStage;\n+import javax.json.Json;\n+import org.reactivestreams.Publisher;\n+\n+/**\n+ * Health check slice.\n+ * <p>\n+ * Returns JSON with verbose status checks,\n+ * response status is {@code OK} if all status passed and {@code BAD_REQUEST} if any failed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ba07b4ce2d2c6051700530dd5e7ede1b8ac7f24"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2322, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}