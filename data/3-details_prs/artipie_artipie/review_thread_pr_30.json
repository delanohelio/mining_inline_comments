{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTIyNDU1", "number": 30, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo0MzoyOFrODheePg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo0NTo0NVrODhehJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDI4ODYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/VertxMain.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo0MzoyOFrOFsOiCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzozNToyOVrOFst6sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxOTc1Mw==", "bodyText": "Can we avoid properties and use args?", "url": "https://github.com/artipie/artipie/pull/30#discussion_r381919753", "createdAt": "2020-02-20T10:43:28Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {\n+\n+    /**\n+     * Slice to serve.\n+     */\n+    private final Slice slice;\n+\n+    /**\n+     * Server port.\n+     */\n+    private final int port;\n+\n+    /**\n+     * Ctor.\n+     * @param slice To server\n+     * @param port HTTP port\n+     */\n+    private VertxMain(final Slice slice, final int port) {\n+        this.slice = slice;\n+        this.port = port;\n+    }\n+\n+    @Override\n+    public void run() {\n+        new VertxSliceServer(this.slice, this.port).start();\n+    }\n+\n+    /**\n+     * Entry point.\n+     * @param args CLI args\n+     */\n+    public static void main(final String... args) {\n+        final String storage = System.getProperty(\"artipie.storage\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b430f906f12a995c778c9e117d614338b9688beb"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzMzk3MQ==", "bodyText": "@Sammers21 you are right, added todo for CLI options", "url": "https://github.com/artipie/artipie/pull/30#discussion_r382433971", "createdAt": "2020-02-21T07:35:29Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {\n+\n+    /**\n+     * Slice to serve.\n+     */\n+    private final Slice slice;\n+\n+    /**\n+     * Server port.\n+     */\n+    private final int port;\n+\n+    /**\n+     * Ctor.\n+     * @param slice To server\n+     * @param port HTTP port\n+     */\n+    private VertxMain(final Slice slice, final int port) {\n+        this.slice = slice;\n+        this.port = port;\n+    }\n+\n+    @Override\n+    public void run() {\n+        new VertxSliceServer(this.slice, this.port).start();\n+    }\n+\n+    /**\n+     * Entry point.\n+     * @param args CLI args\n+     */\n+    public static void main(final String... args) {\n+        final String storage = System.getProperty(\"artipie.storage\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkxOTc1Mw=="}, "originalCommit": {"oid": "b430f906f12a995c778c9e117d614338b9688beb"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDI5MjY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/VertxMain.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo0NDozOVrOFsOkfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzozNTo1MlrOFst7NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDM4MQ==", "bodyText": "No, don't do this. Just start VertxSliceServer and that is it.", "url": "https://github.com/artipie/artipie/pull/30#discussion_r381920381", "createdAt": "2020-02-20T10:44:39Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {\n+\n+    /**\n+     * Slice to serve.\n+     */\n+    private final Slice slice;\n+\n+    /**\n+     * Server port.\n+     */\n+    private final int port;\n+\n+    /**\n+     * Ctor.\n+     * @param slice To server\n+     * @param port HTTP port\n+     */\n+    private VertxMain(final Slice slice, final int port) {\n+        this.slice = slice;\n+        this.port = port;\n+    }\n+\n+    @Override\n+    public void run() {\n+        new VertxSliceServer(this.slice, this.port).start();\n+    }\n+\n+    /**\n+     * Entry point.\n+     * @param args CLI args\n+     */\n+    public static void main(final String... args) {\n+        final String storage = System.getProperty(\"artipie.storage\");\n+        final int port = Integer.getInteger(\"artipie.port\");\n+        final Thread thread = new Thread(\n+            new VertxMain(\n+                new Pie(new FileStorage(Path.of(storage))),\n+                port\n+            )\n+        );\n+        thread.setName(VertxMain.class.getSimpleName());\n+        thread.checkAccess();\n+        thread.setPriority(Thread.MAX_PRIORITY);\n+        thread.start();\n+        try {\n+            thread.join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b430f906f12a995c778c9e117d614338b9688beb"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzNDEwMA==", "bodyText": "@Sammers21 fixed", "url": "https://github.com/artipie/artipie/pull/30#discussion_r382434100", "createdAt": "2020-02-21T07:35:52Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {\n+\n+    /**\n+     * Slice to serve.\n+     */\n+    private final Slice slice;\n+\n+    /**\n+     * Server port.\n+     */\n+    private final int port;\n+\n+    /**\n+     * Ctor.\n+     * @param slice To server\n+     * @param port HTTP port\n+     */\n+    private VertxMain(final Slice slice, final int port) {\n+        this.slice = slice;\n+        this.port = port;\n+    }\n+\n+    @Override\n+    public void run() {\n+        new VertxSliceServer(this.slice, this.port).start();\n+    }\n+\n+    /**\n+     * Entry point.\n+     * @param args CLI args\n+     */\n+    public static void main(final String... args) {\n+        final String storage = System.getProperty(\"artipie.storage\");\n+        final int port = Integer.getInteger(\"artipie.port\");\n+        final Thread thread = new Thread(\n+            new VertxMain(\n+                new Pie(new FileStorage(Path.of(storage))),\n+                port\n+            )\n+        );\n+        thread.setName(VertxMain.class.getSimpleName());\n+        thread.checkAccess();\n+        thread.setPriority(Thread.MAX_PRIORITY);\n+        thread.start();\n+        try {\n+            thread.join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDM4MQ=="}, "originalCommit": {"oid": "b430f906f12a995c778c9e117d614338b9688beb"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDI5NjA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/VertxMain.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo0NTo0NVrOFsOmmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzozNjozOFrOFst8OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDkyMw==", "bodyText": "Can you just call it Main?", "url": "https://github.com/artipie/artipie/pull/30#discussion_r381920923", "createdAt": "2020-02-20T10:45:45Z", "author": {"login": "Sammers21"}, "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b430f906f12a995c778c9e117d614338b9688beb"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzNDM2MQ==", "bodyText": "@Sammers21 no, it's one of possible implementation, I'd prefer to use implementation name as part of class name", "url": "https://github.com/artipie/artipie/pull/30#discussion_r382434361", "createdAt": "2020-02-21T07:36:38Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/VertxMain.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * The MIT License (MIT)\n+ *\n+ * Copyright (c) 2020 artipie.com\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included\n+ * in all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+\n+package com.artipie;\n+\n+import com.artipie.asto.fs.FileStorage;\n+import com.artipie.http.Slice;\n+import com.artipie.vertx.VertxSliceServer;\n+import com.jcabi.log.Logger;\n+import java.nio.file.Path;\n+\n+/**\n+ * Vertx server entry point.\n+ * @since 1.0\n+ */\n+public final class VertxMain implements Runnable {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMDkyMw=="}, "originalCommit": {"oid": "b430f906f12a995c778c9e117d614338b9688beb"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2338, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}