{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MzU3NDA4", "number": 639, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDozMzo1MlrODuKrEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjozMjo1MFrODuL5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzM1OTUyOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDozMzo1MlrOGABL5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDozMzo1MlrOGABL5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3MjYxMg==", "bodyText": "\"Processing private transaction corresponding to PMT {} in privacy group {}\"?", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402672612", "createdAt": "2020-04-03T00:33:52Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -111,10 +113,7 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n \n     final Bytes32 privacyGroupId = Bytes32.wrap(maybeGroupId.get());\n \n-    LOG.debug(\n-        \"Processing private transaction {} in privacy group {}\",\n-        privateTransaction.getHash(),\n-        privacyGroupId);\n+    LOG.debug(\"Processing private transaction {} in privacy group {}\", pmtHash, privacyGroupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzM2ODg2OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDozOToxM1rOGABRXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDozOToxM1rOGABRXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3NDAxNA==", "bodyText": "should it be \"corresponding\"? I'm not sure, maybe we should ask Madeline :-)", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402674014", "createdAt": "2020-04-03T00:39:13Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransaction.java", "diffHunk": "@@ -414,8 +416,11 @@ public BigInteger getV() {\n   /**\n    * Returns the transaction hash.\n    *\n+   * @deprecated All private transactions should be identified by their correspondent PMT hash.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzU1MzgxOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionSimulator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjoyOTowMlrOGAC-1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjoyOTowMlrOGAC-1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMjAzOA==", "bodyText": "What about this: \"// Corresponding PMT does not exist.\"", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402702038", "createdAt": "2020-04-03T02:29:02Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionSimulator.java", "diffHunk": "@@ -122,6 +122,7 @@ public PrivateTransactionSimulator(\n             publicWorldState.updater(),\n             disposablePrivateState.updater(),\n             header,\n+            Hash.ZERO, // PMT hash is not needed as this private transaction doesn't exist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzU1NTMyOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjozMDowMlrOGAC_xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjozMDowMlrOGAC_xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMjI3Ng==", "bodyText": "\"Validating private transaction corresponding to PMT {}\" ?", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402702276", "createdAt": "2020-04-03T02:30:02Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionValidator.java", "diffHunk": "@@ -38,25 +38,21 @@ public PrivateTransactionValidator(final Optional<BigInteger> chainId) {\n       final PrivateTransaction transaction,\n       final Long accountNonce,\n       final boolean allowFutureNonces) {\n-    LOG.debug(\"Validating private transaction fields of {}\", transaction.getHash());\n+    LOG.debug(\"Validating private transaction {}\", transaction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzU1NzE3OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/PrivacyPrecompiledContract.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjozMToyNFrOGADA5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjozMToyNFrOGADA5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMjU2Nw==", "bodyText": "s.a.", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402702567", "createdAt": "2020-04-03T02:31:24Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/PrivacyPrecompiledContract.java", "diffHunk": "@@ -127,10 +129,7 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     final Bytes32 privacyGroupId =\n         Bytes32.wrap(Bytes.fromBase64String(receiveResponse.getPrivacyGroupId()));\n \n-    LOG.debug(\n-        \"Processing private transaction {} in privacy group {}\",\n-        privateTransaction.getHash(),\n-        privacyGroupId);\n+    LOG.debug(\"Processing private transaction {} in privacy group {}\", pmtHash, privacyGroupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzU1OTU3OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjozMjo1MFrOGADCSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMjozMjo1MFrOGADCSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcwMjkyMQ==", "bodyText": "We might not need the \"corresponding to PMT\" business here ....", "url": "https://github.com/hyperledger/besu/pull/639#discussion_r402702921", "createdAt": "2020-04-03T02:32:50Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateTransactionValidator.java", "diffHunk": "@@ -38,25 +38,21 @@ public PrivateTransactionValidator(final Optional<BigInteger> chainId) {\n       final PrivateTransaction transaction,\n       final Long accountNonce,\n       final boolean allowFutureNonces) {\n-    LOG.debug(\"Validating private transaction fields of {}\", transaction.getHash());\n+    LOG.debug(\"Validating private transaction {}\", transaction);\n     final ValidationResult<TransactionInvalidReason> privateFieldsValidationResult =\n         validatePrivateTransactionFields(transaction);\n     if (!privateFieldsValidationResult.isValid()) {\n       LOG.debug(\n-          \"Private Transaction fields are invalid {}, {}\",\n-          transaction.getHash(),\n+          \"Private Transaction fields are invalid {}\",\n           privateFieldsValidationResult.getErrorMessage());\n       return privateFieldsValidationResult;\n     }\n \n-    LOG.debug(\"Validating the signature of Private Transaction {} \", transaction.getHash());\n-\n     final ValidationResult<TransactionValidator.TransactionInvalidReason>\n         signatureValidationResult = validateTransactionSignature(transaction);\n     if (!signatureValidationResult.isValid()) {\n       LOG.debug(\n-          \"Private Transaction {}, failed validation {}, {}\",\n-          transaction.getHash(),\n+          \"Private Transaction failed signature validation {}, {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac216cdff8976dd5c4bd6010c580d389faf5cfe3"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1019, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}