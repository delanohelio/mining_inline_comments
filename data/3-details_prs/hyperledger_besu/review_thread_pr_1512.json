{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0Mjg5NjY4", "number": 1512, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjozNzozMlrOE0k7Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjozNzozMlrOE0k7Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTY2MzQzOnYy", "diffSide": "RIGHT", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fullsync/FullImportBlockStep.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjozNzozMlrOHsYSPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTozOTozNVrOHtBZhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5NzI3Ng==", "bodyText": "Why not just allow it to log the 0? It doesn't do much harm and it makes it more consistent, grepable, etc.", "url": "https://github.com/hyperledger/besu/pull/1512#discussion_r516297276", "createdAt": "2020-11-02T22:37:32Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fullsync/FullImportBlockStep.java", "diffHunk": "@@ -56,12 +60,28 @@ public void accept(final Block block) {\n     if (!importer.importBlock(protocolContext, block, HeaderValidationMode.SKIP_DETACHED)) {\n       throw new InvalidBlockException(\"Failed to import block\", blockNumber, block.getHash());\n     }\n+    gasAccumulator += block.getHeader().getGasUsed();\n     int peerCount = -1; // ethContext is not available in tests\n     if (ethContext != null && ethContext.getEthPeers().peerCount() >= 0) {\n       peerCount = ethContext.getEthPeers().peerCount();\n     }\n     if (blockNumber % 200 == 0) {\n-      LOG.info(\"Import reached block {} ({}), Peers: {}\", blockNumber, shortHash, peerCount);\n+      final long nowMilli = Instant.now().toEpochMilli();\n+      if (lastReportMillis == 0 || gasAccumulator == 0) {\n+        // this is a formatted logger statement\n+        //noinspection PlaceholderCountMatchesArgumentCount\n+        LOG.info(\"Import reached block %d (%s), Peers: %d\", blockNumber, shortHash, peerCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7f6bcd742d163facd592581169dea7c18d2d6a"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3MDg4NQ==", "bodyText": "updated it to log a - when either time is not accurate or gas burnt is zero.  Greps consistently now.", "url": "https://github.com/hyperledger/besu/pull/1512#discussion_r516970885", "createdAt": "2020-11-03T21:39:35Z", "author": {"login": "shemnon"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fullsync/FullImportBlockStep.java", "diffHunk": "@@ -56,12 +60,28 @@ public void accept(final Block block) {\n     if (!importer.importBlock(protocolContext, block, HeaderValidationMode.SKIP_DETACHED)) {\n       throw new InvalidBlockException(\"Failed to import block\", blockNumber, block.getHash());\n     }\n+    gasAccumulator += block.getHeader().getGasUsed();\n     int peerCount = -1; // ethContext is not available in tests\n     if (ethContext != null && ethContext.getEthPeers().peerCount() >= 0) {\n       peerCount = ethContext.getEthPeers().peerCount();\n     }\n     if (blockNumber % 200 == 0) {\n-      LOG.info(\"Import reached block {} ({}), Peers: {}\", blockNumber, shortHash, peerCount);\n+      final long nowMilli = Instant.now().toEpochMilli();\n+      if (lastReportMillis == 0 || gasAccumulator == 0) {\n+        // this is a formatted logger statement\n+        //noinspection PlaceholderCountMatchesArgumentCount\n+        LOG.info(\"Import reached block %d (%s), Peers: %d\", blockNumber, shortHash, peerCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI5NzI3Ng=="}, "originalCommit": {"oid": "1a7f6bcd742d163facd592581169dea7c18d2d6a"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1313, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}