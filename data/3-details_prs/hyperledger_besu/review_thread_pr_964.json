{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTk0ODA5", "number": 964, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDozOToxNVrOD-jWBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDo0MTo0NVrOD-jYjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTE3MzgzOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12G1MultiExpPrecompiledContract.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDozOToxNVrOGYuNpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTozNTo0OVrOGY3wkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjE2NQ==", "bodyText": "do we need to perform additional checks if input is null?", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428576165", "createdAt": "2020-05-21T10:39:15Z", "author": {"login": "usmansaleem"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12G1MultiExpPrecompiledContract.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12G1MultiExpPrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12G1MultiExpPrecompiledContract() {\n+    super(\"BLS12_G1MULTIEXP\", LibEthPairings.BLS12_G1MULTIEXP_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczMjU2MQ==", "bodyText": "none of the other precompiles null check, and I would expect one of our tests to induce a npe if it were possible.", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428732561", "createdAt": "2020-05-21T15:35:49Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12G1MultiExpPrecompiledContract.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12G1MultiExpPrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12G1MultiExpPrecompiledContract() {\n+    super(\"BLS12_G1MULTIEXP\", LibEthPairings.BLS12_G1MULTIEXP_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NjE2NQ=="}, "originalCommit": {"oid": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTE3Nzk0OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12MapFp2ToG2PrecompiledContract.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDo0MDo0OFrOGYuQHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNTozOToxM1rOGY34Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3Njc5OQ==", "bodyText": "nit: 110_000", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428576799", "createdAt": "2020-05-21T10:40:48Z", "author": {"login": "usmansaleem"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12MapFp2ToG2PrecompiledContract.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12MapFp2ToG2PrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12MapFp2ToG2PrecompiledContract() {\n+    super(\"BLS12_MAP_FIELD_TO_CURVE\", LibEthPairings.BLS12_MAP_FP2_TO_G2_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {\n+    return Gas.of(110000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczNDU0Mg==", "bodyText": "fixed, and a some other places in BLS contracts.", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428734542", "createdAt": "2020-05-21T15:39:13Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12MapFp2ToG2PrecompiledContract.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12MapFp2ToG2PrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12MapFp2ToG2PrecompiledContract() {\n+    super(\"BLS12_MAP_FIELD_TO_CURVE\", LibEthPairings.BLS12_MAP_FP2_TO_G2_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {\n+    return Gas.of(110000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3Njc5OQ=="}, "originalCommit": {"oid": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTE4MDMxOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12PairingPrecompiledContract.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDo0MTo0NVrOGYuRkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzozNDowMVrOGZGMBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NzE2OA==", "bodyText": "why considering 23_000 as large?", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428577168", "createdAt": "2020-05-21T10:41:45Z", "author": {"login": "usmansaleem"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12PairingPrecompiledContract.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12PairingPrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12PairingPrecompiledContract() {\n+    super(\"BLS12_PAIRING\", LibEthPairings.BLS12_PAIR_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {\n+    final int k = input.size() / 384;\n+    return Gas.of(23_000L * k + 115_000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODczMDE5Nw==", "bodyText": "Integer overflow.  LGTM.com will complain that we are doing integer math then casting it to a long and that there may be a surprising loss in precision.  By starting out with a long constant the whole string of math is done at Long width.  It would take an amazingly large k value to overflow a 32 bit int, but it keeps the automated checkers happy.", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428730197", "createdAt": "2020-05-21T15:32:03Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12PairingPrecompiledContract.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12PairingPrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12PairingPrecompiledContract() {\n+    super(\"BLS12_PAIRING\", LibEthPairings.BLS12_PAIR_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {\n+    final int k = input.size() / 384;\n+    return Gas.of(23_000L * k + 115_000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NzE2OA=="}, "originalCommit": {"oid": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2ODk2Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/hyperledger/besu/pull/964#discussion_r428968966", "createdAt": "2020-05-21T23:34:01Z", "author": {"login": "usmansaleem"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/BLS12PairingPrecompiledContract.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.ethereum.mainnet.precompiles;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.nativelib.bls12_381.LibEthPairings;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+\n+public class BLS12PairingPrecompiledContract extends AbstractBLS12PrecompiledContract {\n+\n+  public BLS12PairingPrecompiledContract() {\n+    super(\"BLS12_PAIRING\", LibEthPairings.BLS12_PAIR_OPERATION_RAW_VALUE);\n+  }\n+\n+  @Override\n+  public Gas gasRequirement(final Bytes input) {\n+    final int k = input.size() / 384;\n+    return Gas.of(23_000L * k + 115_000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU3NzE2OA=="}, "originalCommit": {"oid": "ddf2b9411fab61a3da4f9e283ef49dcc7f249823"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 879, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}