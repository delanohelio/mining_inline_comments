{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMjIzMzQw", "number": 670, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTozNDowMFrODwdPvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTozNDowMFrODwdPvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMTM3NDA2OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionValidator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTozNDowMFrOGDeHZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTo0MzoxOFrOGDefqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MjMyNQ==", "bodyText": "Why do we need the blockNumber?  We get a separate TransactionValidator per fork, so either EIP 1559 will be configured because it applies in that fork or it won't be present because it wasn't configured. It's all kept in the ProtocolSchedule.  I think we should do without it.", "url": "https://github.com/hyperledger/besu/pull/670#discussion_r406292325", "createdAt": "2020-04-09T15:34:00Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionValidator.java", "diffHunk": "@@ -40,24 +42,46 @@\n   private final Optional<BigInteger> chainId;\n \n   private Optional<TransactionFilter> transactionFilter = Optional.empty();\n+  private final Optional<EIP1559> maybeEip1559;\n \n   public MainnetTransactionValidator(\n       final GasCalculator gasCalculator,\n       final boolean checkSignatureMalleability,\n       final Optional<BigInteger> chainId) {\n+    this(gasCalculator, checkSignatureMalleability, chainId, Optional.empty());\n+  }\n+\n+  public MainnetTransactionValidator(\n+      final GasCalculator gasCalculator,\n+      final boolean checkSignatureMalleability,\n+      final Optional<BigInteger> chainId,\n+      final Optional<EIP1559> maybeEip1559) {\n     this.gasCalculator = gasCalculator;\n     this.disallowSignatureMalleability = checkSignatureMalleability;\n     this.chainId = chainId;\n+    this.maybeEip1559 = maybeEip1559;\n   }\n \n   @Override\n-  public ValidationResult<TransactionInvalidReason> validate(final Transaction transaction) {\n+  public ValidationResult<TransactionInvalidReason> validate(\n+      final Transaction transaction, final long blockNumber) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1003315c3d59b84fc1ac948fdea265ef92fa4d93"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5NDE0Mg==", "bodyText": "Oh yes you're right.", "url": "https://github.com/hyperledger/besu/pull/670#discussion_r406294142", "createdAt": "2020-04-09T15:36:52Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionValidator.java", "diffHunk": "@@ -40,24 +42,46 @@\n   private final Optional<BigInteger> chainId;\n \n   private Optional<TransactionFilter> transactionFilter = Optional.empty();\n+  private final Optional<EIP1559> maybeEip1559;\n \n   public MainnetTransactionValidator(\n       final GasCalculator gasCalculator,\n       final boolean checkSignatureMalleability,\n       final Optional<BigInteger> chainId) {\n+    this(gasCalculator, checkSignatureMalleability, chainId, Optional.empty());\n+  }\n+\n+  public MainnetTransactionValidator(\n+      final GasCalculator gasCalculator,\n+      final boolean checkSignatureMalleability,\n+      final Optional<BigInteger> chainId,\n+      final Optional<EIP1559> maybeEip1559) {\n     this.gasCalculator = gasCalculator;\n     this.disallowSignatureMalleability = checkSignatureMalleability;\n     this.chainId = chainId;\n+    this.maybeEip1559 = maybeEip1559;\n   }\n \n   @Override\n-  public ValidationResult<TransactionInvalidReason> validate(final Transaction transaction) {\n+  public ValidationResult<TransactionInvalidReason> validate(\n+      final Transaction transaction, final long blockNumber) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MjMyNQ=="}, "originalCommit": {"oid": "1003315c3d59b84fc1ac948fdea265ef92fa4d93"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5ODUzOA==", "bodyText": "Done.", "url": "https://github.com/hyperledger/besu/pull/670#discussion_r406298538", "createdAt": "2020-04-09T15:43:18Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionValidator.java", "diffHunk": "@@ -40,24 +42,46 @@\n   private final Optional<BigInteger> chainId;\n \n   private Optional<TransactionFilter> transactionFilter = Optional.empty();\n+  private final Optional<EIP1559> maybeEip1559;\n \n   public MainnetTransactionValidator(\n       final GasCalculator gasCalculator,\n       final boolean checkSignatureMalleability,\n       final Optional<BigInteger> chainId) {\n+    this(gasCalculator, checkSignatureMalleability, chainId, Optional.empty());\n+  }\n+\n+  public MainnetTransactionValidator(\n+      final GasCalculator gasCalculator,\n+      final boolean checkSignatureMalleability,\n+      final Optional<BigInteger> chainId,\n+      final Optional<EIP1559> maybeEip1559) {\n     this.gasCalculator = gasCalculator;\n     this.disallowSignatureMalleability = checkSignatureMalleability;\n     this.chainId = chainId;\n+    this.maybeEip1559 = maybeEip1559;\n   }\n \n   @Override\n-  public ValidationResult<TransactionInvalidReason> validate(final Transaction transaction) {\n+  public ValidationResult<TransactionInvalidReason> validate(\n+      final Transaction transaction, final long blockNumber) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI5MjMyNQ=="}, "originalCommit": {"oid": "1003315c3d59b84fc1ac948fdea265ef92fa4d93"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1034, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}