{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NTY0OTU4", "number": 941, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoyMDo1M1rOD90hPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoyOTo1N1rOD90z2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTUwMjA0OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/BerlinGasCalculator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoyMDo1M1rOGXiwyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo1NzozNFrOGXknsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzOTk3OA==", "bodyText": "(optional) Gas.ZERO", "url": "https://github.com/hyperledger/besu/pull/941#discussion_r427339978", "createdAt": "2020-05-19T14:20:53Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/BerlinGasCalculator.java", "diffHunk": "@@ -18,7 +18,7 @@\n \n public class BerlinGasCalculator extends IstanbulGasCalculator {\n \n-  private static final Gas BEGIN_SUB_GAS_COST = Gas.of(1);\n+  private static final Gas BEGIN_SUB_GAS_COST = Gas.of(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63353b80cf2507c843ff26b0070c34e5a0e124ad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MDQxNg==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/941#discussion_r427370416", "createdAt": "2020-05-19T14:57:34Z", "author": {"login": "matkt"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/BerlinGasCalculator.java", "diffHunk": "@@ -18,7 +18,7 @@\n \n public class BerlinGasCalculator extends IstanbulGasCalculator {\n \n-  private static final Gas BEGIN_SUB_GAS_COST = Gas.of(1);\n+  private static final Gas BEGIN_SUB_GAS_COST = Gas.of(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzOTk3OA=="}, "originalCommit": {"oid": "63353b80cf2507c843ff26b0070c34e5a0e124ad"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTUzNjk2OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/operations/BeginSubOperationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoyNzoyNlrOGXjH9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo1Nzo0MlrOGXkoIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0NTkxMA==", "bodyText": "same as above", "url": "https://github.com/hyperledger/besu/pull/941#discussion_r427345910", "createdAt": "2020-05-19T14:27:26Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/operations/BeginSubOperationTest.java", "diffHunk": "@@ -42,7 +43,7 @@\n   private static final GasCalculator gasCalculator = new BerlinGasCalculator();\n \n   private static final int CURRENT_PC = 1;\n-  private static final Gas BEGIN_SUB_GAS_COST = Gas.of(1);\n+  private static final Gas BEGIN_SUB_GAS_COST = Gas.of(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63353b80cf2507c843ff26b0070c34e5a0e124ad"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MDUyOA==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/941#discussion_r427370528", "createdAt": "2020-05-19T14:57:42Z", "author": {"login": "matkt"}, "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/operations/BeginSubOperationTest.java", "diffHunk": "@@ -42,7 +43,7 @@\n   private static final GasCalculator gasCalculator = new BerlinGasCalculator();\n \n   private static final int CURRENT_PC = 1;\n-  private static final Gas BEGIN_SUB_GAS_COST = Gas.of(1);\n+  private static final Gas BEGIN_SUB_GAS_COST = Gas.of(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0NTkxMA=="}, "originalCommit": {"oid": "63353b80cf2507c843ff26b0070c34e5a0e124ad"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTU0OTY5OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/operations/BeginSubOperationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoyOTo1N1rOGXjQNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo1NTowMFrOGXkfbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0ODAyMg==", "bodyText": "I guess this is a comment for another PR but why do we have the ReturnStack parameterized by size? The size of it is fixed in the EIP, yes? So we shouldn't expose that detail to the caller.", "url": "https://github.com/hyperledger/besu/pull/941#discussion_r427348022", "createdAt": "2020-05-19T14:29:57Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/operations/BeginSubOperationTest.java", "diffHunk": "@@ -85,17 +86,16 @@ public void shouldCalculateGasPrice() {\n   }\n \n   @Test\n-  public void shouldNotConsumeStackItem() {\n+  public void shouldHaltWithOutOfGasWhenBeginSubIsExecuted() {\n     final BeginSubOperation operation = new BeginSubOperation(gasCalculator);\n     final MessageFrame frame =\n         createMessageFrameBuilder(Gas.of(1))\n-            .pushStackItem(Bytes32.fromHexString(\"0xFF\"))\n-            .code(new Code(Bytes.fromHexString(\"0x6004b300b2b7\")))\n+            .pushStackItem(Bytes32.fromHexString(\"0x04\"))\n+            .code(new Code(Bytes.fromHexString(\"0x610400b2\")))\n             .returnStack(new ReturnStack(MessageFrame.DEFAULT_MAX_RETURN_STACK_SIZE))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63353b80cf2507c843ff26b0070c34e5a0e124ad"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2NjY3Mw==", "bodyText": "yes you're right I always make this call new ReturnStack (MessageFrame.DEFAULT_MAX_RETURN_STACK_SIZE)  I will set this value on the ReturnStack object. I will do another PR to fix that", "url": "https://github.com/hyperledger/besu/pull/941#discussion_r427366673", "createdAt": "2020-05-19T14:53:00Z", "author": {"login": "matkt"}, "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/operations/BeginSubOperationTest.java", "diffHunk": "@@ -85,17 +86,16 @@ public void shouldCalculateGasPrice() {\n   }\n \n   @Test\n-  public void shouldNotConsumeStackItem() {\n+  public void shouldHaltWithOutOfGasWhenBeginSubIsExecuted() {\n     final BeginSubOperation operation = new BeginSubOperation(gasCalculator);\n     final MessageFrame frame =\n         createMessageFrameBuilder(Gas.of(1))\n-            .pushStackItem(Bytes32.fromHexString(\"0xFF\"))\n-            .code(new Code(Bytes.fromHexString(\"0x6004b300b2b7\")))\n+            .pushStackItem(Bytes32.fromHexString(\"0x04\"))\n+            .code(new Code(Bytes.fromHexString(\"0x610400b2\")))\n             .returnStack(new ReturnStack(MessageFrame.DEFAULT_MAX_RETURN_STACK_SIZE))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0ODAyMg=="}, "originalCommit": {"oid": "63353b80cf2507c843ff26b0070c34e5a0e124ad"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2ODMwMw==", "bodyText": "Cool, then you can model it as a singleton class with a static ReturnStack, and private constructor.", "url": "https://github.com/hyperledger/besu/pull/941#discussion_r427368303", "createdAt": "2020-05-19T14:55:00Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/operations/BeginSubOperationTest.java", "diffHunk": "@@ -85,17 +86,16 @@ public void shouldCalculateGasPrice() {\n   }\n \n   @Test\n-  public void shouldNotConsumeStackItem() {\n+  public void shouldHaltWithOutOfGasWhenBeginSubIsExecuted() {\n     final BeginSubOperation operation = new BeginSubOperation(gasCalculator);\n     final MessageFrame frame =\n         createMessageFrameBuilder(Gas.of(1))\n-            .pushStackItem(Bytes32.fromHexString(\"0xFF\"))\n-            .code(new Code(Bytes.fromHexString(\"0x6004b300b2b7\")))\n+            .pushStackItem(Bytes32.fromHexString(\"0x04\"))\n+            .code(new Code(Bytes.fromHexString(\"0x610400b2\")))\n             .returnStack(new ReturnStack(MessageFrame.DEFAULT_MAX_RETURN_STACK_SIZE))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0ODAyMg=="}, "originalCommit": {"oid": "63353b80cf2507c843ff26b0070c34e5a0e124ad"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 870, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}