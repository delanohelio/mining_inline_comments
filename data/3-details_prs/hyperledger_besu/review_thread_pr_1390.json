{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNzI2OTAw", "number": 1390, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo1ODo0NlrOEm4pRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo1ODo0NlrOEm4pRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjA5NDE0OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/MultiTenancyPrivacyController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo1ODo0NlrOHXKzlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNTo1ODo0NlrOHXKzlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA1NjM0Mg==", "bodyText": "It feels like this logic could be polished a bit. Maybe separating the logic for finding a ground onchain vs offchain in separate methods would make it a bit easier to read?", "url": "https://github.com/hyperledger/besu/pull/1390#discussion_r494056342", "createdAt": "2020-09-24T05:58:46Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/MultiTenancyPrivacyController.java", "diffHunk": "@@ -260,17 +273,28 @@ public void verifyPrivacyGroupContainsEnclavePublicKey(\n   public void verifyPrivacyGroupContainsEnclavePublicKey(\n       final String privacyGroupId, final String enclavePublicKey, final Optional<Long> blockNumber)\n       throws MultiTenancyValidationException {\n-    // TODO: There's potentially a bug here where an onchain privacyGroup\n-    // that isn't found will default to the offchain privacy group.\n-    final PrivacyGroup privacyGroup =\n-        onchainPrivacyGroupContract\n-            .flatMap(\n-                contract -> contract.getPrivacyGroupByIdAndBlockNumber(privacyGroupId, blockNumber))\n-            .orElse(enclave.retrievePrivacyGroup(privacyGroupId));\n-\n-    if (!privacyGroup.getMembers().contains(enclavePublicKey)) {\n-      throw new MultiTenancyValidationException(\n-          \"Privacy group must contain the enclave public key\");\n+    Optional<PrivacyGroup> maybePrivacyGroup;\n+    PrivacyGroup offchainPrivacyGroup;\n+    if (onchainPrivacyGroupContract.isPresent()) {\n+      maybePrivacyGroup =\n+          onchainPrivacyGroupContract\n+              .get()\n+              .getPrivacyGroupByIdAndBlockNumber(privacyGroupId, blockNumber);\n+      if (maybePrivacyGroup.isEmpty()) {\n+        // group doesn't exist yet - this is normal for onchain privacy groups\n+      } else {\n+        // group DOES exist - does it contain the user?\n+        if (!maybePrivacyGroup.get().getMembers().contains(enclavePublicKey)) {\n+          throw new MultiTenancyValidationException(\n+              \"Privacy group must contain the enclave public key\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ab2e72bed8529030fb22e7bdbe1e07aa31fe9a"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1396, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}