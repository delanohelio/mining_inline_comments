{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MDEyMTQw", "number": 786, "title": "EvmTool - A CLI for ad hoc performance and fuzz testing", "bodyText": "A standalone CLI that performs EVM execution with provided genesis\nfiles and raw EVM bytecodes.\nSigned-off-by: Danno Ferrin danno.ferrin@gmail.com", "createdAt": "2020-04-26T04:04:01Z", "url": "https://github.com/hyperledger/besu/pull/786", "merged": true, "mergeCommit": {"oid": "912d1251177e8060d2a2efdf169fc32d41a57e29"}, "closed": true, "closedAt": "2020-04-29T16:16:56Z", "author": {"login": "shemnon"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbSnavgH2gAyNDA5MDEyMTQwOjQ2MGYyNjkyODhmZGI0YTNiZmRiN2JmMzMzYjlmMmUyNjlmNjQ1ZTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccalxYgH2gAyNDA5MDEyMTQwOjZhY2EzNjk4ZWEzMzdhZmFkNTkyNDIyNWIxYWMwZGJlOGI2YzQyYjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "460f269288fdb4a3bfdb7bf333b9f2e269f645e1", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/460f269288fdb4a3bfdb7bf333b9f2e269f645e1", "committedDate": "2020-04-26T04:03:23Z", "message": "EvmTool - A CLI for ad hoc performance and fuzz testing\n\nA standalone CLI that performs EVM execution with provided genesis\nfiles and raw EVM bytecodes.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b80401e04fb382313dc23c513f63fb26323b82ce", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/b80401e04fb382313dc23c513f63fb26323b82ce", "committedDate": "2020-04-27T16:10:45Z", "message": "spotless\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8a242a98bea061e5e8e579a86335a4ba8756418", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/c8a242a98bea061e5e8e579a86335a4ba8756418", "committedDate": "2020-04-27T15:46:37Z", "message": "spotless\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}, "afterCommit": {"oid": "b80401e04fb382313dc23c513f63fb26323b82ce", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/b80401e04fb382313dc23c513f63fb26323b82ce", "committedDate": "2020-04-27T16:10:45Z", "message": "spotless\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd6ce79326ca053e96554c6cb6ef34b442d3d92b", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/fd6ce79326ca053e96554c6cb6ef34b442d3d92b", "committedDate": "2020-04-27T18:42:52Z", "message": "fix spdx header check to not look at generated sources.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac69eb0cdf3dcf449ca751fa28d1450ccf96c635", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/ac69eb0cdf3dcf449ca751fa28d1450ccf96c635", "committedDate": "2020-04-27T18:45:51Z", "message": "update gitignore\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fededec64101861ef823cb3530e651685e3eb35f", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/fededec64101861ef823cb3530e651685e3eb35f", "committedDate": "2020-04-27T18:57:57Z", "message": "spotless\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d93f26cb3b21f25753041fe9a692418b8bcb6dc", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/0d93f26cb3b21f25753041fe9a692418b8bcb6dc", "committedDate": "2020-04-28T00:33:17Z", "message": "Minor CLI fixes\n\n* Native feature flags should have been hidden by default\n* GraphQL option warnings keyed off of wrong enabled option.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}, "afterCommit": {"oid": "fededec64101861ef823cb3530e651685e3eb35f", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/fededec64101861ef823cb3530e651685e3eb35f", "committedDate": "2020-04-27T18:57:57Z", "message": "spotless\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxOTg1Mjgz", "url": "https://github.com/hyperledger/besu/pull/786#pullrequestreview-401985283", "createdAt": "2020-04-28T16:00:58Z", "commit": {"oid": "fededec64101861ef823cb3530e651685e3eb35f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjowMDo1OFrOGNbbcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNjowMToxNVrOGNbcSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczNDA2Ng==", "bodyText": "Maybe we need to change pantheon by Besu here", "url": "https://github.com/hyperledger/besu/pull/786#discussion_r416734066", "createdAt": "2020-04-28T16:00:58Z", "author": {"login": "matkt"}, "path": "ethereum/evmtool/build.gradle", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+\n+apply plugin: 'java-library'\n+apply plugin: 'application'\n+apply plugin: 'idea'\n+\n+jar {\n+  baseName 'pantheon-evmtool'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fededec64101861ef823cb3530e651685e3eb35f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjczNDI4MQ==", "bodyText": "Maybe we need to change pantheon by Besu here", "url": "https://github.com/hyperledger/besu/pull/786#discussion_r416734281", "createdAt": "2020-04-28T16:01:15Z", "author": {"login": "matkt"}, "path": "ethereum/evmtool/src/main/java/org/hyperledger/besu/evmtool/EvmToolCommand.java", "diffHunk": "@@ -0,0 +1,290 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.evmtool;\n+\n+import org.hyperledger.besu.cli.config.NetworkName;\n+import org.hyperledger.besu.ethereum.core.Account;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.BlockHeader;\n+import org.hyperledger.besu.ethereum.core.BlockHeaderBuilder;\n+import org.hyperledger.besu.ethereum.core.Difficulty;\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.core.LogsBloomFilter;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.mainnet.MainnetBlockHeaderFunctions;\n+import org.hyperledger.besu.ethereum.vm.BlockHashLookup;\n+import org.hyperledger.besu.ethereum.vm.Code;\n+import org.hyperledger.besu.ethereum.vm.EVM;\n+import org.hyperledger.besu.ethereum.vm.ExceptionalHaltReason;\n+import org.hyperledger.besu.ethereum.vm.MessageFrame;\n+import org.hyperledger.besu.ethereum.vm.ehalt.ExceptionalHaltException;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.time.Instant;\n+import java.util.ArrayDeque;\n+import java.util.List;\n+\n+import com.google.common.base.Stopwatch;\n+import io.vertx.core.json.JsonArray;\n+import io.vertx.core.json.JsonObject;\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.logging.log4j.core.config.Configurator;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.units.bigints.UInt256;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+@Command(\n+    description = \"This command evaluates EVM transactions.\",\n+    abbreviateSynopsis = true,\n+    name = \"evm\",\n+    mixinStandardHelpOptions = true,\n+    sortOptions = false,\n+    header = \"Usage:\",\n+    synopsisHeading = \"%n\",\n+    descriptionHeading = \"%nDescription:%n%n\",\n+    optionListHeading = \"%nOptions:%n\",\n+    footerHeading = \"%n\",\n+    footer = \"Pantheon is licensed under the Apache License 2.0\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fededec64101861ef823cb3530e651685e3eb35f"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab845f80b12e07b86e22ac371186f70763b50f5c", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/ab845f80b12e07b86e22ac371186f70763b50f5c", "committedDate": "2020-04-28T16:04:18Z", "message": "Merge branch 'master' of github.com:hyperledger/besu into evmtool\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcfcc2830dd1d168b5d49601ed281a6f10f4c7b9", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/bcfcc2830dd1d168b5d49601ed281a6f10f4c7b9", "committedDate": "2020-04-28T16:11:48Z", "message": "rename some old pantheon references.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNzc2NTg0", "url": "https://github.com/hyperledger/besu/pull/786#pullrequestreview-402776584", "createdAt": "2020-04-29T15:21:47Z", "commit": {"oid": "bcfcc2830dd1d168b5d49601ed281a6f10f4c7b9"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNToyMTo0N1rOGOEIbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNToyNjozNFrOGOEWmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQwMDk0Mg==", "bodyText": "Why do we need a separate main class ? I thought it was a classical subcommand.", "url": "https://github.com/hyperledger/besu/pull/786#discussion_r417400942", "createdAt": "2020-04-29T15:21:47Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/evmtool/src/main/java/org/hyperledger/besu/evmtool/EvmTool.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.evmtool;\n+\n+import static picocli.CommandLine.defaultExceptionHandler;\n+\n+import picocli.CommandLine;\n+\n+public final class EvmTool {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcfcc2830dd1d168b5d49601ed281a6f10f4c7b9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQwMjAwMg==", "bodyText": "gasUser ? Typo ?", "url": "https://github.com/hyperledger/besu/pull/786#discussion_r417402002", "createdAt": "2020-04-29T15:23:13Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/evmtool/src/main/java/org/hyperledger/besu/evmtool/EvmToolCommand.java", "diffHunk": "@@ -0,0 +1,290 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.evmtool;\n+\n+import org.hyperledger.besu.cli.config.NetworkName;\n+import org.hyperledger.besu.ethereum.core.Account;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.BlockHeader;\n+import org.hyperledger.besu.ethereum.core.BlockHeaderBuilder;\n+import org.hyperledger.besu.ethereum.core.Difficulty;\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.core.LogsBloomFilter;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.mainnet.MainnetBlockHeaderFunctions;\n+import org.hyperledger.besu.ethereum.vm.BlockHashLookup;\n+import org.hyperledger.besu.ethereum.vm.Code;\n+import org.hyperledger.besu.ethereum.vm.EVM;\n+import org.hyperledger.besu.ethereum.vm.ExceptionalHaltReason;\n+import org.hyperledger.besu.ethereum.vm.MessageFrame;\n+import org.hyperledger.besu.ethereum.vm.ehalt.ExceptionalHaltException;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.time.Instant;\n+import java.util.ArrayDeque;\n+import java.util.List;\n+\n+import com.google.common.base.Stopwatch;\n+import io.vertx.core.json.JsonArray;\n+import io.vertx.core.json.JsonObject;\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.logging.log4j.core.config.Configurator;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.units.bigints.UInt256;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+@Command(\n+    description = \"This command evaluates EVM transactions.\",\n+    abbreviateSynopsis = true,\n+    name = \"evm\",\n+    mixinStandardHelpOptions = true,\n+    sortOptions = false,\n+    header = \"Usage:\",\n+    synopsisHeading = \"%n\",\n+    descriptionHeading = \"%nDescription:%n%n\",\n+    optionListHeading = \"%nOptions:%n\",\n+    footerHeading = \"%n\",\n+    footer = \"Hyperledger Besu is licensed under the Apache License 2.0\")\n+public class EvmToolCommand implements Runnable {\n+\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  @Option(\n+      names = {\"--code\"},\n+      paramLabel = \"<code>\",\n+      description = \"code to be executed\")\n+  Bytes codeHexString = Bytes.EMPTY;\n+\n+  @Option(\n+      names = {\"--codefile\"},\n+      paramLabel = \"<file>\",\n+      description = \"file containing code to be executed\")\n+  File codeFile;\n+\n+  @Option(\n+      names = {\"--gas\"},\n+      paramLabel = \"<int>\")\n+  Gas gas = Gas.of(10_000_000_000L);\n+\n+  @Option(\n+      names = {\"--price\"},\n+      paramLabel = \"<int>\")\n+  Wei gasPriceGWei = Wei.ZERO;\n+\n+  @Option(\n+      names = {\"--sender\"},\n+      paramLabel = \"<address>\",\n+      description = \"address of ORIGIN\")\n+  Address sender = Address.fromHexString(\"0x00\");\n+\n+  @Option(\n+      names = {\"--receiver\"},\n+      paramLabel = \"<address>\",\n+      description = \"address of ADDRESS\")\n+  Address receiver = Address.fromHexString(\"0x00\");\n+\n+  @Option(\n+      names = {\"--input\"},\n+      paramLabel = \"<code>\",\n+      description = \"CALLDATA\")\n+  Bytes callData = Bytes.EMPTY;\n+\n+  @Option(\n+      names = {\"--value\"},\n+      paramLabel = \"<int>\")\n+  Wei ethValue = Wei.ZERO;\n+\n+  @Option(\n+      names = {\"--json\"},\n+      description = \"output json output for each opcode\")\n+  boolean showJsonResults = false;\n+\n+  @Option(\n+      names = {\"--nomemory\"},\n+      description = \"disable showing the full memory output for each op\")\n+  boolean showMemory = true;\n+\n+  @Option(\n+      names = {\"--create\"},\n+      description = \"initcode to execute\")\n+  Bytes createCode = Bytes.of();\n+\n+  @Option(\n+      names = {\"--prestate\", \"--genesis\"},\n+      description = \"a chain specification, the same one that the client normally would use\")\n+  File genesisFile;\n+\n+  @Option(\n+      names = {\"--chain\"},\n+      description = \"Name of a well know chain\")\n+  NetworkName network;\n+\n+  @Option(\n+      names = {\"--repeat\"},\n+      description = \"Number of times to repeat before gathering timing\")\n+  int repeat = 0;\n+\n+  private final EvmToolCommandOptionsModule daggerOptions = new EvmToolCommandOptionsModule();\n+\n+  void parse(\n+      final CommandLine.AbstractParseResultHandler<List<Object>> resultHandler,\n+      final CommandLine.DefaultExceptionHandler<List<Object>> exceptionHandler,\n+      final String[] args) {\n+\n+    final CommandLine commandLine = new CommandLine(this);\n+    commandLine.addMixin(\"Dagger Options\", daggerOptions);\n+\n+    // add sub commands here\n+\n+    commandLine.registerConverter(Address.class, Address::fromHexString);\n+    commandLine.registerConverter(Bytes.class, Bytes::fromHexString);\n+    commandLine.registerConverter(Gas.class, (arg) -> Gas.of(Long.parseUnsignedLong(arg)));\n+    commandLine.registerConverter(Wei.class, (arg) -> Wei.of(Long.parseUnsignedLong(arg)));\n+\n+    commandLine.parseWithHandlers(resultHandler, exceptionHandler, args);\n+  }\n+\n+  @Override\n+  public void run() {\n+    try {\n+      final EvmToolComponent component =\n+          DaggerEvmToolComponent.builder()\n+              .dataStoreModule(new InMemoryDataStoreModule())\n+              .genesisFileModule(\n+                  network == null\n+                      ? genesisFile == null\n+                          ? GenesisFileModule.createGenesisModule(NetworkName.DEV)\n+                          : GenesisFileModule.createGenesisModule(genesisFile)\n+                      : GenesisFileModule.createGenesisModule(network))\n+              .evmToolCommandOptionsModule(daggerOptions)\n+              .metricsSystemModule(new PrometheusMetricsSystemModule())\n+              .build();\n+\n+      final BlockHeader blockHeader =\n+          BlockHeaderBuilder.create()\n+              .parentHash(Hash.EMPTY)\n+              .coinbase(Address.ZERO)\n+              .difficulty(Difficulty.ONE)\n+              .number(1)\n+              .gasLimit(5000)\n+              .timestamp(Instant.now().toEpochMilli())\n+              .ommersHash(Hash.EMPTY_LIST_HASH)\n+              .stateRoot(Hash.EMPTY_TRIE_HASH)\n+              .transactionsRoot(Hash.EMPTY)\n+              .receiptsRoot(Hash.EMPTY)\n+              .logsBloom(LogsBloomFilter.empty())\n+              .gasUsed(0)\n+              .extraData(Bytes.EMPTY)\n+              .mixHash(Hash.EMPTY)\n+              .nonce(0)\n+              .blockHeaderFunctions(new MainnetBlockHeaderFunctions())\n+              .buildBlockHeader();\n+\n+      Configurator.setAllLevels(\"\", repeat == 0 ? Level.INFO : Level.OFF);\n+      do {\n+        final MessageFrame messageFrame =\n+            MessageFrame.builder()\n+                .type(MessageFrame.Type.MESSAGE_CALL)\n+                .messageFrameStack(new ArrayDeque<>())\n+                .blockchain(component.getBlockchain())\n+                .worldState(component.getWorldUpdater())\n+                .initialGas(gas)\n+                .contract(Address.ZERO)\n+                .address(receiver)\n+                .originator(sender)\n+                .gasPrice(gasPriceGWei)\n+                .inputData(callData)\n+                .sender(Address.ZERO)\n+                .value(ethValue)\n+                .apparentValue(ethValue)\n+                .code(new Code(codeHexString))\n+                .blockHeader(blockHeader)\n+                .depth(0)\n+                .completer(c -> {})\n+                .miningBeneficiary(blockHeader.getCoinbase())\n+                .blockHashLookup(new BlockHashLookup(blockHeader, component.getBlockchain()))\n+                .contractAccountVersion(Account.DEFAULT_VERSION)\n+                .build();\n+\n+        messageFrame.setState(MessageFrame.State.CODE_EXECUTING);\n+        final EVM evm = component.getEvmAtBlock().apply(0);\n+\n+        final Stopwatch stopwatch = Stopwatch.createStarted();\n+        evm.runToHalt(\n+            messageFrame,\n+            (frame, currentGasCost, executeOperation) -> {\n+              if (showJsonResults && repeat == 0) {\n+                System.out.println(createEvmTraceOperation(messageFrame));\n+              }\n+              executeOperation.execute();\n+            });\n+        stopwatch.stop();\n+\n+        if (repeat == 0) {\n+          System.out.println(\n+              new JsonObject()\n+                  .put(\n+                      \"gasUser\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcfcc2830dd1d168b5d49601ed281a6f10f4c7b9"}, "originalPosition": 247}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQwMjU3NQ==", "bodyText": "Why it is needed ?", "url": "https://github.com/hyperledger/besu/pull/786#discussion_r417402575", "createdAt": "2020-04-29T15:23:56Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/evmtool/src/main/java/org/hyperledger/besu/evmtool/EvmToolCommandOptionsModule.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+\n+package org.hyperledger.besu.evmtool;\n+\n+import javax.inject.Named;\n+\n+import dagger.Module;\n+import dagger.Provides;\n+import picocli.CommandLine.Option;\n+\n+@SuppressWarnings(\"WeakerAccess\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcfcc2830dd1d168b5d49601ed281a6f10f4c7b9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQwMjk0Mw==", "bodyText": "Why fields don't have  private visibility ?", "url": "https://github.com/hyperledger/besu/pull/786#discussion_r417402943", "createdAt": "2020-04-29T15:24:25Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/evmtool/src/main/java/org/hyperledger/besu/evmtool/EvmToolCommand.java", "diffHunk": "@@ -0,0 +1,290 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+package org.hyperledger.besu.evmtool;\n+\n+import org.hyperledger.besu.cli.config.NetworkName;\n+import org.hyperledger.besu.ethereum.core.Account;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.BlockHeader;\n+import org.hyperledger.besu.ethereum.core.BlockHeaderBuilder;\n+import org.hyperledger.besu.ethereum.core.Difficulty;\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.core.LogsBloomFilter;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.mainnet.MainnetBlockHeaderFunctions;\n+import org.hyperledger.besu.ethereum.vm.BlockHashLookup;\n+import org.hyperledger.besu.ethereum.vm.Code;\n+import org.hyperledger.besu.ethereum.vm.EVM;\n+import org.hyperledger.besu.ethereum.vm.ExceptionalHaltReason;\n+import org.hyperledger.besu.ethereum.vm.MessageFrame;\n+import org.hyperledger.besu.ethereum.vm.ehalt.ExceptionalHaltException;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.time.Instant;\n+import java.util.ArrayDeque;\n+import java.util.List;\n+\n+import com.google.common.base.Stopwatch;\n+import io.vertx.core.json.JsonArray;\n+import io.vertx.core.json.JsonObject;\n+import org.apache.logging.log4j.Level;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.apache.logging.log4j.core.config.Configurator;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.units.bigints.UInt256;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+@Command(\n+    description = \"This command evaluates EVM transactions.\",\n+    abbreviateSynopsis = true,\n+    name = \"evm\",\n+    mixinStandardHelpOptions = true,\n+    sortOptions = false,\n+    header = \"Usage:\",\n+    synopsisHeading = \"%n\",\n+    descriptionHeading = \"%nDescription:%n%n\",\n+    optionListHeading = \"%nOptions:%n\",\n+    footerHeading = \"%n\",\n+    footer = \"Hyperledger Besu is licensed under the Apache License 2.0\")\n+public class EvmToolCommand implements Runnable {\n+\n+  private static final Logger LOG = LogManager.getLogger();\n+\n+  @Option(\n+      names = {\"--code\"},\n+      paramLabel = \"<code>\",\n+      description = \"code to be executed\")\n+  Bytes codeHexString = Bytes.EMPTY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcfcc2830dd1d168b5d49601ed281a6f10f4c7b9"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQwNDU2OQ==", "bodyText": "We don't need the annotationProcessor ? com.google.dagger:dagger-compiler", "url": "https://github.com/hyperledger/besu/pull/786#discussion_r417404569", "createdAt": "2020-04-29T15:26:34Z", "author": {"login": "abdelhamidbakhta"}, "path": "gradle/versions.gradle", "diffHunk": "@@ -17,10 +17,14 @@ dependencyManagement {\n   dependencies {\n     dependency 'com.fasterxml.jackson.core:jackson-databind:2.10.1'\n     dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.1'\n+\n     dependency 'com.github.tomakehurst:wiremock-jre8:2.25.1'\n \n     dependency 'com.google.auto.service:auto-service:1.0-rc6'\n \n+    dependency 'com.google.dagger:dagger:2.27'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcfcc2830dd1d168b5d49601ed281a6f10f4c7b9"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffaeadc80913563567fbe2470630a7e2a84506d2", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/ffaeadc80913563567fbe2470630a7e2a84506d2", "committedDate": "2020-04-29T15:54:31Z", "message": "review adjustments\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aca3698ea337afad5924225b1ac0dbe8b6c42b8", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/6aca3698ea337afad5924225b1ac0dbe8b6c42b8", "committedDate": "2020-04-29T15:54:45Z", "message": "Merge branch 'master' into evmtool"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1596, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}