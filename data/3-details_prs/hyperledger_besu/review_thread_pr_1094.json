{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTUxNDcx", "number": 1094, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzozNzozMVrOEGLolQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDoxMDozNlrOEGL7UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTE3NTI1OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzozNzozMVrOGk0fGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzozNzozMVrOGk0fGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2MTg0OA==", "bodyText": "Is the plan to rename this later?", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441261848", "createdAt": "2020-06-17T03:37:31Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -100,7 +100,7 @@\n       \"The permissioning whitelist configuration file is out of sync.  The changes have been applied, but not persisted to disk\"),\n   WHITELIST_RELOAD_ERROR(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c12918747f385cf7535b9d53da6d532770d3da1"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTE3NTk4OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzozODoxMVrOGk0fng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzozODoxMVrOGk0fng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2MTk4Mg==", "bodyText": "Does the entirety of this comment need updating?", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441261982", "createdAt": "2020-06-17T03:38:11Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -100,7 +100,7 @@\n       \"The permissioning whitelist configuration file is out of sync.  The changes have been applied, but not persisted to disk\"),\n   WHITELIST_RELOAD_ERROR(\n       -32000,\n-      \"Error reloading permissions file. Please use perm_getAccountsWhitelist and perm_getNodesWhitelist to review the current state of the whitelists\"),\n+      \"Error reloading permissions file. Please use perm_getAccountsWhitelist and perm_getNodesAllowlist to review the current state of the whitelists\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c12918747f385cf7535b9d53da6d532770d3da1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTE3Njc2OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetNodesAllowlist.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzozODo0OFrOGk0gGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMzozODo0OFrOGk0gGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2MjEwNQ==", "bodyText": "Should the name of the enum be updated?", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441262105", "createdAt": "2020-06-17T03:38:48Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetNodesAllowlist.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class PermGetNodesAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;\n+\n+  public PermGetNodesAllowlist(\n+      final Optional<NodeLocalConfigPermissioningController> nodeWhitelistPermissioningController) {\n+    this.nodeWhitelistPermissioningController = nodeWhitelistPermissioningController;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.PERM_GET_NODES_ALLOWLIST.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    try {\n+      if (nodeWhitelistPermissioningController.isPresent()) {\n+        final List<String> enodeList =\n+            nodeWhitelistPermissioningController.get().getNodesWhitelist();\n+\n+        return new JsonRpcSuccessResponse(requestContext.getRequest().getId(), enodeList);\n+      } else {\n+        return new JsonRpcErrorResponse(\n+            requestContext.getRequest().getId(), JsonRpcError.NODE_WHITELIST_NOT_ENABLED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c12918747f385cf7535b9d53da6d532770d3da1"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxNTg5OnYy", "diffSide": "RIGHT", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTozMFrOGk04Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTozMFrOGk04Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODIzNA==", "bodyText": "Can this be updated?", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268234", "createdAt": "2020-06-17T04:05:30Z", "author": {"login": "mark-terry"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "diffHunk": "@@ -45,23 +45,23 @@ public PermissioningJsonRpcRequestFactory(final Web3jService web3jService) {\n \n   Request<?, AddNodeResponse> addNodesToWhitelist(final List<URI> enodeList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxNjE2OnYy", "diffSide": "RIGHT", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTo0M1rOGk04OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTo0M1rOGk04OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODI4MQ==", "bodyText": "As above.", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268281", "createdAt": "2020-06-17T04:05:43Z", "author": {"login": "mark-terry"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "diffHunk": "@@ -45,23 +45,23 @@ public PermissioningJsonRpcRequestFactory(final Web3jService web3jService) {\n \n   Request<?, AddNodeResponse> addNodesToWhitelist(final List<URI> enodeList) {\n     return new Request<>(\n-        \"perm_addNodesToWhitelist\",\n+        \"perm_addNodesToAllowlist\",\n         Collections.singletonList(enodeList),\n         web3jService,\n         AddNodeResponse.class);\n   }\n \n   Request<?, RemoveNodeResponse> removeNodesFromWhitelist(final List<URI> enodeList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxNjM5OnYy", "diffSide": "RIGHT", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTo1MVrOGk04VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNTo1MVrOGk04VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODMwOQ==", "bodyText": "As above.", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268309", "createdAt": "2020-06-17T04:05:51Z", "author": {"login": "mark-terry"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/transaction/perm/PermissioningJsonRpcRequestFactory.java", "diffHunk": "@@ -45,23 +45,23 @@ public PermissioningJsonRpcRequestFactory(final Web3jService web3jService) {\n \n   Request<?, AddNodeResponse> addNodesToWhitelist(final List<URI> enodeList) {\n     return new Request<>(\n-        \"perm_addNodesToWhitelist\",\n+        \"perm_addNodesToAllowlist\",\n         Collections.singletonList(enodeList),\n         web3jService,\n         AddNodeResponse.class);\n   }\n \n   Request<?, RemoveNodeResponse> removeNodesFromWhitelist(final List<URI> enodeList) {\n     return new Request<>(\n-        \"perm_removeNodesFromWhitelist\",\n+        \"perm_removeNodesFromAllowlist\",\n         Collections.singletonList(enodeList),\n         web3jService,\n         RemoveNodeResponse.class);\n   }\n \n   Request<?, GetNodesWhitelistResponse> getNodesWhitelist() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxNzQ0OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNjozMlrOGk049g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNjozMlrOGk049g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODQ3MA==", "bodyText": "Variable name.", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268470", "createdAt": "2020-06-17T04:06:32Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermRemoveNodesFromAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxNzk5OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNjo1NVrOGk05Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNjo1NVrOGk05Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODU2Mg==", "bodyText": "Param name.", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268562", "createdAt": "2020-06-17T04:06:55Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermRemoveNodesFromAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;\n+\n+  public PermRemoveNodesFromAllowlist(\n+      final Optional<NodeLocalConfigPermissioningController> nodeWhitelistPermissioningController) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxODMyOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNzoxMFrOGk05hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNzoxMFrOGk05hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODYxNQ==", "bodyText": "Variable name.", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268615", "createdAt": "2020-06-17T04:07:10Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlist.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermRemoveNodesFromAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;\n+\n+  public PermRemoveNodesFromAllowlist(\n+      final Optional<NodeLocalConfigPermissioningController> nodeWhitelistPermissioningController) {\n+    this.nodeWhitelistPermissioningController = nodeWhitelistPermissioningController;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.PERM_REMOVE_NODES_FROM_ALLOWLIST.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final StringListParameter enodeListParam =\n+        requestContext.getRequiredParameter(0, StringListParameter.class);\n+    try {\n+      if (nodeWhitelistPermissioningController.isPresent()) {\n+        try {\n+          final List<String> enodeURLs = enodeListParam.getStringList();\n+          final NodeLocalConfigPermissioningController.NodesWhitelistResult nodesWhitelistResult =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIxOTUzOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNzo1OFrOGk06Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDowNzo1OFrOGk06Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2ODc5OA==", "bodyText": "Error names.", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441268798", "createdAt": "2020-06-17T04:07:58Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -87,21 +87,21 @@\n   NODE_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of nodes\"),\n   NODE_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid node\"),\n   NODE_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate nodes\"),\n-  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to whitelist\"),\n-  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from whitelist\"),\n+  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to allowlist\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIyMjk4OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDoxMDoyNlrOGk08RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDoxMDoyNlrOGk08RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2OTMxNg==", "bodyText": "Param name.", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441269316", "createdAt": "2020-06-17T04:10:26Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermAddNodesToAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;\n+\n+  public PermAddNodesToAllowlist(\n+      final Optional<NodeLocalConfigPermissioningController> nodeWhitelistPermissioningController) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTIyMzIwOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDoxMDozNlrOGk08Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNDoxMDozNlrOGk08Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI2OTM1MQ==", "bodyText": "Variable name.", "url": "https://github.com/hyperledger/besu/pull/1094#discussion_r441269351", "createdAt": "2020-06-17T04:10:36Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddNodesToAllowlist.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.permissioning;\n+\n+import java.util.List;\n+import java.util.Optional;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods.JsonRpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.parameters.StringListParameter;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcError;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcErrorResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.p2p.network.exceptions.P2PDisabledException;\n+import org.hyperledger.besu.ethereum.permissioning.NodeLocalConfigPermissioningController;\n+\n+public class PermAddNodesToAllowlist implements JsonRpcMethod {\n+\n+  private final Optional<NodeLocalConfigPermissioningController>\n+      nodeWhitelistPermissioningController;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcb71c9c223f51c78e2639ca7987539b39aacbb"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 805, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}