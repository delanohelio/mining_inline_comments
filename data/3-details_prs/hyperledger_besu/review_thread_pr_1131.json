{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MjA1MzU2", "number": 1131, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzowNzozOFrOEHwevQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDozNjozNVrOEHxeLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTY5Nzg5OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveAccountsFromAllowlistTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzowNzozOFrOGnT0-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzowNzozOFrOGnT0-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg3MjUwNg==", "bodyText": "Variable name.", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443872506", "createdAt": "2020-06-22T23:07:38Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveAccountsFromAllowlistTest.java", "diffHunk": "@@ -71,7 +71,7 @@ public void whenAccountsAreRemovedFromWhitelistShouldReturnSuccess() {\n   @Test\n   public void whenAccountIsInvalidShouldReturnInvalidAccountErrorResponse() {\n     JsonRpcResponse expectedResponse =\n-        new JsonRpcErrorResponse(null, JsonRpcError.ACCOUNT_WHITELIST_INVALID_ENTRY);\n+        new JsonRpcErrorResponse(null, JsonRpcError.ACCOUNT_ALLOWLIST_INVALID_ENTRY);\n     when(accountWhitelist.removeAccounts(any()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTY5OTU5OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlistTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzowODoyNVrOGnT1_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzowODoyNVrOGnT1_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg3Mjc2Nw==", "bodyText": "Class name.", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443872767", "createdAt": "2020-06-22T23:08:25Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermRemoveNodesFromAllowlistTest.java", "diffHunk": "@@ -90,7 +90,7 @@ public void shouldThrowInvalidJsonRpcParametersExceptionWhenEmptyList() {\n     final JsonRpcRequestContext request = buildRequest(Lists.emptyList());\n     final JsonRpcResponse expected =\n         new JsonRpcErrorResponse(\n-            request.getRequest().getId(), JsonRpcError.NODE_WHITELIST_EMPTY_ENTRY);\n+            request.getRequest().getId(), JsonRpcError.NODE_ALLOWLIST_EMPTY_ENTRY);\n \n     when(nodeLocalConfigPermissioningController.removeNodes(eq(Lists.emptyList())))\n         .thenReturn(new NodesWhitelistResult(AllowlistOperationResult.ERROR_EMPTY_ENTRY));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTcyMjQyOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetAccountsAllowlistTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzoyMDozMVrOGnUEMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzoyMDozMVrOGnUEMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg3NjQwMw==", "bodyText": "Method name.", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443876403", "createdAt": "2020-06-22T23:20:31Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetAccountsAllowlistTest.java", "diffHunk": "@@ -55,7 +55,7 @@ public void getNameShouldReturnExpectedName() {\n   @Test\n   public void shouldReturnExpectedListOfAccountsWhenWhitelistHasBeenSet() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTcyMjg3OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetAccountsAllowlistTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzoyMDo0MVrOGnUEcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzoyMDo0MVrOGnUEcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg3NjQ2Ng==", "bodyText": "Method name.", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443876466", "createdAt": "2020-06-22T23:20:41Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermGetAccountsAllowlistTest.java", "diffHunk": "@@ -66,7 +66,7 @@ public void shouldReturnExpectedListOfAccountsWhenWhitelistHasBeenSet() {\n   @Test\n   public void shouldReturnEmptyListOfAccountsWhenWhitelistHasBeenSetAndIsEmpty() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTc1Mzg2OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddAccountsToAllowlistTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzozODowOVrOGnUXXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzozODowOVrOGnUXXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4MTMxMA==", "bodyText": "Variable name.", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443881310", "createdAt": "2020-06-22T23:38:09Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/permissioning/PermAddAccountsToAllowlistTest.java", "diffHunk": "@@ -70,7 +70,7 @@ public void whenAccountsAreAddedToWhitelistShouldReturnSuccess() {\n   @Test\n   public void whenAccountIsInvalidShouldReturnInvalidAccountErrorResponse() {\n     JsonRpcResponse expectedResponse =\n-        new JsonRpcErrorResponse(null, JsonRpcError.ACCOUNT_WHITELIST_INVALID_ENTRY);\n+        new JsonRpcErrorResponse(null, JsonRpcError.ACCOUNT_ALLOWLIST_INVALID_ENTRY);\n     when(accountWhitelist.addAccounts(any()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTc1NzAyOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/privx/PrivxFindOnChainPrivacyGroup.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzozOTo0MlrOGnUZPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzozOTo0MlrOGnUZPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4MTc5MA==", "bodyText": "Does this message need to be updated?", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443881790", "createdAt": "2020-06-22T23:39:42Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/privx/PrivxFindOnChainPrivacyGroup.java", "diffHunk": "@@ -68,11 +68,11 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n     } catch (final MultiTenancyValidationException e) {\n       LOG.error(\"Unauthorized privacy multi-tenancy rpc request. {}\", e.getMessage());\n       return new JsonRpcErrorResponse(\n-          requestContext.getRequest().getId(), FIND_ON_CHAIN_PRIVACY_GROUP_ERROR);\n+          requestContext.getRequest().getId(), FIND_ONCHAIN_PRIVACY_GROUP_ERROR);\n     } catch (final Exception e) {\n       LOG.error(\"Failed to fetch on chain privacy group\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTg2MDI5OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDozNjozNVrOGnVW8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyMjoxNVrOGnZrJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5NzU4NA==", "bodyText": "\"allowlisting\" or \"allowlist\" ?", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443897584", "createdAt": "2020-06-23T00:36:35Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -77,32 +77,32 @@\n   PARENT_BLOCK_NOT_FOUND(-32000, \"Parent block not found\"),\n \n   // Permissioning/Account allowlist errors\n-  ACCOUNT_WHITELIST_NOT_ENABLED(-32000, \"Account allowlisting has not been enabled\"),\n-  ACCOUNT_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of accounts\"),\n-  ACCOUNT_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid account\"),\n-  ACCOUNT_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate accounts\"),\n-  ACCOUNT_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing account to allowlist\"),\n-  ACCOUNT_WHITELIST_ABSENT_ENTRY(-32000, \"Cannot remove an absent account from allowlist\"),\n+  ACCOUNT_ALLOWLIST_NOT_ENABLED(-32000, \"Account allowlisting has not been enabled\"),\n+  ACCOUNT_ALLOWLIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of accounts\"),\n+  ACCOUNT_ALLOWLIST_INVALID_ENTRY(-32000, \"Request contains an invalid account\"),\n+  ACCOUNT_ALLOWLIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate accounts\"),\n+  ACCOUNT_ALLOWLIST_EXISTING_ENTRY(-32000, \"Cannot add an existing account to allowlist\"),\n+  ACCOUNT_ALLOWLIST_ABSENT_ENTRY(-32000, \"Cannot remove an absent account from allowlist\"),\n \n   // Permissioning/Node allowlist errors\n-  NODE_WHITELIST_NOT_ENABLED(-32000, \"Node allowlisting has not been enabled\"),\n-  NODE_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of nodes\"),\n-  NODE_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid node\"),\n-  NODE_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate nodes\"),\n-  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to allowlist\"),\n-  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from allowlist\"),\n-  NODE_WHITELIST_FIXED_NODE_CANNOT_BE_REMOVED(\n+  NODE_ALLOWLIST_NOT_ENABLED(-32000, \"Node allowlisting has not been enabled\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk0ODY4Nw==", "bodyText": "I do not have a strong opinion on this", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443948687", "createdAt": "2020-06-23T04:03:58Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -77,32 +77,32 @@\n   PARENT_BLOCK_NOT_FOUND(-32000, \"Parent block not found\"),\n \n   // Permissioning/Account allowlist errors\n-  ACCOUNT_WHITELIST_NOT_ENABLED(-32000, \"Account allowlisting has not been enabled\"),\n-  ACCOUNT_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of accounts\"),\n-  ACCOUNT_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid account\"),\n-  ACCOUNT_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate accounts\"),\n-  ACCOUNT_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing account to allowlist\"),\n-  ACCOUNT_WHITELIST_ABSENT_ENTRY(-32000, \"Cannot remove an absent account from allowlist\"),\n+  ACCOUNT_ALLOWLIST_NOT_ENABLED(-32000, \"Account allowlisting has not been enabled\"),\n+  ACCOUNT_ALLOWLIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of accounts\"),\n+  ACCOUNT_ALLOWLIST_INVALID_ENTRY(-32000, \"Request contains an invalid account\"),\n+  ACCOUNT_ALLOWLIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate accounts\"),\n+  ACCOUNT_ALLOWLIST_EXISTING_ENTRY(-32000, \"Cannot add an existing account to allowlist\"),\n+  ACCOUNT_ALLOWLIST_ABSENT_ENTRY(-32000, \"Cannot remove an absent account from allowlist\"),\n \n   // Permissioning/Node allowlist errors\n-  NODE_WHITELIST_NOT_ENABLED(-32000, \"Node allowlisting has not been enabled\"),\n-  NODE_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of nodes\"),\n-  NODE_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid node\"),\n-  NODE_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate nodes\"),\n-  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to allowlist\"),\n-  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from allowlist\"),\n-  NODE_WHITELIST_FIXED_NODE_CANNOT_BE_REMOVED(\n+  NODE_ALLOWLIST_NOT_ENABLED(-32000, \"Node allowlisting has not been enabled\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5NzU4NA=="}, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk2ODI5Mg==", "bodyText": "ok we're deciding that allowlist is a noun not a verb. but changes will come in a new PR", "url": "https://github.com/hyperledger/besu/pull/1131#discussion_r443968292", "createdAt": "2020-06-23T05:22:15Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/response/JsonRpcError.java", "diffHunk": "@@ -77,32 +77,32 @@\n   PARENT_BLOCK_NOT_FOUND(-32000, \"Parent block not found\"),\n \n   // Permissioning/Account allowlist errors\n-  ACCOUNT_WHITELIST_NOT_ENABLED(-32000, \"Account allowlisting has not been enabled\"),\n-  ACCOUNT_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of accounts\"),\n-  ACCOUNT_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid account\"),\n-  ACCOUNT_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate accounts\"),\n-  ACCOUNT_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing account to allowlist\"),\n-  ACCOUNT_WHITELIST_ABSENT_ENTRY(-32000, \"Cannot remove an absent account from allowlist\"),\n+  ACCOUNT_ALLOWLIST_NOT_ENABLED(-32000, \"Account allowlisting has not been enabled\"),\n+  ACCOUNT_ALLOWLIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of accounts\"),\n+  ACCOUNT_ALLOWLIST_INVALID_ENTRY(-32000, \"Request contains an invalid account\"),\n+  ACCOUNT_ALLOWLIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate accounts\"),\n+  ACCOUNT_ALLOWLIST_EXISTING_ENTRY(-32000, \"Cannot add an existing account to allowlist\"),\n+  ACCOUNT_ALLOWLIST_ABSENT_ENTRY(-32000, \"Cannot remove an absent account from allowlist\"),\n \n   // Permissioning/Node allowlist errors\n-  NODE_WHITELIST_NOT_ENABLED(-32000, \"Node allowlisting has not been enabled\"),\n-  NODE_WHITELIST_EMPTY_ENTRY(-32000, \"Request contains an empty list of nodes\"),\n-  NODE_WHITELIST_INVALID_ENTRY(-32000, \"Request contains an invalid node\"),\n-  NODE_WHITELIST_DUPLICATED_ENTRY(-32000, \"Request contains duplicate nodes\"),\n-  NODE_WHITELIST_EXISTING_ENTRY(-32000, \"Cannot add an existing node to allowlist\"),\n-  NODE_WHITELIST_MISSING_ENTRY(-32000, \"Cannot remove an absent node from allowlist\"),\n-  NODE_WHITELIST_FIXED_NODE_CANNOT_BE_REMOVED(\n+  NODE_ALLOWLIST_NOT_ENABLED(-32000, \"Node allowlisting has not been enabled\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg5NzU4NA=="}, "originalCommit": {"oid": "02a308ad27ae0f50cb7518cc19906618b3f3c632"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 814, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}