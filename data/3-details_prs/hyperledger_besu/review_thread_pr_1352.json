{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MzUyMzY2", "number": 1352, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1MDowMlrOEegVQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo1ODo0MlrOEehpJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDIyNDY2OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1MDowMlrOHKMS5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMzowODowNlrOHKZ7vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ0OTI1NQ==", "bodyText": "do we have to worry about this request failing?", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480449255", "createdAt": "2020-08-31T22:50:02Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java", "diffHunk": "@@ -158,4 +161,20 @@ public void sendMessage(final Long subscriptionId, final JsonRpcResult msg) {\n           }\n         });\n   }\n+\n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {\n+    // When a user is removed from a privacy group, remove all subscriptions from that user to that\n+    // group\n+    subscriptionsOfType(SubscriptionType.LOGS, PrivateLogsSubscription.class).stream()\n+        .filter(\n+            subscription ->\n+                subscription.getEnclavePublicKey().equals(event.getEnclavePublicKey())\n+                    && subscription.getPrivacyGroupId().equals(event.getPrivacyGroupId()))\n+        .forEach(\n+            subscription ->\n+                this.unsubscribe(\n+                    new UnsubscribeRequest(\n+                        subscription.getSubscriptionId(), subscription.getConnectionId())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDY3MjcwMA==", "bodyText": "I don't believe so. The fail case is if the specified connection doesn't exist, which shouldn't occur given we're retrieving those details from the current subscription map.", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480672700", "createdAt": "2020-09-01T03:08:06Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java", "diffHunk": "@@ -158,4 +161,20 @@ public void sendMessage(final Long subscriptionId, final JsonRpcResult msg) {\n           }\n         });\n   }\n+\n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {\n+    // When a user is removed from a privacy group, remove all subscriptions from that user to that\n+    // group\n+    subscriptionsOfType(SubscriptionType.LOGS, PrivateLogsSubscription.class).stream()\n+        .filter(\n+            subscription ->\n+                subscription.getEnclavePublicKey().equals(event.getEnclavePublicKey())\n+                    && subscription.getPrivacyGroupId().equals(event.getPrivacyGroupId()))\n+        .forEach(\n+            subscription ->\n+                this.unsubscribe(\n+                    new UnsubscribeRequest(\n+                        subscription.getSubscriptionId(), subscription.getConnectionId())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ0OTI1NQ=="}, "originalCommit": {"oid": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDIzNDY1OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/methods/PrivSubscribeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1MjowNFrOHKMYHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMToyMDoxM1rOHKSDWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MDU4OQ==", "bodyText": "is there a test to check multiTenancyCheckFail?", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480450589", "createdAt": "2020-08-31T22:52:04Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/methods/PrivSubscribeTest.java", "diffHunk": "@@ -134,6 +137,31 @@ public void multiTenancyCheckFailure() {\n         .hasMessageContaining(\"msg\");\n   }\n \n+  @Test\n+  public void multiTenancyCheckSuccess() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU0MzU3Nw==", "bodyText": "As far as I can tell, the previous multiTenancyCheckFailure test checks the multi-tenancy fail case.", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480543577", "createdAt": "2020-09-01T01:20:13Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/methods/PrivSubscribeTest.java", "diffHunk": "@@ -134,6 +137,31 @@ public void multiTenancyCheckFailure() {\n         .hasMessageContaining(\"msg\");\n   }\n \n+  @Test\n+  public void multiTenancyCheckSuccess() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MDU4OQ=="}, "originalCommit": {"oid": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDI0MDQ1OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/request/SubscriptionRequestMapperTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1MzoxOFrOHKMbIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo1MzoxOFrOHKMbIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ1MTM2Mw==", "bodyText": "should this enclavePublicKey be the variable not the string", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480451363", "createdAt": "2020-08-31T22:53:18Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/request/SubscriptionRequestMapperTest.java", "diffHunk": "@@ -409,7 +413,8 @@ public void mapRequestToPrivateSubscriptionWithInvalidType() {\n     thrown.expect(InvalidSubscriptionRequestException.class);\n     thrown.expectMessage(\"Invalid subscribe request. Invalid private subscription type.\");\n \n-    mapper.mapPrivateSubscribeRequest(new JsonRpcRequestContext(jsonRpcRequest));\n+    mapper.mapPrivateSubscribeRequest(\n+        new JsonRpcRequestContext(jsonRpcRequest), \"enclave_public_key\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDQzOTQwOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzo1ODo0MlrOHKOM-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoyODo1NVrOHLx4qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDUwNg==", "bodyText": "Do you need to handle the same race condition as filters (eg user removed from group but then in the same block requests to create a new subscription) - which we solved by storing the private tx events until the block was processed.", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r480480506", "createdAt": "2020-08-31T23:58:42Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java", "diffHunk": "@@ -158,4 +161,20 @@ public void sendMessage(final Long subscriptionId, final JsonRpcResult msg) {\n           }\n         });\n   }\n+\n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {\n+    // When a user is removed from a privacy group, remove all subscriptions from that user to that\n+    // group\n+    subscriptionsOfType(SubscriptionType.LOGS, PrivateLogsSubscription.class).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExMzcwNA==", "bodyText": "PR updated to address this.", "url": "https://github.com/hyperledger/besu/pull/1352#discussion_r482113704", "createdAt": "2020-09-02T14:28:55Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/websocket/subscription/SubscriptionManager.java", "diffHunk": "@@ -158,4 +161,20 @@ public void sendMessage(final Long subscriptionId, final JsonRpcResult msg) {\n           }\n         });\n   }\n+\n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {\n+    // When a user is removed from a privacy group, remove all subscriptions from that user to that\n+    // group\n+    subscriptionsOfType(SubscriptionType.LOGS, PrivateLogsSubscription.class).stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MDUwNg=="}, "originalCommit": {"oid": "c5a49d7d7ef9af5abedef5f94ceda8fa3cea2ba8"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 771, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}