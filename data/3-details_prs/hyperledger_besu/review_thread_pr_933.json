{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NzcyMTcz", "number": 933, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMTozODoyMVrOD9BdbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMTozODoyMVrOD9BdbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzEzNjQ1OnYy", "diffSide": "RIGHT", "path": "ethereum/evmtool/src/main/java/org/hyperledger/besu/evmtool/DataStoreModule.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMTozODoyMVrOGWUkJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMjo1MTo0OVrOGWVzzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1ODc5MQ==", "bodyText": "Does this need to be a supplier? I think the db is only created when you call create", "url": "https://github.com/hyperledger/besu/pull/933#discussion_r426058791", "createdAt": "2020-05-15T21:38:21Z", "author": {"login": "RatanRSur"}, "path": "ethereum/evmtool/src/main/java/org/hyperledger/besu/evmtool/DataStoreModule.java", "diffHunk": "@@ -17,25 +17,116 @@\n \n import org.hyperledger.besu.ethereum.chain.BlockchainStorage;\n import org.hyperledger.besu.ethereum.core.BlockHeaderFunctions;\n+import org.hyperledger.besu.ethereum.storage.keyvalue.KeyValueSegmentIdentifier;\n import org.hyperledger.besu.ethereum.storage.keyvalue.KeyValueStoragePrefixedKeyBlockchainStorage;\n+import org.hyperledger.besu.plugin.services.BesuConfiguration;\n+import org.hyperledger.besu.plugin.services.MetricsSystem;\n import org.hyperledger.besu.plugin.services.storage.KeyValueStorage;\n+import org.hyperledger.besu.plugin.services.storage.SegmentIdentifier;\n+import org.hyperledger.besu.plugin.services.storage.rocksdb.RocksDBKeyValueStorageFactory;\n+import org.hyperledger.besu.plugin.services.storage.rocksdb.RocksDBMetricsFactory;\n+import org.hyperledger.besu.plugin.services.storage.rocksdb.configuration.RocksDBCLIOptions;\n+import org.hyperledger.besu.services.kvstore.InMemoryKeyValueStorage;\n+import org.hyperledger.besu.services.kvstore.LimitedInMemoryKeyValueStorage;\n \n+import java.util.List;\n+import java.util.function.Supplier;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+\n+import com.google.common.base.Suppliers;\n import dagger.Module;\n import dagger.Provides;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n \n-@SuppressWarnings(\"WeakerAccess\")\n+@SuppressWarnings({\"CloseableProvides\"})\n @Module(includes = GenesisFileModule.class)\n public class DataStoreModule {\n \n+  private static final Logger LOG = LogManager.getLogger();\n+  private final Supplier<RocksDBKeyValueStorageFactory> rocksDBFactory =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cffe1e1909df45d3692ee283da3ea046c011a95"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA3OTE4Mw==", "bodyText": "It's a supplier so we don't initialize it unless we actually need it.  @Lazy would be the lombok annotation.", "url": "https://github.com/hyperledger/besu/pull/933#discussion_r426079183", "createdAt": "2020-05-15T22:51:49Z", "author": {"login": "shemnon"}, "path": "ethereum/evmtool/src/main/java/org/hyperledger/besu/evmtool/DataStoreModule.java", "diffHunk": "@@ -17,25 +17,116 @@\n \n import org.hyperledger.besu.ethereum.chain.BlockchainStorage;\n import org.hyperledger.besu.ethereum.core.BlockHeaderFunctions;\n+import org.hyperledger.besu.ethereum.storage.keyvalue.KeyValueSegmentIdentifier;\n import org.hyperledger.besu.ethereum.storage.keyvalue.KeyValueStoragePrefixedKeyBlockchainStorage;\n+import org.hyperledger.besu.plugin.services.BesuConfiguration;\n+import org.hyperledger.besu.plugin.services.MetricsSystem;\n import org.hyperledger.besu.plugin.services.storage.KeyValueStorage;\n+import org.hyperledger.besu.plugin.services.storage.SegmentIdentifier;\n+import org.hyperledger.besu.plugin.services.storage.rocksdb.RocksDBKeyValueStorageFactory;\n+import org.hyperledger.besu.plugin.services.storage.rocksdb.RocksDBMetricsFactory;\n+import org.hyperledger.besu.plugin.services.storage.rocksdb.configuration.RocksDBCLIOptions;\n+import org.hyperledger.besu.services.kvstore.InMemoryKeyValueStorage;\n+import org.hyperledger.besu.services.kvstore.LimitedInMemoryKeyValueStorage;\n \n+import java.util.List;\n+import java.util.function.Supplier;\n+import javax.inject.Named;\n+import javax.inject.Singleton;\n+\n+import com.google.common.base.Suppliers;\n import dagger.Module;\n import dagger.Provides;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n \n-@SuppressWarnings(\"WeakerAccess\")\n+@SuppressWarnings({\"CloseableProvides\"})\n @Module(includes = GenesisFileModule.class)\n public class DataStoreModule {\n \n+  private static final Logger LOG = LogManager.getLogger();\n+  private final Supplier<RocksDBKeyValueStorageFactory> rocksDBFactory =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1ODc5MQ=="}, "originalCommit": {"oid": "8cffe1e1909df45d3692ee283da3ea046c011a95"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 864, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}