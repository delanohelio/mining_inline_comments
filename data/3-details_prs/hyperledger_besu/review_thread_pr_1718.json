{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwODkwNjY5", "number": 1718, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDoyNjowNVrOFGdffQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMzoyNFrOFGelPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzE4OTczOnYy", "diffSide": "RIGHT", "path": "besu/src/test/java/org/hyperledger/besu/cli/BesuCommandTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDoyNjowNVrOIHfE3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozOTo0M1rOIHgvtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMDA5Mg==", "bodyText": "s/Dile/File", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544720092", "createdAt": "2020-12-17T00:26:05Z", "author": {"login": "macfarla"}, "path": "besu/src/test/java/org/hyperledger/besu/cli/BesuCommandTest.java", "diffHunk": "@@ -3987,10 +3987,44 @@ public void quorumInteropEnabledSucceedsWithGasPriceSetToZero() throws IOExcepti\n         \"--genesis-file\",\n         genesisFile.toString(),\n         \"--min-gas-price\",\n-        \"0\");\n+        \"0\",\n+        \"--privacy-public-key-file\",\n+        ENCLAVE_PUBLIC_KEY_PATH);\n     assertThat(commandErrorOutput.toString()).isEmpty();\n   }\n \n+  @Test\n+  public void quorumInteropEnabledFailsIfEnclaveKeyFileDoesNotExist() throws IOException {\n+    final Path genesisFile =\n+        createFakeGenesisFile(VALID_GENESIS_QUORUM_INTEROP_ENABLED_WITH_CHAINID);\n+    parseCommand(\n+        \"--goquorum-compatibility-enabled\",\n+        \"--genesis-file\",\n+        genesisFile.toString(),\n+        \"--min-gas-price\",\n+        \"0\",\n+        \"--privacy-public-key-file\",\n+        \"ThisDileDoesNotExist\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NzQ0NQ==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544747445", "createdAt": "2020-12-17T01:39:43Z", "author": {"login": "pinges"}, "path": "besu/src/test/java/org/hyperledger/besu/cli/BesuCommandTest.java", "diffHunk": "@@ -3987,10 +3987,44 @@ public void quorumInteropEnabledSucceedsWithGasPriceSetToZero() throws IOExcepti\n         \"--genesis-file\",\n         genesisFile.toString(),\n         \"--min-gas-price\",\n-        \"0\");\n+        \"0\",\n+        \"--privacy-public-key-file\",\n+        ENCLAVE_PUBLIC_KEY_PATH);\n     assertThat(commandErrorOutput.toString()).isEmpty();\n   }\n \n+  @Test\n+  public void quorumInteropEnabledFailsIfEnclaveKeyFileDoesNotExist() throws IOException {\n+    final Path genesisFile =\n+        createFakeGenesisFile(VALID_GENESIS_QUORUM_INTEROP_ENABLED_WITH_CHAINID);\n+    parseCommand(\n+        \"--goquorum-compatibility-enabled\",\n+        \"--genesis-file\",\n+        genesisFile.toString(),\n+        \"--min-gas-price\",\n+        \"0\",\n+        \"--privacy-public-key-file\",\n+        \"ThisDileDoesNotExist\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMDA5Mg=="}, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzE5NTYyOnYy", "diffSide": "RIGHT", "path": "enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDoyODoxMVrOIHfIDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMzoyNVrOIHgmcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMDkwOA==", "bodyText": "this is a no change, right?", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544720908", "createdAt": "2020-12-17T00:28:11Z", "author": {"login": "macfarla"}, "path": "enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java", "diffHunk": "@@ -48,6 +48,22 @@ public Enclave createVertxEnclave(final URI enclaveUri) {\n     return new Enclave(vertxTransmitter);\n   }\n \n+  public Enclave createVertxEnclave(\n+      final URI enclaveUri,\n+      final Path privacyKeyStoreFile,\n+      final Path privacyKeyStorePasswordFile,\n+      final Path privacyAllowlistFile) {\n+\n+    final HttpClientOptions clientOptions =\n+        createTlsClientOptions(\n+            enclaveUri, privacyKeyStoreFile, privacyKeyStorePasswordFile, privacyAllowlistFile);\n+\n+    final RequestTransmitter vertxTransmitter =\n+        new VertxRequestTransmitter(vertx.createHttpClient(clientOptions));\n+\n+    return new Enclave(vertxTransmitter);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NTA3Mg==", "bodyText": "This has not changed, it might have moved in the file?", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544745072", "createdAt": "2020-12-17T01:33:25Z", "author": {"login": "pinges"}, "path": "enclave/src/main/java/org/hyperledger/besu/enclave/EnclaveFactory.java", "diffHunk": "@@ -48,6 +48,22 @@ public Enclave createVertxEnclave(final URI enclaveUri) {\n     return new Enclave(vertxTransmitter);\n   }\n \n+  public Enclave createVertxEnclave(\n+      final URI enclaveUri,\n+      final Path privacyKeyStoreFile,\n+      final Path privacyKeyStorePasswordFile,\n+      final Path privacyAllowlistFile) {\n+\n+    final HttpClientOptions clientOptions =\n+        createTlsClientOptions(\n+            enclaveUri, privacyKeyStoreFile, privacyKeyStorePasswordFile, privacyAllowlistFile);\n+\n+    final RequestTransmitter vertxTransmitter =\n+        new VertxRequestTransmitter(vertx.createHttpClient(clientOptions));\n+\n+    return new Enclave(vertxTransmitter);\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMDkwOA=="}, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzE5ODk4OnYy", "diffSide": "RIGHT", "path": "besu/src/test/java/org/hyperledger/besu/cli/BesuCommandTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDoyOTozMFrOIHfJ5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMTo1NVrOIHgkjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMTM4MQ==", "bodyText": "what happens if privacy-public-key-file isn't specified?", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544721381", "createdAt": "2020-12-17T00:29:30Z", "author": {"login": "macfarla"}, "path": "besu/src/test/java/org/hyperledger/besu/cli/BesuCommandTest.java", "diffHunk": "@@ -3987,10 +3987,44 @@ public void quorumInteropEnabledSucceedsWithGasPriceSetToZero() throws IOExcepti\n         \"--genesis-file\",\n         genesisFile.toString(),\n         \"--min-gas-price\",\n-        \"0\");\n+        \"0\",\n+        \"--privacy-public-key-file\",\n+        ENCLAVE_PUBLIC_KEY_PATH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NDU0Mg==", "bodyText": "We decided (Madeline and me) that we would enable private Txs when we are compatible with GoQuorum, so we need the enclave key. In the future we might have a flag that disables private Txs ...\nIn short: we fail!", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544744542", "createdAt": "2020-12-17T01:31:47Z", "author": {"login": "pinges"}, "path": "besu/src/test/java/org/hyperledger/besu/cli/BesuCommandTest.java", "diffHunk": "@@ -3987,10 +3987,44 @@ public void quorumInteropEnabledSucceedsWithGasPriceSetToZero() throws IOExcepti\n         \"--genesis-file\",\n         genesisFile.toString(),\n         \"--min-gas-price\",\n-        \"0\");\n+        \"0\",\n+        \"--privacy-public-key-file\",\n+        ENCLAVE_PUBLIC_KEY_PATH);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMTM4MQ=="}, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NDU4OA==", "bodyText": "And why did we need to update a test that has nothing to do privacy?", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544744588", "createdAt": "2020-12-17T01:31:55Z", "author": {"login": "lucassaldanha"}, "path": "besu/src/test/java/org/hyperledger/besu/cli/BesuCommandTest.java", "diffHunk": "@@ -3987,10 +3987,44 @@ public void quorumInteropEnabledSucceedsWithGasPriceSetToZero() throws IOExcepti\n         \"--genesis-file\",\n         genesisFile.toString(),\n         \"--min-gas-price\",\n-        \"0\");\n+        \"0\",\n+        \"--privacy-public-key-file\",\n+        ENCLAVE_PUBLIC_KEY_PATH);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMTM4MQ=="}, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzM1OTM1OnYy", "diffSide": "RIGHT", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMToyOTo0NlrOIHghew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTo0NDoxOFrOIHg2CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0MzgwMw==", "bodyText": "NIT: It would be nice to encapsulate all this logic to read the key into its own method. Something like readEnclaveKey or similar.", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544743803", "createdAt": "2020-12-17T01:29:46Z", "author": {"login": "lucassaldanha"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1502,10 +1505,46 @@ private BesuCommand configure() throws Exception {\n         .ifPresent(p -> ensureAllNodesAreInAllowlist(staticNodes, p));\n     metricsConfiguration = metricsConfiguration();\n \n+    if (isGoQuorumCompatibilityMode) {\n+      configureGoQuorumPrivacy();\n+    }\n+\n     logger.info(\"Security Module: {}\", securityModuleName);\n     return this;\n   }\n \n+  private void configureGoQuorumPrivacy() {\n+\n+    GoQuorumPrivacyParameters.isEnabled = true;\n+    final EnclaveFactory enclaveFactory = new EnclaveFactory(Vertx.vertx());\n+    if (privacyKeyStoreFile != null) {\n+      GoQuorumPrivacyParameters.goQuorumEnclave =\n+          enclaveFactory.createGoQuorumEnclave(\n+              privacyUrl,\n+              privacyKeyStoreFile,\n+              privacyKeyStorePasswordFile,\n+              privacyTlsKnownEnclaveFile);\n+    } else {\n+      GoQuorumPrivacyParameters.goQuorumEnclave = enclaveFactory.createGoQuorumEnclave(privacyUrl);\n+    }\n+    final String key;\n+    try {\n+      key = Files.asCharSource(privacyPublicKeyFile, UTF_8).read();\n+    } catch (final Exception e) {\n+      throw new ParameterException(\n+          this.commandLine,\n+          \"--privacy-public-key-file must be set when goquorum-compatibility-enabled is set to true.\",\n+          e);\n+    }\n+    if (key.length() != 44) {\n+      throw new IllegalArgumentException(\n+          \"Contents of enclave public key file needs to be 44 characters long to decode to a valid 32 byte public key.\");\n+    }\n+    // throws exception if invalid base 64\n+    Base64.getDecoder().decode(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0OTA2NQ==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544749065", "createdAt": "2020-12-17T01:44:18Z", "author": {"login": "pinges"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1502,10 +1505,46 @@ private BesuCommand configure() throws Exception {\n         .ifPresent(p -> ensureAllNodesAreInAllowlist(staticNodes, p));\n     metricsConfiguration = metricsConfiguration();\n \n+    if (isGoQuorumCompatibilityMode) {\n+      configureGoQuorumPrivacy();\n+    }\n+\n     logger.info(\"Security Module: {}\", securityModuleName);\n     return this;\n   }\n \n+  private void configureGoQuorumPrivacy() {\n+\n+    GoQuorumPrivacyParameters.isEnabled = true;\n+    final EnclaveFactory enclaveFactory = new EnclaveFactory(Vertx.vertx());\n+    if (privacyKeyStoreFile != null) {\n+      GoQuorumPrivacyParameters.goQuorumEnclave =\n+          enclaveFactory.createGoQuorumEnclave(\n+              privacyUrl,\n+              privacyKeyStoreFile,\n+              privacyKeyStorePasswordFile,\n+              privacyTlsKnownEnclaveFile);\n+    } else {\n+      GoQuorumPrivacyParameters.goQuorumEnclave = enclaveFactory.createGoQuorumEnclave(privacyUrl);\n+    }\n+    final String key;\n+    try {\n+      key = Files.asCharSource(privacyPublicKeyFile, UTF_8).read();\n+    } catch (final Exception e) {\n+      throw new ParameterException(\n+          this.commandLine,\n+          \"--privacy-public-key-file must be set when goquorum-compatibility-enabled is set to true.\",\n+          e);\n+    }\n+    if (key.length() != 44) {\n+      throw new IllegalArgumentException(\n+          \"Contents of enclave public key file needs to be 44 characters long to decode to a valid 32 byte public key.\");\n+    }\n+    // throws exception if invalid base 64\n+    Base64.getDecoder().decode(key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0MzgwMw=="}, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzM2MjM3OnYy", "diffSide": "RIGHT", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMTowM1rOIHgjLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMTowM1rOIHgjLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NDIzOQ==", "bodyText": "NIT: it would be nice to see this logic into its own method. Something like createGoQuorumEnclave or similar.", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544744239", "createdAt": "2020-12-17T01:31:03Z", "author": {"login": "lucassaldanha"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1502,10 +1505,46 @@ private BesuCommand configure() throws Exception {\n         .ifPresent(p -> ensureAllNodesAreInAllowlist(staticNodes, p));\n     metricsConfiguration = metricsConfiguration();\n \n+    if (isGoQuorumCompatibilityMode) {\n+      configureGoQuorumPrivacy();\n+    }\n+\n     logger.info(\"Security Module: {}\", securityModuleName);\n     return this;\n   }\n \n+  private void configureGoQuorumPrivacy() {\n+\n+    GoQuorumPrivacyParameters.isEnabled = true;\n+    final EnclaveFactory enclaveFactory = new EnclaveFactory(Vertx.vertx());\n+    if (privacyKeyStoreFile != null) {\n+      GoQuorumPrivacyParameters.goQuorumEnclave =\n+          enclaveFactory.createGoQuorumEnclave(\n+              privacyUrl,\n+              privacyKeyStoreFile,\n+              privacyKeyStorePasswordFile,\n+              privacyTlsKnownEnclaveFile);\n+    } else {\n+      GoQuorumPrivacyParameters.goQuorumEnclave = enclaveFactory.createGoQuorumEnclave(privacyUrl);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ff27eedf2d6318ff090154f227a5904e5615d8"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzM2ODI4OnYy", "diffSide": "RIGHT", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMzoyNFrOIHgmbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTo0ODoxNVrOIHg7pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NTA2OQ==", "bodyText": "Inconsistency in using -- before the commands. Either we use the prefix in both or we don't use in either.", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544745069", "createdAt": "2020-12-17T01:33:24Z", "author": {"login": "lucassaldanha"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1502,10 +1505,46 @@ private BesuCommand configure() throws Exception {\n         .ifPresent(p -> ensureAllNodesAreInAllowlist(staticNodes, p));\n     metricsConfiguration = metricsConfiguration();\n \n+    if (isGoQuorumCompatibilityMode) {\n+      configureGoQuorumPrivacy();\n+    }\n+\n     logger.info(\"Security Module: {}\", securityModuleName);\n     return this;\n   }\n \n+  private void configureGoQuorumPrivacy() {\n+\n+    GoQuorumPrivacyParameters.isEnabled = true;\n+    final EnclaveFactory enclaveFactory = new EnclaveFactory(Vertx.vertx());\n+    if (privacyKeyStoreFile != null) {\n+      GoQuorumPrivacyParameters.goQuorumEnclave =\n+          enclaveFactory.createGoQuorumEnclave(\n+              privacyUrl,\n+              privacyKeyStoreFile,\n+              privacyKeyStorePasswordFile,\n+              privacyTlsKnownEnclaveFile);\n+    } else {\n+      GoQuorumPrivacyParameters.goQuorumEnclave = enclaveFactory.createGoQuorumEnclave(privacyUrl);\n+    }\n+    final String key;\n+    try {\n+      key = Files.asCharSource(privacyPublicKeyFile, UTF_8).read();\n+    } catch (final Exception e) {\n+      throw new ParameterException(\n+          this.commandLine,\n+          \"--privacy-public-key-file must be set when goquorum-compatibility-enabled is set to true.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e63d065397b73227f34d917fc9d681fe855734bc"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MDUwMg==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/1718#discussion_r544750502", "createdAt": "2020-12-17T01:48:15Z", "author": {"login": "pinges"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1502,10 +1505,46 @@ private BesuCommand configure() throws Exception {\n         .ifPresent(p -> ensureAllNodesAreInAllowlist(staticNodes, p));\n     metricsConfiguration = metricsConfiguration();\n \n+    if (isGoQuorumCompatibilityMode) {\n+      configureGoQuorumPrivacy();\n+    }\n+\n     logger.info(\"Security Module: {}\", securityModuleName);\n     return this;\n   }\n \n+  private void configureGoQuorumPrivacy() {\n+\n+    GoQuorumPrivacyParameters.isEnabled = true;\n+    final EnclaveFactory enclaveFactory = new EnclaveFactory(Vertx.vertx());\n+    if (privacyKeyStoreFile != null) {\n+      GoQuorumPrivacyParameters.goQuorumEnclave =\n+          enclaveFactory.createGoQuorumEnclave(\n+              privacyUrl,\n+              privacyKeyStoreFile,\n+              privacyKeyStorePasswordFile,\n+              privacyTlsKnownEnclaveFile);\n+    } else {\n+      GoQuorumPrivacyParameters.goQuorumEnclave = enclaveFactory.createGoQuorumEnclave(privacyUrl);\n+    }\n+    final String key;\n+    try {\n+      key = Files.asCharSource(privacyPublicKeyFile, UTF_8).read();\n+    } catch (final Exception e) {\n+      throw new ParameterException(\n+          this.commandLine,\n+          \"--privacy-public-key-file must be set when goquorum-compatibility-enabled is set to true.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NTA2OQ=="}, "originalCommit": {"oid": "e63d065397b73227f34d917fc9d681fe855734bc"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1275, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}