{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMzQ1NjU2", "number": 1228, "title": "Added admin_logsRepairCache end point", "bodyText": "PR description\nAdded admin_logsRepairCache end point which takes an optional block number parameter. The end point fixes all segments starting with the block number passed in or with the head block if parameter is empty.\nFixed Issue(s)\n#1172\nTesting\n\nExercised end point using Postman to test with and without block chain parameter", "createdAt": "2020-07-16T16:53:15Z", "url": "https://github.com/hyperledger/besu/pull/1228", "merged": true, "mergeCommit": {"oid": "595369306564b0cc6c4d59f7dceffe41e36a225a"}, "closed": true, "closedAt": "2020-07-20T16:11:03Z", "author": {"login": "davemec"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvDYsygH2gAyNDUwMzQ1NjU2OmRhZDhkYWU4YmQ2NjAxYmZlMGQzZjYyMDAzNmZmZGMyZjY1N2I3MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2zP7egFqTQ1MTcwOTk2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dad8dae8bd6601bfe0d3f620036ffdc2f657b702", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/dad8dae8bd6601bfe0d3f620036ffdc2f657b702", "committedDate": "2020-06-26T13:37:13Z", "message": "#1066 Switched to use unprefixed hex strings for memory and stack values\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01430e770da93ea19171e1a9683daec7c10677f4", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/01430e770da93ea19171e1a9683daec7c10677f4", "committedDate": "2020-06-26T16:53:26Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aac3bd6d4d5c6f16a4ef1e8c1cf7fb3fd8346b7d", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/aac3bd6d4d5c6f16a4ef1e8c1cf7fb3fd8346b7d", "committedDate": "2020-06-30T17:04:49Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17aa301cff4a1192efb3a0d3e53e05995dafa744", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/17aa301cff4a1192efb3a0d3e53e05995dafa744", "committedDate": "2020-06-30T20:58:04Z", "message": "Disable flaky tests per Ben Burns(Yeti) request\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a987ae3bd51de708b0f230a26b56785142ec06f", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/4a987ae3bd51de708b0f230a26b56785142ec06f", "committedDate": "2020-06-30T23:43:03Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "520d3172fad19bb6ff7055c44b6ddce524ee8bce", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/520d3172fad19bb6ff7055c44b6ddce524ee8bce", "committedDate": "2020-06-30T23:45:44Z", "message": "Revert last commit and enable ignored tests.\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e61d8699e37f65780ac5985fb841cbb31920ee8", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/0e61d8699e37f65780ac5985fb841cbb31920ee8", "committedDate": "2020-07-01T19:10:35Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fc3bf9be8452f237c8a1eb0b96ede151c8a2427", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/6fc3bf9be8452f237c8a1eb0b96ede151c8a2427", "committedDate": "2020-07-06T18:44:24Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47c82ed2dbbf9d1c31e0f60fe0f963d8c16a7362", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/47c82ed2dbbf9d1c31e0f60fe0f963d8c16a7362", "committedDate": "2020-07-06T21:11:34Z", "message": "#1157 - updated to create 2 agents so that proper bonding can occur\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9742c60a6d08924106055868d933b06ec6b41b1f", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/9742c60a6d08924106055868d933b06ec6b41b1f", "committedDate": "2020-07-06T21:26:30Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a13be1b0ddac0a3972c0b2af59fe86479c22bc02", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/a13be1b0ddac0a3972c0b2af59fe86479c22bc02", "committedDate": "2020-07-06T23:16:30Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d8dfe6f80d2ea9a337126b79042207a9a555041", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/5d8dfe6f80d2ea9a337126b79042207a9a555041", "committedDate": "2020-07-07T13:05:21Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c6163d1472d16f60b32ec038ce81cb3abfea6e3", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/4c6163d1472d16f60b32ec038ce81cb3abfea6e3", "committedDate": "2020-07-08T15:26:54Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11873402ff1e78d9f0d1edfe3ef0bc4557878133", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/11873402ff1e78d9f0d1edfe3ef0bc4557878133", "committedDate": "2020-07-09T13:20:06Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a92d67821b55776d6c1625f40e713d2214fad6f4", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/a92d67821b55776d6c1625f40e713d2214fad6f4", "committedDate": "2020-07-09T13:27:29Z", "message": "#1162 - Updated test to mock the local peer PING packet creation so that the hash can be managed.\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0db56c0bedcd3266e88cb41ef7a2e16fcb63908", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/b0db56c0bedcd3266e88cb41ef7a2e16fcb63908", "committedDate": "2020-07-14T15:19:03Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e301b49061e1b443b2da32ae83b7075632f84518", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/e301b49061e1b443b2da32ae83b7075632f84518", "committedDate": "2020-07-16T15:58:11Z", "message": "Added admin_logsRepairCache end point\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "133485e7d254442ac043fdcb8353cd72420fca11", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/133485e7d254442ac043fdcb8353cd72420fca11", "committedDate": "2020-07-16T15:58:24Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d6690d84c242eb5f0bbd1d9863f82a07646a16f", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/7d6690d84c242eb5f0bbd1d9863f82a07646a16f", "committedDate": "2020-07-16T15:59:53Z", "message": "Added admin_logsRepairCache end point\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae4776c263bcc77548973645f8cc9b62e38b654b", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/ae4776c263bcc77548973645f8cc9b62e38b654b", "committedDate": "2020-07-16T16:54:14Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d09e0340beef2421d0f4272ab5d13918c29f196", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/8d09e0340beef2421d0f4272ab5d13918c29f196", "committedDate": "2020-07-16T18:04:11Z", "message": "Remove p2p network code per PR comments\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99a2d6fb0c5596fc72631fce7d7063dc6c29a57c", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/99a2d6fb0c5596fc72631fce7d7063dc6c29a57c", "committedDate": "2020-07-16T18:51:56Z", "message": "Merge branch 'master' of github.com:hyperledger/besu"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMTMzNDAx", "url": "https://github.com/hyperledger/besu/pull/1228#pullrequestreview-450133401", "createdAt": "2020-07-16T19:06:24Z", "commit": {"oid": "99a2d6fb0c5596fc72631fce7d7063dc6c29a57c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxOTowNzoxOFrOGy4ozQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxOTozNTozMFrOGy5t1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAwOTkzMw==", "bodyText": "Since the user could actually see this exception, we should put a message in the orElseThrow that explains that this method can't do anything without t a log cacher.", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r456009933", "createdAt": "2020-07-16T19:07:18Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/AdminLogsRepairCache.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.api.query.BlockchainQueries;\n+import org.hyperledger.besu.ethereum.api.query.TransactionLogBloomCacher;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class AdminLogsRepairCache implements JsonRpcMethod {\n+  private static final String STATUS = \"Status\";\n+\n+  private final BlockchainQueries blockchainQueries;\n+\n+  public AdminLogsRepairCache(final BlockchainQueries blockchainQueries) {\n+    this.blockchainQueries = blockchainQueries;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.ADMIN_LOGS_REPAIR_CACHE.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final Optional<Long> blockNumber = requestContext.getOptionalParameter(0, Long.class);\n+\n+    blockNumber.ifPresent(\n+        bn ->\n+            blockchainQueries\n+                .getBlockchain()\n+                .getBlockByNumber(bn)\n+                .orElseThrow(() -> new IllegalStateException(\"Block not found\")));\n+\n+    final TransactionLogBloomCacher transactionLogBloomCacher =\n+        blockchainQueries.getTransactionLogBloomCacher().orElseThrow();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a2d6fb0c5596fc72631fce7d7063dc6c29a57c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxNDkwNA==", "bodyText": "Since we have it anyways we can put the block the user tried to put in the string and specifically call out that it's too high of a number.", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r456014904", "createdAt": "2020-07-16T19:16:37Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/AdminLogsRepairCache.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.api.query.BlockchainQueries;\n+import org.hyperledger.besu.ethereum.api.query.TransactionLogBloomCacher;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class AdminLogsRepairCache implements JsonRpcMethod {\n+  private static final String STATUS = \"Status\";\n+\n+  private final BlockchainQueries blockchainQueries;\n+\n+  public AdminLogsRepairCache(final BlockchainQueries blockchainQueries) {\n+    this.blockchainQueries = blockchainQueries;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.ADMIN_LOGS_REPAIR_CACHE.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final Optional<Long> blockNumber = requestContext.getOptionalParameter(0, Long.class);\n+\n+    blockNumber.ifPresent(\n+        bn ->\n+            blockchainQueries\n+                .getBlockchain()\n+                .getBlockByNumber(bn)\n+                .orElseThrow(() -> new IllegalStateException(\"Block not found\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a2d6fb0c5596fc72631fce7d7063dc6c29a57c"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAxODgxNA==", "bodyText": "Is it possible that this won't actually force the repair of that segment? My quick reading makes it seem like we wouldn't do it if we had the right bloom file size:\n\n  \n    \n      besu/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/TransactionLogBloomCacher.java\n    \n    \n         Line 220\n      in\n      e301b49\n    \n    \n    \n    \n\n        \n          \n           if (!cacheFile.isFile() || cacheFile.length() != EXPECTED_BLOOM_FILE_SIZE) { \n        \n    \n  \n\n\nWhat if the size is right but the user wants to force the recalculation because of corruption?", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r456018814", "createdAt": "2020-07-16T19:22:53Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/AdminLogsRepairCache.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.api.query.BlockchainQueries;\n+import org.hyperledger.besu.ethereum.api.query.TransactionLogBloomCacher;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class AdminLogsRepairCache implements JsonRpcMethod {\n+  private static final String STATUS = \"Status\";\n+\n+  private final BlockchainQueries blockchainQueries;\n+\n+  public AdminLogsRepairCache(final BlockchainQueries blockchainQueries) {\n+    this.blockchainQueries = blockchainQueries;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.ADMIN_LOGS_REPAIR_CACHE.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final Optional<Long> blockNumber = requestContext.getOptionalParameter(0, Long.class);\n+\n+    blockNumber.ifPresent(\n+        bn ->\n+            blockchainQueries\n+                .getBlockchain()\n+                .getBlockByNumber(bn)\n+                .orElseThrow(() -> new IllegalStateException(\"Block not found\")));\n+\n+    final TransactionLogBloomCacher transactionLogBloomCacher =\n+        blockchainQueries.getTransactionLogBloomCacher().orElseThrow();\n+\n+    transactionLogBloomCacher.ensurePreviousSegmentsArePresent(\n+        blockNumber.orElse(blockchainQueries.headBlockNumber()), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a2d6fb0c5596fc72631fce7d7063dc6c29a57c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyMjk3Mg==", "bodyText": "Connected to my point above about forcing regeneration, why can't we use cacheLogsBloomForBlockHeader?", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r456022972", "createdAt": "2020-07-16T19:29:00Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/TransactionLogBloomCacher.java", "diffHunk": "@@ -202,14 +206,15 @@ private boolean populateLatestSegment(final long eventBlockNumber) {\n     return false;\n   }\n \n-  private void ensurePreviousSegmentsArePresent(final long blockNumber) {\n+  public void ensurePreviousSegmentsArePresent(\n+      final long blockNumber, final boolean overrideCacheCheck) {\n     if (!cachingStatus.isCaching()) {\n       scheduler.scheduleFutureTask(\n           () -> {\n             long currentSegment = (blockNumber / BLOCKS_PER_BLOOM_CACHE) - 1;\n             while (currentSegment > 0) {\n               try {\n-                if (!cachedSegments.getOrDefault(currentSegment, false)) {\n+                if (overrideCacheCheck || !cachedSegments.getOrDefault(currentSegment, false)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a2d6fb0c5596fc72631fce7d7063dc6c29a57c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjAyNzYwNg==", "bodyText": "I think we want some sort of thread-safe object that can track this. We might be able to get away with an AtomicBoolean", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r456027606", "createdAt": "2020-07-16T19:35:30Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/AdminLogsRepairCache.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.api.query.BlockchainQueries;\n+import org.hyperledger.besu.ethereum.api.query.TransactionLogBloomCacher;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class AdminLogsRepairCache implements JsonRpcMethod {\n+  private static final String STATUS = \"Status\";\n+\n+  private final BlockchainQueries blockchainQueries;\n+\n+  public AdminLogsRepairCache(final BlockchainQueries blockchainQueries) {\n+    this.blockchainQueries = blockchainQueries;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.ADMIN_LOGS_REPAIR_CACHE.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final Optional<Long> blockNumber = requestContext.getOptionalParameter(0, Long.class);\n+\n+    blockNumber.ifPresent(\n+        bn ->\n+            blockchainQueries\n+                .getBlockchain()\n+                .getBlockByNumber(bn)\n+                .orElseThrow(() -> new IllegalStateException(\"Block not found\")));\n+\n+    final TransactionLogBloomCacher transactionLogBloomCacher =\n+        blockchainQueries.getTransactionLogBloomCacher().orElseThrow();\n+\n+    transactionLogBloomCacher.ensurePreviousSegmentsArePresent(\n+        blockNumber.orElse(blockchainQueries.headBlockNumber()), true);\n+\n+    final Map<String, Object> response = new HashMap<>();\n+    response.put(STATUS, \"Started\");\n+\n+    if (transactionLogBloomCacher.getCachingStatus().isCaching()) {\n+      response.put(STATUS, \"Already running\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a2d6fb0c5596fc72631fce7d7063dc6c29a57c"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "315149c134ab7f3f70701ed89e28f4c9d1a4954d", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/315149c134ab7f3f70701ed89e28f4c9d1a4954d", "committedDate": "2020-07-16T19:56:25Z", "message": "Updates from PR comments\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b70082c6dd14ce51dd6bd63d96a875126795390", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/2b70082c6dd14ce51dd6bd63d96a875126795390", "committedDate": "2020-07-16T21:07:30Z", "message": "Spotless Apply fixes\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMjI2NjQ0", "url": "https://github.com/hyperledger/besu/pull/1228#pullrequestreview-450226644", "createdAt": "2020-07-16T21:23:43Z", "commit": {"oid": "2b70082c6dd14ce51dd6bd63d96a875126795390"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMToyMzo0NFrOGy9SZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMToyMzo0NFrOGy9SZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA4NjExNg==", "bodyText": "Why is the value type Object?\n(optional) Since we're always going to have a STATUS key and are never going to mutate the Map, we could make the map immutable\n    final Map<String, String> response =\n        Map.of(\n            STATUS,\n            transactionLogBloomCacher.getCachingStatus().isCaching()\n                ? \"Already running\"\n                : \"Started\");", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r456086116", "createdAt": "2020-07-16T21:23:44Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/AdminLogsRepairCache.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.api.query.BlockchainQueries;\n+import org.hyperledger.besu.ethereum.api.query.TransactionLogBloomCacher;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class AdminLogsRepairCache implements JsonRpcMethod {\n+  private static final String STATUS = \"Status\";\n+\n+  private final BlockchainQueries blockchainQueries;\n+\n+  public AdminLogsRepairCache(final BlockchainQueries blockchainQueries) {\n+    this.blockchainQueries = blockchainQueries;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.ADMIN_LOGS_REPAIR_CACHE.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final Optional<Long> blockNumber = requestContext.getOptionalParameter(0, Long.class);\n+\n+    blockNumber.ifPresent(\n+        bn ->\n+            blockchainQueries\n+                .getBlockchain()\n+                .getBlockByNumber(bn)\n+                .orElseThrow(() -> new IllegalStateException(\"Block not found, \" + bn)));\n+\n+    final TransactionLogBloomCacher transactionLogBloomCacher =\n+        blockchainQueries\n+            .getTransactionLogBloomCacher()\n+            .orElseThrow(\n+                () -> new InternalError(\"Error attempting to get TransactionLogBloomCacher\"));\n+\n+    transactionLogBloomCacher.ensurePreviousSegmentsArePresent(\n+        blockNumber.orElse(blockchainQueries.headBlockNumber()), true);\n+\n+    final Map<String, Object> response = new HashMap<>();\n+    response.put(STATUS, \"Started\");\n+\n+    if (transactionLogBloomCacher.getCachingStatus().isCaching()) {\n+      response.put(STATUS, \"Already running\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b70082c6dd14ce51dd6bd63d96a875126795390"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f32a56c946022de71be4087c542044c96ec7bed6", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/f32a56c946022de71be4087c542044c96ec7bed6", "committedDate": "2020-07-17T00:59:56Z", "message": "PR updates\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a9c73d8c69750635a0ccbcac69a347e8b4c3949", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/0a9c73d8c69750635a0ccbcac69a347e8b4c3949", "committedDate": "2020-07-17T17:09:38Z", "message": "Admin force cache refresh when called through end point per PR comments\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODkzOTk1", "url": "https://github.com/hyperledger/besu/pull/1228#pullrequestreview-450893995", "createdAt": "2020-07-17T19:05:26Z", "commit": {"oid": "0a9c73d8c69750635a0ccbcac69a347e8b4c3949"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOTowNToyNlrOGzeIHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOTowNToyNlrOGzeIHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYyNDE1OA==", "bodyText": "@shemnon Would it be alright to change cachedSegments into a TreeSet? Couldn't see anywhere we need the model the ternary of <true, false, not present>", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r456624158", "createdAt": "2020-07-17T19:05:26Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/TransactionLogBloomCacher.java", "diffHunk": "@@ -202,17 +206,20 @@ private boolean populateLatestSegment(final long eventBlockNumber) {\n     return false;\n   }\n \n-  private void ensurePreviousSegmentsArePresent(final long blockNumber) {\n+  public void ensurePreviousSegmentsArePresent(\n+      final long blockNumber, final boolean overrideCacheCheck) {\n     if (!cachingStatus.isCaching()) {\n       scheduler.scheduleFutureTask(\n           () -> {\n             long currentSegment = (blockNumber / BLOCKS_PER_BLOOM_CACHE) - 1;\n             while (currentSegment > 0) {\n               try {\n-                if (!cachedSegments.getOrDefault(currentSegment, false)) {\n+                if (overrideCacheCheck || !cachedSegments.getOrDefault(currentSegment, false)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a9c73d8c69750635a0ccbcac69a347e8b4c3949"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTAyMjk2", "url": "https://github.com/hyperledger/besu/pull/1228#pullrequestreview-450902296", "createdAt": "2020-07-17T19:20:11Z", "commit": {"oid": "0a9c73d8c69750635a0ccbcac69a347e8b4c3949"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOToyMDoxMVrOGzehGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOToyMDoxMVrOGzehGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYzMDU1NQ==", "bodyText": "We should make this actionable since this is inscrutable to anyone who doesn't know our architecture. If there isn't a TransactionLogBloomCacher, that means the associated option must be disabled. We should tell them that this rpc method doesn't do anything unless they have the cacher enabled.", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r456630555", "createdAt": "2020-07-17T19:20:11Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/AdminLogsRepairCache.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.methods;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.RpcMethod;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.JsonRpcRequestContext;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcResponse;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.response.JsonRpcSuccessResponse;\n+import org.hyperledger.besu.ethereum.api.query.BlockchainQueries;\n+import org.hyperledger.besu.ethereum.api.query.TransactionLogBloomCacher;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public class AdminLogsRepairCache implements JsonRpcMethod {\n+  private final BlockchainQueries blockchainQueries;\n+\n+  public AdminLogsRepairCache(final BlockchainQueries blockchainQueries) {\n+    this.blockchainQueries = blockchainQueries;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return RpcMethod.ADMIN_LOGS_REPAIR_CACHE.getMethodName();\n+  }\n+\n+  @Override\n+  public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+    final Optional<Long> blockNumber = requestContext.getOptionalParameter(0, Long.class);\n+\n+    blockNumber.ifPresent(\n+        bn ->\n+            blockchainQueries\n+                .getBlockchain()\n+                .getBlockByNumber(bn)\n+                .orElseThrow(() -> new IllegalStateException(\"Block not found, \" + bn)));\n+\n+    final TransactionLogBloomCacher transactionLogBloomCacher =\n+        blockchainQueries\n+            .getTransactionLogBloomCacher()\n+            .orElseThrow(\n+                () -> new InternalError(\"Error attempting to get TransactionLogBloomCacher\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a9c73d8c69750635a0ccbcac69a347e8b4c3949"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTM1ODg1", "url": "https://github.com/hyperledger/besu/pull/1228#pullrequestreview-450935885", "createdAt": "2020-07-17T20:23:16Z", "commit": {"oid": "0a9c73d8c69750635a0ccbcac69a347e8b4c3949"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bba686aa081d3b1d63af237f605a36a76b9753a", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/2bba686aa081d3b1d63af237f605a36a76b9753a", "committedDate": "2020-07-20T12:49:02Z", "message": "Pr updates\n\nSigned-off-by: David Mechler <david.mechler@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "462ef6f3358e3be9df7757a796ed6fe5387bad43", "author": {"user": {"login": "davemec", "name": "David Mechler"}}, "url": "https://github.com/hyperledger/besu/commit/462ef6f3358e3be9df7757a796ed6fe5387bad43", "committedDate": "2020-07-20T13:40:08Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNzA5OTY4", "url": "https://github.com/hyperledger/besu/pull/1228#pullrequestreview-451709968", "createdAt": "2020-07-20T15:20:33Z", "commit": {"oid": "462ef6f3358e3be9df7757a796ed6fe5387bad43"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToyMDozM1rOG0Sz3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNToyMDozM1rOG0Sz3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQ4NzMyNw==", "bodyText": "This is good! It covers the case where we have an error while also addressing the most likely case", "url": "https://github.com/hyperledger/besu/pull/1228#discussion_r457487327", "createdAt": "2020-07-20T15:20:33Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/AdminLogsRepairCache.java", "diffHunk": "@@ -51,7 +51,9 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n         blockchainQueries\n             .getTransactionLogBloomCacher()\n             .orElseThrow(\n-                () -> new InternalError(\"Error attempting to get TransactionLogBloomCacher\"));\n+                () ->\n+                    new InternalError(\n+                        \"Error attempting to get TransactionLogBloomCacher. Please ensure that the TransactionLogBloomCacher is enabled.\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "462ef6f3358e3be9df7757a796ed6fe5387bad43"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1445, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}