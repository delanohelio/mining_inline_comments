{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDg5NzQw", "number": 1652, "title": "[REFACTOR] Clearly Separate Common MessageFrame Fields", "bodyText": "I'm looking to add the common field of initial warmed up accounts/storage for EIP-2930 and thought that this would make it cleaner for myself and future additions to the MessageFrame", "createdAt": "2020-12-02T15:19:26Z", "url": "https://github.com/hyperledger/besu/pull/1652", "merged": true, "mergeCommit": {"oid": "e8facd0f1c1eada2fbbaf37176052a09f6b75b28"}, "closed": true, "closedAt": "2020-12-02T17:19:17Z", "author": {"login": "RatanRSur"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiQErVgH2gAyNTMxMDg5NzQwOjYxMzJhMzk1YTZiNTlmYWY0N2VlMTc0NTJiYmRiODc1NGQ3MDQ1Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiQu6dgFqTU0Mjk4NjI0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6132a395a6b59faf47ee17452bbdb8754d704528", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/6132a395a6b59faf47ee17452bbdb8754d704528", "committedDate": "2020-12-02T15:14:15Z", "message": "remove redundancy\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyOTY1OTk3", "url": "https://github.com/hyperledger/besu/pull/1652#pullrequestreview-542965997", "createdAt": "2020-12-02T15:40:42Z", "commit": {"oid": "6132a395a6b59faf47ee17452bbdb8754d704528"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0MDo0M1rOH9hFIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0MDo0M1rOH9hFIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI2NzE3MA==", "bodyText": "This winds up creating a new List object for each iteration, and creates a loop that can simply be unrolled to what is originally there.  Yes, it's two more lines of code but a lot less VM work.", "url": "https://github.com/hyperledger/besu/pull/1652#discussion_r534267170", "createdAt": "2020-12-02T15:40:43Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/MessageFrame.java", "diffHunk": "@@ -320,9 +320,7 @@ private MessageFrame(\n     this.transactionHash = transactionHash;\n     this.revertReason = revertReason;\n \n-    this.warmedUpAddresses = new HashSet<>();\n-    warmedUpAddresses.add(sender);\n-    warmedUpAddresses.add(contract);\n+    this.warmedUpAddresses = new HashSet<>(List.of(sender, contract));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6132a395a6b59faf47ee17452bbdb8754d704528"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyOTY4NTU0", "url": "https://github.com/hyperledger/besu/pull/1652#pullrequestreview-542968554", "createdAt": "2020-12-02T15:43:13Z", "commit": {"oid": "6132a395a6b59faf47ee17452bbdb8754d704528"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0MzoxM1rOH9hMrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0MzoxM1rOH9hMrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI2OTEwMA==", "bodyText": "This reduces the readability.  The if block makes it clear that there is one path for contract creation and one for normal transactions.  Without that you need to have deep knowledge of the transactions that a contract creation TX lacks a to field.  I don't mind the common field refactoring but I think the over-use of optional here reduces the accessibility to future maintainers.", "url": "https://github.com/hyperledger/besu/pull/1652#discussion_r534269100", "createdAt": "2020-12-02T15:43:13Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionProcessor.java", "diffHunk": "@@ -295,77 +296,61 @@ public TransactionProcessingResult processTransaction(\n           intrinsicGas);\n \n       final WorldUpdater worldUpdater = worldState.updater();\n-      final MessageFrame initialFrame;\n       final Deque<MessageFrame> messageFrameStack = new ArrayDeque<>();\n-      final ReturnStack returnStack = new ReturnStack();\n-\n-      if (transaction.isContractCreation()) {\n-        final Address contractAddress =\n-            Address.contractAddress(senderAddress, sender.getNonce() - 1L);\n-\n-        initialFrame =\n-            MessageFrame.builder()\n-                .type(MessageFrame.Type.CONTRACT_CREATION)\n-                .messageFrameStack(messageFrameStack)\n-                .returnStack(returnStack)\n-                .blockchain(blockchain)\n-                .worldState(worldUpdater.updater())\n-                .initialGas(gasAvailable)\n-                .address(contractAddress)\n-                .originator(senderAddress)\n-                .contract(contractAddress)\n-                .contractAccountVersion(createContractAccountVersion)\n-                .gasPrice(transactionGasPrice)\n-                .inputData(Bytes.EMPTY)\n-                .sender(senderAddress)\n-                .value(transaction.getValue())\n-                .apparentValue(transaction.getValue())\n-                .code(new Code(transaction.getPayload()))\n-                .blockHeader(blockHeader)\n-                .depth(0)\n-                .completer(c -> {})\n-                .miningBeneficiary(miningBeneficiary)\n-                .blockHashLookup(blockHashLookup)\n-                .isPersistingPrivateState(isPersistingPrivateState)\n-                .maxStackSize(maxStackSize)\n-                .transactionHash(transaction.getHash())\n-                .privateMetadataUpdater(privateMetadataUpdater)\n-                .build();\n-\n-      } else {\n-        final Address to = transaction.getTo().get();\n-        final Account contract = worldState.get(to);\n-\n-        initialFrame =\n-            MessageFrame.builder()\n-                .type(MessageFrame.Type.MESSAGE_CALL)\n-                .messageFrameStack(messageFrameStack)\n-                .returnStack(returnStack)\n-                .blockchain(blockchain)\n-                .worldState(worldUpdater.updater())\n-                .initialGas(gasAvailable)\n-                .address(to)\n-                .originator(senderAddress)\n-                .contract(to)\n-                .contractAccountVersion(\n-                    contract != null ? contract.getVersion() : Account.DEFAULT_VERSION)\n-                .gasPrice(transactionGasPrice)\n-                .inputData(transaction.getPayload())\n-                .sender(senderAddress)\n-                .value(transaction.getValue())\n-                .apparentValue(transaction.getValue())\n-                .code(new Code(contract != null ? contract.getCode() : Bytes.EMPTY))\n-                .blockHeader(blockHeader)\n-                .depth(0)\n-                .completer(c -> {})\n-                .miningBeneficiary(miningBeneficiary)\n-                .blockHashLookup(blockHashLookup)\n-                .maxStackSize(maxStackSize)\n-                .isPersistingPrivateState(isPersistingPrivateState)\n-                .transactionHash(transaction.getHash())\n-                .privateMetadataUpdater(privateMetadataUpdater)\n-                .build();\n-      }\n+      final MessageFrame.Builder commonMessageFrameBuilder =\n+          MessageFrame.builder()\n+              .messageFrameStack(messageFrameStack)\n+              .maxStackSize(maxStackSize)\n+              .returnStack(new ReturnStack())\n+              .blockchain(blockchain)\n+              .worldState(worldUpdater.updater())\n+              .initialGas(gasAvailable)\n+              .originator(senderAddress)\n+              .gasPrice(transactionGasPrice)\n+              .sender(senderAddress)\n+              .value(transaction.getValue())\n+              .apparentValue(transaction.getValue())\n+              .blockHeader(blockHeader)\n+              .depth(0)\n+              .completer(__ -> {})\n+              .miningBeneficiary(miningBeneficiary)\n+              .blockHashLookup(blockHashLookup)\n+              .isPersistingPrivateState(isPersistingPrivateState)\n+              .transactionHash(transaction.getHash())\n+              .privateMetadataUpdater(privateMetadataUpdater);\n+\n+      final MessageFrame initialFrame =\n+          transaction\n+              .getTo()\n+              .map(\n+                  to -> {\n+                    final Optional<Account> maybeContract = Optional.ofNullable(worldState.get(to));\n+                    return commonMessageFrameBuilder\n+                        .type(MessageFrame.Type.MESSAGE_CALL)\n+                        .address(to)\n+                        .contract(to)\n+                        .contractAccountVersion(\n+                            maybeContract\n+                                .map(AccountState::getVersion)\n+                                .orElse(Account.DEFAULT_VERSION))\n+                        .inputData(transaction.getPayload())\n+                        .code(\n+                            new Code(maybeContract.map(AccountState::getCode).orElse(Bytes.EMPTY)));\n+                  })\n+              .orElseGet(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6132a395a6b59faf47ee17452bbdb8754d704528"}, "originalPosition": 123}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ead076cb0fb429b50548c5aa8a519f9b43a09a10", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/ead076cb0fb429b50548c5aa8a519f9b43a09a10", "committedDate": "2020-12-02T15:43:33Z", "message": "reunroll loop\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a6cade75e7186e0ee63cc3edecc894dc802321d", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/1a6cade75e7186e0ee63cc3edecc894dc802321d", "committedDate": "2020-12-02T15:50:38Z", "message": "switch back to if/else\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyOTg2MjQ3", "url": "https://github.com/hyperledger/besu/pull/1652#pullrequestreview-542986247", "createdAt": "2020-12-02T16:00:23Z", "commit": {"oid": "1a6cade75e7186e0ee63cc3edecc894dc802321d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2152, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}