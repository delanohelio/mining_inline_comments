{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTY1MDk3", "number": 1206, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTowODozNVrOEObtew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMToyMDozNlrOEOb81A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTY5NTMxOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateStateRootResolver.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMTowODozNVrOGxlaJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjo0ODowMFrOGxn_qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0NjMxMQ==", "bodyText": "Should this ever happen? If we have a hash on our PrivacyGroupHeadBlockMap, we should always find the state root for it, should we?\nMaybe this should throw an error.", "url": "https://github.com/hyperledger/besu/pull/1206#discussion_r454646311", "createdAt": "2020-07-14T21:08:35Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateStateRootResolver.java", "diffHunk": "@@ -33,6 +34,26 @@ public PrivateStateRootResolver(final PrivateStateStorage privateStateStorage) {\n     this.privateStateStorage = privateStateStorage;\n   }\n \n+  public Hash resolveLastStateRoot(\n+      final Bytes32 privacyGroupId, final PrivateMetadataUpdater privateMetadataUpdater) {\n+    final PrivateBlockMetadata privateBlockMetadata =\n+        privateMetadataUpdater.getPrivateBlockMetadata(privacyGroupId);\n+    if (privateBlockMetadata != null) {\n+      return privateBlockMetadata.getLatestStateRoot().get();\n+    } else {\n+      final Hash blockHashForLastBlockWithTx =\n+          privateMetadataUpdater.getPrivacyGroupHeadBlockMap().get(privacyGroupId);\n+      if (blockHashForLastBlockWithTx != null) {\n+        return privateStateStorage\n+            .getPrivateBlockMetadata(blockHashForLastBlockWithTx, privacyGroupId)\n+            .flatMap(PrivateBlockMetadata::getLatestStateRoot)\n+            .orElse(EMPTY_ROOT_HASH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f20be36f5fba178070cf0c8918fc249f624ac36"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4ODY4Mw==", "bodyText": "You are right. Copied that from the original method without questioning it. Will fix both!", "url": "https://github.com/hyperledger/besu/pull/1206#discussion_r454688683", "createdAt": "2020-07-14T22:48:00Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivateStateRootResolver.java", "diffHunk": "@@ -33,6 +34,26 @@ public PrivateStateRootResolver(final PrivateStateStorage privateStateStorage) {\n     this.privateStateStorage = privateStateStorage;\n   }\n \n+  public Hash resolveLastStateRoot(\n+      final Bytes32 privacyGroupId, final PrivateMetadataUpdater privateMetadataUpdater) {\n+    final PrivateBlockMetadata privateBlockMetadata =\n+        privateMetadataUpdater.getPrivateBlockMetadata(privacyGroupId);\n+    if (privateBlockMetadata != null) {\n+      return privateBlockMetadata.getLatestStateRoot().get();\n+    } else {\n+      final Hash blockHashForLastBlockWithTx =\n+          privateMetadataUpdater.getPrivacyGroupHeadBlockMap().get(privacyGroupId);\n+      if (blockHashForLastBlockWithTx != null) {\n+        return privateStateStorage\n+            .getPrivateBlockMetadata(blockHashForLastBlockWithTx, privacyGroupId)\n+            .flatMap(PrivateBlockMetadata::getLatestStateRoot)\n+            .orElse(EMPTY_ROOT_HASH);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0NjMxMQ=="}, "originalCommit": {"oid": "0f20be36f5fba178070cf0c8918fc249f624ac36"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTcyNTI1OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/PrivacyBlockProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMToxNzozMlrOGxlsFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMjozNjozMFrOGxnvtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1MDkwMA==", "bodyText": "I don't think I understand why we need this if statement. Is this because for each new block we need a new PrivateMetadataUpdater, and not reuse a previous one?", "url": "https://github.com/hyperledger/besu/pull/1206#discussion_r454650900", "createdAt": "2020-07-14T21:17:32Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/PrivacyBlockProcessor.java", "diffHunk": "@@ -79,20 +80,23 @@ public Result processBlock(\n       final MutableWorldState worldState,\n       final BlockHeader blockHeader,\n       final List<Transaction> transactions,\n-      final List<BlockHeader> ommers) {\n+      final List<BlockHeader> ommers,\n+      final PrivateMetadataUpdater privateMetadataUpdater) {\n+\n+    if (privateMetadataUpdater != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f20be36f5fba178070cf0c8918fc249f624ac36"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4NDU5OA==", "bodyText": "I wasn't hundred percent sure either. But for every block that we are processing we do need a new PrivateMetadataUpdater. We are instantiating one in this block processor that is wrapping the public block processor.\nIf there was an updater passed in I thought that something must have gone wrong ...", "url": "https://github.com/hyperledger/besu/pull/1206#discussion_r454684598", "createdAt": "2020-07-14T22:36:30Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/PrivacyBlockProcessor.java", "diffHunk": "@@ -79,20 +80,23 @@ public Result processBlock(\n       final MutableWorldState worldState,\n       final BlockHeader blockHeader,\n       final List<Transaction> transactions,\n-      final List<BlockHeader> ommers) {\n+      final List<BlockHeader> ommers,\n+      final PrivateMetadataUpdater privateMetadataUpdater) {\n+\n+    if (privateMetadataUpdater != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1MDkwMA=="}, "originalCommit": {"oid": "0f20be36f5fba178070cf0c8918fc249f624ac36"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTczNDYwOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/PrivacyBlockProcessor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMToyMDozNlrOGxlx5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQwMzoxMjo1NlrOHJouoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1MjM5MQ==", "bodyText": "At this point, has Besu already commit the changes in public world state?", "url": "https://github.com/hyperledger/besu/pull/1206#discussion_r454652391", "createdAt": "2020-07-14T21:20:36Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/PrivacyBlockProcessor.java", "diffHunk": "@@ -79,20 +80,23 @@ public Result processBlock(\n       final MutableWorldState worldState,\n       final BlockHeader blockHeader,\n       final List<Transaction> transactions,\n-      final List<BlockHeader> ommers) {\n+      final List<BlockHeader> ommers,\n+      final PrivateMetadataUpdater privateMetadataUpdater) {\n+\n+    if (privateMetadataUpdater != null) {\n+      throw new IllegalArgumentException(\"PrivateMetadataUpdater passed in is not null.\");\n+    }\n \n     maybeRehydrate(blockchain, blockHeader, transactions);\n \n-    final PrivacyGroupHeadBlockMap privacyGroupHeadBlockMap =\n-        new PrivacyGroupHeadBlockMap(\n-            privateStateStorage\n-                .getPrivacyGroupHeadBlockMap(blockHeader.getParentHash())\n-                .orElse(PrivacyGroupHeadBlockMap.EMPTY));\n-    privateStateStorage\n-        .updater()\n-        .putPrivacyGroupHeadBlockMap(blockHeader.getHash(), privacyGroupHeadBlockMap)\n-        .commit();\n-    return blockProcessor.processBlock(blockchain, worldState, blockHeader, transactions, ommers);\n+    final PrivateMetadataUpdater metadataUpdater =\n+        new PrivateMetadataUpdater(blockHeader, privateStateStorage);\n+\n+    final Result result =\n+        blockProcessor.processBlock(\n+            blockchain, worldState, blockHeader, transactions, ommers, metadataUpdater);\n+    metadataUpdater.commit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f20be36f5fba178070cf0c8918fc249f624ac36"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY4MjI2Mg==", "bodyText": "Yes, the public changes have been commited at the end of the wrapped block processor.", "url": "https://github.com/hyperledger/besu/pull/1206#discussion_r454682262", "createdAt": "2020-07-14T22:30:03Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/PrivacyBlockProcessor.java", "diffHunk": "@@ -79,20 +80,23 @@ public Result processBlock(\n       final MutableWorldState worldState,\n       final BlockHeader blockHeader,\n       final List<Transaction> transactions,\n-      final List<BlockHeader> ommers) {\n+      final List<BlockHeader> ommers,\n+      final PrivateMetadataUpdater privateMetadataUpdater) {\n+\n+    if (privateMetadataUpdater != null) {\n+      throw new IllegalArgumentException(\"PrivateMetadataUpdater passed in is not null.\");\n+    }\n \n     maybeRehydrate(blockchain, blockHeader, transactions);\n \n-    final PrivacyGroupHeadBlockMap privacyGroupHeadBlockMap =\n-        new PrivacyGroupHeadBlockMap(\n-            privateStateStorage\n-                .getPrivacyGroupHeadBlockMap(blockHeader.getParentHash())\n-                .orElse(PrivacyGroupHeadBlockMap.EMPTY));\n-    privateStateStorage\n-        .updater()\n-        .putPrivacyGroupHeadBlockMap(blockHeader.getHash(), privacyGroupHeadBlockMap)\n-        .commit();\n-    return blockProcessor.processBlock(blockchain, worldState, blockHeader, transactions, ommers);\n+    final PrivateMetadataUpdater metadataUpdater =\n+        new PrivateMetadataUpdater(blockHeader, privateStateStorage);\n+\n+    final Result result =\n+        blockProcessor.processBlock(\n+            blockchain, worldState, blockHeader, transactions, ommers, metadataUpdater);\n+    metadataUpdater.commit();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1MjM5MQ=="}, "originalCommit": {"oid": "0f20be36f5fba178070cf0c8918fc249f624ac36"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTg2NjUyOQ==", "bodyText": "... but the block has not been added to the chain yet. That is happening later.", "url": "https://github.com/hyperledger/besu/pull/1206#discussion_r479866529", "createdAt": "2020-08-31T03:12:56Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/PrivacyBlockProcessor.java", "diffHunk": "@@ -79,20 +80,23 @@ public Result processBlock(\n       final MutableWorldState worldState,\n       final BlockHeader blockHeader,\n       final List<Transaction> transactions,\n-      final List<BlockHeader> ommers) {\n+      final List<BlockHeader> ommers,\n+      final PrivateMetadataUpdater privateMetadataUpdater) {\n+\n+    if (privateMetadataUpdater != null) {\n+      throw new IllegalArgumentException(\"PrivateMetadataUpdater passed in is not null.\");\n+    }\n \n     maybeRehydrate(blockchain, blockHeader, transactions);\n \n-    final PrivacyGroupHeadBlockMap privacyGroupHeadBlockMap =\n-        new PrivacyGroupHeadBlockMap(\n-            privateStateStorage\n-                .getPrivacyGroupHeadBlockMap(blockHeader.getParentHash())\n-                .orElse(PrivacyGroupHeadBlockMap.EMPTY));\n-    privateStateStorage\n-        .updater()\n-        .putPrivacyGroupHeadBlockMap(blockHeader.getHash(), privacyGroupHeadBlockMap)\n-        .commit();\n-    return blockProcessor.processBlock(blockchain, worldState, blockHeader, transactions, ommers);\n+    final PrivateMetadataUpdater metadataUpdater =\n+        new PrivateMetadataUpdater(blockHeader, privateStateStorage);\n+\n+    final Result result =\n+        blockProcessor.processBlock(\n+            blockchain, worldState, blockHeader, transactions, ommers, metadataUpdater);\n+    metadataUpdater.commit();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY1MjM5MQ=="}, "originalCommit": {"oid": "0f20be36f5fba178070cf0c8918fc249f624ac36"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 856, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}