{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDcyNjMz", "number": 666, "title": "Update Handshakers to use NodeKey", "bodyText": "PR description\nUpdate the Handhshaking classes to use an injected NodeKey object for ECIES encryption.\nThis has necessitated an update of NodeKey to support the creation of Key and ECIES agreement creation.\nFixed Issue(s)\nN/A", "createdAt": "2020-04-07T06:47:40Z", "url": "https://github.com/hyperledger/besu/pull/666", "merged": true, "mergeCommit": {"oid": "d757af85b6533238c22ed6d82c3a077ecdbac464"}, "closed": true, "closedAt": "2020-04-08T05:15:10Z", "author": {"login": "rain-on"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVNjrvAH2gAyNDAwMDcyNjMzOjE2ZDFlNzEyYjc0NmQzNTg0MDgzNzI4ODUwODk4NDg1YWM2ZDkzMWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVfx2gAFqTM4OTYzNzI5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "16d1e712b746d3584083728850898485ac6d931f", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/16d1e712b746d3584083728850898485ac6d931f", "committedDate": "2020-04-07T06:46:14Z", "message": "Update Handshakers to use NodeKey\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29", "author": {"user": {"login": "rain-on", "name": "Trent Mohay"}}, "url": "https://github.com/hyperledger/besu/commit/d3a8736cc85aec01165b6a6cac54caec7abb8d29", "committedDate": "2020-04-07T07:20:47Z", "message": "Merge branch 'master' into handshaker"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4OTc1Njg2", "url": "https://github.com/hyperledger/besu/pull/666#pullrequestreview-388975686", "createdAt": "2020-04-07T10:13:19Z", "commit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxMzoxOVrOGB8oyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxMzoxOVrOGB8oyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5NTI0Mg==", "bodyText": "Does it make sense to move the second parameter SECP256K1.PublicKey.create(peer.getId()) as potentially a static method in NodeKey as well?", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r404695242", "createdAt": "2020-04-07T10:13:19Z", "author": {"login": "usmansaleem"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/connections/netty/HandshakeHandlerOutbound.java", "diffHunk": "@@ -53,7 +54,8 @@ public HandshakeHandlerOutbound(\n         connectionFuture,\n         connectionEventDispatcher,\n         metricsSystem);\n-    handshaker.prepareInitiator(kp, SECP256K1.PublicKey.create(peer.getId()));\n+    handshaker.prepareInitiator(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4OTc3MzYz", "url": "https://github.com/hyperledger/besu/pull/666#pullrequestreview-388977363", "createdAt": "2020-04-07T10:15:40Z", "commit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxNTo0MVrOGB8uNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxNTo0MVrOGB8uNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5NjYyOQ==", "bodyText": "what about ephKeyPair?", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r404696629", "createdAt": "2020-04-07T10:15:41Z", "author": {"login": "usmansaleem"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/handshake/ecies/ECIESHandshaker.java", "diffHunk": "@@ -101,14 +103,14 @@ public void prepareInitiator(final SECP256K1.KeyPair ourKeypair, final PublicKey\n   }\n \n   @Override\n-  public void prepareResponder(final SECP256K1.KeyPair ourKeypair) {\n+  public void prepareResponder(final NodeKey nodeKey) {\n     checkState(\n         status.compareAndSet(\n             Handshaker.HandshakeStatus.UNINITIALIZED, Handshaker.HandshakeStatus.IN_PROGRESS),\n         \"handshake was already prepared\");\n \n     this.initiator = false;\n-    this.identityKeyPair = ourKeypair;\n+    this.nodeKey = nodeKey;\n     this.ephKeyPair = SECP256K1.KeyPair.generate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4OTc4NDY3", "url": "https://github.com/hyperledger/besu/pull/666#pullrequestreview-388978467", "createdAt": "2020-04-07T10:17:13Z", "commit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxNzoxNFrOGB8xwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoxNzoxNFrOGB8xwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY5NzUzOA==", "bodyText": "just wondering, should we name argument as 'ourNodeKey' ?", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r404697538", "createdAt": "2020-04-07T10:17:14Z", "author": {"login": "usmansaleem"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/handshake/ecies/EncryptedMessage.java", "diffHunk": "@@ -57,19 +58,19 @@ public static Bytes decryptMsg(final Bytes msgBytes, final SECP256K1.PrivateKey\n \n     // Perform the decryption.\n     final ECIESEncryptionEngine decryptor =\n-        ECIESEncryptionEngine.forDecryption(ourKey, ephPubKey, iv);\n+        ECIESEncryptionEngine.forDecryption(nodeKey, ephPubKey, iv);\n     return decryptor.decrypt(encrypted);\n   }\n \n   /**\n    * Decrypts the ciphertext using our private key.\n    *\n    * @param msgBytes The ciphertext.\n-   * @param ourKey Our private key.\n+   * @param nodeKey Abstraction of this nodes private key & associated crypto operations\n    * @return The plaintext.\n    * @throws InvalidCipherTextException Thrown if decryption failed.\n    */\n-  public static Bytes decryptMsgEIP8(final Bytes msgBytes, final SECP256K1.PrivateKey ourKey)\n+  public static Bytes decryptMsgEIP8(final Bytes msgBytes, final NodeKey nodeKey)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4OTc5NjQ0", "url": "https://github.com/hyperledger/besu/pull/666#pullrequestreview-388979644", "createdAt": "2020-04-07T10:18:56Z", "commit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTYzMzcw", "url": "https://github.com/hyperledger/besu/pull/666#pullrequestreview-389563370", "createdAt": "2020-04-07T23:42:33Z", "commit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0MjozM1rOGCaBaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDo1ODozM1rOGCbXXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NjY4MA==", "bodyText": "final isn't needed on the interface fields", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r405176680", "createdAt": "2020-04-07T23:42:33Z", "author": {"login": "jframe"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/handshake/Handshaker.java", "diffHunk": "@@ -76,11 +77,11 @@\n    * <p>This method must throw an {@link IllegalStateException} exception if the handshake had\n    * already been prepared before, no matter if under the initiator or the responder role.\n    *\n-   * @param ourKeypair The keypair for our node identity.\n+   * @param nodeKey An object which represents our identity\n    * @param theirPubKey The public key of the node we're handshaking with.\n    * @throws IllegalStateException Indicates that preparation had already occured.\n    */\n-  void prepareInitiator(SECP256K1.KeyPair ourKeypair, SECP256K1.PublicKey theirPubKey);\n+  void prepareInitiator(final NodeKey nodeKey, SECP256K1.PublicKey theirPubKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3Njk5Ng==", "bodyText": "final isn't needed on the interface fields", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r405176996", "createdAt": "2020-04-07T23:43:27Z", "author": {"login": "jframe"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/handshake/Handshaker.java", "diffHunk": "@@ -89,10 +90,10 @@\n    * <p>This method must throw an {@link IllegalStateException} exception if the handshake had\n    * already been prepared before, whether with the initiator or the responder role.\n    *\n-   * @param ourKeypair The keypair for our node identity.\n+   * @param nodeKey An object which represents our identity\n    * @throws IllegalStateException Indicates that preparation had already occured.\n    */\n-  void prepareResponder(SECP256K1.KeyPair ourKeypair);\n+  void prepareResponder(final NodeKey nodeKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NzQ5Mw==", "bodyText": "Can you also update the javadoc since this is no longer a keypair", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r405177493", "createdAt": "2020-04-07T23:45:02Z", "author": {"login": "jframe"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/handshake/ecies/InitiatorHandshakeMessageV1.java", "diffHunk": "@@ -95,11 +95,10 @@ public static InitiatorHandshakeMessageV1 create(\n    * Decodes this message.\n    *\n    * @param bytes The raw bytes.\n-   * @param keyPair Our keypair to calculat ECDH key agreements.\n+   * @param nodeKey Our keypair to calculat ECDH key agreements.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3ODMyMw==", "bodyText": "Do we want to be more explicit here and call out that is the ECDH key agreement? I thinking we should.", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r405178323", "createdAt": "2020-04-07T23:47:42Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -17,11 +17,16 @@\n import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n import org.hyperledger.besu.crypto.SECP256K1.Signature;\n \n+import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.Bytes32;\n \n public interface NodeKey {\n \n   Signature sign(Bytes32 dataHash);\n \n   PublicKey getPublicKey();\n+\n+  Bytes32 calculateKeyAgreement(final PublicKey partyKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3OTAyOA==", "bodyText": "Should this just be publicKey instead of partyKey? I don't know enough ECDH key agreements to say it should be, but elsewhere it seems to be just referred to as publicKey", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r405179028", "createdAt": "2020-04-07T23:49:51Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -17,11 +17,16 @@\n import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n import org.hyperledger.besu.crypto.SECP256K1.Signature;\n \n+import org.apache.tuweni.bytes.Bytes;\n import org.apache.tuweni.bytes.Bytes32;\n \n public interface NodeKey {\n \n   Signature sign(Bytes32 dataHash);\n \n   PublicKey getPublicKey();\n+\n+  Bytes32 calculateKeyAgreement(final PublicKey partyKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3OTMzMg==", "bodyText": "Thinking this should be calculateECIESKeyAgreement", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r405179332", "createdAt": "2020-04-07T23:50:52Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/BouncyCastleNodeKey.java", "diffHunk": "@@ -41,4 +51,23 @@ public Signature sign(final Bytes32 dataHash) {\n   public PublicKey getPublicKey() {\n     return nodeKeys.getPublicKey();\n   }\n+\n+  @Override\n+  public Bytes32 calculateKeyAgreement(final PublicKey partyKey) {\n+    return SECP256K1.calculateKeyAgreement(nodeKeys.getPrivateKey(), partyKey);\n+  }\n+\n+  @Override\n+  public Bytes calculateECIESAgreement(final SECP256K1.PublicKey ephPubKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MDE5OQ==", "bodyText": "This can be lower z", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r405180199", "createdAt": "2020-04-07T23:53:52Z", "author": {"login": "jframe"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/rlpx/handshake/ecies/ECIESEncryptionEngine.java", "diffHunk": "@@ -82,41 +75,30 @@\n   private final byte[] iv;\n \n   private ECIESEncryptionEngine(\n-      final CipherParameters pubParam,\n-      final CipherParameters privParam,\n-      final SECP256K1.PublicKey ephPubKey,\n-      final byte[] iv) {\n+      final Bytes Z, final SECP256K1.PublicKey ephPubKey, final byte[] iv) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5ODY4Ng==", "bodyText": "Would be nicer if both of the key agreement functions were in SECP256k1 class", "url": "https://github.com/hyperledger/besu/pull/666#discussion_r405198686", "createdAt": "2020-04-08T00:58:33Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/BouncyCastleNodeKey.java", "diffHunk": "@@ -41,4 +51,23 @@ public Signature sign(final Bytes32 dataHash) {\n   public PublicKey getPublicKey() {\n     return nodeKeys.getPublicKey();\n   }\n+\n+  @Override\n+  public Bytes32 calculateKeyAgreement(final PublicKey partyKey) {\n+    return SECP256K1.calculateKeyAgreement(nodeKeys.getPrivateKey(), partyKey);\n+  }\n+\n+  @Override\n+  public Bytes calculateECIESAgreement(final SECP256K1.PublicKey ephPubKey) {\n+    final ECDomainParameters dp = SECP256K1.CURVE;\n+\n+    final CipherParameters pubParam = new ECPublicKeyParameters(ephPubKey.asEcPoint(), dp);\n+    final CipherParameters privParam =\n+        new ECPrivateKeyParameters(nodeKeys.getPrivateKey().getD(), dp);\n+\n+    final BasicAgreement agree = new ECDHBasicAgreement();\n+    agree.init(privParam);\n+    final BigInteger z = agree.calculateAgreement(pubParam);\n+    return Bytes.wrap(BigIntegers.asUnsignedByteArray(agree.getFieldSize(), z));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3a8736cc85aec01165b6a6cac54caec7abb8d29"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6c4dd92f3deef924b295d9ce4a83af90a9306ab", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/e6c4dd92f3deef924b295d9ce4a83af90a9306ab", "committedDate": "2020-04-08T01:55:26Z", "message": "Post Review\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e44fecf96d80810f13671228dd54d6b3a2bd719", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/6e44fecf96d80810f13671228dd54d6b3a2bd719", "committedDate": "2020-04-08T03:49:52Z", "message": "Repair test failure\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b94d3281d6aa71e2a5657b775964d6380dbe7134", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/b94d3281d6aa71e2a5657b775964d6380dbe7134", "committedDate": "2020-04-08T03:50:40Z", "message": "Merge remote-tracking branch 'upstream/master' into handshaker\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b62646a0b2121966ae0057c06ef595a8fdd7d3b6", "author": {"user": {"login": "rain-on", "name": "Trent Mohay"}}, "url": "https://github.com/hyperledger/besu/commit/b62646a0b2121966ae0057c06ef595a8fdd7d3b6", "committedDate": "2020-04-08T01:59:55Z", "message": "Merge branch 'master' into handshaker"}, "afterCommit": {"oid": "b94d3281d6aa71e2a5657b775964d6380dbe7134", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/b94d3281d6aa71e2a5657b775964d6380dbe7134", "committedDate": "2020-04-08T03:50:40Z", "message": "Merge remote-tracking branch 'upstream/master' into handshaker\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620f99ff688e697783b9e5e602071112404ddd83", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/620f99ff688e697783b9e5e602071112404ddd83", "committedDate": "2020-04-08T03:58:03Z", "message": "fixed spotless\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjM3Mjkx", "url": "https://github.com/hyperledger/besu/pull/666#pullrequestreview-389637291", "createdAt": "2020-04-08T04:00:00Z", "commit": {"oid": "620f99ff688e697783b9e5e602071112404ddd83"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1683, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}