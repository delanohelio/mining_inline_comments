{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODMwNTI0", "number": 1563, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo0NDoyNFrOE5zU9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo0ODoyOFrOE5zYig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDQ1MjM4OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/BlockchainQueries.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo0NDoyNFrOH0f6fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzo0NzoxM1rOH0jT7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxMDg3Nw==", "bodyText": "I think this case should be an orElseThrow? It doesn't represent a normal case.", "url": "https://github.com/hyperledger/besu/pull/1563#discussion_r524810877", "createdAt": "2020-11-17T00:44:24Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/BlockchainQueries.java", "diffHunk": "@@ -715,6 +733,34 @@ private TransactionWithMetadata transactionByHeaderAndIndex(\n     return header.map(BlockHeader::getStateRoot).flatMap(worldStateArchive::getMutable);\n   }\n \n+  public Optional<Long> gasPrice() {\n+    final long blockHeight = headBlockNumber();\n+    final long[] gasCollection =\n+        LongStream.range(Math.max(0, blockHeight - apiConfig.getGasPriceBlocks()), blockHeight)\n+            .mapToObj(\n+                l ->\n+                    blockchain\n+                        .getBlockByNumber(l)\n+                        .map(Block::getBody)\n+                        .map(BlockBody::getTransactions)\n+                        .orElse(Collections.emptyList()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c61ab5ccb2bdc6b39efb20887ee85c3c1c8346"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2NjU0Mg==", "bodyText": "It felt like an \"it could never happen situation,\" if we can't get blocks by number behind the head block.  Throwing an error does seem more appropriate instead of silently healing.\nI supposed if we are querying the gas right when we decide to switch to a shorter but heavier chain it might catch those blocks.  Simply send another request in that case.", "url": "https://github.com/hyperledger/besu/pull/1563#discussion_r524866542", "createdAt": "2020-11-17T03:47:13Z", "author": {"login": "shemnon"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/query/BlockchainQueries.java", "diffHunk": "@@ -715,6 +733,34 @@ private TransactionWithMetadata transactionByHeaderAndIndex(\n     return header.map(BlockHeader::getStateRoot).flatMap(worldStateArchive::getMutable);\n   }\n \n+  public Optional<Long> gasPrice() {\n+    final long blockHeight = headBlockNumber();\n+    final long[] gasCollection =\n+        LongStream.range(Math.max(0, blockHeight - apiConfig.getGasPriceBlocks()), blockHeight)\n+            .mapToObj(\n+                l ->\n+                    blockchain\n+                        .getBlockByNumber(l)\n+                        .map(Block::getBody)\n+                        .map(BlockBody::getTransactions)\n+                        .orElse(Collections.emptyList()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxMDg3Nw=="}, "originalCommit": {"oid": "a5c61ab5ccb2bdc6b39efb20887ee85c3c1c8346"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDQ2MTU0OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/ApiConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo0ODoyOFrOH0f_vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMzo0NzoyMlrOH0jUIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxMjIyMA==", "bodyText": "How come this isn't 500_000_000_000L?", "url": "https://github.com/hyperledger/besu/pull/1563#discussion_r524812220", "createdAt": "2020-11-17T00:48:28Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/ApiConfiguration.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+\n+package org.hyperledger.besu.ethereum.api;\n+\n+import org.immutables.value.Value;\n+\n+@Value.Immutable\n+@Value.Style(allParameters = true)\n+public abstract class ApiConfiguration {\n+\n+  @Value.Default\n+  public long getGasPriceBlocks() {\n+    return 100;\n+  }\n+\n+  @Value.Default\n+  public double getGasPricePercentile() {\n+    return 50.0d;\n+  }\n+\n+  @Value.Default\n+  public long getGasPriceMin() {\n+    return 1_000_000_000L; // 1 GWei\n+  }\n+\n+  @Value.Default\n+  public long getGasPriceMax() {\n+    return 1_000_000_000_000_000_000L; // 1 Eth\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c61ab5ccb2bdc6b39efb20887ee85c3c1c8346"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg2NjU5Mw==", "bodyText": "I wrote that before I decided to adopt the geth limits.", "url": "https://github.com/hyperledger/besu/pull/1563#discussion_r524866593", "createdAt": "2020-11-17T03:47:22Z", "author": {"login": "shemnon"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/ApiConfiguration.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+\n+package org.hyperledger.besu.ethereum.api;\n+\n+import org.immutables.value.Value;\n+\n+@Value.Immutable\n+@Value.Style(allParameters = true)\n+public abstract class ApiConfiguration {\n+\n+  @Value.Default\n+  public long getGasPriceBlocks() {\n+    return 100;\n+  }\n+\n+  @Value.Default\n+  public double getGasPricePercentile() {\n+    return 50.0d;\n+  }\n+\n+  @Value.Default\n+  public long getGasPriceMin() {\n+    return 1_000_000_000L; // 1 GWei\n+  }\n+\n+  @Value.Default\n+  public long getGasPriceMax() {\n+    return 1_000_000_000_000_000_000L; // 1 Eth\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxMjIyMA=="}, "originalCommit": {"oid": "a5c61ab5ccb2bdc6b39efb20887ee85c3c1c8346"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1347, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}