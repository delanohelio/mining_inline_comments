{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MTAwMzU2", "number": 1607, "title": "priv_debugGetStateRoot bug refactorings.", "bodyText": "Signed-off-by: Mark Terry mark.terry@consensys.net\n\n\nPR description\nFix for bug in priv_debugGetStateRoot method.\nFixed Issue(s)\n\n\nFixes #1596\nChangelog\n\n I thought about the changelog and included a changelog update if required.", "createdAt": "2020-11-25T04:36:48Z", "url": "https://github.com/hyperledger/besu/pull/1607", "merged": true, "mergeCommit": {"oid": "96a96ba24f24a770034013d748376d5e4df20534"}, "closed": true, "closedAt": "2020-12-08T10:00:34Z", "author": {"login": "mark-terry"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdf3VQYgFqTUzODE1NDM3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkBuOLAH2gAyNTI3MTAwMzU2OjZjZjgzM2QyMzQyODRmNmNlMzRhOGNkNmI3MDEwOTRlYzgwMDMxMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MTU0Mzcx", "url": "https://github.com/hyperledger/besu/pull/1607#pullrequestreview-538154371", "createdAt": "2020-11-25T04:48:09Z", "commit": {"oid": "8ec7c977ed2f1a76d3fd40c5ee9d4c168ed78b77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDo0ODowOVrOH5jGJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNDo0ODowOVrOH5jGJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEwNTg5Mg==", "bodyText": "A better name? \"findOnChainPrivacyGroupAndAddNewMembers\"?", "url": "https://github.com/hyperledger/besu/pull/1607#discussion_r530105892", "createdAt": "2020-11-25T04:48:09Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/DefaultPrivacyController.java", "diffHunk": "@@ -312,7 +324,7 @@ public long determineBesuNonce(\n   }\n \n   @Override\n-  public Optional<PrivacyGroup> retrieveOnChainPrivacyGroupWithToBeAddedMembers(\n+  public Optional<PrivacyGroup> findOnChainPrivacyGroupWithToBeAddedMembers(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ec7c977ed2f1a76d3fd40c5ee9d4c168ed78b77"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7331e9e28b298ddd0d4dc53000a3d1784e10c17", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/a7331e9e28b298ddd0d4dc53000a3d1784e10c17", "committedDate": "2020-12-01T04:25:38Z", "message": "priv_debugGetStateRoot bug refactorings.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a6f15f01d693f129bddf86f1eb371a4d180466a", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/6a6f15f01d693f129bddf86f1eb371a4d180466a", "committedDate": "2020-12-01T04:25:38Z", "message": "Offchain acceptance test.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cdfa78bc6682ca06977e85abaee79d4645d6900", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/8cdfa78bc6682ca06977e85abaee79d4645d6900", "committedDate": "2020-12-01T04:25:38Z", "message": "Fix.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d92a1dcef953aab5524724f823e61bc32c78f02a", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/d92a1dcef953aab5524724f823e61bc32c78f02a", "committedDate": "2020-12-01T04:46:49Z", "message": "Fix2.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3965bf065be4dc7907ef2e93effae719164cf195", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/3965bf065be4dc7907ef2e93effae719164cf195", "committedDate": "2020-12-01T04:18:43Z", "message": "Fix.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}, "afterCommit": {"oid": "d92a1dcef953aab5524724f823e61bc32c78f02a", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/d92a1dcef953aab5524724f823e61bc32c78f02a", "committedDate": "2020-12-01T04:46:49Z", "message": "Fix2.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd4469bfee2200549edb736a6a4d4194362fa1f1", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/dd4469bfee2200549edb736a6a4d4194362fa1f1", "committedDate": "2020-12-02T01:40:18Z", "message": "Build fix.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c2253c2ca890fb9a4f789afd147a0926705d75f", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/2c2253c2ca890fb9a4f789afd147a0926705d75f", "committedDate": "2020-12-02T02:14:49Z", "message": "Test fix.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58066a2ac3b3767e7454e0c4d3a7ccfad6de46b0", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/58066a2ac3b3767e7454e0c4d3a7ccfad6de46b0", "committedDate": "2020-12-02T09:54:42Z", "message": "Merge branch 'master' into 1596"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1d9e9c1007c373b7c6956430a211020f2b066ae", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/d1d9e9c1007c373b7c6956430a211020f2b066ae", "committedDate": "2020-12-02T12:39:03Z", "message": "Onchain privacy group stateroot AT.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8adef126a6bdfbd1032ee991c353b5f7de094c5a", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/8adef126a6bdfbd1032ee991c353b5f7de094c5a", "committedDate": "2020-12-02T12:59:15Z", "message": "Test fix.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69b6e37728f7d34cfa27915999236cf1650e061b", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/69b6e37728f7d34cfa27915999236cf1650e061b", "committedDate": "2020-12-02T13:42:21Z", "message": "Added blockparam test.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff09f3c24b93c110f8055adc22e6175217889a11", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/ff09f3c24b93c110f8055adc22e6175217889a11", "committedDate": "2020-12-02T13:45:31Z", "message": "PR fix - updated method name.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "153009e70450a95d4cb354b2ea10f7b8b93d6c0a", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/153009e70450a95d4cb354b2ea10f7b8b93d6c0a", "committedDate": "2020-12-02T23:05:55Z", "message": "AT fix.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "975904631a9eefa41cf5b3ff693d369e61a27060", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/975904631a9eefa41cf5b3ff693d369e61a27060", "committedDate": "2020-12-02T23:08:02Z", "message": "Merge branch 'master' into 1596"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "028a8ac116d17a75692bd6e52101503831fce880", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/028a8ac116d17a75692bd6e52101503831fce880", "committedDate": "2020-12-03T02:59:33Z", "message": "Merge branch 'master' into 1596"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNDYwMzAx", "url": "https://github.com/hyperledger/besu/pull/1607#pullrequestreview-543460301", "createdAt": "2020-12-03T04:52:27Z", "commit": {"oid": "028a8ac116d17a75692bd6e52101503831fce880"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNDo1MjoyOFrOH95fMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNTo0Mzo0MlrOH96vFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY2NzA1Nw==", "bodyText": "This has the same effect as using a const hash like Hash.ZERO", "url": "https://github.com/hyperledger/besu/pull/1607#discussion_r534667057", "createdAt": "2020-12-03T04:52:28Z", "author": {"login": "pinges"}, "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/PrivDebugGetStateRootOffchainGroupAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.privacy;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.PrivacyAcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.PrivacyNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.account.PrivacyAccountResolver;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.privacy.PrivacyRequestFactory;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class PrivDebugGetStateRootOffchainGroupAcceptanceTest extends PrivacyAcceptanceTestBase {\n+\n+  private PrivacyNode aliceNode;\n+  private PrivacyNode bobNode;\n+\n+  @Before\n+  public void setUp() throws IOException, URISyntaxException {\n+    aliceNode =\n+        privacyBesu.createPrivateTransactionEnabledMinerNode(\n+            \"alice-node\", PrivacyAccountResolver.ALICE);\n+    bobNode =\n+        privacyBesu.createPrivateTransactionEnabledMinerNode(\n+            \"bob-node\", PrivacyAccountResolver.BOB);\n+    privacyCluster.start(aliceNode, bobNode);\n+  }\n+\n+  @Test\n+  public void nodesInGroupShouldHaveSameStateRoot() {\n+    final String privacyGroupId =\n+        aliceNode.execute(\n+            privacyTransactions.createPrivacyGroup(\n+                \"testGroup\", \"A group for everyone\", aliceNode, bobNode));\n+\n+    final Hash aliceStateRootId =\n+        aliceNode\n+            .execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"))\n+            .getResult();\n+\n+    final Hash bobStateRootId =\n+        bobNode\n+            .execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"))\n+            .getResult();\n+\n+    assertThat(aliceStateRootId).isEqualTo(bobStateRootId);\n+  }\n+\n+  @Test\n+  public void nodeNotInGroupShouldReturnError() {\n+    final String privacyGroupId =\n+        aliceNode.execute(\n+            privacyTransactions.createPrivacyGroup(\"testGroup\", \"A group for Alice\", aliceNode));\n+\n+    final PrivacyRequestFactory.DebugGetStateRoot aliceResult =\n+        aliceNode.execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"));\n+\n+    assertThat(aliceResult.hasError()).isFalse();\n+    assertThat(aliceResult.getResult()).isNotNull();\n+    assertThat(aliceResult.getResult()).isInstanceOf(Hash.class);\n+\n+    final PrivacyRequestFactory.DebugGetStateRoot bobResult =\n+        bobNode.execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"));\n+\n+    assertThat(bobResult.getResult()).isNull();\n+    assertThat(bobResult.hasError()).isTrue();\n+    assertThat(bobResult.getError()).isNotNull();\n+    assertThat(bobResult.getError().getMessage()).contains(\"Error finding privacy group\");\n+  }\n+\n+  @Test\n+  public void unknownGroupShouldReturnError() {\n+    final PrivacyRequestFactory.DebugGetStateRoot aliceResult =\n+        aliceNode.execute(\n+            privacyTransactions.debugGetStateRoot(\n+                Hash.wrap(Bytes32.random()).toBase64String(), \"latest\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "028a8ac116d17a75692bd6e52101503831fce880"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY2ODgwMw==", "bodyText": "This is really testing that you get an error for a privacy group that does not exist (on the node where you are calling the method) You could just use a const/random privacyGroupId ...\nI think that is the same with the off chain AT ...\nThinking about it, this is really the same test as the next one (unknownGroup...)", "url": "https://github.com/hyperledger/besu/pull/1607#discussion_r534668803", "createdAt": "2020-12-03T04:57:58Z", "author": {"login": "pinges"}, "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/PrivDebugGetStateRootOnchainGroupAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.privacy;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.PrivacyNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.account.PrivacyAccountResolver;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.privacy.PrivacyRequestFactory;\n+import org.hyperledger.besu.tests.web3j.privacy.OnChainPrivacyAcceptanceTestBase;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class PrivDebugGetStateRootOnchainGroupAcceptanceTest\n+    extends OnChainPrivacyAcceptanceTestBase {\n+\n+  private PrivacyNode aliceNode;\n+  private PrivacyNode bobNode;\n+\n+  @Before\n+  public void setUp() throws IOException, URISyntaxException {\n+    aliceNode =\n+        privacyBesu.createOnChainPrivacyGroupEnabledMinerNode(\n+            \"alice-node\", PrivacyAccountResolver.ALICE, Address.PRIVACY, false);\n+    bobNode =\n+        privacyBesu.createOnChainPrivacyGroupEnabledMinerNode(\n+            \"bob-node\", PrivacyAccountResolver.BOB, Address.PRIVACY, false);\n+    privacyCluster.start(aliceNode, bobNode);\n+  }\n+\n+  @Test\n+  public void nodesInGroupShouldHaveSameStateRoot() {\n+    final String privacyGroupId = createOnChainPrivacyGroup(aliceNode, bobNode);\n+\n+    final Hash aliceStateRootId =\n+        aliceNode\n+            .execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"))\n+            .getResult();\n+\n+    final Hash bobStateRootId =\n+        bobNode\n+            .execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"))\n+            .getResult();\n+\n+    assertThat(aliceStateRootId).isEqualTo(bobStateRootId);\n+  }\n+\n+  @Test\n+  public void nodesNotInGroupShouldReturnError() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "028a8ac116d17a75692bd6e52101503831fce880"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3MDY2OA==", "bodyText": "What does it return? I really like this test, because it makes me wonder what result we do expect for a privacyGroup that has not yet existed at that block hight ....", "url": "https://github.com/hyperledger/besu/pull/1607#discussion_r534670668", "createdAt": "2020-12-03T05:04:01Z", "author": {"login": "pinges"}, "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/privacy/PrivDebugGetStateRootOnchainGroupAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.privacy;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.PrivacyNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.account.PrivacyAccountResolver;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.privacy.PrivacyRequestFactory;\n+import org.hyperledger.besu.tests.web3j.privacy.OnChainPrivacyAcceptanceTestBase;\n+\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class PrivDebugGetStateRootOnchainGroupAcceptanceTest\n+    extends OnChainPrivacyAcceptanceTestBase {\n+\n+  private PrivacyNode aliceNode;\n+  private PrivacyNode bobNode;\n+\n+  @Before\n+  public void setUp() throws IOException, URISyntaxException {\n+    aliceNode =\n+        privacyBesu.createOnChainPrivacyGroupEnabledMinerNode(\n+            \"alice-node\", PrivacyAccountResolver.ALICE, Address.PRIVACY, false);\n+    bobNode =\n+        privacyBesu.createOnChainPrivacyGroupEnabledMinerNode(\n+            \"bob-node\", PrivacyAccountResolver.BOB, Address.PRIVACY, false);\n+    privacyCluster.start(aliceNode, bobNode);\n+  }\n+\n+  @Test\n+  public void nodesInGroupShouldHaveSameStateRoot() {\n+    final String privacyGroupId = createOnChainPrivacyGroup(aliceNode, bobNode);\n+\n+    final Hash aliceStateRootId =\n+        aliceNode\n+            .execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"))\n+            .getResult();\n+\n+    final Hash bobStateRootId =\n+        bobNode\n+            .execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"))\n+            .getResult();\n+\n+    assertThat(aliceStateRootId).isEqualTo(bobStateRootId);\n+  }\n+\n+  @Test\n+  public void nodesNotInGroupShouldReturnError() {\n+    final String privacyGroupId = createOnChainPrivacyGroup(aliceNode);\n+\n+    final PrivacyRequestFactory.DebugGetStateRoot aliceResult =\n+        aliceNode.execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"));\n+\n+    assertThat(aliceResult.hasError()).isFalse();\n+    assertThat(aliceResult.getResult()).isNotNull();\n+    assertThat(aliceResult.getResult()).isInstanceOf(Hash.class);\n+\n+    final PrivacyRequestFactory.DebugGetStateRoot bobResult =\n+        bobNode.execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"latest\"));\n+\n+    assertThat(bobResult.getResult()).isNull();\n+    assertThat(bobResult.hasError()).isTrue();\n+    assertThat(bobResult.getError()).isNotNull();\n+    assertThat(bobResult.getError().getMessage()).contains(\"Error finding privacy group\");\n+  }\n+\n+  @Test\n+  public void unknownGroupShouldReturnError() {\n+    final PrivacyRequestFactory.DebugGetStateRoot aliceResult =\n+        aliceNode.execute(\n+            privacyTransactions.debugGetStateRoot(\n+                Hash.wrap(Bytes32.random()).toBase64String(), \"latest\"));\n+\n+    assertThat(aliceResult.getResult()).isNull();\n+    assertThat(aliceResult.hasError()).isTrue();\n+    assertThat(aliceResult.getError()).isNotNull();\n+    assertThat(aliceResult.getError().getMessage()).contains(\"Error finding privacy group\");\n+  }\n+\n+  @Test\n+  public void blockParamShouldBeApplied() {\n+    waitForBlockHeight(aliceNode, 2);\n+    waitForBlockHeight(bobNode, 2);\n+\n+    final String privacyGroupId = createOnChainPrivacyGroup(aliceNode, bobNode);\n+\n+    waitForBlockHeight(aliceNode, 10);\n+    waitForBlockHeight(bobNode, 10);\n+\n+    final Hash aliceResult1 =\n+        aliceNode.execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"1\")).getResult();\n+    final Hash bobResultInt1 =\n+        bobNode.execute(privacyTransactions.debugGetStateRoot(privacyGroupId, \"1\")).getResult();\n+\n+    assertThat(aliceResult1).isEqualTo(bobResultInt1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "028a8ac116d17a75692bd6e52101503831fce880"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY4NzUxMA==", "bodyText": "Why are we doing all that findPrivacyGroup  business when we are not using the privacy group later on? Is that necessary so that we fail with the right error message?", "url": "https://github.com/hyperledger/besu/pull/1607#discussion_r534687510", "createdAt": "2020-12-03T05:43:42Z", "author": {"login": "pinges"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivDebugGetStateRoot.java", "diffHunk": "@@ -68,13 +69,19 @@ protected Object resultByBlockNumber(\n         enclavePublicKeyProvider.getEnclaveKey(requestContext.getUser());\n     LOG.trace(\"Executing {}\", this::getName);\n \n-    final PrivacyGroup[] privacyGroups =\n-        privacyController.findPrivacyGroup(\n-            Collections.singletonList(privacyGroupId),\n-            enclavePublicKeyProvider.getEnclaveKey(requestContext.getUser()));\n+    final Optional<PrivacyGroup> privacyGroup;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "028a8ac116d17a75692bd6e52101503831fce880"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ef7295737c653128469d6de86b969c32700f85f", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/1ef7295737c653128469d6de86b969c32700f85f", "committedDate": "2020-12-07T05:36:22Z", "message": "PR fixes.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebc3cb69ac787643532966990a66247d11891336", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/ebc3cb69ac787643532966990a66247d11891336", "committedDate": "2020-12-07T05:37:38Z", "message": "Merge branch 'master' into 1596"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODQ5NDQ0", "url": "https://github.com/hyperledger/besu/pull/1607#pullrequestreview-545849444", "createdAt": "2020-12-07T05:58:46Z", "commit": {"oid": "ebc3cb69ac787643532966990a66247d11891336"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNTo1ODo0NlrOIAXKAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjowMDoxNFrOIAXL6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MDMwNQ==", "bodyText": "should this be findOffChainPrivacyGroupByGroupId?", "url": "https://github.com/hyperledger/besu/pull/1607#discussion_r537250305", "createdAt": "2020-12-07T05:58:46Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/DefaultPrivacyController.java", "diffHunk": "@@ -259,13 +260,25 @@ public long determineBesuNonce(\n   }\n \n   @Override\n-  public Optional<PrivacyGroup> retrieveOffChainPrivacyGroup(\n+  public Optional<PrivacyGroup> findPrivacyGroupByGroupId(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc3cb69ac787643532966990a66247d11891336"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MDU2NQ==", "bodyText": "should this be findOffChainPrivacyGroupByMembers?", "url": "https://github.com/hyperledger/besu/pull/1607#discussion_r537250565", "createdAt": "2020-12-07T05:59:35Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivacyController.java", "diffHunk": "@@ -47,7 +47,7 @@ PrivacyGroup createPrivacyGroup(\n \n   String deletePrivacyGroup(String privacyGroupId, String enclavePublicKey);\n \n-  PrivacyGroup[] findPrivacyGroup(List<String> addresses, String enclavePublicKey);\n+  PrivacyGroup[] findPrivacyGroupByMembers(List<String> addresses, String enclavePublicKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc3cb69ac787643532966990a66247d11891336"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1MDc5Mw==", "bodyText": "should this be findOnChainPrivacyGroupByGroupId?", "url": "https://github.com/hyperledger/besu/pull/1607#discussion_r537250793", "createdAt": "2020-12-07T06:00:14Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivacyController.java", "diffHunk": "@@ -74,17 +74,21 @@ long determineEeaNonce(\n   Optional<String> buildAndSendAddPayload(\n       PrivateTransaction privateTransaction, Bytes32 privacyGroupId, String enclaveKey);\n \n-  Optional<PrivacyGroup> retrieveOffChainPrivacyGroup(String toBase64String, String enclaveKey);\n+  Optional<PrivacyGroup> findOffChainPrivacyGroupByGroupId(\n+      String toBase64String, String enclaveKey);\n \n-  List<PrivacyGroup> findOnChainPrivacyGroup(List<String> asList, String enclaveKey);\n+  Optional<PrivacyGroup> findPrivacyGroupByGroupId(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc3cb69ac787643532966990a66247d11891336"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d6e44d04a7912fc404320406ddf46e2b2e90356", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/8d6e44d04a7912fc404320406ddf46e2b2e90356", "committedDate": "2020-12-07T10:49:10Z", "message": "Test fix.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjY5NzU4", "url": "https://github.com/hyperledger/besu/pull/1607#pullrequestreview-546669758", "createdAt": "2020-12-08T01:14:09Z", "commit": {"oid": "8d6e44d04a7912fc404320406ddf46e2b2e90356"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "952947a6c5d66a0ebc3d9daf04ca3c7d35e8c01b", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/952947a6c5d66a0ebc3d9daf04ca3c7d35e8c01b", "committedDate": "2020-12-08T03:32:04Z", "message": "Merge branch 'master' into 1596"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cf833d234284f6ce34a8cd6b701094ec8003126", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/6cf833d234284f6ce34a8cd6b701094ec8003126", "committedDate": "2020-12-08T03:38:54Z", "message": "Merge branch 'master' into 1596"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2129, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}