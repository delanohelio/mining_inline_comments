{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNDc3NzMx", "number": 522, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNTozOToxOVrODpKmCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNTo0MDoxMFrODpKnmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDkxNzg3OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/flat/FlatTraceGenerator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNTozOToxOVrOF4K4Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDoxNjowOVrOF4n_0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0Mjc5MQ==", "bodyText": "Why using a local variable there ? You could pass directly this value to the builder", "url": "https://github.com/hyperledger/besu/pull/522#discussion_r394442791", "createdAt": "2020-03-18T15:39:19Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/flat/FlatTraceGenerator.java", "diffHunk": "@@ -428,21 +431,26 @@ private static void addAdditionalTransactionInformationToFlatTrace(\n         .transactionPosition(\n             block.getBody().getTransactions().indexOf(transactionTrace.getTransaction()))\n         .transactionHash(transactionTrace.getTransaction().getHash().toHexString());\n-    // add creationMethod for create action\n-    Optional.ofNullable(builder.getType())\n-        .filter(type -> type.equals(\"create\"))\n-        .ifPresent(__ -> addContractCreationMethodToFlatTrace(transactionTrace, builder));\n+\n+    addContractCreationMethodToTrace(transactionTrace, builder);\n   }\n \n-  private static void addContractCreationMethodToFlatTrace(\n+  private static void addContractCreationMethodToTrace(\n       final TransactionTrace transactionTrace, final FlatTrace.Builder builder) {\n-    final String creationMethod =\n-        transactionTrace.getTraceFrames().stream()\n-            .filter(frame -> \"CREATE2\".equals(frame.getOpcode()))\n-            .findFirst()\n-            .map(TraceFrame::getOpcode)\n-            .orElse(\"CREATE\")\n-            .toLowerCase(Locale.US);\n-    builder.getActionBuilder().creationMethod(creationMethod);\n+\n+    // add creationMethod for create action\n+    Optional.ofNullable(builder.getType())\n+        .filter(type -> type.equals(\"create\"))\n+        .ifPresent(\n+            __ -> {\n+              final String creationMethod =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddfd1cd10076fec19589a706f22ecb9be941cce0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxODg5NQ==", "bodyText": "Done \ud83d\udc4d", "url": "https://github.com/hyperledger/besu/pull/522#discussion_r394918895", "createdAt": "2020-03-19T10:14:24Z", "author": {"login": "matkt"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/flat/FlatTraceGenerator.java", "diffHunk": "@@ -428,21 +431,26 @@ private static void addAdditionalTransactionInformationToFlatTrace(\n         .transactionPosition(\n             block.getBody().getTransactions().indexOf(transactionTrace.getTransaction()))\n         .transactionHash(transactionTrace.getTransaction().getHash().toHexString());\n-    // add creationMethod for create action\n-    Optional.ofNullable(builder.getType())\n-        .filter(type -> type.equals(\"create\"))\n-        .ifPresent(__ -> addContractCreationMethodToFlatTrace(transactionTrace, builder));\n+\n+    addContractCreationMethodToTrace(transactionTrace, builder);\n   }\n \n-  private static void addContractCreationMethodToFlatTrace(\n+  private static void addContractCreationMethodToTrace(\n       final TransactionTrace transactionTrace, final FlatTrace.Builder builder) {\n-    final String creationMethod =\n-        transactionTrace.getTraceFrames().stream()\n-            .filter(frame -> \"CREATE2\".equals(frame.getOpcode()))\n-            .findFirst()\n-            .map(TraceFrame::getOpcode)\n-            .orElse(\"CREATE\")\n-            .toLowerCase(Locale.US);\n-    builder.getActionBuilder().creationMethod(creationMethod);\n+\n+    // add creationMethod for create action\n+    Optional.ofNullable(builder.getType())\n+        .filter(type -> type.equals(\"create\"))\n+        .ifPresent(\n+            __ -> {\n+              final String creationMethod =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0Mjc5MQ=="}, "originalCommit": {"oid": "ddfd1cd10076fec19589a706f22ecb9be941cce0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxOTg5MA==", "bodyText": "Nice", "url": "https://github.com/hyperledger/besu/pull/522#discussion_r394919890", "createdAt": "2020-03-19T10:16:09Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/flat/FlatTraceGenerator.java", "diffHunk": "@@ -428,21 +431,26 @@ private static void addAdditionalTransactionInformationToFlatTrace(\n         .transactionPosition(\n             block.getBody().getTransactions().indexOf(transactionTrace.getTransaction()))\n         .transactionHash(transactionTrace.getTransaction().getHash().toHexString());\n-    // add creationMethod for create action\n-    Optional.ofNullable(builder.getType())\n-        .filter(type -> type.equals(\"create\"))\n-        .ifPresent(__ -> addContractCreationMethodToFlatTrace(transactionTrace, builder));\n+\n+    addContractCreationMethodToTrace(transactionTrace, builder);\n   }\n \n-  private static void addContractCreationMethodToFlatTrace(\n+  private static void addContractCreationMethodToTrace(\n       final TransactionTrace transactionTrace, final FlatTrace.Builder builder) {\n-    final String creationMethod =\n-        transactionTrace.getTraceFrames().stream()\n-            .filter(frame -> \"CREATE2\".equals(frame.getOpcode()))\n-            .findFirst()\n-            .map(TraceFrame::getOpcode)\n-            .orElse(\"CREATE\")\n-            .toLowerCase(Locale.US);\n-    builder.getActionBuilder().creationMethod(creationMethod);\n+\n+    // add creationMethod for create action\n+    Optional.ofNullable(builder.getType())\n+        .filter(type -> type.equals(\"create\"))\n+        .ifPresent(\n+            __ -> {\n+              final String creationMethod =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0Mjc5MQ=="}, "originalCommit": {"oid": "ddfd1cd10076fec19589a706f22ecb9be941cce0"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDkyMTg1OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/vm/VmTraceGenerator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNTo0MDoxMFrOF4K6pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDoxNjoxNlrOF4oAEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MzQzMA==", "bodyText": "Have you tested with several levels deep ?", "url": "https://github.com/hyperledger/besu/pull/522#discussion_r394443430", "createdAt": "2020-03-18T15:40:10Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/vm/VmTraceGenerator.java", "diffHunk": "@@ -172,6 +180,10 @@ private void handleDepthIncreased(\n         } else {\n           if (currentTraceFrame.getPrecompiledGasCost().isPresent()) {\n             op.setCost(op.getCost() + currentTraceFrame.getPrecompiledGasCost().get().toLong());\n+          } else if (currentOperation.equals(\"STATICCALL\")\n+              && nextTraceFrame.map(TraceFrame::getDepth).orElse(0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddfd1cd10076fec19589a706f22ecb9be941cce0"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxODc2OA==", "bodyText": "I added a new test transaction with several levels deeps :\n\nBlock 0x17 with depth == 0\nBlock 0x18 with depth == 2", "url": "https://github.com/hyperledger/besu/pull/522#discussion_r394918768", "createdAt": "2020-03-19T10:14:12Z", "author": {"login": "matkt"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/vm/VmTraceGenerator.java", "diffHunk": "@@ -172,6 +180,10 @@ private void handleDepthIncreased(\n         } else {\n           if (currentTraceFrame.getPrecompiledGasCost().isPresent()) {\n             op.setCost(op.getCost() + currentTraceFrame.getPrecompiledGasCost().get().toLong());\n+          } else if (currentOperation.equals(\"STATICCALL\")\n+              && nextTraceFrame.map(TraceFrame::getDepth).orElse(0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MzQzMA=="}, "originalCommit": {"oid": "ddfd1cd10076fec19589a706f22ecb9be941cce0"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxOTk1Mg==", "bodyText": "Nice", "url": "https://github.com/hyperledger/besu/pull/522#discussion_r394919952", "createdAt": "2020-03-19T10:16:16Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/vm/VmTraceGenerator.java", "diffHunk": "@@ -172,6 +180,10 @@ private void handleDepthIncreased(\n         } else {\n           if (currentTraceFrame.getPrecompiledGasCost().isPresent()) {\n             op.setCost(op.getCost() + currentTraceFrame.getPrecompiledGasCost().get().toLong());\n+          } else if (currentOperation.equals(\"STATICCALL\")\n+              && nextTraceFrame.map(TraceFrame::getDepth).orElse(0)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MzQzMA=="}, "originalCommit": {"oid": "ddfd1cd10076fec19589a706f22ecb9be941cce0"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1154, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}