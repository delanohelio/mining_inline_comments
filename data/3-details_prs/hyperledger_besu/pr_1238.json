{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyOTcxNTI3", "number": 1238, "title": "Tests for existing private receipt functionality.", "bodyText": "Signed-off-by: Mark Terry mark.terry@consensys.net\n\n\nPR description\nAdded some tests to verify existing functionality around generation of private transaction receipts.\nFixed Issue(s)\n\n\nPart of #1117", "createdAt": "2020-07-20T02:34:25Z", "url": "https://github.com/hyperledger/besu/pull/1238", "merged": true, "mergeCommit": {"oid": "91dbc4323ecb97cd3a350211155275f5765bcbd8"}, "closed": true, "closedAt": "2020-07-20T13:30:41Z", "author": {"login": "mark-terry"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2oRZkAH2gAyNDUyOTcxNTI3OjEyNmJhMjA4OWQxNmVmZjQ1ZDI5MDg4ZDIxODA0ZWNiZDBhNDFlNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2xV81gH2gAyNDUyOTcxNTI3OjA0ZTAyN2ViMmEyYjlkZjczMjRiMzAxOWYxMzA3OWRmOGUwYjk5MmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "126ba2089d16eff45d29088d21804ecbd0a41e4d", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/126ba2089d16eff45d29088d21804ecbd0a41e4d", "committedDate": "2020-07-20T02:33:12Z", "message": "Tests for existing private receipt functionality.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjU5NDQz", "url": "https://github.com/hyperledger/besu/pull/1238#pullrequestreview-451259443", "createdAt": "2020-07-20T02:42:55Z", "commit": {"oid": "126ba2089d16eff45d29088d21804ecbd0a41e4d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMjo0Mjo1NVrOGz1CkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwMzo0MjozMFrOGz2QDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk5OTU2OQ==", "bodyText": "Looks like we are executing the same \"transaction\" twice. Is there a way around that?", "url": "https://github.com/hyperledger/besu/pull/1238#discussion_r456999569", "createdAt": "2020-07-20T02:42:55Z", "author": {"login": "pinges"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/PrivGetFailedTransactionReceiptSuccess.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.dsl.condition.priv;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.hyperledger.besu.tests.acceptance.dsl.WaitUtils;\n+import org.hyperledger.besu.tests.acceptance.dsl.condition.Condition;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.Node;\n+import org.hyperledger.besu.tests.acceptance.dsl.transaction.privacy.PrivGetTransactionReceiptTransaction;\n+\n+public class PrivGetFailedTransactionReceiptSuccess implements Condition {\n+\n+  private final PrivGetTransactionReceiptTransaction getTransactionReceiptTransaction;\n+\n+  public PrivGetFailedTransactionReceiptSuccess(\n+      final PrivGetTransactionReceiptTransaction getTransactionReceiptTransaction) {\n+    this.getTransactionReceiptTransaction = getTransactionReceiptTransaction;\n+  }\n+\n+  @Override\n+  public void verify(final Node node) {\n+    WaitUtils.waitFor(() -> assertThat(node.execute(getTransactionReceiptTransaction)).isNotNull());\n+    assertThat(node.execute(getTransactionReceiptTransaction).getStatus()).isEqualTo(\"0x0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "126ba2089d16eff45d29088d21804ecbd0a41e4d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAxOTQwNw==", "bodyText": "that name should be fixed", "url": "https://github.com/hyperledger/besu/pull/1238#discussion_r457019407", "createdAt": "2020-07-20T03:42:30Z", "author": {"login": "pinges"}, "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/web3j/privacy/PrivacyReceiptAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.web3j.privacy;\n+\n+import static java.util.Optional.empty;\n+\n+import org.hyperledger.besu.ethereum.core.Hash;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.privacy.PrivateTransaction;\n+import org.hyperledger.besu.ethereum.privacy.Restriction;\n+import org.hyperledger.besu.ethereum.rlp.BytesValueRLPOutput;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.PrivacyAcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.PrivacyNode;\n+import org.hyperledger.besu.tests.acceptance.dsl.privacy.transaction.CreatePrivacyGroupTransaction;\n+\n+import java.util.Optional;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class PrivacyReceiptAcceptanceTest extends PrivacyAcceptanceTestBase {\n+  private PrivacyNode alice;\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    alice = privacyBesu.createIbft2NodePrivacyEnabled(\"node1\", privacyAccountResolver.resolve(0));\n+    privacyCluster.start(alice);\n+  }\n+\n+  @Test\n+  public void createPrivateTransactionReceiptSuccessfulTransaction() {\n+    final CreatePrivacyGroupTransaction onlyAlice =\n+        privacyTransactions.createPrivacyGroup(\"Only Alice\", \"\", alice);\n+\n+    final String privacyGroupId = alice.execute(onlyAlice);\n+\n+    final PrivateTransaction validSignedPrivateTransaction =\n+        createSignedTransaction(alice, privacyGroupId, empty());\n+    final BytesValueRLPOutput rlpOutput = getRLPOutput(validSignedPrivateTransaction);\n+\n+    final Hash transactionHash =\n+        alice.execute(privacyTransactions.sendRawTransaction(rlpOutput.encoded().toHexString()));\n+\n+    // Successful PMT\n+    alice.getBesu().verify(eth.expectSuccessfulTransactionReceipt(transactionHash.toString()));\n+    // Successful private transaction\n+    alice.getBesu().verify(priv.getSuccessfulTransactionReceipt(transactionHash));\n+  }\n+\n+  @Test\n+  public void createPrivateTransactionReceiptFailedTransaction() {\n+    final CreatePrivacyGroupTransaction onlyAlice =\n+        privacyTransactions.createPrivacyGroup(\"Only Alice\", \"\", alice);\n+\n+    final String privacyGroupId = alice.execute(onlyAlice);\n+\n+    final PrivateTransaction validSignedPrivateTransaction =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "126ba2089d16eff45d29088d21804ecbd0a41e4d"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "583345dddbffa7146e5c328c13e8a98e15d80821", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/583345dddbffa7146e5c328c13e8a98e15d80821", "committedDate": "2020-07-20T04:04:15Z", "message": "PR fixes.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMjg2NDM5", "url": "https://github.com/hyperledger/besu/pull/1238#pullrequestreview-451286439", "createdAt": "2020-07-20T04:21:05Z", "commit": {"oid": "583345dddbffa7146e5c328c13e8a98e15d80821"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNDoyMTowNlrOGz3MOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNDoyMTowOFrOGz3MSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAzNDgxMA==", "bodyText": "s.a.", "url": "https://github.com/hyperledger/besu/pull/1238#discussion_r457034810", "createdAt": "2020-07-20T04:21:06Z", "author": {"login": "pinges"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/PrivGetFailedTransactionReceiptSuccess.java", "diffHunk": "@@ -32,7 +34,9 @@ public PrivGetFailedTransactionReceiptSuccess(\n \n   @Override\n   public void verify(final Node node) {\n-    WaitUtils.waitFor(() -> assertThat(node.execute(getTransactionReceiptTransaction)).isNotNull());\n-    assertThat(node.execute(getTransactionReceiptTransaction).getStatus()).isEqualTo(\"0x0\");\n+    final PrivateTransactionReceipt transactionReceipt =\n+        node.execute(getTransactionReceiptTransaction);\n+    WaitUtils.waitFor(() -> assertThat(transactionReceipt).isNotNull());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "583345dddbffa7146e5c328c13e8a98e15d80821"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzAzNDgyNQ==", "bodyText": "This would not wait for the receipt. It would only work if the receipt was available in line 37.\nI'm not sure, but maybe something like\nPrivateTransactionReceipt transactionReceipt;\nWaitUtils.waitFor(() -> {\n   transactionReceipt = node.execute(getTransactionReceiptTransaction);\n   assertThat(transactionReceipt).isNotNull());\n});\nassertThat(transactionReceipt.getStatus()).isEqualTo(\"0x1\");\n\ncould work?\nIf not, I guess we could life with the way it was before ...", "url": "https://github.com/hyperledger/besu/pull/1238#discussion_r457034825", "createdAt": "2020-07-20T04:21:08Z", "author": {"login": "pinges"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/condition/priv/PrivGetExecutedTransactionReceiptSuccess.java", "diffHunk": "@@ -32,7 +34,9 @@ public PrivGetExecutedTransactionReceiptSuccess(\n \n   @Override\n   public void verify(final Node node) {\n-    WaitUtils.waitFor(() -> assertThat(node.execute(getTransactionReceiptTransaction)).isNotNull());\n-    assertThat(node.execute(getTransactionReceiptTransaction).getStatus()).isEqualTo(\"0x1\");\n+    final PrivateTransactionReceipt transactionReceipt =\n+        node.execute(getTransactionReceiptTransaction);\n+    WaitUtils.waitFor(() -> assertThat(transactionReceipt).isNotNull());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "583345dddbffa7146e5c328c13e8a98e15d80821"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04e027eb2a2b9df7324b3019f13079df8e0b992a", "author": {"user": {"login": "mark-terry", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/04e027eb2a2b9df7324b3019f13079df8e0b992a", "committedDate": "2020-07-20T13:07:19Z", "message": "Revert some PR fixes.\n\nSigned-off-by: Mark Terry <mark.terry@consensys.net>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1448, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}