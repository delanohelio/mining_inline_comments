{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNTYwMzkx", "number": 1326, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMjowNzo1MFrOEbwjlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzozNDozM1rOEczXAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NTQyNTUwOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/methods/PrivJsonRpcMethods.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMjowNzo1MFrOHF39MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzozMjowMFrOHHjGSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyMTcxMg==", "bodyText": "I am happy to see this refactor", "url": "https://github.com/hyperledger/besu/pull/1326#discussion_r475921712", "createdAt": "2020-08-24T22:07:50Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/methods/PrivJsonRpcMethods.java", "diffHunk": "@@ -65,57 +66,44 @@ protected RpcApi getApiGroup() {\n   protected Map<String, JsonRpcMethod> create(\n       final PrivacyController privacyController,\n       final EnclavePublicKeyProvider enclavePublicKeyProvider) {\n-    if (getPrivacyParameters().isOnchainPrivacyGroupsEnabled()) {\n-      return mapOf(\n-          new PrivGetTransactionReceipt(\n-              getPrivacyParameters().getPrivateStateStorage(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivGetPrivacyPrecompileAddress(getPrivacyParameters()),\n-          new PrivGetTransactionCount(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivateTransaction(privacyController, enclavePublicKeyProvider),\n-          new PrivDistributeRawTransaction(\n-              privacyController,\n-              enclavePublicKeyProvider,\n-              getPrivacyParameters().isOnchainPrivacyGroupsEnabled()),\n-          new PrivCall(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetCode(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetLogs(\n-              getBlockchainQueries(),\n-              getPrivacyQueries(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivNewFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivUninstallFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterLogs(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterChanges(filterManager, privacyController, enclavePublicKeyProvider));\n-    } else {\n-      return mapOf(\n-          new PrivGetTransactionReceipt(\n-              getPrivacyParameters().getPrivateStateStorage(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivCreatePrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivDeletePrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivFindPrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivacyPrecompileAddress(getPrivacyParameters()),\n-          new PrivGetTransactionCount(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivateTransaction(privacyController, enclavePublicKeyProvider),\n-          new PrivDistributeRawTransaction(\n-              privacyController,\n-              enclavePublicKeyProvider,\n-              getPrivacyParameters().isOnchainPrivacyGroupsEnabled()),\n-          new PrivCall(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetCode(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetLogs(\n-              getBlockchainQueries(),\n-              getPrivacyQueries(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivNewFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivUninstallFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterLogs(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterChanges(filterManager, privacyController, enclavePublicKeyProvider));\n+\n+    final Map<String, JsonRpcMethod> RPC_METHODS =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab6e4dd3117e0a25570ba48e13715e2f9a5de541"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkzNjE1Mw==", "bodyText": "adding a unit test would take it to next level", "url": "https://github.com/hyperledger/besu/pull/1326#discussion_r475936153", "createdAt": "2020-08-24T22:47:59Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/methods/PrivJsonRpcMethods.java", "diffHunk": "@@ -65,57 +66,44 @@ protected RpcApi getApiGroup() {\n   protected Map<String, JsonRpcMethod> create(\n       final PrivacyController privacyController,\n       final EnclavePublicKeyProvider enclavePublicKeyProvider) {\n-    if (getPrivacyParameters().isOnchainPrivacyGroupsEnabled()) {\n-      return mapOf(\n-          new PrivGetTransactionReceipt(\n-              getPrivacyParameters().getPrivateStateStorage(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivGetPrivacyPrecompileAddress(getPrivacyParameters()),\n-          new PrivGetTransactionCount(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivateTransaction(privacyController, enclavePublicKeyProvider),\n-          new PrivDistributeRawTransaction(\n-              privacyController,\n-              enclavePublicKeyProvider,\n-              getPrivacyParameters().isOnchainPrivacyGroupsEnabled()),\n-          new PrivCall(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetCode(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetLogs(\n-              getBlockchainQueries(),\n-              getPrivacyQueries(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivNewFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivUninstallFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterLogs(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterChanges(filterManager, privacyController, enclavePublicKeyProvider));\n-    } else {\n-      return mapOf(\n-          new PrivGetTransactionReceipt(\n-              getPrivacyParameters().getPrivateStateStorage(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivCreatePrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivDeletePrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivFindPrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivacyPrecompileAddress(getPrivacyParameters()),\n-          new PrivGetTransactionCount(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivateTransaction(privacyController, enclavePublicKeyProvider),\n-          new PrivDistributeRawTransaction(\n-              privacyController,\n-              enclavePublicKeyProvider,\n-              getPrivacyParameters().isOnchainPrivacyGroupsEnabled()),\n-          new PrivCall(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetCode(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetLogs(\n-              getBlockchainQueries(),\n-              getPrivacyQueries(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivNewFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivUninstallFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterLogs(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterChanges(filterManager, privacyController, enclavePublicKeyProvider));\n+\n+    final Map<String, JsonRpcMethod> RPC_METHODS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyMTcxMg=="}, "originalCommit": {"oid": "ab6e4dd3117e0a25570ba48e13715e2f9a5de541"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk4NzM5Nw==", "bodyText": "The existing tests have good coverage of what I've changed. \ud83d\udc4d", "url": "https://github.com/hyperledger/besu/pull/1326#discussion_r475987397", "createdAt": "2020-08-25T00:10:36Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/methods/PrivJsonRpcMethods.java", "diffHunk": "@@ -65,57 +66,44 @@ protected RpcApi getApiGroup() {\n   protected Map<String, JsonRpcMethod> create(\n       final PrivacyController privacyController,\n       final EnclavePublicKeyProvider enclavePublicKeyProvider) {\n-    if (getPrivacyParameters().isOnchainPrivacyGroupsEnabled()) {\n-      return mapOf(\n-          new PrivGetTransactionReceipt(\n-              getPrivacyParameters().getPrivateStateStorage(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivGetPrivacyPrecompileAddress(getPrivacyParameters()),\n-          new PrivGetTransactionCount(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivateTransaction(privacyController, enclavePublicKeyProvider),\n-          new PrivDistributeRawTransaction(\n-              privacyController,\n-              enclavePublicKeyProvider,\n-              getPrivacyParameters().isOnchainPrivacyGroupsEnabled()),\n-          new PrivCall(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetCode(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetLogs(\n-              getBlockchainQueries(),\n-              getPrivacyQueries(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivNewFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivUninstallFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterLogs(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterChanges(filterManager, privacyController, enclavePublicKeyProvider));\n-    } else {\n-      return mapOf(\n-          new PrivGetTransactionReceipt(\n-              getPrivacyParameters().getPrivateStateStorage(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivCreatePrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivDeletePrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivFindPrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivacyPrecompileAddress(getPrivacyParameters()),\n-          new PrivGetTransactionCount(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivateTransaction(privacyController, enclavePublicKeyProvider),\n-          new PrivDistributeRawTransaction(\n-              privacyController,\n-              enclavePublicKeyProvider,\n-              getPrivacyParameters().isOnchainPrivacyGroupsEnabled()),\n-          new PrivCall(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetCode(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetLogs(\n-              getBlockchainQueries(),\n-              getPrivacyQueries(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivNewFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivUninstallFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterLogs(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterChanges(filterManager, privacyController, enclavePublicKeyProvider));\n+\n+    final Map<String, JsonRpcMethod> RPC_METHODS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyMTcxMg=="}, "originalCommit": {"oid": "ab6e4dd3117e0a25570ba48e13715e2f9a5de541"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY3NzEyOQ==", "bodyText": "even better", "url": "https://github.com/hyperledger/besu/pull/1326#discussion_r477677129", "createdAt": "2020-08-26T23:32:00Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/methods/PrivJsonRpcMethods.java", "diffHunk": "@@ -65,57 +66,44 @@ protected RpcApi getApiGroup() {\n   protected Map<String, JsonRpcMethod> create(\n       final PrivacyController privacyController,\n       final EnclavePublicKeyProvider enclavePublicKeyProvider) {\n-    if (getPrivacyParameters().isOnchainPrivacyGroupsEnabled()) {\n-      return mapOf(\n-          new PrivGetTransactionReceipt(\n-              getPrivacyParameters().getPrivateStateStorage(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivGetPrivacyPrecompileAddress(getPrivacyParameters()),\n-          new PrivGetTransactionCount(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivateTransaction(privacyController, enclavePublicKeyProvider),\n-          new PrivDistributeRawTransaction(\n-              privacyController,\n-              enclavePublicKeyProvider,\n-              getPrivacyParameters().isOnchainPrivacyGroupsEnabled()),\n-          new PrivCall(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetCode(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetLogs(\n-              getBlockchainQueries(),\n-              getPrivacyQueries(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivNewFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivUninstallFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterLogs(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterChanges(filterManager, privacyController, enclavePublicKeyProvider));\n-    } else {\n-      return mapOf(\n-          new PrivGetTransactionReceipt(\n-              getPrivacyParameters().getPrivateStateStorage(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivCreatePrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivDeletePrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivFindPrivacyGroup(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivacyPrecompileAddress(getPrivacyParameters()),\n-          new PrivGetTransactionCount(privacyController, enclavePublicKeyProvider),\n-          new PrivGetPrivateTransaction(privacyController, enclavePublicKeyProvider),\n-          new PrivDistributeRawTransaction(\n-              privacyController,\n-              enclavePublicKeyProvider,\n-              getPrivacyParameters().isOnchainPrivacyGroupsEnabled()),\n-          new PrivCall(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetCode(getBlockchainQueries(), privacyController, enclavePublicKeyProvider),\n-          new PrivGetLogs(\n-              getBlockchainQueries(),\n-              getPrivacyQueries(),\n-              privacyController,\n-              enclavePublicKeyProvider),\n-          new PrivNewFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivUninstallFilter(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterLogs(filterManager, privacyController, enclavePublicKeyProvider),\n-          new PrivGetFilterChanges(filterManager, privacyController, enclavePublicKeyProvider));\n+\n+    final Map<String, JsonRpcMethod> RPC_METHODS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTkyMTcxMg=="}, "originalCommit": {"oid": "ab6e4dd3117e0a25570ba48e13715e2f9a5de541"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MTM2MDg5OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivacyController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzo1MTowOVrOHGydhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzo1MTowOVrOHGydhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg4MDI2MQ==", "bodyText": "Do we need to expose this method in this interface? Isn't it used internally?\nI recon we could just find the blockhash from the number inside getStateRootByBlockNumber() method.", "url": "https://github.com/hyperledger/besu/pull/1326#discussion_r476880261", "createdAt": "2020-08-25T23:51:09Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/PrivacyController.java", "diffHunk": "@@ -100,5 +100,8 @@ void verifyPrivacyGroupContainsEnclavePublicKey(\n \n   PrivateTransactionSimulator getTransactionSimulator();\n \n-  Optional<Hash> getBlockHashByBlockNumber(Optional<Long> blockNumber);\n+  Optional<Hash> getBlockHashByBlockNumber(final Long blockNumber);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab6e4dd3117e0a25570ba48e13715e2f9a5de541"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NjM2OTY5OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzozNDoyNlrOHHjULQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzozNDoyNlrOHHjULQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY4MDY4NQ==", "bodyText": "s/JSON RPC/JSON-RPC", "url": "https://github.com/hyperledger/besu/pull/1326#discussion_r477680685", "createdAt": "2020-08-26T23:34:26Z", "author": {"login": "macfarla"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,12 +1,16 @@\n # Changelog\n \n+### Additions and Improvements\n+\n+* Added `priv_debugGetStateRoot` JSON RPC API to retrieve the state root of a specified privacy group. [\\#1326](https://github.com/hyperledger/besu/pull/1326)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76de216d0977553743f70e2409138ac40dbd68e2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NjM3MDU5OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzozNDozM1rOHHjU4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMzozNDozM1rOHHjU4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzY4MDg2Ng==", "bodyText": "good spot", "url": "https://github.com/hyperledger/besu/pull/1326#discussion_r477680866", "createdAt": "2020-08-26T23:34:33Z", "author": {"login": "macfarla"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,12 +1,16 @@\n # Changelog\n \n+### Additions and Improvements\n+\n+* Added `priv_debugGetStateRoot` JSON RPC API to retrieve the state root of a specified privacy group. [\\#1326](https://github.com/hyperledger/besu/pull/1326)\n+\n ## 1.5.3 \n \n ### Additions and Improvements\n \n * The EvmTool now processes State Tests from the Ethereum Reference Tests. [\\#1311](https://github.com/hyperledger/besu/pull/1311)\n * Experimental dns support added via the `Xdns-enabled` and `Xdns-update-enabled` CLI commands. [\\#1247](https://github.com/hyperledger/besu/pull/1247)\n-* Add genesis config option `ecip1017EraRounds` for Ethereum Classic chanis. [\\#1329](https://github.com/hyperledger/besu/pull/1329)\n+* Add genesis config option `ecip1017EraRounds` for Ethereum Classic chains. [\\#1329](https://github.com/hyperledger/besu/pull/1329)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76de216d0977553743f70e2409138ac40dbd68e2"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 762, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}