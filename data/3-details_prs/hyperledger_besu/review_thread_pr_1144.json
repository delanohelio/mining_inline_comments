{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NjE2NzQ1", "number": 1144, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMzoxNTozM1rOEImPPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDowODoxNVrOEIsnWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDUwNTU5OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/NetListeningTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMzoxNTozM1rOGop-dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToyODozN1rOGpMcHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4Mzk1Nw==", "bodyText": "What's the reason for this change?", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445283957", "createdAt": "2020-06-25T03:15:33Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/NetListeningTest.java", "diffHunk": "@@ -69,7 +69,7 @@ public void shouldReturnFalseWhenNetworkIsNotListening() {\n   @Test\n   public void getPermissions() {\n     List<String> permissions = method.getPermissions();\n-    assertThat(permissions).containsExactlyInAnyOrder(\"net:*\", \"net:listening\", \"*:*\");\n+    assertThat(permissions).containsExactly(\"*:*\", \"net:*\", \"net:listening\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMzODA4OQ==", "bodyText": "it just made sense to have the items in order of granularity from widest to narrowest", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445338089", "createdAt": "2020-06-25T06:39:59Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/NetListeningTest.java", "diffHunk": "@@ -69,7 +69,7 @@ public void shouldReturnFalseWhenNetworkIsNotListening() {\n   @Test\n   public void getPermissions() {\n     List<String> permissions = method.getPermissions();\n-    assertThat(permissions).containsExactlyInAnyOrder(\"net:*\", \"net:listening\", \"*:*\");\n+    assertThat(permissions).containsExactly(\"*:*\", \"net:*\", \"net:listening\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4Mzk1Nw=="}, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0ODYwNg==", "bodyText": "also if the permissions are checked in that order then the log.debug messages will make sense", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445848606", "createdAt": "2020-06-25T21:28:37Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/NetListeningTest.java", "diffHunk": "@@ -69,7 +69,7 @@ public void shouldReturnFalseWhenNetworkIsNotListening() {\n   @Test\n   public void getPermissions() {\n     List<String> permissions = method.getPermissions();\n-    assertThat(permissions).containsExactlyInAnyOrder(\"net:*\", \"net:listening\", \"*:*\");\n+    assertThat(permissions).containsExactly(\"*:*\", \"net:*\", \"net:listening\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4Mzk1Nw=="}, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDUxMjI1OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMzoyMDoyMlrOGoqCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNjozOToxOVrOGotRAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4NTA0Mg==", "bodyText": "Looks like line 67 could be inserted as the else branch here?", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445285042", "createdAt": "2020-06-25T03:20:22Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {\n+            return foundMatchingPermission.get();\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMzNzg1OQ==", "bodyText": "no because it has to go through all the permissions that the user has", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445337859", "createdAt": "2020-06-25T06:39:19Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {\n+            return foundMatchingPermission.get();\n+          }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4NTA0Mg=="}, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDUxNzUzOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/JsonRpcMethod.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMzoyNDoyMlrOGoqGBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToxMjo1MVrOGpL_Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4NTg5Mg==", "bodyText": "Is the comment on line 41 out of date?", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445285892", "createdAt": "2020-06-25T03:24:22Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/JsonRpcMethod.java", "diffHunk": "@@ -45,8 +45,8 @@\n   default List<String> getPermissions() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTE5MQ==", "bodyText": "updated", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445841191", "createdAt": "2020-06-25T21:12:51Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/JsonRpcMethod.java", "diffHunk": "@@ -45,8 +45,8 @@\n   default List<String> getPermissions() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI4NTg5Mg=="}, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU3MzMxOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDowMzo1N1rOGoqnUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMjo1Njo0N1rOGpOg5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NDQxOA==", "bodyText": "Is it possible to create a test that confirms that this exits early?", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445294418", "createdAt": "2020-06-25T04:03:57Z", "author": {"login": "jframe"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg4MjU5Nw==", "bodyText": "I've had a bit of a look but testing that piece of logic is not straight forward because of the async call. I don't think it's strictly necessary since the main requirement is that the user gets permissions or not, depending on the permissions that are set - and this is already tested.", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445882597", "createdAt": "2020-06-25T22:56:47Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NDQxOA=="}, "originalCommit": {"oid": "c1716ee92e31c3f7161eb05e714fd8f61c754e94"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTU1MDMzOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDowODoxNVrOGo0KsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMjo1ODowMVrOGpOicA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MDkyOA==", "bodyText": "The more I read this code the more I think setting a flag async is not ideal...", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445450928", "createdAt": "2020-06-25T10:08:15Z", "author": {"login": "mark-terry"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6888775d998216ce33214e3184e16e1d6550d54e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg4Mjk5Mg==", "bodyText": "I don't love it either but it's not simple to change so it's not going to happen as part of this PR", "url": "https://github.com/hyperledger/besu/pull/1144#discussion_r445882992", "createdAt": "2020-06-25T22:58:01Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/authentication/AuthenticationUtils.java", "diffHunk": "@@ -53,6 +53,10 @@ public static boolean isPermitted(\n                   foundMatchingPermission.set(true);\n                 }\n               });\n+          // exit if a matching permission was found, no need to keep checking\n+          if (foundMatchingPermission.get()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ1MDkyOA=="}, "originalCommit": {"oid": "6888775d998216ce33214e3184e16e1d6550d54e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 824, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}