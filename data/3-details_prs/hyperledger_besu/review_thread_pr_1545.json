{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MTc2MTEx", "number": 1545, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzozNzo1M1rOE3C2IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo1MTo0MFrOE3DpHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTUzNzYwOnYy", "diffSide": "RIGHT", "path": "config/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzozNzo1M1rOHwKgAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMTo0OTo0MFrOHw344A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NTczMA==", "bodyText": "Why was this changed?", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520265730", "createdAt": "2020-11-10T03:37:53Z", "author": {"login": "mark-terry"}, "path": "config/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java", "diffHunk": "@@ -302,7 +302,7 @@ public OptionalLong getEcip1017EraRounds() {\n \n   @Override\n   public boolean isQuorum() {\n-    return getOptionalBoolean(\"isQuorum\").orElse(false);\n+    return getOptionalBoolean(\"isquorum\").orElse(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAwOTM3Ng==", "bodyText": "When it resolves the property is uses lowercase. In the genesis file it will still be isQuorum.", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521009376", "createdAt": "2020-11-11T01:49:40Z", "author": {"login": "lucassaldanha"}, "path": "config/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java", "diffHunk": "@@ -302,7 +302,7 @@ public OptionalLong getEcip1017EraRounds() {\n \n   @Override\n   public boolean isQuorum() {\n-    return getOptionalBoolean(\"isQuorum\").orElse(false);\n+    return getOptionalBoolean(\"isquorum\").orElse(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2NTczMA=="}, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTU1NjE3OnYy", "diffSide": "RIGHT", "path": "ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/node/NodePermissioningControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzo0ODoyOFrOHwKq8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMzo0ODoyOFrOHwKq8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI2ODUzMA==", "bodyText": "Dupe in name", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520268530", "createdAt": "2020-11-10T03:48:28Z", "author": {"login": "mark-terry"}, "path": "ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/node/NodePermissioningControllerTest.java", "diffHunk": "@@ -174,4 +183,45 @@ public void doesntStopAtInsufficientPeersWhenNoAnswer() {\n     verify(insufficientPeersPermissioningProvider, times(1)).isPermitted(any(), any());\n     providers.forEach(p -> verify(p, times(1)).isPermitted(any(), any()));\n   }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsEmptyShouldDelegateToProviders() {\n+    this.controller =\n+        new NodePermissioningController(\n+            syncStatusNodePermissioningProviderOptional, Collections.emptyList(), Optional.empty());\n+\n+    controller.isPermitted(enode1, enode2);\n+\n+    verify(syncStatusNodePermissioningProvider, atLeast(1)).isPermitted(eq(enode1), eq(enode2));\n+  }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsNotActiveShouldAlwaysReturnTrue() {\n+    this.controller =\n+        new NodePermissioningController(\n+            syncStatusNodePermissioningProviderOptional,\n+            Collections.emptyList(),\n+            Optional.of(quorumQip714Gate));\n+\n+    when(quorumQip714Gate.shouldCheckPermissions()).thenReturn(false);\n+\n+    assertThat(controller.isPermitted(enode1, enode2)).isTrue();\n+\n+    verifyNoInteractions(syncStatusNodePermissioningProvider);\n+  }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsActiveActiveShouldDelegateToProviders() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTYzOTY3OnYy", "diffSide": "RIGHT", "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumPermissioningConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDozNToyMVrOHwLaVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMTozNDowMVrOHw3OEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MDY2Mw==", "bodyText": "why true for disabled?", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520280663", "createdAt": "2020-11-10T04:35:21Z", "author": {"login": "macfarla"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumPermissioningConfiguration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.permissioning;\n+\n+public class QuorumPermissioningConfiguration {\n+\n+  public static final long QIP714_DEFAULT_BLOCK = 0;\n+\n+  private final long qip714Block;\n+  private final boolean enabled;\n+\n+  public QuorumPermissioningConfiguration(final long qip714Block, final boolean enabled) {\n+    this.qip714Block = qip714Block;\n+    this.enabled = enabled;\n+  }\n+\n+  public static QuorumPermissioningConfiguration enabled(final long qip714Block) {\n+    return new QuorumPermissioningConfiguration(qip714Block, true);\n+  }\n+\n+  public static QuorumPermissioningConfiguration disabled() {\n+    return new QuorumPermissioningConfiguration(QIP714_DEFAULT_BLOCK, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk5ODQxOA==", "bodyText": "Ops", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520998418", "createdAt": "2020-11-11T01:34:01Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumPermissioningConfiguration.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.permissioning;\n+\n+public class QuorumPermissioningConfiguration {\n+\n+  public static final long QIP714_DEFAULT_BLOCK = 0;\n+\n+  private final long qip714Block;\n+  private final boolean enabled;\n+\n+  public QuorumPermissioningConfiguration(final long qip714Block, final boolean enabled) {\n+    this.qip714Block = qip714Block;\n+    this.enabled = enabled;\n+  }\n+\n+  public static QuorumPermissioningConfiguration enabled(final long qip714Block) {\n+    return new QuorumPermissioningConfiguration(qip714Block, true);\n+  }\n+\n+  public static QuorumPermissioningConfiguration disabled() {\n+    return new QuorumPermissioningConfiguration(QIP714_DEFAULT_BLOCK, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MDY2Mw=="}, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTY1MTQ2OnYy", "diffSide": "RIGHT", "path": "ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0MjowMVrOHwLg4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0MjowMVrOHwLg4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4MjMzNw==", "bodyText": "whenQuorumQip714GateIsNotActiveShouldNotCheckOtherPermissions ? BypassOtherPermissions?", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520282337", "createdAt": "2020-11-10T04:42:01Z", "author": {"login": "macfarla"}, "path": "ethereum/permissioning/src/test/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerTest.java", "diffHunk": "@@ -85,4 +89,49 @@ public void shouldReturnFalseIfOneControllerPermitsAndTheOtherDoesNot() {\n     verify(localConfigController).isPermitted(any());\n     verify(smartContractController).isPermitted(any());\n   }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsEmptyShouldDelegateToProviders() {\n+    this.permissioningController =\n+        new AccountPermissioningController(\n+            Optional.of(localConfigController),\n+            Optional.of(smartContractController),\n+            Optional.empty());\n+\n+    permissioningController.isPermitted(mock(Transaction.class), true, false);\n+\n+    verify(localConfigController).isPermitted(any());\n+  }\n+\n+  @Test\n+  public void whenQuorumQip714GateIsNotActiveShouldAlwaysReturnTrue() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTY1NTQ4OnYy", "diffSide": "RIGHT", "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0NDozM1rOHwLjSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo0NDozM1rOHwLjSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4Mjk1NA==", "bodyText": "I don't love cfg as a name - config?", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520282954", "createdAt": "2020-11-10T04:44:33Z", "author": {"login": "macfarla"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningControllerFactory.java", "diffHunk": "@@ -56,10 +59,25 @@\n \n     if (accountLocalConfigPermissioningController.isPresent()\n         || transactionSmartContractPermissioningController.isPresent()) {\n+\n+      final Optional<QuorumQip714Gate> quorumQip714Gate =\n+          permissioningConfiguration\n+              .getQuorumPermissioningConfig()\n+              .flatMap(\n+                  cfg -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTY2NjE4OnYy", "diffSide": "RIGHT", "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/PermissioningConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo1MDoyOVrOHwLpkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo1MDoyOVrOHwLpkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDU2Mg==", "bodyText": "nit: config vs configuration", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520284562", "createdAt": "2020-11-10T04:50:29Z", "author": {"login": "macfarla"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/PermissioningConfiguration.java", "diffHunk": "@@ -17,14 +17,18 @@\n import java.util.Optional;\n \n public class PermissioningConfiguration {\n+\n   private final Optional<LocalPermissioningConfiguration> localConfig;\n   private final Optional<SmartContractPermissioningConfiguration> smartContractConfig;\n+  private final Optional<QuorumPermissioningConfiguration> quorumPermissioningConfiguration;\n \n   public PermissioningConfiguration(\n       final Optional<LocalPermissioningConfiguration> localConfig,\n-      final Optional<SmartContractPermissioningConfiguration> smartContractConfig) {\n+      final Optional<SmartContractPermissioningConfiguration> smartContractConfig,\n+      final Optional<QuorumPermissioningConfiguration> quorumPermissioningConfiguration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MTY2ODEzOnYy", "diffSide": "RIGHT", "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNDo1MTo0MFrOHwLqsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjo0MjoyNlrOHw6D1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA==", "bodyText": "nit: would be good to standardise spelling of qip714block in logs", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r520284848", "createdAt": "2020-11-10T04:51:40Z", "author": {"login": "macfarla"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java", "diffHunk": "@@ -34,21 +35,32 @@\n       accountLocalConfigPermissioningController;\n   private final Optional<TransactionSmartContractPermissioningController>\n       transactionSmartContractPermissioningController;\n+  private final Optional<QuorumQip714Gate> quorumQip714Gate;\n \n   public AccountPermissioningController(\n       final Optional<AccountLocalConfigPermissioningController>\n           accountLocalConfigPermissioningController,\n       final Optional<TransactionSmartContractPermissioningController>\n-          transactionSmartContractPermissioningController) {\n+          transactionSmartContractPermissioningController,\n+      final Optional<QuorumQip714Gate> quorumQip714Gate) {\n     this.accountLocalConfigPermissioningController = accountLocalConfigPermissioningController;\n     this.transactionSmartContractPermissioningController =\n         transactionSmartContractPermissioningController;\n+    this.quorumQip714Gate = quorumQip714Gate;\n   }\n \n   public boolean isPermitted(\n       final Transaction transaction,\n       final boolean includeLocalCheck,\n       final boolean includeOnChainCheck) {\n+    final boolean checkPermissions =\n+        quorumQip714Gate.map(QuorumQip714Gate::shouldCheckPermissions).orElse(true);\n+    if (!checkPermissions) {\n+      LOG.trace(\"Skipping account permissioning check due to qip714block config\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAxNDMzMQ==", "bodyText": "Is it different?", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521014331", "createdAt": "2020-11-11T01:56:47Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java", "diffHunk": "@@ -34,21 +35,32 @@\n       accountLocalConfigPermissioningController;\n   private final Optional<TransactionSmartContractPermissioningController>\n       transactionSmartContractPermissioningController;\n+  private final Optional<QuorumQip714Gate> quorumQip714Gate;\n \n   public AccountPermissioningController(\n       final Optional<AccountLocalConfigPermissioningController>\n           accountLocalConfigPermissioningController,\n       final Optional<TransactionSmartContractPermissioningController>\n-          transactionSmartContractPermissioningController) {\n+          transactionSmartContractPermissioningController,\n+      final Optional<QuorumQip714Gate> quorumQip714Gate) {\n     this.accountLocalConfigPermissioningController = accountLocalConfigPermissioningController;\n     this.transactionSmartContractPermissioningController =\n         transactionSmartContractPermissioningController;\n+    this.quorumQip714Gate = quorumQip714Gate;\n   }\n \n   public boolean isPermitted(\n       final Transaction transaction,\n       final boolean includeLocalCheck,\n       final boolean includeOnChainCheck) {\n+    final boolean checkPermissions =\n+        quorumQip714Gate.map(QuorumQip714Gate::shouldCheckPermissions).orElse(true);\n+    if (!checkPermissions) {\n+      LOG.trace(\"Skipping account permissioning check due to qip714block config\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA=="}, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAxNjQwNQ==", "bodyText": "in ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/QuorumQip714Gate.java it had QIP-", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521016405", "createdAt": "2020-11-11T01:59:47Z", "author": {"login": "macfarla"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java", "diffHunk": "@@ -34,21 +35,32 @@\n       accountLocalConfigPermissioningController;\n   private final Optional<TransactionSmartContractPermissioningController>\n       transactionSmartContractPermissioningController;\n+  private final Optional<QuorumQip714Gate> quorumQip714Gate;\n \n   public AccountPermissioningController(\n       final Optional<AccountLocalConfigPermissioningController>\n           accountLocalConfigPermissioningController,\n       final Optional<TransactionSmartContractPermissioningController>\n-          transactionSmartContractPermissioningController) {\n+          transactionSmartContractPermissioningController,\n+      final Optional<QuorumQip714Gate> quorumQip714Gate) {\n     this.accountLocalConfigPermissioningController = accountLocalConfigPermissioningController;\n     this.transactionSmartContractPermissioningController =\n         transactionSmartContractPermissioningController;\n+    this.quorumQip714Gate = quorumQip714Gate;\n   }\n \n   public boolean isPermitted(\n       final Transaction transaction,\n       final boolean includeLocalCheck,\n       final boolean includeOnChainCheck) {\n+    final boolean checkPermissions =\n+        quorumQip714Gate.map(QuorumQip714Gate::shouldCheckPermissions).orElse(true);\n+    if (!checkPermissions) {\n+      LOG.trace(\"Skipping account permissioning check due to qip714block config\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA=="}, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTAxODQyNQ==", "bodyText": "Well, one is talking about the property, the other about the actual gate. How do you think we should change it?", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521018425", "createdAt": "2020-11-11T02:02:39Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java", "diffHunk": "@@ -34,21 +35,32 @@\n       accountLocalConfigPermissioningController;\n   private final Optional<TransactionSmartContractPermissioningController>\n       transactionSmartContractPermissioningController;\n+  private final Optional<QuorumQip714Gate> quorumQip714Gate;\n \n   public AccountPermissioningController(\n       final Optional<AccountLocalConfigPermissioningController>\n           accountLocalConfigPermissioningController,\n       final Optional<TransactionSmartContractPermissioningController>\n-          transactionSmartContractPermissioningController) {\n+          transactionSmartContractPermissioningController,\n+      final Optional<QuorumQip714Gate> quorumQip714Gate) {\n     this.accountLocalConfigPermissioningController = accountLocalConfigPermissioningController;\n     this.transactionSmartContractPermissioningController =\n         transactionSmartContractPermissioningController;\n+    this.quorumQip714Gate = quorumQip714Gate;\n   }\n \n   public boolean isPermitted(\n       final Transaction transaction,\n       final boolean includeLocalCheck,\n       final boolean includeOnChainCheck) {\n+    final boolean checkPermissions =\n+        quorumQip714Gate.map(QuorumQip714Gate::shouldCheckPermissions).orElse(true);\n+    if (!checkPermissions) {\n+      LOG.trace(\"Skipping account permissioning check due to qip714block config\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA=="}, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA0NDk1MQ==", "bodyText": "I was just envisioning grepping the logs for qip and not finding the uppercase one", "url": "https://github.com/hyperledger/besu/pull/1545#discussion_r521044951", "createdAt": "2020-11-11T02:42:26Z", "author": {"login": "macfarla"}, "path": "ethereum/permissioning/src/main/java/org/hyperledger/besu/ethereum/permissioning/account/AccountPermissioningController.java", "diffHunk": "@@ -34,21 +35,32 @@\n       accountLocalConfigPermissioningController;\n   private final Optional<TransactionSmartContractPermissioningController>\n       transactionSmartContractPermissioningController;\n+  private final Optional<QuorumQip714Gate> quorumQip714Gate;\n \n   public AccountPermissioningController(\n       final Optional<AccountLocalConfigPermissioningController>\n           accountLocalConfigPermissioningController,\n       final Optional<TransactionSmartContractPermissioningController>\n-          transactionSmartContractPermissioningController) {\n+          transactionSmartContractPermissioningController,\n+      final Optional<QuorumQip714Gate> quorumQip714Gate) {\n     this.accountLocalConfigPermissioningController = accountLocalConfigPermissioningController;\n     this.transactionSmartContractPermissioningController =\n         transactionSmartContractPermissioningController;\n+    this.quorumQip714Gate = quorumQip714Gate;\n   }\n \n   public boolean isPermitted(\n       final Transaction transaction,\n       final boolean includeLocalCheck,\n       final boolean includeOnChainCheck) {\n+    final boolean checkPermissions =\n+        quorumQip714Gate.map(QuorumQip714Gate::shouldCheckPermissions).orElse(true);\n+    if (!checkPermissions) {\n+      LOG.trace(\"Skipping account permissioning check due to qip714block config\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDI4NDg0OA=="}, "originalCommit": {"oid": "d4ea3d0bd564251f6db2574b0a1479b88caa3d02"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1327, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}