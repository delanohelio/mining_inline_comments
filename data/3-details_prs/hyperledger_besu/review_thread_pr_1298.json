{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NDg0ODM4", "number": 1298, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNToyMjo1NlrOEXeY1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMzoxNzozNlrOEaxx9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDUwNTgwOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivNewFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNToyMjo1NlrOG_SMmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDoyNjoyMVrOHB_JaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMTYwOQ==", "bodyText": "I think we need to check if the user is a member of the group before creating the private filter. Otherwise, an ex-member will be able to install the filter. And because they have already been removed, we will never have a removedEvent to destroy their filter.", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r469011609", "createdAt": "2020-08-12T05:22:56Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivNewFilter.java", "diffHunk": "@@ -50,23 +50,27 @@ public String getName() {\n   public JsonRpcResponse response(final JsonRpcRequestContext request) {\n     final String privacyGroupId = request.getRequiredParameter(0, String.class);\n     final FilterParameter filter = request.getRequiredParameter(1, FilterParameter.class);\n+    final String enclavePublicKey = enclavePublicKeyProvider.getEnclaveKey(request.getUser());\n \n-    checkIfPrivacyGroupMatchesAuthenticatedEnclaveKey(request, privacyGroupId);\n+    checkIfPrivacyGroupMatchesAuthenticatedEnclaveKey(enclavePublicKey, privacyGroupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da085c87f4cda191cde903b73db7fc561f24f071"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0NTIyNQ==", "bodyText": "it still happens before. I just moved where we get the user's id out of the request", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r471845225", "createdAt": "2020-08-18T00:26:21Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivNewFilter.java", "diffHunk": "@@ -50,23 +50,27 @@ public String getName() {\n   public JsonRpcResponse response(final JsonRpcRequestContext request) {\n     final String privacyGroupId = request.getRequiredParameter(0, String.class);\n     final FilterParameter filter = request.getRequiredParameter(1, FilterParameter.class);\n+    final String enclavePublicKey = enclavePublicKeyProvider.getEnclaveKey(request.getUser());\n \n-    checkIfPrivacyGroupMatchesAuthenticatedEnclaveKey(request, privacyGroupId);\n+    checkIfPrivacyGroupMatchesAuthenticatedEnclaveKey(enclavePublicKey, privacyGroupId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMTYwOQ=="}, "originalCommit": {"oid": "da085c87f4cda191cde903b73db7fc561f24f071"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDUxMjU2OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/DefaultPrivacyController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNToyNjoyMlrOG_SQdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDoyOToyOVrOHB_Meg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMjU5Ng==", "bodyText": "Why do we need this method here? Maybe we should add it to the PrivateTransaction class itself? Or to an OnchainPrivateTransactionUtil kind of class.", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r469012596", "createdAt": "2020-08-12T05:26:22Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/DefaultPrivacyController.java", "diffHunk": "@@ -414,6 +415,16 @@ public boolean isGroupAdditionTransaction(final PrivateTransaction privateTransa\n             .startsWith(ADD_TO_GROUP_METHOD_SIGNATURE.toHexString());\n   }\n \n+  @Override\n+  public boolean isGroupRemovalTransaction(final PrivateTransaction privateTransaction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da085c87f4cda191cde903b73db7fc561f24f071"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0NjAxMA==", "bodyText": "moved", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r471846010", "createdAt": "2020-08-18T00:29:29Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/DefaultPrivacyController.java", "diffHunk": "@@ -414,6 +415,16 @@ public boolean isGroupAdditionTransaction(final PrivateTransaction privateTransa\n             .startsWith(ADD_TO_GROUP_METHOD_SIGNATURE.toHexString());\n   }\n \n+  @Override\n+  public boolean isGroupRemovalTransaction(final PrivateTransaction privateTransaction) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMjU5Ng=="}, "originalCommit": {"oid": "da085c87f4cda191cde903b73db7fc561f24f071"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDUxNTgzOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/MultiTenancyPrivacyController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNToyODoxOVrOG_SSfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDoyOTozNVrOHB_MlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMzExOQ==", "bodyText": "We can't do this here, it is too early in the private tx lifecycle. We need to send the event when the transaction is processed as part of the block import.\nBasically, only after we know the tx has been successfully processed we can send the event.", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r469013119", "createdAt": "2020-08-12T05:28:19Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/MultiTenancyPrivacyController.java", "diffHunk": "@@ -72,8 +72,19 @@ public String sendTransaction(\n       verifyPrivacyGroupContainsEnclavePublicKey(\n           privateTransaction.getPrivacyGroupId().get().toBase64String(), enclavePublicKey);\n     }\n-    return privacyController.sendTransaction(\n-        privateTransaction, enclavePublicKey, maybePrivacyGroup);\n+\n+    final String transactionResult =\n+        privacyController.sendTransaction(privateTransaction, enclavePublicKey, maybePrivacyGroup);\n+\n+    if (isGroupRemovalTransaction(privateTransaction)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da085c87f4cda191cde903b73db7fc561f24f071"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0NjAzNw==", "bodyText": "moved", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r471846037", "createdAt": "2020-08-18T00:29:35Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/privacy/MultiTenancyPrivacyController.java", "diffHunk": "@@ -72,8 +72,19 @@ public String sendTransaction(\n       verifyPrivacyGroupContainsEnclavePublicKey(\n           privateTransaction.getPrivacyGroupId().get().toBase64String(), enclavePublicKey);\n     }\n-    return privacyController.sendTransaction(\n-        privateTransaction, enclavePublicKey, maybePrivacyGroup);\n+\n+    final String transactionResult =\n+        privacyController.sendTransaction(privateTransaction, enclavePublicKey, maybePrivacyGroup);\n+\n+    if (isGroupRemovalTransaction(privateTransaction)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAxMzExOQ=="}, "originalCommit": {"oid": "da085c87f4cda191cde903b73db7fc561f24f071"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODc4MzEwOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMTo0OTo0NVrOHDbcPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMjozMTo1NlrOHDnSKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM1NzM3Mg==", "bodyText": "We could move this to a private method SendRemovedParticipantEvent() to try to keep the compute() method a bit cleaner (I know it is already kinda messy, but let's try to not make it worse) :)", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r473357372", "createdAt": "2020-08-19T21:49:45Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -190,10 +191,13 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     }\n \n     if (privateTransaction.isGroupRemovalTransaction()) {\n+      // get first participant parameter - there will be only one for removal transaction\n+      final String removedParticipant = getParticipantsFromParameter(privateTransaction.getPayload()).get(0);\n+\n       final PrivateTransactionEvent removalEvent =\n           new PrivateTransactionEvent(\n               privateTransaction.getPrivacyGroupId().get().toBase64String(),\n-              privateTransaction.getPrivateFrom().toBase64String());\n+              removedParticipant);\n       privateTransactionEventObservers.forEach(\n           sub -> sub.onPrivateTransactionProcessed(removalEvent));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07052912a3aa123388eae2fe52f282f6d11e2ff3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0MjQ3Nw==", "bodyText": "will clean this up today!", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r473442477", "createdAt": "2020-08-19T23:44:14Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -190,10 +191,13 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     }\n \n     if (privateTransaction.isGroupRemovalTransaction()) {\n+      // get first participant parameter - there will be only one for removal transaction\n+      final String removedParticipant = getParticipantsFromParameter(privateTransaction.getPayload()).get(0);\n+\n       final PrivateTransactionEvent removalEvent =\n           new PrivateTransactionEvent(\n               privateTransaction.getPrivacyGroupId().get().toBase64String(),\n-              privateTransaction.getPrivateFrom().toBase64String());\n+              removedParticipant);\n       privateTransactionEventObservers.forEach(\n           sub -> sub.onPrivateTransactionProcessed(removalEvent));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM1NzM3Mg=="}, "originalCommit": {"oid": "07052912a3aa123388eae2fe52f282f6d11e2ff3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU1MTQwMQ==", "bodyText": "refactored", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r473551401", "createdAt": "2020-08-20T02:31:56Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -190,10 +191,13 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     }\n \n     if (privateTransaction.isGroupRemovalTransaction()) {\n+      // get first participant parameter - there will be only one for removal transaction\n+      final String removedParticipant = getParticipantsFromParameter(privateTransaction.getPayload()).get(0);\n+\n       final PrivateTransactionEvent removalEvent =\n           new PrivateTransactionEvent(\n               privateTransaction.getPrivacyGroupId().get().toBase64String(),\n-              privateTransaction.getPrivateFrom().toBase64String());\n+              removedParticipant);\n       privateTransactionEventObservers.forEach(\n           sub -> sub.onPrivateTransactionProcessed(removalEvent));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM1NzM3Mg=="}, "originalCommit": {"oid": "07052912a3aa123388eae2fe52f282f6d11e2ff3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDEzNjExOnYy", "diffSide": "RIGHT", "path": "besu/src/main/java/org/hyperledger/besu/RunnerBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNDozNzo0MFrOHDpPYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjoyOTo1N1rOHEValw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4MzQ1Nw==", "bodyText": "We only really have to do that when multi-tenancy is enabled. If we do not do multi-tenancy we can return any data that is available to this client to the user.", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r473583457", "createdAt": "2020-08-20T04:37:40Z", "author": {"login": "pinges"}, "path": "besu/src/main/java/org/hyperledger/besu/RunnerBuilder.java", "diffHunk": "@@ -789,6 +795,23 @@ private void createLogsSubscriptionService(\n     }\n   }\n \n+  private void createPrivateTransactionObserver(\n+      final FilterManager filterManager, final PrivacyParameters privacyParameters) {\n+    // register filterManager as observer of events fired by the onchain precompile.\n+    // filterManager needs to remove filters when the creator is removed from onchain group\n+    if (privacyParameters.isOnchainPrivacyGroupsEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwNzIyMw==", "bodyText": "fixed", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474307223", "createdAt": "2020-08-20T22:29:57Z", "author": {"login": "macfarla"}, "path": "besu/src/main/java/org/hyperledger/besu/RunnerBuilder.java", "diffHunk": "@@ -789,6 +795,23 @@ private void createLogsSubscriptionService(\n     }\n   }\n \n+  private void createPrivateTransactionObserver(\n+      final FilterManager filterManager, final PrivacyParameters privacyParameters) {\n+    // register filterManager as observer of events fired by the onchain precompile.\n+    // filterManager needs to remove filters when the creator is removed from onchain group\n+    if (privacyParameters.isOnchainPrivacyGroupsEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4MzQ1Nw=="}, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDE0MDgwOnYy", "diffSide": "RIGHT", "path": "besu/src/main/java/org/hyperledger/besu/RunnerBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNDozOTo1OFrOHDpR-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjozMjo0NVrOHEVeKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NDEyMA==", "bodyText": "I'm not sure I like the two VERY similar variable names. We could do the casting in line 803!", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r473584120", "createdAt": "2020-08-20T04:39:58Z", "author": {"login": "pinges"}, "path": "besu/src/main/java/org/hyperledger/besu/RunnerBuilder.java", "diffHunk": "@@ -789,6 +795,23 @@ private void createLogsSubscriptionService(\n     }\n   }\n \n+  private void createPrivateTransactionObserver(\n+      final FilterManager filterManager, final PrivacyParameters privacyParameters) {\n+    // register filterManager as observer of events fired by the onchain precompile.\n+    // filterManager needs to remove filters when the creator is removed from onchain group\n+    if (privacyParameters.isOnchainPrivacyGroupsEnabled()) {\n+      final PrecompiledContract onchainPrivacyPrecompiledContract =\n+          besuController\n+              .getProtocolSchedule()\n+              .getByBlockNumber(1)\n+              .getPrecompileContractRegistry()\n+              .get(Address.ONCHAIN_PRIVACY, Account.DEFAULT_VERSION);\n+      OnChainPrivacyPrecompiledContract onChainPrivacyPrecompiledContract =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwODEzOQ==", "bodyText": "fixed!", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474308139", "createdAt": "2020-08-20T22:32:45Z", "author": {"login": "macfarla"}, "path": "besu/src/main/java/org/hyperledger/besu/RunnerBuilder.java", "diffHunk": "@@ -789,6 +795,23 @@ private void createLogsSubscriptionService(\n     }\n   }\n \n+  private void createPrivateTransactionObserver(\n+      final FilterManager filterManager, final PrivacyParameters privacyParameters) {\n+    // register filterManager as observer of events fired by the onchain precompile.\n+    // filterManager needs to remove filters when the creator is removed from onchain group\n+    if (privacyParameters.isOnchainPrivacyGroupsEnabled()) {\n+      final PrecompiledContract onchainPrivacyPrecompiledContract =\n+          besuController\n+              .getProtocolSchedule()\n+              .getByBlockNumber(1)\n+              .getPrecompileContractRegistry()\n+              .get(Address.ONCHAIN_PRIVACY, Account.DEFAULT_VERSION);\n+      OnChainPrivacyPrecompiledContract onChainPrivacyPrecompiledContract =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NDEyMA=="}, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDE2NDE2OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNDo1MzowOVrOHDpfBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzo1ODozMFrOHEXEUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NzQ2Mg==", "bodyText": "I thought about the possibility of a race condition. I think we do have to do the actual removal once the block where it happened is finalised. I think that the method recordBlockEvent could be a good place.\nAnother option would be to make it impossible for that enclaveKey to install a new filter in that privacy group until the block has been finalised.", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r473587462", "createdAt": "2020-08-20T04:53:09Z", "author": {"login": "pinges"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -192,6 +197,20 @@ public void recordBlockEvent(final BlockAddedEvent event) {\n             });\n   }\n \n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxNTA5Mg==", "bodyText": "to process these events in recordBlockEvent we will have to store them until that method gets called.", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474315092", "createdAt": "2020-08-20T22:53:49Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -192,6 +197,20 @@ public void recordBlockEvent(final BlockAddedEvent event) {\n             });\n   }\n \n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NzQ2Mg=="}, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMzNDI5MA==", "bodyText": "updated", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474334290", "createdAt": "2020-08-20T23:58:30Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -192,6 +197,20 @@ public void recordBlockEvent(final BlockAddedEvent event) {\n             });\n   }\n \n+  @Override\n+  public void onPrivateTransactionProcessed(final PrivateTransactionEvent event) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU4NzQ2Mg=="}, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDQ4MjAxOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxNzo1MlrOHDslRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMDoyNToyMlrOHEXhbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzODIxNA==", "bodyText": "this should not be necessary, as there is only one parameter in that call that has to be 32 bytes long. As the transaction has succeeded I think it should be safe to assume that it really is 32 bytes long. Maybe checking that is OK as well?", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r473638214", "createdAt": "2020-08-20T06:17:52Z", "author": {"login": "pinges"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -323,6 +353,11 @@ private boolean isMemberOfPrivacyGroup(\n     return participants;\n   }\n \n+  private String getRemovedParticipantFromParameter(final Bytes input) {\n+    final Bytes mungedParticipants = input.slice(4);\n+    return mungedParticipants.slice(0, 32).toBase64String();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM0MTc0Mg==", "bodyText": "simplified", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474341742", "createdAt": "2020-08-21T00:25:22Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -323,6 +353,11 @@ private boolean isMemberOfPrivacyGroup(\n     return participants;\n   }\n \n+  private String getRemovedParticipantFromParameter(final Bytes input) {\n+    final Bytes mungedParticipants = input.slice(4);\n+    return mungedParticipants.slice(0, 32).toBase64String();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzODIxNA=="}, "originalCommit": {"oid": "bdcc174e9358231d23cb348e659c8e37ae71aa66"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NTE0MDM2OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwMzoxNzozNlrOHEaNPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNDowNToyOVrOHEa3SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NTcyNw==", "bodyText": "Is there a chance for an NPE here?", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474385727", "createdAt": "2020-08-21T03:17:36Z", "author": {"login": "mark-terry"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -189,6 +205,20 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     return result.getOutput();\n   }\n \n+  private void sendParticipantRemovedEvent(final PrivateTransaction privateTransaction) {\n+    if (privateTransaction.isGroupRemovalTransaction()) {\n+      // get first participant parameter - there is only one for removal transaction\n+      final String removedParticipant =\n+          getRemovedParticipantFromParameter(privateTransaction.getPayload());\n+\n+      final PrivateTransactionEvent removalEvent =\n+          new PrivateTransactionEvent(\n+              privateTransaction.getPrivacyGroupId().get().toBase64String(), removedParticipant);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b03933eb2ef30c2ed004ce356d5d22fe91f4912"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM5MTgxMw==", "bodyText": "from within the onchain precompile?", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474391813", "createdAt": "2020-08-21T03:44:45Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -189,6 +205,20 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     return result.getOutput();\n   }\n \n+  private void sendParticipantRemovedEvent(final PrivateTransaction privateTransaction) {\n+    if (privateTransaction.isGroupRemovalTransaction()) {\n+      // get first participant parameter - there is only one for removal transaction\n+      final String removedParticipant =\n+          getRemovedParticipantFromParameter(privateTransaction.getPayload());\n+\n+      final PrivateTransactionEvent removalEvent =\n+          new PrivateTransactionEvent(\n+              privateTransaction.getPrivacyGroupId().get().toBase64String(), removedParticipant);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NTcyNw=="}, "originalCommit": {"oid": "7b03933eb2ef30c2ed004ce356d5d22fe91f4912"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM5MjY3MA==", "bodyText": "looking at the code, the calling method returns earlier if privacy group id is empty. I can refactor to make that clearer?", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474392670", "createdAt": "2020-08-21T03:48:32Z", "author": {"login": "macfarla"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -189,6 +205,20 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     return result.getOutput();\n   }\n \n+  private void sendParticipantRemovedEvent(final PrivateTransaction privateTransaction) {\n+    if (privateTransaction.isGroupRemovalTransaction()) {\n+      // get first participant parameter - there is only one for removal transaction\n+      final String removedParticipant =\n+          getRemovedParticipantFromParameter(privateTransaction.getPayload());\n+\n+      final PrivateTransactionEvent removalEvent =\n+          new PrivateTransactionEvent(\n+              privateTransaction.getPrivacyGroupId().get().toBase64String(), removedParticipant);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NTcyNw=="}, "originalCommit": {"oid": "7b03933eb2ef30c2ed004ce356d5d22fe91f4912"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM5MjY3Nw==", "bodyText": "Unchecked privateTransaction.getPrivacyGroupId().get() ?", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474392677", "createdAt": "2020-08-21T03:48:33Z", "author": {"login": "mark-terry"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -189,6 +205,20 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     return result.getOutput();\n   }\n \n+  private void sendParticipantRemovedEvent(final PrivateTransaction privateTransaction) {\n+    if (privateTransaction.isGroupRemovalTransaction()) {\n+      // get first participant parameter - there is only one for removal transaction\n+      final String removedParticipant =\n+          getRemovedParticipantFromParameter(privateTransaction.getPayload());\n+\n+      final PrivateTransactionEvent removalEvent =\n+          new PrivateTransactionEvent(\n+              privateTransaction.getPrivacyGroupId().get().toBase64String(), removedParticipant);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NTcyNw=="}, "originalCommit": {"oid": "7b03933eb2ef30c2ed004ce356d5d22fe91f4912"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM5NjQ4OQ==", "bodyText": "You're right - I missed that in the diff.\nAny chance this function could be called from a different path?", "url": "https://github.com/hyperledger/besu/pull/1298#discussion_r474396489", "createdAt": "2020-08-21T04:05:29Z", "author": {"login": "mark-terry"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/precompiles/privacy/OnChainPrivacyPrecompiledContract.java", "diffHunk": "@@ -189,6 +205,20 @@ public Bytes compute(final Bytes input, final MessageFrame messageFrame) {\n     return result.getOutput();\n   }\n \n+  private void sendParticipantRemovedEvent(final PrivateTransaction privateTransaction) {\n+    if (privateTransaction.isGroupRemovalTransaction()) {\n+      // get first participant parameter - there is only one for removal transaction\n+      final String removedParticipant =\n+          getRemovedParticipantFromParameter(privateTransaction.getPayload());\n+\n+      final PrivateTransactionEvent removalEvent =\n+          new PrivateTransactionEvent(\n+              privateTransaction.getPrivacyGroupId().get().toBase64String(), removedParticipant);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDM4NTcyNw=="}, "originalCommit": {"oid": "7b03933eb2ef30c2ed004ce356d5d22fe91f4912"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 753, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}