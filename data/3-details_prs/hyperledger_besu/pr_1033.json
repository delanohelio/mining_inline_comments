{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTMxNzUz", "number": 1033, "title": "Bulk block file import", "bodyText": "Extend the blocks import subcommand to accept multiple files in the\ncommand line and import them in the same batch.\nSigned-off-by: Danno Ferrin danno.ferrin@gmail.com", "createdAt": "2020-06-03T02:56:00Z", "url": "https://github.com/hyperledger/besu/pull/1033", "merged": true, "mergeCommit": {"oid": "2d791717461c14fe74fac67feb0a4b830a37c45c"}, "closed": true, "closedAt": "2020-06-03T15:49:05Z", "author": {"login": "shemnon"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnga8LgH2gAyNDI2OTMxNzUzOjQ2Nzg0MjY1ZGIzNzk1OTljMjQyMDc4YzhlMzQzN2IwNjU3ZDg3Y2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnrdwggFqTQyMzY4ODk1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "46784265db379599c242078c8e3437b0657d87cb", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/46784265db379599c242078c8e3437b0657d87cb", "committedDate": "2020-06-03T02:55:31Z", "message": "Bulk block file import\n\nExtend the `blocks import` subcommand to accept multiple files in the\ncommand line and import them in the same batch.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b40c4f060be05d46e4d3239bd8b6b10c50c1e8b", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/0b40c4f060be05d46e4d3239bd8b6b10c50c1e8b", "committedDate": "2020-06-03T03:31:52Z", "message": "spotless\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjI1MDc4", "url": "https://github.com/hyperledger/besu/pull/1033#pullrequestreview-423625078", "createdAt": "2020-06-03T14:42:14Z", "commit": {"oid": "0b40c4f060be05d46e4d3239bd8b6b10c50c1e8b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo0MjoxNFrOGefKvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo0NDo0OVrOGefRzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYyMTExNg==", "bodyText": "Would it be worth it to indicate that this is a developer mistake and ask for a bug report? I think this can only happen if there's an enumerated block format that we didn't make a case clause for here.", "url": "https://github.com/hyperledger/besu/pull/1033#discussion_r434621116", "createdAt": "2020-06-03T14:42:14Z", "author": {"login": "RatanRSur"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/subcommands/blocks/BlocksSubCommand.java", "diffHunk": "@@ -150,37 +159,48 @@ public void run() {\n     @Override\n     public void run() {\n       parentCommand.parentCommand.configureLogging(false);\n-      LOG.info(\"Import {} block data from {}\", format, blocksImportFile);\n \n       checkCommand(parentCommand);\n       checkNotNull(parentCommand.rlpBlockImporter);\n       checkNotNull(parentCommand.jsonBlockImporterFactory);\n-\n+      if (blockImportFileOption.isEmpty()) {\n+        throw new ParameterException(spec.commandLine(), \"No files specified to import.\");\n+      }\n+      LOG.info(\"Import {} block data from {} files\", format, blockImportFiles.size());\n       final Optional<MetricsService> metricsService = initMetrics(parentCommand);\n \n-      try {\n-        // As blocksImportFile even if initialized as null is injected by PicoCLI and param is\n-        // mandatory. So we are sure it's always not null, we can remove the warning.\n-        //noinspection ConstantConditions\n-        final Path path = blocksImportFile.toPath();\n-        final BesuController<?> controller = createController();\n-        switch (format) {\n-          case RLP:\n-            importRlpBlocks(controller, path);\n-            break;\n-          case JSON:\n-            importJsonBlocks(controller, path);\n-            break;\n-          default:\n-            throw new ParameterException(\n-                spec.commandLine(), \"Unsupported format: \" + format.toString());\n+      try (final BesuController<?> controller = createController()) {\n+        for (final Path path : blockImportFiles) {\n+          try {\n+            LOG.info(\"Importing from {}\", path);\n+\n+            switch (format) {\n+              case RLP:\n+                importRlpBlocks(controller, path);\n+                break;\n+              case JSON:\n+                importJsonBlocks(controller, path);\n+                break;\n+              default:\n+                throw new ParameterException(\n+                    spec.commandLine(), \"Unsupported format: \" + format.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b40c4f060be05d46e4d3239bd8b6b10c50c1e8b"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYyMjkyNQ==", "bodyText": "So we continue on if one of the files isn't found? If the typical use case is to supply block files that have contiguous blocks, as a user I would prefer a bail on the first indication of trouble.", "url": "https://github.com/hyperledger/besu/pull/1033#discussion_r434622925", "createdAt": "2020-06-03T14:44:49Z", "author": {"login": "RatanRSur"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/subcommands/blocks/BlocksSubCommand.java", "diffHunk": "@@ -150,37 +159,48 @@ public void run() {\n     @Override\n     public void run() {\n       parentCommand.parentCommand.configureLogging(false);\n-      LOG.info(\"Import {} block data from {}\", format, blocksImportFile);\n \n       checkCommand(parentCommand);\n       checkNotNull(parentCommand.rlpBlockImporter);\n       checkNotNull(parentCommand.jsonBlockImporterFactory);\n-\n+      if (blockImportFileOption.isEmpty()) {\n+        throw new ParameterException(spec.commandLine(), \"No files specified to import.\");\n+      }\n+      LOG.info(\"Import {} block data from {} files\", format, blockImportFiles.size());\n       final Optional<MetricsService> metricsService = initMetrics(parentCommand);\n \n-      try {\n-        // As blocksImportFile even if initialized as null is injected by PicoCLI and param is\n-        // mandatory. So we are sure it's always not null, we can remove the warning.\n-        //noinspection ConstantConditions\n-        final Path path = blocksImportFile.toPath();\n-        final BesuController<?> controller = createController();\n-        switch (format) {\n-          case RLP:\n-            importRlpBlocks(controller, path);\n-            break;\n-          case JSON:\n-            importJsonBlocks(controller, path);\n-            break;\n-          default:\n-            throw new ParameterException(\n-                spec.commandLine(), \"Unsupported format: \" + format.toString());\n+      try (final BesuController<?> controller = createController()) {\n+        for (final Path path : blockImportFiles) {\n+          try {\n+            LOG.info(\"Importing from {}\", path);\n+\n+            switch (format) {\n+              case RLP:\n+                importRlpBlocks(controller, path);\n+                break;\n+              case JSON:\n+                importJsonBlocks(controller, path);\n+                break;\n+              default:\n+                throw new ParameterException(\n+                    spec.commandLine(), \"Unsupported format: \" + format.toString());\n+            }\n+          } catch (final FileNotFoundException e) {\n+            if (blockImportFiles.size() == 1) {\n+              throw new ExecutionException(\n+                  spec.commandLine(), \"Could not find file to import: \" + path);\n+            } else {\n+              LOG.error(\"Could not find file to import: {}\", path);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b40c4f060be05d46e4d3239bd8b6b10c50c1e8b"}, "originalPosition": 120}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd419f262345ae0e037b81e6e5b85c519dcb39f7", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/cd419f262345ae0e037b81e6e5b85c519dcb39f7", "committedDate": "2020-06-03T14:54:36Z", "message": "remove default block\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea11d955d72150d01ba17373b5073369899f1bce", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/ea11d955d72150d01ba17373b5073369899f1bce", "committedDate": "2020-06-03T15:03:00Z", "message": "Merge branch 'master' into bulkimport"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjg4OTU5", "url": "https://github.com/hyperledger/besu/pull/1033#pullrequestreview-423688959", "createdAt": "2020-06-03T15:47:33Z", "commit": {"oid": "ea11d955d72150d01ba17373b5073369899f1bce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1563, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}