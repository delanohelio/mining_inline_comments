{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4OTI0OTk3", "number": 427, "title": "[BESU-194] Remove max pivot block resets during fast sync", "bodyText": "Signed-off-by: Karim TAAM karim.t2am@gmail.com\nPR description\nWhen Fast Sync doesn't find enough valid peers rapidly, Besu fall back to Full Sync. Besu should not do this, and instead keep searching for peers for Fast Sync \"forever\".", "createdAt": "2020-02-24T10:52:05Z", "url": "https://github.com/hyperledger/besu/pull/427", "merged": true, "mergeCommit": {"oid": "8ced45c05d27ed8fba5873579c3a7e50d13ba449"}, "closed": true, "closedAt": "2020-02-27T13:51:44Z", "author": {"login": "matkt"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHajtIgH2gAyMzc4OTI0OTk3OjZhOTY0ZjkzZDAzYmExNDI3MGRiMDU2NDQ5YTg3MTA3MTI0MDBiOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIbVhKgFqTM2NTY3ODE0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a964f93d03ba14270db056449a8710712400b91", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/6a964f93d03ba14270db056449a8710712400b91", "committedDate": "2020-02-24T10:00:05Z", "message": "remove max pivot block resets during fast sync\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTM3OTgx", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-363537981", "createdAt": "2020-02-24T16:46:09Z", "commit": {"oid": "6a964f93d03ba14270db056449a8710712400b91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjo0NjowOVrOFtnzrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjo0NjowOVrOFtnzrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM4MjQ0Ng==", "bodyText": "This is the wrong log message now, it should complain about the selected pivot block being negative or at genesis.  Retries won't trigger this.", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r383382446", "createdAt": "2020-02-24T16:46:09Z", "author": {"login": "shemnon"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/PivotBlockRetriever.java", "diffHunk": "@@ -147,9 +126,10 @@ private void handleContestedPivotBlock(final long contestedBlockNumber) {\n         contestedBlockNumber, contestedBlockNumber - pivotBlockNumberResetDelta)) {\n       LOG.info(\"Received conflicting pivot blocks for {}.\", contestedBlockNumber);\n \n-      final int retryCount = confirmationTasks.size();\n-      if (retryCount > maxPivotBlockResets\n-          || pivotBlockNumber.get() <= BlockHeader.GENESIS_BLOCK_NUMBER) {\n+      if (confirmationTasks.size() > SUSPICIOUS_NUMBER_OF_PIVOT_BLOCK_RESETS) {\n+        LOG.warn(\"Several attempts have been made without finding a pivot block\");\n+      }\n+      if (pivotBlockNumber.get() <= BlockHeader.GENESIS_BLOCK_NUMBER) {\n         LOG.info(\"Max retries reached, cancel pivot block download.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a964f93d03ba14270db056449a8710712400b91"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNjIxMzMx", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-363621331", "createdAt": "2020-02-24T18:55:15Z", "commit": {"oid": "6a964f93d03ba14270db056449a8710712400b91"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODo1NToxNlrOFtr8zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxODo1NToxNlrOFtr8zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzQ1MDMxOA==", "bodyText": "I'd print a warning periodically (every SUSPICIOUS_NUMBER_OF_PIVOT_BLOCK_RESETS retries?) rather than on every individual retry.  Also, confirmationTasks can now grow very large, so we'll probably need to rework how we track tasks so we don't hold onto every confirmation task we created.\nAlternatively, I wonder if we could alleviate the problem of prematurely switching to full sync by just increasing DEFAULT_MAX_PIVOT_BLOCK_RESETS and making sure we retry fast sync here: \n  \n    \n      besu/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/DefaultSynchronizer.java\n    \n    \n         Line 166\n      in\n      7fe1d47\n    \n    \n    \n    \n\n        \n          \n           LOG.error(\"Fast sync failed, switching to full sync.\", error); \n        \n    \n  \n\n ...", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r383450318", "createdAt": "2020-02-24T18:55:16Z", "author": {"login": "mbaxter"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/PivotBlockRetriever.java", "diffHunk": "@@ -147,9 +126,10 @@ private void handleContestedPivotBlock(final long contestedBlockNumber) {\n         contestedBlockNumber, contestedBlockNumber - pivotBlockNumberResetDelta)) {\n       LOG.info(\"Received conflicting pivot blocks for {}.\", contestedBlockNumber);\n \n-      final int retryCount = confirmationTasks.size();\n-      if (retryCount > maxPivotBlockResets\n-          || pivotBlockNumber.get() <= BlockHeader.GENESIS_BLOCK_NUMBER) {\n+      if (confirmationTasks.size() > SUSPICIOUS_NUMBER_OF_PIVOT_BLOCK_RESETS) {\n+        LOG.warn(\"Several attempts have been made without finding a pivot block\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a964f93d03ba14270db056449a8710712400b91"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fe85838e4a8c729094b803910087362ba80e109", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/1fe85838e4a8c729094b803910087362ba80e109", "committedDate": "2020-02-25T17:28:28Z", "message": "increase retry number and add retry for fast sync\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzIxMjM2", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-364321236", "createdAt": "2020-02-25T17:35:01Z", "commit": {"oid": "1fe85838e4a8c729094b803910087362ba80e109"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2a4326f5d1614916591ec97ebf949f84595ce74", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/b2a4326f5d1614916591ec97ebf949f84595ce74", "committedDate": "2020-02-26T11:22:29Z", "message": "fix review issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66e56b30f17145685632c9ef2beefd57c4219837", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/66e56b30f17145685632c9ef2beefd57c4219837", "committedDate": "2020-02-26T11:31:31Z", "message": "increase max retry number and fix test\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0OTM4NDUw", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-364938450", "createdAt": "2020-02-26T14:24:12Z", "commit": {"oid": "66e56b30f17145685632c9ef2beefd57c4219837"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDoyNDoxMlrOFutcMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNDoyODo1MVrOFutnug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyMzMxMw==", "bodyText": "The catch-all log needs to be updated.  Probably worth keeping the more specific log message for the StalledDownload:\nelse if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n      LOG.warn(\n          \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n      return start(FastSyncState.EMPTY_SYNC_STATE);\n} else {\n      LOG.error(\n          \"Encountered an unexpected error during fast sync.  Restarting fast sync.\", error);\n      return start(FastSyncState.EMPTY_SYNC_STATE);\n}", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384523313", "createdAt": "2020-02-26T14:24:12Z", "author": {"login": "mbaxter"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java", "diffHunk": "@@ -80,17 +79,17 @@ public FastSyncDownloader(\n             .thenApply(this::updateMaxTrailingPeers)\n             .thenApply(this::storeState)\n             .thenCompose(this::downloadChainAndWorldState),\n-        this::handleWorldStateUnavailable);\n+        this::handleFailure);\n   }\n \n-  private CompletableFuture<FastSyncState> handleWorldStateUnavailable(final Throwable error) {\n+  private CompletableFuture<FastSyncState> handleFailure(final Throwable error) {\n     trailingPeerRequirements = Optional.empty();\n-    if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n+    if (ExceptionUtils.rootCause(error) instanceof FastSyncException) {\n+      return completedExceptionally(error);\n+    } else {\n       LOG.warn(\n           \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n       return start(FastSyncState.EMPTY_SYNC_STATE);\n-    } else {\n-      return completedExceptionally(error);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66e56b30f17145685632c9ef2beefd57c4219837"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyNjI2Ng==", "bodyText": "(optional) Might be worth adding some more specific details:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.warn(\"Several attempts have been made without finding a pivot block\");\n          \n          \n            \n                    LOG.warn(\"{} attempts have failed to find a fast sync pivot block\", retryCount);", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384526266", "createdAt": "2020-02-26T14:28:51Z", "author": {"login": "mbaxter"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/PivotBlockRetriever.java", "diffHunk": "@@ -148,6 +149,11 @@ private void handleContestedPivotBlock(final long contestedBlockNumber) {\n       LOG.info(\"Received conflicting pivot blocks for {}.\", contestedBlockNumber);\n \n       final int retryCount = confirmationTasks.size();\n+\n+      if ((retryCount % SUSPICIOUS_NUMBER_OF_RETRIES) == 0) {\n+        LOG.warn(\"Several attempts have been made without finding a pivot block\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66e56b30f17145685632c9ef2beefd57c4219837"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e6843035dd5cc46d27acffa169305cd898640d1", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/0e6843035dd5cc46d27acffa169305cd898640d1", "committedDate": "2020-02-26T15:03:24Z", "message": "change logs in the handleFailure method\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ce4949bcbdd82b94c2278aa8e7e8512f636cc2c", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/1ce4949bcbdd82b94c2278aa8e7e8512f636cc2c", "committedDate": "2020-02-26T15:07:00Z", "message": "change logs related to suspicious number of retries\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0OTk0MzEz", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-364994313", "createdAt": "2020-02-26T15:27:35Z", "commit": {"oid": "1ce4949bcbdd82b94c2278aa8e7e8512f636cc2c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e74d3d4185d4d6857f505d0eb07dc612ae6ada9b", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/e74d3d4185d4d6857f505d0eb07dc612ae6ada9b", "committedDate": "2020-02-26T19:06:13Z", "message": "add a delay before each fast sync retry\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e29644339f6075d521ae02504e4d60ab8271d5c5", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/e29644339f6075d521ae02504e4d60ab8271d5c5", "committedDate": "2020-02-26T19:12:15Z", "message": "add a timeout for fast sync retry\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MTc4MzUw", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-365178350", "createdAt": "2020-02-26T19:27:53Z", "commit": {"oid": "e29644339f6075d521ae02504e4d60ab8271d5c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToyNzo1M1rOFu5A2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToyNzo1M1rOFu5A2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcxMjkyMA==", "bodyText": "We already have some utilities around executing timeouts.  I suggest hooking into those by adding a helper method to FastSyncActions which has access to EthScheduler - FastSyncActions.scheduleTask(Supplier<CompletableFuture<T>> future, Duration duration) perhaps?  See: \n  \n    \n      besu/ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/EthScheduler.java\n    \n    \n         Line 170\n      in\n      2820587\n    \n    \n    \n    \n\n        \n          \n           public <T> CompletableFuture<T> scheduleFutureTask(", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384712920", "createdAt": "2020-02-26T19:27:53Z", "author": {"login": "mbaxter"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java", "diffHunk": "@@ -80,17 +87,31 @@ public FastSyncDownloader(\n             .thenApply(this::updateMaxTrailingPeers)\n             .thenApply(this::storeState)\n             .thenCompose(this::downloadChainAndWorldState),\n-        this::handleWorldStateUnavailable);\n+        this::handleFailure);\n   }\n \n-  private CompletableFuture<FastSyncState> handleWorldStateUnavailable(final Throwable error) {\n+  private CompletableFuture<FastSyncState> handleFailure(final Throwable error) {\n     trailingPeerRequirements = Optional.empty();\n-    if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n+    if (ExceptionUtils.rootCause(error) instanceof FastSyncException) {\n+      return completedExceptionally(error);\n+    } else if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n       LOG.warn(\n           \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n       return start(FastSyncState.EMPTY_SYNC_STATE);\n     } else {\n-      return completedExceptionally(error);\n+      LOG.error(\"Encountered an unexpected error during fast sync.  Trying to restart fast sync.\");\n+      final ScheduledFuture<CompletableFuture<FastSyncState>> fastSyncCountdown =\n+          Executors.newSingleThreadScheduledExecutor()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e29644339f6075d521ae02504e4d60ab8271d5c5"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8438dacd566879450baa6cd6b7f7cfeed2ef0140", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/8438dacd566879450baa6cd6b7f7cfeed2ef0140", "committedDate": "2020-02-26T19:56:31Z", "message": "change timeout for fast sync retry\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MjMwNTE0", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-365230514", "createdAt": "2020-02-26T20:48:49Z", "commit": {"oid": "8438dacd566879450baa6cd6b7f7cfeed2ef0140"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0ODo0OVrOFu7qTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0OTo0NVrOFu7sGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NjMwMQ==", "bodyText": "We should log the error since we don't really want generic errors bubbling all the way up here.  Also, probably worth mentioning the delay here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.error(\"Encountered an unexpected error during fast sync. Restarting fast sync.\");\n          \n          \n            \n                  LOG.error(\"Encountered an unexpected error during fast sync. Restarting fast sync in \" + FAST_SYNC_RETRY_DELAY + \" seconds.\", error);\n          \n      \n    \n    \n  \n\nNote: To get stack traces printed in the logs, you can only supply a single error parameter to the error method.", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384756301", "createdAt": "2020-02-26T20:48:49Z", "author": {"login": "mbaxter"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java", "diffHunk": "@@ -80,17 +84,21 @@ public FastSyncDownloader(\n             .thenApply(this::updateMaxTrailingPeers)\n             .thenApply(this::storeState)\n             .thenCompose(this::downloadChainAndWorldState),\n-        this::handleWorldStateUnavailable);\n+        this::handleFailure);\n   }\n \n-  private CompletableFuture<FastSyncState> handleWorldStateUnavailable(final Throwable error) {\n+  private CompletableFuture<FastSyncState> handleFailure(final Throwable error) {\n     trailingPeerRequirements = Optional.empty();\n-    if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n+    if (ExceptionUtils.rootCause(error) instanceof FastSyncException) {\n+      return completedExceptionally(error);\n+    } else if (ExceptionUtils.rootCause(error) instanceof StalledDownloadException) {\n       LOG.warn(\n           \"Fast sync was unable to download the world state. Retrying with a new pivot block.\");\n       return start(FastSyncState.EMPTY_SYNC_STATE);\n     } else {\n-      return completedExceptionally(error);\n+      LOG.error(\"Encountered an unexpected error during fast sync. Restarting fast sync.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438dacd566879450baa6cd6b7f7cfeed2ef0140"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1Njc2Mg==", "bodyText": "(nit / optional) - I'd probably keep this constant as a Duration for readability (so its easy to see the time unit).", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384756762", "createdAt": "2020-02-26T20:49:45Z", "author": {"login": "mbaxter"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java", "diffHunk": "@@ -38,6 +39,9 @@\n import org.apache.logging.log4j.Logger;\n \n public class FastSyncDownloader<C> {\n+\n+  private static final long FAST_SYNC_RETRY_DELAY = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8438dacd566879450baa6cd6b7f7cfeed2ef0140"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecbe0cab7ad577710fa83f3bab20f1b0414ae97e", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/ecbe0cab7ad577710fa83f3bab20f1b0414ae97e", "committedDate": "2020-02-26T21:17:14Z", "message": "fix log add error\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f42b755841e7b4adf1f19eed6c04b5a230286064", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/f42b755841e7b4adf1f19eed6c04b5a230286064", "committedDate": "2020-02-26T21:00:14Z", "message": "Update ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloader.java\n\nCo-Authored-By: mbaxter <meredith.baxter@consensys.net>"}, "afterCommit": {"oid": "ecbe0cab7ad577710fa83f3bab20f1b0414ae97e", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/ecbe0cab7ad577710fa83f3bab20f1b0414ae97e", "committedDate": "2020-02-26T21:17:14Z", "message": "fix log add error\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f0d07c9e9e9bbf42e0e6084b2b88810a4741d07", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/7f0d07c9e9e9bbf42e0e6084b2b88810a4741d07", "committedDate": "2020-02-26T21:29:02Z", "message": "fix review issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbd012ac32ea938d287a363200089294a3da99e4", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/cbd012ac32ea938d287a363200089294a3da99e4", "committedDate": "2020-02-26T21:51:39Z", "message": "resolve pipeline\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Mjk5MTky", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-365299192", "createdAt": "2020-02-26T22:43:13Z", "commit": {"oid": "cbd012ac32ea938d287a363200089294a3da99e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo0MzoxM1rOFu_HBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo0MzoxM1rOFu_HBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMjgwNg==", "bodyText": "I think you should be able to validate the second run if you use thenAnswer to go ahead and run the future supplier with something like:\nwhen(fastSyncActions).scheduleFutureTask(any(), any())\n    .thenAnswer(invocation -> invocation.getArgument(0).get());", "url": "https://github.com/hyperledger/besu/pull/427#discussion_r384812806", "createdAt": "2020-02-26T22:43:13Z", "author": {"login": "mbaxter"}, "path": "ethereum/eth/src/test/java/org/hyperledger/besu/ethereum/eth/sync/fastsync/FastSyncDownloaderTest.java", "diffHunk": "@@ -413,17 +401,7 @@ public void shouldResetFastSyncStateAndRestartProcessIfANonFastSyncExceptionOccu\n     // A real chain downloader would cause the chainFuture to complete when cancel is called.\n     chainFuture.completeExceptionally(new CancellationException());\n \n-    verify(fastSyncActions, times(2)).waitForSuitablePeers(FastSyncState.EMPTY_SYNC_STATE);\n-    verify(fastSyncActions, times(2)).selectPivotBlock(FastSyncState.EMPTY_SYNC_STATE);\n-    verify(fastSyncActions).downloadPivotBlockHeader(secondSelectPivotBlockState);\n-    verify(storage).storeState(secondDownloadPivotBlockHeaderState);\n-    verify(fastSyncActions).createChainDownloader(secondDownloadPivotBlockHeaderState);\n-    verify(worldStateDownloader).run(secondPivotBlockHeader);\n-    verifyNoMoreInteractions(fastSyncActions, worldStateDownloader, storage);\n-\n-    secondWorldStateFuture.complete(null);\n-\n-    assertThat(result).isCompletedWithValue(secondDownloadPivotBlockHeaderState);\n+    verify(fastSyncActions).scheduleFutureTask(any(Supplier.class), any(Duration.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbd012ac32ea938d287a363200089294a3da99e4"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e07dc4020a2fb0326870208927e8c03c45e74847", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/e07dc4020a2fb0326870208927e8c03c45e74847", "committedDate": "2020-02-27T09:32:19Z", "message": "update test for restart fastsync mechanism\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf8960618d6a5c7601cc7a93aceddde75d5b2f1c", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/cf8960618d6a5c7601cc7a93aceddde75d5b2f1c", "committedDate": "2020-02-27T12:10:50Z", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into feature/BP-117-remove-fast-synf-fallback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Njc4MTQz", "url": "https://github.com/hyperledger/besu/pull/427#pullrequestreview-365678143", "createdAt": "2020-02-27T13:28:25Z", "commit": {"oid": "cf8960618d6a5c7601cc7a93aceddde75d5b2f1c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1804, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}