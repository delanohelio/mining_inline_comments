{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NDgxOTM3", "number": 1018, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo0NjoyNFrOEBx2cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0Nzo1OVrOEBzk5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzAwNzg3OnYy", "diffSide": "RIGHT", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDo0NjoyNFrOGd1NyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0Nzo0NFrOGd4DFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMzc2OQ==", "bodyText": "asserts do nothing unless explicitly enabled at runtime, and we never do that.  Perhaps you meant Preconditions.checkNotNull? (com.google.common.base.Preconditions)", "url": "https://github.com/hyperledger/besu/pull/1018#discussion_r433933769", "createdAt": "2020-06-02T14:46:24Z", "author": {"login": "shemnon"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -30,22 +34,59 @@\n \n public class ForkIdManager {\n \n-  private final Blockchain blockchain;\n   private final Hash genesisHash;\n-  private final List<Long> forks;\n-  private long forkNext;\n-  private final long highestKnownFork;\n-  private List<ForkId> forkAndHashList;\n+  private final List<ForkId> forkAndHashList;\n+\n+  private final List<ForkIDChecker> forkIDCheckers;\n \n   public ForkIdManager(final Blockchain blockchain, final List<Long> forks) {\n-    this.blockchain = blockchain;\n+    assert blockchain != null && forks != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a83f2c43c3245290fbc0365560e06f74b50f16e6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3NDU2NA==", "bodyText": "I have a unit test verifying this specific assertion error and it passes. I thought it was enabled by default on recent Java versions.\nI will change with Preconditions.checkNotNull then", "url": "https://github.com/hyperledger/besu/pull/1018#discussion_r433974564", "createdAt": "2020-06-02T15:42:07Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -30,22 +34,59 @@\n \n public class ForkIdManager {\n \n-  private final Blockchain blockchain;\n   private final Hash genesisHash;\n-  private final List<Long> forks;\n-  private long forkNext;\n-  private final long highestKnownFork;\n-  private List<ForkId> forkAndHashList;\n+  private final List<ForkId> forkAndHashList;\n+\n+  private final List<ForkIDChecker> forkIDCheckers;\n \n   public ForkIdManager(final Blockchain blockchain, final List<Long> forks) {\n-    this.blockchain = blockchain;\n+    assert blockchain != null && forks != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMzc2OQ=="}, "originalCommit": {"oid": "a83f2c43c3245290fbc0365560e06f74b50f16e6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4MDE4Mg==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/1018#discussion_r433980182", "createdAt": "2020-06-02T15:47:44Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -30,22 +34,59 @@\n \n public class ForkIdManager {\n \n-  private final Blockchain blockchain;\n   private final Hash genesisHash;\n-  private final List<Long> forks;\n-  private long forkNext;\n-  private final long highestKnownFork;\n-  private List<ForkId> forkAndHashList;\n+  private final List<ForkId> forkAndHashList;\n+\n+  private final List<ForkIDChecker> forkIDCheckers;\n \n   public ForkIdManager(final Blockchain blockchain, final List<Long> forks) {\n-    this.blockchain = blockchain;\n+    assert blockchain != null && forks != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkzMzc2OQ=="}, "originalCommit": {"oid": "a83f2c43c3245290fbc0365560e06f74b50f16e6"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzIzMDA1OnYy", "diffSide": "RIGHT", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTozNzoxMlrOGd3eOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjoxNTowMlrOGd5ggw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3MDc0Ng==", "bodyText": "What happens if we have a few 0 forks but others greater than 0? Would we do the right thing?", "url": "https://github.com/hyperledger/besu/pull/1018#discussion_r433970746", "createdAt": "2020-06-02T15:37:12Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -30,22 +34,59 @@\n \n public class ForkIdManager {\n \n-  private final Blockchain blockchain;\n   private final Hash genesisHash;\n-  private final List<Long> forks;\n-  private long forkNext;\n-  private final long highestKnownFork;\n-  private List<ForkId> forkAndHashList;\n+  private final List<ForkId> forkAndHashList;\n+\n+  private final List<ForkIDChecker> forkIDCheckers;\n \n   public ForkIdManager(final Blockchain blockchain, final List<Long> forks) {\n-    this.blockchain = blockchain;\n+    assert blockchain != null && forks != null;\n     this.genesisHash = blockchain.getGenesisBlock().getHash();\n-    // de-dupe and sanitize forks\n-    this.forks =\n-        forks.stream().filter(fork -> fork > 0).distinct().collect(Collectors.toUnmodifiableList());\n-    highestKnownFork = forks.size() > 0 ? forks.get(forks.size() - 1) : 0L;\n-    createForkIds();\n-  };\n+    this.forkAndHashList = new ArrayList<>();\n+    final ForkIDChecker legacyForkIdChecker =\n+        createForkIDChecker(\n+            blockchain,\n+            genesisHash,\n+            forks,\n+            fs ->\n+                fs.stream()\n+                    .filter(fork -> fork > 0)\n+                    .distinct()\n+                    .collect(Collectors.toUnmodifiableList()),\n+            forkAndHashList);\n+    // if the fork list contains only zeros then we may be in a consortium/dev network\n+    if (onlyZerosForkBlocks(forks)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a83f2c43c3245290fbc0365560e06f74b50f16e6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3MjIwOA==", "bodyText": "Yes we would to the right thing. This is what happens on Goerli:\n{\n  \"config\":{\n    \"chainId\":5,\n    \"homesteadBlock\":0,\n    \"eip150Block\":0,\n    \"eip150Hash\": \"0xbf7e331f7f7c1dd2e05159666b3bf8bc7a8a3a9eb1d518969eab529dd9b88c1a\",\n    \"eip155Block\":0,\n    \"eip158Block\":0,\n    \"eip160Block\":0,\n    \"byzantiumBlock\":0,\n    \"constantinopleBlock\":0,\n    \"petersburgBlock\":0,\n    \"istanbulBlock\":1561651,\n    \"clique\":{\n      \"blockperiodseconds\":15,\n      \"epochlength\":30000\n    }\n  }", "url": "https://github.com/hyperledger/besu/pull/1018#discussion_r433972208", "createdAt": "2020-06-02T15:39:14Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -30,22 +34,59 @@\n \n public class ForkIdManager {\n \n-  private final Blockchain blockchain;\n   private final Hash genesisHash;\n-  private final List<Long> forks;\n-  private long forkNext;\n-  private final long highestKnownFork;\n-  private List<ForkId> forkAndHashList;\n+  private final List<ForkId> forkAndHashList;\n+\n+  private final List<ForkIDChecker> forkIDCheckers;\n \n   public ForkIdManager(final Blockchain blockchain, final List<Long> forks) {\n-    this.blockchain = blockchain;\n+    assert blockchain != null && forks != null;\n     this.genesisHash = blockchain.getGenesisBlock().getHash();\n-    // de-dupe and sanitize forks\n-    this.forks =\n-        forks.stream().filter(fork -> fork > 0).distinct().collect(Collectors.toUnmodifiableList());\n-    highestKnownFork = forks.size() > 0 ? forks.get(forks.size() - 1) : 0L;\n-    createForkIds();\n-  };\n+    this.forkAndHashList = new ArrayList<>();\n+    final ForkIDChecker legacyForkIdChecker =\n+        createForkIDChecker(\n+            blockchain,\n+            genesisHash,\n+            forks,\n+            fs ->\n+                fs.stream()\n+                    .filter(fork -> fork > 0)\n+                    .distinct()\n+                    .collect(Collectors.toUnmodifiableList()),\n+            forkAndHashList);\n+    // if the fork list contains only zeros then we may be in a consortium/dev network\n+    if (onlyZerosForkBlocks(forks)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3MDc0Ng=="}, "originalCommit": {"oid": "a83f2c43c3245290fbc0365560e06f74b50f16e6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAwNDA5OQ==", "bodyText": "Unit tests and the EIP2124 spec also validate that the correct hashes are arrived at.", "url": "https://github.com/hyperledger/besu/pull/1018#discussion_r434004099", "createdAt": "2020-06-02T16:15:02Z", "author": {"login": "shemnon"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -30,22 +34,59 @@\n \n public class ForkIdManager {\n \n-  private final Blockchain blockchain;\n   private final Hash genesisHash;\n-  private final List<Long> forks;\n-  private long forkNext;\n-  private final long highestKnownFork;\n-  private List<ForkId> forkAndHashList;\n+  private final List<ForkId> forkAndHashList;\n+\n+  private final List<ForkIDChecker> forkIDCheckers;\n \n   public ForkIdManager(final Blockchain blockchain, final List<Long> forks) {\n-    this.blockchain = blockchain;\n+    assert blockchain != null && forks != null;\n     this.genesisHash = blockchain.getGenesisBlock().getHash();\n-    // de-dupe and sanitize forks\n-    this.forks =\n-        forks.stream().filter(fork -> fork > 0).distinct().collect(Collectors.toUnmodifiableList());\n-    highestKnownFork = forks.size() > 0 ? forks.get(forks.size() - 1) : 0L;\n-    createForkIds();\n-  };\n+    this.forkAndHashList = new ArrayList<>();\n+    final ForkIDChecker legacyForkIdChecker =\n+        createForkIDChecker(\n+            blockchain,\n+            genesisHash,\n+            forks,\n+            fs ->\n+                fs.stream()\n+                    .filter(fork -> fork > 0)\n+                    .distinct()\n+                    .collect(Collectors.toUnmodifiableList()),\n+            forkAndHashList);\n+    // if the fork list contains only zeros then we may be in a consortium/dev network\n+    if (onlyZerosForkBlocks(forks)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3MDc0Ng=="}, "originalCommit": {"oid": "a83f2c43c3245290fbc0365560e06f74b50f16e6"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzI5MDYxOnYy", "diffSide": "RIGHT", "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0Nzo1OVrOGd4EBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo1MzoyNlrOGd4Zwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4MDQyMw==", "bodyText": "I suggest we put implements Predicate<ForkId> here so that we can get all the other Predicate methods for free", "url": "https://github.com/hyperledger/besu/pull/1018#discussion_r433980423", "createdAt": "2020-06-02T15:47:59Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -257,4 +316,9 @@ private static void intToBigEndian(final int n, final byte[] bs, int off) {\n     bs[++off] = (byte) (n >>> 8);\n     bs[++off] = (byte) (n);\n   }\n+\n+  @FunctionalInterface\n+  private interface ForkIDChecker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e1bb7c6dc1a2efc8913077a28d04f494cb114b1"}, "originalPosition": 244}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4NTk4Ng==", "bodyText": "Nice catch. Done", "url": "https://github.com/hyperledger/besu/pull/1018#discussion_r433985986", "createdAt": "2020-06-02T15:53:26Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -257,4 +316,9 @@ private static void intToBigEndian(final int n, final byte[] bs, int off) {\n     bs[++off] = (byte) (n >>> 8);\n     bs[++off] = (byte) (n);\n   }\n+\n+  @FunctionalInterface\n+  private interface ForkIDChecker {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk4MDQyMw=="}, "originalCommit": {"oid": "4e1bb7c6dc1a2efc8913077a28d04f494cb114b1"}, "originalPosition": 244}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 902, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}