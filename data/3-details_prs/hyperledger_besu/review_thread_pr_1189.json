{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNTg5NTQz", "number": 1189, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0NTozNlrOEK9PoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo1NTowNFrOEK9kow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTI0NjQxOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/resources/org/hyperledger/besu/ethereum/api/jsonrpc/trace/chain-data/blocks.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0NTozNlrOGsTPYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0OTozOVrOGsTjPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEwNTc2Mg==", "bodyText": "If we are adding blocks for 1D and 1E we should have test traces for those blocks as well.", "url": "https://github.com/hyperledger/besu/pull/1189#discussion_r449105762", "createdAt": "2020-07-02T15:45:36Z", "author": {"login": "shemnon"}, "path": "ethereum/api/src/test/resources/org/hyperledger/besu/ethereum/api/jsonrpc/trace/chain-data/blocks.json", "diffHunk": "@@ -499,6 +499,32 @@\n           \"data\": \"0x60806040523373ffffffffffffffffffffffffffffffffffffffff16fffe\"\n         }\n       ]\n+    },\n+    {\n+      \"number\": \"0x1D\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1932e13a7287d2df894d8cfaa23f04e4cd0e00a7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExMDg0NQ==", "bodyText": "I just added it. good catch", "url": "https://github.com/hyperledger/besu/pull/1189#discussion_r449110845", "createdAt": "2020-07-02T15:49:39Z", "author": {"login": "matkt"}, "path": "ethereum/api/src/test/resources/org/hyperledger/besu/ethereum/api/jsonrpc/trace/chain-data/blocks.json", "diffHunk": "@@ -499,6 +499,32 @@\n           \"data\": \"0x60806040523373ffffffffffffffffffffffffffffffffffffffff16fffe\"\n         }\n       ]\n+    },\n+    {\n+      \"number\": \"0x1D\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEwNTc2Mg=="}, "originalCommit": {"oid": "1932e13a7287d2df894d8cfaa23f04e4cd0e00a7"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTMwMDE5OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/flat/FlatTraceGenerator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo1NTowNFrOGsTyQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwODo1ODo0NVrOGspPEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExNDY5MQ==", "bodyText": "since this wraps all of the remaining conditions should it be changed to a mini guard-block?\nif (currentContext == null) {\n  continue;\n}\n\nor even a break since there is no way the currentContext will ever get changed?", "url": "https://github.com/hyperledger/besu/pull/1189#discussion_r449114691", "createdAt": "2020-07-02T15:55:04Z", "author": {"login": "shemnon"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/flat/FlatTraceGenerator.java", "diffHunk": "@@ -124,25 +129,25 @@\n               + traceFrame.getPrecompiledGasCost().orElse(Gas.ZERO).toLong();\n \n       final String opcodeString = traceFrame.getOpcode();\n-      if (\"CALL\".equals(opcodeString)\n-          || \"CALLCODE\".equals(opcodeString)\n-          || \"DELEGATECALL\".equals(opcodeString)\n-          || \"STATICCALL\".equals(opcodeString)) {\n-\n-        currentContext =\n-            handleCall(\n-                transactionTrace,\n-                traceFrame,\n-                nextTraceFrame,\n-                flatTraces,\n-                cumulativeGasCost,\n-                tracesContexts,\n-                opcodeString.toLowerCase(Locale.US));\n-\n-      } else if (\"CALLDATALOAD\".equals(opcodeString)) {\n-        if (currentContext != null) currentContext = handleCallDataLoad(currentContext, traceFrame);\n-      } else if (\"RETURN\".equals(opcodeString) || \"STOP\".equals(opcodeString)) {\n-        if (currentContext != null) {\n+      if (currentContext != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86a0d6acc590f86385c0afa05501c49eff40773f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ2NjEzMA==", "bodyText": "Done . I will use break", "url": "https://github.com/hyperledger/besu/pull/1189#discussion_r449466130", "createdAt": "2020-07-03T08:58:45Z", "author": {"login": "matkt"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/flat/FlatTraceGenerator.java", "diffHunk": "@@ -124,25 +129,25 @@\n               + traceFrame.getPrecompiledGasCost().orElse(Gas.ZERO).toLong();\n \n       final String opcodeString = traceFrame.getOpcode();\n-      if (\"CALL\".equals(opcodeString)\n-          || \"CALLCODE\".equals(opcodeString)\n-          || \"DELEGATECALL\".equals(opcodeString)\n-          || \"STATICCALL\".equals(opcodeString)) {\n-\n-        currentContext =\n-            handleCall(\n-                transactionTrace,\n-                traceFrame,\n-                nextTraceFrame,\n-                flatTraces,\n-                cumulativeGasCost,\n-                tracesContexts,\n-                opcodeString.toLowerCase(Locale.US));\n-\n-      } else if (\"CALLDATALOAD\".equals(opcodeString)) {\n-        if (currentContext != null) currentContext = handleCallDataLoad(currentContext, traceFrame);\n-      } else if (\"RETURN\".equals(opcodeString) || \"STOP\".equals(opcodeString)) {\n-        if (currentContext != null) {\n+      if (currentContext != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExNDY5MQ=="}, "originalCommit": {"oid": "86a0d6acc590f86385c0afa05501c49eff40773f"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 852, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}