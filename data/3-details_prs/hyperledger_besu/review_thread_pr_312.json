{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NjMzODM2", "number": 312, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMzoyODo0MFrODZV4gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMzozMDozOFrODZV5Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODk5NTIzOnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMzoyODo0MFrOFfrJMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMzo0MDo0M1rOFfrRbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NzA0MA==", "bodyText": "Should that say \"Expose following new command line parameters\"", "url": "https://github.com/hyperledger/besu/pull/312#discussion_r368757040", "createdAt": "2020-01-20T23:28:40Z", "author": {"login": "arash009"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,5 +1,32 @@\n # Changelog\n \n+## 1.4 Beta 2 \n+\n+### Additions and Improvements \n+\n+- Enable TLS for JSON-RPC HTTP Service [\\#253](https://github.com/hyperledger/besu/pull/253)\n+\n+Exposes =command line parameters to enable TLS on Ethereum JSON-RPC HTTP interface to allow clients like EthSigner to connect via TLS: ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d6047f8c867385149ba0c0346dba7de2007add3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1OTE1MQ==", "bodyText": "Fixed", "url": "https://github.com/hyperledger/besu/pull/312#discussion_r368759151", "createdAt": "2020-01-20T23:40:43Z", "author": {"login": "MadelineMurray"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,5 +1,32 @@\n # Changelog\n \n+## 1.4 Beta 2 \n+\n+### Additions and Improvements \n+\n+- Enable TLS for JSON-RPC HTTP Service [\\#253](https://github.com/hyperledger/besu/pull/253)\n+\n+Exposes =command line parameters to enable TLS on Ethereum JSON-RPC HTTP interface to allow clients like EthSigner to connect via TLS: ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NzA0MA=="}, "originalCommit": {"oid": "5d6047f8c867385149ba0c0346dba7de2007add3"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODk5NzQ2OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMzozMDozOFrOFfrKmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMzo1NzoyMFrOFfrbuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NzQwMQ==", "bodyText": "The formating doesn't look right...", "url": "https://github.com/hyperledger/besu/pull/312#discussion_r368757401", "createdAt": "2020-01-20T23:30:38Z", "author": {"login": "arash009"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,5 +1,32 @@\n # Changelog\n \n+## 1.4 Beta 2 \n+\n+### Additions and Improvements \n+\n+- Enable TLS for JSON-RPC HTTP Service [\\#253](https://github.com/hyperledger/besu/pull/253)\n+\n+Exposes =command line parameters to enable TLS on Ethereum JSON-RPC HTTP interface to allow clients like EthSigner to connect via TLS: \n+`--rpc-http-tls-enabled=true`\n+(Optional - Only required if `--rpc-http-enabled` is set to true) Set to `true` to enable TLS. False by default.\n+`--rpc-http-tls-keystore-file=\"/path/to/cert.pfx\"`\n+(Must be specified if TLS is enabled) Path to PKCS12 format key store which contains server's certificate and it's private key\n+`--rpc-http-tls-keystore-password-file=\"/path/to/cert.passwd\"`\n+(Must be specified if TLS is enabled) Path to the text file containing password for unlocking key store.\n+`--rpc-http-tls-known-clients-file=\"/path/to/rpc_tls_clients.txt\"`\n+(Optional) Path to a plain text file containing space separated client\u2019s certificate\u2019s common name and its sha-256 fingerprints when \n+they are not signed by a known CA. The presence of this file (even empty) enables TLS client authentication. That is, the client \n+presents the certificate to server on TLS handshake and server establishes that the client certificate is either signed by a \n+proper/known CA. Otherwise, server trusts client certificate by reading the sha-256 fingerprint from known clients file specified above. \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d6047f8c867385149ba0c0346dba7de2007add3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1OTQ3MQ==", "bodyText": "Pretty sure the wrapping should look OK when merged.", "url": "https://github.com/hyperledger/besu/pull/312#discussion_r368759471", "createdAt": "2020-01-20T23:42:37Z", "author": {"login": "MadelineMurray"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,5 +1,32 @@\n # Changelog\n \n+## 1.4 Beta 2 \n+\n+### Additions and Improvements \n+\n+- Enable TLS for JSON-RPC HTTP Service [\\#253](https://github.com/hyperledger/besu/pull/253)\n+\n+Exposes =command line parameters to enable TLS on Ethereum JSON-RPC HTTP interface to allow clients like EthSigner to connect via TLS: \n+`--rpc-http-tls-enabled=true`\n+(Optional - Only required if `--rpc-http-enabled` is set to true) Set to `true` to enable TLS. False by default.\n+`--rpc-http-tls-keystore-file=\"/path/to/cert.pfx\"`\n+(Must be specified if TLS is enabled) Path to PKCS12 format key store which contains server's certificate and it's private key\n+`--rpc-http-tls-keystore-password-file=\"/path/to/cert.passwd\"`\n+(Must be specified if TLS is enabled) Path to the text file containing password for unlocking key store.\n+`--rpc-http-tls-known-clients-file=\"/path/to/rpc_tls_clients.txt\"`\n+(Optional) Path to a plain text file containing space separated client\u2019s certificate\u2019s common name and its sha-256 fingerprints when \n+they are not signed by a known CA. The presence of this file (even empty) enables TLS client authentication. That is, the client \n+presents the certificate to server on TLS handshake and server establishes that the client certificate is either signed by a \n+proper/known CA. Otherwise, server trusts client certificate by reading the sha-256 fingerprint from known clients file specified above. \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NzQwMQ=="}, "originalCommit": {"oid": "5d6047f8c867385149ba0c0346dba7de2007add3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1OTgzOQ==", "bodyText": "The wrapping will look like it does on https://github.com/hyperledger/besu/blob/07fb4fe164e5eaaf105e3c4a5e85f7c03c82e032/CHANGELOG.md", "url": "https://github.com/hyperledger/besu/pull/312#discussion_r368759839", "createdAt": "2020-01-20T23:44:57Z", "author": {"login": "EdJoJob"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,5 +1,32 @@\n # Changelog\n \n+## 1.4 Beta 2 \n+\n+### Additions and Improvements \n+\n+- Enable TLS for JSON-RPC HTTP Service [\\#253](https://github.com/hyperledger/besu/pull/253)\n+\n+Exposes =command line parameters to enable TLS on Ethereum JSON-RPC HTTP interface to allow clients like EthSigner to connect via TLS: \n+`--rpc-http-tls-enabled=true`\n+(Optional - Only required if `--rpc-http-enabled` is set to true) Set to `true` to enable TLS. False by default.\n+`--rpc-http-tls-keystore-file=\"/path/to/cert.pfx\"`\n+(Must be specified if TLS is enabled) Path to PKCS12 format key store which contains server's certificate and it's private key\n+`--rpc-http-tls-keystore-password-file=\"/path/to/cert.passwd\"`\n+(Must be specified if TLS is enabled) Path to the text file containing password for unlocking key store.\n+`--rpc-http-tls-known-clients-file=\"/path/to/rpc_tls_clients.txt\"`\n+(Optional) Path to a plain text file containing space separated client\u2019s certificate\u2019s common name and its sha-256 fingerprints when \n+they are not signed by a known CA. The presence of this file (even empty) enables TLS client authentication. That is, the client \n+presents the certificate to server on TLS handshake and server establishes that the client certificate is either signed by a \n+proper/known CA. Otherwise, server trusts client certificate by reading the sha-256 fingerprint from known clients file specified above. \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NzQwMQ=="}, "originalCommit": {"oid": "5d6047f8c867385149ba0c0346dba7de2007add3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc2MTc4NQ==", "bodyText": "And that doesnt look right", "url": "https://github.com/hyperledger/besu/pull/312#discussion_r368761785", "createdAt": "2020-01-20T23:57:20Z", "author": {"login": "arash009"}, "path": "CHANGELOG.md", "diffHunk": "@@ -1,5 +1,32 @@\n # Changelog\n \n+## 1.4 Beta 2 \n+\n+### Additions and Improvements \n+\n+- Enable TLS for JSON-RPC HTTP Service [\\#253](https://github.com/hyperledger/besu/pull/253)\n+\n+Exposes =command line parameters to enable TLS on Ethereum JSON-RPC HTTP interface to allow clients like EthSigner to connect via TLS: \n+`--rpc-http-tls-enabled=true`\n+(Optional - Only required if `--rpc-http-enabled` is set to true) Set to `true` to enable TLS. False by default.\n+`--rpc-http-tls-keystore-file=\"/path/to/cert.pfx\"`\n+(Must be specified if TLS is enabled) Path to PKCS12 format key store which contains server's certificate and it's private key\n+`--rpc-http-tls-keystore-password-file=\"/path/to/cert.passwd\"`\n+(Must be specified if TLS is enabled) Path to the text file containing password for unlocking key store.\n+`--rpc-http-tls-known-clients-file=\"/path/to/rpc_tls_clients.txt\"`\n+(Optional) Path to a plain text file containing space separated client\u2019s certificate\u2019s common name and its sha-256 fingerprints when \n+they are not signed by a known CA. The presence of this file (even empty) enables TLS client authentication. That is, the client \n+presents the certificate to server on TLS handshake and server establishes that the client certificate is either signed by a \n+proper/known CA. Otherwise, server trusts client certificate by reading the sha-256 fingerprint from known clients file specified above. \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1NzQwMQ=="}, "originalCommit": {"oid": "5d6047f8c867385149ba0c0346dba7de2007add3"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1185, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}