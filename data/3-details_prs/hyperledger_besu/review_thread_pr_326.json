{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDk1MzYx", "number": 326, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODowODoyMVrODaykKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODoxMDoyMFrODayl5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDE4MDI0OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/diff/StateDiffGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODowODoyMVrOFh6SZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODowODoyMVrOFh6SZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwMjMxMQ==", "bodyText": "(Suggestion) Maybe add final modifier. Same comment for multiple local variables in this method.", "url": "https://github.com/hyperledger/besu/pull/326#discussion_r371102311", "createdAt": "2020-01-27T08:08:21Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/diff/StateDiffGenerator.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.results.tracing.diff;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.processor.TransactionTrace;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.results.tracing.Trace;\n+import org.hyperledger.besu.ethereum.core.AbstractWorldUpdater;\n+import org.hyperledger.besu.ethereum.core.AbstractWorldUpdater.UpdateTrackingAccount;\n+import org.hyperledger.besu.ethereum.core.Account;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.core.WorldUpdater;\n+import org.hyperledger.besu.ethereum.debug.TraceFrame;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.TreeMap;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n+import org.apache.tuweni.units.bigints.UInt256;\n+\n+public class StateDiffGenerator {\n+\n+  public Stream<Trace> generateStateDiff(final TransactionTrace transactionTrace) {\n+    List<TraceFrame> traceFrames = transactionTrace.getTraceFrames();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c9b3473de834f6ec35c3a5c46c0fd012d59411"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NDE4NDcwOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/diff/StateDiffGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODoxMDoyMFrOFh6U8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwODoxMDoyMFrOFh6U8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTEwMjk2Mg==", "bodyText": "Why not  filtering the transactionUpdater.getTouchedAccounts Collection to have only UpdateTrackingAccount types ?", "url": "https://github.com/hyperledger/besu/pull/326#discussion_r371102962", "createdAt": "2020-01-27T08:10:20Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/results/tracing/diff/StateDiffGenerator.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ *\n+ */\n+\n+package org.hyperledger.besu.ethereum.api.jsonrpc.internal.results.tracing.diff;\n+\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.processor.TransactionTrace;\n+import org.hyperledger.besu.ethereum.api.jsonrpc.internal.results.tracing.Trace;\n+import org.hyperledger.besu.ethereum.core.AbstractWorldUpdater;\n+import org.hyperledger.besu.ethereum.core.AbstractWorldUpdater.UpdateTrackingAccount;\n+import org.hyperledger.besu.ethereum.core.Account;\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+import org.hyperledger.besu.ethereum.core.WorldUpdater;\n+import org.hyperledger.besu.ethereum.debug.TraceFrame;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.TreeMap;\n+import java.util.function.Function;\n+import java.util.stream.Stream;\n+\n+import org.apache.tuweni.units.bigints.UInt256;\n+\n+public class StateDiffGenerator {\n+\n+  public Stream<Trace> generateStateDiff(final TransactionTrace transactionTrace) {\n+    List<TraceFrame> traceFrames = transactionTrace.getTraceFrames();\n+    if (traceFrames.size() < 1) {\n+      return Stream.empty();\n+    }\n+\n+    // This corresponds to the world state after the TX executed\n+    // It is two deep because of the way we addressed Spurious Dragon.\n+    WorldUpdater transactionUpdater =\n+        traceFrames\n+            .get(0)\n+            .getMessageFrame()\n+            .getWorldState()\n+            .parentUpdater()\n+            .get()\n+            .parentUpdater()\n+            .get();\n+    // This corresponds to the world state prior to the TX execution,\n+    // Either the initial block state or the state of the prior TX\n+    WorldUpdater previousUpdater = transactionUpdater.parentUpdater().get();\n+\n+    StateDiffTrace stateDiffResult = new StateDiffTrace();\n+\n+    for (Account touchedAccount : transactionUpdater.getTouchedAccounts()) {\n+      if (!(touchedAccount instanceof AbstractWorldUpdater.UpdateTrackingAccount)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49c9b3473de834f6ec35c3a5c46c0fd012d59411"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1203, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}