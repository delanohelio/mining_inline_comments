{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5Mzk0MDE4", "number": 1552, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowNzo1MlrOE35Gjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoxMTo1MlrOE35K6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDQyNzAyOnYy", "diffSide": "RIGHT", "path": "plugins/rocksdb/src/main/java/org/hyperledger/besu/plugin/services/storage/rocksdb/segmented/RocksDBColumnarKeyValueStorage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowNzo1MlrOHxgDtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjowNzo1MlrOHxgDtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2NzUxMA==", "bodyText": "I know it's a runtime exception, but I think showing it in the signature makes it clear you should expect it.  I don't think we have a coding standard on this except for it must compile.", "url": "https://github.com/hyperledger/besu/pull/1552#discussion_r521667510", "createdAt": "2020-11-11T22:07:52Z", "author": {"login": "shemnon"}, "path": "plugins/rocksdb/src/main/java/org/hyperledger/besu/plugin/services/storage/rocksdb/segmented/RocksDBColumnarKeyValueStorage.java", "diffHunk": "@@ -147,8 +146,7 @@ public ColumnFamilyHandle getSegmentIdentifierByName(final SegmentIdentifier seg\n   }\n \n   @Override\n-  public Optional<byte[]> get(final ColumnFamilyHandle segment, final byte[] key)\n-      throws StorageException {\n+  public Optional<byte[]> get(final ColumnFamilyHandle segment, final byte[] key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f403d64722386f3b33525c601e9d21542738ce4"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MDQzODE5OnYy", "diffSide": "RIGHT", "path": "plugins/rocksdb/src/main/java/org/hyperledger/besu/plugin/services/storage/rocksdb/segmented/RocksDBColumnarKeyValueStorage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoxMTo1MlrOHxgKdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoxMTo1MlrOHxgKdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2OTIzNg==", "bodyText": "should we add this check on put, remove, and rollback?  as well as org.hyperledger.besu.plugin.services.storage.rocksdb.unsegmented.RocksDBTransaction?", "url": "https://github.com/hyperledger/besu/pull/1552#discussion_r521669236", "createdAt": "2020-11-11T22:11:52Z", "author": {"login": "shemnon"}, "path": "plugins/rocksdb/src/main/java/org/hyperledger/besu/plugin/services/storage/rocksdb/segmented/RocksDBColumnarKeyValueStorage.java", "diffHunk": "@@ -258,10 +256,13 @@ public void remove(final ColumnFamilyHandle segment, final byte[] key) {\n     }\n \n     @Override\n-    public void commit() throws StorageException {\n+    public void commit() {\n       try (final OperationTimer.TimingContext ignored = metrics.getCommitLatency().startTimer()) {\n         innerTx.commit();\n       } catch (final RocksDBException e) {\n+        if (e.getMessage().contains(\"No space left on device\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f403d64722386f3b33525c601e9d21542738ce4"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1330, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}