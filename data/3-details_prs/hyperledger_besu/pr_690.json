{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMjM1NTA5", "number": 690, "title": "Separate NodeKey from implementation", "bodyText": "PR description\nPrior to this PR, the BouncyCastleNodeKey inheritted from the NodeKey. However, this means the replaceable aspects of the pattern are complex (using besu-specific implementations of PublicKey and Signature).\nTo overcome this limitation, the NodeKey has-a BouncyCastleSecurityModule backing class (composition rather than inheritance). The SecurityModule interface now uses simplified Signature and Public Key classes.\nThis separates the Besu code (and NodeKey interface) from the types used by the underlying cryptographic/security provider.\nFixed Issue(s)\nN/A", "createdAt": "2020-04-09T06:31:36Z", "url": "https://github.com/hyperledger/besu/pull/690", "merged": true, "mergeCommit": {"oid": "57d0379bf5605257d7866ad988369627a944b452"}, "closed": true, "closedAt": "2020-04-14T05:33:17Z", "author": {"login": "rain-on"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV2lJCABqjMyMTY5NTA0NTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXcpK1gFqTM5MjYxMjM2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c6a5f3d2d44d4c1f506f93c5d6173a36e60521c", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/8c6a5f3d2d44d4c1f506f93c5d6173a36e60521c", "committedDate": "2020-04-09T06:25:57Z", "message": "Separate NodeKey from implementation\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}, "afterCommit": {"oid": "81cfd3598e2ea89c3091382340ca1c57c3eaf7da", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/81cfd3598e2ea89c3091382340ca1c57c3eaf7da", "committedDate": "2020-04-09T06:33:38Z", "message": "clean up\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTUwMzEx", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-390550311", "createdAt": "2020-04-09T07:27:15Z", "commit": {"oid": "81cfd3598e2ea89c3091382340ca1c57c3eaf7da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzoyNzoxNVrOGDMuyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzoyNzoxNVrOGDMuyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwNzQ5OA==", "bodyText": "For consistency with other files in this PR, I'd recommend the Besu classes not being fully qualified (e.g. Signature) and instead having the Tuweni classes with SECP256K1 prefix instead.", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r406007498", "createdAt": "2020-04-09T07:27:15Z", "author": {"login": "CjHare"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -14,16 +14,42 @@\n  */\n package org.hyperledger.besu.crypto;\n \n+import org.hyperledger.besu.crypto.SECP256K1.KeyPair;\n import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n import org.hyperledger.besu.crypto.SECP256K1.Signature;\n \n import org.apache.tuweni.bytes.Bytes32;\n \n-public interface NodeKey {\n+public class NodeKey {\n \n-  Signature sign(Bytes32 dataHash);\n+  private final SecurityModule crypto;\n \n-  PublicKey getPublicKey();\n+  public NodeKey(final SecurityModule crypto) {\n+    this.crypto = crypto;\n+  }\n \n-  Bytes32 calculateECDHKeyAgreement(PublicKey publicKey);\n+  public Signature sign(final Bytes32 dataHash) {\n+    org.hyperledger.besu.crypto.Signature signature = crypto.sign(dataHash);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81cfd3598e2ea89c3091382340ca1c57c3eaf7da"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTUxMTg5", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-390551189", "createdAt": "2020-04-09T07:28:40Z", "commit": {"oid": "81cfd3598e2ea89c3091382340ca1c57c3eaf7da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzoyODo0MFrOGDMxhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzoyODo0MFrOGDMxhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwODE5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * interface ensures cryptographic functions required by an Ethereum are available to the\n          \n          \n            \n             * interface ensures cryptographic functions required by Ethereum are available to the", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r406008196", "createdAt": "2020-04-09T07:28:40Z", "author": {"login": "CjHare"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/SecurityModule.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import org.apache.tuweni.bytes.Bytes32;\n+\n+/**\n+ * Provides a generic interface for classes which wrap/hide a cryptographic private key. This\n+ * interface ensures cryptographic functions required by an Ethereum are available to the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81cfd3598e2ea89c3091382340ca1c57c3eaf7da"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTUyNzQ1", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-390552745", "createdAt": "2020-04-09T07:31:20Z", "commit": {"oid": "81cfd3598e2ea89c3091382340ca1c57c3eaf7da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzozMToyMFrOGDM2mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNzozMToyMFrOGDM2mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjAwOTQ5Ng==", "bodyText": "Suggestion: maybe a name like recoveryIndex would be more fitting for this variable, as recId didn't mean anything to me until I read this class.", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r406009496", "createdAt": "2020-04-09T07:31:20Z", "author": {"login": "CjHare"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/Signature.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import java.math.BigInteger;\n+\n+public final class Signature {\n+\n+  /**\n+   * The recovery id to reconstruct the public key used to create the signature.\n+   *\n+   * <p>The recId is an index from 0 to 3 which indicates which of the 4 possible keys is the\n+   * correct one. Because the key recovery operation yields multiple potential keys, the correct key\n+   * must either be stored alongside the signature, or you must be willing to try each recId in turn\n+   * until you find one that outputs the key you are expecting.\n+   */\n+  private final byte recId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81cfd3598e2ea89c3091382340ca1c57c3eaf7da"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTU0NDkw", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-390554490", "createdAt": "2020-04-09T07:34:17Z", "commit": {"oid": "81cfd3598e2ea89c3091382340ca1c57c3eaf7da"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTI3MDA4", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-392527008", "createdAt": "2020-04-14T00:32:30Z", "commit": {"oid": "c13393d4eb2e30e18bd1138dc0401f2d25e8ccd8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/2c26078413dc4cf85e7262ad7eb7839280444d3c", "committedDate": "2020-04-14T00:56:55Z", "message": "Separate nodekey from implementation\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "687b92e76b0fdc9ee46b794548a64c293fc071d0", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/687b92e76b0fdc9ee46b794548a64c293fc071d0", "committedDate": "2020-04-14T00:47:02Z", "message": "Post review\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}, "afterCommit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/2c26078413dc4cf85e7262ad7eb7839280444d3c", "committedDate": "2020-04-14T00:56:55Z", "message": "Separate nodekey from implementation\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTM1MTI2", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-392535126", "createdAt": "2020-04-14T00:59:54Z", "commit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMDo1OTo1NFrOGE6Z7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMDo1OTo1NFrOGE6Z7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwNDM5Nw==", "bodyText": "This can be now \"non-quailfied\" as Signature signature = crypto.sign(dataHash);", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407804397", "createdAt": "2020-04-14T00:59:54Z", "author": {"login": "usmansaleem"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -14,16 +14,38 @@\n  */\n package org.hyperledger.besu.crypto;\n \n-import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n-import org.hyperledger.besu.crypto.SECP256K1.Signature;\n-\n import org.apache.tuweni.bytes.Bytes32;\n \n-public interface NodeKey {\n+public class NodeKey {\n+\n+  private final SecurityModule crypto;\n+\n+  public NodeKey(final SecurityModule crypto) {\n+    this.crypto = crypto;\n+  }\n+\n+  public SECP256K1.Signature sign(final Bytes32 dataHash) {\n+    org.hyperledger.besu.crypto.Signature signature = crypto.sign(dataHash);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTM1NDI3", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-392535427", "createdAt": "2020-04-14T01:00:52Z", "commit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMTowMDo1MlrOGE6a-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMTowMDo1MlrOGE6a-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwNDY2Nw==", "bodyText": "no need to use fully qualified constructor now.", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407804667", "createdAt": "2020-04-14T01:00:52Z", "author": {"login": "usmansaleem"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -14,16 +14,38 @@\n  */\n package org.hyperledger.besu.crypto;\n \n-import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n-import org.hyperledger.besu.crypto.SECP256K1.Signature;\n-\n import org.apache.tuweni.bytes.Bytes32;\n \n-public interface NodeKey {\n+public class NodeKey {\n+\n+  private final SecurityModule crypto;\n+\n+  public NodeKey(final SecurityModule crypto) {\n+    this.crypto = crypto;\n+  }\n+\n+  public SECP256K1.Signature sign(final Bytes32 dataHash) {\n+    org.hyperledger.besu.crypto.Signature signature = crypto.sign(dataHash);\n+    return SECP256K1.Signature.create(\n+        signature.getR(), signature.getS(), signature.getRecoveryId());\n+  }\n+\n+  public PublicKey getPublicKey() {\n+    org.hyperledger.besu.crypto.PublicKey pubKey = crypto.getPublicKey();\n+    return PublicKey.create(pubKey.getEncoded());\n+  }\n+\n+  public Bytes32 calculateECDHKeyAgreement(final SECP256K1.PublicKey partyKey) {\n+    PublicKey pubKey = new org.hyperledger.besu.crypto.PublicKey(partyKey.getEncodedBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTM2Mzc4", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-392536378", "createdAt": "2020-04-14T01:04:01Z", "commit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMTowNDowMVrOGE6eXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMToxNjo1MlrOGE6r5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwNTUzNQ==", "bodyText": "nit: final", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407805535", "createdAt": "2020-04-14T01:04:01Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -14,16 +14,38 @@\n  */\n package org.hyperledger.besu.crypto;\n \n-import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n-import org.hyperledger.besu.crypto.SECP256K1.Signature;\n-\n import org.apache.tuweni.bytes.Bytes32;\n \n-public interface NodeKey {\n+public class NodeKey {\n+\n+  private final SecurityModule crypto;\n+\n+  public NodeKey(final SecurityModule crypto) {\n+    this.crypto = crypto;\n+  }\n+\n+  public SECP256K1.Signature sign(final Bytes32 dataHash) {\n+    org.hyperledger.besu.crypto.Signature signature = crypto.sign(dataHash);\n+    return SECP256K1.Signature.create(\n+        signature.getR(), signature.getS(), signature.getRecoveryId());\n+  }\n+\n+  public PublicKey getPublicKey() {\n+    org.hyperledger.besu.crypto.PublicKey pubKey = crypto.getPublicKey();\n+    return PublicKey.create(pubKey.getEncoded());\n+  }\n+\n+  public Bytes32 calculateECDHKeyAgreement(final SECP256K1.PublicKey partyKey) {\n+    PublicKey pubKey = new org.hyperledger.besu.crypto.PublicKey(partyKey.getEncodedBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwNTk0Mw==", "bodyText": "nit: final", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407805943", "createdAt": "2020-04-14T01:05:34Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -14,16 +14,38 @@\n  */\n package org.hyperledger.besu.crypto;\n \n-import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n-import org.hyperledger.besu.crypto.SECP256K1.Signature;\n-\n import org.apache.tuweni.bytes.Bytes32;\n \n-public interface NodeKey {\n+public class NodeKey {\n+\n+  private final SecurityModule crypto;\n+\n+  public NodeKey(final SecurityModule crypto) {\n+    this.crypto = crypto;\n+  }\n+\n+  public SECP256K1.Signature sign(final Bytes32 dataHash) {\n+    org.hyperledger.besu.crypto.Signature signature = crypto.sign(dataHash);\n+    return SECP256K1.Signature.create(\n+        signature.getR(), signature.getS(), signature.getRecoveryId());\n+  }\n+\n+  public PublicKey getPublicKey() {\n+    org.hyperledger.besu.crypto.PublicKey pubKey = crypto.getPublicKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwNjA4NA==", "bodyText": "Rename crypto to securityModule to be consistent with param type", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407806084", "createdAt": "2020-04-14T01:06:05Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -14,16 +14,38 @@\n  */\n package org.hyperledger.besu.crypto;\n \n-import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n-import org.hyperledger.besu.crypto.SECP256K1.Signature;\n-\n import org.apache.tuweni.bytes.Bytes32;\n \n-public interface NodeKey {\n+public class NodeKey {\n+\n+  private final SecurityModule crypto;\n+\n+  public NodeKey(final SecurityModule crypto) {\n+    this.crypto = crypto;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwNjk3NA==", "bodyText": "Not sure this belongs in this class, is this only ever used in testing? It looks like it is?", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407806974", "createdAt": "2020-04-14T01:09:14Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -14,16 +14,38 @@\n  */\n package org.hyperledger.besu.crypto;\n \n-import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n-import org.hyperledger.besu.crypto.SECP256K1.Signature;\n-\n import org.apache.tuweni.bytes.Bytes32;\n \n-public interface NodeKey {\n+public class NodeKey {\n+\n+  private final SecurityModule crypto;\n+\n+  public NodeKey(final SecurityModule crypto) {\n+    this.crypto = crypto;\n+  }\n+\n+  public SECP256K1.Signature sign(final Bytes32 dataHash) {\n+    org.hyperledger.besu.crypto.Signature signature = crypto.sign(dataHash);\n+    return SECP256K1.Signature.create(\n+        signature.getR(), signature.getS(), signature.getRecoveryId());\n+  }\n+\n+  public PublicKey getPublicKey() {\n+    org.hyperledger.besu.crypto.PublicKey pubKey = crypto.getPublicKey();\n+    return PublicKey.create(pubKey.getEncoded());\n+  }\n+\n+  public Bytes32 calculateECDHKeyAgreement(final SECP256K1.PublicKey partyKey) {\n+    PublicKey pubKey = new org.hyperledger.besu.crypto.PublicKey(partyKey.getEncodedBytes());\n \n-  Signature sign(Bytes32 dataHash);\n+    return crypto.calculateECDHKeyAgreement(pubKey);\n+  }\n \n-  PublicKey getPublicKey();\n+  public static NodeKey createFrom(final SECP256K1.KeyPair keyPair) {\n+    return new NodeKey(new BouncyCastleSecurityModule(keyPair));\n+  }\n \n-  Bytes32 calculateECDHKeyAgreement(PublicKey publicKey);\n+  public static NodeKey generate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwNzE0NQ==", "bodyText": "This also looks like it is only needed for test code?", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407807145", "createdAt": "2020-04-14T01:09:51Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/NodeKey.java", "diffHunk": "@@ -14,16 +14,38 @@\n  */\n package org.hyperledger.besu.crypto;\n \n-import org.hyperledger.besu.crypto.SECP256K1.PublicKey;\n-import org.hyperledger.besu.crypto.SECP256K1.Signature;\n-\n import org.apache.tuweni.bytes.Bytes32;\n \n-public interface NodeKey {\n+public class NodeKey {\n+\n+  private final SecurityModule crypto;\n+\n+  public NodeKey(final SecurityModule crypto) {\n+    this.crypto = crypto;\n+  }\n+\n+  public SECP256K1.Signature sign(final Bytes32 dataHash) {\n+    org.hyperledger.besu.crypto.Signature signature = crypto.sign(dataHash);\n+    return SECP256K1.Signature.create(\n+        signature.getR(), signature.getS(), signature.getRecoveryId());\n+  }\n+\n+  public PublicKey getPublicKey() {\n+    org.hyperledger.besu.crypto.PublicKey pubKey = crypto.getPublicKey();\n+    return PublicKey.create(pubKey.getEncoded());\n+  }\n+\n+  public Bytes32 calculateECDHKeyAgreement(final SECP256K1.PublicKey partyKey) {\n+    PublicKey pubKey = new org.hyperledger.besu.crypto.PublicKey(partyKey.getEncodedBytes());\n \n-  Signature sign(Bytes32 dataHash);\n+    return crypto.calculateECDHKeyAgreement(pubKey);\n+  }\n \n-  PublicKey getPublicKey();\n+  public static NodeKey createFrom(final SECP256K1.KeyPair keyPair) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c26078413dc4cf85e7262ad7eb7839280444d3c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwODExOA==", "bodyText": "This name doesn't quite seem right as it's wrapping a private key, it's not a general security module. Not a great name either but perhaps PrivateKeySecurityModule?", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407808118", "createdAt": "2020-04-14T01:13:30Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/SecurityModule.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import org.apache.tuweni.bytes.Bytes32;\n+\n+/**\n+ * Provides a generic interface for classes which wrap/hide a cryptographic private key. This\n+ * interface ensures cryptographic functions required by Ethereum are available to the application\n+ * at large, without releasing the content of the private key.\n+ */\n+public interface SecurityModule {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d68afa350c7f4ee79ff1004c0d49ae6fdcef305c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgwODk5Nw==", "bodyText": "Since there is only one key agreement now, we could just name this calculateKeyAgreement", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407808997", "createdAt": "2020-04-14T01:16:52Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/SecurityModule.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import org.apache.tuweni.bytes.Bytes32;\n+\n+/**\n+ * Provides a generic interface for classes which wrap/hide a cryptographic private key. This\n+ * interface ensures cryptographic functions required by Ethereum are available to the application\n+ * at large, without releasing the content of the private key.\n+ */\n+public interface SecurityModule {\n+\n+  /**\n+   * @param dataHash The Keccack hash of a set of data, which is to be signed.\n+   * @return the signature (R, S, recId) generated by signing the hash with the node key\n+   */\n+  Signature sign(Bytes32 dataHash);\n+\n+  /** @return the public key associated with the key stored behind this interface. */\n+  PublicKey getPublicKey();\n+\n+  /**\n+   * @param partyKey the key with which an agreement is to be created.\n+   * @return The bytes forming the agreement\n+   */\n+  Bytes32 calculateECDHKeyAgreement(PublicKey partyKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d68afa350c7f4ee79ff1004c0d49ae6fdcef305c"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e956e731faabbe2e564efae9acb3eb33984858c6", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/e956e731faabbe2e564efae9acb3eb33984858c6", "committedDate": "2020-04-14T01:19:58Z", "message": "clean up extraneous qualifiers\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d68afa350c7f4ee79ff1004c0d49ae6fdcef305c", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/d68afa350c7f4ee79ff1004c0d49ae6fdcef305c", "committedDate": "2020-04-14T01:06:38Z", "message": "clean up extraneous qualifiers"}, "afterCommit": {"oid": "e956e731faabbe2e564efae9acb3eb33984858c6", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/e956e731faabbe2e564efae9acb3eb33984858c6", "committedDate": "2020-04-14T01:19:58Z", "message": "clean up extraneous qualifiers\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTQxOTMy", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-392541932", "createdAt": "2020-04-14T01:22:34Z", "commit": {"oid": "e956e731faabbe2e564efae9acb3eb33984858c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMToyMjozNFrOGE6x9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMToyMjozNFrOGE6x9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgxMDU1MA==", "bodyText": "this wasn't there before, is that hidden character or something erroneous get copied?", "url": "https://github.com/hyperledger/besu/pull/690#discussion_r407810550", "createdAt": "2020-04-14T01:22:34Z", "author": {"login": "usmansaleem"}, "path": "crypto/src/test/java/org/hyperledger/besu/crypto/SECP256K1Test.java", "diffHunk": "@@ -280,3 +280,4 @@ public void invalidMultiLineFileThrowsInvalidIdException() throws Exception {\n     KeyPairUtil.load(tempFile);\n   }\n }\n+\u2030", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e956e731faabbe2e564efae9acb3eb33984858c6"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7c5b9ab37cc6a79337d48da35b2188774623ae1", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/f7c5b9ab37cc6a79337d48da35b2188774623ae1", "committedDate": "2020-04-14T01:26:47Z", "message": "fix secp256k1test\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a01026119caa941017c9fd9ee528d5e98a0550ea", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/a01026119caa941017c9fd9ee528d5e98a0550ea", "committedDate": "2020-04-14T01:52:00Z", "message": "fix more\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8f6d87222358e98ae7f8f13ee22f88ece750cd1", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/b8f6d87222358e98ae7f8f13ee22f88ece750cd1", "committedDate": "2020-04-14T02:55:05Z", "message": "using NodeKeyUtils\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7e2cf64e4fb148a6eb262bd55c3d7ca2864bc66", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/e7e2cf64e4fb148a6eb262bd55c3d7ca2864bc66", "committedDate": "2020-04-14T01:56:10Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}, "afterCommit": {"oid": "b8f6d87222358e98ae7f8f13ee22f88ece750cd1", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/b8f6d87222358e98ae7f8f13ee22f88ece750cd1", "committedDate": "2020-04-14T02:55:05Z", "message": "using NodeKeyUtils\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTg3ODA1", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-392587805", "createdAt": "2020-04-14T03:59:02Z", "commit": {"oid": "b8f6d87222358e98ae7f8f13ee22f88ece750cd1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTg5NjMx", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-392589631", "createdAt": "2020-04-14T04:06:25Z", "commit": {"oid": "b8f6d87222358e98ae7f8f13ee22f88ece750cd1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec6abdc8bcdce9f1cb5dc7feaf31d1ee46ee251c", "author": {"user": null}, "url": "https://github.com/hyperledger/besu/commit/ec6abdc8bcdce9f1cb5dc7feaf31d1ee46ee251c", "committedDate": "2020-04-14T05:02:53Z", "message": "Merge remote-tracking branch 'upstream/master' into sep_nk2\n\nSigned-off-by: Trent Mohay <trent.mohay@consensys.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNjEyMzY5", "url": "https://github.com/hyperledger/besu/pull/690#pullrequestreview-392612369", "createdAt": "2020-04-14T05:28:39Z", "commit": {"oid": "ec6abdc8bcdce9f1cb5dc7feaf31d1ee46ee251c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1704, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}