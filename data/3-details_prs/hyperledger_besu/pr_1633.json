{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4OTYzNjE1", "number": 1633, "title": "Add epochStartBlock function to EpochCalculator interface", "bodyText": "PR description\nThis PR fixes an issue that was discovered after ECIP-1099 was implemented where the change in epoch length caused dag seed calculation to be incorrect.  This causes an issue where imported blocks were failing validation on the Mordor testnet.  The changes outlined here fix this issue.\n\nThis PR changes epoch calculator from Function<Long, Long> to in EpochCalculator interface.\nEpochCalculator interface defines function cacheEpoch(final long block) which replicates what the epoch calculator function did.\nEpochCalculator interface defines function epochStartBlock(final long block) which calculates the starting block number for that block's epoch.  This is use by dagSeed function.\nCreated function byte[] dagSeed(final long block, final EpochCalculator epochCalculator) which used the epochCalculator to determine starting block number to use for dag seed calculation.\n\nFixed Issue(s)\n\n\nChangelog\n\n I thought about the changelog and included a changelog update if required.", "createdAt": "2020-11-28T15:39:06Z", "url": "https://github.com/hyperledger/besu/pull/1633", "merged": true, "mergeCommit": {"oid": "7b695c7c99afbd8301aba3411e942d5d8fa7ff14"}, "closed": true, "closedAt": "2020-11-29T13:40:09Z", "author": {"login": "edwardmack"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfxyeVAH2gAyNTI4OTYzNjE1OjM5Mzc4NjQ2YTQwNDhmMTk4YTlkYTMwYmE4MDlkMDIzOWJiYjc0YzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhQTurAH2gAyNTI4OTYzNjE1OjBlNWU3ODc0MjZiYjVhZTY2NjgyZTkzM2E2YmM2YTc4MGUyZThhMzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39378646a4048f198a9da30ba809d0239bbb74c1", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/39378646a4048f198a9da30ba809d0239bbb74c1", "committedDate": "2020-11-24T22:49:22Z", "message": "expose epochCalculator to MiningCoordinator\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99c83d3db55fe318b53999bfd451a331a1b0bf15", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/99c83d3db55fe318b53999bfd451a331a1b0bf15", "committedDate": "2020-11-27T15:47:22Z", "message": "replace epochCalculator Function with interface\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f87b84822b9b9a0f165356f96c4c7335838f5a6", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/6f87b84822b9b9a0f165356f96c4c7335838f5a6", "committedDate": "2020-11-27T19:44:15Z", "message": "apply spotless, clean-up tests\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fe9381c31a8531590b259052d7bde5fe92a56b7", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/1fe9381c31a8531590b259052d7bde5fe92a56b7", "committedDate": "2020-11-27T22:24:13Z", "message": "cleanup comments, fix more tests\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d9fb48848a64b7c24f412cae0d89912b17992e7", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/3d9fb48848a64b7c24f412cae0d89912b17992e7", "committedDate": "2020-11-28T00:04:26Z", "message": "fixing failures from testing\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e50fb41e4d6691fdc8677b3e405d724c2338c13f", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/e50fb41e4d6691fdc8677b3e405d724c2338c13f", "committedDate": "2020-11-28T14:10:29Z", "message": "modify dagSeed calculator to use epochCalculator\n\nepochStartBlock to determine epoch start block based on current epoch\nlength.\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebc8e062bb3299db68116db3108c2d6c296c08f1", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/ebc8e062bb3299db68116db3108c2d6c296c08f1", "committedDate": "2020-11-28T14:41:13Z", "message": "add epochCalculator to StratumConnectionTest\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3284ee4a1b138f792686e3a8db7af9d1d82783", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/9e3284ee4a1b138f792686e3a8db7af9d1d82783", "committedDate": "2020-11-28T15:05:03Z", "message": "apply spotless\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ebf97d2b06275b1faa403340f10895e63a218a8", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/0ebf97d2b06275b1faa403340f10895e63a218a8", "committedDate": "2020-11-28T15:21:28Z", "message": "remove unnecessary comments\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/1fbfe3214ae172652b6e3233ebc9087d99618198", "committedDate": "2020-11-28T15:42:34Z", "message": "Merge branch 'master' into ed/update_dagSeed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDE2OTE1", "url": "https://github.com/hyperledger/besu/pull/1633#pullrequestreview-540416915", "createdAt": "2020-11-28T20:49:26Z", "commit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMDo0OToyN1rOH7dHig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMTowNDozMVrOH7dNRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNTA5OA==", "bodyText": "For better or worse this RPC is instantiated for non-pow networks.  We need to initialize default values if it is not a PoW miner:\n  public EthGetWork(final MiningCoordinator miner) {\n    this.miner = miner;\n    if (miner instanceof EthHashMiningCoordinator) {\n      this.epochCalculator = ((EthHashMiningCoordinator) miner).getEpochCalculator();\n    } else {\n      this.epochCalculator = new EpochCalculator.DefaultEpochCalculator();\n    }\n  }", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532105098", "createdAt": "2020-11-28T20:49:27Z", "author": {"login": "shemnon"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthGetWork.java", "diffHunk": "@@ -36,9 +38,14 @@\n \n   private final MiningCoordinator miner;\n   private static final Logger LOG = getLogger();\n+  private final EpochCalculator epochCalculator;\n \n   public EthGetWork(final MiningCoordinator miner) {\n+    if (!(miner instanceof EthHashMiningCoordinator)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNTIzNg==", "bodyText": "We don't need activationBlock, and it runs against the patterns used in other hard fork configuration objects so it should be removed along with all dependents.  The Protocol Schedules will ensure that this calculator is only applied to thanos blocks and that for classic blocks pre-thanos a default epoch calculator is used.", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532105236", "createdAt": "2020-11-28T20:50:29Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/EpochCalculator.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.mainnet;\n+\n+public interface EpochCalculator {\n+  public long epochStartBlock(final long block);\n+\n+  public long cacheEpoch(final long block);\n+\n+  final class DefaultEpochCalculator implements EpochCalculator {\n+\n+    @Override\n+    public long epochStartBlock(final long block) {\n+      return cacheEpoch(block) * EthHash.EPOCH_LENGTH + 1;\n+    }\n+\n+    @Override\n+    public long cacheEpoch(final long block) {\n+      return Long.divideUnsigned(block, EthHash.EPOCH_LENGTH);\n+    }\n+  }\n+\n+  final class Ecip1099EpochCalculator implements EpochCalculator {\n+    private final long activationBlock;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNTM4OA==", "bodyText": "Just the second clause should remain.", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532105388", "createdAt": "2020-11-28T20:51:46Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/EpochCalculator.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.mainnet;\n+\n+public interface EpochCalculator {\n+  public long epochStartBlock(final long block);\n+\n+  public long cacheEpoch(final long block);\n+\n+  final class DefaultEpochCalculator implements EpochCalculator {\n+\n+    @Override\n+    public long epochStartBlock(final long block) {\n+      return cacheEpoch(block) * EthHash.EPOCH_LENGTH + 1;\n+    }\n+\n+    @Override\n+    public long cacheEpoch(final long block) {\n+      return Long.divideUnsigned(block, EthHash.EPOCH_LENGTH);\n+    }\n+  }\n+\n+  final class Ecip1099EpochCalculator implements EpochCalculator {\n+    private final long activationBlock;\n+\n+    public Ecip1099EpochCalculator(final long activationBlock) {\n+      this.activationBlock = activationBlock;\n+    }\n+\n+    /** calculate start block given epoch */\n+    @Override\n+    public long epochStartBlock(final long block) {\n+      long epoch = cacheEpoch(block);\n+      return block < activationBlock\n+          ? epoch * EthHash.EPOCH_LENGTH + 1\n+          : epoch * (EthHash.EPOCH_LENGTH * 2) + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNTQwMg==", "bodyText": "Just the second clause should remain.", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532105402", "createdAt": "2020-11-28T20:51:55Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/EpochCalculator.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.mainnet;\n+\n+public interface EpochCalculator {\n+  public long epochStartBlock(final long block);\n+\n+  public long cacheEpoch(final long block);\n+\n+  final class DefaultEpochCalculator implements EpochCalculator {\n+\n+    @Override\n+    public long epochStartBlock(final long block) {\n+      return cacheEpoch(block) * EthHash.EPOCH_LENGTH + 1;\n+    }\n+\n+    @Override\n+    public long cacheEpoch(final long block) {\n+      return Long.divideUnsigned(block, EthHash.EPOCH_LENGTH);\n+    }\n+  }\n+\n+  final class Ecip1099EpochCalculator implements EpochCalculator {\n+    private final long activationBlock;\n+\n+    public Ecip1099EpochCalculator(final long activationBlock) {\n+      this.activationBlock = activationBlock;\n+    }\n+\n+    /** calculate start block given epoch */\n+    @Override\n+    public long epochStartBlock(final long block) {\n+      long epoch = cacheEpoch(block);\n+      return block < activationBlock\n+          ? epoch * EthHash.EPOCH_LENGTH + 1\n+          : epoch * (EthHash.EPOCH_LENGTH * 2) + 1;\n+    }\n+\n+    @Override\n+    public long cacheEpoch(final long block) {\n+      return block < activationBlock\n+          ? Long.divideUnsigned(block, EthHash.EPOCH_LENGTH)\n+          : Long.divideUnsigned(block, EthHash.EPOCH_LENGTH * 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNTU0OA==", "bodyText": "Since this is private and single use it should be un-wrapped inside of the two-arg dagSeed method.", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532105548", "createdAt": "2020-11-28T20:53:47Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/DirectAcyclicGraphSeed.java", "diffHunk": "@@ -35,7 +35,7 @@\n             }\n           });\n \n-  public static byte[] dagSeed(final long block) {\n+  private static byte[] dagSeed(final long block) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNTY2Nw==", "bodyText": "dog->dag\n\ud83d\udc36", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532105667", "createdAt": "2020-11-28T20:55:06Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/DirectAcyclicGraphSeed.java", "diffHunk": "@@ -50,4 +50,16 @@\n     }\n     return seed;\n   }\n+\n+  /**\n+   * Calculates dog seed to use for generating a verification cache and the mining dataset.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNjI4Mg==", "bodyText": "(a) rather than testing a before/after activation block (which per another comment I think we should get rid of the activation block) we should test early (somewhere in the first 30k blocks) vs late (somewhere in the last 30k blocks)\n(b) we don't test epochStartBlock, this seems like a reasonable place to add that as a unit test.", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532106282", "createdAt": "2020-11-28T21:01:20Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/mainnet/EtcHashTest.java", "diffHunk": "@@ -14,21 +14,19 @@\n  */\n package org.hyperledger.besu.ethereum.mainnet;\n \n-import java.util.function.Function;\n-\n import org.assertj.core.api.Assertions;\n import org.junit.Test;\n \n public class EtcHashTest {\n \n   @Test\n   public void testEpoch() {\n-    Function<Long, Long> epochCalculator = EthHash.ecip1099Epoch(2_000_000);\n+    EpochCalculator epochCalculator = new EpochCalculator.Ecip1099EpochCalculator(2_000_000);\n \n     // check before activation block (1,000,000/30,000 = 33)\n-    Assertions.assertThat(epochCalculator.apply(1_000_000L)).isEqualTo(33);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNjUxOQ==", "bodyText": "We need a message in this throw, something like \"Stratum1 Proxies require an EthHashMiningCoordinator not \" + (miningCoordinator == null) ? \"null\" : miningCoordinator.getClass().getName()", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532106519", "createdAt": "2020-11-28T21:04:13Z", "author": {"login": "shemnon"}, "path": "ethereum/stratum/src/main/java/org/hyperledger/besu/ethereum/stratum/Stratum1EthProxyProtocol.java", "diffHunk": "@@ -49,9 +51,14 @@\n   private final MiningCoordinator miningCoordinator;\n   private EthHashSolverInputs currentInput;\n   private Function<EthHashSolution, Boolean> submitCallback;\n+  private final EpochCalculator epochCalculator;\n \n   public Stratum1EthProxyProtocol(final MiningCoordinator miningCoordinator) {\n+    if (!(miningCoordinator instanceof EthHashMiningCoordinator)) {\n+      throw new IllegalArgumentException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwNjU2NA==", "bodyText": "Again, the exception needs a message.", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532106564", "createdAt": "2020-11-28T21:04:31Z", "author": {"login": "shemnon"}, "path": "ethereum/stratum/src/main/java/org/hyperledger/besu/ethereum/stratum/Stratum1Protocol.java", "diffHunk": "@@ -80,10 +83,14 @@ public Stratum1Protocol(final String extranonce, final MiningCoordinator miningC\n       final MiningCoordinator miningCoordinator,\n       final Supplier<String> jobIdSupplier,\n       final Supplier<String> subscriptionIdCreator) {\n+    if (!(miningCoordinator instanceof EthHashMiningCoordinator)) {\n+      throw new IllegalArgumentException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbfe3214ae172652b6e3233ebc9087d99618198"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "424e956dfe163ba3b282e1d81cd66de5ff398355", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/424e956dfe163ba3b282e1d81cd66de5ff398355", "committedDate": "2020-11-28T23:08:26Z", "message": "remove activation block from Ecip1099EpochCalculator\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f2891d302dcc8bb462df9d6ba77ee19c80585c6", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/4f2891d302dcc8bb462df9d6ba77ee19c80585c6", "committedDate": "2020-11-28T23:24:33Z", "message": "add messages to IllegalArgumentExceptions, init epochCalculator\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a445c974e1eec75dfb0129760bcbe54063027598", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/a445c974e1eec75dfb0129760bcbe54063027598", "committedDate": "2020-11-28T23:29:01Z", "message": "un-wrap private dagSeed method\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2239b1d625bfdca66dd500450eaec8c0356fca4d", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/2239b1d625bfdca66dd500450eaec8c0356fca4d", "committedDate": "2020-11-28T23:30:48Z", "message": "fix typo\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e60cbe28b0d126079367c6a4e7e25e4221523ff", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/4e60cbe28b0d126079367c6a4e7e25e4221523ff", "committedDate": "2020-11-28T23:40:31Z", "message": "add unit tests for epochStartBlock functions\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fccc18586b6fe8796310d8ff6361a67f3783c48", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/2fccc18586b6fe8796310d8ff6361a67f3783c48", "committedDate": "2020-11-28T23:42:40Z", "message": "Merge branch 'ed/update_dagSeed' of https://github.com/ChainSafe/besu into ed/update_dagSeed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDQzMTQ3", "url": "https://github.com/hyperledger/besu/pull/1633#pullrequestreview-540443147", "createdAt": "2020-11-29T03:01:14Z", "commit": {"oid": "2fccc18586b6fe8796310d8ff6361a67f3783c48"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMzowMToxNFrOH7fP3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMzowMToxNFrOH7fP3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEzOTk5OQ==", "bodyText": "This field is unused.", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532139999", "createdAt": "2020-11-29T03:01:14Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/ClassicProtocolSpecs.java", "diffHunk": "@@ -220,7 +220,8 @@ public static ProtocolSpecBuilder thanosDefinition(\n       final OptionalInt configStackSizeLimit,\n       final boolean enableRevertReason,\n       final OptionalLong ecip1017EraRounds,\n-      final boolean quorumCompatibilityMode) {\n+      final boolean quorumCompatibilityMode,\n+      final OptionalLong activationBlock) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fccc18586b6fe8796310d8ff6361a67f3783c48"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDQzMTc1", "url": "https://github.com/hyperledger/besu/pull/1633#pullrequestreview-540443175", "createdAt": "2020-11-29T03:01:59Z", "commit": {"oid": "2fccc18586b6fe8796310d8ff6361a67f3783c48"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMzowMTo1OVrOH7fSIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMzowMTo1OVrOH7fSIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE0MDU3OQ==", "bodyText": "This field is not needed.", "url": "https://github.com/hyperledger/besu/pull/1633#discussion_r532140579", "createdAt": "2020-11-29T03:01:59Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/ProtocolScheduleBuilder.java", "diffHunk": "@@ -306,7 +306,8 @@ public ProtocolSchedule createProtocolSchedule() {\n             config.getEvmStackSize(),\n             isRevertReasonEnabled,\n             config.getEcip1017EraRounds(),\n-            quorumCompatibilityMode));\n+            quorumCompatibilityMode,\n+            config.getThanosBlockNumber()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fccc18586b6fe8796310d8ff6361a67f3783c48"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDQzMTkz", "url": "https://github.com/hyperledger/besu/pull/1633#pullrequestreview-540443193", "createdAt": "2020-11-29T03:02:42Z", "commit": {"oid": "2fccc18586b6fe8796310d8ff6361a67f3783c48"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e5e787426bb5ae66682e933a6bc6a780e2e8a30", "author": {"user": {"login": "edwardmack", "name": "Edward Mack"}}, "url": "https://github.com/hyperledger/besu/commit/0e5e787426bb5ae66682e933a6bc6a780e2e8a30", "committedDate": "2020-11-29T12:56:46Z", "message": "remove unused field\n\nSigned-off-by: Edward Mack <ed@edwardmack.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2137, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}