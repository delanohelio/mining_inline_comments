{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMjI3NTM5", "number": 1177, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTowMToyM1rOEKjE7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo1ODowN1rOEVmvkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDk1OTE2OnYy", "diffSide": "RIGHT", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/network/DefaultP2PNetwork.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTowMToyM1rOGrpwcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxODo0NzozMVrOG6nEDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyNjA5OA==", "bodyText": "This feels too convoluted and inverted.  Passing just the subscribe methods does not keep the type from needing to be known by the classes doing the subscriptions. It also impairs readability so I have no idea what object I am ultimately subscribing to.  I think it would be cleaner to pass the maintainedPeers instance as part of the constructor chain instead of two curried methods and then in the PeerDiscoveryController method call\n    maintainedPeers.subscribeAdd(this::onPeerAdded);\n    maintainedPeers.subscribeRemove(this::onPeerRemoved);\n\nIf we want the discovery controller to be removable and re-installable we could then track the subscription IDs and then also keep a reference to the maintainedPeers object for un-installation.", "url": "https://github.com/hyperledger/besu/pull/1177#discussion_r448426098", "createdAt": "2020-07-01T15:01:23Z", "author": {"login": "shemnon"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/network/DefaultP2PNetwork.java", "diffHunk": "@@ -443,7 +443,14 @@ private void validate() {\n     private PeerDiscoveryAgent createDiscoveryAgent() {\n \n       return new VertxPeerDiscoveryAgent(\n-          vertx, nodeKey, config.getDiscovery(), peerPermissions, natService, metricsSystem);\n+          vertx,\n+          nodeKey,\n+          config.getDiscovery(),\n+          peerPermissions,\n+          natService,\n+          metricsSystem,\n+          maintainedPeers::subscribeAdd,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee860171efe24fd5f100db7a11da4ebabb5d1c63"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ5NTY1MQ==", "bodyText": "Hi @shemnon, thank you for your review. Unfortunately I won't have enough time to fix this before leaving on holidays so I'll get back into it when as soon as I can.", "url": "https://github.com/hyperledger/besu/pull/1177#discussion_r448495651", "createdAt": "2020-07-01T16:55:35Z", "author": {"login": "br0tchain"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/network/DefaultP2PNetwork.java", "diffHunk": "@@ -443,7 +443,14 @@ private void validate() {\n     private PeerDiscoveryAgent createDiscoveryAgent() {\n \n       return new VertxPeerDiscoveryAgent(\n-          vertx, nodeKey, config.getDiscovery(), peerPermissions, natService, metricsSystem);\n+          vertx,\n+          nodeKey,\n+          config.getDiscovery(),\n+          peerPermissions,\n+          natService,\n+          metricsSystem,\n+          maintainedPeers::subscribeAdd,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyNjA5OA=="}, "originalCommit": {"oid": "ee860171efe24fd5f100db7a11da4ebabb5d1c63"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExMDYwNg==", "bodyText": "Hi @shemnon, I've fixed this as you suggested, it's more readable this way :)", "url": "https://github.com/hyperledger/besu/pull/1177#discussion_r464110606", "createdAt": "2020-08-02T18:47:31Z", "author": {"login": "br0tchain"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/network/DefaultP2PNetwork.java", "diffHunk": "@@ -443,7 +443,14 @@ private void validate() {\n     private PeerDiscoveryAgent createDiscoveryAgent() {\n \n       return new VertxPeerDiscoveryAgent(\n-          vertx, nodeKey, config.getDiscovery(), peerPermissions, natService, metricsSystem);\n+          vertx,\n+          nodeKey,\n+          config.getDiscovery(),\n+          peerPermissions,\n+          natService,\n+          metricsSystem,\n+          maintainedPeers::subscribeAdd,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyNjA5OA=="}, "originalCommit": {"oid": "ee860171efe24fd5f100db7a11da4ebabb5d1c63"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDg5ODUyOnYy", "diffSide": "RIGHT", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo1NjowM1rOG8dV_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMzo0Mjo0M1rOG8eRCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0ODUwOA==", "bodyText": "This doesn't look right.  As we discussed in the issue, we should bond to the peer rather than just adding them to our peer table and immediately advertising the node to the network.", "url": "https://github.com/hyperledger/besu/pull/1177#discussion_r466048508", "createdAt": "2020-08-05T22:56:03Z", "author": {"login": "mbaxter"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -195,6 +201,18 @@ private PeerDiscoveryController(\n             \"type\");\n   }\n \n+  private void onPeerAdded(final Peer peer, final boolean wasAdded) {\n+    if (wasAdded) {\n+      addToPeerTable(DiscoveryPeer.fromEnode(peer.getEnodeURL()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fa4f028fac1d257b19c84772ba0ea195b7fa124"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA2MzYyNA==", "bodyText": "Added a follow-up ticket to address since this is already merged: #1278", "url": "https://github.com/hyperledger/besu/pull/1177#discussion_r466063624", "createdAt": "2020-08-05T23:42:43Z", "author": {"login": "mbaxter"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -195,6 +201,18 @@ private PeerDiscoveryController(\n             \"type\");\n   }\n \n+  private void onPeerAdded(final Peer peer, final boolean wasAdded) {\n+    if (wasAdded) {\n+      addToPeerTable(DiscoveryPeer.fromEnode(peer.getEnodeURL()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0ODUwOA=="}, "originalCommit": {"oid": "7fa4f028fac1d257b19c84772ba0ea195b7fa124"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDkwMTE5OnYy", "diffSide": "RIGHT", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/PeerDiscoveryAgent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo1NzowNFrOG8dXlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo1NzowNFrOG8dXlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0ODkxNg==", "bodyText": "A simpler way of implementing this would be to call the publicly exposed method PeerDiscoveryAgent.bond() from P2PNetwork.addMaintainConnection.", "url": "https://github.com/hyperledger/besu/pull/1177#discussion_r466048916", "createdAt": "2020-08-05T22:57:04Z", "author": {"login": "mbaxter"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/PeerDiscoveryAgent.java", "diffHunk": "@@ -81,13 +82,15 @@\n   /* Is discovery enabled? */\n   private boolean isActive = false;\n   protected final Subscribers<PeerBondedObserver> peerBondedObservers = Subscribers.create();\n+  private final MaintainedPeers maintainedPeers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fa4f028fac1d257b19c84772ba0ea195b7fa124"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDkwMzIzOnYy", "diffSide": "RIGHT", "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo1ODowN1rOG8dY7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMjo1ODowN1rOG8dY7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA0OTI2MQ==", "bodyText": "Do we need this logic?  Honestly not sure if we do or not, but it's a little unexpected at first glance.", "url": "https://github.com/hyperledger/besu/pull/1177#discussion_r466049261", "createdAt": "2020-08-05T22:58:07Z", "author": {"login": "mbaxter"}, "path": "ethereum/p2p/src/main/java/org/hyperledger/besu/ethereum/p2p/discovery/internal/PeerDiscoveryController.java", "diffHunk": "@@ -195,6 +201,18 @@ private PeerDiscoveryController(\n             \"type\");\n   }\n \n+  private void onPeerAdded(final Peer peer, final boolean wasAdded) {\n+    if (wasAdded) {\n+      addToPeerTable(DiscoveryPeer.fromEnode(peer.getEnodeURL()));\n+    }\n+  }\n+\n+  private void onPeerRemoved(final Peer peer, final boolean wasRemoved) {\n+    if (wasRemoved) {\n+      peerTable.tryEvict(peer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fa4f028fac1d257b19c84772ba0ea195b7fa124"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 841, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}