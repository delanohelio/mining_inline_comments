{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNzQyNDI0", "number": 1279, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMToxODowN1rOEV_v4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMToyMDoyOFrOEV_yfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTAwMDAyOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMToxODowN1rOG9EmBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoxNjo0M1rOG9IS1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5MTU5MQ==", "bodyText": "We could name this method something like checkIfAuthenticatedUserWasMemberAtBlock. This way we reduce the cognitive gap. Not a big deal though.\nOr if you like checkIfPrivacyGroupMatchesAuthenticatedEnclaveKey  keep it!", "url": "https://github.com/hyperledger/besu/pull/1279#discussion_r466691591", "createdAt": "2020-08-06T21:18:07Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "diffHunk": "@@ -85,9 +100,17 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n         requestContext.getRequest().getId(), new LogsResult(matchingLogs));\n   }\n \n+  private List<LogWithMetadata> getEmptyList() {\n+    return Collections.emptyList();\n+  }\n+\n   private void checkIfPrivacyGroupMatchesAuthenticatedEnclaveKey(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b74c397d99b7f86762837d24a5ff7883cea92e6"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MjIxMg==", "bodyText": "memberAtBlock makes more sense.", "url": "https://github.com/hyperledger/besu/pull/1279#discussion_r466752212", "createdAt": "2020-08-07T00:16:43Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "diffHunk": "@@ -85,9 +100,17 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n         requestContext.getRequest().getId(), new LogsResult(matchingLogs));\n   }\n \n+  private List<LogWithMetadata> getEmptyList() {\n+    return Collections.emptyList();\n+  }\n+\n   private void checkIfPrivacyGroupMatchesAuthenticatedEnclaveKey(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5MTU5MQ=="}, "originalCommit": {"oid": "2b74c397d99b7f86762837d24a5ff7883cea92e6"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTAwMzQ2OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMToxOToyM1rOG9EoJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDoyMDo1OVrOG9IXWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5MjEzMg==", "bodyText": "We could encapsulate the map and orElseGet blocks into their own functions to make this main function a bit cleaner. Something like findLogsForBlockHash and findLogsForBlockRange", "url": "https://github.com/hyperledger/besu/pull/1279#discussion_r466692132", "createdAt": "2020-08-06T21:19:23Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "diffHunk": "@@ -70,13 +71,27 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n         filter\n             .getBlockHash()\n             .map(\n-                blockHash ->\n-                    privacyQueries.matchingLogs(privacyGroupId, blockHash, filter.getLogsQuery()))\n+                blockHash -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b74c397d99b7f86762837d24a5ff7883cea92e6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1MzM2OQ==", "bodyText": "done", "url": "https://github.com/hyperledger/besu/pull/1279#discussion_r466753369", "createdAt": "2020-08-07T00:20:59Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "diffHunk": "@@ -70,13 +71,27 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n         filter\n             .getBlockHash()\n             .map(\n-                blockHash ->\n-                    privacyQueries.matchingLogs(privacyGroupId, blockHash, filter.getLogsQuery()))\n+                blockHash -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5MjEzMg=="}, "originalCommit": {"oid": "2b74c397d99b7f86762837d24a5ff7883cea92e6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTAwNjY4OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMToyMDoyOFrOG9EqIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMjo1OTozOVrOG9G7MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5MjY0MA==", "bodyText": "Do we need this extra method? Why not return Collections.emptyList() straight away on line 78?", "url": "https://github.com/hyperledger/besu/pull/1279#discussion_r466692640", "createdAt": "2020-08-06T21:20:28Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "diffHunk": "@@ -85,9 +100,17 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n         requestContext.getRequest().getId(), new LogsResult(matchingLogs));\n   }\n \n+  private List<LogWithMetadata> getEmptyList() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b74c397d99b7f86762837d24a5ff7883cea92e6"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyOTc3Nw==", "bodyText": "I had it that way but got a nasty unintuitive compile error!", "url": "https://github.com/hyperledger/besu/pull/1279#discussion_r466729777", "createdAt": "2020-08-06T22:59:39Z", "author": {"login": "macfarla"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/priv/PrivGetLogs.java", "diffHunk": "@@ -85,9 +100,17 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n         requestContext.getRequest().getId(), new LogsResult(matchingLogs));\n   }\n \n+  private List<LogWithMetadata> getEmptyList() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5MjY0MA=="}, "originalCommit": {"oid": "2b74c397d99b7f86762837d24a5ff7883cea92e6"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 740, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}