{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNjE4MTQz", "number": 1239, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTowOTo0OFrOEQX1Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoyMTowMVrOERWaug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjAzMDk5OnYy", "diffSide": "RIGHT", "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/authentication/AuthenticationData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMTowOTo0OFrOG0fYlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzozOToxOFrOG04bYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5MzMzNA==", "bodyText": "Should this and the other object be created using the Immutables framework?  There are some special annotations for immutables: https://immutables.github.io/json.html#jackson", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r457693334", "createdAt": "2020-07-20T21:09:48Z", "author": {"login": "shemnon"}, "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/authentication/AuthenticationData.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethstats.authentication;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class AuthenticationData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28724e5462f70f81dd4a4d2b6bec244e810aa914"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODEwMzY0OQ==", "bodyText": "You are right, it is a good opportunity to integrate Immutables into Besu. I just did it", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r458103649", "createdAt": "2020-07-21T13:39:18Z", "author": {"login": "matkt"}, "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/authentication/AuthenticationData.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethstats.authentication;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+public class AuthenticationData {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5MzMzNA=="}, "originalCommit": {"oid": "28724e5462f70f81dd4a4d2b6bec244e810aa914"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzM2ODU4OnYy", "diffSide": "RIGHT", "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/EthStatsService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDoyOToxMVrOG1lGRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToxMToyN1rOG2ofsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNTUyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                      LOG.error(\"Failed to login to ethstats server \" + ack);\n          \n          \n            \n                                      LOG.error(\"Failed to login to ethstats server {}\", ack);", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r458835526", "createdAt": "2020-07-22T14:29:11Z", "author": {"login": "shemnon"}, "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/EthStatsService.java", "diffHunk": "@@ -169,8 +177,7 @@ public void start() {\n                           // send a full report after the connection\n                           sendFullReport();\n                         } else {\n-                          LOG.error(\"Failed to login to ethstats server\");\n-                          retryConnect();\n+                          LOG.error(\"Failed to login to ethstats server \" + ack);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63b9289280ab15a28a163357939a47e908d0716c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzOTc2MA==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r459939760", "createdAt": "2020-07-24T09:11:27Z", "author": {"login": "matkt"}, "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/EthStatsService.java", "diffHunk": "@@ -169,8 +177,7 @@ public void start() {\n                           // send a full report after the connection\n                           sendFullReport();\n                         } else {\n-                          LOG.error(\"Failed to login to ethstats server\");\n-                          retryConnect();\n+                          LOG.error(\"Failed to login to ethstats server \" + ack);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzNTUyNg=="}, "originalCommit": {"oid": "63b9289280ab15a28a163357939a47e908d0716c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzUwMzkyOnYy", "diffSide": "RIGHT", "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/EthStatsService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDo1NzoxNlrOG1maMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToxNjo0N1rOG2opvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1NzAxMA==", "bodyText": "How would this look with the @Parameter annotation on the key fields?  That would open up the .of(...) static method and these singe use cases could become (I'm guesssing on the auto-formattting)...\n    sendMessage(\n      webSocket, \n      new EthStatsRequest(\n        NODE_PING, \n        ImmutablePingReport.of(\n          enodeURL.getNodeId().toHexString(),\n          String.valueOf(pingTimestamp))));", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r458857010", "createdAt": "2020-07-22T14:57:16Z", "author": {"login": "shemnon"}, "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/EthStatsService.java", "diffHunk": "@@ -274,22 +285,22 @@ private void sendFullReport() {\n   private void sendPing() {\n     // we store the timestamp when we sent the ping\n     pingTimestamp = System.currentTimeMillis();\n-    final EthStatsRequest ping =\n-        new EthStatsRequest(\n-            NODE_PING,\n-            new PingReport(enodeURL.getNodeId().toHexString(), String.valueOf(pingTimestamp)));\n-    sendMessage(webSocket, ping);\n+    final PingReport pingReport =\n+        ImmutablePingReport.builder()\n+            .id(enodeURL.getNodeId().toHexString())\n+            .currentTime(String.valueOf(pingTimestamp))\n+            .build();\n+    sendMessage(webSocket, new EthStatsRequest(NODE_PING, pingReport));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63b9289280ab15a28a163357939a47e908d0716c"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0MjMzMw==", "bodyText": "Done. I added this in everything except in two object because having the builder allow to use this feature https://immutables.github.io/immutable.html#wrappertupple-initializers-inlined-as-alternative-setters-with-deep- immutables-detection", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r459942333", "createdAt": "2020-07-24T09:16:47Z", "author": {"login": "matkt"}, "path": "ethereum/ethstats/src/main/java/org/hyperledger/besu/ethstats/EthStatsService.java", "diffHunk": "@@ -274,22 +285,22 @@ private void sendFullReport() {\n   private void sendPing() {\n     // we store the timestamp when we sent the ping\n     pingTimestamp = System.currentTimeMillis();\n-    final EthStatsRequest ping =\n-        new EthStatsRequest(\n-            NODE_PING,\n-            new PingReport(enodeURL.getNodeId().toHexString(), String.valueOf(pingTimestamp)));\n-    sendMessage(webSocket, ping);\n+    final PingReport pingReport =\n+        ImmutablePingReport.builder()\n+            .id(enodeURL.getNodeId().toHexString())\n+            .currentTime(String.valueOf(pingTimestamp))\n+            .build();\n+    sendMessage(webSocket, new EthStatsRequest(NODE_PING, pingReport));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1NzAxMA=="}, "originalCommit": {"oid": "63b9289280ab15a28a163357939a47e908d0716c"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzUxMjQ1OnYy", "diffSide": "RIGHT", "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDo1OToxM1rOG1mfpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOToxMzozNVrOG2oj2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1ODQwNA==", "bodyText": "Let's start these out as --X options and make them standard after one dot-dot release cycle without issues.", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r458858404", "createdAt": "2020-07-22T14:59:13Z", "author": {"login": "shemnon"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1039,6 +1040,21 @@ void setBannedNodeIds(final List<String> values) {\n       arity = \"1\")\n   private final Long wsTimeoutSec = TimeoutOptions.defaultOptions().getTimeoutSeconds();\n \n+  @SuppressWarnings({\"FieldCanBeFinal\", \"FieldMayBeFinal\"})\n+  @Option(\n+      names = {\"--ethstats\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63b9289280ab15a28a163357939a47e908d0716c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk0MDgyNw==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r459940827", "createdAt": "2020-07-24T09:13:35Z", "author": {"login": "matkt"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1039,6 +1040,21 @@ void setBannedNodeIds(final List<String> values) {\n       arity = \"1\")\n   private final Long wsTimeoutSec = TimeoutOptions.defaultOptions().getTimeoutSeconds();\n \n+  @SuppressWarnings({\"FieldCanBeFinal\", \"FieldMayBeFinal\"})\n+  @Option(\n+      names = {\"--ethstats\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg1ODQwNA=="}, "originalCommit": {"oid": "63b9289280ab15a28a163357939a47e908d0716c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjI4NTM4OnYy", "diffSide": "RIGHT", "path": "besu/src/main/java/org/hyperledger/besu/Runner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwODoyMTowMVrOG2Aqfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOToyODo1MVrOG2C7Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4NzE2Nw==", "bodyText": "I think you missed the stop", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r459287167", "createdAt": "2020-07-23T08:21:01Z", "author": {"login": "abdelhamidbakhta"}, "path": "besu/src/main/java/org/hyperledger/besu/Runner.java", "diffHunk": "@@ -122,6 +126,9 @@ public void start() {\n       writeBesuNetworksToFile();\n       autoTransactionLogBloomCachingService.ifPresent(AutoTransactionLogBloomCachingService::start);\n       writePidFile();\n+\n+      ethStatsService.ifPresent(EthStatsService::start);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63b9289280ab15a28a163357939a47e908d0716c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMyNDIxOQ==", "bodyText": "good catch, I just added it", "url": "https://github.com/hyperledger/besu/pull/1239#discussion_r459324219", "createdAt": "2020-07-23T09:28:51Z", "author": {"login": "matkt"}, "path": "besu/src/main/java/org/hyperledger/besu/Runner.java", "diffHunk": "@@ -122,6 +126,9 @@ public void start() {\n       writeBesuNetworksToFile();\n       autoTransactionLogBloomCachingService.ifPresent(AutoTransactionLogBloomCachingService::start);\n       writePidFile();\n+\n+      ethStatsService.ifPresent(EthStatsService::start);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI4NzE2Nw=="}, "originalCommit": {"oid": "63b9289280ab15a28a163357939a47e908d0716c"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 714, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}