{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNTQyNzMy", "number": 713, "title": "Security Module Plugin API", "bodyText": "PR description\nIntroduce Security Module Plugin API. This allows to switch to a different security module provider to provide cryptographic function that can be used by NodeKey (such as sign, ECDHKeyAgreement etc.). By default register KeyPairSecurityModule otherwise attempt to load Security Module via plugin API.\nCLI Options:\n--security-module=<name>. (defaults to localfile)", "createdAt": "2020-04-15T05:03:24Z", "url": "https://github.com/hyperledger/besu/pull/713", "merged": true, "mergeCommit": {"oid": "c2dcf62448a4ca6ca2bcae80863d64beab65d1ca"}, "closed": true, "closedAt": "2020-04-27T23:36:51Z", "author": {"login": "usmansaleem"}, "timelineItems": {"totalCount": 122, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaYYRogFqTM5ODg1ODQ5NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb1XtPAH2gAyNDAzNTQyNzMyOmE0N2MxMTMzYTYxMDI5YjQxYjRhMGRjMjc0NmI0Y2JhMGVhNzBiOTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODU4NDk0", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-398858494", "createdAt": "2020-04-23T08:09:18Z", "commit": {"oid": "6283c0caf360d5421f08d469ef8a0518c59fbbb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODowOToxOFrOGKcZDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODowOToxOFrOGKcZDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwNDEwOQ==", "bodyText": "There should no be any docker specific behaviour", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r413604109", "createdAt": "2020-04-23T08:09:18Z", "author": {"login": "NicolasMassart"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1970,15 +1984,28 @@ private Path pluginsDir() {\n     }\n   }\n \n-  public File nodePrivateKeyFile() {\n-    File nodePrivateKeyFile = null;\n-    if (isFullInstantiation()) {\n-      nodePrivateKeyFile = standaloneCommands.nodePrivateKeyFile;\n+  @VisibleForTesting\n+  NodeKey buildNodeKey() {\n+    return new NodeKey(securityModuleProvider());\n+  }\n+\n+  private SecurityModule securityModuleProvider() {\n+    if (DEFAULT_SECURITY_MODULE_PROVIDER.equals(securityModuleProviderName)) {\n+      // directly load KeyPairSecurityModule\n+      return new KeyPairSecurityModule(KeyPairUtil.loadKeyPair(nodePrivateKeyFile()));\n     }\n \n-    return nodePrivateKeyFile != null\n-        ? nodePrivateKeyFile\n-        : KeyPairUtil.getDefaultKeyFile(dataDir());\n+    return securityModuleService\n+        .getByName(securityModuleProviderName)\n+        .orElseThrow(\n+            () -> new RuntimeException(\"Security Module not found: \" + securityModuleProviderName))\n+        .create(pluginCommonConfiguration);\n+  }\n+\n+  private File nodePrivateKeyFile() {\n+    final Optional<File> nodePrivateKeyFile =\n+        isDocker ? Optional.empty() : Optional.ofNullable(standaloneCommands.nodePrivateKeyFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6283c0caf360d5421f08d469ef8a0518c59fbbb5"}, "originalPosition": 156}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26aebd30c67c6ac34170ae09dd98ad85a45d1ab6", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/26aebd30c67c6ac34170ae09dd98ad85a45d1ab6", "committedDate": "2020-04-23T08:16:45Z", "message": "final keywords\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb6712aaf84bd0712acfd56c496a09b79539136d", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/eb6712aaf84bd0712acfd56c496a09b79539136d", "committedDate": "2020-04-23T23:54:24Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "317bc51cc01624a4808920dbd17b63cb0fbaf60d", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/317bc51cc01624a4808920dbd17b63cb0fbaf60d", "committedDate": "2020-04-24T01:22:23Z", "message": "ECPointUtil toUnsignedByteArray cleanup and unit tests\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f675cbe91bb2cd01782c52b7fbff2b262478686", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/6f675cbe91bb2cd01782c52b7fbff2b262478686", "committedDate": "2020-04-24T01:35:22Z", "message": "cleaning up KeyPairSecurityModule\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dee1abe35bd70ab5c9395a7d00e78f5ffa3be77", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/5dee1abe35bd70ab5c9395a7d00e78f5ffa3be77", "committedDate": "2020-04-24T01:40:47Z", "message": "typo\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjQ0Njg1", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-399644685", "createdAt": "2020-04-24T05:13:44Z", "commit": {"oid": "5dee1abe35bd70ab5c9395a7d00e78f5ffa3be77"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNToxMzo0NFrOGLGxPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNToyMDowM1rOGLG5jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5ODQyOA==", "bodyText": "Can you add an error message as well", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r414298428", "createdAt": "2020-04-24T05:13:44Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/KeyPairSecurityModule.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import static org.hyperledger.besu.crypto.ECPointUtil.fromBouncyCastleECPoint;\n+\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModuleException;\n+import org.hyperledger.besu.plugin.services.securitymodule.data.PublicKey;\n+import org.hyperledger.besu.plugin.services.securitymodule.data.Signature;\n+\n+import java.math.BigInteger;\n+import java.security.spec.ECPoint;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+\n+/**\n+ * Implementation of SecurityModule wrapping SECP256K1.KeyPair and performing cryptographic\n+ * operations via SECP256K1 class\n+ */\n+public class KeyPairSecurityModule implements SecurityModule {\n+  private final SECP256K1.KeyPair keyPair;\n+  private final PublicKey publicKey;\n+\n+  public KeyPairSecurityModule(final SECP256K1.KeyPair keyPair) {\n+    this.keyPair = keyPair;\n+    try {\n+      this.publicKey =\n+          new PublicKeyImpl(fromBouncyCastleECPoint(keyPair.getPublicKey().asEcPoint()));\n+    } catch (final Exception e) {\n+      throw new SecurityModuleException(e);\n+    }\n+  }\n+\n+  @Override\n+  public Signature sign(final Bytes32 dataHash) throws SecurityModuleException {\n+    try {\n+      final SECP256K1.Signature signature = SECP256K1.sign(dataHash, keyPair);\n+      return new SignatureImpl(signature);\n+    } catch (final Exception e) {\n+      throw new SecurityModuleException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dee1abe35bd70ab5c9395a7d00e78f5ffa3be77"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5ODQ1Ng==", "bodyText": "Can you add an error message as well", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r414298456", "createdAt": "2020-04-24T05:13:48Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/KeyPairSecurityModule.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import static org.hyperledger.besu.crypto.ECPointUtil.fromBouncyCastleECPoint;\n+\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModuleException;\n+import org.hyperledger.besu.plugin.services.securitymodule.data.PublicKey;\n+import org.hyperledger.besu.plugin.services.securitymodule.data.Signature;\n+\n+import java.math.BigInteger;\n+import java.security.spec.ECPoint;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+\n+/**\n+ * Implementation of SecurityModule wrapping SECP256K1.KeyPair and performing cryptographic\n+ * operations via SECP256K1 class\n+ */\n+public class KeyPairSecurityModule implements SecurityModule {\n+  private final SECP256K1.KeyPair keyPair;\n+  private final PublicKey publicKey;\n+\n+  public KeyPairSecurityModule(final SECP256K1.KeyPair keyPair) {\n+    this.keyPair = keyPair;\n+    try {\n+      this.publicKey =\n+          new PublicKeyImpl(fromBouncyCastleECPoint(keyPair.getPublicKey().asEcPoint()));\n+    } catch (final Exception e) {\n+      throw new SecurityModuleException(e);\n+    }\n+  }\n+\n+  @Override\n+  public Signature sign(final Bytes32 dataHash) throws SecurityModuleException {\n+    try {\n+      final SECP256K1.Signature signature = SECP256K1.sign(dataHash, keyPair);\n+      return new SignatureImpl(signature);\n+    } catch (final Exception e) {\n+      throw new SecurityModuleException(e);\n+    }\n+  }\n+\n+  @Override\n+  public PublicKey getPublicKey() throws SecurityModuleException {\n+    return publicKey;\n+  }\n+\n+  @Override\n+  public Bytes32 calculateECDHKeyAgreement(final PublicKey partyKey)\n+      throws SecurityModuleException {\n+    try {\n+      final Bytes encodedECPoint = ECPointUtil.getEncodedBytes(partyKey.getW());\n+      final SECP256K1.PublicKey secp256KPartyKey = SECP256K1.PublicKey.create(encodedECPoint);\n+      return SECP256K1.calculateECDHKeyAgreement(keyPair.getPrivateKey(), secp256KPartyKey);\n+    } catch (final Exception e) {\n+      throw new SecurityModuleException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dee1abe35bd70ab5c9395a7d00e78f5ffa3be77"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMwMDU1Nw==", "bodyText": "I think this function can be replaced with BigIntegers.asUnsignedByteArray(32, value);", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r414300557", "createdAt": "2020-04-24T05:20:03Z", "author": {"login": "jframe"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/ECPointUtil.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import java.math.BigInteger;\n+import java.security.spec.ECPoint;\n+import java.util.Arrays;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.bouncycastle.math.ec.ECFieldElement;\n+\n+/** Helper class for ECPoint */\n+public class ECPointUtil {\n+  public static ECPoint fromBouncyCastleECPoint(\n+      final org.bouncycastle.math.ec.ECPoint bouncyCastleECPoint) {\n+    final ECFieldElement xCoord = bouncyCastleECPoint.getAffineXCoord();\n+    final ECFieldElement yCoord = bouncyCastleECPoint.getAffineYCoord();\n+\n+    final Bytes32 xEncoded = Bytes32.wrap(xCoord.getEncoded());\n+    final Bytes32 yEncoded = Bytes32.wrap(yCoord.getEncoded());\n+\n+    final BigInteger x = xEncoded.toUnsignedBigInteger();\n+    final BigInteger y = yEncoded.toUnsignedBigInteger();\n+\n+    return new ECPoint(x, y);\n+  }\n+\n+  public static Bytes getEncodedBytes(final ECPoint ecPoint) {\n+    final Bytes xBytes = Bytes32.wrap(toUnsignedByteArray(ecPoint.getAffineX()));\n+    final Bytes yBytes = Bytes32.wrap(toUnsignedByteArray(ecPoint.getAffineY()));\n+\n+    return Bytes.concatenate(xBytes, yBytes);\n+  }\n+\n+  /**\n+   * Adjust unsigned big integer from ECPoint. If it is less than 32, pad left 0. If it is 33, strip\n+   * 0.\n+   *\n+   * @param value BigInteger whose byte[] to adjust\n+   * @return byte[] 32 bit array after adjusting sign bit\n+   * @throws IllegalArgumentException if invalid array size encountered\n+   */\n+  @VisibleForTesting\n+  static byte[] toUnsignedByteArray(final BigInteger value) {\n+    final byte[] bytes = value.toByteArray();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dee1abe35bd70ab5c9395a7d00e78f5ffa3be77"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73df12313e878cc6bbc39fa4ba98d31deb605dd6", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/73df12313e878cc6bbc39fa4ba98d31deb605dd6", "committedDate": "2020-04-24T05:45:54Z", "message": "review suggestion - exception message in keypairsecuritymodule\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f83f019edab813e35c1e52153a746dc27689713", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/5f83f019edab813e35c1e52153a746dc27689713", "committedDate": "2020-04-24T06:18:45Z", "message": "ECPointUtil cleanup - Use BC BigIntegers.asUnsignedByteArray\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Njg5NTY0", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-399689564", "createdAt": "2020-04-24T07:05:39Z", "commit": {"oid": "5f83f019edab813e35c1e52153a746dc27689713"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f6297314a699441b19a65a2aece1310d73808a7", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/3f6297314a699441b19a65a2aece1310d73808a7", "committedDate": "2020-04-25T03:19:52Z", "message": "Merge upstream master\n\nConflicts:\n\tplugin-api/build.gradle\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDUzNzQ3", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-400453747", "createdAt": "2020-04-26T03:29:41Z", "commit": {"oid": "3f6297314a699441b19a65a2aece1310d73808a7"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyOTo0MVrOGL9-6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNjozMDowNFrOGL_rRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzA0OA==", "bodyText": "\ud83d\udc4d Its a shame the docker code wasn't cleaned out before now - but the removal shouldn't be part of this work.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415203048", "createdAt": "2020-04-26T03:29:41Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1970,15 +1984,28 @@ private Path pluginsDir() {\n     }\n   }\n \n-  public File nodePrivateKeyFile() {\n-    File nodePrivateKeyFile = null;\n-    if (isFullInstantiation()) {\n-      nodePrivateKeyFile = standaloneCommands.nodePrivateKeyFile;\n+  @VisibleForTesting\n+  NodeKey buildNodeKey() {\n+    return new NodeKey(securityModuleProvider());\n+  }\n+\n+  private SecurityModule securityModuleProvider() {\n+    if (DEFAULT_SECURITY_MODULE_PROVIDER.equals(securityModuleProviderName)) {\n+      // directly load KeyPairSecurityModule\n+      return new KeyPairSecurityModule(KeyPairUtil.loadKeyPair(nodePrivateKeyFile()));\n     }\n \n-    return nodePrivateKeyFile != null\n-        ? nodePrivateKeyFile\n-        : KeyPairUtil.getDefaultKeyFile(dataDir());\n+    return securityModuleService\n+        .getByName(securityModuleProviderName)\n+        .orElseThrow(\n+            () -> new RuntimeException(\"Security Module not found: \" + securityModuleProviderName))\n+        .create(pluginCommonConfiguration);\n+  }\n+\n+  private File nodePrivateKeyFile() {\n+    final Optional<File> nodePrivateKeyFile =\n+        isDocker ? Optional.empty() : Optional.ofNullable(standaloneCommands.nodePrivateKeyFile);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwNDEwOQ=="}, "originalCommit": {"oid": "6283c0caf360d5421f08d469ef8a0518c59fbbb5"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzQ5OA==", "bodyText": "Maybe this is just a different (rather than better) way of tackling t his, but in my head there is no default security module (Rather than the default containing data), thus:\n\n--security-module is an optional field, if not set, then we fallback to the KeyPair\nif the --security-module doesn't reference an available securitymodule, we exit out with a failure.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415203498", "createdAt": "2020-04-26T03:32:41Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1970,15 +1984,28 @@ private Path pluginsDir() {\n     }\n   }\n \n-  public File nodePrivateKeyFile() {\n-    File nodePrivateKeyFile = null;\n-    if (isFullInstantiation()) {\n-      nodePrivateKeyFile = standaloneCommands.nodePrivateKeyFile;\n+  @VisibleForTesting\n+  NodeKey buildNodeKey() {\n+    return new NodeKey(securityModuleProvider());\n+  }\n+\n+  private SecurityModule securityModuleProvider() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6297314a699441b19a65a2aece1310d73808a7"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIyOTEzNA==", "bodyText": "Having said that - should the user be allowed to write \"--security-module=localfile\"? (I Honestly don't know)", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415229134", "createdAt": "2020-04-26T06:20:36Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1970,15 +1984,28 @@ private Path pluginsDir() {\n     }\n   }\n \n-  public File nodePrivateKeyFile() {\n-    File nodePrivateKeyFile = null;\n-    if (isFullInstantiation()) {\n-      nodePrivateKeyFile = standaloneCommands.nodePrivateKeyFile;\n+  @VisibleForTesting\n+  NodeKey buildNodeKey() {\n+    return new NodeKey(securityModuleProvider());\n+  }\n+\n+  private SecurityModule securityModuleProvider() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzQ5OA=="}, "originalCommit": {"oid": "3f6297314a699441b19a65a2aece1310d73808a7"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIyOTkzMw==", "bodyText": "comment is superfluous", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415229933", "createdAt": "2020-04-26T06:25:24Z", "author": {"login": "rain-on"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/ECPointUtil.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import java.math.BigInteger;\n+import java.security.spec.ECPoint;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+import org.bouncycastle.math.ec.ECFieldElement;\n+import org.bouncycastle.util.BigIntegers;\n+\n+/** Helper class for ECPoint */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6297314a699441b19a65a2aece1310d73808a7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzMDI0Ng==", "bodyText": "nit: given there's crypto operations happening here, do we want to move this to a static creator? which passes in a privkey and a PublicKey?", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415230246", "createdAt": "2020-04-26T06:27:18Z", "author": {"login": "rain-on"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/KeyPairSecurityModule.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.crypto;\n+\n+import static org.hyperledger.besu.crypto.ECPointUtil.fromBouncyCastleECPoint;\n+\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModuleException;\n+import org.hyperledger.besu.plugin.services.securitymodule.data.PublicKey;\n+import org.hyperledger.besu.plugin.services.securitymodule.data.Signature;\n+\n+import java.math.BigInteger;\n+import java.security.spec.ECPoint;\n+\n+import org.apache.tuweni.bytes.Bytes;\n+import org.apache.tuweni.bytes.Bytes32;\n+\n+/**\n+ * Implementation of SecurityModule wrapping SECP256K1.KeyPair and performing cryptographic\n+ * operations via SECP256K1 class\n+ */\n+public class KeyPairSecurityModule implements SecurityModule {\n+  private final SECP256K1.KeyPair keyPair;\n+  private final PublicKey publicKey;\n+\n+  public KeyPairSecurityModule(final SECP256K1.KeyPair keyPair) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6297314a699441b19a65a2aece1310d73808a7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzMDYyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param name The name to identify the Security Provider Supplier Function\n          \n          \n            \n               * @param name The name to identify the Security Provider Supplier", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415230625", "createdAt": "2020-04-26T06:29:23Z", "author": {"login": "rain-on"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/SecurityModuleService.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModuleProvider;\n+\n+import java.util.Optional;\n+\n+/**\n+ * This service allows plugins to register a Security Module, which is abstraction of cryptographic\n+ * operations that defer to specific provider (e.g. BouncyCastle).\n+ */\n+@Unstable\n+public interface SecurityModuleService {\n+\n+  /**\n+   * Registers a provider of security modules.\n+   *\n+   * @param name The name to identify the Security Provider Supplier Function", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6297314a699441b19a65a2aece1310d73808a7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzMDc4OQ==", "bodyText": "no need for final on interfaces", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415230789", "createdAt": "2020-04-26T06:30:04Z", "author": {"login": "rain-on"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/SecurityModuleService.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModuleProvider;\n+\n+import java.util.Optional;\n+\n+/**\n+ * This service allows plugins to register a Security Module, which is abstraction of cryptographic\n+ * operations that defer to specific provider (e.g. BouncyCastle).\n+ */\n+@Unstable\n+public interface SecurityModuleService {\n+\n+  /**\n+   * Registers a provider of security modules.\n+   *\n+   * @param name The name to identify the Security Provider Supplier Function\n+   * @param securityModuleProvider Register reference of SecurityModuleProvider.\n+   */\n+  void registerSecurityModule(\n+      final String name, final SecurityModuleProvider securityModuleProvider);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6297314a699441b19a65a2aece1310d73808a7"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a36b4e2e9468904f52beb0b6eba05d77ca46539", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/6a36b4e2e9468904f52beb0b6eba05d77ca46539", "committedDate": "2020-04-27T00:03:20Z", "message": "review suggestions\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75c5803247ec741584839e432363a6c0d6b85fb3", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/75c5803247ec741584839e432363a6c0d6b85fb3", "committedDate": "2020-04-27T02:06:24Z", "message": "review suggestion - Register default SecurityModuleProvider with SecurityModuleService\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b18f39b5dc2cde49dcbb560d2030a1720c9ffaee", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/b18f39b5dc2cde49dcbb560d2030a1720c9ffaee", "committedDate": "2020-04-27T02:18:55Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5dba6df6af056a0947a046f64cbe296e0a99534", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/b5dba6df6af056a0947a046f64cbe296e0a99534", "committedDate": "2020-04-27T02:47:55Z", "message": "plugin api checksum\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6322e08bc1f71bdf7ff8d05ccecd3b96529a4eb7", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/6322e08bc1f71bdf7ff8d05ccecd3b96529a4eb7", "committedDate": "2020-04-27T03:03:26Z", "message": "Using Supplier<SecurityModule> instead of SecurityModuleSupplier\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjAwNDM0", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-400600434", "createdAt": "2020-04-27T03:07:46Z", "commit": {"oid": "6322e08bc1f71bdf7ff8d05ccecd3b96529a4eb7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMzowNzo0NlrOGMO1Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMzowODoxNFrOGMO11A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3OTA4Mw==", "bodyText": "Could this just be --security-module?", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415479083", "createdAt": "2020-04-27T03:07:46Z", "author": {"login": "jframe"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -815,6 +816,14 @@ void setBannedNodeIds(final List<String> values) {\n       arity = \"1\")\n   private String keyValueStorageName = DEFAULT_KEY_VALUE_STORAGE_NAME;\n \n+  @SuppressWarnings({\"FieldCanBeFinal\", \"FieldMayBeFinal\"})\n+  @Option(\n+      names = {\"--security-module-provider\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6322e08bc1f71bdf7ff8d05ccecd3b96529a4eb7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ3OTI1Mg==", "bodyText": "Similarly here think we can drop provider from the description", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r415479252", "createdAt": "2020-04-27T03:08:14Z", "author": {"login": "jframe"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -815,6 +816,14 @@ void setBannedNodeIds(final List<String> values) {\n       arity = \"1\")\n   private String keyValueStorageName = DEFAULT_KEY_VALUE_STORAGE_NAME;\n \n+  @SuppressWarnings({\"FieldCanBeFinal\", \"FieldMayBeFinal\"})\n+  @Option(\n+      names = {\"--security-module-provider\"},\n+      paramLabel = \"<PROVIDER-NAME>\",\n+      description = \"Identity for the Security Module provider to be used.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6322e08bc1f71bdf7ff8d05ccecd3b96529a4eb7"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3405b1721c5ab5fa29328e8de4a576d490daa0c5", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/3405b1721c5ab5fa29328e8de4a576d490daa0c5", "committedDate": "2020-04-27T03:16:07Z", "message": "plugin api checksum\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "519370c998e2687e40a41f27c1aad923bfc20e5a", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/519370c998e2687e40a41f27c1aad923bfc20e5a", "committedDate": "2020-04-27T05:24:41Z", "message": "--security-module cli option instead of --security-module-provider\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwODY5MjE0", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-400869214", "createdAt": "2020-04-27T11:39:26Z", "commit": {"oid": "519370c998e2687e40a41f27c1aad923bfc20e5a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a47c1133a61029b41b4a0dc2746b4cba0ea70b90", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/a47c1133a61029b41b4a0dc2746b4cba0ea70b90", "committedDate": "2020-04-27T20:32:54Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dff54047da43cf5b5db70ca951c0508455d827d", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/8dff54047da43cf5b5db70ca951c0508455d827d", "committedDate": "2020-04-14T09:10:58Z", "message": "Node Key Security Provider BouncyCastle backed internal plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33482d547c86d4c6acf8d1c2084df868171247f3", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/33482d547c86d4c6acf8d1c2084df868171247f3", "committedDate": "2020-04-14T23:29:44Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf62f2c1b887697aa538ef900893b325004efbcd", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/bf62f2c1b887697aa538ef900893b325004efbcd", "committedDate": "2020-04-15T00:47:21Z", "message": "wip\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76f01f1b6684ce9c7cdb849ef96b541c844e3170", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/76f01f1b6684ce9c7cdb849ef96b541c844e3170", "committedDate": "2020-04-15T00:58:31Z", "message": "wip - renaming plugin name\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3db6b44b9069ee6283212e7f9ec43973b65cfb04", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/3db6b44b9069ee6283212e7f9ec43973b65cfb04", "committedDate": "2020-04-15T01:04:03Z", "message": "refactoring package name\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72b4dc9a424932151f88ca5d98eaaa36e285c90b", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/72b4dc9a424932151f88ca5d98eaaa36e285c90b", "committedDate": "2020-04-15T01:05:36Z", "message": "wip\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a30a73654d92e3bfb70357bca469e23dfd08fc7", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/3a30a73654d92e3bfb70357bca469e23dfd08fc7", "committedDate": "2020-04-15T01:08:17Z", "message": "wip - refactor package name\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5392e7e9041047cb9d58f7a5c5dd9045a12efd2", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/d5392e7e9041047cb9d58f7a5c5dd9045a12efd2", "committedDate": "2020-04-15T03:36:00Z", "message": "wip\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "160d9df87514d50420237c5d18b73a645a6d6897", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/160d9df87514d50420237c5d18b73a645a6d6897", "committedDate": "2020-04-15T03:36:32Z", "message": "Merge upstream/master\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b934f3a87be54ed9296ebe00aaedd7e96cea881a", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/b934f3a87be54ed9296ebe00aaedd7e96cea881a", "committedDate": "2020-04-15T04:56:34Z", "message": "wip - clean compile\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNDU3OTEz", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-393457913", "createdAt": "2020-04-15T05:05:19Z", "commit": {"oid": "b934f3a87be54ed9296ebe00aaedd7e96cea881a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTowNToxOVrOGFp68g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTowNToxOVrOGFp68g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU4Mjg5OA==", "bodyText": "TODO: Remove commented code", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r408582898", "createdAt": "2020-04-15T05:05:19Z", "author": {"login": "usmansaleem"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1937,6 +1965,7 @@ private Path pluginsDir() {\n     }\n   }\n \n+  /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b934f3a87be54ed9296ebe00aaedd7e96cea881a"}, "originalPosition": 181}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNDU4MDgw", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-393458080", "createdAt": "2020-04-15T05:05:52Z", "commit": {"oid": "b934f3a87be54ed9296ebe00aaedd7e96cea881a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTowNTo1MlrOGFp7lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTowNTo1MlrOGFp7lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU4MzA2MQ==", "bodyText": "TODO: Remove comments", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r408583061", "createdAt": "2020-04-15T05:05:52Z", "author": {"login": "usmansaleem"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/subcommands/PublicKeySubCommand.java", "diffHunk": "@@ -62,25 +62,24 @@\n   private CommandSpec spec; // Picocli injects reference to command spec\n \n   private final PrintStream out;\n-  private final KeyLoader keyLoader;\n \n-  public PublicKeySubCommand(final PrintStream out, final KeyLoader keyLoader) {\n+  public PublicKeySubCommand(final PrintStream out) {\n     this.out = out;\n-    this.keyLoader = keyLoader;\n   }\n \n   @Override\n   public void run() {\n     spec.commandLine().usage(out);\n   }\n \n-  private Optional<KeyPair> getKeyPair() {\n-    try {\n-      return Optional.of(keyLoader.load(parentCommand.nodePrivateKeyFile()));\n-    } catch (IOException e) {\n-      LOG.error(\"An error occurred while trying to read the private key\", e);\n-      return Optional.empty();\n-    }\n+  private Optional<NodeKey> getNodeKey() {\n+    return parentCommand.getNodeKey();\n+    //    try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b934f3a87be54ed9296ebe00aaedd7e96cea881a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2505c3d3a48811333ef6eaef63f1aa9f2e8a06fb", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/2505c3d3a48811333ef6eaef63f1aa9f2e8a06fb", "committedDate": "2020-04-15T05:18:09Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNDYyMTM1", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-393462135", "createdAt": "2020-04-15T05:19:49Z", "commit": {"oid": "2505c3d3a48811333ef6eaef63f1aa9f2e8a06fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxOTo0OVrOGFqJ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNToxOTo0OVrOGFqJ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU4NjcxNA==", "bodyText": "TODO: Remove comments", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r408586714", "createdAt": "2020-04-15T05:19:49Z", "author": {"login": "usmansaleem"}, "path": "besu/src/main/java/org/hyperledger/besu/controller/BesuControllerBuilder.java", "diffHunk": "@@ -126,10 +123,11 @@\n     return this;\n   }\n \n+  /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2505c3d3a48811333ef6eaef63f1aa9f2e8a06fb"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afd112473b6323bc43f242b5b793390f6af9a878", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/afd112473b6323bc43f242b5b793390f6af9a878", "committedDate": "2020-04-15T05:28:19Z", "message": "test compilation fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e063f0e3c52e29bad1e6023bac5d634c837476", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/87e063f0e3c52e29bad1e6023bac5d634c837476", "committedDate": "2020-04-15T06:47:23Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "977b3f03f7d4b022695d7fbd809b00985fab5435", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/977b3f03f7d4b022695d7fbd809b00985fab5435", "committedDate": "2020-04-15T06:56:06Z", "message": "license header\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c3e76a31903e9073c188b342f5d68efc0c57d60", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/5c3e76a31903e9073c188b342f5d68efc0c57d60", "committedDate": "2020-04-15T06:59:42Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a69d3a9194fcf6b5fe42ac4aa02557abc9aeae1", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/8a69d3a9194fcf6b5fe42ac4aa02557abc9aeae1", "committedDate": "2020-04-15T07:07:21Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d14a37714c5901ee24b8fe7260ab9c848af13b2", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/4d14a37714c5901ee24b8fe7260ab9c848af13b2", "committedDate": "2020-04-15T07:38:07Z", "message": "mock fix in CommandTestAbstract\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e044e496437536e51519be060e7a0545976a5b1c", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/e044e496437536e51519be060e7a0545976a5b1c", "committedDate": "2020-04-15T07:42:13Z", "message": "supplier memoize\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b2209a0bd4efb8c5e16e60cf300941d3aef07fd", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/4b2209a0bd4efb8c5e16e60cf300941d3aef07fd", "committedDate": "2020-04-15T09:46:10Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94f29961423cb322832209b87b3ef30e77eca58c", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/94f29961423cb322832209b87b3ef30e77eca58c", "committedDate": "2020-04-15T10:00:34Z", "message": "supplier memoize moved into BouncyCastleSecurityModule\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "295caefb156c283d1cef3aad2aca0e6bfcdebf16", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/295caefb156c283d1cef3aad2aca0e6bfcdebf16", "committedDate": "2020-04-15T11:14:33Z", "message": "Fixing PublicKeySubCommand and its unit tests\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bd3790899cdb127ba6ac97d0883583bfba9e7f4", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/7bd3790899cdb127ba6ac97d0883583bfba9e7f4", "committedDate": "2020-04-15T11:48:06Z", "message": "updating plugin cli option and removing unit test cases\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f08b33f5cceeff34d96efe8376b717cb61ffb9f", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/4f08b33f5cceeff34d96efe8376b717cb61ffb9f", "committedDate": "2020-04-15T12:08:03Z", "message": "Register SecurityModuleService in dsl ThreadBesuRunner\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b18e3ee9ca6e40c46359542b0a81187b1dac043", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/3b18e3ee9ca6e40c46359542b0a81187b1dac043", "committedDate": "2020-04-15T12:21:46Z", "message": "refactoring threadbesunoderunner\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2187a34a53ab73b197dab7548bd17b3fe276735", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/a2187a34a53ab73b197dab7548bd17b3fe276735", "committedDate": "2020-04-15T12:25:31Z", "message": "variable names cleanup\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/c13368907c14852c6a60d0d2f5633280c32a2013", "committedDate": "2020-04-15T12:39:00Z", "message": "cleanup\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTk5MTYx", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-394199161", "createdAt": "2020-04-15T23:19:09Z", "commit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzoxOTowOVrOGGO72w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzozNzo1MVrOGGPSyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4OTMzOQ==", "bodyText": "I know this is what I called it (roughly anyway) - but maybe I'm wrong - maybe its actually a \"local-file security provider\"?\nI.e. people don't care that its backed by bouncy-castle, only that its created with a file.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409189339", "createdAt": "2020-04-15T23:19:09Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/dsl/build.gradle", "diffHunk": "@@ -16,6 +16,7 @@ dependencies {\n   implementation project(':metrics:core')\n   implementation project(':plugin-api')\n   implementation project(':plugins:rocksdb')\n+  implementation project(':plugins:securitymodule-bouncycastle')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MDI4Mw==", "bodyText": "is there a precedent for the case of this identifier? eg bouncyCastle, BouncyCastle, BoUnCyCaStLe? (or is this how we do it?)", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409190283", "createdAt": "2020-04-15T23:22:05Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/ThreadBesuNodeRunner.java", "diffHunk": "@@ -133,13 +144,20 @@ public void startNode(final BesuNode node) {\n             .withMetricsSystem(metricsSystem)\n             .build();\n \n+    final SecurityModule securityModule =\n+        securityModuleService\n+            .getByName(\"bouncycastle\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MTAzMg==", "bodyText": "don't  think this should expose the nodeKey - that should only be available from the BesuController.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409191032", "createdAt": "2020-04-15T23:24:26Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -949,6 +960,17 @@ private void addConfigurationService() {\n     }\n   }\n \n+  /* NOTE: Must be called after addConfigurationService */\n+  private void addNodeKey() {\n+    if (nodeKey == null) {\n+      nodeKey = new NodeKey(nodeKeySecurityModuleProvider(nodeKeySecurityModuleProviderName));\n+    }\n+  }\n+\n+  public Optional<NodeKey> getNodeKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MTI1Ng==", "bodyText": "I'd put this down the some of the storageService commands - and wondering if its more of a \"construct\" rather than an \"add\"", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409191256", "createdAt": "2020-04-15T23:25:06Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -949,6 +960,17 @@ private void addConfigurationService() {\n     }\n   }\n \n+  /* NOTE: Must be called after addConfigurationService */\n+  private void addNodeKey() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MTcxNw==", "bodyText": "If possible (not sure about subcommands) - it'd be nice if this class didn't own the NodeKey - only create it and pass it into the BesuControllerBuilder - it makes for nicer lifetime management (i.e. we don't have a 1/2 constructed BesuCommand class, which sometimes has a NodeKey, but sometimes not).", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409191717", "createdAt": "2020-04-15T23:26:43Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -858,6 +865,7 @@ void setBannedNodeIds(final List<String> values) {\n   private BesuController<?> besuController;\n   private StandaloneCommand standaloneCommands;\n   private BesuConfiguration pluginCommonConfiguration;\n+  private NodeKey nodeKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MTk2Ng==", "bodyText": "can we get this from the BesuController rather than the BesuCommand?", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409191966", "createdAt": "2020-04-15T23:27:32Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/subcommands/PublicKeySubCommand.java", "diffHunk": "@@ -62,25 +63,22 @@\n   private CommandSpec spec; // Picocli injects reference to command spec\n \n   private final PrintStream out;\n-  private final KeyLoader keyLoader;\n \n-  public PublicKeySubCommand(final PrintStream out, final KeyLoader keyLoader) {\n+  public PublicKeySubCommand(final PrintStream out) {\n     this.out = out;\n-    this.keyLoader = keyLoader;\n   }\n \n   @Override\n   public void run() {\n     spec.commandLine().usage(out);\n   }\n \n-  private Optional<KeyPair> getKeyPair() {\n-    try {\n-      return Optional.of(keyLoader.load(parentCommand.nodePrivateKeyFile()));\n-    } catch (IOException e) {\n-      LOG.error(\"An error occurred while trying to read the private key\", e);\n-      return Optional.empty();\n-    }\n+  private BesuController<?> createBesuController() {\n+    return parentCommand.buildController();\n+  }\n+\n+  private Optional<NodeKey> getNodeKey() {\n+    return parentCommand.getNodeKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MzEyMQ==", "bodyText": "Personally, I'd prefer to see a custom class rather than a Function, but that's also old fashioned me.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409193121", "createdAt": "2020-04-15T23:31:10Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/services/SecurityModuleServiceImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.services;\n+\n+import org.hyperledger.besu.plugin.services.BesuConfiguration;\n+import org.hyperledger.besu.plugin.services.SecurityModuleService;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.function.Function;\n+\n+public class SecurityModuleServiceImpl implements SecurityModuleService {\n+  private final Map<String, Function<BesuConfiguration, SecurityModule>> securityModuleProviders =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5MzQ1Ng==", "bodyText": "Removing these tests is correct - but we probably need to put them somewhere else - for example, there's a test which states that --node-private-key-file cannot be set if we are dockerised... not sure how we're going to do that with the plugin approach :/", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409193456", "createdAt": "2020-04-15T23:32:22Z", "author": {"login": "rain-on"}, "path": "besu/src/test/java/org/hyperledger/besu/cli/BesuCommandTest.java", "diffHunk": "@@ -807,50 +807,6 @@ public void configOptionDisabledUnderDocker() {\n     assertThat(commandOutput.toString()).isEmpty();\n   }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5NDkzMg==", "bodyText": "can't you do this check on the NodeKey, rather than the KeyPair? I.e. these tests shouldn't need to know about keypair", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409194932", "createdAt": "2020-04-15T23:36:59Z", "author": {"login": "rain-on"}, "path": "besu/src/test/java/org/hyperledger/besu/cli/PublicKeySubCommandTest.java", "diffHunk": "@@ -113,9 +113,9 @@ public void callingPublicKeyExportSubCommandHelpMustDisplayUsage() {\n \n   @Test\n   public void callingPublicKeyExportSubCommandWithoutPathMustWriteKeyToStandardOutput() {\n-    final KeyPair keyPair = KeyPair.generate();\n+    final KeyPair keyPair = getKeyPair();\n \n-    parseCommand(f -> keyPair, PUBLIC_KEY_SUBCOMMAND_NAME, PUBLIC_KEY_EXPORT_SUBCOMMAND_NAME);\n+    parseCommand(PUBLIC_KEY_SUBCOMMAND_NAME, PUBLIC_KEY_EXPORT_SUBCOMMAND_NAME);\n \n     final String expectedOutputStart = keyPair.getPublicKey().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE5NTIxMA==", "bodyText": "why the change to a Supplier? This feels like a change which shouldn't be part of this PR.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409195210", "createdAt": "2020-04-15T23:37:51Z", "author": {"login": "rain-on"}, "path": "crypto/src/main/java/org/hyperledger/besu/crypto/BouncyCastleSecurityModule.java", "diffHunk": "@@ -15,32 +15,42 @@\n package org.hyperledger.besu.crypto;\n \n import org.hyperledger.besu.crypto.SECP256K1.KeyPair;\n+import org.hyperledger.besu.plugin.services.securitymodule.PublicKey;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+import org.hyperledger.besu.plugin.services.securitymodule.Signature;\n \n+import com.google.common.base.Supplier;\n+import com.google.common.base.Suppliers;\n import org.apache.tuweni.bytes.Bytes32;\n \n+/**\n+ * Implementation of SecurityModule deferring cryptographic operations via SECP256K1 class which\n+ * uses BouncyCastle.\n+ */\n public class BouncyCastleSecurityModule implements SecurityModule {\n \n-  private final KeyPair nodeKeys;\n+  private final Supplier<KeyPair> keyPairSupplier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c13368907c14852c6a60d0d2f5633280c32a2013"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7e796c25e401c18de1747a340a3074ab5ef6b21", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/f7e796c25e401c18de1747a340a3074ab5ef6b21", "committedDate": "2020-04-15T23:56:56Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee607f83823c7533e4378ba35cdd1d8433045423", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/ee607f83823c7533e4378ba35cdd1d8433045423", "committedDate": "2020-04-16T00:53:14Z", "message": "remove memoize from bcsecuritymodule\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77b604dacfafb74dfedd1af15aac3f855ece42ed", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/77b604dacfafb74dfedd1af15aac3f855ece42ed", "committedDate": "2020-04-16T00:53:43Z", "message": "remove nodeKey instance variable from BesuCommand\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1196a41080b1068027184a140455380aa8173cfc", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/1196a41080b1068027184a140455380aa8173cfc", "committedDate": "2020-04-16T01:49:04Z", "message": "Fixing CommandTestAbstract mocks and PublicKeySubCommandTest\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb931175b3220118406b5f6c8a5426b481e40913", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/cb931175b3220118406b5f6c8a5426b481e40913", "committedDate": "2020-04-16T02:16:01Z", "message": "cleaning up security module name constant\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa6ead820ad3acf1e31418da466c8b6ad1ea64e7", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/aa6ead820ad3acf1e31418da466c8b6ad1ea64e7", "committedDate": "2020-04-16T02:17:13Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0774c4ebf9f1cc75b8d478678e4f88d686cd2183", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/0774c4ebf9f1cc75b8d478678e4f88d686cd2183", "committedDate": "2020-04-16T02:32:00Z", "message": "Using extended Functional interface\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7d0dfe2fa001b4cd68eaa11cace621e7a56a57e", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/a7d0dfe2fa001b4cd68eaa11cace621e7a56a57e", "committedDate": "2020-04-16T02:34:42Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3630ab8a8042bbe05e093d937055b0b6d86ec145", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/3630ab8a8042bbe05e093d937055b0b6d86ec145", "committedDate": "2020-04-16T03:43:49Z", "message": "plugin api changes hash\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92412c4775da942eb7a21fa6021d81c1264675da", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/92412c4775da942eb7a21fa6021d81c1264675da", "committedDate": "2020-04-16T05:23:24Z", "message": "Ditching BouncyCastle from plugin and package name. Moving to localfile\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2db11f7b2fbd332b41e5676d2416b724b6b41acc", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/2db11f7b2fbd332b41e5676d2416b724b6b41acc", "committedDate": "2020-04-16T05:32:28Z", "message": "exception msg\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3b1cac888b39a84cb346ac229fc18232aac7d0e", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/d3b1cac888b39a84cb346ac229fc18232aac7d0e", "committedDate": "2020-04-16T09:53:52Z", "message": "unit test for Plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1aea3858d308b09c343c324e319fc36cbd317cd", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/e1aea3858d308b09c343c324e319fc36cbd317cd", "committedDate": "2020-04-16T09:56:58Z", "message": "header\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26962c63c8378540488c290376ce4d1021309fb1", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/26962c63c8378540488c290376ce4d1021309fb1", "committedDate": "2020-04-16T10:02:01Z", "message": "final\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc455365b78da4496b9ef0652712a745db600825", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/bc455365b78da4496b9ef0652712a745db600825", "committedDate": "2020-04-16T10:02:17Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjU4MzQw", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-394658340", "createdAt": "2020-04-16T13:56:50Z", "commit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo1Njo1MVrOGGmlFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo1Njo1MVrOGGmlFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3NjcyNg==", "bodyText": "This should be an interface not a class.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409576726", "createdAt": "2020-04-16T13:56:51Z", "author": {"login": "shemnon"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/Signature.java", "diffHunk": "@@ -12,7 +12,7 @@\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n-package org.hyperledger.besu.crypto;\n+package org.hyperledger.besu.plugin.services.securitymodule;\n \n import java.math.BigInteger;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjU4Njgx", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-394658681", "createdAt": "2020-04-16T13:57:10Z", "commit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo1NzoxMVrOGGmmHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo1NzoxMVrOGGmmHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3Njk4OA==", "bodyText": "This should be an interface not a class.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409576988", "createdAt": "2020-04-16T13:57:11Z", "author": {"login": "shemnon"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/PublicKey.java", "diffHunk": "@@ -12,7 +12,7 @@\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n-package org.hyperledger.besu.crypto;\n+package org.hyperledger.besu.plugin.services.securitymodule;\n \n import org.apache.tuweni.bytes.Bytes;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MDUzMDcw", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-395053070", "createdAt": "2020-04-16T22:52:48Z", "commit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjo1Mjo0OFrOGG59dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMzoyMTowN1rOGG6jJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg5NDI2MA==", "bodyText": "This should be under the data package in the plugin api", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409894260", "createdAt": "2020-04-16T22:52:48Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/PublicKey.java", "diffHunk": "@@ -12,7 +12,7 @@\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n-package org.hyperledger.besu.crypto;\n+package org.hyperledger.besu.plugin.services.securitymodule;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg5NDg2NA==", "bodyText": "This should be under the data package in the plugin api", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409894864", "createdAt": "2020-04-16T22:54:29Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/Signature.java", "diffHunk": "@@ -12,7 +12,7 @@\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n-package org.hyperledger.besu.crypto;\n+package org.hyperledger.besu.plugin.services.securitymodule;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg5NTY4NA==", "bodyText": "Since this is now a general purpose Ethereum signature data type in the plugin API I think this should include the recovery id.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409895684", "createdAt": "2020-04-16T22:56:39Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/Signature.java", "diffHunk": "@@ -12,7 +12,7 @@\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n-package org.hyperledger.besu.crypto;\n+package org.hyperledger.besu.plugin.services.securitymodule;\n \n import java.math.BigInteger;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkwMDQ2MQ==", "bodyText": "Doesn't look like this needs to be assigned to a field variable, couldn't this just be passed to the nodePrivateKeyFile function?", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409900461", "createdAt": "2020-04-16T23:10:24Z", "author": {"login": "jframe"}, "path": "plugins/localfile-securitymodule/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/localfile/LocalFileSecurityModulePlugin.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services.securitymodule.localfile;\n+\n+import org.hyperledger.besu.crypto.KeyPairSecurityModule;\n+import org.hyperledger.besu.crypto.KeyPairUtil;\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.plugin.BesuContext;\n+import org.hyperledger.besu.plugin.BesuPlugin;\n+import org.hyperledger.besu.plugin.services.BesuConfiguration;\n+import org.hyperledger.besu.plugin.services.PicoCLIOptions;\n+import org.hyperledger.besu.plugin.services.SecurityModuleService;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+import org.hyperledger.besu.plugin.services.securitymodule.localfile.configuration.LocalFileSecurityModuleCLIOptions;\n+\n+import java.io.File;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class LocalFileSecurityModulePlugin implements BesuPlugin {\n+  public static final String PICOCLI_NAMESPACE = \"localfile-security-module\";\n+\n+  private static final Logger LOG = LogManager.getLogger();\n+  static final String SECURITY_MODULE_NAME = \"localfile\";\n+  private final boolean isDocker = Boolean.getBoolean(\"besu.docker\");\n+  private final LocalFileSecurityModuleCLIOptions cliOptions =\n+      new LocalFileSecurityModuleCLIOptions();\n+  private BesuConfiguration besuConfiguration;\n+\n+  @Override\n+  public void register(final BesuContext context) {\n+    LOG.debug(\"Registering plugin\");\n+    registerCliOptions(context);\n+    registerSecurityModule(context);\n+  }\n+\n+  private void registerCliOptions(final BesuContext context) {\n+    if (!isFullInstantiation()) {\n+      return; // don't register cli options in docker mode\n+    }\n+\n+    final PicoCLIOptions picoCLIOptions =\n+        context\n+            .getService(PicoCLIOptions.class)\n+            .orElseThrow(\n+                () ->\n+                    new IllegalStateException(\n+                        \"Expecting a PicoCLIOptions service to register CLI options with, but none found.\"));\n+\n+    picoCLIOptions.addPicoCLIOptions(PICOCLI_NAMESPACE, cliOptions);\n+  }\n+\n+  private void registerSecurityModule(final BesuContext context) {\n+    context\n+        .getService(SecurityModuleService.class)\n+        .orElseThrow(\n+            () ->\n+                new RuntimeException(\n+                    \"Security Module Service Not available, cannot register Service Module: \"\n+                        + SECURITY_MODULE_NAME))\n+        .registerSecurityModule(SECURITY_MODULE_NAME, this::createFileBasedKeyPairSecurityModule);\n+  }\n+\n+  private SecurityModule createFileBasedKeyPairSecurityModule(\n+      final BesuConfiguration besuConfiguration) {\n+    this.besuConfiguration = besuConfiguration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkwMDc1Mw==", "bodyText": "nit: final", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409900753", "createdAt": "2020-04-16T23:11:13Z", "author": {"login": "jframe"}, "path": "plugins/localfile-securitymodule/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/localfile/LocalFileSecurityModulePlugin.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services.securitymodule.localfile;\n+\n+import org.hyperledger.besu.crypto.KeyPairSecurityModule;\n+import org.hyperledger.besu.crypto.KeyPairUtil;\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.plugin.BesuContext;\n+import org.hyperledger.besu.plugin.BesuPlugin;\n+import org.hyperledger.besu.plugin.services.BesuConfiguration;\n+import org.hyperledger.besu.plugin.services.PicoCLIOptions;\n+import org.hyperledger.besu.plugin.services.SecurityModuleService;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+import org.hyperledger.besu.plugin.services.securitymodule.localfile.configuration.LocalFileSecurityModuleCLIOptions;\n+\n+import java.io.File;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class LocalFileSecurityModulePlugin implements BesuPlugin {\n+  public static final String PICOCLI_NAMESPACE = \"localfile-security-module\";\n+\n+  private static final Logger LOG = LogManager.getLogger();\n+  static final String SECURITY_MODULE_NAME = \"localfile\";\n+  private final boolean isDocker = Boolean.getBoolean(\"besu.docker\");\n+  private final LocalFileSecurityModuleCLIOptions cliOptions =\n+      new LocalFileSecurityModuleCLIOptions();\n+  private BesuConfiguration besuConfiguration;\n+\n+  @Override\n+  public void register(final BesuContext context) {\n+    LOG.debug(\"Registering plugin\");\n+    registerCliOptions(context);\n+    registerSecurityModule(context);\n+  }\n+\n+  private void registerCliOptions(final BesuContext context) {\n+    if (!isFullInstantiation()) {\n+      return; // don't register cli options in docker mode\n+    }\n+\n+    final PicoCLIOptions picoCLIOptions =\n+        context\n+            .getService(PicoCLIOptions.class)\n+            .orElseThrow(\n+                () ->\n+                    new IllegalStateException(\n+                        \"Expecting a PicoCLIOptions service to register CLI options with, but none found.\"));\n+\n+    picoCLIOptions.addPicoCLIOptions(PICOCLI_NAMESPACE, cliOptions);\n+  }\n+\n+  private void registerSecurityModule(final BesuContext context) {\n+    context\n+        .getService(SecurityModuleService.class)\n+        .orElseThrow(\n+            () ->\n+                new RuntimeException(\n+                    \"Security Module Service Not available, cannot register Service Module: \"\n+                        + SECURITY_MODULE_NAME))\n+        .registerSecurityModule(SECURITY_MODULE_NAME, this::createFileBasedKeyPairSecurityModule);\n+  }\n+\n+  private SecurityModule createFileBasedKeyPairSecurityModule(\n+      final BesuConfiguration besuConfiguration) {\n+    this.besuConfiguration = besuConfiguration;\n+    final File privateKeyFile = nodePrivateKeyFile();\n+    final SECP256K1.KeyPair keyPair = KeyPairUtil.loadKeyPair(privateKeyFile);\n+    return new KeyPairSecurityModule(keyPair);\n+  }\n+\n+  private File nodePrivateKeyFile() {\n+    File nodePrivateKeyFile = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkwMzkxMA==", "bodyText": "Thinking an assertion would be better here, if the setProperty fails we want to know not just have the test be skipped.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409903910", "createdAt": "2020-04-16T23:21:07Z", "author": {"login": "jframe"}, "path": "plugins/localfile-securitymodule/src/test/java/org/hyperledger/besu/plugin/services/securitymodule/localfile/LocalFileSecurityModulePluginTest.java", "diffHunk": "@@ -0,0 +1,181 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services.securitymodule.localfile;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.assertThatExceptionOfType;\n+import static org.hyperledger.besu.plugin.services.securitymodule.localfile.LocalFileSecurityModulePlugin.PICOCLI_NAMESPACE;\n+import static org.hyperledger.besu.plugin.services.securitymodule.localfile.LocalFileSecurityModulePlugin.SECURITY_MODULE_NAME;\n+import static org.junit.Assume.assumeFalse;\n+import static org.junit.Assume.assumeTrue;\n+import static org.mockito.Mockito.when;\n+\n+import org.hyperledger.besu.crypto.KeyPairUtil;\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.plugin.BesuContext;\n+import org.hyperledger.besu.plugin.services.PicoCLIOptions;\n+import org.hyperledger.besu.plugin.services.SecurityModuleService;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+import org.hyperledger.besu.plugin.services.securitymodule.localfile.configuration.LocalFileSecurityModuleCLIOptions;\n+import org.hyperledger.besu.services.BesuConfigurationImpl;\n+import org.hyperledger.besu.services.PicoCLIOptionsImpl;\n+import org.hyperledger.besu.services.SecurityModuleServiceImpl;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Optional;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import picocli.CommandLine;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class LocalFileSecurityModulePluginTest {\n+  @Rule public final TemporaryFolder temp = new TemporaryFolder();\n+\n+  @Mock private BesuContext besuContext;\n+  private final SecurityModuleServiceImpl securityModuleService = new SecurityModuleServiceImpl();\n+  private CommandLine commandLine;\n+\n+  @Before\n+  public void setUp() {\n+    commandLine = new CommandLine(TestCommand.class);\n+\n+    when(besuContext.getService(PicoCLIOptions.class))\n+        .thenReturn(Optional.of(new PicoCLIOptionsImpl(commandLine)));\n+    when(besuContext.getService(SecurityModuleService.class))\n+        .thenReturn(Optional.of(securityModuleService));\n+  }\n+\n+  @Before\n+  @After\n+  public void resetSystemProps() {\n+    System.setProperty(\"besu.docker\", \"false\");\n+  }\n+\n+  @Test\n+  public void cliOptionIsDisabledUnderDockerMode() {\n+    System.setProperty(\"besu.docker\", \"true\");\n+    assumeTrue(Boolean.getBoolean(\"besu.docker\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc455365b78da4496b9ef0652712a745db600825"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a8fb1d84e8e34cbb473c43ef7d97bdb0ffcc32e", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/7a8fb1d84e8e34cbb473c43ef7d97bdb0ffcc32e", "committedDate": "2020-04-17T00:24:47Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "690618d03fca62c75064b7a75a60530a774b4b36", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/690618d03fca62c75064b7a75a60530a774b4b36", "committedDate": "2020-04-17T00:32:29Z", "message": "using final keyword in nodePrivateKeyFile()\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "570271a1cf7edff0d4938a492c43e3ef660f2973", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/570271a1cf7edff0d4938a492c43e3ef660f2973", "committedDate": "2020-04-17T00:56:15Z", "message": "Making PublicKey interface;\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de52ac41c01fd6e0656a561eb1efed568d57354d", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/de52ac41c01fd6e0656a561eb1efed568d57354d", "committedDate": "2020-04-17T01:04:06Z", "message": "Plugin API hash\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05752403e0d9ec22de81b0d604a20f6ed90df2ed", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/05752403e0d9ec22de81b0d604a20f6ed90df2ed", "committedDate": "2020-04-17T01:04:49Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8850fe85fca7c83812ad738b64a3cb360ca8abcf", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/8850fe85fca7c83812ad738b64a3cb360ca8abcf", "committedDate": "2020-04-17T01:09:25Z", "message": "tidying up LocalFileSecurityModulePlugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cce1bcbcb4779d5feecde8d41a58b0f6f89d8bbe", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/cce1bcbcb4779d5feecde8d41a58b0f6f89d8bbe", "committedDate": "2020-04-17T01:20:58Z", "message": "review - converting Signature to interface\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d83e47f0da0493896c063ee2bea5480024108f5f", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/d83e47f0da0493896c063ee2bea5480024108f5f", "committedDate": "2020-04-17T01:27:08Z", "message": "refactoring Signature and PublicKey in data subpackage\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MTU3NjEx", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-395157611", "createdAt": "2020-04-17T04:43:42Z", "commit": {"oid": "d83e47f0da0493896c063ee2bea5480024108f5f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNDo0Mzo0MlrOGG_yJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNDo0Nzo1NFrOGG_1og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk4OTY2OA==", "bodyText": "Can you add some javadoc", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409989668", "createdAt": "2020-04-17T04:43:42Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/data/Signature.java", "diffHunk": "@@ -12,24 +12,12 @@\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n-package org.hyperledger.besu.crypto;\n+package org.hyperledger.besu.plugin.services.securitymodule.data;\n \n import java.math.BigInteger;\n \n-public final class Signature {\n-  private final BigInteger r;\n-  private final BigInteger s;\n+public interface Signature {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83e47f0da0493896c063ee2bea5480024108f5f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk4OTczNg==", "bodyText": "can you add some javadoc", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409989736", "createdAt": "2020-04-17T04:43:57Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/data/PublicKey.java", "diffHunk": "@@ -12,23 +12,11 @@\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n-package org.hyperledger.besu.crypto;\n+package org.hyperledger.besu.plugin.services.securitymodule.data;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83e47f0da0493896c063ee2bea5480024108f5f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5MDUyMA==", "bodyText": "Is there any benefit for this to extend Function? Would of expected this to be a top level class with a create method following the style done for storage API which has a KeyValueStorageFactory", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409990520", "createdAt": "2020-04-17T04:47:40Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/SecurityModuleService.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+/**\n+ * This service allows plugins to register Security Module which is abstraction of cryptographic\n+ * operations by deferring to specific provider such as BouncyCastle\n+ */\n+@Unstable\n+public interface SecurityModuleService {\n+\n+  @FunctionalInterface\n+  interface SecurityModuleProvider extends Function<BesuConfiguration, SecurityModule> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83e47f0da0493896c063ee2bea5480024108f5f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTk5MDU2Mg==", "bodyText": "Can some javadoc be added", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r409990562", "createdAt": "2020-04-17T04:47:54Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/SecurityModuleService.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+\n+import java.util.Optional;\n+import java.util.function.Function;\n+\n+/**\n+ * This service allows plugins to register Security Module which is abstraction of cryptographic\n+ * operations by deferring to specific provider such as BouncyCastle\n+ */\n+@Unstable\n+public interface SecurityModuleService {\n+\n+  @FunctionalInterface", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d83e47f0da0493896c063ee2bea5480024108f5f"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5f17386970e5fe7d8e358cb4eb794d0dd6879c4", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/c5f17386970e5fe7d8e358cb4eb794d0dd6879c4", "committedDate": "2020-04-17T05:07:12Z", "message": "review - refactoring inner class to be top level class. Adding javadoc\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3088be354506d5ea572e3b1f533d11859dddd6db", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/3088be354506d5ea572e3b1f533d11859dddd6db", "committedDate": "2020-04-17T05:12:58Z", "message": "refactoring method out of SecurityModuleProvider\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c28cc76923df73340759d947d2f7636eb6ccf74d", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/c28cc76923df73340759d947d2f7636eb6ccf74d", "committedDate": "2020-04-17T05:16:26Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7341cfcfca001c173c417430c36033b2aa9483f1", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/7341cfcfca001c173c417430c36033b2aa9483f1", "committedDate": "2020-04-17T05:23:18Z", "message": "adding unstable annotation in plugin interfaces\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaf709fadfd4e6e70b8dca92d62345777e0b35b0", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/eaf709fadfd4e6e70b8dca92d62345777e0b35b0", "committedDate": "2020-04-17T11:02:53Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16270810a64b918f44a28535365701f36189d7e9", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/16270810a64b918f44a28535365701f36189d7e9", "committedDate": "2020-04-20T00:00:30Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a27c6660cc044c06eefc065d33a3cc804e2279a", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/6a27c6660cc044c06eefc065d33a3cc804e2279a", "committedDate": "2020-04-20T01:14:07Z", "message": "expose buildNodeKey from BesuCommand so that PublicKeySubcommand can use it\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c19a1a6e958972030c4e3dc61240e442c5f03ce", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/7c19a1a6e958972030c4e3dc61240e442c5f03ce", "committedDate": "2020-04-20T01:16:11Z", "message": "Merge upstream master\n\nSigned-off-by: Usman Saleem <usman@usmans.info>\n\n# Conflicts:\n#\tbesu/src/test/resources/everything_config.toml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25af953f801e5599c274add403d862d655f654e8", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/25af953f801e5599c274add403d862d655f654e8", "committedDate": "2020-04-20T01:46:37Z", "message": "use functional reference for nodekey in public key subcommand\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTAwNDA4", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-396100408", "createdAt": "2020-04-20T02:10:23Z", "commit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjoxMDoyNFrOGIAc8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjoxMTo0OVrOGIAefw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0OTIwMQ==", "bodyText": "Still prefer to not have this extend Function. Think this would be much cleaner with a just a SecurityModule create(BesuConfiguration config) method.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411049201", "createdAt": "2020-04-20T02:10:24Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/SecurityModuleProvider.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services.securitymodule;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.BesuConfiguration;\n+\n+import java.util.function.Function;\n+\n+/**\n+ * Represents Security Module Provider Function which takes an instance of BesuConfiguration and\n+ * produces an instance of SecurityModule.\n+ */\n+@Unstable\n+@FunctionalInterface\n+public interface SecurityModuleProvider extends Function<BesuConfiguration, SecurityModule> {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0OTU5OQ==", "bodyText": "Since the crypto provider can fail signing, calculating key agreement etc. I think we should have these methods throwing a custom exception, perhaps a SecurityModuleException.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411049599", "createdAt": "2020-04-20T02:11:49Z", "author": {"login": "jframe"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/SecurityModule.java", "diffHunk": "@@ -21,11 +25,12 @@\n  * interface ensures cryptographic functions required by Ethereum are available to the application\n  * at large, without releasing the content of the private key.\n  */\n+@Unstable\n public interface SecurityModule {\n \n   /**\n    * @param dataHash The Keccack hash of a set of data, which is to be signed.\n-   * @return the signature (R, S, recId) generated by signing the hash with the node key\n+   * @return the signature (R, S) generated by signing the hash with the node key\n    */\n   Signature sign(Bytes32 dataHash);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTA0MjEx", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-396104211", "createdAt": "2020-04-20T02:27:41Z", "commit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjoyNzo0MVrOGIAtlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMjo1MDo0MFrOGIBEvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1MzQ2MA==", "bodyText": "nit: is there a standard as when we use - or not? i.e. local-file-security-module\"? or localfilesecuritymodule?", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411053460", "createdAt": "2020-04-20T02:27:41Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/dsl/build.gradle", "diffHunk": "@@ -16,6 +16,7 @@ dependencies {\n   implementation project(':metrics:core')\n   implementation project(':plugin-api')\n   implementation project(':plugins:rocksdb')\n+  implementation project(':plugins:localfile-securitymodule')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1NTI0Ng==", "bodyText": "this is a side effect and not the purpose of this function - I think it'd be better for this to be called explicitly when needed.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411055246", "createdAt": "2020-04-20T02:34:21Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1946,15 +1962,16 @@ private Path pluginsDir() {\n     }\n   }\n \n-  public File nodePrivateKeyFile() {\n-    File nodePrivateKeyFile = null;\n-    if (isFullInstantiation()) {\n-      nodePrivateKeyFile = standaloneCommands.nodePrivateKeyFile;\n-    }\n+  private NodeKey buildNodeKey() {\n+    addConfigurationService(); // its a no-op if besu configuration service is already initialized", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1NTgxMQ==", "bodyText": "probably don't need to pass in the string as a parameter - you can take it from the class variable.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411055811", "createdAt": "2020-04-20T02:36:33Z", "author": {"login": "rain-on"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java", "diffHunk": "@@ -1946,15 +1962,16 @@ private Path pluginsDir() {\n     }\n   }\n \n-  public File nodePrivateKeyFile() {\n-    File nodePrivateKeyFile = null;\n-    if (isFullInstantiation()) {\n-      nodePrivateKeyFile = standaloneCommands.nodePrivateKeyFile;\n-    }\n+  private NodeKey buildNodeKey() {\n+    addConfigurationService(); // its a no-op if besu configuration service is already initialized\n+    return new NodeKey(securityModuleProvider(securityModuleProviderName));\n+  }\n \n-    return nodePrivateKeyFile != null\n-        ? nodePrivateKeyFile\n-        : KeyPairUtil.getDefaultKeyFile(dataDir());\n+  private SecurityModule securityModuleProvider(final String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1ODc5Nw==", "bodyText": "unfortunately, this is kinda dangerous - when security classes offer a getEncoded() they typically imply an ASN1 encoding - not just a set of raw bytes.\nSo if we offer this as a function on a public key, we may need to be more explicit about what we expect.\n[Given this is part of the interface, it will require javadoc.]", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411058797", "createdAt": "2020-04-20T02:48:15Z", "author": {"login": "rain-on"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/data/PublicKey.java", "diffHunk": "@@ -12,23 +12,17 @@\n  *\n  * SPDX-License-Identifier: Apache-2.0\n  */\n-package org.hyperledger.besu.crypto;\n+package org.hyperledger.besu.plugin.services.securitymodule.data;\n \n-import org.apache.tuweni.bytes.Bytes;\n-\n-public class PublicKey {\n-\n-  private final Bytes encoded;\n+import org.hyperledger.besu.plugin.Unstable;\n \n-  public PublicKey(final Bytes encoded) {\n-    this.encoded = encoded;\n-  }\n-\n-  public static PublicKey create(final Bytes encoded) {\n-    return new PublicKey(encoded);\n-  }\n+import org.apache.tuweni.bytes.Bytes;\n \n-  public Bytes getEncoded() {\n-    return encoded;\n-  }\n+/**\n+ * Represents a function which provides encoded Bytes of Public Key (such as SECP256K1 Public Key).\n+ */\n+@Unstable\n+@FunctionalInterface\n+public interface PublicKey {\n+  Bytes getEncoded();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA1OTM5MQ==", "bodyText": "I know its stolen, but its terribly named - can we change this to be more meaningful - i.e. or \"containerised\"? even \"inDocker\"?\nIs this function even required - does it add value over the literal variable?", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411059391", "createdAt": "2020-04-20T02:50:40Z", "author": {"login": "rain-on"}, "path": "plugins/localfile-securitymodule/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/localfile/LocalFileSecurityModulePlugin.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services.securitymodule.localfile;\n+\n+import org.hyperledger.besu.crypto.KeyPairSecurityModule;\n+import org.hyperledger.besu.crypto.KeyPairUtil;\n+import org.hyperledger.besu.crypto.SECP256K1;\n+import org.hyperledger.besu.plugin.BesuContext;\n+import org.hyperledger.besu.plugin.BesuPlugin;\n+import org.hyperledger.besu.plugin.services.BesuConfiguration;\n+import org.hyperledger.besu.plugin.services.PicoCLIOptions;\n+import org.hyperledger.besu.plugin.services.SecurityModuleService;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModule;\n+import org.hyperledger.besu.plugin.services.securitymodule.localfile.configuration.LocalFileSecurityModuleCLIOptions;\n+\n+import java.io.File;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+public class LocalFileSecurityModulePlugin implements BesuPlugin {\n+  public static final String PICOCLI_NAMESPACE = \"localfile-security-module\";\n+\n+  private static final Logger LOG = LogManager.getLogger();\n+  static final String SECURITY_MODULE_NAME = \"localfile\";\n+  private final boolean isDocker = Boolean.getBoolean(\"besu.docker\");\n+  private final LocalFileSecurityModuleCLIOptions cliOptions =\n+      new LocalFileSecurityModuleCLIOptions();\n+\n+  @Override\n+  public void register(final BesuContext context) {\n+    LOG.debug(\"Registering plugin\");\n+    registerCliOptions(context);\n+    registerSecurityModule(context);\n+  }\n+\n+  private void registerCliOptions(final BesuContext context) {\n+    if (!isFullInstantiation()) {\n+      return; // don't register cli options in docker mode\n+    }\n+\n+    final PicoCLIOptions picoCLIOptions =\n+        context\n+            .getService(PicoCLIOptions.class)\n+            .orElseThrow(\n+                () ->\n+                    new IllegalStateException(\n+                        \"Expecting a PicoCLIOptions service to register CLI options with, but none found.\"));\n+\n+    picoCLIOptions.addPicoCLIOptions(PICOCLI_NAMESPACE, cliOptions);\n+  }\n+\n+  private void registerSecurityModule(final BesuContext context) {\n+    context\n+        .getService(SecurityModuleService.class)\n+        .orElseThrow(\n+            () ->\n+                new RuntimeException(\n+                    \"Security Module Service Not available, cannot register Service Module: \"\n+                        + SECURITY_MODULE_NAME))\n+        .registerSecurityModule(SECURITY_MODULE_NAME, this::createFileBasedKeyPairSecurityModule);\n+  }\n+\n+  private SecurityModule createFileBasedKeyPairSecurityModule(\n+      final BesuConfiguration besuConfiguration) {\n+    final File privateKeyFile = nodePrivateKeyFile(besuConfiguration);\n+    final SECP256K1.KeyPair keyPair = KeyPairUtil.loadKeyPair(privateKeyFile);\n+    return new KeyPairSecurityModule(keyPair);\n+  }\n+\n+  private File nodePrivateKeyFile(final BesuConfiguration besuConfiguration) {\n+    final File nodePrivateKeyFile = isFullInstantiation() ? cliOptions.getPrivateKeyFile() : null;\n+\n+    return nodePrivateKeyFile != null\n+        ? nodePrivateKeyFile\n+        : KeyPairUtil.getDefaultKeyFile(besuConfiguration.getDataPath());\n+  }\n+\n+  private boolean isFullInstantiation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTE4MzE0", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-396118314", "createdAt": "2020-04-20T03:29:02Z", "commit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMzoyOTowM1rOGIBrKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMzozNjoyOFrOGIByvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA2OTIyNw==", "bodyText": "You can call this just nodeKey as the Supplier prefix can be inferred from the type.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411069227", "createdAt": "2020-04-20T03:29:03Z", "author": {"login": "CjHare"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/subcommands/PublicKeySubCommand.java", "diffHunk": "@@ -62,25 +63,20 @@\n   private CommandSpec spec; // Picocli injects reference to command spec\n \n   private final PrintStream out;\n-  private final KeyLoader keyLoader;\n+  private final Supplier<NodeKey> nodeKeySupplier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA2OTY3Mg==", "bodyText": "Was this change because NPE were being encountered?", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411069672", "createdAt": "2020-04-20T03:30:56Z", "author": {"login": "CjHare"}, "path": "besu/src/main/java/org/hyperledger/besu/cli/subcommands/PublicKeySubCommand.java", "diffHunk": "@@ -113,22 +109,23 @@ public void run() {\n       checkNotNull(parentCommand);\n       checkNotNull(parentCommand.parentCommand);\n \n-      parentCommand.getKeyPair().ifPresent(this::outputPublicKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3MDM0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This service allows plugins to register Security Module which is abstraction of cryptographic\n          \n          \n            \n             * This service allows plugins to register a Security Module, which is abstraction of cryptographic", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411070348", "createdAt": "2020-04-20T03:33:21Z", "author": {"login": "CjHare"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/SecurityModuleService.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModuleProvider;\n+\n+import java.util.Optional;\n+\n+/**\n+ * This service allows plugins to register Security Module which is abstraction of cryptographic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3MDUyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * operations by deferring to specific provider such as BouncyCastle\n          \n          \n            \n             * operations that defer to specific provider (e.g. BouncyCastle).", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411070529", "createdAt": "2020-04-20T03:33:54Z", "author": {"login": "CjHare"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/SecurityModuleService.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModuleProvider;\n+\n+import java.util.Optional;\n+\n+/**\n+ * This service allows plugins to register Security Module which is abstraction of cryptographic\n+ * operations by deferring to specific provider such as BouncyCastle", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3MTE2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Registers a factory as available for creating SecurityProvider instances.\n          \n          \n            \n               * Registers a provider of security modules.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411071164", "createdAt": "2020-04-20T03:36:28Z", "author": {"login": "CjHare"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/SecurityModuleService.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.securitymodule.SecurityModuleProvider;\n+\n+import java.util.Optional;\n+\n+/**\n+ * This service allows plugins to register Security Module which is abstraction of cryptographic\n+ * operations by deferring to specific provider such as BouncyCastle\n+ */\n+@Unstable\n+public interface SecurityModuleService {\n+\n+  /**\n+   * Registers a factory as available for creating SecurityProvider instances.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTIxMDkz", "url": "https://github.com/hyperledger/besu/pull/713#pullrequestreview-396121093", "createdAt": "2020-04-20T03:41:35Z", "commit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMzo0MTozNVrOGIB3wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwMzo0NjoxNVrOGIB8uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3MjQ0OA==", "bodyText": "Think this would be much cleaner with a just a SecurityModule create(BesuConfiguration config) method.\n\nIt would also be more consistent with the approach use in the other plugins.", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411072448", "createdAt": "2020-04-20T03:41:35Z", "author": {"login": "CjHare"}, "path": "plugin-api/src/main/java/org/hyperledger/besu/plugin/services/securitymodule/SecurityModuleProvider.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.plugin.services.securitymodule;\n+\n+import org.hyperledger.besu.plugin.Unstable;\n+import org.hyperledger.besu.plugin.services.BesuConfiguration;\n+\n+import java.util.function.Function;\n+\n+/**\n+ * Represents Security Module Provider Function which takes an instance of BesuConfiguration and\n+ * produces an instance of SecurityModule.\n+ */\n+@Unstable\n+@FunctionalInterface\n+public interface SecurityModuleProvider extends Function<BesuConfiguration, SecurityModule> {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA0OTIwMQ=="}, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTA3MzcyMw==", "bodyText": "Is there a reason to break alphabetical ordering?\n('plugins:localfile-securitymodule' would be above 'plugins:rocksdb')", "url": "https://github.com/hyperledger/besu/pull/713#discussion_r411073723", "createdAt": "2020-04-20T03:46:15Z", "author": {"login": "CjHare"}, "path": "settings.gradle", "diffHunk": "@@ -42,6 +42,7 @@ include 'nat'\n include 'besu'\n include 'plugin-api'\n include 'plugins:rocksdb'\n+include 'plugins:localfile-securitymodule'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25af953f801e5599c274add403d862d655f654e8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2487f0ffbaec4f4e1c28addd94691f2bc8829be3", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/2487f0ffbaec4f4e1c28addd94691f2bc8829be3", "committedDate": "2020-04-20T04:37:58Z", "message": "unextend SecurityModuleProvider from Functional.\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "007b87ad8a1ff17f144fef39a49e36d52a8ac6e7", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/007b87ad8a1ff17f144fef39a49e36d52a8ac6e7", "committedDate": "2020-04-20T04:44:56Z", "message": "SecurityModuleException\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47ab014c5355e54f03d4a5df75d17155cf8d3935", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/47ab014c5355e54f03d4a5df75d17155cf8d3935", "committedDate": "2020-04-20T04:45:23Z", "message": "plugin checksum\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6ae3a9eadb62a1eeb760f2df5b14a87d4809da5", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/a6ae3a9eadb62a1eeb760f2df5b14a87d4809da5", "committedDate": "2020-04-20T05:05:02Z", "message": "Use Runnable function reference to initialize besu configuration service from subcommand\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4943186269051fb24c282cbf2397c207b27c7409", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/4943186269051fb24c282cbf2397c207b27c7409", "committedDate": "2020-04-20T05:19:48Z", "message": "LocalFileSecurityModulePlugin - Use isDocker directly\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc0be7f55b7be3c1766d621c6119afe6f8411f0b", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/fc0be7f55b7be3c1766d621c6119afe6f8411f0b", "committedDate": "2020-04-20T05:26:19Z", "message": "review - rename variable to nodeKey\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a9525a7858455bc66767f532c0b9833787640ae", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/0a9525a7858455bc66767f532c0b9833787640ae", "committedDate": "2020-04-20T05:37:09Z", "message": "review - javadoc\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2ff900e77ff7b564a986224169259b24e3caa85", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/e2ff900e77ff7b564a986224169259b24e3caa85", "committedDate": "2020-04-20T05:56:43Z", "message": "fix compilation issues\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c643c23c09c8763c925e9f329faf429493745788", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/c643c23c09c8763c925e9f329faf429493745788", "committedDate": "2020-04-20T07:05:46Z", "message": "use orElseGet\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30c52d1bd8ba6fa13782de80f7c812176b95f73e", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/30c52d1bd8ba6fa13782de80f7c812176b95f73e", "committedDate": "2020-04-20T07:07:35Z", "message": "settings.gradle ordering\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb7bc22bf41d2c5bc025d0ff6f27c6179b7d7df5", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/bb7bc22bf41d2c5bc025d0ff6f27c6179b7d7df5", "committedDate": "2020-04-20T09:47:34Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ad1c451aeeea49eacfe06dd27cedb47aea6174f", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/1ad1c451aeeea49eacfe06dd27cedb47aea6174f", "committedDate": "2020-04-20T23:57:54Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9a42f4d4d51e43d88c192463d68f87fdbc4f4e7", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/a9a42f4d4d51e43d88c192463d68f87fdbc4f4e7", "committedDate": "2020-04-21T05:58:06Z", "message": "Expose ECPoint from PublicKey interface'\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "860a411817d2b73d9a8bdc976935b24647e68de2", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/860a411817d2b73d9a8bdc976935b24647e68de2", "committedDate": "2020-04-21T07:17:01Z", "message": "ECPoint byte[] to BigInteger conversion padding\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91c90c9c7ea0ac07f3a51f14df4f26134305e95f", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/91c90c9c7ea0ac07f3a51f14df4f26134305e95f", "committedDate": "2020-04-21T07:17:22Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aac7444b87e3fd667bb22a56ff225c3e03db997", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/2aac7444b87e3fd667bb22a56ff225c3e03db997", "committedDate": "2020-04-21T07:19:09Z", "message": "javadoc\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa53c235ae3ef9b5ea1fda8ad2a45bbf12762385", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/aa53c235ae3ef9b5ea1fda8ad2a45bbf12762385", "committedDate": "2020-04-21T07:20:29Z", "message": "checksum\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715450d8613327c9669311ef69d9785c8a77d2b5", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/715450d8613327c9669311ef69d9785c8a77d2b5", "committedDate": "2020-04-21T07:24:01Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79b4f318e381e6b5de78fd535e77bc52515cef7d", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/79b4f318e381e6b5de78fd535e77bc52515cef7d", "committedDate": "2020-04-21T07:30:30Z", "message": "plugin checksum and final keyword\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee26e5c4641f1e8ee16db3afb7bf08ce943fed39", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/ee26e5c4641f1e8ee16db3afb7bf08ce943fed39", "committedDate": "2020-04-21T23:53:57Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bad3f593454bfe92e5e407e6055e0093f948c34", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/4bad3f593454bfe92e5e407e6055e0093f948c34", "committedDate": "2020-04-22T02:00:59Z", "message": "ECPointUtil unsigned x y\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4897a0ae6e3c21960d8631f1d97cfac605e0dbf7", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/4897a0ae6e3c21960d8631f1d97cfac605e0dbf7", "committedDate": "2020-04-22T02:19:00Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b6589fb8e441a9c464033d16d9c89e288acfc00", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/8b6589fb8e441a9c464033d16d9c89e288acfc00", "committedDate": "2020-04-22T04:32:29Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3437e7f596e23d9974860e8ab07048819019a3ca", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/3437e7f596e23d9974860e8ab07048819019a3ca", "committedDate": "2020-04-22T23:59:59Z", "message": "merge upstream master\n\nSigned-off-by: Usman Saleem <usman@usmans.info>\n\n# Conflicts:\n#\tbesu/src/main/java/org/hyperledger/besu/cli/BesuCommand.java\n#\tbesu/src/main/java/org/hyperledger/besu/controller/BesuControllerBuilder.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24cccadbc284508cd559a79437655ad5642a8b16", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/24cccadbc284508cd559a79437655ad5642a8b16", "committedDate": "2020-04-23T00:08:16Z", "message": "spotless fix\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39deda8dcf4fce0ef4b89e67b1bcaf8d9f5201eb", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/39deda8dcf4fce0ef4b89e67b1bcaf8d9f5201eb", "committedDate": "2020-04-23T04:48:31Z", "message": "rename method\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c25d92149127a0a6d558a856b134ffe984031806", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/c25d92149127a0a6d558a856b134ffe984031806", "committedDate": "2020-04-23T04:49:02Z", "message": "Merge remote-tracking branch 'upstream/master' into nodekey_plugin\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9fec183aca4a03e407813432e1e0317e8241cda", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/d9fec183aca4a03e407813432e1e0317e8241cda", "committedDate": "2020-04-23T07:35:19Z", "message": "Removing internal plugin and directly instantiating KeyPairSecurityModule\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afbc5884f586decad5b9754de50b2a746bfb2eab", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/afbc5884f586decad5b9754de50b2a746bfb2eab", "committedDate": "2020-04-23T07:41:06Z", "message": "removing internal plugin from acceptance dsl\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6283c0caf360d5421f08d469ef8a0518c59fbbb5", "author": {"user": {"login": "usmansaleem", "name": "Usman Saleem"}}, "url": "https://github.com/hyperledger/besu/commit/6283c0caf360d5421f08d469ef8a0518c59fbbb5", "committedDate": "2020-04-23T07:52:10Z", "message": "javadoc\n\nSigned-off-by: Usman Saleem <usman@usmans.info>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1717, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}