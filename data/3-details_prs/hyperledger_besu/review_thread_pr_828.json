{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMDE4MzA3", "number": 828, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMzoyMzoyN1rOD40zGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMzoyNzoyMlrOD400Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTExODk2OnYy", "diffSide": "RIGHT", "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/web3j/privacy/contracts/PrivacyGroupTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMzoyMzoyN1rOGPwW1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMTowNzo0OFrOGQXdUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3NDEwMQ==", "bodyText": "Remove the System.out.println :)", "url": "https://github.com/hyperledger/besu/pull/828#discussion_r419174101", "createdAt": "2020-05-03T23:23:27Z", "author": {"login": "lucassaldanha"}, "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/web3j/privacy/contracts/PrivacyGroupTest.java", "diffHunk": "@@ -131,6 +134,30 @@ public void ensureContractIsNotLockedAfterDeploy() throws Exception {\n     assertThat(privacyGroup.canExecute().send()).isTrue();\n   }\n \n+  @Test\n+  public void ensurePrivacyGroupVersionIsAlwaysDifferent() throws Exception {\n+    privacyGroup\n+        .addParticipants(firstParticipant.raw(), Collections.singletonList(secondParticipant.raw()))\n+        .send();\n+    final byte[] version1 = privacyGroup.getVersion().send();\n+    privacyGroup.lock().send();\n+    privacyGroup\n+        .addParticipants(firstParticipant.raw(), Collections.singletonList(thirdParticipant.raw()))\n+        .send();\n+    final byte[] version2 = privacyGroup.getVersion().send();\n+    privacyGroup.lock().send();\n+    privacyGroup.removeParticipant(firstParticipant.raw(), secondParticipant.raw()).send();\n+    final byte[] version3 = privacyGroup.getVersion().send();\n+\n+    System.out.println(Arrays.toString(version1));\n+    System.out.println(Arrays.toString(version2));\n+    System.out.println(Arrays.toString(version3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e786dd1d8a45a6b6294602f7579a6bd2f0e2b0f7"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgxNDczNg==", "bodyText": "Done!", "url": "https://github.com/hyperledger/besu/pull/828#discussion_r419814736", "createdAt": "2020-05-05T01:07:48Z", "author": {"login": "pinges"}, "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/web3j/privacy/contracts/PrivacyGroupTest.java", "diffHunk": "@@ -131,6 +134,30 @@ public void ensureContractIsNotLockedAfterDeploy() throws Exception {\n     assertThat(privacyGroup.canExecute().send()).isTrue();\n   }\n \n+  @Test\n+  public void ensurePrivacyGroupVersionIsAlwaysDifferent() throws Exception {\n+    privacyGroup\n+        .addParticipants(firstParticipant.raw(), Collections.singletonList(secondParticipant.raw()))\n+        .send();\n+    final byte[] version1 = privacyGroup.getVersion().send();\n+    privacyGroup.lock().send();\n+    privacyGroup\n+        .addParticipants(firstParticipant.raw(), Collections.singletonList(thirdParticipant.raw()))\n+        .send();\n+    final byte[] version2 = privacyGroup.getVersion().send();\n+    privacyGroup.lock().send();\n+    privacyGroup.removeParticipant(firstParticipant.raw(), secondParticipant.raw()).send();\n+    final byte[] version3 = privacyGroup.getVersion().send();\n+\n+    System.out.println(Arrays.toString(version1));\n+    System.out.println(Arrays.toString(version2));\n+    System.out.println(Arrays.toString(version3));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3NDEwMQ=="}, "originalCommit": {"oid": "e786dd1d8a45a6b6294602f7579a6bd2f0e2b0f7"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTEyMTUxOnYy", "diffSide": "RIGHT", "path": "privacy-contracts/src/main/solidity/DefaultOnChainPrivacyGroupManagementContract.sol", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMzoyNzoyMlrOGPwYMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMTowNToxNVrOGQXa9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3NDQ0OA==", "bodyText": "Have you tested the impact of this change in web3j and web3js-eea? If they aren't compatible, we need at least to have GIs to update the libraries after we change this.", "url": "https://github.com/hyperledger/besu/pull/828#discussion_r419174448", "createdAt": "2020-05-03T23:27:22Z", "author": {"login": "lucassaldanha"}, "path": "privacy-contracts/src/main/solidity/DefaultOnChainPrivacyGroupManagementContract.sol", "diffHunk": "@@ -4,11 +4,11 @@ import \"./OnChainPrivacyGroupManagementInterface.sol\";\n contract DefaultOnChainPrivacyGroupManagementContract is OnChainPrivacyGroupManagementInterface {\n \n     bool private _canExecute;\n-    int private _version;\n+    bytes32 private _version;\n     bytes32[] private distributionList;\n     mapping(bytes32 => uint256) private distributionIndexOf;\n \n-    function getVersion() external view returns (int) {\n+    function getVersion() external view returns (bytes32) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e786dd1d8a45a6b6294602f7579a6bd2f0e2b0f7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgxNDEzMg==", "bodyText": "There should not be any public APIs for the version number in web3j(s), as this is entirely handled inside Besu. But we should check that!", "url": "https://github.com/hyperledger/besu/pull/828#discussion_r419814132", "createdAt": "2020-05-05T01:05:15Z", "author": {"login": "pinges"}, "path": "privacy-contracts/src/main/solidity/DefaultOnChainPrivacyGroupManagementContract.sol", "diffHunk": "@@ -4,11 +4,11 @@ import \"./OnChainPrivacyGroupManagementInterface.sol\";\n contract DefaultOnChainPrivacyGroupManagementContract is OnChainPrivacyGroupManagementInterface {\n \n     bool private _canExecute;\n-    int private _version;\n+    bytes32 private _version;\n     bytes32[] private distributionList;\n     mapping(bytes32 => uint256) private distributionIndexOf;\n \n-    function getVersion() external view returns (int) {\n+    function getVersion() external view returns (bytes32) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE3NDQ0OA=="}, "originalCommit": {"oid": "e786dd1d8a45a6b6294602f7579a6bd2f0e2b0f7"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 972, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}