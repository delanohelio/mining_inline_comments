{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NDExMDYy", "number": 767, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjo1Nzo1OVrOD03O8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDo1Njo0NFrOD1eOzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzU3NDg4OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNjo1ODowMFrOGKA6Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNTo0MTowM1rOGKu3Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1Mzg2Ng==", "bodyText": "I see that it is not being used by the method, but why the underscore variable name? Is it just how you are denoting that it is not used?", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r413153866", "createdAt": "2020-04-22T16:58:00Z", "author": {"login": "davemec"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +152,28 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d87bed3c4f5a60d91803af711a2598d3fd4e04e2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MjEwNg==", "bodyText": "Yup! Common functional pattern to let the reader know early that they don't have to worry about it.", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r413172106", "createdAt": "2020-04-22T17:23:09Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +152,28 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1Mzg2Ng=="}, "originalCommit": {"oid": "d87bed3c4f5a60d91803af711a2598d3fd4e04e2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIwOTU1Mg==", "bodyText": "Should we handle that at the lambda level and for the method signature actually just remove the param?", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r413209552", "createdAt": "2020-04-22T18:14:22Z", "author": {"login": "davemec"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +152,28 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1Mzg2Ng=="}, "originalCommit": {"oid": "d87bed3c4f5a60d91803af711a2598d3fd4e04e2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzM1NTgwNA==", "bodyText": "If we never use it then for sure, I'll have to look into that.", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r413355804", "createdAt": "2020-04-22T21:47:10Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +152,28 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1Mzg2Ng=="}, "originalCommit": {"oid": "d87bed3c4f5a60d91803af711a2598d3fd4e04e2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkwNjQ2MA==", "bodyText": "You were right, it was pretty useless. It was only used in one place that already had access to the blockchain in the scope anyways!", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r413906460", "createdAt": "2020-04-23T15:40:46Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +152,28 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1Mzg2Ng=="}, "originalCommit": {"oid": "d87bed3c4f5a60d91803af711a2598d3fd4e04e2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkwNjcxOA==", "bodyText": "I made a separate PR removing it", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r413906718", "createdAt": "2020-04-23T15:41:03Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +152,28 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1Mzg2Ng=="}, "originalCommit": {"oid": "d87bed3c4f5a60d91803af711a2598d3fd4e04e2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Mzk2NDMxOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDo1Njo0NFrOGK7xlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjoxODowM1rOGK-ZDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDExODI5NA==", "bodyText": "Maybe this is a problem that was already in the code. But I have just thought about it.\nIf the filter is using a blockhash, we shouldn't be adding logs from any other block into it. However, it looks like our log filtering logic would add the logs regardless. Because in this case, the blockhash in the filter won't be empty but the from/to block parameter will be empty.", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r414118294", "createdAt": "2020-04-23T20:56:44Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +153,45 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {\n     final Hash blockHash = event.getBlock().getHash();\n     final Collection<BlockFilter> blockFilters =\n         filterRepository.getFiltersOfType(BlockFilter.class);\n     blockFilters.forEach(\n-        (filter) -> {\n+        filter -> {\n           synchronized (filter) {\n             filter.addBlockHash(blockHash);\n           }\n         });\n \n-    filterRepository.getFiltersOfType(LogFilter.class).forEach(this::addNewMatchingLogs);\n-  }\n-\n-  private void addNewMatchingLogs(final LogFilter filter) {\n-    final long fromBlockNumber = blockchainQueries.headBlockNumber();\n-    final long toBlockNumber =\n-        filter.getToBlock().getNumber().orElse(blockchainQueries.headBlockNumber());\n-\n-    final List<LogWithMetadata> logs = findLogsWithinRange(filter, fromBlockNumber, toBlockNumber);\n-\n-    filter.addLogs(logs);\n+    final List<LogWithMetadata> logsWithMetadata = event.getLogsWithMetadata();\n+    filterRepository.getFiltersOfType(LogFilter.class).stream()\n+        .filter(\n+            // Only keep filters where the \"to\" block could include the block in the event\n+            filter -> {\n+              final OptionalLong maybeToBlockNumber = filter.getToBlock().getNumber();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44fe98d25b1fe6bbfdbaf53fa8824c16eefd2524"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE1ODQ5Nw==", "bodyText": "I'm not sure if I understand but these LogFilters don't specify a block hash.", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r414158497", "createdAt": "2020-04-23T22:12:05Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +153,45 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {\n     final Hash blockHash = event.getBlock().getHash();\n     final Collection<BlockFilter> blockFilters =\n         filterRepository.getFiltersOfType(BlockFilter.class);\n     blockFilters.forEach(\n-        (filter) -> {\n+        filter -> {\n           synchronized (filter) {\n             filter.addBlockHash(blockHash);\n           }\n         });\n \n-    filterRepository.getFiltersOfType(LogFilter.class).forEach(this::addNewMatchingLogs);\n-  }\n-\n-  private void addNewMatchingLogs(final LogFilter filter) {\n-    final long fromBlockNumber = blockchainQueries.headBlockNumber();\n-    final long toBlockNumber =\n-        filter.getToBlock().getNumber().orElse(blockchainQueries.headBlockNumber());\n-\n-    final List<LogWithMetadata> logs = findLogsWithinRange(filter, fromBlockNumber, toBlockNumber);\n-\n-    filter.addLogs(logs);\n+    final List<LogWithMetadata> logsWithMetadata = event.getLogsWithMetadata();\n+    filterRepository.getFiltersOfType(LogFilter.class).stream()\n+        .filter(\n+            // Only keep filters where the \"to\" block could include the block in the event\n+            filter -> {\n+              final OptionalLong maybeToBlockNumber = filter.getToBlock().getNumber();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDExODI5NA=="}, "originalCommit": {"oid": "44fe98d25b1fe6bbfdbaf53fa8824c16eefd2524"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE2MTE2NA==", "bodyText": "Ah nvm... I mixed up with eth_getLogs!", "url": "https://github.com/hyperledger/besu/pull/767#discussion_r414161164", "createdAt": "2020-04-23T22:18:03Z", "author": {"login": "lucassaldanha"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/filter/FilterManager.java", "diffHunk": "@@ -151,28 +153,45 @@ public boolean uninstallFilter(final String filterId) {\n     }\n   }\n \n-  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain blockchain) {\n+  public void recordBlockEvent(final BlockAddedEvent event, final Blockchain __) {\n     final Hash blockHash = event.getBlock().getHash();\n     final Collection<BlockFilter> blockFilters =\n         filterRepository.getFiltersOfType(BlockFilter.class);\n     blockFilters.forEach(\n-        (filter) -> {\n+        filter -> {\n           synchronized (filter) {\n             filter.addBlockHash(blockHash);\n           }\n         });\n \n-    filterRepository.getFiltersOfType(LogFilter.class).forEach(this::addNewMatchingLogs);\n-  }\n-\n-  private void addNewMatchingLogs(final LogFilter filter) {\n-    final long fromBlockNumber = blockchainQueries.headBlockNumber();\n-    final long toBlockNumber =\n-        filter.getToBlock().getNumber().orElse(blockchainQueries.headBlockNumber());\n-\n-    final List<LogWithMetadata> logs = findLogsWithinRange(filter, fromBlockNumber, toBlockNumber);\n-\n-    filter.addLogs(logs);\n+    final List<LogWithMetadata> logsWithMetadata = event.getLogsWithMetadata();\n+    filterRepository.getFiltersOfType(LogFilter.class).stream()\n+        .filter(\n+            // Only keep filters where the \"to\" block could include the block in the event\n+            filter -> {\n+              final OptionalLong maybeToBlockNumber = filter.getToBlock().getNumber();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDExODI5NA=="}, "originalCommit": {"oid": "44fe98d25b1fe6bbfdbaf53fa8824c16eefd2524"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 951, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}