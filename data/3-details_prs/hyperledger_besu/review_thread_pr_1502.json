{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyOTM1MjQ4", "number": 1502, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjozMzowMVrOE0dFSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo0NjoyMVrOE0ddJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDM3ODk3OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGas.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjozMzowMVrOHsMG-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo1MDozNFrOHsvmTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5Nzc4NA==", "bodyText": "I think while we're here we might as well fix this issue of CallParams and JsonCallParams. Take a look at FilterParameter, that has non-string types but also has the properties to make it json serializable. If you want to make it a separate PR that works!", "url": "https://github.com/hyperledger/besu/pull/1502#discussion_r516097784", "createdAt": "2020-11-02T16:33:01Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGas.java", "diffHunk": "@@ -91,6 +91,8 @@ private JsonCallParameter overrideGasLimitAndPrice(\n         callParams.getTo() != null ? callParams.getTo().toString() : null,\n         Quantity.create(gasLimit),\n         Quantity.create(0L),\n+        callParams.getGasPremium().map(Quantity::create).orElse(null),\n+        callParams.getFeeCap().map(Quantity::create).orElse(null),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4edaef34527b40f1f443916f680948e088852bf2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3OTI0Nw==", "bodyText": "I will do this in another PR because there are already two things in this PR with eth_call and eth_estimateGas", "url": "https://github.com/hyperledger/besu/pull/1502#discussion_r516679247", "createdAt": "2020-11-03T13:50:34Z", "author": {"login": "matkt"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGas.java", "diffHunk": "@@ -91,6 +91,8 @@ private JsonCallParameter overrideGasLimitAndPrice(\n         callParams.getTo() != null ? callParams.getTo().toString() : null,\n         Quantity.create(gasLimit),\n         Quantity.create(0L),\n+        callParams.getGasPremium().map(Quantity::create).orElse(null),\n+        callParams.getFeeCap().map(Quantity::create).orElse(null),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5Nzc4NA=="}, "originalCommit": {"oid": "4edaef34527b40f1f443916f680948e088852bf2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDQzMjIxOnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGasTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo0NDo0MVrOHsMnuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzoxNjoyN1rOHsuRgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNjE3MQ==", "bodyText": "If process returns empty(), it could be that the world state is unavailable. As I read it, that means that we're sometimes giving the user INTERNAL_ERROR for world state unavailability and sometimes WORLD_STATE_UNAVAILABLE. Is that right?", "url": "https://github.com/hyperledger/besu/pull/1502#discussion_r516106171", "createdAt": "2020-11-02T16:44:41Z", "author": {"login": "RatanRSur"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGasTest.java", "diffHunk": "@@ -94,8 +94,22 @@ public void shouldReturnErrorWhenTransientTransactionProcessorReturnsEmpty() {\n   }\n \n   @Test\n-  public void shouldReturnGasEstimateWhenTransientTransactionProcessorReturnsResultSuccess() {\n-    final JsonRpcRequestContext request = ethEstimateGasRequest(callParameter());\n+  public void shouldReturnErrorWhenTransientEip1559TransactionProcessorReturnsEmpty() {\n+    final JsonRpcRequestContext request = ethEstimateGasRequest(eip1559TransactionCallParameter());\n+    when(transactionSimulator.process(\n+            eq(modifiedEip1559TransactionCallParameter()), any(OperationTracer.class), eq(1L)))\n+        .thenReturn(Optional.empty());\n+\n+    final JsonRpcResponse expectedResponse =\n+        new JsonRpcErrorResponse(null, JsonRpcError.INTERNAL_ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4edaef34527b40f1f443916f680948e088852bf2"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY1NzUzOQ==", "bodyText": "no because the json rpc method will fail fast thanks to this check without going into the simulator.\n\n  \n    \n      besu/ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGas.java\n    \n    \n         Line 65\n      in\n      83e0370\n    \n    \n    \n    \n\n        \n          \n           if (!blockchainQueries", "url": "https://github.com/hyperledger/besu/pull/1502#discussion_r516657539", "createdAt": "2020-11-03T13:16:27Z", "author": {"login": "matkt"}, "path": "ethereum/api/src/test/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGasTest.java", "diffHunk": "@@ -94,8 +94,22 @@ public void shouldReturnErrorWhenTransientTransactionProcessorReturnsEmpty() {\n   }\n \n   @Test\n-  public void shouldReturnGasEstimateWhenTransientTransactionProcessorReturnsResultSuccess() {\n-    final JsonRpcRequestContext request = ethEstimateGasRequest(callParameter());\n+  public void shouldReturnErrorWhenTransientEip1559TransactionProcessorReturnsEmpty() {\n+    final JsonRpcRequestContext request = ethEstimateGasRequest(eip1559TransactionCallParameter());\n+    when(transactionSimulator.process(\n+            eq(modifiedEip1559TransactionCallParameter()), any(OperationTracer.class), eq(1L)))\n+        .thenReturn(Optional.empty());\n+\n+    final JsonRpcResponse expectedResponse =\n+        new JsonRpcErrorResponse(null, JsonRpcError.INTERNAL_ERROR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNjE3MQ=="}, "originalCommit": {"oid": "4edaef34527b40f1f443916f680948e088852bf2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDQ0MDA3OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo0NjoyMVrOHsMsbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo1Mzo1NVrOHsvvGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNzM3NQ==", "bodyText": "Is this tested anywhere?", "url": "https://github.com/hyperledger/besu/pull/1502#discussion_r516107375", "createdAt": "2020-11-02T16:46:21Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionValidator.java", "diffHunk": "@@ -102,6 +102,12 @@ public MainnetTransactionValidator(\n               String.format(\"gasPrice is less than the current BaseFee\"));\n         }\n       }\n+    } else if (transaction.isEIP1559Transaction()) {\n+      return ValidationResult.invalid(\n+          TransactionInvalidReason.INVALID_TRANSACTION_FORMAT,\n+          String.format(\n+              \"transaction format is invalid, accepted transaction types are %s\",\n+              acceptedTransactionTypes.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4edaef34527b40f1f443916f680948e088852bf2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4MTQ5OA==", "bodyText": "good catch . I just added a test", "url": "https://github.com/hyperledger/besu/pull/1502#discussion_r516681498", "createdAt": "2020-11-03T13:53:55Z", "author": {"login": "matkt"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionValidator.java", "diffHunk": "@@ -102,6 +102,12 @@ public MainnetTransactionValidator(\n               String.format(\"gasPrice is less than the current BaseFee\"));\n         }\n       }\n+    } else if (transaction.isEIP1559Transaction()) {\n+      return ValidationResult.invalid(\n+          TransactionInvalidReason.INVALID_TRANSACTION_FORMAT,\n+          String.format(\n+              \"transaction format is invalid, accepted transaction types are %s\",\n+              acceptedTransactionTypes.toString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwNzM3NQ=="}, "originalCommit": {"oid": "4edaef34527b40f1f443916f680948e088852bf2"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1303, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}