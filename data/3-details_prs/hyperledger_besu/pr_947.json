{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMjEzOTc2", "number": 947, "title": "make mark/sweep prepare async with main thread", "bodyText": "Fixed Issue(s)\nfixes #917", "createdAt": "2020-05-19T16:00:20Z", "url": "https://github.com/hyperledger/besu/pull/947", "merged": true, "mergeCommit": {"oid": "303c3a1f85c72f73fb13d5d6cba23afa72e7ada5"}, "closed": true, "closedAt": "2020-05-28T18:15:21Z", "author": {"login": "RatanRSur"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci2f1QgH2gAyNDIwMjEzOTc2OjY1NTExMzgyMGIxYmI2N2NjYmY5Y2VhYTg1MGUxZThjYmY4N2U2MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclxjY8gH2gAyNDIwMjEzOTc2OjhkYTMwMjIxM2QzYjhmNzhmYTgxYTFjNWM3ZjVjMzgwZmFkYmZkOGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "655113820b1bb67ccbf9ceaa850e1e8cbf87e618", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/655113820b1bb67ccbf9ceaa850e1e8cbf87e618", "committedDate": "2020-05-19T15:49:09Z", "message": "make mark/sweep prepare async with main thread\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjEyMDYx", "url": "https://github.com/hyperledger/besu/pull/947#pullrequestreview-414612061", "createdAt": "2020-05-19T16:18:18Z", "commit": {"oid": "655113820b1bb67ccbf9ceaa850e1e8cbf87e618"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjoxODoxOFrOGXoOrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjoyMDoyMVrOGXoUdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQyOTU0OA==", "bodyText": "Should the whole block be in the execute runnable?  i.e. add the compare and set check into the async part?  Are we sure start will only ever be called once?", "url": "https://github.com/hyperledger/besu/pull/947#discussion_r427429548", "createdAt": "2020-05-19T16:18:18Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/worldstate/Pruner.java", "diffHunk": "@@ -84,12 +84,14 @@ public Pruner(\n   }\n \n   public void start() {\n-\n     if (state.compareAndSet(State.IDLE, State.RUNNING)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655113820b1bb67ccbf9ceaa850e1e8cbf87e618"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQzMTAyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void start() {\n          \n          \n            \n            \n          \n          \n            \n                if (state.compareAndSet(State.IDLE, State.RUNNING)) {\n          \n          \n            \n                  LOG.info(\"Starting Pruner.\");\n          \n          \n            \n                  executorService = executorServiceSupplier.get();\n          \n          \n            \n                  pruningStrategy.prepare();\n          \n          \n            \n                  blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n          \n          \n            \n                  execute(\n          \n          \n            \n                      () -> {\n          \n          \n            \n                        pruningStrategy.prepare();\n          \n          \n            \n                        blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n          \n          \n            \n                      });\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n          \n            \n              public void start() {\n          \n          \n            \n                execute(this::startAsync);\n          \n          \n            \n              }\n          \n          \n            \n            \n          \n          \n            \n              private void startAsync() {\n          \n          \n            \n                  LOG.info(\"Starting Pruner.\");\n          \n          \n            \n                  executorService = executorServiceSupplier.get();\n          \n          \n            \n                  pruningStrategy.prepare();\n          \n          \n            \n                  blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n          \n          \n            \n                  pruningStrategy.prepare();\n          \n          \n            \n                  blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n          \n          \n            \n                }\n          \n          \n            \n              }", "url": "https://github.com/hyperledger/besu/pull/947#discussion_r427431028", "createdAt": "2020-05-19T16:20:21Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/worldstate/Pruner.java", "diffHunk": "@@ -84,12 +84,14 @@ public Pruner(\n   }\n \n   public void start() {\n-\n     if (state.compareAndSet(State.IDLE, State.RUNNING)) {\n       LOG.info(\"Starting Pruner.\");\n       executorService = executorServiceSupplier.get();\n-      pruningStrategy.prepare();\n-      blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n+      execute(\n+          () -> {\n+            pruningStrategy.prepare();\n+            blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n+          });\n     }\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655113820b1bb67ccbf9ceaa850e1e8cbf87e618"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2276ed75e17a54077503eb888d09de06f61b5eb5", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/2276ed75e17a54077503eb888d09de06f61b5eb5", "committedDate": "2020-05-26T16:10:57Z", "message": "Merge remote-tracking branch 'upstream/master' into pruner-start-asynchrony"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74350ba5b68f63d6e4c1c6a842a0f0de79e35254", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/74350ba5b68f63d6e4c1c6a842a0f0de79e35254", "committedDate": "2020-05-26T16:12:26Z", "message": "push all start code into execute\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NjE3ODY1", "url": "https://github.com/hyperledger/besu/pull/947#pullrequestreview-418617865", "createdAt": "2020-05-26T19:33:24Z", "commit": {"oid": "74350ba5b68f63d6e4c1c6a842a0f0de79e35254"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "463f9053396444121b5a548a9b7806afb792f765", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/463f9053396444121b5a548a9b7806afb792f765", "committedDate": "2020-05-26T20:54:21Z", "message": "Merge branch 'master' into pruner-start-asynchrony"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c458c055c64cd1f2c9884cae8e1518d95df0e854", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/c458c055c64cd1f2c9884cae8e1518d95df0e854", "committedDate": "2020-05-28T13:55:15Z", "message": "remove executor supplier so that executor is available in start\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bbe7443e308a2c68060a752e5da08ab34b0491f", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/1bbe7443e308a2c68060a752e5da08ab34b0491f", "committedDate": "2020-05-28T13:55:42Z", "message": "Merge remote-tracking branch 'upstream/master' into pruner-start-asynchrony"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2fc0cd10fc9bb5e80fb62f8f85a9ea19065ce09", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/b2fc0cd10fc9bb5e80fb62f8f85a9ea19065ce09", "committedDate": "2020-05-28T13:58:40Z", "message": "fix compile errors\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMjI4NTIz", "url": "https://github.com/hyperledger/besu/pull/947#pullrequestreview-420228523", "createdAt": "2020-05-28T15:26:42Z", "commit": {"oid": "b2fc0cd10fc9bb5e80fb62f8f85a9ea19065ce09"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNToyNjo0MlrOGb6maw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNToyOTozNVrOGb6vRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkyNDg0Mw==", "bodyText": "Not sure why you can't get your executor and then run the async task?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                execute(\n          \n          \n            \n                    () -> {\n          \n          \n            \n                      if (state.compareAndSet(State.IDLE, State.RUNNING)) {\n          \n          \n            \n                        LOG.info(\"Starting Pruner.\");\n          \n          \n            \n                        pruningStrategy.prepare();\n          \n          \n            \n                        blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n          \n          \n            \n                      }\n          \n          \n            \n                    });\n          \n          \n            \n                if (state.compareAndSet(State.IDLE, State.RUNNING)) {\n          \n          \n            \n                  LOG.info(\"Starting Pruner.\");\n          \n          \n            \n                  executorService = executorServiceSupplier.get();\n          \n          \n            \n                  execute(() -> {\n          \n          \n            \n                      pruningStrategy.prepare();\n          \n          \n            \n                      blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n          \n          \n            \n                  });\n          \n          \n            \n                }", "url": "https://github.com/hyperledger/besu/pull/947#discussion_r431924843", "createdAt": "2020-05-28T15:26:42Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/worldstate/Pruner.java", "diffHunk": "@@ -70,27 +68,27 @@ public Pruner(\n       final MarkSweepPruner pruningStrategy,\n       final Blockchain blockchain,\n       final PrunerConfiguration prunerConfiguration) {\n-    this(pruningStrategy, blockchain, prunerConfiguration, getDefaultExecutorSupplier());\n-  }\n-\n-  private static Supplier<ExecutorService> getDefaultExecutorSupplier() {\n-    return () ->\n+    this(\n+        pruningStrategy,\n+        blockchain,\n+        prunerConfiguration,\n         Executors.newSingleThreadExecutor(\n             new ThreadFactoryBuilder()\n                 .setDaemon(true)\n                 .setPriority(Thread.MIN_PRIORITY)\n                 .setNameFormat(\"StatePruning-%d\")\n-                .build());\n+                .build()));\n   }\n \n   public void start() {\n-\n-    if (state.compareAndSet(State.IDLE, State.RUNNING)) {\n-      LOG.info(\"Starting Pruner.\");\n-      executorService = executorServiceSupplier.get();\n-      pruningStrategy.prepare();\n-      blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n-    }\n+    execute(\n+        () -> {\n+          if (state.compareAndSet(State.IDLE, State.RUNNING)) {\n+            LOG.info(\"Starting Pruner.\");\n+            pruningStrategy.prepare();\n+            blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n+          }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2fc0cd10fc9bb5e80fb62f8f85a9ea19065ce09"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkyNzEwOA==", "bodyText": "Is this not going to create timing issues?  I think we may be intentionally blocking here, so that our listeners get setup before we start syncing and pulling in data.  Changing this to async, it seems like we might run into problems where:  we start importing blocks before our listeners are set up, we don't mark those initial state data, so we end up pruning useful state.\nI'd suggest returning a future, and waiting for the future to complete before starting the sync task.", "url": "https://github.com/hyperledger/besu/pull/947#discussion_r431927108", "createdAt": "2020-05-28T15:29:35Z", "author": {"login": "mbaxter"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/worldstate/Pruner.java", "diffHunk": "@@ -70,27 +68,27 @@ public Pruner(\n       final MarkSweepPruner pruningStrategy,\n       final Blockchain blockchain,\n       final PrunerConfiguration prunerConfiguration) {\n-    this(pruningStrategy, blockchain, prunerConfiguration, getDefaultExecutorSupplier());\n-  }\n-\n-  private static Supplier<ExecutorService> getDefaultExecutorSupplier() {\n-    return () ->\n+    this(\n+        pruningStrategy,\n+        blockchain,\n+        prunerConfiguration,\n         Executors.newSingleThreadExecutor(\n             new ThreadFactoryBuilder()\n                 .setDaemon(true)\n                 .setPriority(Thread.MIN_PRIORITY)\n                 .setNameFormat(\"StatePruning-%d\")\n-                .build());\n+                .build()));\n   }\n \n   public void start() {\n-\n-    if (state.compareAndSet(State.IDLE, State.RUNNING)) {\n-      LOG.info(\"Starting Pruner.\");\n-      executorService = executorServiceSupplier.get();\n-      pruningStrategy.prepare();\n-      blockAddedObserverId = blockchain.observeBlockAdded(this::handleNewBlock);\n-    }\n+    execute(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2fc0cd10fc9bb5e80fb62f8f85a9ea19065ce09"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3496ae2adf7aa9447b5fce695dff926dc4211d5b", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/3496ae2adf7aa9447b5fce695dff926dc4211d5b", "committedDate": "2020-05-28T16:59:27Z", "message": "inline single threaded executor and set coreThreads to 0\n\nSigned-off-by: Ratan Rai Sur <ratan.r.sur@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8da302213d3b8f78fa81a1c5c7f5c380fadbfd8d", "author": {"user": {"login": "RatanRSur", "name": "Ratan (Rai) Sur"}}, "url": "https://github.com/hyperledger/besu/commit/8da302213d3b8f78fa81a1c5c7f5c380fadbfd8d", "committedDate": "2020-05-28T17:45:17Z", "message": "Merge branch 'master' into pruner-start-asynchrony"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1527, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}