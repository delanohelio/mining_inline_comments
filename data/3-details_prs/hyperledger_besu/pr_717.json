{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNjI5NTY1", "number": 717, "title": "[BESU-648] EIP2315 - Simple Subroutines for the EVM", "bodyText": "Signed-off-by: Karim TAAM karim.t2am@gmail.com\nPR description\nIssue : #648\nImplementation of the EIP-2315 (Simple Subroutines for the EVM)\n\nCreation of a ReturnStack (privateTransactionProcessor, transactionProcessor)\nImplementation of the three new operations (JUMPSUB, BEGINSUB, RETURNSUB)\n\nSample\nThis should execute fine, going into one two depths of subroutines\n\n0x6800000000000000000cb300b26011b3b7b2b7\n\n\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: PUSH9\nPC: 0\nGas cost: 3\nGas Remaining: 16756198\nDepth: 0\nStack:\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: JUMPSUB\nPC: 10\nGas cost: 8\nGas Remaining: 16756195\nDepth: 0\nStack:\n0 0x000000000000000000000000000000000000000000000000000000000000000c\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: BEGINSUB\nPC: 12\nGas cost: 1\nGas Remaining: 16756187\nDepth: 0\nStack:\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: PUSH1\nPC: 13\nGas cost: 3\nGas Remaining: 16756186\nDepth: 0\nStack:\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: JUMPSUB\nPC: 15\nGas cost: 8\nGas Remaining: 16756183\nDepth: 0\nStack:\n0 0x0000000000000000000000000000000000000000000000000000000000000011\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: BEGINSUB\nPC: 17\nGas cost: 1\nGas Remaining: 16756175\nDepth: 0\nStack:\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: RETURNSUB\nPC: 18\nGas cost: 2\nGas Remaining: 16756174\nDepth: 0\nStack:\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: RETURNSUB\nPC: 16\nGas cost: 2\nGas Remaining: 16756172\nDepth: 0\nStack:\n2020-04-15 10:25:13.522+02:00 | main | TRACE | EVM | Depth: 0\nOperation: STOP\nPC: 11\nGas cost: 0\nGas Remaining: 16756170\nDepth: 0\nStack:", "createdAt": "2020-04-15T08:56:33Z", "url": "https://github.com/hyperledger/besu/pull/717", "merged": true, "mergeCommit": {"oid": "1fba712202328655046ef5d329fc91ff78dc9f97"}, "closed": true, "closedAt": "2020-04-20T19:14:00Z", "author": {"login": "matkt"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVjvzbgH2gAyNDAzNjI5NTY1OjJmYzAzMjRlMjUwYWJhNTZiN2E5NjNiNGRkMmVkZWI1MzQ5MWE1MGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZiz5ngH2gAyNDAzNjI5NTY1OmY5YTEyMzU4YWQ0ZGMyZWI1YTNlZDAwYjA5NmVmY2YwZDU2ZGFlYjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2fc0324e250aba56b7a963b4dd2edeb53491a50f", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/2fc0324e250aba56b7a963b4dd2edeb53491a50f", "committedDate": "2020-04-08T08:37:23Z", "message": "Log to trace denied because of host whitelisting (#663)\n\nWhen we deny a connection based on HTTP hostname log to trace the\nrejected value.\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>\nCo-authored-by: Usman Saleem <usman@usmans.info>\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d521961d5be749f4195aa06c64cf69ddec500976", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/d521961d5be749f4195aa06c64cf69ddec500976", "committedDate": "2020-04-10T07:52:44Z", "message": "Merge branch 'master' of https://github.com/hyperledger/besu into develop\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dca4845ae288f7b32e30f4984380d94561c31a0", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/7dca4845ae288f7b32e30f4984380d94561c31a0", "committedDate": "2020-04-10T08:55:32Z", "message": "init berlin fork\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b612233faa979fc4dc35dbc5f94e3a5c91038da6", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/b612233faa979fc4dc35dbc5f94e3a5c91038da6", "committedDate": "2020-04-14T13:50:08Z", "message": "init eip 2315\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14fa311e34240b8b7c939b35c98958ca15e382b8", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/14fa311e34240b8b7c939b35c98958ca15e382b8", "committedDate": "2020-04-15T08:09:44Z", "message": "Merge commit '23d1460c3c27d61908a7218f46ec0cbb824a0785' into feature/eip-2315\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>\n\n# Conflicts:\n#\tconfig/src/main/java/org/hyperledger/besu/config/JsonGenesisConfigOptions.java\n#\tconfig/src/main/java/org/hyperledger/besu/config/StubGenesisConfigOptions.java\n#\tconfig/src/test/java/org/hyperledger/besu/config/GenesisConfigOptionsTest.java\n#\tethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetProtocolSpecs.java\n#\tethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/ProtocolScheduleBuilder.java\n#\tethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/ReferenceTestProtocolSchedules.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9918ed75a0be59b08765e1ceedea25c120e09d45", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/9918ed75a0be59b08765e1ceedea25c120e09d45", "committedDate": "2020-04-15T08:35:51Z", "message": "Fix naming issue\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd5928aed0e3c79e31699f44b992efbce5b70cf6", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/fd5928aed0e3c79e31699f44b992efbce5b70cf6", "committedDate": "2020-04-15T08:45:17Z", "message": "update javadoc\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f63ce18761d512c8e34bdef95fc53c1a7cfbd6d", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/5f63ce18761d512c8e34bdef95fc53c1a7cfbd6d", "committedDate": "2020-04-15T09:12:47Z", "message": "fix pipeline issue\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Njg5ODU4", "url": "https://github.com/hyperledger/besu/pull/717#pullrequestreview-394689858", "createdAt": "2020-04-16T14:28:09Z", "commit": {"oid": "5f63ce18761d512c8e34bdef95fc53c1a7cfbd6d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDoyODowOVrOGGoFog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDo0Nzo1OVrOGGpDFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMTQ0Mg==", "bodyText": "What's the harm in just initializing the return stack with the proper size always? It would stop us from having to add this extra boolean parameter here.", "url": "https://github.com/hyperledger/besu/pull/717#discussion_r409601442", "createdAt": "2020-04-16T14:28:09Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetTransactionProcessor.java", "diffHunk": "@@ -220,6 +226,15 @@ public Result processTransaction(\n     final WorldUpdater worldUpdater = worldState.updater();\n     final MessageFrame initialFrame;\n     final Deque<MessageFrame> messageFrameStack = new ArrayDeque<>();\n+\n+    // returnStack introduce on eip2315\n+    final ReturnStack returnStack;\n+    if (enableReturnStack) {\n+      returnStack = new ReturnStack(MessageFrame.DEFAULT_MAX_RETURN_STACK_SIZE);\n+    } else {\n+      returnStack = new ReturnStack();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f63ce18761d512c8e34bdef95fc53c1a7cfbd6d"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwNzEyOA==", "bodyText": "I see that this is modeled after the existing isValidJumpDestination. What do you think about moving the caching logic for both to the fields themselves using Suppliers.memoize? I think it'd make it easier to read and getting rid of a null in the code makes angels sing :)", "url": "https://github.com/hyperledger/besu/pull/717#discussion_r409607128", "createdAt": "2020-04-16T14:35:20Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/Code.java", "diffHunk": "@@ -100,6 +104,35 @@ public boolean isValidJumpDestination(\n     return validJumpDestinations.get(jumpDestination);\n   }\n \n+  /**\n+   * Determine whether a specified destination is a valid jump sub target.\n+   *\n+   * @param evm the EVM executing this code\n+   * @param frame The current message frame\n+   * @param destination The destination we're checking for validity.\n+   * @return Whether or not this location is a valid jump sub destination.\n+   */\n+  public boolean isValidJumpSubDestination(\n+      final EVM evm, final MessageFrame frame, final UInt256 destination) {\n+    if (!destination.fitsInt()) return false;\n+    final int jumpDestination = destination.intValue();\n+    if (jumpDestination > getSize()) return false;\n+\n+    if (validJumpSubDestinations == null) {\n+      // Calculate valid jump destinations\n+      validJumpSubDestinations = new BitSet(getSize());\n+      evm.forEachOperation(\n+          this,\n+          frame.getContractAccountVersion(),\n+          (final Operation op, final Integer offset) -> {\n+            if (op.getOpcode() == BeginSubOperation.OPCODE) {\n+              validJumpSubDestinations.set(offset);\n+            }\n+          });\n+    }\n+    return validJumpSubDestinations.get(jumpDestination);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f63ce18761d512c8e34bdef95fc53c1a7cfbd6d"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxMDEwMQ==", "bodyText": "Why do we want a 0 capacity return stack as the default?", "url": "https://github.com/hyperledger/besu/pull/717#discussion_r409610101", "createdAt": "2020-04-16T14:39:16Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/MessageFrame.java", "diffHunk": "@@ -1023,12 +1079,18 @@ public void reset() {\n     private Boolean isPersistingPrivateState = false;\n     private Hash transactionHash;\n     private Optional<Bytes> reason = Optional.empty();\n+    private ReturnStack returnStack = new ReturnStack();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f63ce18761d512c8e34bdef95fc53c1a7cfbd6d"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNDcyOQ==", "bodyText": "Depending on the discussion with the other comments, we might not need this constructor.", "url": "https://github.com/hyperledger/besu/pull/717#discussion_r409614729", "createdAt": "2020-04-16T14:45:04Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/operations/ReturnStack.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.vm.operations;\n+\n+import java.util.ArrayDeque;\n+\n+/**\n+ * This class describes the behaviour of the Return stack introduce on the\n+ * https://eips.ethereum.org/EIPS/eip-2315\n+ */\n+public class ReturnStack extends ArrayDeque<Integer> {\n+\n+  private final int capacity;\n+\n+  public ReturnStack() {\n+    this.capacity = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f63ce18761d512c8e34bdef95fc53c1a7cfbd6d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYxNzE3NQ==", "bodyText": "You can reuse isFull here:\ncheckState(!isFull(), \"return stack overflow\")", "url": "https://github.com/hyperledger/besu/pull/717#discussion_r409617175", "createdAt": "2020-04-16T14:47:59Z", "author": {"login": "RatanRSur"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/operations/ReturnStack.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.vm.operations;\n+\n+import java.util.ArrayDeque;\n+\n+/**\n+ * This class describes the behaviour of the Return stack introduce on the\n+ * https://eips.ethereum.org/EIPS/eip-2315\n+ */\n+public class ReturnStack extends ArrayDeque<Integer> {\n+\n+  private final int capacity;\n+\n+  public ReturnStack() {\n+    this.capacity = 0;\n+  }\n+\n+  public ReturnStack(final int numElements) {\n+    super(numElements);\n+    this.capacity = numElements;\n+  }\n+\n+  public boolean isFull() {\n+    return this.size() >= capacity;\n+  }\n+\n+  @Override\n+  public Integer pop() {\n+    try {\n+      return super.pop();\n+    } catch (Exception e) {\n+      throw new IllegalStateException(\"return stack underflow\");\n+    }\n+  }\n+\n+  @Override\n+  public void push(final Integer value) {\n+    if (size() == capacity) {\n+      throw new IllegalStateException(\"return stack overflow\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f63ce18761d512c8e34bdef95fc53c1a7cfbd6d"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b59499befbe3b45e2a2786aff30846863eb621d2", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/b59499befbe3b45e2a2786aff30846863eb621d2", "committedDate": "2020-04-17T15:06:47Z", "message": "fix review issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDMxMTAy", "url": "https://github.com/hyperledger/besu/pull/717#pullrequestreview-396031102", "createdAt": "2020-04-19T15:30:34Z", "commit": {"oid": "b59499befbe3b45e2a2786aff30846863eb621d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a12358ad4dc2eb5a3ed00b096efcf0d56daeb7", "author": {"user": {"login": "abdelhamidbakhta", "name": "Abdelhamid Bakhta"}}, "url": "https://github.com/hyperledger/besu/commit/f9a12358ad4dc2eb5a3ed00b096efcf0d56daeb7", "committedDate": "2020-04-20T17:47:39Z", "message": "Merge branch 'master' into feature/eip-2315"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1728, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}