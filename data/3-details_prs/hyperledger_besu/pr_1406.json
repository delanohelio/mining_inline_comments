{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1Mzc0MzIx", "number": 1406, "title": "Add cache limit for pending blocks", "bodyText": "Signed-off-by: Karim TAAM karim.t2am@gmail.com\nPR description\nThis PR adds a limit on the number of pending blocks that can be added by a peer\nIf a peer exceeds the authorized number of blocks, Besu will replace the lowest priority block in the cache from this peer by this new one until our local node sync a new block and maybe purges one of the blocks of this peer.\nThe highest priority blocks are those that are lowest in block height and then higher priority if they were sent more recently.\nOther peers will not be impacted and will be able to continue sending pending blocks.\nThe cache size limit is the distance between the minimum and maximum value of the BlockPropagationRange parameter.  Besu automatically purges blocks outside this range.\nDefault value of the range is [-10,30] so the cache size limit will be (10+30) => 40\nTest performed\nTried synchronization on a Local Clique network and on Goerli\nChangelog\n\n I thought about the changelog and included a changelog update if required.", "createdAt": "2020-09-30T09:25:49Z", "url": "https://github.com/hyperledger/besu/pull/1406", "merged": true, "mergeCommit": {"oid": "bbcc438244b9966e95ee693150323208c42a87f6"}, "closed": true, "closedAt": "2020-10-14T13:24:32Z", "author": {"login": "matkt"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN5TSBAH2gAyNDk1Mzc0MzIxOmE5NWU1OGU1N2RiZTE1OWQxMzg5NTM5M2JlMWZiNTYwZWViOTRjOWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSca7zAH2gAyNDk1Mzc0MzIxOmNhMzI0ZTkyYWZlOWM0MWEwYjk4MzExYmU1NWEyYTBhNDNkN2Q4MTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a95e58e57dbe159d13895393be1fb560eeb94c9d", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/a95e58e57dbe159d13895393be1fb560eeb94c9d", "committedDate": "2020-09-30T09:23:54Z", "message": "add cache limit for pending blocks\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b73db8efffadc1b5809be501058157a418632ab2", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/b73db8efffadc1b5809be501058157a418632ab2", "committedDate": "2020-09-30T12:53:54Z", "message": "fix test\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a1cf811df724f76c92b3ae38ec20f778462eb41", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/8a1cf811df724f76c92b3ae38ec20f778462eb41", "committedDate": "2020-09-30T12:54:13Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDY0OTU3", "url": "https://github.com/hyperledger/besu/pull/1406#pullrequestreview-499464957", "createdAt": "2020-09-30T14:02:36Z", "commit": {"oid": "8a1cf811df724f76c92b3ae38ec20f778462eb41"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDowMjozNlrOHafI3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDoyNjoxNFrOHagPkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzNTE5Nw==", "bodyText": "Probably should make it clear in the variable name that this is a default like DEFAULT_PENDING_BLOCKS_CACHE_SIZE", "url": "https://github.com/hyperledger/besu/pull/1406#discussion_r497535197", "createdAt": "2020-09-30T14:02:36Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/state/PendingBlocks.java", "diffHunk": "@@ -27,24 +27,49 @@\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.stream.Collectors;\n \n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.RemovalListener;\n+\n public class PendingBlocks {\n \n-  private final Map<Hash, Block> pendingBlocks = new ConcurrentHashMap<>();\n+  // If more than 100 behind, Besu switch to full synchronization mode. 150 because it is possible\n+  // to have multiple versions of the same block number\n+  private static final int CACHE_PENDING_BLOCKS_SIZE = 150;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a1cf811df724f76c92b3ae38ec20f778462eb41"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU0NDEzNA==", "bodyText": "Can this be private?", "url": "https://github.com/hyperledger/besu/pull/1406#discussion_r497544134", "createdAt": "2020-09-30T14:14:32Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/state/PendingBlocks.java", "diffHunk": "@@ -64,27 +89,33 @@ public boolean registerPendingBlock(final Block pendingBlock) {\n    * Stop tracking the given block.\n    *\n    * @param block the block that is no longer pending\n-   * @return true if this block was removed\n    */\n-  public boolean deregisterPendingBlock(final Block block) {\n+  public void deregisterPendingBlock(final Block block) {\n+    pendingBlocks.invalidate(block.getHash());\n+  }\n+\n+  /**\n+   * Stop keeping this block in the list of pending blocks by parent hash\n+   *\n+   * @param block the block that is no longer pending\n+   */\n+  public void removePendingBlockByParentHashForBlock(final Block block) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a1cf811df724f76c92b3ae38ec20f778462eb41"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU1MzI5OQ==", "bodyText": "Can you point me to where this switch happens?", "url": "https://github.com/hyperledger/besu/pull/1406#discussion_r497553299", "createdAt": "2020-09-30T14:26:14Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/state/PendingBlocks.java", "diffHunk": "@@ -27,24 +27,49 @@\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.stream.Collectors;\n \n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.RemovalListener;\n+\n public class PendingBlocks {\n \n-  private final Map<Hash, Block> pendingBlocks = new ConcurrentHashMap<>();\n+  // If more than 100 behind, Besu switch to full synchronization mode. 150 because it is possible\n+  // to have multiple versions of the same block number", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a1cf811df724f76c92b3ae38ec20f778462eb41"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12461a2635f4202d465710e6851b434505e1cb2b", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/12461a2635f4202d465710e6851b434505e1cb2b", "committedDate": "2020-10-05T13:45:00Z", "message": "update cache implementation (add limit per peer)\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b18c5dd1e250d0c7a0764968b4596a1dae128ffb", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/b18c5dd1e250d0c7a0764968b4596a1dae128ffb", "committedDate": "2020-10-05T14:06:39Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0082df205d522b21cec66c1ef16537c28d68ba88", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/0082df205d522b21cec66c1ef16537c28d68ba88", "committedDate": "2020-10-05T14:12:04Z", "message": "clean code\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2150ed673052177abe3777fa1376c32a29f3e961", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/2150ed673052177abe3777fa1376c32a29f3e961", "committedDate": "2020-10-05T14:13:51Z", "message": "merge with master\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMTA0MjE4", "url": "https://github.com/hyperledger/besu/pull/1406#pullrequestreview-502104218", "createdAt": "2020-10-05T14:18:46Z", "commit": {"oid": "2150ed673052177abe3777fa1376c32a29f3e961"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNDoxODo0NlrOHcfM_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNDoxODo0NlrOHcfM_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYzMzQwNw==", "bodyText": "I'm not sure we need a REORG_CACHE_SIZE_MUTIPLICATOR. Couldn't we leave it the size of the inverval (40 in this case) and use a bounded priority queue? The highest priority blocks would be those that are lowest in block height and then higher priority if they were sent more recently.", "url": "https://github.com/hyperledger/besu/pull/1406#discussion_r499633407", "createdAt": "2020-10-05T14:18:46Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/state/PendingBlocksManager.java", "diffHunk": "@@ -27,35 +30,54 @@\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.stream.Collectors;\n \n-public class PendingBlocks {\n+import org.apache.tuweni.bytes.Bytes;\n \n-  private final Map<Hash, Block> pendingBlocks = new ConcurrentHashMap<>();\n+public class PendingBlocksManager {\n+\n+  private static final int REORG_CACHE_SIZE_FACTOR = 2;\n+\n+  private final PendingBlockCache pendingBlocks;\n   private final Map<Hash, Set<Hash>> pendingBlocksByParentHash = new ConcurrentHashMap<>();\n \n+  public PendingBlocksManager(final SynchronizerConfiguration synchronizerConfiguration) {\n+    pendingBlocks =\n+        new PendingBlockCache(\n+            (Math.abs(synchronizerConfiguration.getBlockPropagationRange().lowerEndpoint())\n+                    + Math.abs(\n+                        synchronizerConfiguration.getBlockPropagationRange().upperEndpoint()))\n+                * REORG_CACHE_SIZE_FACTOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2150ed673052177abe3777fa1376c32a29f3e961"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc2daff5e8309b387c7579db90b01a03f265e5ee", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/dc2daff5e8309b387c7579db90b01a03f265e5ee", "committedDate": "2020-10-06T13:06:45Z", "message": "change cache eviction mechanism (remove lowest priority block)\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "380eeb17bc927d56d6e6f44febb678f88d69ac4e", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/380eeb17bc927d56d6e6f44febb678f88d69ac4e", "committedDate": "2020-10-06T14:38:32Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f012f25b9a1280d9cde83d95ad2c79fe10db82", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/47f012f25b9a1280d9cde83d95ad2c79fe10db82", "committedDate": "2020-10-07T09:34:16Z", "message": "add tests\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d96645df9f9e769c34d744aac8dadc515cd1a0f9", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/d96645df9f9e769c34d744aac8dadc515cd1a0f9", "committedDate": "2020-10-07T09:35:47Z", "message": "merge master\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23e9955cf6a5c235308f07599ae07ad4c18f6e35", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/23e9955cf6a5c235308f07599ae07ad4c18f6e35", "committedDate": "2020-10-07T09:36:14Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22aa0cd0954ccfb1137c41425391dbc73b24a641", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/22aa0cd0954ccfb1137c41425391dbc73b24a641", "committedDate": "2020-10-07T09:43:26Z", "message": "clean code\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3e49e14b60f3881163016315c23c2c5373c6432", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/c3e49e14b60f3881163016315c23c2c5373c6432", "committedDate": "2020-10-09T08:17:24Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NzYyNTI4", "url": "https://github.com/hyperledger/besu/pull/1406#pullrequestreview-505762528", "createdAt": "2020-10-09T15:08:37Z", "commit": {"oid": "c3e49e14b60f3881163016315c23c2c5373c6432"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowODozN1rOHfN9AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowODozN1rOHfN9AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5NjUxMg==", "bodyText": "I think I'm missing something, why do we need the reversed? Don't we want to keep the lowest block numbers?", "url": "https://github.com/hyperledger/besu/pull/1406#discussion_r502496512", "createdAt": "2020-10-09T15:08:37Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/state/cache/PendingBlockCache.java", "diffHunk": "@@ -34,25 +37,39 @@ public PendingBlockCache(final long cacheSizePerPeer) {\n    *\n    * @return the previous value associated with the specified key, or {@code null} if there was no\n    *     mapping for the hash\n-   * @throws IndexOutOfBoundsException if the limit of the number of blocks has been reached for\n-   *     this nodeId\n    */\n   @Override\n   public ImmutablePendingBlock putIfAbsent(\n-      final Hash hash, final ImmutablePendingBlock pendingBlock) throws IndexOutOfBoundsException {\n-    if (getPeerWeight(pendingBlock.nodeId()) >= cacheSizePerPeer) {\n-      throw new IndexOutOfBoundsException();\n+      final Hash hash, final ImmutablePendingBlock pendingBlock) {\n+    final ImmutablePendingBlock foundBlock = super.putIfAbsent(hash, pendingBlock);\n+    if (foundBlock == null) {\n+      removeLowestPriorityBlockWhenCacheFull(pendingBlock.nodeId());\n     }\n-    return super.putIfAbsent(hash, pendingBlock);\n+    return foundBlock;\n   }\n \n   /**\n-   * Returns the number of pending blocks from a node that are stored in the cache\n+   * Removes the lowest priority block if a peer has reached the cache limit it is allowed to use\n+   * The highest priority blocks are those that are lowest in block height and then higher priority\n+   * if they were sent more recently.\n    *\n-   * @param nodeId the peer ID\n-   * @return the number of elements in the cache coming from this node\n+   * @param nodeId id of the peer\n    */\n-  private long getPeerWeight(final Bytes nodeId) {\n-    return values().stream().filter(value -> value.nodeId() == nodeId).count();\n+  private void removeLowestPriorityBlockWhenCacheFull(final Bytes nodeId) {\n+    final List<ImmutablePendingBlock> blockByNodeId =\n+        values().stream().filter(value -> value.nodeId() == nodeId).collect(Collectors.toList());\n+    if (blockByNodeId.size() > cacheSizePerPeer) {\n+      blockByNodeId.stream()\n+          .min(getComparatorByBlockNumber().reversed().thenComparing(getComparatorByTimeStamp()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3e49e14b60f3881163016315c23c2c5373c6432"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1ODQ5MTY5", "url": "https://github.com/hyperledger/besu/pull/1406#pullrequestreview-505849169", "createdAt": "2020-10-09T17:03:56Z", "commit": {"oid": "c3e49e14b60f3881163016315c23c2c5373c6432"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNzowMzo1NlrOHfR-ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNzowMzo1NlrOHfR-ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU2MjQwNA==", "bodyText": "(optional) Regardless of the outcome of the other thread, if you want you can also represent this with stream operations:\n    values().stream()\n        .filter(value -> value.nodeId() == nodeId)\n        .sorted(comparatorThatHasTheHighestPriorityFirst)\n        .skip(cacheSizePerPeer)\n        .forEach(value -> remove(value.block().getHash()));", "url": "https://github.com/hyperledger/besu/pull/1406#discussion_r502562404", "createdAt": "2020-10-09T17:03:56Z", "author": {"login": "RatanRSur"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/sync/state/cache/PendingBlockCache.java", "diffHunk": "@@ -34,25 +37,39 @@ public PendingBlockCache(final long cacheSizePerPeer) {\n    *\n    * @return the previous value associated with the specified key, or {@code null} if there was no\n    *     mapping for the hash\n-   * @throws IndexOutOfBoundsException if the limit of the number of blocks has been reached for\n-   *     this nodeId\n    */\n   @Override\n   public ImmutablePendingBlock putIfAbsent(\n-      final Hash hash, final ImmutablePendingBlock pendingBlock) throws IndexOutOfBoundsException {\n-    if (getPeerWeight(pendingBlock.nodeId()) >= cacheSizePerPeer) {\n-      throw new IndexOutOfBoundsException();\n+      final Hash hash, final ImmutablePendingBlock pendingBlock) {\n+    final ImmutablePendingBlock foundBlock = super.putIfAbsent(hash, pendingBlock);\n+    if (foundBlock == null) {\n+      removeLowestPriorityBlockWhenCacheFull(pendingBlock.nodeId());\n     }\n-    return super.putIfAbsent(hash, pendingBlock);\n+    return foundBlock;\n   }\n \n   /**\n-   * Returns the number of pending blocks from a node that are stored in the cache\n+   * Removes the lowest priority block if a peer has reached the cache limit it is allowed to use\n+   * The highest priority blocks are those that are lowest in block height and then higher priority\n+   * if they were sent more recently.\n    *\n-   * @param nodeId the peer ID\n-   * @return the number of elements in the cache coming from this node\n+   * @param nodeId id of the peer\n    */\n-  private long getPeerWeight(final Bytes nodeId) {\n-    return values().stream().filter(value -> value.nodeId() == nodeId).count();\n+  private void removeLowestPriorityBlockWhenCacheFull(final Bytes nodeId) {\n+    final List<ImmutablePendingBlock> blockByNodeId =\n+        values().stream().filter(value -> value.nodeId() == nodeId).collect(Collectors.toList());\n+    if (blockByNodeId.size() > cacheSizePerPeer) {\n+      blockByNodeId.stream()\n+          .min(getComparatorByBlockNumber().reversed().thenComparing(getComparatorByTimeStamp()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3e49e14b60f3881163016315c23c2c5373c6432"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2Njk3Mjk0", "url": "https://github.com/hyperledger/besu/pull/1406#pullrequestreview-506697294", "createdAt": "2020-10-12T15:00:22Z", "commit": {"oid": "c3e49e14b60f3881163016315c23c2c5373c6432"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "789d757f5450f0535149b8549b6714618fe726b2", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/789d757f5450f0535149b8549b6714618fe726b2", "committedDate": "2020-10-12T16:22:57Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a78e468faec83b197f0f52e4b5bc315dec727f6", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/8a78e468faec83b197f0f52e4b5bc315dec727f6", "committedDate": "2020-10-13T08:29:55Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "024cdbff18a968afb65329b77cc84f7a62206384", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/024cdbff18a968afb65329b77cc84f7a62206384", "committedDate": "2020-10-13T17:02:19Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca324e92afe9c41a0b98311be55a2a0a43d7d817", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/ca324e92afe9c41a0b98311be55a2a0a43d7d817", "committedDate": "2020-10-14T12:34:38Z", "message": "Merge branch 'master' into feature/add-cache-limit-for-pending-blocks"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2170, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}