{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNDkwNzYz", "number": 842, "title": "[BESU-696/492][Fix the eth_estimateGas json rpc", "bodyText": "Signed-off-by: Karim TAAM karim.t2am@gmail.com\nPR description\nFix cases where the gas estimate is too low and causes the transaction to fail\nImplementation of a strategy that will estimate the number of gas needed by a transaction\n1 - Estimate the number of gas used by a transaction\n2 - Estimate the number of gas necessary to add for each sub call present in a transaction (65/64^depth)\n3 - Add the minimum gas required for operations that need it (SSTORE) https://eips.ethereum.org/EIPS/eip-1706\nThis has been tested with the test network (dev) and the Clique network.", "createdAt": "2020-05-05T12:40:25Z", "url": "https://github.com/hyperledger/besu/pull/842", "merged": true, "mergeCommit": {"oid": "310e0b77e5f750159ca7c8fe85a4658e0c05e2a9"}, "closed": true, "closedAt": "2020-05-12T17:22:35Z", "author": {"login": "matkt"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceTCDdgH2gAyNDEzNDkwNzYzOjExYzhkNTY3OWEzN2QzM2QyMjNmZGY4YzMyYTJjZTA0YjE0M2VhNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgnaUNAH2gAyNDEzNDkwNzYzOjE4MWE1MDM3MzQ1OTgxOWFlYzkxY2RiN2NiNjk0ODQ5MDQ1Y2FmODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "11c8d5679a37d33d223fdf8c32a2ce04b143ea41", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/11c8d5679a37d33d223fdf8c32a2ce04b143ea41", "committedDate": "2020-05-05T12:14:15Z", "message": "fix the eth_estimateGas json rpc\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "385d96526c83104a38dd2c47a2381ab2bd4a6468", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/385d96526c83104a38dd2c47a2381ab2bd4a6468", "committedDate": "2020-05-05T12:41:28Z", "message": "Merge branch 'master/master' into feature/besu-696-fix-intrinsic-gas-exceeds-gas-limit\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d99ae15eda3c1632551d4806cdd2083c7b43e7bf", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/d99ae15eda3c1632551d4806cdd2083c7b43e7bf", "committedDate": "2020-05-05T13:00:18Z", "message": "fix unit test\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96980c5b9ef86957746c8ed9a86db7daab425a7d", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/96980c5b9ef86957746c8ed9a86db7daab425a7d", "committedDate": "2020-05-05T13:21:32Z", "message": "Merge branch 'master' into feature/besu-696-fix-intrinsic-gas-exceeds-gas-limit\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a2c64b914efcb6f52fd756af9beb05cf15a45ae", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/4a2c64b914efcb6f52fd756af9beb05cf15a45ae", "committedDate": "2020-05-05T14:20:54Z", "message": "fix some issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "867a463c1a0c0b1226ba92b566833fca52306ace", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/867a463c1a0c0b1226ba92b566833fca52306ace", "committedDate": "2020-05-05T15:36:40Z", "message": "fix some tests\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2OTgyMDc3", "url": "https://github.com/hyperledger/besu/pull/842#pullrequestreview-406982077", "createdAt": "2020-05-06T20:59:07Z", "commit": {"oid": "867a463c1a0c0b1226ba92b566833fca52306ace"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1OTowN1rOGRlLsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1OTozNlrOGRlM6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4ODE3OQ==", "bodyText": "I'd prefer we clone and change the object instead of introducing a single mutable field into an otherwise immutable class.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    modifiedCallParams.setGasLimit(highGasLimit);\n          \n          \n            \n            JsonCallParameter modifiedCallParams =\n          \n          \n            \n                    overrideGasLimitAndPrice(callParams, highGasLimit);", "url": "https://github.com/hyperledger/besu/pull/842#discussion_r421088179", "createdAt": "2020-05-06T20:59:07Z", "author": {"login": "shemnon"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGas.java", "diffHunk": "@@ -51,21 +60,94 @@ public String getName() {\n \n   @Override\n   public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n+\n     final JsonCallParameter callParams =\n         requestContext.getRequiredParameter(0, JsonCallParameter.class);\n \n     final BlockHeader blockHeader = blockHeader();\n     if (blockHeader == null) {\n-      return errorResponse(requestContext, JsonRpcError.INTERNAL_ERROR);\n+      return new JsonRpcErrorResponse(\n+          requestContext.getRequest().getId(), JsonRpcError.INTERNAL_ERROR);\n     }\n+    return doEstimateGas(requestContext.getRequest(), callParams, blockHeader);\n+  }\n+\n+  /**\n+   * Allows to estimate gas for a transaction\n+   *\n+   * @param request json rpc request\n+   * @param callParams call params\n+   * @param blockHeader block header\n+   * @return json rpc response with the estimate gas of the transaction, otherwise the error\n+   */\n+  private JsonRpcResponse doEstimateGas(\n+      final JsonRpcRequest request,\n+      final JsonCallParameter callParams,\n+      final BlockHeader blockHeader) {\n \n-    final JsonCallParameter modifiedCallParams =\n+    long lowGasLimit, midGasLimit, highGasLimit;\n+    int numberOfRetry = 0;\n+    boolean foundEstimateGas;\n+\n+    JsonCallParameter modifiedCallParams =\n         overrideGasLimitAndPrice(callParams, blockHeader.getGasLimit());\n \n-    return transactionSimulator\n-        .process(modifiedCallParams, blockHeader.getNumber())\n-        .map(gasEstimateResponse(requestContext))\n-        .orElse(errorResponse(requestContext, JsonRpcError.INTERNAL_ERROR));\n+    Optional<TransactionSimulatorResult> simulatorResult = Optional.empty();\n+\n+    try {\n+\n+      // make a first estimate of the necessary gasLimit\n+      simulatorResult = transactionSimulator.process(modifiedCallParams, blockHeader.getNumber());\n+      lowGasLimit =\n+          highGasLimit =\n+              simulatorResult\n+                  .filter(TransactionSimulatorResult::isSuccessful)\n+                  .map(TransactionSimulatorResult::getGasEstimate)\n+                  .orElseThrow();\n+\n+      // check that the estimate is valid and if not we increase the estimate by\n+      // GAS_ESTIMATE_CHANGE_DENOMINATOR. if after MAX_ESTIMATE_NUMBER_OF_RETRY retries you cannot\n+      // find a valid estimate. we return the error returned by the transaction\n+      do {\n+\n+        modifiedCallParams.setGasLimit(highGasLimit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867a463c1a0c0b1226ba92b566833fca52306ace"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4ODQ4OQ==", "bodyText": "See my comment on clone and copy.  Making this the only mutable field seems awkward.", "url": "https://github.com/hyperledger/besu/pull/842#discussion_r421088489", "createdAt": "2020-05-06T20:59:36Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/transaction/CallParameter.java", "diffHunk": "@@ -28,7 +28,7 @@\n \n   private final Address to;\n \n-  private final long gasLimit;\n+  private long gasLimit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "867a463c1a0c0b1226ba92b566833fca52306ace"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28bfa808233fec7b22930ed1ab7d1cc653b89178", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/28bfa808233fec7b22930ed1ab7d1cc653b89178", "committedDate": "2020-05-07T14:43:25Z", "message": "estimate gas thanks to an operation tracer\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85080dce4f3be22832ea824cba5cadaee481ea38", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/85080dce4f3be22832ea824cba5cadaee481ea38", "committedDate": "2020-05-07T14:51:32Z", "message": "clean code\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3718da33f13f924dde0d089b3c812682b3add569", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/3718da33f13f924dde0d089b3c812682b3add569", "committedDate": "2020-05-07T17:06:49Z", "message": "add unit test for tracer\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "631df3a64d502ef2b4006e079a1f40b387a044f2", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/631df3a64d502ef2b4006e079a1f40b387a044f2", "committedDate": "2020-05-07T17:31:17Z", "message": "fix build issue\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c9be99997400df486b5fc877c6412db80c754a4", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/3c9be99997400df486b5fc877c6412db80c754a4", "committedDate": "2020-05-07T20:39:13Z", "message": "update test\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "204bfc93c0194b64b09e44a1544b1ca04d575692", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/204bfc93c0194b64b09e44a1544b1ca04d575692", "committedDate": "2020-05-08T09:06:29Z", "message": "Merge branch 'upstream/master' into feature/besu-696-fix-intrinsic-gas-exceeds-gas-limit\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda4666e521ba6a5ed9b9b019fbb3edf8d0f7857", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/dda4666e521ba6a5ed9b9b019fbb3edf8d0f7857", "committedDate": "2020-05-08T11:36:31Z", "message": "add try finally for the operation tracer\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c70ed05a1531b8cd80477a9898339f64f229942", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/3c70ed05a1531b8cd80477a9898339f64f229942", "committedDate": "2020-05-11T08:23:27Z", "message": "Merge branch 'upstream/master' into feature/besu-696-fix-intrinsic-gas-exceeds-gas-limit\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0bd6c4dfecdc8433a2a45c3878e14730108be6eb", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/0bd6c4dfecdc8433a2a45c3878e14730108be6eb", "committedDate": "2020-05-11T08:13:57Z", "message": "Merge branch 'upstream/master' into feature/besu-696-fix-intrinsic-gas-exceeds-gas-limit\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}, "afterCommit": {"oid": "3c70ed05a1531b8cd80477a9898339f64f229942", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/3c70ed05a1531b8cd80477a9898339f64f229942", "committedDate": "2020-05-11T08:23:27Z", "message": "Merge branch 'upstream/master' into feature/besu-696-fix-intrinsic-gas-exceeds-gas-limit\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8765d8cbdbc2d9ea7ec2dd87ca26b3eafbdd63c3", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/8765d8cbdbc2d9ea7ec2dd87ca26b3eafbdd63c3", "committedDate": "2020-05-11T14:25:22Z", "message": "Add check that reason is available before trying to recover it\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98cf9753f1f5415c5105a34552836e0d8d77fc3a", "author": {"user": {"login": "abdelhamidbakhta", "name": "Abdelhamid Bakhta"}}, "url": "https://github.com/hyperledger/besu/commit/98cf9753f1f5415c5105a34552836e0d8d77fc3a", "committedDate": "2020-05-12T08:53:39Z", "message": "Merge branch 'master' into feature/besu-696-fix-intrinsic-gas-exceeds-gas-limit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5ODQ5MDk4", "url": "https://github.com/hyperledger/besu/pull/842#pullrequestreview-409849098", "createdAt": "2020-05-12T09:11:13Z", "commit": {"oid": "98cf9753f1f5415c5105a34552836e0d8d77fc3a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwOToxMToxM1rOGT9d5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwOToyMDowM1rOGT90Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4MzIwNg==", "bodyText": "I would suggest to compute the 65/64 factor once and set it as a constant in this class.", "url": "https://github.com/hyperledger/besu/pull/842#discussion_r423583206", "createdAt": "2020-05-12T09:11:13Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/methods/EthEstimateGas.java", "diffHunk": "@@ -85,19 +88,38 @@ private JsonCallParameter overrideGasLimitAndPrice(\n   }\n \n   private Function<TransactionSimulatorResult, JsonRpcResponse> gasEstimateResponse(\n-      final JsonRpcRequestContext request) {\n+      final JsonRpcRequestContext request, final EstimateGasOperationTracer operationTracer) {\n     return result ->\n         result.isSuccessful()\n             ? new JsonRpcSuccessResponse(\n-                request.getRequest().getId(), Quantity.create(result.getGasEstimate()))\n+                request.getRequest().getId(),\n+                Quantity.create(processEstimateGas(result, operationTracer)))\n             : errorResponse(request, result.getValidationResult());\n   }\n \n+  /**\n+   * Estimate gas by adding minimum gas remaining for some operation and the necessary gas for sub\n+   * calls\n+   *\n+   * @param result transaction simulator result\n+   * @param operationTracer estimate gas operation tracer\n+   * @return estimate gas\n+   */\n+  private long processEstimateGas(\n+      final TransactionSimulatorResult result, final EstimateGasOperationTracer operationTracer) {\n+    // no more than 63/64s of the remaining gas can be passed to the sub calls\n+    final double subCallMultiplier = Math.pow(65D / 64D, operationTracer.getMaxDepth());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98cf9753f1f5415c5105a34552836e0d8d77fc3a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NTAyNg==", "bodyText": "Missing Javadoc", "url": "https://github.com/hyperledger/besu/pull/842#discussion_r423585026", "createdAt": "2020-05-12T09:14:07Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/TransactionProcessor.java", "diffHunk": "@@ -105,6 +105,8 @@ default boolean isSuccessful() {\n      * @return the revert reason.\n      */\n     Optional<Bytes> getRevertReason();\n+\n+    long getEstimateGasUsedByTransaction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98cf9753f1f5415c5105a34552836e0d8d77fc3a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NzM3OQ==", "bodyText": "Rather use Gas.compareTo method to check if sStoreStipendNeeded  is equal to zero. Conversion to long is not necessary.", "url": "https://github.com/hyperledger/besu/pull/842#discussion_r423587379", "createdAt": "2020-05-12T09:17:50Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/vm/EstimateGasOperationTracer.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.vm;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.ethereum.vm.ehalt.ExceptionalHaltException;\n+import org.hyperledger.besu.ethereum.vm.operations.SStoreOperation;\n+\n+import java.util.Optional;\n+\n+public class EstimateGasOperationTracer implements OperationTracer {\n+\n+  private int maxDepth = 0;\n+\n+  private Gas sStoreStipendNeeded = Gas.ZERO;\n+\n+  @Override\n+  public void traceExecution(\n+      final MessageFrame frame,\n+      final Optional<Gas> currentGasCost,\n+      final OperationTracer.ExecuteOperation executeOperation)\n+      throws ExceptionalHaltException {\n+    try {\n+      executeOperation.execute();\n+    } finally {\n+      if (frame.getCurrentOperation() instanceof SStoreOperation\n+          && sStoreStipendNeeded.toLong() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98cf9753f1f5415c5105a34552836e0d8d77fc3a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4ODg5NA==", "bodyText": "(Suggestion): For consistency i would suggest to import statically assertThat method.", "url": "https://github.com/hyperledger/besu/pull/842#discussion_r423588894", "createdAt": "2020-05-12T09:20:03Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/test/java/org/hyperledger/besu/ethereum/vm/EstimateGasOperationTracerTest.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.vm;\n+\n+import static org.mockito.Mockito.mock;\n+\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.ethereum.core.MessageFrameTestFixture;\n+import org.hyperledger.besu.ethereum.vm.OperationTracer.ExecuteOperation;\n+import org.hyperledger.besu.ethereum.vm.ehalt.ExceptionalHaltException;\n+import org.hyperledger.besu.ethereum.vm.operations.CallCodeOperation;\n+import org.hyperledger.besu.ethereum.vm.operations.SStoreOperation;\n+\n+import java.util.Optional;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class EstimateGasOperationTracerTest {\n+\n+  private EstimateGasOperationTracer operationTracer;\n+  private MessageFrameTestFixture messageFrameTestFixture;\n+\n+  @Before\n+  public void setUp() {\n+    operationTracer = new EstimateGasOperationTracer();\n+    messageFrameTestFixture = new MessageFrameTestFixture();\n+  }\n+\n+  @Test\n+  public void shouldDetectChangeInDepthDuringExecution() throws ExceptionalHaltException {\n+\n+    final ExecuteOperation noExecutionOperation = mock(ExecuteOperation.class);\n+\n+    Assertions.assertThat(operationTracer.getMaxDepth()).isEqualTo(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98cf9753f1f5415c5105a34552836e0d8d77fc3a"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2007f27ae88721c75b9cb9be3338fd340471eb66", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/2007f27ae88721c75b9cb9be3338fd340471eb66", "committedDate": "2020-05-12T10:24:18Z", "message": "fix review issues\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMDY1NDE2", "url": "https://github.com/hyperledger/besu/pull/842#pullrequestreview-410065416", "createdAt": "2020-05-12T13:54:03Z", "commit": {"oid": "2007f27ae88721c75b9cb9be3338fd340471eb66"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "181a50373459819aec91cdb7cb694849045caf84", "author": {"user": {"login": "matkt", "name": null}}, "url": "https://github.com/hyperledger/besu/commit/181a50373459819aec91cdb7cb694849045caf84", "committedDate": "2020-05-12T17:06:42Z", "message": "Merge commit '4d1cf80d498119a25fa2da4bd3c8c31e5f366628' into feature/besu-696-fix-intrinsic-gas-exceeds-gas-limit\n\nSigned-off-by: Karim TAAM <karim.t2am@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1617, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}