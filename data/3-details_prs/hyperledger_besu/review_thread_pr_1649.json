{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwODMwMzM2", "number": 1649, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDowMTo0M1rOE_3MWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDowNDoxNVrOE_3O3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NDAwMDI3OnYy", "diffSide": "RIGHT", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDowMTo0M1rOH9zRWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNToxMjozOVrOH954GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NTIxMQ==", "bodyText": "can we put a try-catch block around the awaitPeerDiscovery and if fail - dump the actual peers\n(this would require creating a transaction in the dsl which wraps Ethereum.adminPeers - similar to NetPeerCountTransaction)", "url": "https://github.com/hyperledger/besu/pull/1649#discussion_r534565211", "createdAt": "2020-12-03T00:01:43Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "diffHunk": "@@ -87,12 +87,19 @@ public void start(final List<? extends RunnableNode> nodes) {\n \n     nodes\n         .parallelStream()\n-        .filter(node -> bootnode.map(boot -> boot != node).orElse(true))\n+        .filter(\n+            node -> {\n+              LOG.info(\"starting non-bootnode {}\", node.getName());\n+              return bootnode.map(boot -> boot != node).orElse(true);\n+            })\n         .forEach(this::startNode);\n \n     if (clusterConfiguration.isAwaitPeerDiscovery()) {\n       for (final RunnableNode node : nodes) {\n-        LOG.info(\"Awaiting peer discovery for node {}\", node.getName());\n+        LOG.info(\n+            \"Awaiting peer discovery for node {}, expecting {} peers\",\n+            node.getName(),\n+            nodes.size() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c3c1e5943e8690a5bc953b65c5dedb96b55a4a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY1OTY5OQ==", "bodyText": "because it's an assert I think it would involve some pretty major refactoring", "url": "https://github.com/hyperledger/besu/pull/1649#discussion_r534659699", "createdAt": "2020-12-03T04:29:13Z", "author": {"login": "macfarla"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "diffHunk": "@@ -87,12 +87,19 @@ public void start(final List<? extends RunnableNode> nodes) {\n \n     nodes\n         .parallelStream()\n-        .filter(node -> bootnode.map(boot -> boot != node).orElse(true))\n+        .filter(\n+            node -> {\n+              LOG.info(\"starting non-bootnode {}\", node.getName());\n+              return bootnode.map(boot -> boot != node).orElse(true);\n+            })\n         .forEach(this::startNode);\n \n     if (clusterConfiguration.isAwaitPeerDiscovery()) {\n       for (final RunnableNode node : nodes) {\n-        LOG.info(\"Awaiting peer discovery for node {}\", node.getName());\n+        LOG.info(\n+            \"Awaiting peer discovery for node {}, expecting {} peers\",\n+            node.getName(),\n+            nodes.size() - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NTIxMQ=="}, "originalCommit": {"oid": "99c3c1e5943e8690a5bc953b65c5dedb96b55a4a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3MzQzMw==", "bodyText": ":( That's the killer piece of info in some respects - but all good - getting this in is worth it.", "url": "https://github.com/hyperledger/besu/pull/1649#discussion_r534673433", "createdAt": "2020-12-03T05:12:39Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "diffHunk": "@@ -87,12 +87,19 @@ public void start(final List<? extends RunnableNode> nodes) {\n \n     nodes\n         .parallelStream()\n-        .filter(node -> bootnode.map(boot -> boot != node).orElse(true))\n+        .filter(\n+            node -> {\n+              LOG.info(\"starting non-bootnode {}\", node.getName());\n+              return bootnode.map(boot -> boot != node).orElse(true);\n+            })\n         .forEach(this::startNode);\n \n     if (clusterConfiguration.isAwaitPeerDiscovery()) {\n       for (final RunnableNode node : nodes) {\n-        LOG.info(\"Awaiting peer discovery for node {}\", node.getName());\n+        LOG.info(\n+            \"Awaiting peer discovery for node {}, expecting {} peers\",\n+            node.getName(),\n+            nodes.size() - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NTIxMQ=="}, "originalCommit": {"oid": "99c3c1e5943e8690a5bc953b65c5dedb96b55a4a"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NDAwNjcwOnYy", "diffSide": "RIGHT", "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDowNDoxNVrOH9zU-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNToxNjozNlrOH959DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NjEzNg==", "bodyText": "doing this in a custom fork-join pool can be done like:\nForkJoinPool forkJoinPool = new ForkJoinPool(nodes.size() - 1); forkJoiNPool.submit(nodes.parallelStream() ....\nThat removes a dependency on the \"system wide\" thread pool, which removes a dependency which might be causing problems,", "url": "https://github.com/hyperledger/besu/pull/1649#discussion_r534566136", "createdAt": "2020-12-03T00:04:15Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "diffHunk": "@@ -87,12 +87,19 @@ public void start(final List<? extends RunnableNode> nodes) {\n \n     nodes\n         .parallelStream()\n-        .filter(node -> bootnode.map(boot -> boot != node).orElse(true))\n+        .filter(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99c3c1e5943e8690a5bc953b65c5dedb96b55a4a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY2MDY0NQ==", "bodyText": "would it make sense to do this as a separate PR in case it causes problems? Cluster is used by lots of tests", "url": "https://github.com/hyperledger/besu/pull/1649#discussion_r534660645", "createdAt": "2020-12-03T04:32:05Z", "author": {"login": "macfarla"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "diffHunk": "@@ -87,12 +87,19 @@ public void start(final List<? extends RunnableNode> nodes) {\n \n     nodes\n         .parallelStream()\n-        .filter(node -> bootnode.map(boot -> boot != node).orElse(true))\n+        .filter(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NjEzNg=="}, "originalCommit": {"oid": "99c3c1e5943e8690a5bc953b65c5dedb96b55a4a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3MzI5NA==", "bodyText": "sure - we can do that.", "url": "https://github.com/hyperledger/besu/pull/1649#discussion_r534673294", "createdAt": "2020-12-03T05:12:15Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "diffHunk": "@@ -87,12 +87,19 @@ public void start(final List<? extends RunnableNode> nodes) {\n \n     nodes\n         .parallelStream()\n-        .filter(node -> bootnode.map(boot -> boot != node).orElse(true))\n+        .filter(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NjEzNg=="}, "originalCommit": {"oid": "99c3c1e5943e8690a5bc953b65c5dedb96b55a4a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDY3NDcwMA==", "bodyText": "there are some tests that start cluster with one node - and sometimes there's more than one bootnode. so it's not that neat.", "url": "https://github.com/hyperledger/besu/pull/1649#discussion_r534674700", "createdAt": "2020-12-03T05:16:36Z", "author": {"login": "macfarla"}, "path": "acceptance-tests/dsl/src/main/java/org/hyperledger/besu/tests/acceptance/dsl/node/cluster/Cluster.java", "diffHunk": "@@ -87,12 +87,19 @@ public void start(final List<? extends RunnableNode> nodes) {\n \n     nodes\n         .parallelStream()\n-        .filter(node -> bootnode.map(boot -> boot != node).orElse(true))\n+        .filter(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU2NjEzNg=="}, "originalCommit": {"oid": "99c3c1e5943e8690a5bc953b65c5dedb96b55a4a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1387, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}