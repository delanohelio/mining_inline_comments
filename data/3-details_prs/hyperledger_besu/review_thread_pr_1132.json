{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MjI0Mzc1", "number": 1132, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzo1MToxMlrOEHw-GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDoxMzo0MVrOEImvZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTc3ODE3OnYy", "diffSide": "RIGHT", "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/IbftProtocolSchedule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzo1MToxMlrOGnUmaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo0NzozOFrOGoCyBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4NTE2MA==", "bodyText": "nit: getBlocKReward/getBlockReward", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r443885160", "createdAt": "2020-06-22T23:51:12Z", "author": {"login": "jframe"}, "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/IbftProtocolSchedule.java", "diffHunk": "@@ -60,16 +59,24 @@ public static ProtocolSchedule create(final GenesisConfigOptions config) {\n   }\n \n   private static ProtocolSpecBuilder applyIbftChanges(\n-      final long secondsBetweenBlocks, final ProtocolSpecBuilder builder) {\n-    return builder\n-        .blockHeaderValidatorBuilder(ibftBlockHeaderValidator(secondsBetweenBlocks))\n-        .ommerHeaderValidatorBuilder(ibftBlockHeaderValidator(secondsBetweenBlocks))\n+      final IbftConfigOptions ibftConfig, final ProtocolSpecBuilder builder) {\n+\n+    builder\n+        .blockHeaderValidatorBuilder(ibftBlockHeaderValidator(ibftConfig.getBlockPeriodSeconds()))\n+        .ommerHeaderValidatorBuilder(ibftBlockHeaderValidator(ibftConfig.getBlockPeriodSeconds()))\n         .blockBodyValidatorBuilder(MainnetBlockBodyValidator::new)\n         .blockValidatorBuilder(MainnetBlockValidator::new)\n         .blockImporterBuilder(MainnetBlockImporter::new)\n         .difficultyCalculator((time, parent, protocolContext) -> BigInteger.ONE)\n-        .blockReward(Wei.ZERO)\n+        .blockReward(Wei.of(ibftConfig.getBlocKReward()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fbe58db9448409985a97bb63252cc51df1d774f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MTc5Ng==", "bodyText": "done", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r444641796", "createdAt": "2020-06-24T04:47:38Z", "author": {"login": "rain-on"}, "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/IbftProtocolSchedule.java", "diffHunk": "@@ -60,16 +59,24 @@ public static ProtocolSchedule create(final GenesisConfigOptions config) {\n   }\n \n   private static ProtocolSpecBuilder applyIbftChanges(\n-      final long secondsBetweenBlocks, final ProtocolSpecBuilder builder) {\n-    return builder\n-        .blockHeaderValidatorBuilder(ibftBlockHeaderValidator(secondsBetweenBlocks))\n-        .ommerHeaderValidatorBuilder(ibftBlockHeaderValidator(secondsBetweenBlocks))\n+      final IbftConfigOptions ibftConfig, final ProtocolSpecBuilder builder) {\n+\n+    builder\n+        .blockHeaderValidatorBuilder(ibftBlockHeaderValidator(ibftConfig.getBlockPeriodSeconds()))\n+        .ommerHeaderValidatorBuilder(ibftBlockHeaderValidator(ibftConfig.getBlockPeriodSeconds()))\n         .blockBodyValidatorBuilder(MainnetBlockBodyValidator::new)\n         .blockValidatorBuilder(MainnetBlockValidator::new)\n         .blockImporterBuilder(MainnetBlockImporter::new)\n         .difficultyCalculator((time, parent, protocolContext) -> BigInteger.ONE)\n-        .blockReward(Wei.ZERO)\n+        .blockReward(Wei.of(ibftConfig.getBlocKReward()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4NTE2MA=="}, "originalCommit": {"oid": "8fbe58db9448409985a97bb63252cc51df1d774f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTc4NDM3OnYy", "diffSide": "RIGHT", "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/IbftProtocolSchedule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzo1NDo0NFrOGnUqFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNDo1MDoxOVrOGoC0TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4NjEwMg==", "bodyText": "Should the block reward be specified as a hex value in the config?", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r443886102", "createdAt": "2020-06-22T23:54:44Z", "author": {"login": "jframe"}, "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/IbftProtocolSchedule.java", "diffHunk": "@@ -60,16 +59,24 @@ public static ProtocolSchedule create(final GenesisConfigOptions config) {\n   }\n \n   private static ProtocolSpecBuilder applyIbftChanges(\n-      final long secondsBetweenBlocks, final ProtocolSpecBuilder builder) {\n-    return builder\n-        .blockHeaderValidatorBuilder(ibftBlockHeaderValidator(secondsBetweenBlocks))\n-        .ommerHeaderValidatorBuilder(ibftBlockHeaderValidator(secondsBetweenBlocks))\n+      final IbftConfigOptions ibftConfig, final ProtocolSpecBuilder builder) {\n+\n+    builder\n+        .blockHeaderValidatorBuilder(ibftBlockHeaderValidator(ibftConfig.getBlockPeriodSeconds()))\n+        .ommerHeaderValidatorBuilder(ibftBlockHeaderValidator(ibftConfig.getBlockPeriodSeconds()))\n         .blockBodyValidatorBuilder(MainnetBlockBodyValidator::new)\n         .blockValidatorBuilder(MainnetBlockValidator::new)\n         .blockImporterBuilder(MainnetBlockImporter::new)\n         .difficultyCalculator((time, parent, protocolContext) -> BigInteger.ONE)\n-        .blockReward(Wei.ZERO)\n+        .blockReward(Wei.of(ibftConfig.getBlocKReward()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fbe58db9448409985a97bb63252cc51df1d774f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0MjM4MA==", "bodyText": "Not sure - all other numbers in this section are decimal ... so tempted to stick with that? There doesn't seem to be much of a definitive approach...", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r444642380", "createdAt": "2020-06-24T04:50:19Z", "author": {"login": "rain-on"}, "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/IbftProtocolSchedule.java", "diffHunk": "@@ -60,16 +59,24 @@ public static ProtocolSchedule create(final GenesisConfigOptions config) {\n   }\n \n   private static ProtocolSpecBuilder applyIbftChanges(\n-      final long secondsBetweenBlocks, final ProtocolSpecBuilder builder) {\n-    return builder\n-        .blockHeaderValidatorBuilder(ibftBlockHeaderValidator(secondsBetweenBlocks))\n-        .ommerHeaderValidatorBuilder(ibftBlockHeaderValidator(secondsBetweenBlocks))\n+      final IbftConfigOptions ibftConfig, final ProtocolSpecBuilder builder) {\n+\n+    builder\n+        .blockHeaderValidatorBuilder(ibftBlockHeaderValidator(ibftConfig.getBlockPeriodSeconds()))\n+        .ommerHeaderValidatorBuilder(ibftBlockHeaderValidator(ibftConfig.getBlockPeriodSeconds()))\n         .blockBodyValidatorBuilder(MainnetBlockBodyValidator::new)\n         .blockValidatorBuilder(MainnetBlockValidator::new)\n         .blockImporterBuilder(MainnetBlockImporter::new)\n         .difficultyCalculator((time, parent, protocolContext) -> BigInteger.ONE)\n-        .blockReward(Wei.ZERO)\n+        .blockReward(Wei.of(ibftConfig.getBlocKReward()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4NjEwMg=="}, "originalCommit": {"oid": "8fbe58db9448409985a97bb63252cc51df1d774f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUzMDY1OnYy", "diffSide": "RIGHT", "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/ibft2/Ibft2BlockRewardPaymentAcceptanceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNTowMzoyMVrOGoDBFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNjozOTozNlrOGoE4dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NTY1Mg==", "bodyText": "Do we need a test with multiple validators receiving a fixed reward? Though that get complicated so might not be worth it.", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r444645652", "createdAt": "2020-06-24T05:03:21Z", "author": {"login": "jframe"}, "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/ibft2/Ibft2BlockRewardPaymentAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.ibft2;\n+\n+import static java.util.Collections.singletonList;\n+\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.account.Account;\n+import org.hyperledger.besu.tests.acceptance.dsl.blockchain.Amount;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.BesuNode;\n+\n+import java.io.IOException;\n+import java.math.BigInteger;\n+import java.util.Optional;\n+\n+import org.junit.Test;\n+\n+public class Ibft2BlockRewardPaymentAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  public void validatorsArePaidBlockReward() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c462698450381ff2d9f7c36e237e327a9fd4262"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NjIxMg==", "bodyText": "Yeah, it got scary when you start saying \"how do you know\"? I.e. it depends on rounds, and blocks...\nmaybe you just wait until 2 validators have been paid (something ... anything) - no API exists in the DSL to do that, but sure we can make it work", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r444676212", "createdAt": "2020-06-24T06:39:36Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/tests/src/test/java/org/hyperledger/besu/tests/acceptance/ibft2/Ibft2BlockRewardPaymentAcceptanceTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.tests.acceptance.ibft2;\n+\n+import static java.util.Collections.singletonList;\n+\n+import org.hyperledger.besu.ethereum.core.Address;\n+import org.hyperledger.besu.tests.acceptance.dsl.AcceptanceTestBase;\n+import org.hyperledger.besu.tests.acceptance.dsl.account.Account;\n+import org.hyperledger.besu.tests.acceptance.dsl.blockchain.Amount;\n+import org.hyperledger.besu.tests.acceptance.dsl.node.BesuNode;\n+\n+import java.io.IOException;\n+import java.math.BigInteger;\n+import java.util.Optional;\n+\n+import org.junit.Test;\n+\n+public class Ibft2BlockRewardPaymentAcceptanceTest extends AcceptanceTestBase {\n+\n+  @Test\n+  public void validatorsArePaidBlockReward() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0NTY1Mg=="}, "originalCommit": {"oid": "8c462698450381ff2d9f7c36e237e327a9fd4262"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDUzOTE0OnYy", "diffSide": "RIGHT", "path": "config/src/main/java/org/hyperledger/besu/config/IbftConfigOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNTowODowN1rOGoDGKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNjo0MDozMVrOGoE53g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0Njk1Mg==", "bodyText": "Don't think this need eth as a suffix, no other fields do that. Should be clear enough that it's eth.", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r444646952", "createdAt": "2020-06-24T05:08:07Z", "author": {"login": "jframe"}, "path": "config/src/main/java/org/hyperledger/besu/config/IbftConfigOptions.java", "diffHunk": "@@ -75,6 +77,14 @@ public int getFutureMessagesMaxDistance() {\n         ibftConfigRoot, \"futuremessagesmaxdistance\", DEFAULT_FUTURE_MESSAGES_MAX_DISTANCE);\n   }\n \n+  public Optional<String> getMiningBeneficiary() {\n+    return JsonUtil.getString(ibftConfigRoot, \"miningbeneficiary\");\n+  }\n+\n+  public long getBlockRewardEth() {\n+    return JsonUtil.getLong(ibftConfigRoot, \"blockrewardeth\", DEFAULT_IBFT_BLOCK_REWARD_ETH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c462698450381ff2d9f7c36e237e327a9fd4262"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NjU3NA==", "bodyText": "done", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r444676574", "createdAt": "2020-06-24T06:40:31Z", "author": {"login": "rain-on"}, "path": "config/src/main/java/org/hyperledger/besu/config/IbftConfigOptions.java", "diffHunk": "@@ -75,6 +77,14 @@ public int getFutureMessagesMaxDistance() {\n         ibftConfigRoot, \"futuremessagesmaxdistance\", DEFAULT_FUTURE_MESSAGES_MAX_DISTANCE);\n   }\n \n+  public Optional<String> getMiningBeneficiary() {\n+    return JsonUtil.getString(ibftConfigRoot, \"miningbeneficiary\");\n+  }\n+\n+  public long getBlockRewardEth() {\n+    return JsonUtil.getLong(ibftConfigRoot, \"blockrewardeth\", DEFAULT_IBFT_BLOCK_REWARD_ETH);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0Njk1Mg=="}, "originalCommit": {"oid": "8c462698450381ff2d9f7c36e237e327a9fd4262"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDU0ODEzOnYy", "diffSide": "RIGHT", "path": "acceptance-tests/tests/src/test/resources/ibft/ibft.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNToxMzoyNlrOGoDLoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNjo0MjozOVrOGoE9Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0ODM1Mw==", "bodyText": "Rather the default was left as 0 as what most people will use and just modify the blockreward for the block reward AT", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r444648353", "createdAt": "2020-06-24T05:13:26Z", "author": {"login": "jframe"}, "path": "acceptance-tests/tests/src/test/resources/ibft/ibft.json", "diffHunk": "@@ -10,7 +10,8 @@\n     \"ibft2\": {\n       \"blockperiodseconds\": 1,\n       \"epochlength\": 30000,\n-      \"requesttimeoutseconds\": 5\n+      \"requesttimeoutseconds\": 5,\n+      \"blockrewardeth\": 5", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c462698450381ff2d9f7c36e237e327a9fd4262"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY3NzQ2Nw==", "bodyText": "Yeah agreed - but it's REALLY hard to do - given no existing tests prove that the validator's not paid, I figured this was ok?", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r444677467", "createdAt": "2020-06-24T06:42:39Z", "author": {"login": "rain-on"}, "path": "acceptance-tests/tests/src/test/resources/ibft/ibft.json", "diffHunk": "@@ -10,7 +10,8 @@\n     \"ibft2\": {\n       \"blockperiodseconds\": 1,\n       \"epochlength\": 30000,\n-      \"requesttimeoutseconds\": 5\n+      \"requesttimeoutseconds\": 5,\n+      \"blockrewardeth\": 5", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY0ODM1Mw=="}, "originalCommit": {"oid": "8c462698450381ff2d9f7c36e237e327a9fd4262"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU4NzkxOnYy", "diffSide": "RIGHT", "path": "config/src/test/java/org/hyperledger/besu/config/JsonGenesisConfigOptionsTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDoxMzo0MVrOGoqv-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwNDo0OToyMVrOGorQNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NjYzNQ==", "bodyText": "Can you also add a test for block rewards with a decimal number", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r445296635", "createdAt": "2020-06-25T04:13:41Z", "author": {"login": "jframe"}, "path": "config/src/test/java/org/hyperledger/besu/config/JsonGenesisConfigOptionsTest.java", "diffHunk": "@@ -116,4 +116,40 @@ public void configWithAnIbftWithNoValidatorsListedIsValid() {\n     assertThat(configOptions.getTransitions().getIbftForks().get(1).getValidators().get().size())\n         .isEqualTo(1);\n   }\n+\n+  @Test\n+  public void configWithValidIbftBlockRewardIsParsable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a37329870c7694d619a6f5a42c3fa599c52f86e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTMwNDg4NQ==", "bodyText": "yeah sure.", "url": "https://github.com/hyperledger/besu/pull/1132#discussion_r445304885", "createdAt": "2020-06-25T04:49:21Z", "author": {"login": "rain-on"}, "path": "config/src/test/java/org/hyperledger/besu/config/JsonGenesisConfigOptionsTest.java", "diffHunk": "@@ -116,4 +116,40 @@ public void configWithAnIbftWithNoValidatorsListedIsValid() {\n     assertThat(configOptions.getTransitions().getIbftForks().get(1).getValidators().get().size())\n         .isEqualTo(1);\n   }\n+\n+  @Test\n+  public void configWithValidIbftBlockRewardIsParsable() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5NjYzNQ=="}, "originalCommit": {"oid": "0a37329870c7694d619a6f5a42c3fa599c52f86e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 818, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}