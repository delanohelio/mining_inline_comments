{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MjQ2ODc2", "number": 1005, "title": "Improve Eth/64 compatibility", "bodyText": "Rollback a Eth64 change intended to improve compatibility in consortium network.  It resulted in many nodes not connecting on named networks such as goerli and mordor.", "createdAt": "2020-05-29T18:02:53Z", "url": "https://github.com/hyperledger/besu/pull/1005", "merged": true, "mergeCommit": {"oid": "807725ef5a0b5948dc069ebd806bc2e72a3298b0"}, "closed": true, "closedAt": "2020-05-29T18:24:39Z", "author": {"login": "shemnon"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmGYOtAH2gAyNDI1MjQ2ODc2OjMyNmI5ZTliMzlmMWUwMzA3YmZhMWFlNmIyOGEwMzU2MTZiNGZiMmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmGhN5gFqTQyMTE3ODA2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "326b9e9b39f1e0307bfa1ae6b28a035616b4fb2b", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/326b9e9b39f1e0307bfa1ae6b28a035616b4fb2b", "committedDate": "2020-05-29T18:01:06Z", "message": "Revert \"Handle backward compatibility for EIP-2124 fork id management (#981)\"\n\nThis reverts commit 1d8218ae\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28bcfa9120634bfb143475ade393c88612870b9b", "author": {"user": {"login": "shemnon", "name": "Danno Ferrin"}}, "url": "https://github.com/hyperledger/besu/commit/28bcfa9120634bfb143475ade393c88612870b9b", "committedDate": "2020-05-29T18:01:11Z", "message": "Revert \"[EIP-2124] Backward compatible fork id management implementation (#979)\"\n\nThis reverts commit cb2c67d7\n\nSigned-off-by: Danno Ferrin <danno.ferrin@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTc3MTAz", "url": "https://github.com/hyperledger/besu/pull/1005#pullrequestreview-421177103", "createdAt": "2020-05-29T18:09:16Z", "commit": {"oid": "28bcfa9120634bfb143475ade393c88612870b9b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTc4MDY4", "url": "https://github.com/hyperledger/besu/pull/1005#pullrequestreview-421178068", "createdAt": "2020-05-29T18:10:54Z", "commit": {"oid": "28bcfa9120634bfb143475ade393c88612870b9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODoxMDo1NFrOGcnIGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODoxMDo1NFrOGcnIGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1NDM2Mg==", "bodyText": "Is this code comment still accurate if you delete the second part?", "url": "https://github.com/hyperledger/besu/pull/1005#discussion_r432654362", "createdAt": "2020-05-29T18:10:54Z", "author": {"login": "atoulme"}, "path": "ethereum/eth/src/main/java/org/hyperledger/besu/ethereum/eth/manager/ForkIdManager.java", "diffHunk": "@@ -121,50 +73,40 @@ public static ForkId readFrom(final RLPInput in) {\n    * @return boolean (peer valid (true) or invalid (false))\n    */\n   boolean peerCheck(final ForkId forkId) {\n-    return forkIDCheckers.stream().anyMatch(checker -> checker.check(forkId));\n-  }\n-\n-  private static ForkIDChecker eip2124(\n-      final Blockchain blockchain,\n-      final long forkNext,\n-      final List<ForkId> forkAndHashList,\n-      final long highestKnownFork) {\n-    return forkId -> {\n-      if (forkId == null) {\n-        return true; // Another method must be used to validate (i.e. genesis hash)\n-      }\n-      // Run the fork checksum validation rule set:\n-      //   1. If local and remote FORK_CSUM matches, connect.\n-      //        The two nodes are in the same fork state currently. They might know\n-      //        of differing future forks, but that's not relevant until the fork\n-      //        triggers (might be postponed, nodes might be updated to match).\n-      //   2. If the remote FORK_CSUM is a subset of the local past forks and the\n-      //      remote FORK_NEXT matches with the locally following fork block number,\n-      //      connect.\n-      //        Remote node is currently syncing. It might eventually diverge from\n-      //        us, but at this current point in time we don't have enough information.\n-      //   3. If the remote FORK_CSUM is a superset of the local past forks and can\n-      //      be completed with locally known future forks, connect.\n-      //        Local node is currently syncing. It might eventually diverge from\n-      //        the remote, but at this current point in time we don't have enough\n-      //        information.\n-      //   4. Reject in all other cases.\n-      if (isHashKnown(forkId.getHash(), forkAndHashList)) {\n-        if (blockchain.getChainHeadBlockNumber() < forkNext) {\n-          return true;\n+    if (forkId == null) {\n+      return true; // Another method must be used to validate (i.e. genesis hash)\n+    }\n+    // Run the fork checksum validation rule set:\n+    //   1. If local and remote FORK_CSUM matches, connect.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28bcfa9120634bfb143475ade393c88612870b9b"}, "originalPosition": 142}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1550, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}