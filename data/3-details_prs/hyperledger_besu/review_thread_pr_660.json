{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzMxMTM5", "number": 660, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTo0NjoyMVrODvn9rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTo1Njo1MFrODvoQaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjY0NDI5OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/BlockHeaderValidator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTo0NjoyMVrOGCKDDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoyMzoxNlrOGC7eqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxNDk1OA==", "bodyText": "This makes the BlockHeaderValidator mutable, and IMHO should not be done.  Note we have a builder that has the exact same method, so instead of mutating a produced BlockHeaderValidator we should hook into wherever the builder is being created.", "url": "https://github.com/hyperledger/besu/pull/660#discussion_r404914958", "createdAt": "2020-04-07T15:46:21Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/BlockHeaderValidator.java", "diffHunk": "@@ -99,6 +99,10 @@ private boolean applyRules(\n     return parent;\n   }\n \n+  public void addRule(final AttachedBlockHeaderValidationRule<C> rule) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2f839d1218a684625a616a76754af216510221"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ3NTgyNw==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/660#discussion_r405475827", "createdAt": "2020-04-08T12:10:50Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/BlockHeaderValidator.java", "diffHunk": "@@ -99,6 +99,10 @@ private boolean applyRules(\n     return parent;\n   }\n \n+  public void addRule(final AttachedBlockHeaderValidationRule<C> rule) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxNDk1OA=="}, "originalCommit": {"oid": "aa2f839d1218a684625a616a76754af216510221"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyNDg0MA==", "bodyText": "We still need to delete this method.", "url": "https://github.com/hyperledger/besu/pull/660#discussion_r405724840", "createdAt": "2020-04-08T18:23:16Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/BlockHeaderValidator.java", "diffHunk": "@@ -99,6 +99,10 @@ private boolean applyRules(\n     return parent;\n   }\n \n+  public void addRule(final AttachedBlockHeaderValidationRule<C> rule) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxNDk1OA=="}, "originalCommit": {"oid": "aa2f839d1218a684625a616a76754af216510221"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjY2NjcxOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetProtocolSpecs.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTo1MTowN1rOGCKRaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowODozM1rOGCNnzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxODYzMg==", "bodyText": "Maybe start this off with a check of the feature flag?  Throw an exception if not set?", "url": "https://github.com/hyperledger/besu/pull/660#discussion_r404918632", "createdAt": "2020-04-07T15:51:07Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetProtocolSpecs.java", "diffHunk": "@@ -324,6 +328,21 @@ private MainnetProtocolSpecs() {}\n         .name(\"MuirGlacier\");\n   }\n \n+  // TODO EIP-1559 change for the actual fork name when known\n+  static ProtocolSpecBuilder<Void> eip1559Definition(\n+      final Optional<BigInteger> chainId,\n+      final OptionalInt contractSizeLimit,\n+      final OptionalInt configStackSizeLimit,\n+      final boolean enableRevertReason,\n+      final GenesisConfigOptions genesisConfigOptions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2f839d1218a684625a616a76754af216510221"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MjE4Mw==", "bodyText": "Good idea.", "url": "https://github.com/hyperledger/besu/pull/660#discussion_r404972183", "createdAt": "2020-04-07T17:06:30Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetProtocolSpecs.java", "diffHunk": "@@ -324,6 +328,21 @@ private MainnetProtocolSpecs() {}\n         .name(\"MuirGlacier\");\n   }\n \n+  // TODO EIP-1559 change for the actual fork name when known\n+  static ProtocolSpecBuilder<Void> eip1559Definition(\n+      final Optional<BigInteger> chainId,\n+      final OptionalInt contractSizeLimit,\n+      final OptionalInt configStackSizeLimit,\n+      final boolean enableRevertReason,\n+      final GenesisConfigOptions genesisConfigOptions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxODYzMg=="}, "originalCommit": {"oid": "aa2f839d1218a684625a616a76754af216510221"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MzUxNg==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/660#discussion_r404973516", "createdAt": "2020-04-07T17:08:33Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/MainnetProtocolSpecs.java", "diffHunk": "@@ -324,6 +328,21 @@ private MainnetProtocolSpecs() {}\n         .name(\"MuirGlacier\");\n   }\n \n+  // TODO EIP-1559 change for the actual fork name when known\n+  static ProtocolSpecBuilder<Void> eip1559Definition(\n+      final Optional<BigInteger> chainId,\n+      final OptionalInt contractSizeLimit,\n+      final OptionalInt configStackSizeLimit,\n+      final boolean enableRevertReason,\n+      final GenesisConfigOptions genesisConfigOptions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxODYzMg=="}, "originalCommit": {"oid": "aa2f839d1218a684625a616a76754af216510221"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjY5MjI3OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/ProtocolSpecBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTo1Njo1MFrOGCKiDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMjoxMDo1N1rOGCsSMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkyMjg5NQ==", "bodyText": "This will require a tiny bit of replumbing.  We can have blockHeaderValidatorBuilder return the builder instead of the fully assembled blockHeaderValidator. Then we call addRule on the builder, then build and store.", "url": "https://github.com/hyperledger/besu/pull/660#discussion_r404922895", "createdAt": "2020-04-07T15:56:50Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/ProtocolSpecBuilder.java", "diffHunk": "@@ -284,6 +294,8 @@\n \n     final BlockHeaderValidator<T> blockHeaderValidator =\n         blockHeaderValidatorBuilder.apply(difficultyCalculator);\n+    additionalBlockHeaderValidationRules.forEach(blockHeaderValidator::addRule);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa2f839d1218a684625a616a76754af216510221"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ3NTg4OQ==", "bodyText": "Done", "url": "https://github.com/hyperledger/besu/pull/660#discussion_r405475889", "createdAt": "2020-04-08T12:10:57Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/mainnet/ProtocolSpecBuilder.java", "diffHunk": "@@ -284,6 +294,8 @@\n \n     final BlockHeaderValidator<T> blockHeaderValidator =\n         blockHeaderValidatorBuilder.apply(difficultyCalculator);\n+    additionalBlockHeaderValidationRules.forEach(blockHeaderValidator::addRule);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkyMjg5NQ=="}, "originalCommit": {"oid": "aa2f839d1218a684625a616a76754af216510221"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1030, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}