{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTg2NzQ4", "number": 1575, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMToyOTo0OFrOE6TiQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDowMDozNVrOE60RDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTcyOTI4OnYy", "diffSide": "RIGHT", "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/eea/EeaSendRawTransaction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMToyOTo0OFrOH1SQ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMTo1MjoyMVrOH1StWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzNTc5OA==", "bodyText": "are these comments meant to be removed?", "url": "https://github.com/hyperledger/besu/pull/1575#discussion_r525635798", "createdAt": "2020-11-18T01:29:48Z", "author": {"login": "usmansaleem"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/eea/EeaSendRawTransaction.java", "diffHunk": "@@ -140,7 +140,9 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n             id, privateTransaction, privateTransactionLookupId, Address.DEFAULT_PRIVACY);\n       }\n     } catch (final IllegalArgumentException | RLPException e) {\n+      /// RIGHT HERE <----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "606e704936422dd691138b6200f0cba36f10243a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTY0MzA5Nw==", "bodyText": "oops", "url": "https://github.com/hyperledger/besu/pull/1575#discussion_r525643097", "createdAt": "2020-11-18T01:52:21Z", "author": {"login": "rain-on"}, "path": "ethereum/api/src/main/java/org/hyperledger/besu/ethereum/api/jsonrpc/internal/privacy/methods/eea/EeaSendRawTransaction.java", "diffHunk": "@@ -140,7 +140,9 @@ public JsonRpcResponse response(final JsonRpcRequestContext requestContext) {\n             id, privateTransaction, privateTransactionLookupId, Address.DEFAULT_PRIVACY);\n       }\n     } catch (final IllegalArgumentException | RLPException e) {\n+      /// RIGHT HERE <----", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzNTc5OA=="}, "originalCommit": {"oid": "606e704936422dd691138b6200f0cba36f10243a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTA4NzUyOnYy", "diffSide": "RIGHT", "path": "consensus/ibft/src/integration-test/java/org/hyperledger/besu/consensus/ibft/tests/LocalNodeIsProposerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo1ODo1MFrOH2HJIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzo1ODo1MFrOH2HJIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMjE3Nw==", "bodyText": "This comment seems like a nice check to add", "url": "https://github.com/hyperledger/besu/pull/1575#discussion_r526502177", "createdAt": "2020-11-18T23:58:50Z", "author": {"login": "jframe"}, "path": "consensus/ibft/src/integration-test/java/org/hyperledger/besu/consensus/ibft/tests/LocalNodeIsProposerTest.java", "diffHunk": "@@ -110,4 +112,47 @@ public void importsToChainWithoutReceivingPrepareMessages() {\n     assertThat(context.getBlockchain().getChainHeadBlockNumber()).isEqualTo(1);\n     peers.verifyNoMessagesReceived();\n   }\n+\n+  @Test\n+  public void nodeDoesNotSendRoundChangeIfRoundTimesOutAfterBlockImportButBeforeNewBlock() {\n+    peers.verifyMessagesReceived(expectedTxProposal);\n+    peers.getNonProposing(0).injectCommit(roundId, expectedProposedBlock.getHash());\n+    assertThat(context.getBlockchain().getChainHeadBlockNumber()).isEqualTo(0);\n+    peers.verifyNoMessagesReceived();\n+\n+    peers.getNonProposing(1).injectCommit(roundId, expectedProposedBlock.getHash());\n+    assertThat(context.getBlockchain().getChainHeadBlockNumber()).isEqualTo(1);\n+    peers.verifyNoMessagesReceived();\n+\n+    context.getController().handleRoundExpiry(new RoundExpiry(roundId));\n+    peers.verifyNoMessagesReceived();\n+\n+    context\n+        .getController()\n+        .handleNewBlockEvent(new NewChainHead(expectedProposedBlock.getHeader()));\n+    peers.verifyNoMessagesReceived();\n+  }\n+\n+  @Test\n+  public void nodeDoesNotGoIntoRoundChangeAfterImport() {\n+    peers.verifyMessagesReceived(expectedTxProposal);\n+    peers.getNonProposing(0).injectCommit(roundId, expectedProposedBlock.getHash());\n+    assertThat(context.getBlockchain().getChainHeadBlockNumber()).isEqualTo(0);\n+    peers.verifyNoMessagesReceived();\n+\n+    peers.getNonProposing(1).injectCommit(roundId, expectedProposedBlock.getHash());\n+    assertThat(context.getBlockchain().getChainHeadBlockNumber()).isEqualTo(1);\n+    peers.verifyNoMessagesReceived();\n+\n+    final ConsensusRoundIdentifier nextRound = new ConsensusRoundIdentifier(1, 1);\n+\n+    peers.getNonProposing(0).injectRoundChange(nextRound, Optional.empty());\n+    peers.verifyNoMessagesReceived();\n+    peers.getNonProposing(1).injectRoundChange(nextRound, Optional.empty());\n+    peers.verifyNoMessagesReceived();\n+    peers.getNonProposing(2).injectRoundChange(nextRound, Optional.empty());\n+\n+    // Prove local node is NOT in Round(1,1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25277ce5b1f82d28a72bbb20958cde2f81d59835"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTA5MTk2OnYy", "diffSide": "RIGHT", "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/statemachine/IbftController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDowMDozNVrOH2HLvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMDoyOTozN1rOH2HyLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMjg0NQ==", "bodyText": "Think we should log if this happens", "url": "https://github.com/hyperledger/besu/pull/1575#discussion_r526502845", "createdAt": "2020-11-19T00:00:35Z", "author": {"login": "jframe"}, "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/statemachine/IbftController.java", "diffHunk": "@@ -129,6 +130,14 @@ private void handleMessage(final Message message) {\n   private <P extends IbftMessage<?>> void consumeMessage(\n       final Message message, final P ibftMessage, final Consumer<P> handleMessage) {\n     LOG.trace(\"Received IBFT {} message\", ibftMessage.getClass().getSimpleName());\n+\n+    // Discard all messages which target the BLOCKCHAIN height (which SHOULD be 1 less than\n+    // the currentHeightManager, but CAN be the same directly following import).\n+    if (ibftMessage.getRoundIdentifier().getSequenceNumber()\n+        <= blockchain.getChainHeadBlockNumber()) {\n+      return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25277ce5b1f82d28a72bbb20958cde2f81d59835"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUxMjY4NA==", "bodyText": "done", "url": "https://github.com/hyperledger/besu/pull/1575#discussion_r526512684", "createdAt": "2020-11-19T00:29:37Z", "author": {"login": "rain-on"}, "path": "consensus/ibft/src/main/java/org/hyperledger/besu/consensus/ibft/statemachine/IbftController.java", "diffHunk": "@@ -129,6 +130,14 @@ private void handleMessage(final Message message) {\n   private <P extends IbftMessage<?>> void consumeMessage(\n       final Message message, final P ibftMessage, final Consumer<P> handleMessage) {\n     LOG.trace(\"Received IBFT {} message\", ibftMessage.getClass().getSimpleName());\n+\n+    // Discard all messages which target the BLOCKCHAIN height (which SHOULD be 1 less than\n+    // the currentHeightManager, but CAN be the same directly following import).\n+    if (ibftMessage.getRoundIdentifier().getSequenceNumber()\n+        <= blockchain.getChainHeadBlockNumber()) {\n+      return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUwMjg0NQ=="}, "originalCommit": {"oid": "25277ce5b1f82d28a72bbb20958cde2f81d59835"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1353, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}