{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MDA2NDIx", "number": 745, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMjoyMVrOD0dRQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowNTowMlrOD0dVAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzMyMDk4OnYy", "diffSide": "RIGHT", "path": "CHANGELOG.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMjoyMVrOGJaXcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODo1Mjo0OVrOGJrK8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMjM1NA==", "bodyText": "This file may need a hand merge.  I don't think there should be any diffs.", "url": "https://github.com/hyperledger/besu/pull/745#discussion_r412522354", "createdAt": "2020-04-21T22:02:21Z", "author": {"login": "shemnon"}, "path": "CHANGELOG.md", "diffHunk": "@@ -160,59 +160,15 @@ Workaround -> When using onchain permissioning, ensure bootnodes are also valida\n ### Additions and Improvements ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52091fc06faed141571f23f3f571e1f3102a5003"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc5NzY4Mg==", "bodyText": "Hand merged.", "url": "https://github.com/hyperledger/besu/pull/745#discussion_r412797682", "createdAt": "2020-04-22T08:52:49Z", "author": {"login": "abdelhamidbakhta"}, "path": "CHANGELOG.md", "diffHunk": "@@ -160,59 +160,15 @@ Workaround -> When using onchain permissioning, ensure bootnodes are also valida\n ### Additions and Improvements ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMjM1NA=="}, "originalCommit": {"oid": "52091fc06faed141571f23f3f571e1f3102a5003"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzMyNTkwOnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/fees/CoinbaseFeePriceCalculator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMzo0M1rOGJaaIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowMzo0M1rOGJaaIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMzA0MQ==", "bodyText": "\ud83d\ude04 This should produce compiler errors now if another method is added to the interface.", "url": "https://github.com/hyperledger/besu/pull/745#discussion_r412523041", "createdAt": "2020-04-21T22:03:43Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/fees/CoinbaseFeePriceCalculator.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.core.fees;\n+\n+import org.hyperledger.besu.config.experimental.ExperimentalEIPs;\n+import org.hyperledger.besu.ethereum.core.Gas;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+\n+import java.util.Optional;\n+\n+@FunctionalInterface", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52091fc06faed141571f23f3f571e1f3102a5003"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzMzMDU5OnYy", "diffSide": "RIGHT", "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/fees/TransactionPriceCalculator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjowNTowMlrOGJacvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODo0OToxNlrOGJrAlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMzcxMQ==", "bodyText": "Will gasPremium and Fee Cap always be in legacy TXes in a mixed 1559/legacy state?  i.e. is there a fixed calculation for them based on gas price?  i.e. orElseThrow will only throw if there are config issues?", "url": "https://github.com/hyperledger/besu/pull/745#discussion_r412523711", "createdAt": "2020-04-21T22:05:02Z", "author": {"login": "shemnon"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/fees/TransactionPriceCalculator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.core.fees;\n+\n+import org.hyperledger.besu.config.experimental.ExperimentalEIPs;\n+import org.hyperledger.besu.ethereum.core.Transaction;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+\n+import java.util.Optional;\n+\n+@FunctionalInterface\n+public interface TransactionPriceCalculator {\n+  Wei price(Transaction transaction, Optional<Long> baseFee);\n+\n+  static TransactionPriceCalculator frontier() {\n+    return (transaction, baseFee) -> transaction.getGasPrice();\n+  }\n+\n+  static TransactionPriceCalculator eip1559() {\n+    return (transaction, maybeBaseFee) -> {\n+      ExperimentalEIPs.eip1559MustBeEnabled();\n+      final long gasPremium = transaction.getGasPremium().orElseThrow().getValue().longValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52091fc06faed141571f23f3f571e1f3102a5003"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc5NTAzMA==", "bodyText": "orElseThrow will only throw if there are config issues. You cannot derived gasPremium and fee cap from gas price.", "url": "https://github.com/hyperledger/besu/pull/745#discussion_r412795030", "createdAt": "2020-04-22T08:49:16Z", "author": {"login": "abdelhamidbakhta"}, "path": "ethereum/core/src/main/java/org/hyperledger/besu/ethereum/core/fees/TransactionPriceCalculator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright ConsenSys AG.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n+ * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ *\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+package org.hyperledger.besu.ethereum.core.fees;\n+\n+import org.hyperledger.besu.config.experimental.ExperimentalEIPs;\n+import org.hyperledger.besu.ethereum.core.Transaction;\n+import org.hyperledger.besu.ethereum.core.Wei;\n+\n+import java.util.Optional;\n+\n+@FunctionalInterface\n+public interface TransactionPriceCalculator {\n+  Wei price(Transaction transaction, Optional<Long> baseFee);\n+\n+  static TransactionPriceCalculator frontier() {\n+    return (transaction, baseFee) -> transaction.getGasPrice();\n+  }\n+\n+  static TransactionPriceCalculator eip1559() {\n+    return (transaction, maybeBaseFee) -> {\n+      ExperimentalEIPs.eip1559MustBeEnabled();\n+      final long gasPremium = transaction.getGasPremium().orElseThrow().getValue().longValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMzcxMQ=="}, "originalCommit": {"oid": "52091fc06faed141571f23f3f571e1f3102a5003"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 930, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}