{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MjUzNzUz", "number": 4451, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDowMzoxMVrODcL-qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDozMDoxMlrODcMcLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODgyOTg3OnYy", "diffSide": "RIGHT", "path": "appserver/admin/admin-core/src/test/resources/UpgradeTest.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDowMzoxMVrOFkGkYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDowMzoxMVrOFkGkYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMDY3Mw==", "bodyText": "No big thing but is-isolation-level-guaranteed being in front of name attribute makes this harder to read. Don't think you need to change it now but something to think about next time.", "url": "https://github.com/payara/Payara/pull/4451#discussion_r373400673", "createdAt": "2020-01-31T10:03:11Z", "author": {"login": "jbee"}, "path": "appserver/admin/admin-core/src/test/resources/UpgradeTest.xml", "diffHunk": "@@ -75,22 +75,16 @@\n             <bar></bar>   \n         </foo>\n     </something-weirder>\n-  <resources>\n-    <jdbc-resource pool-name=\"__TimerPool\" jndi-name=\"jdbc/__TimerPool\" object-type=\"system-all\"></jdbc-resource>\n-    <jdbc-resource pool-name=\"DerbyPool\" jndi-name=\"jdbc/__default\"></jdbc-resource>\n-    <jdbc-connection-pool datasource-classname=\"org.apache.derby.jdbc.EmbeddedXADataSource\" res-type=\"javax.sql.XADataSource\" name=\"__TimerPool\">\n-      <property name=\"databaseName\" value=\"${com.sun.aas.instanceRoot}/lib/databases/ejbtimer\"></property>\n-      <property name=\"connectionAttributes\" value=\";create=true\"></property>\n-    </jdbc-connection-pool>\n-    <jdbc-connection-pool datasource-classname=\"org.apache.derby.jdbc.ClientDataSource\" is-isolation-level-guaranteed=\"false\" res-type=\"javax.sql.DataSource\" name=\"DerbyPool\">\n-      <property name=\"PortNumber\" value=\"1527\"></property>\n-      <property name=\"Password\" value=\"APP\"></property>\n-      <property name=\"User\" value=\"APP\"></property>\n-      <property name=\"serverName\" value=\"localhost\"></property>\n-      <property name=\"DatabaseName\" value=\"sun-appserv-samples\"></property>\n-      <property name=\"connectionAttributes\" value=\";create=true\"></property>\n-    </jdbc-connection-pool>\n-  </resources>\n+    <resources>\n+        <jdbc-resource pool-name=\"__TimerPool\" jndi-name=\"jdbc/__TimerPool\" object-type=\"system-admin\" />\n+        <jdbc-resource pool-name=\"H2Pool\" jndi-name=\"jdbc/__default\" />\n+        <jdbc-connection-pool name=\"__TimerPool\" datasource-classname=\"org.h2.jdbcx.JdbcDataSource\" res-type=\"javax.sql.XADataSource\">\n+            <property name=\"URL\" value=\"jdbc:h2:${com.sun.aas.instanceRoot}/lib/databases/ejbtimer;AUTO_SERVER=TRUE\" />\n+        </jdbc-connection-pool>\n+        <jdbc-connection-pool is-isolation-level-guaranteed=\"false\" name=\"H2Pool\" datasource-classname=\"org.h2.jdbcx.JdbcDataSource\" res-type=\"javax.sql.DataSource\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODg1MTM3OnYy", "diffSide": "LEFT", "path": "appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoxMTowNVrOFkGxOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzoxOToyOFrOFouMAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMzk2MA==", "bodyText": "I assume this is not needed for H2 for some reason?", "url": "https://github.com/payara/Payara/pull/4451#discussion_r373403960", "createdAt": "2020-01-31T10:11:05Z", "author": {"login": "jbee"}, "path": "appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java", "diffHunk": "@@ -211,8 +206,6 @@ public void init(IBatchConfig batchConfig) throws BatchContainerServiceException\n     public CheckpointData getCheckpointData(CheckpointDataKey key) {\n         logger.entering(CLASSNAME, \"getCheckpointData\", key == null ? \"<null>\" : key);\n \n-        tryObtainTableLock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI0NDA5Nw==", "bodyText": "This was written specifically for Derby", "url": "https://github.com/payara/Payara/pull/4451#discussion_r378244097", "createdAt": "2020-02-12T13:19:28Z", "author": {"login": "MeroRai"}, "path": "appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java", "diffHunk": "@@ -211,8 +206,6 @@ public void init(IBatchConfig batchConfig) throws BatchContainerServiceException\n     public CheckpointData getCheckpointData(CheckpointDataKey key) {\n         logger.entering(CLASSNAME, \"getCheckpointData\", key == null ? \"<null>\" : key);\n \n-        tryObtainTableLock();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwMzk2MA=="}, "originalCommit": {"oid": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODg1NzA4OnYy", "diffSide": "RIGHT", "path": "appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoxMzoxMFrOFkG0jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoxMzoxMFrOFkG0jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQwNDgxMw==", "bodyText": "These contains checks were changed from doing lower case (case-less) comparison to case-sensitive ones. I feel this could be a source of error. Is this a intentional change?", "url": "https://github.com/payara/Payara/pull/4451#discussion_r373404813", "createdAt": "2020-01-31T10:13:10Z", "author": {"login": "jbee"}, "path": "appserver/batch/glassfish-batch-connector/src/main/java/fish/payara/jbatch/persistence/rdbms/JBatchJDBCPersistenceManager.java", "diffHunk": "@@ -255,2216 +246,2203 @@ public void updateCheckpointData(CheckpointDataKey key, CheckpointData value) {\n      */\n     @Override\n     public void createCheckpointData(CheckpointDataKey key, CheckpointData value) {\n-        logger.entering(CLASSNAME, \"createCheckpointData\", new Object[] { key, value });\n+        logger.entering(CLASSNAME, \"createCheckpointData\", new Object[]{key, value});\n \n         insertCheckpointData(key.getCommaSeparatedKey(), value);\n \n         logger.exiting(CLASSNAME, \"createCheckpointData\");\n     }\n \n     /**\n-     * Set the default schema to the username obtained from the connection based on the datasource\n+     * Set the default schema to the username obtained from the connection based\n+     * on the datasource\n      *\n      * @return the name of the default database schema\n      * @throws SQLException\n      */\n     public String setDefaultSchema() throws SQLException {\n-\t\tlogger.finest(\"Entering setDefaultSchema\");\n+        logger.finest(\"Entering setDefaultSchema\");\n+\n+        logger.finest(\"Java EE mode, getting connection from data source\");\n+        try (Connection connection = dataSource.getConnection()) {\n+\n+            DatabaseMetaData dbmd = connection.getMetaData();\n+            schema = dbmd.getUserName();\n+            String databaseProductName = dbmd.getDatabaseProductName();\n+            if (databaseProductName.contains(\"MySQL\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0"}, "originalPosition": 223}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODg5MzQ4OnYy", "diffSide": "RIGHT", "path": "appserver/jdbc/jdbc-ra/jdbc-ra-distribution/xml/ra-dm.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDoyNTo1NlrOFkHKNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDo1OTo0MlrOFm_wxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxMDM1Nw==", "bodyText": "sa?", "url": "https://github.com/payara/Payara/pull/4451#discussion_r373410357", "createdAt": "2020-01-31T10:25:56Z", "author": {"login": "jbee"}, "path": "appserver/jdbc/jdbc-ra/jdbc-ra-distribution/xml/ra-dm.xml", "diffHunk": "@@ -141,12 +141,12 @@\n                 <config-property>\n                     <config-property-name>User</config-property-name>\n                     <config-property-type>java.lang.String</config-property-type>\n-                    <config-property-value>APP</config-property-value>\n+                    <config-property-value>sa</config-property-value>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzNDg4Ng==", "bodyText": "That is the default user for H2", "url": "https://github.com/payara/Payara/pull/4451#discussion_r376434886", "createdAt": "2020-02-07T14:59:42Z", "author": {"login": "MeroRai"}, "path": "appserver/jdbc/jdbc-ra/jdbc-ra-distribution/xml/ra-dm.xml", "diffHunk": "@@ -141,12 +141,12 @@\n                 <config-property>\n                     <config-property-name>User</config-property-name>\n                     <config-property-type>java.lang.String</config-property-type>\n-                    <config-property-value>APP</config-property-value>\n+                    <config-property-value>sa</config-property-value>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxMDM1Nw=="}, "originalCommit": {"oid": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODkwNTQzOnYy", "diffSide": "RIGHT", "path": "appserver/tests/quicklook/ejb/cmp/src/java/client/RosterServlet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDozMDoxMlrOFkHReA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDozMDoxMlrOFkHReA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxMjIxNg==", "bodyText": "Remove?", "url": "https://github.com/payara/Payara/pull/4451#discussion_r373412216", "createdAt": "2020-01-31T10:30:12Z", "author": {"login": "jbee"}, "path": "appserver/tests/quicklook/ejb/cmp/src/java/client/RosterServlet.java", "diffHunk": "@@ -337,7 +337,7 @@ private void insertInfo(Roster myRoster) {\n \n        try {\n            // Leagues\n-\n+System.out.println(\"Adding things\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d39e5fd63c563b9c295fdee833ce7cce89eaf9b0"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1374, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}