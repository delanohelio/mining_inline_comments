{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMDE2MzU4", "number": 4813, "title": "FISH-256 Identify, Transform, and Run jakarta.* application", "bodyText": "Signed-off-by: Gaurav Gupta gaurav.gupta@payara.fish\nDescription\nThis is a feature to detect Jakarta EE 9 application and transform jakarta.* namespace to javax.* namespace then perform the usual deployment operation.\nDepends on PR\npayara/transformer#1\npayara/Payara_PatchedProjects#320\nTesting\nTesting Performed\nTested manually deployment of WAR module (.war), EAR module (.ear), EJB Module (.jar)\nNew Tests\n\n  \n    \n      Payara/appserver/tests/payara-samples/samples/jakartaee-namespace-transformer/src/test/java/fish/payara/samples/namespace/trasformer/HelloWorldControllerTest.java\n    \n    \n        Lines 78 to 87\n      in\n      81a4779\n    \n    \n    \n    \n\n        \n          \n           public void testNamespace() throws Exception { \n        \n\n        \n          \n               jakarta.ws.rs.Path jakartaPathAnnotation = HelloWorldController.class.getAnnotation(jakarta.ws.rs.Path.class); \n        \n\n        \n          \n               try (WebClient webClient = new WebClient()) { \n        \n\n        \n          \n                   TextPage page = webClient.getPage(base + \"/api/hello\"); \n        \n\n        \n          \n                   assertTrue(\"Status code\", page.getWebResponse().getStatusCode() == 200); \n        \n\n        \n          \n                   assertNotNull(\"Existing Annotation\", jakartaPathAnnotation); \n        \n\n        \n          \n                   assertNotNull(\"Existing Annotation Value\", jakartaPathAnnotation.value().equals(\"/api/hello\")); \n        \n\n        \n          \n                   assertTrue(\"Transformed Annotation\", page.getContent().contains(\"javax.ws.rs.Path\")); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nDocumentation\npayara/Payara-Community-Documentation#52", "createdAt": "2020-08-03T07:57:50Z", "url": "https://github.com/payara/Payara/pull/4813", "merged": true, "mergeCommit": {"oid": "eeb16a19d9b0bb18572b8ecfb19fadc681f26175"}, "closed": true, "closedAt": "2020-08-21T10:18:05Z", "author": {"login": "jGauravGupta"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7UBHYAFqTQ2MDEzNzg4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9lEFugH2gAyNDYyMDE2MzU4OjlkNTY2MmY1NzgzMTE0Mjk0OTA0OGNiYzUxMTM0NTYyYTdjODdmYWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMTM3ODg2", "url": "https://github.com/payara/Payara/pull/4813#pullrequestreview-460137886", "createdAt": "2020-08-03T15:46:57Z", "commit": {"oid": "81a4779a248d755f482dc5519aaab2ed7493d8c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzA2ODY4", "url": "https://github.com/payara/Payara/pull/4813#pullrequestreview-461706868", "createdAt": "2020-08-05T14:15:03Z", "commit": {"oid": "81a4779a248d755f482dc5519aaab2ed7493d8c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoxNTowM1rOG8LpMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoxNTowM1rOG8LpMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1ODUxNQ==", "bodyText": "Don't we already have a sniffer to do this sort of thing? (Note: I recognise this check may take place before sniffers have gotten involved, just checking that it's been a consideration)", "url": "https://github.com/payara/Payara/pull/4813#discussion_r465758515", "createdAt": "2020-08-05T14:15:03Z", "author": {"login": "MattGill98"}, "path": "nucleus/deployment/admin/src/main/java/fish/payara/deployment/admin/PayaraTransformer.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) 2020 Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.deployment.admin;\n+\n+import com.sun.enterprise.util.LocalStringManagerImpl;\n+import java.io.File;\n+import java.io.IOException;\n+import static org.eclipse.transformer.Transformer.SUCCESS_RC;\n+import org.eclipse.transformer.payara.JakartaNamespaceTransformer;\n+import org.glassfish.api.admin.AdminCommandContext;\n+import org.glassfish.hk2.classmodel.reflect.Type;\n+import org.glassfish.hk2.classmodel.reflect.Types;\n+\n+/**\n+ * Transforms jakarta.* namespace to javax.* and vice-versa.\n+ * \n+ * @author gaurav.gupta@payara.fish\n+ */\n+public class PayaraTransformer {\n+\n+    public static final String TRANSFORM_NAMESPACE = \"fish.payara.deployment.transform.namespace\";\n+\n+    private static final LocalStringManagerImpl localStrings = new LocalStringManagerImpl(PayaraTransformer.class);\n+\n+    private static final String[] commonJavaxClasses = {\n+        \"javax.inject.Inject\",\n+        \"javax.servlet.http.HttpServlet\",\n+        \"javax.ws.rs.core.Application\",\n+        \"javax.persistence.Entity\"\n+    };\n+    private static final String[] commonJakartaClasses = {\n+        \"jakarta.inject.Inject\",\n+        \"jakarta.servlet.http.HttpServlet\",\n+        \"jakarta.ws.rs.core.Application\",\n+        \"jakarta.persistence.Entity\"\n+    };\n+    private static final String JAKARTA_PACKAGE_PREFIX = \"jakarta.\";\n+\n+    public static boolean isJakartaEEApplication(Types types) {\n+\n+        // Quick check for the most common Javax/Jakarta APIs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81a4779a248d755f482dc5519aaab2ed7493d8c4"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMzQ4NDIy", "url": "https://github.com/payara/Payara/pull/4813#pullrequestreview-462348422", "createdAt": "2020-08-06T09:15:47Z", "commit": {"oid": "87452dd8a881a2ec1c5fdc4bddb3c50de2511409"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa752c31aa72823cd13ce5fbdd23366736dc8a2c", "author": {"user": {"login": "jGauravGupta", "name": "Gaurav Gupta"}}, "url": "https://github.com/payara/Payara/commit/fa752c31aa72823cd13ce5fbdd23366736dc8a2c", "committedDate": "2020-08-07T14:15:40Z", "message": "FISH-256 Identify, Transform, and Run Application jakarta.* application\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ca5899bc2f45a8b67cde36f59180f713e5e671d", "author": {"user": {"login": "jGauravGupta", "name": "Gaurav Gupta"}}, "url": "https://github.com/payara/Payara/commit/4ca5899bc2f45a8b67cde36f59180f713e5e671d", "committedDate": "2020-08-07T14:17:26Z", "message": "FISH-256 Payara namespace transformer testcase\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa727325dfe7da861f6024d2ef012e072daa164a", "author": {"user": {"login": "jGauravGupta", "name": "Gaurav Gupta"}}, "url": "https://github.com/payara/Payara/commit/aa727325dfe7da861f6024d2ef012e072daa164a", "committedDate": "2020-08-07T21:58:00Z", "message": "FISH-256 Quicklook test cases fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3013f5a4e080c5764d8f73015da949f995052209", "author": {"user": {"login": "jGauravGupta", "name": "Gaurav Gupta"}}, "url": "https://github.com/payara/Payara/commit/3013f5a4e080c5764d8f73015da949f995052209", "committedDate": "2020-08-10T11:53:07Z", "message": "FISH-256 Transform expanded directory of application\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "829f16026b9876aab427c0b65aed672b8d4f59c3", "author": {"user": {"login": "jGauravGupta", "name": "Gaurav Gupta"}}, "url": "https://github.com/payara/Payara/commit/829f16026b9876aab427c0b65aed672b8d4f59c3", "committedDate": "2020-08-10T12:42:26Z", "message": "FISH-256 remove duplicate module tag\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ede7c205da7cce570d85fbff2ee6bc347745fe4e", "author": {"user": {"login": "jGauravGupta", "name": "Gaurav Gupta"}}, "url": "https://github.com/payara/Payara/commit/ede7c205da7cce570d85fbff2ee6bc347745fe4e", "committedDate": "2020-08-10T14:35:06Z", "message": "FISH-256 Fix package typo\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d5662f57831142949048cbc51134562a7c87fae", "author": {"user": {"login": "jGauravGupta", "name": "Gaurav Gupta"}}, "url": "https://github.com/payara/Payara/commit/9d5662f57831142949048cbc51134562a7c87fae", "committedDate": "2020-08-10T16:46:25Z", "message": "FISH-256 Upgrade to Payara transformer 0.2.1\n\nSigned-off-by: Gaurav Gupta <gaurav.gupta@payara.fish>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 755, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}