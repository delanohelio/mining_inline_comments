{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNTk2NDQ3", "number": 4622, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDo1NzozOVrODyiwfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToxMDo1OVrODyjI6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzI0ODYzOnYy", "diffSide": "RIGHT", "path": "appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDo1NzozOVrOGGphsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1Mjo1NFrOGGsBIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyNTAwOQ==", "bodyText": "(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    initialize(appname);\n          \n          \n            \n                    initialise(appname);", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409625009", "createdAt": "2020-04-16T14:57:39Z", "author": {"login": "Pandrex247"}, "path": "appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java", "diffHunk": "@@ -181,38 +178,36 @@ public JaccWebAuthorizationManager(WebBundleDescriptor webBundleDescriptor, Serv\n         this.CONTEXT_ID = getContextID(webBundleDescriptor);\n         this.serverContext = serverContext;\n         this.webSecurityManagerFactory = webSecurityManagerFactory;\n-        \n-        String appname = getAppId();\n \n-        postConstruct();\n-        \n+        String appname = getAppId();\n+        SecurityRoleMapperFactoryGen.getSecurityRoleMapperFactory().setAppNameForContext(getAppId(), CONTEXT_ID);\n         // Initialize this class and specifically load permissions into the JACC Policy Configuration.\n-        initialise(appname);\n+        initialize(appname);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1MTg1MQ==", "bodyText": "Funny, I knew that there are differences between uk and us, but I assumed this is a mistake even in UK :D\nhttps://english.stackexchange.com/questions/459553/initialised-or-initialized-which-one-is-correct-spelling\nIn czech variant of this word is \"s\" variant obsoleted. I don't want to start any long discussion, but generally, should we prefer us or uk when we are EU-based?\nI did some \"research\" in Payara sources:\n\n\n\nprobably we should be more consistent at least ...", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409651851", "createdAt": "2020-04-16T15:33:19Z", "author": {"login": "dmatej"}, "path": "appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java", "diffHunk": "@@ -181,38 +178,36 @@ public JaccWebAuthorizationManager(WebBundleDescriptor webBundleDescriptor, Serv\n         this.CONTEXT_ID = getContextID(webBundleDescriptor);\n         this.serverContext = serverContext;\n         this.webSecurityManagerFactory = webSecurityManagerFactory;\n-        \n-        String appname = getAppId();\n \n-        postConstruct();\n-        \n+        String appname = getAppId();\n+        SecurityRoleMapperFactoryGen.getSecurityRoleMapperFactory().setAppNameForContext(getAppId(), CONTEXT_ID);\n         // Initialize this class and specifically load permissions into the JACC Policy Configuration.\n-        initialise(appname);\n+        initialize(appname);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyNTAwOQ=="}, "originalCommit": {"oid": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2NTgyNQ==", "bodyText": "I will revert it back, as it is not the only requested change and payara sources don't use consistent language, this change can be done in separate issue making the language consistent.", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409665825", "createdAt": "2020-04-16T15:52:54Z", "author": {"login": "dmatej"}, "path": "appserver/security/core-ee/src/main/java/com/sun/enterprise/security/jacc/JaccWebAuthorizationManager.java", "diffHunk": "@@ -181,38 +178,36 @@ public JaccWebAuthorizationManager(WebBundleDescriptor webBundleDescriptor, Serv\n         this.CONTEXT_ID = getContextID(webBundleDescriptor);\n         this.serverContext = serverContext;\n         this.webSecurityManagerFactory = webSecurityManagerFactory;\n-        \n-        String appname = getAppId();\n \n-        postConstruct();\n-        \n+        String appname = getAppId();\n+        SecurityRoleMapperFactoryGen.getSecurityRoleMapperFactory().setAppNameForContext(getAppId(), CONTEXT_ID);\n         // Initialize this class and specifically load permissions into the JACC Policy Configuration.\n-        initialise(appname);\n+        initialize(appname);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyNTAwOQ=="}, "originalCommit": {"oid": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b"}, "originalPosition": 175}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzI5OTU3OnYy", "diffSide": "RIGHT", "path": "nucleus/common/common-util/src/main/java/com/sun/enterprise/security/integration/RealmInitializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTowODoxOVrOGGqBtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTowODoxOVrOGGqBtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYzMzIwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param defaultRealmName - this realm name will be used as a default if there will not be\n          \n          \n            \n                 * @param defaultRealmName - this realm name will be used as a default if there is not\n          \n      \n    \n    \n  \n\nGrammar", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409633204", "createdAt": "2020-04-16T15:08:19Z", "author": {"login": "Pandrex247"}, "path": "nucleus/common/common-util/src/main/java/com/sun/enterprise/security/integration/RealmInitializer.java", "diffHunk": "@@ -37,22 +37,38 @@\n  * only if the new code is made subject to such option by the copyright\n  * holder.\n  */\n-// Portions Copyright [2019] [Payara Foundation and/or its affiliates]\n+// Portions Copyright [2019-2020] [Payara Foundation and/or its affiliates]\n package com.sun.enterprise.security.integration;\n \n /**\n  * Interface to facilitate Initialization of the injected Realm Instance with Application Descriptor info.\n- * \n+ *\n  * <p>\n  * See com.sun.enterprise.web.WebContainer and com.sun.web.security.RealmAdapter\n  */\n public interface RealmInitializer {\n \n-    void initializeRealm(Object bundledescriptor, boolean isSystemApp, String realmName);\n+    /**\n+     * Initializes the internal state of this instance with provided parameters.\n+     *\n+     * @param bundleDescriptor - contains bundle-specific configuration\n+     * @param isSystemApp - realm may have different behavior for system applications\n+     * @param defaultRealmName - this realm name will be used as a default if there will not be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzMxMTE1OnYy", "diffSide": "RIGHT", "path": "appserver/web/web-glue/src/main/java/com/sun/enterprise/web/WebModule.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToxMDo1OVrOGGqJJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToxMDo1OVrOGGqJJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYzNTEwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if ( listener == null ) {\n          \n          \n            \n                    if (listener == null) {", "url": "https://github.com/payara/Payara/pull/4622#discussion_r409635108", "createdAt": "2020-04-16T15:10:59Z", "author": {"login": "Pandrex247"}, "path": "appserver/web/web-glue/src/main/java/com/sun/enterprise/web/WebModule.java", "diffHunk": "@@ -1266,7 +1264,9 @@ protected void addValve(org.glassfish.web.deployment.runtime.Valve valveDescript\n     protected void addCatalinaListener(String listenerName) {\n         Object listener = loadInstance(listenerName);\n \n-        if ( listener == null ) return;\n+        if ( listener == null ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d31653cd8679a0fe15352a3a2bbea7e4f2ff1c9b"}, "originalPosition": 204}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1334, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}