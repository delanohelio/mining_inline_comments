{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNjcxODI5", "number": 5063, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MDowMVrOFHTUiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxOTo0MzowNVrOFJLo_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAwOTA1OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MDowMVrOIIuVHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MDowMVrOIIuVHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxODU5MQ==", "bodyText": "no need for Jersey, use plain jax-js APIs instead", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546018591", "createdAt": "2020-12-18T18:40:01Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>\n+    \n+    <properties>\n+        <jersey.version>3.0.0</jersey.version>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+    \n+    <dependencyManagement>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAxMDE5OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MDoyNFrOIIuVzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MDoyNFrOIIuVzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxODc2Ng==", "bodyText": "same here, use plain jax-rs APIs", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546018766", "createdAt": "2020-12-18T18:40:24Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>\n+    \n+    <properties>\n+        <jersey.version>3.0.0</jersey.version>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+    \n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.glassfish.jersey</groupId>\n+                <artifactId>jersey-bom</artifactId>\n+                <version>${jersey.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+    \n+    <dependencies>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.containers</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAxMjA0OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MTowMFrOIIuW8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MTowMFrOIIuW8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxOTA1OQ==", "bodyText": "no need for this section at all, use properties equivalent\nThis way you don't override the complier plugin version at all", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546019059", "createdAt": "2020-12-18T18:41:00Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>\n+    \n+    <properties>\n+        <jersey.version>3.0.0</jersey.version>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+    \n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.glassfish.jersey</groupId>\n+                <artifactId>jersey-bom</artifactId>\n+                <version>${jersey.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+    \n+    <dependencies>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.containers</groupId>\n+            <artifactId>jersey-container-servlet-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.inject</groupId>\n+            <artifactId>jersey-hk2</artifactId>\n+        </dependency>\n+        \n+        <!-- Payara Dependencies -->\n+        <dependency>\n+            <groupId>fish.payara.server.internal.web</groupId>\n+            <artifactId>war-util</artifactId>\n+            <version>${project.version}</version>\n+            <scope>provided</scope>\n+        </dependency>\n+    </dependencies>\n+    \n+    <build>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAxMzc3OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MTozMVrOIIuX9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MTozMVrOIIuX9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxOTMxNw==", "bodyText": "full Payara copyright", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546019317", "createdAt": "2020-12-18T18:41:31Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountService.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAxNTM1OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0MjowMFrOIIuY5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyMzo1N1rOIJuyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxOTU1Ng==", "bodyText": "Not sure this is necessary at all", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546019556", "createdAt": "2020-12-18T18:42:00Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountService.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+/**\n+ *\n+ * @author cuba\n+ */\n+public class InstanceCountService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NDYwOA==", "bodyText": "I still see no point in this class, it does nothing.\nInstanceCountTracker can be used directly.", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547074608", "createdAt": "2020-12-22T05:23:57Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountService.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+/**\n+ *\n+ * @author cuba\n+ */\n+public class InstanceCountService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxOTU1Ng=="}, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAyMDk1OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0Mzo1MlrOIIucOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0Mzo1MlrOIIucOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMDQwOQ==", "bodyText": "I would move instance count into own class, not have instance counts in different classes.\nMinimize changes to WebappClassLoader\nAlso, this doesn't touch non-webapp (jar, ear etc) class loaders", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546020409", "createdAt": "2020-12-18T18:43:52Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+import java.lang.ref.Reference;\n+import org.glassfish.web.loader.WebappClassLoader;\n+import org.glassfish.web.loader.WebappClassLoaderFinalizer;\n+\n+/**\n+ *\n+ * @author Cuba Stanley\n+ */\n+public class InstanceCountTracker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAyMzE4OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/webapp/WEB-INF/web.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NDozNlrOIIudjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NDozNlrOIIudjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMDc0OQ==", "bodyText": "no need for this file, use plain jax-rs APIs", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546020749", "createdAt": "2020-12-18T18:44:36Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/src/main/webapp/WEB-INF/web.xml", "diffHunk": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAyNTIzOnYy", "diffSide": "RIGHT", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NToxM1rOIIuewg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NToxM1rOIIuewg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMTA1OA==", "bodyText": "possible race condition, should be AtomicInteger", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546021058", "createdAt": "2020-12-18T18:45:13Z", "author": {"login": "lprimak"}, "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -408,9 +409,25 @@\n     private static final boolean IS_JDK_VERSION_HIGHER_THAN_8 = JDK.getMajor() > 8;\n     private static Boolean isMultiReleaseJar;\n     private static final Name MULTI_RELEASE = new Name(\"Multi-Release\");\n+    \n+    private static int INSTANCE_COUNT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAyNjc3OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NTo0MVrOIIufrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NTo0MVrOIIufrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMTI5NQ==", "bodyText": "this cast is a code smell, this needs to be refactored", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546021295", "createdAt": "2020-12-18T18:45:41Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+import java.lang.ref.Reference;\n+import org.glassfish.web.loader.WebappClassLoader;\n+import org.glassfish.web.loader.WebappClassLoaderFinalizer;\n+\n+/**\n+ *\n+ * @author Cuba Stanley\n+ */\n+public class InstanceCountTracker {\n+    \n+    private static int previousInstanceCount;\n+    \n+    public static int getInstanceCount() {\n+        System.gc();\n+        Reference<? extends WebappClassLoader> referenceFromQueue;\n+        while((referenceFromQueue = WebappClassLoader.referenceQueue.poll()) != null) {\n+            ((WebappClassLoaderFinalizer)referenceFromQueue).cleanupAction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAzMjA2OnYy", "diffSide": "RIGHT", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NzoxMlrOIIuinQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NzoxMlrOIIuinQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMjA0NQ==", "bodyText": "oracle copyrights should not be changed", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546022045", "createdAt": "2020-12-18T18:47:12Z", "author": {"login": "lprimak"}, "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -1,7 +1,7 @@\n /*\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n  *\n- * Copyright (c) 1997-2019 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997-2020 Oracle and/or its affiliates. All rights reserved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAzMjY1OnYy", "diffSide": "RIGHT", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoaderFinalizer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NzoyNVrOIIui9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0NzoyNVrOIIui9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMjEzMw==", "bodyText": "needs full copyright, not just portions", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546022133", "createdAt": "2020-12-18T18:47:25Z", "author": {"login": "lprimak"}, "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoaderFinalizer.java", "diffHunk": "@@ -0,0 +1,21 @@\n+// Portions Copyright [2020] [Payara Foundation and/or its affiliates]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjA0Mzg5OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1MDozNFrOIIupcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1MDozNFrOIIupcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMzc5NQ==", "bodyText": "I would just revert and start this file over again", "url": "https://github.com/payara/Payara/pull/5063#discussion_r546023795", "createdAt": "2020-12-18T18:50:34Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/pom.xml", "diffHunk": "@@ -37,60 +37,56 @@\n  *    and therefore, elected the GPL Version 2 license, then the option applies\n  *    only if the new code is made subject to such option by the copyright\n  *    holder.\n--->\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+--><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd22959da6183456a38b8a1a2609428e8a34b57"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTYxNjc5OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyMDoyNlrOIJuu0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyMDoyNlrOIJuu0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3Mzc0Ng==", "bodyText": "remove jersey", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547073746", "createdAt": "2020-12-22T05:20:26Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>\n+    \n+    <properties>\n+        <jersey.version>3.0.0</jersey.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06040ab969aa8add2aefd3334c128e3a006daa7"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTYxODIxOnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyMToyNlrOIJuvnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyMToyNlrOIJuvnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3Mzk0OQ==", "bodyText": "Need the same functionality for ASURLClassLoader (parent of EARClassLoader EJBClassLoader etc)", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547073949", "createdAt": "2020-12-22T05:21:26Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/pom.xml", "diffHunk": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\"?>\n+<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>fish.payara.samples</groupId>\n+        <artifactId>payara-samples</artifactId>\n+        <version>5.2020.8-SNAPSHOT</version>\n+    </parent>\n+    \n+    <groupId>fish.payara.samples</groupId>\n+    <artifactId>classloader-data-api</artifactId>\n+    <version>5.2020.8-SNAPSHOT</version>\n+    \n+    <packaging>war</packaging>\n+    <name>Payara Samples - ClassLoader Data API</name>\n+    <description>A REST API Application for retrieving an instance count of \n+        WebappClassLoader from an instance of Payara Server</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06040ab969aa8add2aefd3334c128e3a006daa7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTYyNTI0OnYy", "diffSide": "RIGHT", "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyNToxM1rOIJuzdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyNToxM1rOIJuzdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NDkzMg==", "bodyText": "needs intent javadoc", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547074932", "createdAt": "2020-12-22T05:25:13Z", "author": {"login": "lprimak"}, "path": "appserver/tests/payara-samples/classloader-data-api/src/main/java/fish/payara/samples/classloaderdata/InstanceCountTracker.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) [2020] Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.samples.classloaderdata;\n+\n+import java.lang.ref.Reference;\n+import org.glassfish.web.loader.WebappClassLoader;\n+\n+/**\n+ *\n+ * @author Cuba Stanley\n+ */\n+public class InstanceCountTracker {\n+    \n+    private static int previousInstanceCount;\n+    \n+    public static int getInstanceCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06040ab969aa8add2aefd3334c128e3a006daa7"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTYyNzI5OnYy", "diffSide": "RIGHT", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyNjoxMlrOIJu0kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyNjoxMlrOIJu0kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NTIxOQ==", "bodyText": "should be final", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547075219", "createdAt": "2020-12-22T05:26:12Z", "author": {"login": "lprimak"}, "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -409,8 +411,14 @@\n     private static Boolean isMultiReleaseJar;\n     private static final Name MULTI_RELEASE = new Name(\"Multi-Release\");\n \n-    static {\n+    public static ReferenceQueue<WebappClassLoader> referenceQueue = new ReferenceQueue<WebappClassLoader>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06040ab969aa8add2aefd3334c128e3a006daa7"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTYyNzY1OnYy", "diffSide": "RIGHT", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyNjoyNFrOIJu0yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyNjoyNFrOIJu0yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NTI3Mw==", "bodyText": "should be final", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547075273", "createdAt": "2020-12-22T05:26:24Z", "author": {"login": "lprimak"}, "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -409,8 +411,14 @@\n     private static Boolean isMultiReleaseJar;\n     private static final Name MULTI_RELEASE = new Name(\"Multi-Release\");\n \n-    static {\n+    public static ReferenceQueue<WebappClassLoader> referenceQueue = new ReferenceQueue<WebappClassLoader>();\n+    public static ArrayList<WebappClassLoaderFinalizer> list = new ArrayList<WebappClassLoaderFinalizer>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06040ab969aa8add2aefd3334c128e3a006daa7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTYyODU0OnYy", "diffSide": "RIGHT", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyNjo0NVrOIJu1Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNToyNjo0NVrOIJu1Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA3NTM5MA==", "bodyText": "is isn't really standard, you should move it down into the static block", "url": "https://github.com/payara/Payara/pull/5063#discussion_r547075390", "createdAt": "2020-12-22T05:26:45Z", "author": {"login": "lprimak"}, "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -409,8 +411,14 @@\n     private static Boolean isMultiReleaseJar;\n     private static final Name MULTI_RELEASE = new Name(\"Multi-Release\");\n \n-    static {\n+    public static ReferenceQueue<WebappClassLoader> referenceQueue = new ReferenceQueue<WebappClassLoader>();\n+    public static ArrayList<WebappClassLoaderFinalizer> list = new ArrayList<WebappClassLoaderFinalizer>();\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06040ab969aa8add2aefd3334c128e3a006daa7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTg1ODk5OnYy", "diffSide": "RIGHT", "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNjowNjowM1rOIKpHlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNjowNjowM1rOIKpHlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAzMDM1Nw==", "bodyText": "This does not seem to be thread safe too.", "url": "https://github.com/payara/Payara/pull/5063#discussion_r548030357", "createdAt": "2020-12-23T16:06:03Z", "author": {"login": "sgflt"}, "path": "appserver/web/war-util/src/main/java/org/glassfish/web/loader/WebappClassLoader.java", "diffHunk": "@@ -1887,8 +1894,11 @@ protected PermissionCollection getPermissions(CodeSource codeSource) {\n \n \n     private void init() {\n-\n+        \n         this.parent = getParent();\n+        \n+        list.add(new PhantomReference(this, referenceQueue));\n+        INSTANCE_COUNT.set(INSTANCE_COUNT.get() + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "871dea3ea89c867f1c493a48915744863039c733"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTcyMjIyOnYy", "diffSide": "RIGHT", "path": "nucleus/common/common-util/src/main/java/org/glassfish/common/util/InstanceCounter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxOTo0MzowNVrOILei3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxOTo0MzowNVrOILei3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkwNTY5Mw==", "bodyText": "I would use ConcurrentMap interface to point that there is expected concurrency.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Map<Class<?>, Count> INSTANCE_COUNT = new ConcurrentHashMap<>();\n          \n          \n            \n                private static final ConcurrentMap<Class<?>, Count> INSTANCE_COUNT = new ConcurrentHashMap<>();", "url": "https://github.com/payara/Payara/pull/5063#discussion_r548905693", "createdAt": "2020-12-25T19:43:05Z", "author": {"login": "sgflt"}, "path": "nucleus/common/common-util/src/main/java/org/glassfish/common/util/InstanceCounter.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) [2020] Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package org.glassfish.common.util;\n+\n+import java.lang.ref.Reference;\n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.WeakReference;\n+import java.util.Collections;\n+import java.util.IdentityHashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+/**\n+ * Counts instances of a particular class, helpful in leak detection\n+ * <p>\n+ * Example: Put the following line into the class you want counted:\n+ * <p>\n+ * {@code\n+ *     private final InstanceCounter<MyClass> instanceCounter = new InstanceCounter<>(this);\n+ * }\n+ *\n+ * @author Cuba Stanley\n+ */\n+public class InstanceCounter {\n+    private static class Count {\n+        int instanceCount;\n+        private final ReferenceQueue<Object> referenceQueue = new ReferenceQueue<>();\n+        private final Set<WeakReference<?>> references = Collections.newSetFromMap(new IdentityHashMap<>());\n+\n+        public Count() {\n+            instanceCount = 1;\n+        }\n+\n+        public Count(int instanceCount) {\n+            this.instanceCount = instanceCount;\n+        }\n+    }\n+\n+    private static final Map<Class<?>, Count> INSTANCE_COUNT = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a98332734a79f81cee97fe4cf17b115288f21048"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1191, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}