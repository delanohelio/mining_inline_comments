{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MTcyODEy", "number": 5009, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMzoxNzozN1rOE9x0pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxNzowNjoxOFrOFBesZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMjE0ODg0OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMzoxNzozN1rOH6o-Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjo0NzowOFrOH-4jxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTI1MDY5MA==", "bodyText": "Shouldn't you explicitly use a CharSet to read from the stream (using the InputStreamReader ctor with CharSet) instead of using the system default CharSet? You might be able to determine the correct encoding by using  getContentEncoding() before actually reading the content.", "url": "https://github.com/payara/Payara/pull/5009#discussion_r531250690", "createdAt": "2020-11-26T23:17:37Z", "author": {"login": "svendiedrichsen"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -211,10 +214,10 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        byte[] byteBuffer = new byte[16384];\n-        try (InputStream inputStream = publicKeyURL.openStream()) {\n-            String key = new String(byteBuffer, 0, inputStream.read(byteBuffer));\n-            return createPublicKey(key, keyID);\n+        try (InputStream inputStream = publicKeyURL.openStream();\n+             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fde71f84d731e66a02045c5b7d706efc16f52985"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwMDQyMw==", "bodyText": "Thanks for the suggestion", "url": "https://github.com/payara/Payara/pull/5009#discussion_r535700423", "createdAt": "2020-12-03T22:47:08Z", "author": {"login": "fturizo"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -211,10 +214,10 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        byte[] byteBuffer = new byte[16384];\n-        try (InputStream inputStream = publicKeyURL.openStream()) {\n-            String key = new String(byteBuffer, 0, inputStream.read(byteBuffer));\n-            return createPublicKey(key, keyID);\n+        try (InputStream inputStream = publicKeyURL.openStream();\n+             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTI1MDY5MA=="}, "originalCommit": {"oid": "fde71f84d731e66a02045c5b7d706efc16f52985"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTMxMjA0OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDoxNToxNFrOH-7Cpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMToyNDowNFrOH_ig9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0MTA5NA==", "bodyText": "You might set the Accept-Charset header before opening the connection thus asking for a Charset. Charset.availableCharsets(), https://tools.ietf.org/html/rfc2616#page-102", "url": "https://github.com/payara/Payara/pull/5009#discussion_r535741094", "createdAt": "2020-12-04T00:15:14Z", "author": {"login": "svendiedrichsen"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -214,8 +223,12 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        try (InputStream inputStream = publicKeyURL.openStream();\n-             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))){\n+        URLConnection urlConnection = publicKeyURL.openConnection();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0a249d3e0488950f7a520a3106cef2765a315e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4NzgyOA==", "bodyText": "Not needed at the moment", "url": "https://github.com/payara/Payara/pull/5009#discussion_r536387828", "createdAt": "2020-12-04T21:24:04Z", "author": {"login": "fturizo"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -214,8 +223,12 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        try (InputStream inputStream = publicKeyURL.openStream();\n-             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))){\n+        URLConnection urlConnection = publicKeyURL.openConnection();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0MTA5NA=="}, "originalCommit": {"oid": "9d0a249d3e0488950f7a520a3106cef2765a315e"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTM1NDc2OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDozMDoyOFrOH-7aBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMToyNDozM1rOH_ih-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0NzA3Nw==", "bodyText": "You might want to check if the charset from the contentType is supported besides if the contentType contains one. Otherwise you might get an UnsupportedCharsetException here. Charset.isSupported()", "url": "https://github.com/payara/Payara/pull/5009#discussion_r535747077", "createdAt": "2020-12-04T00:30:28Z", "author": {"login": "svendiedrichsen"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -214,8 +223,12 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        try (InputStream inputStream = publicKeyURL.openStream();\n-             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))){\n+        URLConnection urlConnection = publicKeyURL.openConnection();\n+        ContentType contentType = ContentType.newContentType(urlConnection.getContentType());\n+\n+        Charset charset = contentType.getCharacterEncoding() != null ? Charset.forName(contentType.getCharacterEncoding()) : Charset.defaultCharset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0a249d3e0488950f7a520a3106cef2765a315e"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4ODA4OQ==", "bodyText": "Agreed", "url": "https://github.com/payara/Payara/pull/5009#discussion_r536388089", "createdAt": "2020-12-04T21:24:33Z", "author": {"login": "fturizo"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -214,8 +223,12 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        try (InputStream inputStream = publicKeyURL.openStream();\n-             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))){\n+        URLConnection urlConnection = publicKeyURL.openConnection();\n+        ContentType contentType = ContentType.newContentType(urlConnection.getContentType());\n+\n+        Charset charset = contentType.getCharacterEncoding() != null ? Charset.forName(contentType.getCharacterEncoding()) : Charset.defaultCharset();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0NzA3Nw=="}, "originalCommit": {"oid": "9d0a249d3e0488950f7a520a3106cef2765a315e"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTM2MTM3OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDozMjo1NVrOH-7dmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMToyNDoxNVrOH_ihbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0Nzk5NA==", "bodyText": "ContentType may be NULL here.", "url": "https://github.com/payara/Payara/pull/5009#discussion_r535747994", "createdAt": "2020-12-04T00:32:55Z", "author": {"login": "svendiedrichsen"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -214,8 +223,12 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        try (InputStream inputStream = publicKeyURL.openStream();\n-             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))){\n+        URLConnection urlConnection = publicKeyURL.openConnection();\n+        ContentType contentType = ContentType.newContentType(urlConnection.getContentType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d0a249d3e0488950f7a520a3106cef2765a315e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM4Nzk1MQ==", "bodyText": "Agreed", "url": "https://github.com/payara/Payara/pull/5009#discussion_r536387951", "createdAt": "2020-12-04T21:24:15Z", "author": {"login": "fturizo"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -214,8 +223,12 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        try (InputStream inputStream = publicKeyURL.openStream();\n-             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream))){\n+        URLConnection urlConnection = publicKeyURL.openConnection();\n+        ContentType contentType = ContentType.newContentType(urlConnection.getContentType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0Nzk5NA=="}, "originalCommit": {"oid": "9d0a249d3e0488950f7a520a3106cef2765a315e"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MDk1NzgxOnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxNzowNjoxOVrOIAM2rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMjozMTo1N1rOIESelQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA4MTUxOQ==", "bodyText": "Charset.isSupported() may throw exceptions if anything funny or NULL is provided. And if it is not supported it might rather be worth a warning than a severe message. Sorry for all the picky comments.", "url": "https://github.com/payara/Payara/pull/5009#discussion_r537081519", "createdAt": "2020-12-06T17:06:19Z", "author": {"login": "svendiedrichsen"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -217,10 +218,21 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        byte[] byteBuffer = new byte[16384];\n-        try (InputStream inputStream = publicKeyURL.openStream()) {\n-            String key = new String(byteBuffer, 0, inputStream.read(byteBuffer));\n-            return createPublicKey(key, keyID);\n+        URLConnection urlConnection = publicKeyURL.openConnection();\n+        Charset charset = Charset.defaultCharset();\n+        ContentType contentType = ContentType.newContentType(urlConnection.getContentType());\n+        if(contentType != null) {\n+            String charEncoding = contentType.getCharacterEncoding();\n+            if(!Charset.isSupported(charEncoding)){\n+                LOGGER.severe(\"Charset \" + charEncoding + \" for remote public key not supported, using default charset instead\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc0f924090f4f32a0943db0ed501331f9178dfce"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTM2Nzk1Nw==", "bodyText": "Thanks for the suggestions", "url": "https://github.com/payara/Payara/pull/5009#discussion_r541367957", "createdAt": "2020-12-11T22:31:57Z", "author": {"login": "fturizo"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -217,10 +218,21 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             return Optional.empty();\n         }\n \n-        byte[] byteBuffer = new byte[16384];\n-        try (InputStream inputStream = publicKeyURL.openStream()) {\n-            String key = new String(byteBuffer, 0, inputStream.read(byteBuffer));\n-            return createPublicKey(key, keyID);\n+        URLConnection urlConnection = publicKeyURL.openConnection();\n+        Charset charset = Charset.defaultCharset();\n+        ContentType contentType = ContentType.newContentType(urlConnection.getContentType());\n+        if(contentType != null) {\n+            String charEncoding = contentType.getCharacterEncoding();\n+            if(!Charset.isSupported(charEncoding)){\n+                LOGGER.severe(\"Charset \" + charEncoding + \" for remote public key not supported, using default charset instead\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzA4MTUxOQ=="}, "originalCommit": {"oid": "bc0f924090f4f32a0943db0ed501331f9178dfce"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1170, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}