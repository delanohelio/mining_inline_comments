{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTc3NDM5", "number": 5071, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMToyNDowNFrOFJJNAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMjozOTo1N1rOFMHnJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTMyMjkwOnYy", "diffSide": "RIGHT", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMToyNDowNFrOILbsNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMToyNDowNFrOILbsNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg1ODkzNA==", "bodyText": "Could this be extracted to (tested) method?\nCould this variable be renamed to something like nameWithExtension - and above comment removed?", "url": "https://github.com/payara/Payara/pull/5071#discussion_r548858934", "createdAt": "2020-12-25T11:24:04Z", "author": {"login": "pzygielo"}, "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1662,9 +1662,15 @@ private void deployAll() throws GlassFishException {\n                         // Convert the URL to a URI for use with the deploy method\n                         URI artefactURI = deploymentMapEntry.getValue().toURI();\n \n-                        deployer.deploy(artefactURI, \"--availabilityenabled\",\n-                                \"true\", \"--contextroot\",\n-                                deploymentMapEntry.getKey(), \"--force=true\", \"--loadOnly\", \"true\");\n+                        String artefactName= artefactURI.getPath().substring(artefactURI.getPath().lastIndexOf('/') + 1);\n+                        // artefact name always has a valid extension\n+                        String name = artefactName.substring(0, artefactName.length() - 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "509f86641151792864d70129ef25f23004d2901e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTMyNjA0OnYy", "diffSide": "RIGHT", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMToyNjo1MFrOILbtoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxMTo0Njo1MFrOILb3Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg1OTI5Nw==", "bodyText": "With above comment implemented - could new method be used here?", "url": "https://github.com/payara/Payara/pull/5071#discussion_r548859297", "createdAt": "2020-12-25T11:26:50Z", "author": {"login": "pzygielo"}, "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -2063,7 +2073,12 @@ private void getGAVURLs() throws GlassFishException {\n                     contextRoot = null; // use only once\n                 }\n \n-                deploymentURLsMap.put(defaultContext, artefactMapEntry.getValue());\n+                URL artefactURL = artefactMapEntry.getValue();\n+                String artefactName = artefactURL.getPath().substring(artefactURL.getPath().lastIndexOf('/') + 1);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "509f86641151792864d70129ef25f23004d2901e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg2MTczNQ==", "bodyText": "Same code also in UberJarCreator class. Maybe make sense move this to utility class? Or such class already exists?", "url": "https://github.com/payara/Payara/pull/5071#discussion_r548861735", "createdAt": "2020-12-25T11:46:50Z", "author": {"login": "avpinchuk"}, "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -2063,7 +2073,12 @@ private void getGAVURLs() throws GlassFishException {\n                     contextRoot = null; // use only once\n                 }\n \n-                deploymentURLsMap.put(defaultContext, artefactMapEntry.getValue());\n+                URL artefactURL = artefactMapEntry.getValue();\n+                String artefactName = artefactURL.getPath().substring(artefactURL.getPath().lastIndexOf('/') + 1);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg1OTI5Nw=="}, "originalCommit": {"oid": "509f86641151792864d70129ef25f23004d2901e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1ODUwMDY0OnYy", "diffSide": "RIGHT", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxNzozNTowNFrOIMUdcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxODoxMDo0MlrOIMVG6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4OTA0MA==", "bodyText": "Yes, this will break in so many ways, I cannot count \ud83d\udc4d", "url": "https://github.com/payara/Payara/pull/5071#discussion_r549789040", "createdAt": "2020-12-29T17:35:04Z", "author": {"login": "lprimak"}, "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1662,9 +1662,14 @@ private void deployAll() throws GlassFishException {\n                         // Convert the URL to a URI for use with the deploy method\n                         URI artefactURI = deploymentMapEntry.getValue().toURI();\n \n-                        deployer.deploy(artefactURI, \"--availabilityenabled\",\n-                                \"true\", \"--contextroot\",\n-                                deploymentMapEntry.getKey(), \"--force=true\", \"--loadOnly\", \"true\");\n+                        String artefactName = getFileName(artefactURI.getPath());\n+                        String name = artefactName.substring(0, artefactName.length() - 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d18fc907f3e7ed53999d4d59c6b9c00e87dfc0db"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5OTY1OA==", "bodyText": "Thanks I understand. May be try to fix this by writing artifact with actual file name to a temporary directory instead of temp file?\nThere is reproducer https://github.com/avpinchuk/issue-gav\nInstall to your local repo and run micro (from current master)\njava -jar payara-micro.jar --deployFromGAV org.apache.activemq:actevemq-rar:5.16.0 --deployFromGAV org.example:issue-gav:1.0 --additionalRepository file:///path/to/your/local/repo", "url": "https://github.com/payara/Payara/pull/5071#discussion_r549799658", "createdAt": "2020-12-29T18:10:42Z", "author": {"login": "avpinchuk"}, "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1662,9 +1662,14 @@ private void deployAll() throws GlassFishException {\n                         // Convert the URL to a URI for use with the deploy method\n                         URI artefactURI = deploymentMapEntry.getValue().toURI();\n \n-                        deployer.deploy(artefactURI, \"--availabilityenabled\",\n-                                \"true\", \"--contextroot\",\n-                                deploymentMapEntry.getKey(), \"--force=true\", \"--loadOnly\", \"true\");\n+                        String artefactName = getFileName(artefactURI.getPath());\n+                        String name = artefactName.substring(0, artefactName.length() - 4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc4OTA0MA=="}, "originalCommit": {"oid": "d18fc907f3e7ed53999d4d59c6b9c00e87dfc0db"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MjUxOTQxOnYy", "diffSide": "RIGHT", "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxMjozOTo1N1rOIPq9TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNToyMzowMFrOIPwjyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMwMzM3Mw==", "bodyText": "I'm probably being blind, but is there a reason this is being made static?", "url": "https://github.com/payara/Payara/pull/5071#discussion_r553303373", "createdAt": "2021-01-07T12:39:57Z", "author": {"login": "Pandrex247"}, "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1679,7 +1673,18 @@ private void deployAll() throws GlassFishException {\n         LOGGER.log(Level.INFO, \"Deployed {0} archive(s)\", deploymentCount);\n     }\n \n-    private boolean hasJavaArchiveExtension(String filePath) {\n+    private String removeJavaArchiveExtension(String fileName) {\n+        if (hasJavaArchiveExtension(fileName)) {\n+            return fileName.substring(0, fileName.length() - 4);\n+        } else {\n+            return fileName;\n+        }\n+    }\n+\n+    private static boolean hasJavaArchiveExtension(String filePath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "361e8ec4ad46baf3ca4e10390da998c58b222bf6"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM5NTE0NA==", "bodyText": "Because it has no access to fields. Good enough reason for me :)", "url": "https://github.com/payara/Payara/pull/5071#discussion_r553395144", "createdAt": "2021-01-07T15:23:00Z", "author": {"login": "lprimak"}, "path": "appserver/extras/payara-micro/payara-micro-core/src/main/java/fish/payara/micro/impl/PayaraMicroImpl.java", "diffHunk": "@@ -1679,7 +1673,18 @@ private void deployAll() throws GlassFishException {\n         LOGGER.log(Level.INFO, \"Deployed {0} archive(s)\", deploymentCount);\n     }\n \n-    private boolean hasJavaArchiveExtension(String filePath) {\n+    private String removeJavaArchiveExtension(String fileName) {\n+        if (hasJavaArchiveExtension(fileName)) {\n+            return fileName.substring(0, fileName.length() - 4);\n+        } else {\n+            return fileName;\n+        }\n+    }\n+\n+    private static boolean hasJavaArchiveExtension(String filePath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzMwMzM3Mw=="}, "originalCommit": {"oid": "361e8ec4ad46baf3ca4e10390da998c58b222bf6"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1198, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}