{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwOTQ5NTkx", "number": 4796, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMDo1ODoyOVrOEQkiQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMDo1ODoyOVrOEQkiQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODExMjY0OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/metrics/src/main/java/fish/payara/microprofile/metrics/MetricsService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMDo1ODoyOVrOG0yzCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMDo1ODoyOVrOG0yzCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxMTQwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"Description\", metadata.getDescription().orElse(\"\"),\n          \n          \n            \n                            \"Description\", metadata.getDescription().orElse(\"\"), //\n          \n      \n    \n    \n  \n\nConsistency.", "url": "https://github.com/payara/Payara/pull/4796#discussion_r458011401", "createdAt": "2020-07-21T10:58:29Z", "author": {"login": "Pandrex247"}, "path": "appserver/payara-appserver-modules/microprofile/metrics/src/main/java/fish/payara/microprofile/metrics/MetricsService.java", "diffHunk": "@@ -241,16 +243,17 @@ private static String toFirstLetterUpperCase(String value) {\n         return Character.toUpperCase(value.charAt(0)) + value.substring(1);\n     }\n \n-    private static String[] metadataToAnnotations(Metadata metadata, String property) {\n+    private static String[] metadataToAnnotations(String registryName, Metadata metadata, String property) {\n         String unit = metadata.getUnit().orElse(MetricUnits.NONE);\n         return new String[] {\n+                \"App\", registryName, //\n                 \"Name\", metadata.getName(), //\n                 \"Type\", metadata.getType(), //\n                 \"Unit\", unit, //\n                 \"DisplayName\", metadata.getDisplayName(), //\n                 \"Description\", metadata.getDescription().orElse(\"\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8506b169b27e97004c181de34b2edbe1c052ae00"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1286, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}