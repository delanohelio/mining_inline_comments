{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MjQ0MzYz", "number": 4768, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNDowNlrOEL_eWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNjowNlrOEL_hUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDA5NzU1OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNDowNlrOGt173Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNDowNlrOGt173Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyMjc4MQ==", "bodyText": "I think you could just use a for loop with iterator here.", "url": "https://github.com/payara/Payara/pull/4768#discussion_r450722781", "createdAt": "2020-07-07T09:14:06Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "diffHunk": "@@ -262,6 +271,52 @@ private OpenAPI buildDocument() throws OpenAPIBuildException {\n \n     }\n \n+    /**\n+     * @return a list of all classes in the archive.\n+     */\n+    private Set<Type> filterTypes(ApplicationInfo appInfo, OpenApiConfiguration config) {\n+        ReadableArchive archive = appInfo.getSource();\n+\n+        Set<Type> types = new HashSet<>();\n+        if (config != null && config.getScanLib()) {\n+            Iterator<String> subArchiveItr = archive.entries().asIterator();\n+            while (subArchiveItr.hasNext()) {\n+                String subArchive = subArchiveItr.next();\n+                if (subArchive.startsWith(\"WEB-INF/lib/\") && subArchive.endsWith(\".jar\")) {\n+                    try {\n+                        Iterator<String> classItr = archive.getSubArchive(subArchive).entries().asIterator();\n+                        while (classItr.hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d171596b014b09c61d40798d9381b0a29d1e1b60"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDA5OTAxOnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNDoyOFrOGt18vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNDoyOFrOGt18vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyMzAwNw==", "bodyText": "I think you could just use a for loop with iterator here.", "url": "https://github.com/payara/Payara/pull/4768#discussion_r450723007", "createdAt": "2020-07-07T09:14:28Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "diffHunk": "@@ -262,6 +271,52 @@ private OpenAPI buildDocument() throws OpenAPIBuildException {\n \n     }\n \n+    /**\n+     * @return a list of all classes in the archive.\n+     */\n+    private Set<Type> filterTypes(ApplicationInfo appInfo, OpenApiConfiguration config) {\n+        ReadableArchive archive = appInfo.getSource();\n+\n+        Set<Type> types = new HashSet<>();\n+        if (config != null && config.getScanLib()) {\n+            Iterator<String> subArchiveItr = archive.entries().asIterator();\n+            while (subArchiveItr.hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d171596b014b09c61d40798d9381b0a29d1e1b60"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDEwNTEyOnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNjowNlrOGt2AhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOToxNjowNlrOGt2AhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcyMzk3Mg==", "bodyText": "Quite a big method that could be split into a few steps.", "url": "https://github.com/payara/Payara/pull/4768#discussion_r450723972", "createdAt": "2020-07-07T09:16:06Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/OpenApiService.java", "diffHunk": "@@ -262,6 +271,52 @@ private OpenAPI buildDocument() throws OpenAPIBuildException {\n \n     }\n \n+    /**\n+     * @return a list of all classes in the archive.\n+     */\n+    private Set<Type> filterTypes(ApplicationInfo appInfo, OpenApiConfiguration config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d171596b014b09c61d40798d9381b0a29d1e1b60"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1280, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}