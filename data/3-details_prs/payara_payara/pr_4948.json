{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTAzNTU1", "number": 4948, "title": "FISH-40 EJB timers with @Clustered will execute on one and only one instance", "bodyText": "Description\nThis is a bug fix. Fixes #4572 .\nImportant Info\nTesting\nTesting Performed\nUse the example application provided with Jira. Start three Payara Micro instance with the app deployed. The timer should start on one of them. Then kill that instance. The timer should restart on one and only one other instance.\nTesting Environment\nZulu JDK 1.8_212 on Ubuntu 18.04 with Maven 3.6.3\nNotes for Reviewers\nThe use of ILock is deprecated and removed in Hazelcast 4. #4762 contains the Hazelcast upgrade and that PR will need to be updated to take account of this one.", "createdAt": "2020-10-13T08:39:17Z", "url": "https://github.com/payara/Payara/pull/4948", "merged": true, "mergeCommit": {"oid": "82fb819f043b78a558ff8f3315e972c346dba668"}, "closed": true, "closedAt": "2020-10-16T08:27:34Z", "author": {"login": "Cousjava"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR2bqPAH2gAyNTAyMTAzNTU1OjFlZDJjZGQwNGQ3MzA0ZGJjNDVjNTU3MjhkMzZjYmI5NTk0NTc1YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTCFVbAFqTUxMDI1NzU5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ed2cdd04d7304dbc45c55728d36cbb9594575ae", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/1ed2cdd04d7304dbc45c55728d36cbb9594575ae", "committedDate": "2020-10-12T16:19:02Z", "message": "FISH-40 Persistence timers on Micro now restart on all other instances"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "906d9a87d070d8d95f11f0682574174e4aedaabe", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/906d9a87d070d8d95f11f0682574174e4aedaabe", "committedDate": "2020-10-13T08:34:55Z", "message": "FISH-40 Timer is restarted on one and only one other instance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MzI4MDY3", "url": "https://github.com/payara/Payara/pull/4948#pullrequestreview-507328067", "createdAt": "2020-10-13T11:20:27Z", "commit": {"oid": "906d9a87d070d8d95f11f0682574174e4aedaabe"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMToyMDoyN1rOHghw7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMToyMDoyN1rOHghw7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg2OTY3Nw==", "bodyText": "Hmmmm really don't like this. Can the DataGridEjbTimerService register this class when it creates it?", "url": "https://github.com/payara/Payara/pull/4948#discussion_r503869677", "createdAt": "2020-10-13T11:20:27Z", "author": {"login": "MattGill98"}, "path": "appserver/payara-appserver-modules/hazelcast-ejb-timer/src/main/java/fish/payara/ejb/timer/hazelcast/HazelcastTimerStore.java", "diffHunk": "@@ -96,6 +101,7 @@ static void init(HazelcastCore core) {\n         }\n     }\n \n+    @SuppressWarnings(\"LeakingThisInConstructor\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "906d9a87d070d8d95f11f0682574174e4aedaabe"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MTEzNjM2", "url": "https://github.com/payara/Payara/pull/4948#pullrequestreview-508113636", "createdAt": "2020-10-14T08:31:29Z", "commit": {"oid": "906d9a87d070d8d95f11f0682574174e4aedaabe"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozMToyOVrOHhIFVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODo0MDo1MVrOHhIdXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5NzQ5Mw==", "bodyText": "Isn't there a field holding the HazelcastCore that was passed to the constructor?", "url": "https://github.com/payara/Payara/pull/4948#discussion_r504497493", "createdAt": "2020-10-14T08:31:29Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/hazelcast-ejb-timer/src/main/java/fish/payara/ejb/timer/hazelcast/HazelcastTimerStore.java", "diffHunk": "@@ -1193,4 +1157,37 @@ private boolean restoreEJBTimers() {\n         return rc;\n     }\n \n+    @Override\n+    public void memberAdded(MemberEvent event) {\n+        //do nothing\n+    }\n+\n+    @Override\n+    public void memberRemoved(MemberEvent event) {\n+        ILock hazelcastLock = Globals.getDefaultBaseServiceLocator().getService(HazelcastCore.class).getInstance().getLock(\"EJB-TIMER-LOCK\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "906d9a87d070d8d95f11f0682574174e4aedaabe"}, "originalPosition": 473}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ5OTc2MQ==", "bodyText": "Should the cluster be injected instead of using Globals?", "url": "https://github.com/payara/Payara/pull/4948#discussion_r504499761", "createdAt": "2020-10-14T08:35:03Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/hazelcast-ejb-timer/src/main/java/fish/payara/ejb/timer/hazelcast/HazelcastTimerStore.java", "diffHunk": "@@ -107,6 +113,8 @@ public HazelcastTimerStore(HazelcastCore core) throws Exception {\n         serverName = core.getInstance().getCluster().getLocalMember().getStringAttribute(HazelcastCore.INSTANCE_ATTRIBUTE);\n         this.ownerIdOfThisServer_ = serverName;\n         this.domainName_ = core.getInstance().getConfig().getGroupConfig().getName();\n+        super.enableRescheduleTimers();\n+        Globals.getDefaultBaseServiceLocator().getService(PayaraCluster.class).addClusterListener(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "906d9a87d070d8d95f11f0682574174e4aedaabe"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMTc5MA==", "bodyText": "This could become a bit confusing in the logs as it suggest that at this point the timers are restored which might not yet be the case due to putAsync.", "url": "https://github.com/payara/Payara/pull/4948#discussion_r504501790", "createdAt": "2020-10-14T08:38:06Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/hazelcast-ejb-timer/src/main/java/fish/payara/ejb/timer/hazelcast/HazelcastTimerStore.java", "diffHunk": "@@ -1193,4 +1157,37 @@ private boolean restoreEJBTimers() {\n         return rc;\n     }\n \n+    @Override\n+    public void memberAdded(MemberEvent event) {\n+        //do nothing\n+    }\n+\n+    @Override\n+    public void memberRemoved(MemberEvent event) {\n+        ILock hazelcastLock = Globals.getDefaultBaseServiceLocator().getService(HazelcastCore.class).getInstance().getLock(\"EJB-TIMER-LOCK\");\n+        hazelcastLock.lock();\n+        try {\n+            Collection<HZTimer> allTimers = pkCache.values();\n+            Collection<HZTimer> removedTimers = new HashSet<>();\n+            for (HZTimer timer : allTimers) {\n+                if (timer.getMemberName().equals(event.getServer())) {\n+                    removedTimers.add(timer);\n+                }\n+            }\n+            \n+            \n+            \n+            if (!removedTimers.isEmpty()) {\n+                logger.log(Level.INFO, \"==> Restoring Timers ... \");\n+                Collection<HZTimer> restored = _restoreTimers(removedTimers);\n+                for (HZTimer timer : restored) {\n+                    pkCache.putAsync(timer.getKey().getTimerId(), timer);\n+                }\n+                logger.log(Level.INFO, \"<== ... Timers Restored.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "906d9a87d070d8d95f11f0682574174e4aedaabe"}, "originalPosition": 492}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMzY0Ng==", "bodyText": "@MattGill98 I assume you refer to the Globals access and registering this as a cluster listener? Can you motivate why you think this should occur in the DataGridEjbTimerService for me? I don't see the connection but I also don't know the details of the timer infrastructure.", "url": "https://github.com/payara/Payara/pull/4948#discussion_r504503646", "createdAt": "2020-10-14T08:40:51Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/hazelcast-ejb-timer/src/main/java/fish/payara/ejb/timer/hazelcast/HazelcastTimerStore.java", "diffHunk": "@@ -96,6 +101,7 @@ static void init(HazelcastCore core) {\n         }\n     }\n \n+    @SuppressWarnings(\"LeakingThisInConstructor\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg2OTY3Nw=="}, "originalCommit": {"oid": "906d9a87d070d8d95f11f0682574174e4aedaabe"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7a1b434284948e9b1c530ffa01f7fe5185c6c01", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/e7a1b434284948e9b1c530ffa01f7fe5185c6c01", "committedDate": "2020-10-14T09:06:56Z", "message": "FISH-40 requested changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f9204d996859efbd593c88d4f461785e2e9a3eb", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/6f9204d996859efbd593c88d4f461785e2e9a3eb", "committedDate": "2020-10-14T08:45:55Z", "message": "FISH-40 requested changes"}, "afterCommit": {"oid": "e7a1b434284948e9b1c530ffa01f7fe5185c6c01", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/e7a1b434284948e9b1c530ffa01f7fe5185c6c01", "committedDate": "2020-10-14T09:06:56Z", "message": "FISH-40 requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7c237f20a6213e43385e6ceef87f9bbb394c855", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/c7c237f20a6213e43385e6ceef87f9bbb394c855", "committedDate": "2020-10-15T10:20:11Z", "message": "FISH-40 Use a field to store HazelcastInstance"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MzA3NTEx", "url": "https://github.com/payara/Payara/pull/4948#pullrequestreview-509307511", "createdAt": "2020-10-15T12:08:56Z", "commit": {"oid": "c7c237f20a6213e43385e6ceef87f9bbb394c855"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjowODo1NlrOHiElTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjowODo1NlrOHiElTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4ODcxNw==", "bodyText": "I really wonder if this field shouldn't be thread-safe. This class has a number of fields I'd think should be thread-safe as I would assume that methods are called by different threads. Is there any reasoning why this would not be the case?", "url": "https://github.com/payara/Payara/pull/4948#discussion_r505488717", "createdAt": "2020-10-15T12:08:56Z", "author": {"login": "jbee"}, "path": "appserver/ejb/ejb-container/src/main/java/com/sun/ejb/containers/EJBTimerService.java", "diffHunk": "@@ -1552,6 +1552,17 @@ protected void cancelTimerSynchronization(EJBContextImpl context_,\n             }\n         }\n     }\n+    \n+    /**\n+     * Sets failed times to be rescheduled rather than removed.\n+     * This is called by {@link fish.payara.ejb.timer.hazelcast.HazelcastTimerStore},\n+     * as when an instance is removed from a cluster it is possible that a delivery\n+     * could fail in the time in which an instance is removed from the cluster and before\n+     * the timer is recreated.\n+     */\n+    protected void enableRescheduleTimers() {\n+        rescheduleFailedTimer = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7c237f20a6213e43385e6ceef87f9bbb394c855"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMjU3MzY4", "url": "https://github.com/payara/Payara/pull/4948#pullrequestreview-510257368", "createdAt": "2020-10-16T08:27:05Z", "commit": {"oid": "c7c237f20a6213e43385e6ceef87f9bbb394c855"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMjU3NTk5", "url": "https://github.com/payara/Payara/pull/4948#pullrequestreview-510257599", "createdAt": "2020-10-16T08:27:26Z", "commit": {"oid": "c7c237f20a6213e43385e6ceef87f9bbb394c855"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 694, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}