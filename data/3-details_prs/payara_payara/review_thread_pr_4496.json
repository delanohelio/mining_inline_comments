{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzIxNDgz", "number": 4496, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOToxODoyOFrODg_iwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOToxODoyOFrODg_iwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTIyMTE0OnYy", "diffSide": "LEFT", "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/visitor/OpenApiWalker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOToxODoyOFrOFrgYnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTozMzo1MVrOFsYHWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2MzY3Ng==", "bodyText": "I think @MattGill98 knows about the logic here and if the order had any real significance other than performance.", "url": "https://github.com/payara/Payara/pull/4496#discussion_r381163676", "createdAt": "2020-02-19T09:18:28Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/visitor/OpenApiWalker.java", "diffHunk": "@@ -117,25 +117,7 @@\n \n     public OpenApiWalker(OpenAPI api, Set<Class<?>> allowedClasses) {\n         this.api = api;\n-        this.classes = new TreeSet<>((class1, class2) -> {\n-            if (class1.equals(class2)) {\n-                return 0;\n-            }\n-            // Subclasses first\n-            if (class1.isAssignableFrom(class2)) {\n-                return -1;\n-            }\n-            // Non contextual objects at the start\n-            if (!class1.isAnnotationPresent(ApplicationPath.class) && !class1.isAnnotationPresent(Path.class)) {\n-                return -1;\n-            }\n-            // Followed by applications\n-            if (class1.isAnnotationPresent(ApplicationPath.class)) {\n-                return -1;\n-            }\n-            // Followed by everything else\n-            return 1;\n-        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30a2624e7c5fb72a5043ed2a7abb1b30106ae156"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA3Njc2Mw==", "bodyText": "Looks like a legitimate hangover from when the schema searching was less sophisticated. I don't think this serves much of a purpose any longer. As the TCK passes, our tests pass and my manual testing seems all okay, I'm happy with this change", "url": "https://github.com/payara/Payara/pull/4496#discussion_r382076763", "createdAt": "2020-02-20T15:33:51Z", "author": {"login": "MattGill98"}, "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/visitor/OpenApiWalker.java", "diffHunk": "@@ -117,25 +117,7 @@\n \n     public OpenApiWalker(OpenAPI api, Set<Class<?>> allowedClasses) {\n         this.api = api;\n-        this.classes = new TreeSet<>((class1, class2) -> {\n-            if (class1.equals(class2)) {\n-                return 0;\n-            }\n-            // Subclasses first\n-            if (class1.isAssignableFrom(class2)) {\n-                return -1;\n-            }\n-            // Non contextual objects at the start\n-            if (!class1.isAnnotationPresent(ApplicationPath.class) && !class1.isAnnotationPresent(Path.class)) {\n-                return -1;\n-            }\n-            // Followed by applications\n-            if (class1.isAnnotationPresent(ApplicationPath.class)) {\n-                return -1;\n-            }\n-            // Followed by everything else\n-            return 1;\n-        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2MzY3Ng=="}, "originalCommit": {"oid": "30a2624e7c5fb72a5043ed2a7abb1b30106ae156"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1398, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}