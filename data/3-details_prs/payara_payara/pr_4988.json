{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MjQ0NDI1", "number": 4988, "title": "FISH-661 MicroProfile JWT Auth 2.1 Upgrade", "bodyText": "Description\n\nThis is a feature. Will need upgrading to the final release version when it's release, but for now the release candidate is good enough.\nTesting\nNew tests\n\nTCK updated: payara/MicroProfile-TCK-Runners#123\nTesting Performed\n\nRan the new TCK against our current implementation", "createdAt": "2020-11-11T14:44:35Z", "url": "https://github.com/payara/Payara/pull/4988", "merged": true, "mergeCommit": {"oid": "e3745fa9c6dee3c6801c979e87fbd08ad48719ee"}, "closed": true, "closedAt": "2020-11-13T12:28:35Z", "author": {"login": "MattGill98"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbe5o7AH2gAyNTE5MjQ0NDI1OjNiMGM0N2MwMzg4MDI5ZmJkYjYzZGJmMTVhNTA5MjVhMDk3ZGJkYzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbv89pgFqTUyODk0NjM3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3b0c47c0388029fbdb63dbf15a50925a097dbdc1", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/3b0c47c0388029fbdb63dbf15a50925a097dbdc1", "committedDate": "2020-11-11T14:33:18Z", "message": "FISH-661 Upgrade MP JWT Auth to 1.2-RC2\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "124218e1276b2ccdd207f6a47f8be95eaded434f", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/124218e1276b2ccdd207f6a47f8be95eaded434f", "committedDate": "2020-11-11T14:33:42Z", "message": "FISH-661 JWT Auth 1.2 Boolean Claim Conversion\n\nWhen injecting boolean claims, the injection failed as the JsonValue was\nunmodified. This change properly converts the value to a boolean.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a96f7ec19580d828cc8c863e7c549039b4348ae", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/7a96f7ec19580d828cc8c863e7c549039b4348ae", "committedDate": "2020-11-11T14:33:58Z", "message": "FISH-661 MP JWT Auth 1.2 Add additional expiry check\n\nThe TCK now checks for a token with an invalid issue time, which wasn't\npreviously checked.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f", "committedDate": "2020-11-11T14:34:12Z", "message": "FISH-661 MP JWT Auth 1.2 Groups Not Required\n\nThe 'groups' claim is no longer required, so the validation no longer\nrequires it. A new TCK test 'callEchoNoGroups' checks that the principal\nis still set when @PermitAll endpoints are called. To fix this, I've\nenabled the JWT request filter even when this is found, but disabled\nmost of the logic.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4Mjg4MDEx", "url": "https://github.com/payara/Payara/pull/4988#pullrequestreview-528288011", "createdAt": "2020-11-11T15:41:03Z", "commit": {"oid": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNTo0MTowNFrOHxSlyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzowMToyNVrOHxWB1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0Njg1Ng==", "bodyText": "Just double checking that the change from FINEST to INFO is intentional and not just from testing.", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521446856", "createdAt": "2020-11-11T15:41:04Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/eesecurity/SignedJWTIdentityStore.java", "diffHunk": "@@ -121,15 +131,16 @@ public CredentialValidationResult validate(SignedJWTCredential signedJWTCredenti\n             JsonWebTokenImpl jsonWebToken\n                     = jwtTokenParser.verify(acceptedIssuer, publicKey.get());\n \n-            List<String> groups = new ArrayList<>(\n-                    jsonWebToken.getClaim(\"groups\"));\n+            Set<String> groups = new HashSet<>();\n+            Collection<String> groupClaims = jsonWebToken.getClaim(\"groups\");\n+            if (groupClaims != null) {\n+                groups.addAll(groupClaims);\n+            }\n \n-            return new CredentialValidationResult(\n-                    jsonWebToken,\n-                    new HashSet<>(groups));\n+            return new CredentialValidationResult(jsonWebToken, groups);\n \n         } catch (Exception e) {\n-            LOGGER.log(FINEST, \"Exception trying to parse JWT token.\", e);\n+            LOGGER.log(INFO, \"Exception trying to parse JWT token.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0ODA3NQ==", "bodyText": "Fairly certain you meant...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this(request, response, null, true);\n          \n          \n            \n                    this(request, response, null, permitAll);", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521448075", "createdAt": "2020-11-11T15:42:48Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/jaxrs/RolesAllowedRequestFilter.java", "diffHunk": "@@ -77,18 +77,38 @@\n     private final SecurityContext securityContext;\n \n     private final String[] rolesAllowed;\n+    private final boolean permitAll;\n+\n     private final HttpServletRequest request;\n     private final HttpServletResponse response;\n \n     RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, String[] rolesAllowed) {\n+        this(request, response, rolesAllowed, false);\n+    }\n+\n+    RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, boolean permitAll) {\n+        this(request, response, null, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ0OTU1Nw==", "bodyText": "I guess XOR works but this is a logical test so I think a logic operator != is more appropriate\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assert permitAll ^ rolesAllowed != null;\n          \n          \n            \n                    assert permitAll != (rolesAllowed != null);", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521449557", "createdAt": "2020-11-11T15:44:51Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/jaxrs/RolesAllowedRequestFilter.java", "diffHunk": "@@ -77,18 +77,38 @@\n     private final SecurityContext securityContext;\n \n     private final String[] rolesAllowed;\n+    private final boolean permitAll;\n+\n     private final HttpServletRequest request;\n     private final HttpServletResponse response;\n \n     RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, String[] rolesAllowed) {\n+        this(request, response, rolesAllowed, false);\n+    }\n+\n+    RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, boolean permitAll) {\n+        this(request, response, null, true);\n+    }\n+\n+    private RolesAllowedRequestFilter(HttpServletRequest request, HttpServletResponse response, String[] rolesAllowed, boolean permitAll) {\n         this.request = request;\n         this.response = response;\n         this.rolesAllowed = rolesAllowed;\n         this.securityContext = CDI.current().select(SecurityContext.class).get();\n+        this.permitAll = permitAll;\n+        // If permitAll, roles allowed should be null. Otherwise roles allowed should not be null\n+        assert permitAll ^ rolesAllowed != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUwMzE5MA==", "bodyText": "I see that file already contain Class comparison using equals.\nAs it is not reasonable to have two equal instances of a Class unless they are in fact identical I would generally suggest to not shy away from using the == and != operators when working with Classes.", "url": "https://github.com/payara/Payara/pull/4988#discussion_r521503190", "createdAt": "2020-11-11T17:01:25Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/jwt-auth/src/main/java/fish/payara/microprofile/jwtauth/jwt/JWTInjectableType.java", "diffHunk": "@@ -148,8 +148,7 @@ private void installCoreConverter() {\n         } else if (coreClass.equals(Long.class)) {\n             converter = e -> ((JsonNumber) e).longValue();\n         } else if (coreClass.equals(Boolean.class)) {\n-            // TODO\n-            converter = e -> e;\n+            converter = e -> convertToBoolean(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06cd75fe0ecd3ee0cf869e49068a4f8accb3c26f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "094b4024bb11a0783049b8a94590983e4730289c", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/094b4024bb11a0783049b8a94590983e4730289c", "committedDate": "2020-11-12T09:39:27Z", "message": "FISH-661 Minor JWT Auth RequestFilter refactor\n\nThe requestfilter permitAll constructor had an unused variable so this\nchange removes it. The XOR was confusing, so it's been replaced with a\nlogical operator. Classes cannot be equal unless they are identical, so\nthe installCoreConverter has been made null safe by using ==.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb837cc66e0316378952938b701e7cc079c5602a", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/fb837cc66e0316378952938b701e7cc079c5602a", "committedDate": "2020-11-12T09:33:27Z", "message": "FISH-661 Minor JWT Auth RequestFilter refactor\n\nThe requestfilter permitAll constructor had an unused variable, and the\nXOR was confusing.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>"}, "afterCommit": {"oid": "094b4024bb11a0783049b8a94590983e4730289c", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/094b4024bb11a0783049b8a94590983e4730289c", "committedDate": "2020-11-12T09:39:27Z", "message": "FISH-661 Minor JWT Auth RequestFilter refactor\n\nThe requestfilter permitAll constructor had an unused variable so this\nchange removes it. The XOR was confusing, so it's been replaced with a\nlogical operator. Classes cannot be equal unless they are identical, so\nthe installCoreConverter has been made null safe by using ==.\n\nSigned-off-by: Matthew Gill <matthew.gill@live.co.uk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTQ2Mzcw", "url": "https://github.com/payara/Payara/pull/4988#pullrequestreview-528946370", "createdAt": "2020-11-12T10:25:19Z", "commit": {"oid": "094b4024bb11a0783049b8a94590983e4730289c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 619, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}