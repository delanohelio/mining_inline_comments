{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwODM2MzYx", "number": 4419, "title": "CUSTCOM-168 OpenID Connect: Fixed simultaneous redirects and invalidation of session", "bodyText": "Description\nThis is a bug fix / feature. \n\nIf a page contains multiple protected resources and authentication (via OpenID Connect) is activated, multiple redirects to the OpenID Connect provider are performed (one for each protected resource). This is especially the case when auto refresh of the token is activated, the token expires and a new access token must be requested. To prevent multiple redirects, I have synchronized the authentication/refresh logic on the user's session.\nIf auto refresh is enabled for the access token, the principal was registered in the session again after  refreshing the token. This caused the currently active session to be invalidated (destroys all session scoped beans and session attributes).\n\n\n\n\nTesting\n\n\nTesting Performed\nDeployed developed app on instance with fix installed and compared/validated behavior while using the app (especially when refresh of token happened).\n\n\n\n\nTesting Environment\nOpenJDK 11 on Ubuntu 19.10", "createdAt": "2020-01-09T08:38:15Z", "url": "https://github.com/payara/Payara/pull/4419", "merged": true, "mergeCommit": {"oid": "f742bad2e66e67646055fcdbcca0b518d173b425"}, "closed": true, "closedAt": "2020-02-20T13:44:33Z", "author": {"login": "parysto"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb1fokWgH2gAyMzYwODM2MzYxOmQ0N2VmMWVlYjE2Nzc4ZmRkMjcyNDQzMDFhYzQ4ZThkOTk1Y2U5MmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF1TzRAFqTM2MTA1NTI3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d47ef1eeb16778fdd27244301ac48e8d995ce92e", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/d47ef1eeb16778fdd27244301ac48e8d995ce92e", "committedDate": "2019-12-30T17:44:17Z", "message": "Sychronize request validation with HTTP session"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8c954b01a13ab6586d41a9b59c67f7d5faf5535", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/f8c954b01a13ab6586d41a9b59c67f7d5faf5535", "committedDate": "2019-12-30T19:38:54Z", "message": "Disabled session registration after refreshing token (causes session to be invalidated)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNjk4NTkx", "url": "https://github.com/payara/Payara/pull/4419#pullrequestreview-340698591", "createdAt": "2020-01-09T17:41:44Z", "commit": {"oid": "f8c954b01a13ab6586d41a9b59c67f7d5faf5535"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNzo0MTo0NFrOFb-IIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNzo0MTo0NFrOFb-IIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg3Mzc2Mw==", "bodyText": "Same line is duplicated and commented out ... was it tested? :-)", "url": "https://github.com/payara/Payara/pull/4419#discussion_r364873763", "createdAt": "2020-01-09T17:41:44Z", "author": {"login": "dmatej"}, "path": "appserver/payara-appserver-modules/security-openid/src/main/java/fish/payara/security/openid/OpenIdAuthenticationMechanism.java", "diffHunk": "@@ -332,7 +333,10 @@ private AuthenticationStatus refreshTokens(HttpMessageContext httpContext, Refre\n             updateContext(tokensObject);\n             OpenIdCredential credential = new OpenIdCredential(tokensObject, httpContext, configuration);\n             CredentialValidationResult validationResult = identityStoreHandler.validate(credential);\n-            // Register session manually (if @AutoApplySession used, this would be done by its interceptor)\n+            \n+            // Dot not register session, as this will invalidate the currently active sessions (with all of its attributes)!\n+            // httpContext.setRegisterSession(validationResult.getCallerPrincipal().getName(), validationResult.getCallerGroups());\n+\n             httpContext.setRegisterSession(validationResult.getCallerPrincipal().getName(), validationResult.getCallerGroups());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8c954b01a13ab6586d41a9b59c67f7d5faf5535"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c60b0e7c7c005941617bb2df1da0def17bb20e", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/c3c60b0e7c7c005941617bb2df1da0def17bb20e", "committedDate": "2020-01-09T18:14:10Z", "message": "Removed duplicated line (registration of session)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e7d33ecc1d6523061881447bb6529a26a5ba043", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/7e7d33ecc1d6523061881447bb6529a26a5ba043", "committedDate": "2020-01-09T18:21:27Z", "message": "Fixed typo in comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce0e8717af71fe4778eb63315475cfafb8524793", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/ce0e8717af71fe4778eb63315475cfafb8524793", "committedDate": "2020-01-13T18:09:02Z", "message": "Cleanup of imports."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNTY0MTA4", "url": "https://github.com/payara/Payara/pull/4419#pullrequestreview-342564108", "createdAt": "2020-01-14T14:18:37Z", "commit": {"oid": "ce0e8717af71fe4778eb63315475cfafb8524793"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "529e5c927959c439a8512ebda51242ef6320e6f9", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/529e5c927959c439a8512ebda51242ef6320e6f9", "committedDate": "2020-01-19T13:34:38Z", "message": "Synchronize re-authentication of token only, not whole authentication process."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63ece4bf81e292dfc8a6c91a73bf9b48470d3dd5", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/63ece4bf81e292dfc8a6c91a73bf9b48470d3dd5", "committedDate": "2020-01-19T17:31:02Z", "message": "Added double check for access token expiration."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1Mjc4MTA1", "url": "https://github.com/payara/Payara/pull/4419#pullrequestreview-345278105", "createdAt": "2020-01-20T12:34:38Z", "commit": {"oid": "63ece4bf81e292dfc8a6c91a73bf9b48470d3dd5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af59a1c253e622611e9401025bd69ab9b957954d", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/af59a1c253e622611e9401025bd69ab9b957954d", "committedDate": "2020-01-20T16:43:20Z", "message": "Fixed compilation failure due to invalid position of return value."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTkzMDYz", "url": "https://github.com/payara/Payara/pull/4419#pullrequestreview-355593063", "createdAt": "2020-02-09T09:06:18Z", "commit": {"oid": "af59a1c253e622611e9401025bd69ab9b957954d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwOTowNjoxOVrOFnUB5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwOTowNjoxOVrOFnUB5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc2Njk0OA==", "bodyText": "Is really the plan to put the lock to the session object and leave it there forever? What if the token expires for second time? The lock will be still in session attributes from previous iteration.\nAlso replication in cluster will have some latency, is it or isn't it a problem? (probably it isn't)\nI don't say it is incorrect, I am only asking ;-)", "url": "https://github.com/payara/Payara/pull/4419#discussion_r376766948", "createdAt": "2020-02-09T09:06:19Z", "author": {"login": "dmatej"}, "path": "appserver/payara-appserver-modules/security-openid/src/main/java/fish/payara/security/openid/OpenIdAuthenticationMechanism.java", "diffHunk": "@@ -364,4 +368,20 @@ private void updateContext(JsonObject tokensObject) {\n         }\n     }\n \n+    private Object getSessionLock(HttpServletRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af59a1c253e622611e9401025bd69ab9b957954d"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22451563b1ce571419c0061821b5497ccf4c857d", "author": {"user": {"login": "parysto", "name": null}}, "url": "https://github.com/payara/Payara/commit/22451563b1ce571419c0061821b5497ccf4c857d", "committedDate": "2020-02-09T11:06:08Z", "message": "Replaced lock with implementation of Serializable to support session passivation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMDQ3MjUx", "url": "https://github.com/payara/Payara/pull/4419#pullrequestreview-361047251", "createdAt": "2020-02-19T11:48:09Z", "commit": {"oid": "22451563b1ce571419c0061821b5497ccf4c857d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMDU1Mjc1", "url": "https://github.com/payara/Payara/pull/4419#pullrequestreview-361055275", "createdAt": "2020-02-19T12:02:18Z", "commit": {"oid": "22451563b1ce571419c0061821b5497ccf4c857d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 830, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}