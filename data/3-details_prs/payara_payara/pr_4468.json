{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODU5MDc0", "number": 4468, "title": "QACI-80 Cleanup of web-core", "bodyText": "Description\nThis is a code quality improvement.\nTesting\nTest suites executed\n\nPayara Samples\nJava EE7 Samples\nJava EE8 Samples\n\nTesting Environment\nZulu JDK 1.8_232 on Ubuntu 18.04 with Maven 3.6.0\nNotes for reviewers\nThere are no functional changes, most of this is adding in @OverRide annotations", "createdAt": "2020-02-04T14:12:04Z", "url": "https://github.com/payara/Payara/pull/4468", "merged": true, "mergeCommit": {"oid": "550b762ba9e03e734a33f0c5c3ea4fe314d85626"}, "closed": true, "closedAt": "2020-02-06T11:12:33Z", "author": {"login": "Cousjava"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABat_5Q0AH2gAyMzcwODU5MDc0OmEzOTBkY2VkZTk0Yzc5Zjc1MzBjZjdkZjBmNWMyNzMxZThiZDlkN2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBY98LgFqTM1Mzg3MTQ1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a390dcede94c79f7530cf7df0f5c2731e8bd9d7d", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/a390dcede94c79f7530cf7df0f5c2731e8bd9d7d", "committedDate": "2019-05-22T14:36:56Z", "message": "Cleanup of web-core com.sun.enterprise* and catalina.authenticator.*"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d14db9c62c436ec329c77040c443228d078e2733", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/d14db9c62c436ec329c77040c443228d078e2733", "committedDate": "2019-11-22T15:01:23Z", "message": "Merge branch 'master' of https://github.com/Payara/payara into cleanup-web-core"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa6d3e139c9d5babe31237f0f26126fd2767cac5", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/aa6d3e139c9d5babe31237f0f26126fd2767cac5", "committedDate": "2019-11-22T16:53:56Z", "message": "Cleanup of catalina/connector and cataline/core"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "620f5dc236e067e051ff549bb4253322a499592a", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/620f5dc236e067e051ff549bb4253322a499592a", "committedDate": "2019-11-22T17:50:38Z", "message": "Cleanup of cataline deploy - servlets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b27a19fa3e3717007f766e8508dfac54e2b1e36f", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/b27a19fa3e3717007f766e8508dfac54e2b1e36f", "committedDate": "2019-11-25T11:50:08Z", "message": "Cleanup of catalina session-ssi packages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/eb0c5d036e678d7d01515936ff5b1a1f9261ba9f", "committedDate": "2020-02-04T14:06:18Z", "message": "QACI-80 Cleanup of web-core tomcat and glassfish packages\n\nMainly adding in @Override"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDMzNTQ2", "url": "https://github.com/payara/Payara/pull/4468#pullrequestreview-353033546", "createdAt": "2020-02-04T14:49:02Z", "commit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNDo0OTowM1rOFlWvjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNTo1ODo1MFrOFlZkuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxNDI1NQ==", "bodyText": "Could even use parseBoolean", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374714255", "createdAt": "2020-02-04T14:49:03Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/connector/Constants.java", "diffHunk": "@@ -101,7 +102,5 @@\n      */\n     // In Tomcat, the following constant is in org.apache.coyote.Constants with default true.\n     public static final boolean USE_CUSTOM_STATUS_MSG_IN_HEADER =\n-        Boolean.valueOf(System.getProperty(\n-                \"org.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER\",\n-                \"true\")).booleanValue(); \n+            Boolean.valueOf(System.getProperty(\"org.apache.coyote.USE_CUSTOM_STATUS_MSG_IN_HEADER\",\"true\")); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxNzI3NA==", "bodyText": "could be boolean crossContext = crossContextFlag == Boolean.True;", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374717274", "createdAt": "2020-02-04T14:53:51Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/core/ApplicationDispatcher.java", "diffHunk": "@@ -670,7 +672,7 @@ private void invoke(ServletRequest request, ServletResponse response,\n             throws IOException, ServletException {\n         //START OF 6364900 original invoke has been renamed to doInvoke\n         boolean crossContext = false;\n-        if (crossContextFlag != null && crossContextFlag.booleanValue()) {\n+        if (crossContextFlag != null && crossContextFlag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxODgwNQ==", "bodyText": "This works and it is kind of \"smart\" but also confusing. As instanceof is always false for null the else could be made into } else if (values1 != null) {  instead.", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374718805", "createdAt": "2020-02-04T14:56:14Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/core/ApplicationHttpRequest.java", "diffHunk": "@@ -935,27 +935,25 @@ void initSpecialAttributes(String requestUri,\n \n         ArrayList<String> results = new ArrayList<String>();\n \n-        if (values1 == null)\n-            ;\n-        else if (values1 instanceof String)\n-            results.add((String)values1);\n-        else if (values1 instanceof String[]) {\n+        if (values1 == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcxOTY5NA==", "bodyText": "intentional?", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374719694", "createdAt": "2020-02-04T14:57:35Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/core/DummyRequest.java", "diffHunk": "@@ -80,7 +80,7 @@\n  * @author Remy Maucherat\n  * @version $Revision: 1.5.6.2 $ $Date: 2008/04/17 18:37:07 $\n  */\n-\n+@SuppressWarnings(\"override\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyNTY4Ng==", "bodyText": "There even is Arrays.copyOf(methods, methods.length + 1) for such cases.", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374725686", "createdAt": "2020-02-04T15:06:37Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/deploy/SecurityCollection.java", "diffHunk": "@@ -213,8 +213,7 @@ public void addMethod(String method) {\n         if (method == null)\n             return;\n         String results[] = new String[methods.length + 1];\n-        for (int i = 0; i < methods.length; i++)\n-            results[i] = methods[i];\n+        System.arraycopy(methods, 0, results, 0, methods.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDcyNjc4NA==", "bodyText": "That loop looks like a Arrays.asList(methods).contains(method)", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374726784", "createdAt": "2020-02-04T15:08:16Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/deploy/SecurityCollection.java", "diffHunk": "@@ -264,9 +261,10 @@ public boolean findMethod(String method) {\n \n         if (methods.length == 0)\n             return (true);\n-        for (int i = 0; i < methods.length; i++) {\n-            if (methods[i].equals(method))\n+        for (String method1 : methods) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczMTcxOA==", "bodyText": "Last expression looks changed and maybe should also use contains, I'd expect command.contains(\"..\" + File.separator) to be consistent with the other two.", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374731718", "createdAt": "2020-02-04T15:15:44Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/servlets/CGIServlet.java", "diffHunk": "@@ -1667,9 +1668,9 @@ protected void run() throws IOException {\n                 log(\"runCGI(envp=[\" + env + \"], command=\" + command + \")\");\n             }\n \n-            if ((command.indexOf(File.separator + \".\" + File.separator) >= 0)\n-                || (command.indexOf(File.separator + \"..\") >= 0)\n-                || (command.indexOf(\"..\" + File.separator) >= 0)) {\n+            if ((command.contains(File.separator + \".\" + File.separator))\n+                || (command.contains(File.separator + \"..\"))\n+                || (command.indexOf(File.separator + \"..\") >= 0)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczMzk0Nw==", "bodyText": "I am surprised by this change. I think a not found for indexOf is commonly checked as < 0 as some APIs would return e.g. -4 to say it would be inserted at index 3 and such things so doing a < 0 check is more defensive than == -1. Is there some special reason to check for == -1 specifically?", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374733947", "createdAt": "2020-02-04T15:18:38Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/servlets/CGIServlet.java", "diffHunk": "@@ -1692,7 +1693,7 @@ protected void run() throws IOException {\n \n             //create query arguments\n             StringBuilder cmdAndArgs = new StringBuilder();\n-            if (command.indexOf(\" \") < 0) {\n+            if (command.indexOf(' ') == -1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDczNzc0Mw==", "bodyText": "Specify the product version when the Java name was added to the API specification (if different from the implementation). For example, if a package, class, interface or member was added to the Java 2 Platform, Standard Edition, API Specification at version 1.2, use: @since 1.2", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374737743", "createdAt": "2020-02-04T15:23:58Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/session/BaseSessionLocker.java", "diffHunk": "@@ -73,21 +68,25 @@\n /**\n  *\n  * @author lwhite\n+ * @since January 18, 2006", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDQ3MQ==", "bodyText": "Should be sb.append(\"attrName = \").append(nextAttrName);", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374740471", "createdAt": "2020-02-04T15:28:03Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/session/StandardSession.java", "diffHunk": "@@ -1197,8 +1203,8 @@ public String toString() {\n                 String nextAttrName = attrNamesEnum.nextElement();\n                 Object nextAttrValue = getAttribute(nextAttrName);\n                 sb.append(\"\\n\");\n-                sb.append(\"attrName = \" + nextAttrName);\n-                sb.append(\" : attrValue = \" + nextAttrValue);\n+                sb.append(nextAttrName + \"attrName = \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 376}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1NDYxMA==", "bodyText": "Goto considered harmful :)\nIf I don't read this wrong this should create an endless loop as going to OUTER does not change index so we go down same path. Better is to so a if (args[index] != null) around the switch.", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374754610", "createdAt": "2020-02-04T15:49:57Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/startup/Tool.java", "diffHunk": "@@ -177,23 +178,34 @@ public static void main(String args[]) {\n \n         // Process command line options\n         int index = 0;\n+        OUTER:\n         while (true) {\n             if (index == args.length) {\n                 usage();\n                 System.exit(1);\n             }\n-            if (\"-ant\".equals(args[index]))\n-                ant = true;\n-            else if (\"-common\".equals(args[index]))\n-                common = true;\n-            //else if (\"-debug\".equals(args[index]))\n-            //    debug = true;\n-            else if (\"-server\".equals(args[index]))\n-                server = true;\n-            else if (\"-shared\".equals(args[index]))\n-                shared = true;\n-            else\n-                break;\n+            if (null == args[index]) {\n+                break OUTER;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1NTExNA==", "bodyText": "contains", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374755114", "createdAt": "2020-02-04T15:50:46Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/util/DOMWriter.java", "diffHunk": "@@ -142,9 +143,11 @@ else if( encoding.equalsIgnoreCase( \"UTF-16\" ) )\n \n \n    public static boolean isValidJavaEncoding( String encoding ) {\n-      for ( int i = 0; i < MIME2JAVA_ENCODINGS.length; i++ )\n-         if ( encoding.equals( MIME2JAVA_ENCODINGS[i] ) )\n-            return (true);\n+       for (String MIME2JAVA_ENCODINGS1 : MIME2JAVA_ENCODINGS) {\n+           if (encoding.equals(MIME2JAVA_ENCODINGS1)) {\n+               return (true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc1NjMyOA==", "bodyText": "appending the empty string surely is not needed. This was done to cause a toString() on the result of isFulfilled() which I assume isn't needed.", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374756328", "createdAt": "2020-02-04T15:52:31Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/catalina/util/ManifestResource.java", "diffHunk": "@@ -183,13 +184,14 @@ public boolean isFulfilled() {\n         return true;\n     }\n     \n+    @Override\n     public String toString() {\n \n         StringBuilder sb = new StringBuilder(\"ManifestResource[\");\n         sb.append(resourceName);\n \n         sb.append(\", isFulfilled=\");\n-        sb.append(isFulfilled() +\"\");\n+        sb.append(isFulfilled()).append(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc2MDYzMg==", "bodyText": "paramClassNames = paramTypes.clone();", "url": "https://github.com/payara/Payara/pull/4468#discussion_r374760632", "createdAt": "2020-02-04T15:58:50Z", "author": {"login": "jbee"}, "path": "appserver/web/web-core/src/main/java/org/apache/tomcat/util/digester/CallMethodRule.java", "diffHunk": "@@ -309,9 +310,7 @@ public CallMethodRule(  int targetOffset,\n             // copy the parameter class names into an array\n             // the classes will be loaded when the digester is set \n             this.paramClassNames = new String[paramTypes.length];\n-            for (int i = 0; i < this.paramClassNames.length; i++) {\n-                this.paramClassNames[i] = paramTypes[i];\n-            }\n+            System.arraycopy(paramTypes, 0, this.paramClassNames, 0, this.paramClassNames.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb0c5d036e678d7d01515936ff5b1a1f9261ba9f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "389103a0f826052fd791e2ccbccc0bd0f27b6e33", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/389103a0f826052fd791e2ccbccc0bd0f27b6e33", "committedDate": "2020-02-05T10:49:28Z", "message": "QACI-80 Requested changes from review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27ce60786e6f02fd9be23a4b54d26531605b5d82", "author": {"user": {"login": "Cousjava", "name": "Jonathan C"}}, "url": "https://github.com/payara/Payara/commit/27ce60786e6f02fd9be23a4b54d26531605b5d82", "committedDate": "2020-02-05T15:17:38Z", "message": "QACI-80 Removed unused Tool.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzODcxNDUx", "url": "https://github.com/payara/Payara/pull/4468#pullrequestreview-353871451", "createdAt": "2020-02-05T16:45:23Z", "commit": {"oid": "27ce60786e6f02fd9be23a4b54d26531605b5d82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 857, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}