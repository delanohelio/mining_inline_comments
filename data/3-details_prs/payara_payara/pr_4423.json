{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNTM2NDAx", "number": 4423, "title": "CUSTCOM-13 A REST management DELETE command returns 415 code instead of 404", "bodyText": "This is a bug fix. Starting a fresh domain in 5.194 and running the following curl command:\ncurl -X DELETE -v -H \"Content-Type: application/x-www-form-urlencoded\" -H \"X-Requested-By:Payara\" http://localhost:4848/management/domain/servers/server/server/application-ref/non-existing-app-ref\n\nwill cause a HTTP 415 to return, where it should be a 404. Note that in 5.193 this worked.\n\n\n\nTesting\nNew tests\nSecond commit. I've made the testing module fairly generic, as I see it as something that could be useful in the future.\nTesting Performed\n\nThe new test against 5.193 and the SNAPSHOT on micro, managed and remote profiles.\nTest suites executed\n\nPayara Samples (only single test)\nJava EE7 Samples (only JAX-RS tests against remote)\nJava EE8 Samples (only JAX-RS tests against remote)\n\nNotes for Reviewers\nRead the commit messages ;)\nI've deliberately ignored the previous fix that regressed. I hope this does the same job but with lower technical debt.", "createdAt": "2020-01-10T16:51:45Z", "url": "https://github.com/payara/Payara/pull/4423", "merged": true, "mergeCommit": {"oid": "1eb4c09c9cbf5ea94315569ecae35eebe70645cd"}, "closed": true, "closedAt": "2020-01-14T12:08:43Z", "author": {"login": "MattGill98"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5B02xgBqjI5MzkyNDQwNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6NdkcAFqTM0MjM4NzE3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1dd9e2665fd28134ca6cd33d696c9535d50f8a5", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/b1dd9e2665fd28134ca6cd33d696c9535d50f8a5", "committedDate": "2020-01-10T15:31:05Z", "message": "Create an admin REST API test\n\nCreated a test to make sure that the REST management API continues\nto return a 404 for non-existing resources."}, "afterCommit": {"oid": "5629858fd5d013163d8c3df4ecab491d5f8f7c58", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/5629858fd5d013163d8c3df4ecab491d5f8f7c58", "committedDate": "2020-01-10T17:15:59Z", "message": "Create an admin REST API test\n\nCreated a test to make sure that the REST management API continues\nto return a 404 for non-existing resources."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzA3NjM2", "url": "https://github.com/payara/Payara/pull/4423#pullrequestreview-341707636", "createdAt": "2020-01-13T09:14:32Z", "commit": {"oid": "5629858fd5d013163d8c3df4ecab491d5f8f7c58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxNDozMlrOFcwh_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOToxNDozMlrOFcwh_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTY5OTU4MQ==", "bodyText": "Shouldn't it be Map now?", "url": "https://github.com/payara/Payara/pull/4423#discussion_r365699581", "createdAt": "2020-01-13T09:14:32Z", "author": {"login": "jbee"}, "path": "nucleus/admin/rest/rest-service/src/main/java/org/glassfish/admin/rest/readers/FormReader.java", "diffHunk": "@@ -64,22 +65,22 @@\n  */\n @Consumes({MediaType.APPLICATION_FORM_URLENCODED, MediaType.APPLICATION_OCTET_STREAM})\n @Provider\n-public class FormReader implements MessageBodyReader<HashMap<String, String>> {\n+public class FormReader implements MessageBodyReader<Map<String, String>> {\n     \n     private static final String DEFAULT_CHARSET = StandardCharsets.UTF_8.toString();\n \n     @Override\n     public boolean isReadable(Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType) {\n-        return type.equals(HashMap.class);\n+        return type.isAssignableFrom(HashMap.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5629858fd5d013163d8c3df4ecab491d5f8f7c58"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f31a45806a7bf13b0c1cb03430af53112f7ad9c0", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/f31a45806a7bf13b0c1cb03430af53112f7ad9c0", "committedDate": "2020-01-13T09:49:11Z", "message": "Allow the FormReader to read generic maps\n\nWhen sending null or non-map data to an endpoint with the\nx-www-form-urlencoded media type, a generic Map object is created\nrather than a specific Map implementation. Because of this no\nreader would mark the content as readable and a 415 would be\nincorrectly returned."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/07976194c2a352e21f913b8542bdee70e1132986", "committedDate": "2020-01-13T09:49:28Z", "message": "Create an admin REST API test\n\nCreated a test to make sure that the REST management API continues\nto return a 404 for non-existing resources."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5629858fd5d013163d8c3df4ecab491d5f8f7c58", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/5629858fd5d013163d8c3df4ecab491d5f8f7c58", "committedDate": "2020-01-10T17:15:59Z", "message": "Create an admin REST API test\n\nCreated a test to make sure that the REST management API continues\nto return a 404 for non-existing resources."}, "afterCommit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986", "author": {"user": {"login": "MattGill98", "name": "Matthew Gill"}}, "url": "https://github.com/payara/Payara/commit/07976194c2a352e21f913b8542bdee70e1132986", "committedDate": "2020-01-13T09:49:28Z", "message": "Create an admin REST API test\n\nCreated a test to make sure that the REST management API continues\nto return a 404 for non-existing resources."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMDA4MTky", "url": "https://github.com/payara/Payara/pull/4423#pullrequestreview-342008192", "createdAt": "2020-01-13T17:22:54Z", "commit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMDA4NzI3", "url": "https://github.com/payara/Payara/pull/4423#pullrequestreview-342008727", "createdAt": "2020-01-13T17:23:46Z", "commit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNzoyMzo0NlrOFc-eFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNzoyMzo0NlrOFc-eFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkyNzk1Ng==", "bodyText": "camel case would be better, but ok.", "url": "https://github.com/payara/Payara/pull/4423#discussion_r365927956", "createdAt": "2020-01-13T17:23:46Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/samples/rest-management/src/test/java/fish/payara/samples/rest/management/HttpResponsesTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) [2020] Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.samples.rest.management;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import com.gargoylesoftware.htmlunit.HttpMethod;\n+\n+import org.junit.Test;\n+\n+import fish.payara.samples.NotMicroCompatible;\n+\n+/**\n+ * Test the REST management interface for it's basic HTTP responses\n+ */\n+@NotMicroCompatible\n+public class HttpResponsesTest extends RestManagementTest {\n+\n+    /**\n+     * Tests that when deleting a non-existent resource a 404 is returned instead of\n+     * a 415. See CUSTCOM-13 for details.\n+     */\n+    @Test\n+    public void when_DELETE_non_existent_resource_expect_404() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMDA5NDcw", "url": "https://github.com/payara/Payara/pull/4423#pullrequestreview-342009470", "createdAt": "2020-01-13T17:24:58Z", "commit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMzY5NjQ2", "url": "https://github.com/payara/Payara/pull/4423#pullrequestreview-342369646", "createdAt": "2020-01-14T08:54:00Z", "commit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMzcyOTMw", "url": "https://github.com/payara/Payara/pull/4423#pullrequestreview-342372930", "createdAt": "2020-01-14T08:59:51Z", "commit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMzg3MTc2", "url": "https://github.com/payara/Payara/pull/4423#pullrequestreview-342387176", "createdAt": "2020-01-14T09:23:36Z", "commit": {"oid": "07976194c2a352e21f913b8542bdee70e1132986"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 833, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}