{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NjUyODA5", "number": 4443, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MDowMVrODZGl9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMToxNDo1MlrODZdLDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjQ5MDE0OnYy", "diffSide": "LEFT", "path": "appserver/payara-appserver-modules/jaxrs-client-tracing/src/main/java/fish/payara/requesttracing/jaxrs/client/JaxrsClientRequestTracingFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MDowMVrOFfT7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MDowMVrOFfT7Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3NjY1NA==", "bodyText": "This part caused problems with embedded.", "url": "https://github.com/payara/Payara/pull/4443#discussion_r368376654", "createdAt": "2020-01-20T05:40:01Z", "author": {"login": "dmatej"}, "path": "appserver/payara-appserver-modules/jaxrs-client-tracing/src/main/java/fish/payara/requesttracing/jaxrs/client/JaxrsClientRequestTracingFilter.java", "diffHunk": "@@ -80,30 +74,13 @@\n  * @author Andrew Pielage\n  */\n public class JaxrsClientRequestTracingFilter implements ClientRequestFilter, ClientResponseFilter {\n-    public static String REQUEST_CONTEXT_TRACING_PREDICATE = \"fish.payara.requesttracing.jaxrs.client.TracingPredicate\";\n-\n-    private ServiceLocator serviceLocator;\n-    private RequestTracingService requestTracing;\n-    private OpenTracingService openTracing;\n+    public static final String REQUEST_CONTEXT_TRACING_PREDICATE = \"fish.payara.requesttracing.jaxrs.client.TracingPredicate\";\n \n-    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjQ5MzY1OnYy", "diffSide": "LEFT", "path": "appserver/payara-appserver-modules/microprofile/opentracing/src/main/java/fish/payara/microprofile/opentracing/jaxrs/OpenTracingApplicationEventListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MzowM1rOFfT9Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MzowM1rOFfT9Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3NzE1NQ==", "bodyText": "Do you remember discussion about this if? :-)", "url": "https://github.com/payara/Payara/pull/4443#discussion_r368377155", "createdAt": "2020-01-20T05:43:03Z", "author": {"login": "dmatej"}, "path": "appserver/payara-appserver-modules/microprofile/opentracing/src/main/java/fish/payara/microprofile/opentracing/jaxrs/OpenTracingApplicationEventListener.java", "diffHunk": "@@ -83,19 +81,10 @@\n     @PostConstruct\n     public void postConstruct() {\n         LOG.finest(\"postConstruct()\");\n-        final ServiceLocator serviceLocator = Globals.getDefaultBaseServiceLocator();\n-        if (serviceLocator == null) {\n-            LOG.config(\"Default base service locator is null, JAX-RS server tracing is disabled.\");\n-            return;\n-        }\n-        final InvocationManager invocationManager = serviceLocator.getService(InvocationManager.class);\n-        this.requestTracing = serviceLocator.getService(RequestTracingService.class);\n-        this.openTracing = serviceLocator.getService(OpenTracingService.class);\n-        if (invocationManager == null || this.openTracing == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDE4OTU5OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/opentracing/src/main/java/fish/payara/microprofile/opentracing/cdi/TracedInterceptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMToxNDo1MlrOFf2dLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0Mzo0NlrOFgjJHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk0MjM4MQ==", "bodyText": "While this is faithful translation of original condition, I don't think operationName can be null, as it is result of Optional.orElse(annotationAttribute with default \"\").", "url": "https://github.com/payara/Payara/pull/4443#discussion_r368942381", "createdAt": "2020-01-21T11:14:52Z", "author": {"login": "pdudits"}, "path": "appserver/payara-appserver-modules/microprofile/opentracing/src/main/java/fish/payara/microprofile/opentracing/cdi/TracedInterceptor.java", "diffHunk": "@@ -198,7 +197,7 @@ private String getOperationName(final InvocationContext invocationContext, final\n             .getConfigOverrideValue(Traced.class, \"operationName\", invocationContext, String.class)\n             .orElse(traced.operationName());\n \n-        if (!\"\".equals(operationName)) {\n+        if (operationName == null || !operationName.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3NDUyNA==", "bodyText": "Fixed, nice catch, I did not notice the Optional :)", "url": "https://github.com/payara/Payara/pull/4443#discussion_r369674524", "createdAt": "2020-01-22T16:43:46Z", "author": {"login": "dmatej"}, "path": "appserver/payara-appserver-modules/microprofile/opentracing/src/main/java/fish/payara/microprofile/opentracing/cdi/TracedInterceptor.java", "diffHunk": "@@ -198,7 +197,7 @@ private String getOperationName(final InvocationContext invocationContext, final\n             .getConfigOverrideValue(Traced.class, \"operationName\", invocationContext, String.class)\n             .orElse(traced.operationName());\n \n-        if (!\"\".equals(operationName)) {\n+        if (operationName == null || !operationName.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk0MjM4MQ=="}, "originalCommit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1372, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}