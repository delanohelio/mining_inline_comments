{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTAzOTA5", "number": 4641, "title": "QACI-95 Refactor Payara Samples", "bodyText": "This PR replaces #4525 . The main difference is in possibility to execute unstable tests simply by enabling -Punstable profile, so this is still useful for developers despite jenkins will not run them.\n\nusing annotations NotMicroCompatible and Category to respect capabilities\nof the tested impl and dependencies of tests.\nNotMicroCompatible has argument for string explanation\nkilled tabs and trimmed whitespaces again\narquillian update\ndisabled trimming of stacktraces in tests (how can you find what is broken?)\nnote: the SetHazelcastConfigurationTest crashes on JDK8 with profiles\nunstable+payara-micro-managed. It is caused by the bug in JDK8,\nfixed in JDK11.\nusing profile to detect if environment is suitable to run the test\n\nadded profile auto-skip-test to expression-config-properties which\nautomatically skips the test if there are not configured env properties\nin expected way. This test is a candidate for TestContainers as it\nrequires external environment configuration.\n\n\nmodule samples-programmatic renamed to samples-micro-programmatic, which is not\nexecuted if the payara-server-remote profile is activated.\nembedded-vs-jersey was moved to Payara Embedded modules\nServerLogTest was stabilized to test only single startup, so it avoids messing with executions of all previous tests.\n\nTesting\nTesting Performed\nmvn clean install -Ppayara-server-managed,payara-samples -fae -amd -pl :payara-samples\nsuccess, 8 min\n\nmvn clean install -Ppayara-micro-managed,payara-samples -fae -amd -pl :payara-samples\nsuccess, 2 min\n\nmvn clean install -Ppayara-server-remote,payara-samples -fae -amd -pl :payara-samples\nsucces, 5 min\n\nmvn clean install -Ppayara-server-managed,payara-samples,unstable -fae -amd -pl :payara-samples\nfailure, 9 min, 3 unstable modules, \n\nmvn clean install -Ppayara-micro-managed,payara-samples,unstable -fae -amd -pl :payara-samples\nfailure, 2 min, 1 unstable module (asadmin)\n\nmvn clean install -Ppayara-server-remote,payara-samples,unstable -fae -amd -pl :payara-samples\nfailure, 5 min, 3 unstable modules\n\nexport Bibbly=Bibbles; export Dibbles=\"\\${Dabbles}\";\nmvn clean install -Ppayara-server-managed,payara-samples -fae -amd -pl :payara-samples\nunset Bibbly; unset Dibbles;\n(PayaraExpressionConfigPropertiesTest was executed and build succeeded)\n\nmvn clean install -PBuildExtras -pl :payara-embedded-all -amd\nTotal time:  02:24 min, one test\n\nTesting Environment\nAdoptOpenJDK)(build 1.8.0_212-b03\nI tested also 8u252, 8u242 and OpenJDK Runtime Environment (build 11.0.7+10-post-Ubuntu-2ubuntu219.10), there are differences:\n\nJDK11 does not fail on usage of @category, it is a bug of JDK8: https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8209742 (fixed in JDK11)\nsame test (SetHazelcastConfigurationTest) fails on JDK8 when executed in same run with other tests, which leave domain dirty. So it is unstable, but I left it as stable as it has no problems when it runs as first test on clean domain; after it will be stabilized, both problems dismiss.\non JDK8u232 and later tests using SSL fail due to incompatibility of grizzly with new JDK distributions. With older JDKs some test methods still fail. -> unstable.", "createdAt": "2020-04-25T12:53:34Z", "url": "https://github.com/payara/Payara/pull/4641", "merged": true, "mergeCommit": {"oid": "8f0c62ad55319fb64cc640046335f97808157156"}, "closed": true, "closedAt": "2020-08-05T08:17:04Z", "author": {"login": "dmatej"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd_x1KAFqTQwNDk4NTAyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc72w9jAFqTQ2MTQ0MDIyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0OTg1MDI0", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-404985024", "createdAt": "2020-05-04T13:27:20Z", "commit": {"oid": "726655546a49325165a0e288228490a54061b3e1"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzoyNzoyMFrOGQAQFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzo0Nzo0MVrOGQBJHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzNDUxOQ==", "bodyText": "The only test I see that requires a clean domain is the dataGridEncryptionWarning test, which surely could also be acheived by making the other test that creates the key clean up after itself properly?", "url": "https://github.com/payara/Payara/pull/4641#discussion_r419434519", "createdAt": "2020-05-04T13:27:20Z", "author": {"login": "Pandrex247"}, "path": "appserver/tests/payara-samples/samples/asadmin/src/test/java/fish/payara/samples/asadmin/SetHazelcastConfigurationTest.java", "diffHunk": "@@ -39,15 +39,22 @@\n  */\n package fish.payara.samples.asadmin;\n \n+import fish.payara.nucleus.hazelcast.HazelcastRuntimeConfiguration;\n+import fish.payara.samples.Unstable;\n+\n import org.glassfish.embeddable.CommandResult;\n import org.junit.Before;\n import org.junit.Test;\n-\n-import fish.payara.nucleus.hazelcast.HazelcastRuntimeConfiguration;\n+import org.junit.experimental.categories.Category;\n \n /**\n  * Verifies the correctness of the {@code SetHazelcastConfiguration} command.\n  */\n+@Category(Unstable.class)\n+// Fails from two reasons:\n+// 1) Requires completely new domain. Side effects of other tests break this one.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726655546a49325165a0e288228490a54061b3e1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzNTA2Mw==", "bodyText": "Why are we introducing things that don't work on what is arguably the primary java version?", "url": "https://github.com/payara/Payara/pull/4641#discussion_r419435063", "createdAt": "2020-05-04T13:28:05Z", "author": {"login": "Pandrex247"}, "path": "appserver/tests/payara-samples/samples/asadmin/src/test/java/fish/payara/samples/asadmin/SetHazelcastConfigurationTest.java", "diffHunk": "@@ -39,15 +39,22 @@\n  */\n package fish.payara.samples.asadmin;\n \n+import fish.payara.nucleus.hazelcast.HazelcastRuntimeConfiguration;\n+import fish.payara.samples.Unstable;\n+\n import org.glassfish.embeddable.CommandResult;\n import org.junit.Before;\n import org.junit.Test;\n-\n-import fish.payara.nucleus.hazelcast.HazelcastRuntimeConfiguration;\n+import org.junit.experimental.categories.Category;\n \n /**\n  * Verifies the correctness of the {@code SetHazelcastConfiguration} command.\n  */\n+@Category(Unstable.class)\n+// Fails from two reasons:\n+// 1) Requires completely new domain. Side effects of other tests break this one.\n+// 2) On JDK8 fails because of usage of @Category annotation which has problems with", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726655546a49325165a0e288228490a54061b3e1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0NTg1OQ==", "bodyText": "I'm not fond of this.\nA test that is disabled due to not having an environment variable set is never run.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r419445859", "createdAt": "2020-05-04T13:43:21Z", "author": {"login": "Pandrex247"}, "path": "appserver/tests/payara-samples/samples/payara-expression-config-properties/pom.xml", "diffHunk": "@@ -105,4 +112,36 @@\n             </plugin>\n         </plugins>\n     </build>\n-</project>\n\\ No newline at end of file\n+    <profiles>\n+        <profile>\n+            <id>auto-skip-test</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726655546a49325165a0e288228490a54061b3e1"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0NzE2Nw==", "bodyText": "Why less indent? 8 spaces is the default for breaking up long lines.\nAlso what's with the random empty comments?", "url": "https://github.com/payara/Payara/pull/4641#discussion_r419447167", "createdAt": "2020-05-04T13:45:05Z", "author": {"login": "Pandrex247"}, "path": "appserver/tests/payara-samples/samples/payara-expression-config-properties/src/test/java/fish/payara/samples/microprofile/config/expression/PayaraExpressionConfigPropertiesTest.java", "diffHunk": "@@ -71,14 +70,16 @@\n     @Deployment(testable = false)\n     public static WebArchive createDeployment() {\n         return ShrinkWrap.create(WebArchive.class, \"microprofile-config-expression.war\")\n-                .addPackage(\"fish.payara.samples.microprofile.config.expression\")\n-                .addAsManifestResource(new File(\"src/main/resources/META-INF/payara-expression-config.properties\"));\n+            .addPackage(ConfigServlet.class.getPackage()) //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726655546a49325165a0e288228490a54061b3e1"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ0OTExNw==", "bodyText": "It shouldn't do? Tests should clean up after themselves.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r419449117", "createdAt": "2020-05-04T13:47:41Z", "author": {"login": "Pandrex247"}, "path": "appserver/tests/payara-samples/samples/pom.xml", "diffHunk": "@@ -15,20 +15,26 @@\n     <name>Payara Samples - Profiled Tests</name>\n \n     <modules>\n+        <!-- This module must run first, because it collides with some change made by other test(s) -->\n+        <module>payara-expression-config-properties</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726655546a49325165a0e288228490a54061b3e1"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "726655546a49325165a0e288228490a54061b3e1", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/726655546a49325165a0e288228490a54061b3e1", "committedDate": "2020-04-26T20:26:56Z", "message": "QACI-95 Stabilization of PayaraExpressionConfigPropertiesTest\n\n- somehow interacts with another test, so it must be executed before it.\n- always use target, not src dir"}, "afterCommit": {"oid": "0e7db0f1ab281136ddfbff3de3b59f184b5fb20a", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/0e7db0f1ab281136ddfbff3de3b59f184b5fb20a", "committedDate": "2020-07-20T06:20:06Z", "message": "QACI-95 Excluded javax dependencies brought by smallrye-config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODg0Mjc4", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451884278", "createdAt": "2020-07-20T19:10:07Z", "commit": {"oid": "d62652d3cba07a2c54d8ce537300de9683c8c4ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxMDowN1rOG0boNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxMDowN1rOG0boNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzMTc5OA==", "bodyText": "Moved, because this tests were too far from building extras and payara embedded, which is hidden under a profile. That had two consequences:\n\nthe Payara Samples tested against old version of Payara Embedded\nsometimes the embedded wasn't built yet -> dependency issues.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457631798", "createdAt": "2020-07-20T19:10:07Z", "author": {"login": "dmatej"}, "path": "appserver/extras/embedded/tests/embedded-vs-jersey/pom.xml", "diffHunk": "@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62652d3cba07a2c54d8ce537300de9683c8c4ae"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d62652d3cba07a2c54d8ce537300de9683c8c4ae", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/d62652d3cba07a2c54d8ce537300de9683c8c4ae", "committedDate": "2020-07-20T17:25:22Z", "message": "QACI-95 Payara Embedded tests moved from Payara Samples to Payara Embedded"}, "afterCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/49267331a176fad3d62ee4f54ef8f515344eff0f", "committedDate": "2020-07-20T19:12:36Z", "message": "QACI-95 Payara Embedded tests moved from Payara Samples to Payara Embedded"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODg3MjA2", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451887206", "createdAt": "2020-07-20T19:14:35Z", "commit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxNDozNlrOG0bxBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxNDozNlrOG0bxBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzNDA1NA==", "bodyText": "Upgrade!", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457634054", "createdAt": "2020-07-20T19:14:36Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/pom.xml", "diffHunk": "@@ -86,7 +82,7 @@\n             <dependency>\n                 <groupId>org.jboss.arquillian</groupId>\n                 <artifactId>arquillian-bom</artifactId>\n-                <version>1.5.0.Final</version>\n+                <version>1.6.0.Final</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODg4MTAx", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451888101", "createdAt": "2020-07-20T19:15:56Z", "commit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxNTo1NlrOG0bz_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxNTo1NlrOG0bz_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzNDgxNA==", "bodyText": "This was discovered when we discussed related dependency issues with @MattGill98", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457634814", "createdAt": "2020-07-20T19:15:56Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/pom.xml", "diffHunk": "@@ -108,6 +104,16 @@\n                 <artifactId>smallrye-config</artifactId>\n                 <version>1.3.7</version>\n                 <scope>test</scope>\n+                <exclusions>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODg4NTAy", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451888502", "createdAt": "2020-07-20T19:16:35Z", "commit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxNjozNlrOG0b1Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToxNjozNlrOG0b1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzNTEyMg==", "bodyText": "This configuration should be probably default.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457635122", "createdAt": "2020-07-20T19:16:36Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/pom.xml", "diffHunk": "@@ -238,6 +244,7 @@\n                         <systemPropertyVariables>\n                             <isUsingMicroProfile>${micro.isActive}</isUsingMicroProfile>\n                         </systemPropertyVariables>\n+                        <trimStackTrace>false</trimStackTrace>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODkxMDY1", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451891065", "createdAt": "2020-07-20T19:20:25Z", "commit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyMDoyNVrOG0b9aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyMDoyNVrOG0b9aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzNzIyNQ==", "bodyText": "Probably better link:\nhttps://bugs.java.com/bugdatabase/view_bug.do?bug_id=JDK-7183985", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457637225", "createdAt": "2020-07-20T19:20:25Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/samples/asadmin/src/test/java/fish/payara/samples/asadmin/SetHazelcastConfigurationTest.java", "diffHunk": "@@ -39,15 +39,22 @@\n  */\n package fish.payara.samples.asadmin;\n \n+import fish.payara.nucleus.hazelcast.HazelcastRuntimeConfiguration;\n+import fish.payara.samples.Unstable;\n+\n import org.glassfish.embeddable.CommandResult;\n import org.junit.Before;\n import org.junit.Test;\n-\n-import fish.payara.nucleus.hazelcast.HazelcastRuntimeConfiguration;\n+import org.junit.experimental.categories.Category;\n \n /**\n  * Verifies the correctness of the {@code SetHazelcastConfiguration} command.\n  */\n+@Category(Unstable.class)\n+// Fails from two reasons:\n+// 1) Requires completely new domain. Side effects of other tests break this one.\n+// 2) On JDK8 fails because of usage of @Category annotation which has problems with\n+//    this bug: https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8209742 (fixed in JDK11)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODkxNjM0", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451891634", "createdAt": "2020-07-20T19:21:17Z", "commit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyMToxN1rOG0b_dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyMToxN1rOG0b_dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzNzc0OA==", "bodyText": "Deleted trailing spaces.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457637748", "createdAt": "2020-07-20T19:21:17Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/samples/asadmin/src/test/java/fish/payara/samples/asadmin/SetHealthCheckServiceConfigurationTest.java", "diffHunk": "@@ -83,13 +83,13 @@ public void setUp() {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODkyOTA2", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451892906", "createdAt": "2020-07-20T19:23:17Z", "commit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyMzoxN1rOG0cDlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyMzoxN1rOG0cDlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYzODgwNw==", "bodyText": "Fixed to respect the current implementation.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457638807", "createdAt": "2020-07-20T19:23:17Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/samples/asadmin/src/test/java/fish/payara/samples/asadmin/SetHealthCheckServiceConfigurationTest.java", "diffHunk": "@@ -261,17 +261,17 @@ public void hogginThreadsThresholdDynamicAffectsConfigAndService() {\n \n     @Test\n     public void hogginThreadsRetryCountBelowMinimumCausesError() {\n-        CommandResult result = asadmin(\"set-healthcheck-service-configuration\", \n+        CommandResult result = asadmin(\"set-healthcheck-service-configuration\",\n                 \"--service\", \"ht\",\n                 \"--enabled\", \"true\",\n-                \"--hogging-threads-retry-count\", \"0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "originalPosition": 157}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODk0NTU1", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451894555", "createdAt": "2020-07-20T19:25:55Z", "commit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyNTo1NVrOG0cI7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOToyNTo1NVrOG0cI7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0MDE3NA==", "bodyText": "I noticed the Jenkins build is much slower now. What is the cause? Is PayaraArquillianTestRunner slower than Arquillian? (just a first idea)\nEDIT: probably no. The reason is probably in enabling tests with secure endponts.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457640174", "createdAt": "2020-07-20T19:25:55Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/samples/ejb-invoker-secure-endpoint/src/test/java/fish/payara/samples/ejb/invoker/security/RemoteBeanBasicAuthTest.java", "diffHunk": "@@ -55,7 +56,8 @@\n  * BASIC Auth.\n  *\n  */\n-@RunWith(Arquillian.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODk5Njk5", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-451899699", "createdAt": "2020-07-20T19:33:42Z", "commit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTozMzo0M1rOG0cYSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTozMzo0M1rOG0cYSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY0NDEwNA==", "bodyText": "Ok, these tests are the cause of the slowdown. I will take a look once more if they couldn't be faster (unclosed rest clients or what?)", "url": "https://github.com/payara/Payara/pull/4641#discussion_r457644104", "createdAt": "2020-07-20T19:33:43Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/samples/pom.xml", "diffHunk": "@@ -43,25 +49,7 @@\n     </dependencyManagement>\n \n     <profiles>\n-\n-\t\t<profile>\n-\t\t\t<id>unstable</id>\n-\t\t\t<modules>\n-\t\t        <module>openid</module>\n-\t\t        <module>jaxws-tracing</module>\n-\t\t        <module>asadmin</module>\n-\t\t        <module>microprofile-endpoints</module>\n-         \t</modules>\n-\t\t</profile>\n-\t\t<profile>\n-\t\t\t<id>unstable-remote</id>\n-\t\t\t<modules>\n-                <module>ejb-invoker-secure-endpoint</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49267331a176fad3d62ee4f54ef8f515344eff0f", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/49267331a176fad3d62ee4f54ef8f515344eff0f", "committedDate": "2020-07-20T19:12:36Z", "message": "QACI-95 Payara Embedded tests moved from Payara Samples to Payara Embedded"}, "afterCommit": {"oid": "b25ef7ae7ed2c0307770201acee3ebd918b332ef", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/b25ef7ae7ed2c0307770201acee3ebd918b332ef", "committedDate": "2020-07-26T10:03:01Z", "message": "QACI-95 Payara Embedded tests moved from Payara Samples to Payara Embedded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "695d6b42e019714137154ab23b5fc78b58b18c61", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/695d6b42e019714137154ab23b5fc78b58b18c61", "committedDate": "2020-08-03T08:16:36Z", "message": "QACI-95 Another attempt for test stabilization\n\n- using annotations NotMicroCompatible and Category to respect capabilities\n  of the tested impl and dependencies of tests.\n- NotMicroCompatible has argument for string explanation\n- killed tabs and trimmed whitespaces again\n- arquillian update\n- disabled trimming of stacktraces in tests (how can you find what is broken?)\n- note: the SetHazelcastConfigurationTest crashes on JDK8 with profiles\n        unstable+payara-micro-managed. It is caused by the bug in JDK8,\n        fixed in JDK11.\n- using profile to detect if environment is suitable to run the test\n  - added profile auto-skip-test to expression-config-properties which\n    automatically skips the test if there are not configured env properties\n    in expected way. This test is a candidate for TestContainers as it\n    requires external environment configuration.\n- module samples-programmatic renamed to samples-micro-programmatic, which is not\n  executed if the payara-server-remote profile is activated.\n- similar for embedded-vs-jersey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c61b0b4be32b6e2b4cb0b78f7d185e1642fccc0f", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/c61b0b4be32b6e2b4cb0b78f7d185e1642fccc0f", "committedDate": "2020-08-03T08:16:36Z", "message": "QACI-95 PayaraExpressionConfigPropertiesTest - dependencies on system state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eff7a62be6060519ccd12c84792dfe9580a5de6b", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/eff7a62be6060519ccd12c84792dfe9580a5de6b", "committedDate": "2020-08-03T08:16:36Z", "message": "QACI-95 Stabilization of PayaraExpressionConfigPropertiesTest\n\n- somehow interacts with another test, so it must be executed before it.\n- always use target, not src dir"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec52ced1254a8579a4c5b2613f42aeb75d30cc3", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/1ec52ced1254a8579a4c5b2613f42aeb75d30cc3", "committedDate": "2020-08-03T08:16:36Z", "message": "QACI-95 Excluded javax dependencies brought by smallrye-config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7d3f007c6386c1d51d3d96d67cdaf067ede9803", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/a7d3f007c6386c1d51d3d96d67cdaf067ede9803", "committedDate": "2020-08-03T08:16:36Z", "message": "QACI-95 Rotate the server.log to avoid collisions with warnings from other tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f09817511d3f1fc0231cc7a229c2b7140d41f452", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/f09817511d3f1fc0231cc7a229c2b7140d41f452", "committedDate": "2020-08-03T08:16:36Z", "message": "QACI-95 Payara Embedded tests moved from Payara Samples to Payara Embedded"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b25ef7ae7ed2c0307770201acee3ebd918b332ef", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/b25ef7ae7ed2c0307770201acee3ebd918b332ef", "committedDate": "2020-07-26T10:03:01Z", "message": "QACI-95 Payara Embedded tests moved from Payara Samples to Payara Embedded"}, "afterCommit": {"oid": "f09817511d3f1fc0231cc7a229c2b7140d41f452", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/f09817511d3f1fc0231cc7a229c2b7140d41f452", "committedDate": "2020-08-03T08:16:36Z", "message": "QACI-95 Payara Embedded tests moved from Payara Samples to Payara Embedded"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDAzMTg0", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-461003184", "createdAt": "2020-08-04T17:02:02Z", "commit": {"oid": "f09817511d3f1fc0231cc7a229c2b7140d41f452"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzowMjowMlrOG7padw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzowMjowMlrOG7padw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5NzY4Nw==", "bodyText": "This test consumed logs also from previous executions. Some of them logged warnings.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r465197687", "createdAt": "2020-08-04T17:02:02Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/samples/rest-management/src/test/java/fish/payara/samples/rest/management/ServerLogTest.java", "diffHunk": "@@ -39,24 +39,41 @@\n  */\r\n package fish.payara.samples.rest.management;\r\n \r\n+import static org.junit.Assert.assertEquals;\r\n import static org.junit.Assert.assertFalse;\r\n \r\n+import fish.payara.samples.ServerOperations;\r\n+\r\n import java.util.Scanner;\r\n \r\n+import javax.ws.rs.client.Entity;\r\n+import javax.ws.rs.core.Response;\r\n+\r\n+import org.junit.Before;\r\n import org.junit.Test;\r\n \r\n /**\r\n  * Tests to run against the server log\r\n  */\r\n public class ServerLogTest extends RestManagementTest {\r\n \r\n+    @Before\r\n+    public void resetLogging() throws Exception {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f09817511d3f1fc0231cc7a229c2b7140d41f452"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDAzNjQ0", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-461003644", "createdAt": "2020-08-04T17:02:45Z", "commit": {"oid": "f09817511d3f1fc0231cc7a229c2b7140d41f452"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzowMjo0NVrOG7pb3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzowMjo0NVrOG7pb3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5ODA0Nw==", "bodyText": "Added possible explanation why it is not micro compatible.", "url": "https://github.com/payara/Payara/pull/4641#discussion_r465198047", "createdAt": "2020-08-04T17:02:45Z", "author": {"login": "dmatej"}, "path": "appserver/tests/payara-samples/test-utils/src/main/java/fish/payara/samples/NotMicroCompatible.java", "diffHunk": "@@ -48,15 +48,17 @@\n /**\n  * Annotation used to specify that a test is not applicable to Payara Micro\n  * Use in combination with <code>@RunWith(PayaraTestRunner.class)</code> or <code>@RunWith(PayaraArquillianTestRunner.class)</code> annotation\n- * \n+ *\n  * Can also be used in conjunction with <code>@SincePayara</code> to denote versioning\n- * \n+ *\n  * @see fish.payara.samples.*\n- * \n+ *\n  * @author Cuba Stanley\n  */\n @Target({ElementType.METHOD, ElementType.TYPE})\n @Retention(RetentionPolicy.RUNTIME)\n @Inherited\n-\n-public @interface NotMicroCompatible {}\n+public @interface NotMicroCompatible {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f09817511d3f1fc0231cc7a229c2b7140d41f452"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNDQwMjI0", "url": "https://github.com/payara/Payara/pull/4641#pullrequestreview-461440224", "createdAt": "2020-08-05T08:15:58Z", "commit": {"oid": "f09817511d3f1fc0231cc7a229c2b7140d41f452"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 813, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}