{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTQzODE2", "number": 4819, "title": "FISH-257 Adds RAG Status metrics and watches for MP Health Checks", "bodyText": "Summary\nTo support the RAG indicator added by payara/monitoring-console#20 each health check is made into a metric series. In addition aggregation series are created for:\n\nall checks of an app liveness\nall checks of an app readiness\nall checks of an app health\nall checks of an app (overall - that is liveness,  readiness or health)\nall checks of any app liveness\nall checks of any app readiness\nall checks of any app health\nall checks of any app (overall - that is liveness,  readiness or health)\n\nThe results of the health checks can carry additional key-value data which in case of a DOWN state are added as MC annotation.\nLastly each of the created series is also watched by a watch that is collected for it.\nWhen checks are run they always run in their application class loader context.\nThey run each 12 sec as this is the interval the metrics are collected.\nTesting\nSee payara/monitoring-console#20\nDue to the newly introduced Unit adding the new metrics can be done without the changes of the referenced MC PR but the collection of the source will fail due to unknown unit. TL;DR; We could merge it independently.\nDocumentation\npayara/Payara-Community-Documentation#53", "createdAt": "2020-08-06T16:51:18Z", "url": "https://github.com/payara/Payara/pull/4819", "merged": true, "mergeCommit": {"oid": "da4af4e77717e27406de8026c52db282e616db9d"}, "closed": true, "closedAt": "2020-08-07T12:23:25Z", "author": {"login": "jbee"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8NPyggH2gAyNDY0MTQzODE2OmE0MDhhM2VmODAyMzcyMGI3NmUyM2U3MWQ2ZTMxOTdiNGIzNzE0NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8jc3ugFqTQ2MzI2NjQ1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a408a3ef8023720b76e23e71d6e3197b4b371440", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/payara/Payara/commit/a408a3ef8023720b76e23e71d6e3197b4b371440", "committedDate": "2020-08-06T10:27:33Z", "message": "FISH-257 adds MP health series and watch collection with aggregates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d17a793ae50b3edd737573acbe2221dee60fa561", "author": {"user": {"login": "jbee", "name": "Jan Bernitt"}}, "url": "https://github.com/payara/Payara/commit/d17a793ae50b3edd737573acbe2221dee60fa561", "committedDate": "2020-08-06T15:22:31Z", "message": "FISH-257 details adjustments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDgwNDYy", "url": "https://github.com/payara/Payara/pull/4819#pullrequestreview-463080462", "createdAt": "2020-08-07T07:04:42Z", "commit": {"oid": "d17a793ae50b3edd737573acbe2221dee60fa561"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzowNDo0M1rOG9O36A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzowNDo0M1rOG9O36A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2MDAwOA==", "bodyText": "This is a hit left for people looking into FISH-367", "url": "https://github.com/payara/Payara/pull/4819#discussion_r466860008", "createdAt": "2020-08-07T07:04:43Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/healthcheck/src/main/java/fish/payara/microprofile/healthcheck/HealthCheckService.java", "diffHunk": "@@ -231,6 +370,7 @@ public void registerClassLoader(String appName, ClassLoader classloader) {\n                         oldValue.addAll(newValue);\n                         return oldValue;\n                     });\n+            //FIXME most likely this unintentionally changes the fields", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17a793ae50b3edd737573acbe2221dee60fa561"}, "originalPosition": 199}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDgxMDE0", "url": "https://github.com/payara/Payara/pull/4819#pullrequestreview-463081014", "createdAt": "2020-08-07T07:05:51Z", "commit": {"oid": "d17a793ae50b3edd737573acbe2221dee60fa561"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzowNTo1MVrOG9O5zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNzowNTo1MVrOG9O5zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg2MDQ5NA==", "bodyText": "FYI: This state is needed to know when collecting watches which metrics have been collected before.", "url": "https://github.com/payara/Payara/pull/4819#discussion_r466860494", "createdAt": "2020-08-07T07:05:51Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/healthcheck/src/main/java/fish/payara/microprofile/healthcheck/HealthCheckService.java", "diffHunk": "@@ -115,6 +125,8 @@\n     private final Map<String, ClassLoader> applicationClassLoaders = new ConcurrentHashMap<>();\n     private final List<String> applicationsLoaded = new CopyOnWriteArrayList<>();\n \n+    private final AtomicReference<Map<String, Set<String>>> checksCollected = new AtomicReference<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d17a793ae50b3edd737573acbe2221dee60fa561"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMjY2NDU0", "url": "https://github.com/payara/Payara/pull/4819#pullrequestreview-463266454", "createdAt": "2020-08-07T12:19:45Z", "commit": {"oid": "d17a793ae50b3edd737573acbe2221dee60fa561"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 756, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}