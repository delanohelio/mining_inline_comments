{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMDE2MzU4", "number": 4813, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoxNTowM1rOEVbraA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoxNTowM1rOEVbraA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTA5MDMyOnYy", "diffSide": "RIGHT", "path": "nucleus/deployment/admin/src/main/java/fish/payara/deployment/admin/PayaraTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDoxNTowM1rOG8LpMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNTozNTo0MFrOG8j8ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1ODUxNQ==", "bodyText": "Don't we already have a sniffer to do this sort of thing? (Note: I recognise this check may take place before sniffers have gotten involved, just checking that it's been a consideration)", "url": "https://github.com/payara/Payara/pull/4813#discussion_r465758515", "createdAt": "2020-08-05T14:15:03Z", "author": {"login": "MattGill98"}, "path": "nucleus/deployment/admin/src/main/java/fish/payara/deployment/admin/PayaraTransformer.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) 2020 Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.deployment.admin;\n+\n+import com.sun.enterprise.util.LocalStringManagerImpl;\n+import java.io.File;\n+import java.io.IOException;\n+import static org.eclipse.transformer.Transformer.SUCCESS_RC;\n+import org.eclipse.transformer.payara.JakartaNamespaceTransformer;\n+import org.glassfish.api.admin.AdminCommandContext;\n+import org.glassfish.hk2.classmodel.reflect.Type;\n+import org.glassfish.hk2.classmodel.reflect.Types;\n+\n+/**\n+ * Transforms jakarta.* namespace to javax.* and vice-versa.\n+ * \n+ * @author gaurav.gupta@payara.fish\n+ */\n+public class PayaraTransformer {\n+\n+    public static final String TRANSFORM_NAMESPACE = \"fish.payara.deployment.transform.namespace\";\n+\n+    private static final LocalStringManagerImpl localStrings = new LocalStringManagerImpl(PayaraTransformer.class);\n+\n+    private static final String[] commonJavaxClasses = {\n+        \"javax.inject.Inject\",\n+        \"javax.servlet.http.HttpServlet\",\n+        \"javax.ws.rs.core.Application\",\n+        \"javax.persistence.Entity\"\n+    };\n+    private static final String[] commonJakartaClasses = {\n+        \"jakarta.inject.Inject\",\n+        \"jakarta.servlet.http.HttpServlet\",\n+        \"jakarta.ws.rs.core.Application\",\n+        \"jakarta.persistence.Entity\"\n+    };\n+    private static final String JAKARTA_PACKAGE_PREFIX = \"jakarta.\";\n+\n+    public static boolean isJakartaEEApplication(Types types) {\n+\n+        // Quick check for the most common Javax/Jakarta APIs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81a4779a248d755f482dc5519aaab2ed7493d8c4"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1NjczOQ==", "bodyText": "Hi @MattGill98,\nYes, you are right, Jakarta Application identification operation performed during preAuthorization phase where sniffer details are not available.", "url": "https://github.com/payara/Payara/pull/4813#discussion_r466156739", "createdAt": "2020-08-06T05:35:40Z", "author": {"login": "jGauravGupta"}, "path": "nucleus/deployment/admin/src/main/java/fish/payara/deployment/admin/PayaraTransformer.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) 2020 Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.deployment.admin;\n+\n+import com.sun.enterprise.util.LocalStringManagerImpl;\n+import java.io.File;\n+import java.io.IOException;\n+import static org.eclipse.transformer.Transformer.SUCCESS_RC;\n+import org.eclipse.transformer.payara.JakartaNamespaceTransformer;\n+import org.glassfish.api.admin.AdminCommandContext;\n+import org.glassfish.hk2.classmodel.reflect.Type;\n+import org.glassfish.hk2.classmodel.reflect.Types;\n+\n+/**\n+ * Transforms jakarta.* namespace to javax.* and vice-versa.\n+ * \n+ * @author gaurav.gupta@payara.fish\n+ */\n+public class PayaraTransformer {\n+\n+    public static final String TRANSFORM_NAMESPACE = \"fish.payara.deployment.transform.namespace\";\n+\n+    private static final LocalStringManagerImpl localStrings = new LocalStringManagerImpl(PayaraTransformer.class);\n+\n+    private static final String[] commonJavaxClasses = {\n+        \"javax.inject.Inject\",\n+        \"javax.servlet.http.HttpServlet\",\n+        \"javax.ws.rs.core.Application\",\n+        \"javax.persistence.Entity\"\n+    };\n+    private static final String[] commonJakartaClasses = {\n+        \"jakarta.inject.Inject\",\n+        \"jakarta.servlet.http.HttpServlet\",\n+        \"jakarta.ws.rs.core.Application\",\n+        \"jakarta.persistence.Entity\"\n+    };\n+    private static final String JAKARTA_PACKAGE_PREFIX = \"jakarta.\";\n+\n+    public static boolean isJakartaEEApplication(Types types) {\n+\n+        // Quick check for the most common Javax/Jakarta APIs", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc1ODUxNQ=="}, "originalCommit": {"oid": "81a4779a248d755f482dc5519aaab2ed7493d8c4"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1292, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}