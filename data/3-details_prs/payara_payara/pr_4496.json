{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzIxNDgz", "number": 4496, "title": "CUSTCOM-204 - Fixed comparator of OpenApiWalker's internal Tre\u2026", "bodyText": "\u2026eSet of allowed classes\nAttempts to fix #4489\nDescription\nThis is a bug fix for  #4489.\nAs described in JavaDoc above the test for this fix, a TreeSet has been used inside OpenApiWalker class to ensure low lookup times during the OpenApi schema creation/generation process. Which is a clever choice, as a TreeSet ensures O(log(n)) asymptotic complexity source.\nThe previous comparator, with it's limited number of outputs for the whole set of allowed classes with typically high cardinality, was effectively making some classes not foundable on lookup, even though those classes were present. On lookup, the comparator sent the pointer to a completely different direction/tree node.\nI believe a cheap and optimal solution would be to compare distance among classes using Strings. To quote the JavaDoc above the test created in this PR:\nThe compared objects inside the internal comparator supplied to the Set implementation are of type \"Class\".\nAnd classes have no natural distinct ordinal numbers in Java. One way to get an ordinal number for a Class is\nto use it's fully qualified name and compare the distance to the other compared class in the space consisting\nof other class names. This way, \"more similar\" strings have closer cartesian distance. And as String \nrepresentation of a Classs is used, fast lookup is ensured.\n\nThe implementation of String.compareTo method is fast & efficient and is able to quickly send the lookup pointer the right way in the tree by using the whole space of all possible class names. The opposite would be comparing by +1/-1 steps could also mean linear search in worst case.\nImportant Info\nTesting\nNew tests\nOpenApiWalkerTest class with one new test named testClassOrderingAndSearch.\nThis class tests:\n\nAll inserted classes are found afterwards in the internal TreeSet\nInternal contract is defined as Set\nThe implementation used is a TreeSet - debatable. If anyone changes the implementation, this test will fail and the person changing the code will be forced to change the test and thus cinciously consider the lookup complexity.\n\nTesting Performed\nCreated a JUnit test.\nTesting Environment\nOracle JDK 1.8.0_241\nUbuntu 19.10", "createdAt": "2020-02-15T14:41:58Z", "url": "https://github.com/payara/Payara/pull/4496", "merged": true, "mergeCommit": {"oid": "b41502e8bb496f8139be2ab8ad146e0e1d965f66"}, "closed": true, "closedAt": "2020-02-21T09:23:53Z", "author": {"login": "Pscheidl"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcElVoxAH2gAyMzc1NzIxNDgzOjMwYTI2MjRlN2M1ZmI3MmE1MDQzZWQyYTdhYmIxYjMwMTA2YWUxNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGM8vZAFqTM2MjAwMjI1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "30a2624e7c5fb72a5043ed2a7abb1b30106ae156", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/30a2624e7c5fb72a5043ed2a7abb1b30106ae156", "committedDate": "2020-02-15T14:51:54Z", "message": "MICROPROFILE #4489 - Fixed comparator of OpenApiWalker's internal TreeSet of allowed classes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d628c5fa011afbb283b0fb00b61840385b922fd", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/2d628c5fa011afbb283b0fb00b61840385b922fd", "committedDate": "2020-02-15T14:20:21Z", "message": "MICROPROFILE #4489 - Fixed comparator of OpenApiWalker's internal TreeSet of allowed classes"}, "afterCommit": {"oid": "30a2624e7c5fb72a5043ed2a7abb1b30106ae156", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/30a2624e7c5fb72a5043ed2a7abb1b30106ae156", "committedDate": "2020-02-15T14:51:54Z", "message": "MICROPROFILE #4489 - Fixed comparator of OpenApiWalker's internal TreeSet of allowed classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwOTQ3OTI5", "url": "https://github.com/payara/Payara/pull/4496#pullrequestreview-360947929", "createdAt": "2020-02-19T09:18:28Z", "commit": {"oid": "30a2624e7c5fb72a5043ed2a7abb1b30106ae156"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOToxODoyOFrOFrgYnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwOToxODoyOFrOFrgYnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTE2MzY3Ng==", "bodyText": "I think @MattGill98 knows about the logic here and if the order had any real significance other than performance.", "url": "https://github.com/payara/Payara/pull/4496#discussion_r381163676", "createdAt": "2020-02-19T09:18:28Z", "author": {"login": "jbee"}, "path": "appserver/payara-appserver-modules/microprofile/openapi/src/main/java/fish/payara/microprofile/openapi/impl/visitor/OpenApiWalker.java", "diffHunk": "@@ -117,25 +117,7 @@\n \n     public OpenApiWalker(OpenAPI api, Set<Class<?>> allowedClasses) {\n         this.api = api;\n-        this.classes = new TreeSet<>((class1, class2) -> {\n-            if (class1.equals(class2)) {\n-                return 0;\n-            }\n-            // Subclasses first\n-            if (class1.isAssignableFrom(class2)) {\n-                return -1;\n-            }\n-            // Non contextual objects at the start\n-            if (!class1.isAnnotationPresent(ApplicationPath.class) && !class1.isAnnotationPresent(Path.class)) {\n-                return -1;\n-            }\n-            // Followed by applications\n-            if (class1.isAnnotationPresent(ApplicationPath.class)) {\n-                return -1;\n-            }\n-            // Followed by everything else\n-            return 1;\n-        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30a2624e7c5fb72a5043ed2a7abb1b30106ae156"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDAyMjU2", "url": "https://github.com/payara/Payara/pull/4496#pullrequestreview-362002256", "createdAt": "2020-02-20T15:34:50Z", "commit": {"oid": "30a2624e7c5fb72a5043ed2a7abb1b30106ae156"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 884, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}