{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NjUyODA5", "number": 4443, "title": "CUSTCOM-70 Fixed jersey-client issues with embedded distros of Payara", "bodyText": "Description\nTesting\nmvn clean install -TC4 -PQuickBuild,fastest\nmvn clean install -PBuildExtras,QuickBuild,fastest -pl :payara-embedded-all\nmvn clean install -Ppayara-samples -pl :embedded-vs-jersey\n\nTest suites executed\n\n\nQuicklook Y\nPayara Samples Y\nJava EE7 Samples N\nJava EE8 Samples N\nPayara Private Tests N\nPayara Microprofile TCKs Runner N\nJakarta TCKs - jaxrs\nMojarra N\nCargo Tracker N", "createdAt": "2020-01-20T05:39:13Z", "url": "https://github.com/payara/Payara/pull/4443", "merged": true, "mergeCommit": {"oid": "13de70a76f2cf8c4d61199d78a3749fa0e0162e5"}, "closed": true, "closedAt": "2020-01-22T18:51:16Z", "author": {"login": "dmatej"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8F3B2gFqTM0NTA4Nzk1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb84i2WAH2gAyMzY0NjUyODA5OjM1MzZkZDkyODRlN2MwMTg0Mzg2ZmNkZjMxMzljZWYyN2MyZTJlMzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDg3OTU3", "url": "https://github.com/payara/Payara/pull/4443#pullrequestreview-345087957", "createdAt": "2020-01-20T05:40:01Z", "commit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MDowMVrOFfT7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MDowMVrOFfT7Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3NjY1NA==", "bodyText": "This part caused problems with embedded.", "url": "https://github.com/payara/Payara/pull/4443#discussion_r368376654", "createdAt": "2020-01-20T05:40:01Z", "author": {"login": "dmatej"}, "path": "appserver/payara-appserver-modules/jaxrs-client-tracing/src/main/java/fish/payara/requesttracing/jaxrs/client/JaxrsClientRequestTracingFilter.java", "diffHunk": "@@ -80,30 +74,13 @@\n  * @author Andrew Pielage\n  */\n public class JaxrsClientRequestTracingFilter implements ClientRequestFilter, ClientResponseFilter {\n-    public static String REQUEST_CONTEXT_TRACING_PREDICATE = \"fish.payara.requesttracing.jaxrs.client.TracingPredicate\";\n-\n-    private ServiceLocator serviceLocator;\n-    private RequestTracingService requestTracing;\n-    private OpenTracingService openTracing;\n+    public static final String REQUEST_CONTEXT_TRACING_PREDICATE = \"fish.payara.requesttracing.jaxrs.client.TracingPredicate\";\n \n-    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDg4NTUz", "url": "https://github.com/payara/Payara/pull/4443#pullrequestreview-345088553", "createdAt": "2020-01-20T05:43:03Z", "commit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MzowM1rOFfT9Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo0MzowM1rOFfT9Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3NzE1NQ==", "bodyText": "Do you remember discussion about this if? :-)", "url": "https://github.com/payara/Payara/pull/4443#discussion_r368377155", "createdAt": "2020-01-20T05:43:03Z", "author": {"login": "dmatej"}, "path": "appserver/payara-appserver-modules/microprofile/opentracing/src/main/java/fish/payara/microprofile/opentracing/jaxrs/OpenTracingApplicationEventListener.java", "diffHunk": "@@ -83,19 +81,10 @@\n     @PostConstruct\n     public void postConstruct() {\n         LOG.finest(\"postConstruct()\");\n-        final ServiceLocator serviceLocator = Globals.getDefaultBaseServiceLocator();\n-        if (serviceLocator == null) {\n-            LOG.config(\"Default base service locator is null, JAX-RS server tracing is disabled.\");\n-            return;\n-        }\n-        final InvocationManager invocationManager = serviceLocator.getService(InvocationManager.class);\n-        this.requestTracing = serviceLocator.getService(RequestTracingService.class);\n-        this.openTracing = serviceLocator.getService(OpenTracingService.class);\n-        if (invocationManager == null || this.openTracing == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NzgzNTYy", "url": "https://github.com/payara/Payara/pull/4443#pullrequestreview-345783562", "createdAt": "2020-01-21T10:45:24Z", "commit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1ODAxMjA2", "url": "https://github.com/payara/Payara/pull/4443#pullrequestreview-345801206", "createdAt": "2020-01-21T11:14:51Z", "commit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMToxNDo1MlrOFf2dLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMToxNDo1MlrOFf2dLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk0MjM4MQ==", "bodyText": "While this is faithful translation of original condition, I don't think operationName can be null, as it is result of Optional.orElse(annotationAttribute with default \"\").", "url": "https://github.com/payara/Payara/pull/4443#discussion_r368942381", "createdAt": "2020-01-21T11:14:52Z", "author": {"login": "pdudits"}, "path": "appserver/payara-appserver-modules/microprofile/opentracing/src/main/java/fish/payara/microprofile/opentracing/cdi/TracedInterceptor.java", "diffHunk": "@@ -198,7 +197,7 @@ private String getOperationName(final InvocationContext invocationContext, final\n             .getConfigOverrideValue(Traced.class, \"operationName\", invocationContext, String.class)\n             .orElse(traced.operationName());\n \n-        if (!\"\".equals(operationName)) {\n+        if (operationName == null || !operationName.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f9718acb9674cb411d98d5e576bf7b3866e65a7", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/1f9718acb9674cb411d98d5e576bf7b3866e65a7", "committedDate": "2020-01-18T19:22:41Z", "message": "CUSTCOM-70 Fixed jersey-client issues with embedded distros of Payara\n\n- Jersey detected filters and tried them to initialized them even before\n  Payara container startup -> RunLevel exception\n- Now access to Payara maintained services is postponed to first request\n- This access was extracted to own class\n- Also removed some unused imports, etc."}, "afterCommit": {"oid": "3536dd9284e7c0184386fcdf3139cef27c2e2e30", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/3536dd9284e7c0184386fcdf3139cef27c2e2e30", "committedDate": "2020-01-22T16:43:08Z", "message": "CUSTCOM-70 Fixed jersey-client issues with embedded distros of Payara\n\n- Jersey detected filters and tried them to initialized them even before\n  Payara container startup -> RunLevel exception\n- Now access to Payara maintained services is postponed to first request\n- This access was extracted to own class\n- Also removed some unused imports, etc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3536dd9284e7c0184386fcdf3139cef27c2e2e30", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/3536dd9284e7c0184386fcdf3139cef27c2e2e30", "committedDate": "2020-01-22T16:43:08Z", "message": "CUSTCOM-70 Fixed jersey-client issues with embedded distros of Payara\n\n- Jersey detected filters and tried them to initialized them even before\n  Payara container startup -> RunLevel exception\n- Now access to Payara maintained services is postponed to first request\n- This access was extracted to own class\n- Also removed some unused imports, etc."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 844, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}