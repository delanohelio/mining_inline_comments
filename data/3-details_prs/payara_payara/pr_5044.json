{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MjI4ODc2", "number": 5044, "title": "FISH-1364 CUSTCOM-55 possibly stale log records are propagated", "bodyText": "force toString() during the same thread as the logging happens so objects\ndon't get passed around different threads in logging and have a chance to get\nout of sync and be inconsistent\n\nDescription\nPragmatic & minimalist fix to remove race conditions in log records causing stale state to be printed in log message\nImportant Info\nBlockers\nNone\nTesting\nNew tests\nExisting tests\nTesting Environment\nJenkins\nNotes for Reviewers\nThis is a simplest fix for the issue, not touching anything that doesn't directly relate\nChoose \"hide whitespace changes\" from GitHub setup to make the review easier", "createdAt": "2020-12-10T20:20:31Z", "url": "https://github.com/payara/Payara/pull/5044", "merged": true, "mergeCommit": {"oid": "e059babadb5d38da46ee822e8555da71f3a3a210"}, "closed": true, "closedAt": "2020-12-16T14:22:30Z", "author": {"login": "lprimak"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk5bOVABqjQwOTcxMTM2OTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmYohCAFqTU1MjM1NjE3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b54b56e8b80a40acc541f39909bb88b4c3c0c78", "author": {"user": {"login": "lprimak", "name": "Lenny Primak"}}, "url": "https://github.com/payara/Payara/commit/7b54b56e8b80a40acc541f39909bb88b4c3c0c78", "committedDate": "2020-12-10T20:25:00Z", "message": "nullable params"}, "afterCommit": {"oid": "3445ae7c3f11bbe06460832843b1acd7a3fe1d75", "author": {"user": {"login": "lprimak", "name": "Lenny Primak"}}, "url": "https://github.com/payara/Payara/commit/3445ae7c3f11bbe06460832843b1acd7a3fe1d75", "committedDate": "2020-12-10T20:32:33Z", "message": "force toString() during the same thread as the logging happens so objects\ndon't get passed around different threads in logging and have a chance to get\nout of sync and be inconsistent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTk0MTQ4", "url": "https://github.com/payara/Payara/pull/5044#pullrequestreview-549594148", "createdAt": "2020-12-10T20:55:32Z", "commit": {"oid": "3445ae7c3f11bbe06460832843b1acd7a3fe1d75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1NTozMlrOIDc5yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1NTozMlrOIDc5yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5MDE4Nw==", "bodyText": "What is param.getClass().equals(String.class) supposed to do?", "url": "https://github.com/payara/Payara/pull/5044#discussion_r540490187", "createdAt": "2020-12-10T20:55:32Z", "author": {"login": "sgflt"}, "path": "nucleus/common/common-util/src/main/java/com/sun/common/util/logging/GFLogRecord.java", "diffHunk": "@@ -84,4 +84,25 @@ public String getThreadName() {\n     public void setThreadName(String threadName) {\n         this.threadName = threadName;\n     }\n+\n+    /**\n+     * CUSTOM-55\n+     * in case of an object passed as a parameter, call it's toString() method\n+     * to resolve it's values in the current thread, instead of waiting for queues / et\n+     * so there is no possibility of state change of the object between thread\n+     * @param params\n+     * @return parameter array\n+     */\n+    private Object[] transform(Object[] params) {\n+        if (params == null) {\n+            return null;\n+        }\n+        for (int ii = 0; ii < params.length; ++ii) {\n+            Object param = params[ii];\n+            if (param != null && !param.getClass().equals(String.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3445ae7c3f11bbe06460832843b1acd7a3fe1d75"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjM5NjYw", "url": "https://github.com/payara/Payara/pull/5044#pullrequestreview-549639660", "createdAt": "2020-12-10T22:02:31Z", "commit": {"oid": "3445ae7c3f11bbe06460832843b1acd7a3fe1d75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjowMjozMVrOIDfSvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjowMjozMVrOIDfSvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUyOTM0Mw==", "bodyText": "For example UniformLogFormatter expects in some code paths java.util.Collection or java.util.Map. Now paremeters are just strings so it may require some adjustment of formatters. (or different approach)", "url": "https://github.com/payara/Payara/pull/5044#discussion_r540529343", "createdAt": "2020-12-10T22:02:31Z", "author": {"login": "sgflt"}, "path": "nucleus/common/common-util/src/main/java/com/sun/common/util/logging/GFLogRecord.java", "diffHunk": "@@ -84,4 +84,25 @@ public String getThreadName() {\n     public void setThreadName(String threadName) {\n         this.threadName = threadName;\n     }\n+\n+    /**\n+     * CUSTOM-55\n+     * in case of an object passed as a parameter, call it's toString() method\n+     * to resolve it's values in the current thread, instead of waiting for queues / et\n+     * so there is no possibility of state change of the object between thread\n+     * @param params\n+     * @return parameter array\n+     */\n+    private Object[] transform(Object[] params) {\n+        if (params == null) {\n+            return null;\n+        }\n+        for (int ii = 0; ii < params.length; ++ii) {\n+            Object param = params[ii];\n+            if (param != null && !param.getClass().equals(String.class)) {\n+                params[ii] = params[ii].toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3445ae7c3f11bbe06460832843b1acd7a3fe1d75"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3231dc8fb5b5793e0e9f6b079fbc10bfffd6919", "author": {"user": {"login": "lprimak", "name": "Lenny Primak"}}, "url": "https://github.com/payara/Payara/commit/a3231dc8fb5b5793e0e9f6b079fbc10bfffd6919", "committedDate": "2020-12-11T02:08:50Z", "message": "force toString() during the same thread as the logging happens so objects\ndon't get passed around different threads in logging and have a chance to get\nout of sync and be inconsistent\nAppend true parameters at the end of log record so logging handlers can access them,\nsuch as JSon logger"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2bd1786299c8cf55faadc702d6c19ba6fa6b7a5", "author": {"user": {"login": "lprimak", "name": "Lenny Primak"}}, "url": "https://github.com/payara/Payara/commit/c2bd1786299c8cf55faadc702d6c19ba6fa6b7a5", "committedDate": "2020-12-11T00:15:09Z", "message": "append original values at the end"}, "afterCommit": {"oid": "a3231dc8fb5b5793e0e9f6b079fbc10bfffd6919", "author": {"user": {"login": "lprimak", "name": "Lenny Primak"}}, "url": "https://github.com/payara/Payara/commit/a3231dc8fb5b5793e0e9f6b079fbc10bfffd6919", "committedDate": "2020-12-11T02:08:50Z", "message": "force toString() during the same thread as the logging happens so objects\ndon't get passed around different threads in logging and have a chance to get\nout of sync and be inconsistent\nAppend true parameters at the end of log record so logging handlers can access them,\nsuch as JSon logger"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTAzMjE5", "url": "https://github.com/payara/Payara/pull/5044#pullrequestreview-551103219", "createdAt": "2020-12-14T07:35:13Z", "commit": {"oid": "a3231dc8fb5b5793e0e9f6b079fbc10bfffd6919"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozNToxM1rOIFDQog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozNToxM1rOIFDQog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2NzIwMg==", "bodyText": "I would probably use paramsIndex instead of originalIndex as a name", "url": "https://github.com/payara/Payara/pull/5044#discussion_r542167202", "createdAt": "2020-12-14T07:35:13Z", "author": {"login": "dmatej"}, "path": "nucleus/common/common-util/src/main/java/com/sun/common/util/logging/GFLogRecord.java", "diffHunk": "@@ -84,4 +84,31 @@ public String getThreadName() {\n     public void setThreadName(String threadName) {\n         this.threadName = threadName;\n     }\n+\n+    /**\n+     * CUSTOM-55\n+     * in case of an object passed as a parameter, call it's toString() method\n+     * to resolve it's values in the current thread, instead of waiting for queues / etc\n+     * so there is no possibility of state change of the object between threads\n+     * Append the original parameters at the end, as they are used for by some logging formatters,\n+     * such as JSON logging formatter for context\n+     *\n+     * @param params\n+     * @return parameter array\n+     */\n+    private Object[] transformParameters(Object[] params) {\n+        if (params == null) {\n+            return null;\n+        }\n+        Object[] result = new Object[params.length * 2];\n+        for (int stringIndex = 0, originalIndex = params.length; stringIndex < params.length;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3231dc8fb5b5793e0e9f6b079fbc10bfffd6919"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89b4ad7a3acabfe7f6616c91dca32a76a4691d3a", "author": {"user": {"login": "lprimak", "name": "Lenny Primak"}}, "url": "https://github.com/payara/Payara/commit/89b4ad7a3acabfe7f6616c91dca32a76a4691d3a", "committedDate": "2020-12-14T17:36:45Z", "message": "refactored wrapping into GFLogRecord.wrap(), removed possible duplicate LogRecord wrapping\nrenamed index variable to be more descriptive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzU2MTc2", "url": "https://github.com/payara/Payara/pull/5044#pullrequestreview-552356176", "createdAt": "2020-12-15T11:28:20Z", "commit": {"oid": "89b4ad7a3acabfe7f6616c91dca32a76a4691d3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 641, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}