{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDU1MTI0", "number": 4772, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzowMzoyNFrOEMW3Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzowNDoxOVrOEMW4Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzkyOTk4OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/metrics/src/main/java/fish/payara/microprofile/metrics/MetricUnitsUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzowMzoyNFrOGuau1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzowMzoyNFrOGuau1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyNTY1Mw==", "bodyText": "Suggestion: Use final class and private default constructor to have align with utility type usage?", "url": "https://github.com/payara/Payara/pull/4772#discussion_r451325653", "createdAt": "2020-07-08T07:03:24Z", "author": {"login": "rdebusscher"}, "path": "appserver/payara-appserver-modules/microprofile/metrics/src/main/java/fish/payara/microprofile/metrics/MetricUnitsUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) 2020 Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.microprofile.metrics;\n+\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+\n+/**\n+ * Utilities around {@link MetricUnits}.\n+ *\n+ * @author Jan Bernitt\n+ */\n+public class MetricUnitsUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f60093ee2770d79fec77cd476c22bc5dd1472c65"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzkzMjE5OnYy", "diffSide": "RIGHT", "path": "appserver/payara-appserver-modules/microprofile/metrics/src/main/java/fish/payara/microprofile/metrics/MetricUnitsUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzowNDoxOVrOGuawLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzowNDoxOVrOGuawLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMyNTk5Nw==", "bodyText": "Suggestion: Unit Test", "url": "https://github.com/payara/Payara/pull/4772#discussion_r451325997", "createdAt": "2020-07-08T07:04:19Z", "author": {"login": "rdebusscher"}, "path": "appserver/payara-appserver-modules/microprofile/metrics/src/main/java/fish/payara/microprofile/metrics/MetricUnitsUtils.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+ *\n+ * Copyright (c) 2020 Payara Foundation and/or its affiliates. All rights reserved.\n+ *\n+ * The contents of this file are subject to the terms of either the GNU\n+ * General Public License Version 2 only (\"GPL\") or the Common Development\n+ * and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+ * may not use this file except in compliance with the License.  You can\n+ * obtain a copy of the License at\n+ * https://github.com/payara/Payara/blob/master/LICENSE.txt\n+ * See the License for the specific\n+ * language governing permissions and limitations under the License.\n+ *\n+ * When distributing the software, include this License Header Notice in each\n+ * file and include the License file at glassfish/legal/LICENSE.txt.\n+ *\n+ * GPL Classpath Exception:\n+ * The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+ * exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+ * file that accompanied this code.\n+ *\n+ * Modifications:\n+ * If applicable, add the following below the License Header, with the fields\n+ * enclosed by brackets [] replaced by your own identifying information:\n+ * \"Portions Copyright [year] [name of copyright owner]\"\n+ *\n+ * Contributor(s):\n+ * If you wish your version of this file to be governed by only the CDDL or\n+ * only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+ * elects to include this software in this distribution under the [CDDL or GPL\n+ * Version 2] license.\"  If you don't indicate a single choice of license, a\n+ * recipient has the option to distribute your version of this file under\n+ * either the CDDL, the GPL Version 2 or to extend the choice of license to\n+ * its licensees as provided above.  However, if you add GPL Version 2 code\n+ * and therefore, elected the GPL Version 2 license, then the option applies\n+ * only if the new code is made subject to such option by the copyright\n+ * holder.\n+ */\n+package fish.payara.microprofile.metrics;\n+\n+import org.eclipse.microprofile.metrics.Metadata;\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+\n+/**\n+ * Utilities around {@link MetricUnits}.\n+ *\n+ * @author Jan Bernitt\n+ */\n+public class MetricUnitsUtils {\n+\n+    public static String baseUnit(String unit) {\n+        switch (unit) {\n+        case MetricUnits.BITS:\n+        case MetricUnits.KILOBITS:\n+        case MetricUnits.MEGABITS:\n+        case MetricUnits.GIGABITS:\n+        case MetricUnits.KIBIBITS:\n+        case MetricUnits.MEBIBITS:\n+        case MetricUnits.GIBIBITS:\n+        case MetricUnits.BYTES:\n+        case MetricUnits.KILOBYTES:\n+        case MetricUnits.MEGABYTES:\n+        case MetricUnits.GIGABYTES:\n+            return MetricUnits.BYTES;\n+        case MetricUnits.NANOSECONDS:\n+        case MetricUnits.MICROSECONDS:\n+        case MetricUnits.MILLISECONDS:\n+        case MetricUnits.SECONDS:\n+        case MetricUnits.MINUTES:\n+        case MetricUnits.HOURS:\n+        case MetricUnits.DAYS:\n+            return MetricUnits.SECONDS;\n+        default:\n+            return unit;\n+        }\n+    }\n+\n+    public static Number scaleToBaseUnit(Number value, Metadata metadata) {\n+        if (!metadata.getUnit().isPresent()) {\n+            return value;\n+        }\n+        String unit = metadata.getUnit().get();\n+        return scaleToBaseUnit(value, unit);\n+    }\n+\n+    public static Number scaleToBaseUnit(Number value, String unit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f60093ee2770d79fec77cd476c22bc5dd1472c65"}, "originalPosition": 87}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1282, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}