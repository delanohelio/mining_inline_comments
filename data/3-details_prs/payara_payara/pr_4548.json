{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNDk1Mzkz", "number": 4548, "title": "CUSTCOM-12 Fixed node configuration in admin UI", "bodyText": "Description\nThis is a bug fix for incorrect GUI behavior when configuring Nodes, especially SSH.\n\n\nfixed logging of errors (did not log anything in some types of failures)\n\n\nfixed distribution of error messages to the user (I still don't like it's formatting, but that's not a thing of this issue)\n\n\nfixed updating SSH Node connector when moving from password to keyfile and vice-versa\n\n\nvalidation before the update ends with verification that the keyfile exists. It does not test it's content. Originally it merged defaults, existing configuration and new configuration, so finally it ended with several kinds of exceptions (some of them were swallowed, so GUI showed only \"See server.log\", but there was nothing).\n\n\nImportant Info\nTesting\nNew tests\n\nno new automatic tests\n\nTesting Performed\nManual\n\nmanual testing GUI, looking on changes in server.log and domain.xml\ncreate SSH Node, update SSH configuration, ping\ncreate DCOM node, update it's configuration, ping\n\nasadmin create-node-dcom --force=true --nodehost=nodehost123 --passwordfile=./passwordfile-windows.txt  cmd-dcom001\nWarning: some parameters appear to be invalid.\nUnknown host nodehost123\nContinuing with node creation due to use of --force.\nCommand create-node-dcom executed successfully.\n\nasadmin create-node-ssh --force=true --nodehost=localhost1 cmd-ssh001\nWarning: some parameters appear to be invalid.\nUnknown host localhost1\nContinuing with node creation due to use of --force.\nCommand create-node-ssh executed successfully.\n\nasadmin create-node-ssh --force=true --nodehost=localhost --sshkeyfile=./sss cmd-ssh002\nWarning: some parameters appear to be invalid.\nKey file path ./sss must be an absolute path.\nContinuing with node creation due to use of --force.\nCommand create-node-ssh executed successfully.\n\nasadmin create-node-ssh --force=true --nodehost=localhost --sshkeyfile=/app/appservers/passwords/payara-test-id_rsa cmd-ssh002\nremote failure: Configuration not added. A Node instance with a \"cmd-ssh002\" name already exists in the configuration\nCommand create-node-ssh failed.\n\nasadmin create-node-ssh --force=true --nodehost=localhost --sshkeyfile=/app/appservers/passwords/payara-test-id_rsa cmd-ssh003\nCommand create-node-ssh executed successfully.\n\nasadmin update-node-ssh --force=true --nodehost=localhost --sshport=32000 cmd-ssh003\nCommand update-node-ssh executed successfully.\n\nasadmin update-node-ssh --force=true --nodehost=localhost --sshport=22 --sshkeyfile=/app/appservers/passwords/payara-test-id_rsad cmd-ssh003\nWarning: some parameters appear to be invalid.\nKey file /app/appservers/passwords/payara-test-id_rsad not found. The key file path must be reachable by the DAS.\nContinuing with node update due to use of --force.\nCommand update-node-ssh executed successfully.\n\nasadmin update-node-ssh --force=true --nodehost=localhost --sshport=22 --sshkeyfile=/app/appservers/passwords/payara-test-id_rsa cmd-ssh003\nCommand update-node-ssh executed successfully.\n\nsadmin update-node-ssh --force=true --nodehost=localhost --sshport=22 --sshkeyfile=/app/appservers/passwords/payara-test-id_rsa --sshuser=payara-test cmd-ssh003\nCommand update-node-ssh executed successfully.\n\nTest suites executed\n\n\nQuicklook - NO\nPayara Samples - OK\nJava EE7 Samples - NO\nJava EE8 Samples - NO\nPayara Private Tests - NO\nPayara Microprofile TCKs Runner - NO\nJakarta TCKs - NO\nMojarra - NO\nCargo Tracker - NO", "createdAt": "2020-03-04T11:28:53Z", "url": "https://github.com/payara/Payara/pull/4548", "merged": true, "mergeCommit": {"oid": "52d9c9354728612ba3402141a78b78b4ce6a3c7c"}, "closed": true, "closedAt": "2020-03-24T17:56:02Z", "author": {"login": "dmatej"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKVQ4NABqjMwOTYwOTIzNzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ2NX0gFqTM4MDUzMDk0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ef481bcbd808ad225c0561a9722fd92647b5d4b", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/0ef481bcbd808ad225c0561a9722fd92647b5d4b", "committedDate": "2020-03-04T10:28:35Z", "message": "CUSTCOM-12 Trivial fixes, formatting and licenses"}, "afterCommit": {"oid": "90de770fc2f73bde17f84a2826334384f2a26783", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/90de770fc2f73bde17f84a2826334384f2a26783", "committedDate": "2020-03-04T11:31:35Z", "message": "CUSTCOM-12 Trivial fixes, formatting and licenses"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTI3ODgx", "url": "https://github.com/payara/Payara/pull/4548#pullrequestreview-375927881", "createdAt": "2020-03-17T10:56:44Z", "commit": {"oid": "90de770fc2f73bde17f84a2826334384f2a26783"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90de770fc2f73bde17f84a2826334384f2a26783", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/90de770fc2f73bde17f84a2826334384f2a26783", "committedDate": "2020-03-04T11:31:35Z", "message": "CUSTCOM-12 Trivial fixes, formatting and licenses"}, "afterCommit": {"oid": "28366141c6ed30a8c970d47b587a00eb44da4648", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/28366141c6ed30a8c970d47b587a00eb44da4648", "committedDate": "2020-03-18T13:51:25Z", "message": "CUSTCOM-12 Trivial fixes, formatting and licenses"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2OTQwODAz", "url": "https://github.com/payara/Payara/pull/4548#pullrequestreview-376940803", "createdAt": "2020-03-18T14:52:32Z", "commit": {"oid": "28366141c6ed30a8c970d47b587a00eb44da4648"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MzUxNDU1", "url": "https://github.com/payara/Payara/pull/4548#pullrequestreview-378351455", "createdAt": "2020-03-20T09:59:23Z", "commit": {"oid": "13adba24347055d1bd6b63a1c204fb6c92a28d54"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo1OToyM1rOF5NjHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMDowMDowN1rOF5Nkfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzNTEzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Param(name = \"sshauthtype\", optional=true)\n          \n          \n            \n                @Param(name = \"sshauthtype\", optional = true)\n          \n      \n    \n    \n  \n\n\u0ca0_\u0ca0", "url": "https://github.com/payara/Payara/pull/4548#discussion_r395535132", "createdAt": "2020-03-20T09:59:23Z", "author": {"login": "Pandrex247"}, "path": "nucleus/cluster/admin/src/main/java/com/sun/enterprise/v3/admin/cluster/UpdateNodeSshCommand.java", "diffHunk": "@@ -72,6 +73,9 @@\n     private String sshportInSubClass;\n     @Param(name = \"sshuser\", optional = true)\n     private String sshuserInSubClass;\n+    /** {@link SshAuthType} name */\n+    @Param(name = \"sshauthtype\", optional=true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13adba24347055d1bd6b63a1c204fb6c92a28d54"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzNTQwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, //\n          \n          \n            \n                            parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE,", "url": "https://github.com/payara/Payara/pull/4548#discussion_r395535405", "createdAt": "2020-03-20T09:59:56Z", "author": {"login": "Pandrex247"}, "path": "nucleus/cluster/admin/src/main/java/com/sun/enterprise/v3/admin/cluster/UpdateNodeRemoteCommand.java", "diffHunk": "@@ -203,21 +203,28 @@ private ParameterMap createValidationParameters(final Node node) {\n \n         final SshAuth ssha = sshc.getSshAuth();\n         parameters.insert(NodeUtils.PARAM_REMOTEUSER, remoteUser, getSupplier(ssha, ssha::getUserName));\n-\n-        if (sshkeyfile == null && remotepassword == null) {\n-            // use previous values if they are set\n-            parameters.insert(NodeUtils.PARAM_SSHPASSWORD, null, getSupplier(ssha, ssha::getPassword));\n-            parameters.insert(NodeUtils.PARAM_SSHKEYFILE, null, getSupplier(ssha, ssha::getKeyfile));\n-            parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, null, getSupplier(ssha, ssha::getKeyPassphrase));\n-        } else if (sshkeyfile == null) {\n-            // keyfile is preferred over password.\n-            // if keyfile is not set, configure password.\n-            parameters.insert(NodeUtils.PARAM_SSHPASSWORD, remotepassword, getSupplier(ssha, ssha::getPassword));\n+        parameters.insert(NodeUtils.PARAM_SSHAUTHTYPE, sshAuthType, getSupplier(ssha, () -> null));\n+\n+        if (sshAuthType == null) {\n+            if (sshkeyfile == null && remotepassword == null) {\n+                parameters.insert(NodeUtils.PARAM_SSHPASSWORD, null, getSupplier(ssha, ssha::getPassword));\n+                parameters.insert(NodeUtils.PARAM_SSHKEYFILE, null, getSupplier(ssha, ssha::getKeyfile));\n+                parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, null, getSupplier(ssha, ssha::getKeyPassphrase));\n+            } else if (remotepassword != null) {\n+                parameters.insert(NodeUtils.PARAM_SSHPASSWORD, remotepassword, getSupplier(ssha, ssha::getPassword));\n+            } else {\n+                parameters.insert(NodeUtils.PARAM_SSHKEYFILE, sshkeyfile, getSupplier(ssha, ssha::getKeyfile));\n+                parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13adba24347055d1bd6b63a1c204fb6c92a28d54"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzNTQ4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, //\n          \n          \n            \n                            parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE,", "url": "https://github.com/payara/Payara/pull/4548#discussion_r395535487", "createdAt": "2020-03-20T10:00:07Z", "author": {"login": "Pandrex247"}, "path": "nucleus/cluster/admin/src/main/java/com/sun/enterprise/v3/admin/cluster/UpdateNodeRemoteCommand.java", "diffHunk": "@@ -203,21 +203,28 @@ private ParameterMap createValidationParameters(final Node node) {\n \n         final SshAuth ssha = sshc.getSshAuth();\n         parameters.insert(NodeUtils.PARAM_REMOTEUSER, remoteUser, getSupplier(ssha, ssha::getUserName));\n-\n-        if (sshkeyfile == null && remotepassword == null) {\n-            // use previous values if they are set\n-            parameters.insert(NodeUtils.PARAM_SSHPASSWORD, null, getSupplier(ssha, ssha::getPassword));\n-            parameters.insert(NodeUtils.PARAM_SSHKEYFILE, null, getSupplier(ssha, ssha::getKeyfile));\n-            parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, null, getSupplier(ssha, ssha::getKeyPassphrase));\n-        } else if (sshkeyfile == null) {\n-            // keyfile is preferred over password.\n-            // if keyfile is not set, configure password.\n-            parameters.insert(NodeUtils.PARAM_SSHPASSWORD, remotepassword, getSupplier(ssha, ssha::getPassword));\n+        parameters.insert(NodeUtils.PARAM_SSHAUTHTYPE, sshAuthType, getSupplier(ssha, () -> null));\n+\n+        if (sshAuthType == null) {\n+            if (sshkeyfile == null && remotepassword == null) {\n+                parameters.insert(NodeUtils.PARAM_SSHPASSWORD, null, getSupplier(ssha, ssha::getPassword));\n+                parameters.insert(NodeUtils.PARAM_SSHKEYFILE, null, getSupplier(ssha, ssha::getKeyfile));\n+                parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, null, getSupplier(ssha, ssha::getKeyPassphrase));\n+            } else if (remotepassword != null) {\n+                parameters.insert(NodeUtils.PARAM_SSHPASSWORD, remotepassword, getSupplier(ssha, ssha::getPassword));\n+            } else {\n+                parameters.insert(NodeUtils.PARAM_SSHKEYFILE, sshkeyfile, getSupplier(ssha, ssha::getKeyfile));\n+                parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, //\n+                    sshkeypassphrase, getSupplier(ssha, ssha::getKeyPassphrase));\n+            }\n         } else {\n-            // if keyfile is set, don't configure password.\n-            parameters.insert(NodeUtils.PARAM_SSHKEYFILE, sshkeyfile, getSupplier(ssha, ssha::getKeyfile));\n-            parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, //\n-                sshkeypassphrase, getSupplier(ssha, ssha::getKeyPassphrase));\n+            if (SshAuthType.KEY.name().equals(sshAuthType)) {\n+                parameters.insert(NodeUtils.PARAM_SSHKEYFILE, sshkeyfile, getSupplier(ssha, ssha::getKeyfile));\n+                parameters.insert(NodeUtils.PARAM_SSHKEYPASSPHRASE, //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13adba24347055d1bd6b63a1c204fb6c92a28d54"}, "originalPosition": 99}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13adba24347055d1bd6b63a1c204fb6c92a28d54", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/13adba24347055d1bd6b63a1c204fb6c92a28d54", "committedDate": "2020-03-19T17:19:14Z", "message": "CUSTCOM-12 Fixed SSH node configuration in UI\n\n- created enum SshAuthType (KEY/PASSWORD) to distinguish which variant should\n  be saved if we don't set neither password nor keyfile\n- new parameter sshauthtype to allow switching with defaults"}, "afterCommit": {"oid": "34ca25ecba5ff8913d6212a5cf550c6f15f7fa8a", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/34ca25ecba5ff8913d6212a5cf550c6f15f7fa8a", "committedDate": "2020-03-20T13:09:24Z", "message": "CUSTCOM-12 Fixed SSH node configuration in UI\n\n- created enum SshAuthType (KEY/PASSWORD) to distinguish which variant should\n  be saved if we don't set neither password nor keyfile\n- new parameter sshauthtype to allow switching with defaults"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8645b501fcfc94b73ddaf5222062e849a1c183f7", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/8645b501fcfc94b73ddaf5222062e849a1c183f7", "committedDate": "2020-03-21T19:37:58Z", "message": "CUSTCOM-12 Added some documentation for sshauthtype parameter"}, "afterCommit": {"oid": "944d7cd6a9e87ff3a9762a05ce29d538460600fb", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/944d7cd6a9e87ff3a9762a05ce29d538460600fb", "committedDate": "2020-03-21T19:38:16Z", "message": "CUSTCOM-12 Added some documentation for sshauthtype parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b012860eb855f13f0c842309f7f10095cc7a4b6d", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/b012860eb855f13f0c842309f7f10095cc7a4b6d", "committedDate": "2020-03-21T19:38:16Z", "message": "CUSTCOM-12 Fixed GUI editation of Node settings\n\n- removed \"random\" settings of psSelected/winPsSelected\n- removed configuration of psSelect from convertNodePswd\n- created presetNodeAuthSelectBox\n- enabled autocomplete, without it was configuration hostile except password,\n  which were still remembered by Firefox\n- fixed nodeButtons.inc - password/keystore gui\n- fixed UpdateNodeCommand\n  - password/keystore gui, old version used previous version\n  - reimplemented validation\n- renamed PARAM_REMOTEPASSWORD to PARAM_SSHPASSWORD\n- ParameterMap - implemented additional methods for better readibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6978f30d9e0787ba4bf9390d9fb24d2f318bc64", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/e6978f30d9e0787ba4bf9390d9fb24d2f318bc64", "committedDate": "2020-03-21T19:38:16Z", "message": "CUSTCOM-12 Fixed error logging and showing errors to user in GUI\n\n- report classes have toString now (useful for debugging and logging)\n- GuiUtil - reduced copy and paste and using sane filtering\n- RestUtil2 + RestApiHandlers\n  - fixed processing error messages using new method in GuiUtil\n  - expecting JSON, but it will not fail if the response would be unparseable,\n    it would only print error to log."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb7e2e91f8ac6e0264b6406ed95c7f84cf40d9ae", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/eb7e2e91f8ac6e0264b6406ed95c7f84cf40d9ae", "committedDate": "2020-03-21T19:38:16Z", "message": "CUSTCOM-12 Trivial fixes, formatting and licenses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "754be0e2b1bd98039e0ddf0f7968187f8fc140e0", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/754be0e2b1bd98039e0ddf0f7968187f8fc140e0", "committedDate": "2020-03-21T19:38:16Z", "message": "CUSTCOM-12 Fixed SSH node configuration in UI\n\n- created enum SshAuthType (KEY/PASSWORD) to distinguish which variant should\n  be saved if we don't set neither password nor keyfile\n- new parameter sshauthtype to allow switching with defaults"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f9c432c5c8a78cee148e3276fa057ebe4647f3b", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/4f9c432c5c8a78cee148e3276fa057ebe4647f3b", "committedDate": "2020-03-21T19:38:16Z", "message": "CUSTCOM-12 ConfigSupport logging, removed DcomUtils unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "944d7cd6a9e87ff3a9762a05ce29d538460600fb", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/944d7cd6a9e87ff3a9762a05ce29d538460600fb", "committedDate": "2020-03-21T19:38:16Z", "message": "CUSTCOM-12 Added some documentation for sshauthtype parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5922b6630567e34a9b66762f4dd53c959401ba81", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/5922b6630567e34a9b66762f4dd53c959401ba81", "committedDate": "2020-03-23T14:44:29Z", "message": "CUSTCOM-12 Fixed \"service has been unbound\" when updating sshuser\n\n- seems that when we are updating sshauth element, setSshConnector must be\n  already called"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTMwOTQ0", "url": "https://github.com/payara/Payara/pull/4548#pullrequestreview-380530944", "createdAt": "2020-03-24T17:18:21Z", "commit": {"oid": "5922b6630567e34a9b66762f4dd53c959401ba81"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 776, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}