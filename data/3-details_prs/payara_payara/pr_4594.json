{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NjMxNDIw", "number": 4594, "title": "CUSTCOM-130 Better compatibility of docker images", "bodyText": "Description\n\nFixes incompatibility with debian/ubuntu based JDK11 images\nFixes warning about unsupported JVM option\nAdds features - JVM memory settings for Micro and Server-Full and JVM_ARGS for Micro\nAll Dockerfiles use same commands for same things\nURL for gpg can be changed with -D parameter\n\nImportant Info\nTesting\nJDK8\nmvn clean install -PBuildExtras,BuildDockerImages -pl :docker-images -amd\nJDK11\nmvn clean install -PBuildExtras,BuildDockerImages -pl :docker-images -amd -Ddocker.payara.tag=5.202-SNAPSHOT-JDK11 -Ddocker.java.repository=adoptopenjdk/openjdk11 -Ddocker.java.tag=jdk-11.0.6_10-debian-slim\nPayara4\n\nBuild some Payara4 versions including all required distribution packages\nThis will generate docker images\nPayaraServerNodeTest will fail, because there is a difference in syntax, but other images should pass their respective tests\n\nmvn clean install -PBuildExtras,BuildDockerImages -pl :docker-images -amd -Dpayara.version=4.1.2.191.14-SNAPSHOT -Ddocker.payara.tag=4.1.2.191.14-SNAPSHOT -Ddocker.payara.rootDirectoryName=payara41 -Ddocker.payara.domainName=payaradomain\nChanging env variables, extending\ndocker create --name payaramicroxxx --env \"MEM_XSS=2m\" --env MEM_MAX_RAM_PERCENTAGE=25.0 payara/micro:latest\n# replace dcb7e7328f90 with a result of docker create\ndocker start dcb7e7328f90\ndocker logs dcb7e7328f90\n\nNotes\n\nI need a tester with Mac and Windows, all tests were done on Linux, but I know that other systems have limitations on Docker and TestContainers.\nEDIT: passed on  Kubuntu, Windows 10 and Mac", "createdAt": "2020-03-27T09:01:14Z", "url": "https://github.com/payara/Payara/pull/4594", "merged": true, "mergeCommit": {"oid": "f540098204ecb41c014eaac657af68e26ed83fc2"}, "closed": true, "closedAt": "2020-04-29T13:00:03Z", "author": {"login": "dmatej"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRs_TtAFqTM4MjY4MjQ4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccXLCXAFqTQwMjU5NTIwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjgyNDg2", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-382682486", "createdAt": "2020-03-27T09:07:46Z", "commit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTowNzo0NlrOF8ohtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTowNzo0NlrOF8ohtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMjg2OA==", "bodyText": "As in other Dockerfiles, despite it uses same directory here", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399122868", "createdAt": "2020-03-27T09:07:46Z", "author": {"login": "dmatej"}, "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,20 +4,21 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n+ENV HOME_DIR=/opt/payara", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjgyOTIx", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-382682921", "createdAt": "2020-03-27T09:08:27Z", "commit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTowODoyN1rOF8ojKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTowODoyN1rOF8ojKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMzI0MQ==", "bodyText": "Evil block - this works in alpine, debian and ubuntu", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399123241", "createdAt": "2020-03-27T09:08:27Z", "author": {"login": "dmatej"}, "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,20 +4,21 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n+ENV HOME_DIR=/opt/payara\n+ENV PAYARA_DIR=${HOME_DIR} \\\n     DEPLOY_DIR=/opt/payara/deployments\n \n # Create and set the Payara user and working directory owned by the new user\n RUN true \\\n-    && addgroup payara \\\n-    && adduser -D -h ${PAYARA_HOME} -H -s /bin/bash payara -G payara \\\n+    && addgroup --gid 1000 payara \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjgwOTA0", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-382680904", "createdAt": "2020-03-27T09:05:23Z", "commit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOTowNToyM1rOF8ocrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOToyNToyMFrOF8pIsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMTU4Mw==", "bodyText": "Unless there is special reason for that, we should keep single add and thus single intermediate image.", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399121583", "createdAt": "2020-03-27T09:05:23Z", "author": {"login": "pdudits"}, "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -29,25 +29,25 @@ ENV PATH=\"${PATH}:${PAYARA_DIR}/bin\"\n ARG TINI_VERSION=v0.18.0\n \n # Download tini\n-ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n-    https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /\n+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\n+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /tini.asc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEzMjg0OA==", "bodyText": "Since this is source of majority of build failures, I'd propose specific exit code (until we implement different issue for taking this away completely from main build).\nLike (gpg --recvkeys... || exit 55)", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399132848", "createdAt": "2020-03-27T09:25:20Z", "author": {"login": "pdudits"}, "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -29,25 +29,25 @@ ENV PATH=\"${PATH}:${PAYARA_DIR}/bin\"\n ARG TINI_VERSION=v0.18.0\n \n # Download tini\n-ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n-    https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /\n+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\n+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /tini.asc\n \n RUN true \\\n     # Install dependencies\n     && apt-get update \\\n-    && apt-get install -y coreutils gpg \\\n+    && apt-get install -y gpg \\\n     && rm -rf /var/lib/apt/lists/* \\\n     # Create and set the Payara user and working directory owned by the new user\n-    && groupadd --gid 1000 payara \\\n-    && useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} payara -g payara \\\n+    && addgroup --gid 1000 payara \\\n+    && adduser --system --uid 1000 --no-create-home --shell /bin/bash --home \"${HOME_DIR}\" --gecos \"\" --ingroup payara payara \\\n     && echo payara:payara | chpasswd \\\n     && mkdir -p ${DEPLOY_DIR} \\\n     && mkdir -p ${CONFIG_DIR} \\\n     && mkdir -p ${SCRIPT_DIR} \\\n     && chown -R payara: ${HOME_DIR} \\\n     # Verify tini\n-    && gpg --batch --keyserver \"hkp://ipv4.pool.sks-keyservers.net\" --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \\\n-    && gpg --batch --verify /tini.asc /tini \\\n+    && gpg --verbose --keyserver @docker.keyserver.url@ --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjk1NDcw", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-382695470", "createdAt": "2020-03-27T09:26:38Z", "commit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOToyNjozOFrOF8pLhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwOToyNjozOFrOF8pLhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEzMzU3NQ==", "bodyText": "The change of the ENV name will affect all users who extend our images and possible require them to adjust their dockerfiles.", "url": "https://github.com/payara/Payara/pull/4594#discussion_r399133575", "createdAt": "2020-03-27T09:26:38Z", "author": {"login": "rdebusscher"}, "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,20 +4,21 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n+ENV HOME_DIR=/opt/payara", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyMjg2OA=="}, "originalCommit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f28eedcc4945a65fd4d407b7414511f45ecb6a1", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/9f28eedcc4945a65fd4d407b7414511f45ecb6a1", "committedDate": "2020-03-27T08:51:32Z", "message": "CUSTCOM-130 MaxRAMFraction replaced by UseContainerSupport+MaxRAMPercentage\n\n- it was already used in micro\n- JDK8 supports it since u191 too"}, "afterCommit": {"oid": "b26978beb8c82d4f9a559cc4a23124347ee87385", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/b26978beb8c82d4f9a559cc4a23124347ee87385", "committedDate": "2020-04-06T15:53:39Z", "message": "CUSTCOM-130 PAYARA_HOME is back - for backward compatibility"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4ODc5NjE0", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-388879614", "createdAt": "2020-04-07T08:07:39Z", "commit": {"oid": "b24088d046dfd8414e676b696bab4e56039b9ca9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowNzozOVrOGB31sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowNzozOVrOGB31sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNjYyNA==", "bodyText": "Just my 2 cents: I added tini in the full server image because any shell is not a proper init daemon. You might argue that Docker can use a tini-wrapper, but IMHO it should be done within the image, as there are more container and orchestration environments, which don't wrap it.", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404616624", "createdAt": "2020-04-07T08:07:39Z", "author": {"login": "poikilotherm"}, "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,23 +4,29 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n-    DEPLOY_DIR=/opt/payara/deployments\n+# PAYARA_HOME is deprecated - it is here for backward compatibility\n+ENV PAYARA_HOME=/opt/payara\n+ENV HOME_DIR=${PAYARA_HOME}\n+ENV PAYARA_DIR=${HOME_DIR} \\\n+    DEPLOY_DIR=/opt/payara/deployments \\\n+    JVM_ARGS=\"\" \\\n+    MEM_MAX_RAM_PERCENTAGE=70.0 \\\n+    MEM_XSS=512k\n \n # Create and set the Payara user and working directory owned by the new user\n RUN true \\\n-    && addgroup payara \\\n-    && adduser -D -h ${PAYARA_HOME} -H -s /bin/bash payara -G payara \\\n+    && addgroup --gid 1000 payara \\\n+    && adduser --system --uid 1000 --no-create-home --shell /bin/bash --home \"${HOME_DIR}\" --gecos \"\" --ingroup payara payara \\\n     && echo payara:payara | chpasswd \\\n     && mkdir -p ${DEPLOY_DIR}  \\\n-    && chown -R payara:payara ${PAYARA_HOME} \\\n+    && chown -R payara:payara ${HOME_DIR} \\\n     && true\n \n USER payara\n-WORKDIR ${PAYARA_HOME}\n+WORKDIR ${HOME_DIR}\n \n COPY maven/artifacts/payara-micro.jar .\n \n # Default command to run\n-ENTRYPOINT [\"java\", \"-XX:+UseContainerSupport\", \"-XX:MaxRAMPercentage=90.0\", \"-jar\", \"payara-micro.jar\"]\n+ENTRYPOINT [\"sh\", \"-c\", \"java -XX:MaxRAMPercentage=${MEM_MAX_RAM_PERCENTAGE} -Xss${MEM_XSS} -XX:+UseContainerSupport ${JVM_ARGS} -jar payara-micro.jar\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b24088d046dfd8414e676b696bab4e56039b9ca9"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4ODgxOTQ5", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-388881949", "createdAt": "2020-04-07T08:10:44Z", "commit": {"oid": "b24088d046dfd8414e676b696bab4e56039b9ca9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODoxMDo0NFrOGB39QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODoxMDo0NFrOGB39QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxODU2MQ==", "bodyText": "If you guys don't want gpg et al in the resulting image, this could as well be done in a multistage build step. This might also be charming as it could be cached for later builds, avoiding build failures.", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404618561", "createdAt": "2020-04-07T08:10:44Z", "author": {"login": "poikilotherm"}, "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -35,26 +37,26 @@ ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n RUN true \\\n     # Install dependencies\n     && apt-get update \\\n-    && apt-get install -y coreutils gpg \\\n+    && apt-get install -y gpg \\\n     && rm -rf /var/lib/apt/lists/* \\\n     # Create and set the Payara user and working directory owned by the new user\n-    && groupadd --gid 1000 payara \\\n-    && useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} payara -g payara \\\n+    && addgroup --gid 1000 payara \\\n+    && adduser --system --uid 1000 --no-create-home --shell /bin/bash --home \"${HOME_DIR}\" --gecos \"\" --ingroup payara payara \\\n     && echo payara:payara | chpasswd \\\n     && mkdir -p ${DEPLOY_DIR} \\\n     && mkdir -p ${CONFIG_DIR} \\\n     && mkdir -p ${SCRIPT_DIR} \\\n     && chown -R payara: ${HOME_DIR} \\\n     # Verify tini", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b24088d046dfd8414e676b696bab4e56039b9ca9"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4ODg2NDk2", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-388886496", "createdAt": "2020-04-07T08:16:39Z", "commit": {"oid": "b24088d046dfd8414e676b696bab4e56039b9ca9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODoxNjo0MFrOGB4LyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODoxNjo0MFrOGB4LyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYyMjI4MQ==", "bodyText": "-XX\\:+UseCGroupMemoryLimitForHeap is deprecated since Java 10, it has been superseded by -XX\\:+UseContainerSupport (which is backported to Java 8u192+ and enabled by default). IMHO it should be removed, together with -XX\\:+UnlockExperimentalVMOptions.", "url": "https://github.com/payara/Payara/pull/4594#discussion_r404622281", "createdAt": "2020-04-07T08:16:40Z", "author": {"login": "poikilotherm"}, "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -66,14 +68,13 @@ RUN true \\\n     && ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} start-domain ${DOMAIN_NAME} \\\n     && ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} enable-secure-admin \\\n     && for MEMORY_JVM_OPTION in \\\n-       $(${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} list-jvm-options | grep \"Xm[sx]\"); \\\n+       $(${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} list-jvm-options | grep \"Xm[sx]\\|Xss\"); \\\n        do\\\n          ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} delete-jvm-options $MEMORY_JVM_OPTION;\\\n        done \\\n-    # FIXME: when upgrading this container to Java 10+, this needs to be changed to\n-    #        '-XX:+UseContainerSupport' and '-XX:MaxRAMPercentage'\n     && ${PAYARA_DIR}/bin/asadmin --user=${ADMIN_USER} --passwordfile=${PASSWORD_FILE} create-jvm-options \\\n-      '-XX\\:+UnlockExperimentalVMOptions:-XX\\:+IgnoreUnrecognizedVMOptions:-XX\\:+UseCGroupMemoryLimitForHeap:-XX\\:MaxRAMFraction=1' \\\n+      '-XX\\:+UnlockExperimentalVMOptions:-XX\\:+IgnoreUnrecognizedVMOptions:-XX\\:+UseCGroupMemoryLimitForHeap:-XX\\:+UseContainerSupport:-XX\\:MaxRAMPercentage=${ENV=MEM_MAX_RAM_PERCENTAGE}:-Xss${ENV=MEM_XSS}' \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b24088d046dfd8414e676b696bab4e56039b9ca9"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMTkzMzIz", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-390193323", "createdAt": "2020-04-08T17:42:39Z", "commit": {"oid": "aa6910d981d2b28a5aeff00019875969b9ecac80"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4869d1cab50d98328b1af3a3b123ddb7caa4652", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/e4869d1cab50d98328b1af3a3b123ddb7caa4652", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Fixed incompatibility with debian-based docker images\n\n- adduser has different syntax in each distribution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3295116d4a6a3c3a5804afc31d295854021db890", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/3295116d4a6a3c3a5804afc31d295854021db890", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Better work with gpg\n\n- it often fails, so you can use only -Ddocker.verbose to watch what it does\n  and to see why it failed.\n- the url is not filtered from pom.xml file, so you can use another url\n  ie. -Ddocker.keyserver.url=hkp://ipv4.pool.sks-keyservers.net\n  or  -Ddocker.keyserver.url=hkp://p80.pool.sks-keyservers.net:80"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75a593936cf8150b391cacd24240dc5d6d7767db", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/75a593936cf8150b391cacd24240dc5d6d7767db", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Upgraded TestContainers and removed unused imports from test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc345f88ebe97866f5084d8649020a54c54135c7", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/dc345f88ebe97866f5084d8649020a54c54135c7", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Synchronized Dockerfiles and compatible adduser\n\n- all dockerfiles use same mechanisms and conventions\n- useradd and groupadd are not in alpine by default\n- adduser and addgroup abbreviated parameters are ambiguous on debian/ubuntu\n- => removed coreutils dependency, using adduser and addgroup with long params\n- it is also a bit faster\n- tested with\n  - mvn clean install -PBuildExtras,BuildDockerImages -pl :docker-images -amd\n  - mvn clean install -PBuildExtras,BuildDockerImages -pl :docker-images -amd\n    -Ddocker.java.repository=adoptopenjdk/openjdk11\n    -Ddocker.java.tag=x86_64-debian-jdk-11.0.5_10"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "752c21e8ae7a9280e39a9a9122512ceae34a1ce9", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/752c21e8ae7a9280e39a9a9122512ceae34a1ce9", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 MaxRAMFraction replaced by UseContainerSupport+MaxRAMPercentage\n\n- it was already used in micro\n- JDK8 supports it since u191 too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "877095e20bed45fe8b63e2dd5ecc6ccc5f4f8ed0", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/877095e20bed45fe8b63e2dd5ecc6ccc5f4f8ed0", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Payara4 images support\n\n- difference is only in two properties, so you have to specify:\n  - docker.payara.rootDirectoryName - payara5/payara41\n  - payara.version - 5.202-SNAPSHOT/4.1.2.191.13-SNAPSHOT\n  - and usually also dockerfile.tag - 5.202-20200402 etc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97f03a7afde3cc45d66a15d5a8f12016db8c027b", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/97f03a7afde3cc45d66a15d5a8f12016db8c027b", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Do not delete older images!\n\n- it always deleted all my images in same repository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0538bc4523c8ff388eb15718753a6df40040000f", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/0538bc4523c8ff388eb15718753a6df40040000f", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Enabled verbose logging\n\n- because especially gpg signing randomly crashes, but also apt or other\n  commands fail from time to time and you don't have anything useful in logs\n- it's not so many lines worth hiding in the name of effectivity."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92cd676396b16e509252770fd69eb7a28ad929cd", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/92cd676396b16e509252770fd69eb7a28ad929cd", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 PAYARA_HOME is back - for backward compatibility"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "010c3d0e139559b223f1b4113f7e4f8e5410e520", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/010c3d0e139559b223f1b4113f7e4f8e5410e520", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Reverting ADD based on Patrik's review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "261a3e781006a45880d4bcbbabb605c651718839", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/261a3e781006a45880d4bcbbabb605c651718839", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Extended support for JVM options, especially memory settings\n\n- server-node - no changes, configuration is obtained from DAS\n- server-full and micro\n  - basic configuration for DAS\n  - MEM_MAX_RAM_PERCENTAGE aka -XX:MaxRAMPercentage\n    - 70% of host memory by default - the rest for OS+NIO+stacks\n  - MEM_XSS aka Xss\n    - default 512k; enough for most applications\n- micro\n  - JVM_ARGS - possibility to add more JVM options\n- hint for extending these docker images: read docker create --help"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27000d9f85228e2032e16efa5d500465f549895d", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/27000d9f85228e2032e16efa5d500465f549895d", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Removed obsoleted JVM options from server-full dockerfile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "540fc57230a1f4925b2e0c75f02ed9b275b9ed3c", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/540fc57230a1f4925b2e0c75f02ed9b275b9ed3c", "committedDate": "2020-04-18T10:09:19Z", "message": "CUSTCOM-130 Fixed Payara Micro docker image\n\n- deployment did not work\n- extended test to deploy a trivial servlet application"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "646f5d6eeb31434d7cbb2963f2d9588ed7ee3f48", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/646f5d6eeb31434d7cbb2963f2d9588ed7ee3f48", "committedDate": "2020-04-18T10:09:43Z", "message": "CUSTCOM-130 Using target directory in tests instead of temporary file"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd08a2b40b6cbe2b6bad46358834943900401809", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/bd08a2b40b6cbe2b6bad46358834943900401809", "committedDate": "2020-04-17T09:33:28Z", "message": "CUSTCOM-130 Fixed Payara Micro docker image\n\n- deployment did not work\n- extended test to deploy a trivial servlet application"}, "afterCommit": {"oid": "646f5d6eeb31434d7cbb2963f2d9588ed7ee3f48", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/646f5d6eeb31434d7cbb2963f2d9588ed7ee3f48", "committedDate": "2020-04-18T10:09:43Z", "message": "CUSTCOM-130 Using target directory in tests instead of temporary file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1468ce11edd4234093d9d2b3fd945b97eb47b69b", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/1468ce11edd4234093d9d2b3fd945b97eb47b69b", "committedDate": "2020-04-18T18:32:05Z", "message": "CUSTCOM-130 Same rules for payara-web docker image"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b45befb38c3c904ad61d35292a1caca4e0e4a35", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/8b45befb38c3c904ad61d35292a1caca4e0e4a35", "committedDate": "2020-04-19T08:38:43Z", "message": "CUSTCOM-130 Optimized build of docker images - sharing same base image\n\n- verification of tini and user management is done only once,\n  then the image is shared\n- this image has caching enabled by default\n- only micro has it's own, because it uses leaner jdk image based on alpine\n- renamed some properties to use common scheme\n- PayaraServerNodeTest with lower timeouts as it waits for the DAS; if\n  something went wrong, it hanged for too long"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/39dc2360f5dc0ad0e5576ff8e4be1d310754a761", "committedDate": "2020-04-19T10:04:52Z", "message": "CUSTCOM-130 Longer timeouts for tests\n\n- sometimes it was not enough"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MjA0NzEy", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-396204712", "createdAt": "2020-04-20T07:32:06Z", "commit": {"oid": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzozMjowNlrOGIHAaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzozMjo0N1rOGIHBsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1NjU4NQ==", "bodyText": "Revert order of these 2 COPY commands as script content will change less likely as Payara Micro. -> reuse of layers", "url": "https://github.com/payara/Payara/pull/4594#discussion_r411156585", "createdAt": "2020-04-20T07:32:06Z", "author": {"login": "rdebusscher"}, "path": "appserver/extras/docker-images/micro/src/main/docker/Dockerfile", "diffHunk": "@@ -4,23 +4,29 @@ FROM @docker.java.image@\n EXPOSE 6900 8080\n \n # Configure environment variables\n-ENV PAYARA_HOME=/opt/payara\\\n-    DEPLOY_DIR=/opt/payara/deployments\n+# PAYARA_HOME is deprecated - it is here for backward compatibility\n+ENV PAYARA_HOME=/opt/payara\n+ENV HOME_DIR=${PAYARA_HOME}\n+ENV PAYARA_DIR=${HOME_DIR} \\\n+    SCRIPT_DIR=${HOME_DIR} \\\n+    DEPLOY_DIR=/opt/payara/deployments \\\n+    JVM_ARGS=\"\" \\\n+    MEM_MAX_RAM_PERCENTAGE=70.0 \\\n+    MEM_XSS=512k\n \n # Create and set the Payara user and working directory owned by the new user\n RUN true \\\n-    && addgroup payara \\\n-    && adduser -D -h ${PAYARA_HOME} -H -s /bin/bash payara -G payara \\\n+    && addgroup --gid 1000 payara \\\n+    && adduser --system --uid 1000 --no-create-home --shell /bin/bash --home \"${HOME_DIR}\" --gecos \"\" --ingroup payara payara \\\n     && echo payara:payara | chpasswd \\\n     && mkdir -p ${DEPLOY_DIR}  \\\n-    && chown -R payara:payara ${PAYARA_HOME} \\\n+    && chown -R payara:payara ${HOME_DIR} \\\n     && true\n \n USER payara\n-WORKDIR ${PAYARA_HOME}\n+WORKDIR ${HOME_DIR}\n \n-COPY maven/artifacts/payara-micro.jar .\n+COPY --chown=payara:payara maven/artifacts/payara-micro.jar .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1Njc3Mg==", "bodyText": "Revert order of these 2 COPY commands as script content will change less likely as Payara Server. -> reuse of layers", "url": "https://github.com/payara/Payara/pull/4594#discussion_r411156772", "createdAt": "2020-04-20T07:32:29Z", "author": {"login": "rdebusscher"}, "path": "appserver/extras/docker-images/server-full/src/main/docker/Dockerfile", "diffHunk": "@@ -7,77 +7,31 @@ FROM @docker.java.image@\n # 8181: https\n EXPOSE 4848 9009 8080 8181\n \n-# Initialize the configurable environment variables\n-ENV HOME_DIR=/opt/payara\\\n-    PAYARA_DIR=/opt/payara/appserver\\\n-    SCRIPT_DIR=/opt/payara/scripts\\\n-    CONFIG_DIR=/opt/payara/config\\\n-    DEPLOY_DIR=/opt/payara/deployments\\\n-    PASSWORD_FILE=/opt/payara/passwordFile\\\n-    # Payara Server Domain options\n-    DOMAIN_NAME=@docker.payara.domainName@\\\n-    ADMIN_USER=admin\\\n-    ADMIN_PASSWORD=admin \\\n-    # Utility environment variables\n-    JVM_ARGS=\\\n-    PAYARA_ARGS=\\\n-    DEPLOY_PROPS=\\\n-    POSTBOOT_COMMANDS=/opt/payara/config/post-boot-commands.asadmin\\\n-    PREBOOT_COMMANDS=/opt/payara/config/pre-boot-commands.asadmin\n-ENV PATH=\"${PATH}:${PAYARA_DIR}/bin\"\n+ENV DOMAIN_NAME=@docker.payara.domainName@ \\\n+    PAYARA_ARGS=\"\" \\\n+    PREBOOT_COMMANDS=${CONFIG_DIR}/pre-boot-commands.asadmin \\\n+    POSTBOOT_COMMANDS=${CONFIG_DIR}/post-boot-commands.asadmin \\\n+    DEPLOY_PROPS=\"\"\n \n-ARG TINI_VERSION=v0.18.0\n-\n-# Download tini\n-ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n-    https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc /\n-\n-RUN true \\\n-    # Install dependencies\n-    && apt-get update \\\n-    && apt-get install -y coreutils gpg \\\n-    && rm -rf /var/lib/apt/lists/* \\\n-    # Create and set the Payara user and working directory owned by the new user\n-    && groupadd --gid 1000 payara \\\n-    && useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} payara -g payara \\\n-    && echo payara:payara | chpasswd \\\n-    && mkdir -p ${DEPLOY_DIR} \\\n-    && mkdir -p ${CONFIG_DIR} \\\n-    && mkdir -p ${SCRIPT_DIR} \\\n-    && chown -R payara: ${HOME_DIR} \\\n-    # Verify tini\n-    && gpg --batch --keyserver \"hkp://ipv4.pool.sks-keyservers.net\" --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \\\n-    && gpg --batch --verify /tini.asc /tini \\\n-    && chmod +x /tini \\\n-    && true\n-\n-USER payara\n-WORKDIR ${HOME_DIR}\n-\n-COPY --chown=payara:payara maven/artifacts/payara5 ${PAYARA_DIR}/\n+COPY --chown=payara:payara maven/artifacts/@docker.payara.rootDirectoryName@ ${PAYARA_DIR}/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1NjkxMg==", "bodyText": "Revert order of these 2 COPY commands as script content will change less likely as Payara Micro. -> reuse of Server", "url": "https://github.com/payara/Payara/pull/4594#discussion_r411156912", "createdAt": "2020-04-20T07:32:47Z", "author": {"login": "rdebusscher"}, "path": "appserver/extras/docker-images/server-node/src/main/docker/Dockerfile", "diffHunk": "@@ -14,20 +11,10 @@ ENV PAYARA_PASSWORD_FILE=${PAYARA_PASSWORD_FILE_DIR}/passwordfile.txt\n \n # Create and set the Payara user and working directory owned by the new user\n RUN true \\\n-    && mkdir ${HOME_DIR} \\\n-    && mkdir ${PAYARA_DIR} \\\n-    && mkdir ${PAYARA_PASSWORD_FILE_DIR} \\\n-    && groupadd -g 1000 payara \\\n-    && useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} payara -g payara \\\n-    && echo payara:payara | chpasswd \\\n-    && chown -R payara:payara ${HOME_DIR} \\\n+    && mkdir -p ${PAYARA_PASSWORD_FILE_DIR} \\\n     && true\n \n-USER payara\n-WORKDIR ${HOME_DIR}\n+COPY --chown=payara:payara maven/artifacts/@docker.payara.rootDirectoryName@ ${PAYARA_DIR}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzMzMjgx", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-396333281", "createdAt": "2020-04-20T10:33:10Z", "commit": {"oid": "39dc2360f5dc0ad0e5576ff8e4be1d310754a761"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f807bef66fd8eb679d15c82998ad0de9ab60b302", "author": {"user": {"login": "pdudits", "name": "Patrik Dudit\u0161"}}, "url": "https://github.com/payara/Payara/commit/f807bef66fd8eb679d15c82998ad0de9ab60b302", "committedDate": "2020-04-20T11:57:21Z", "message": "CUSTOM-130: Fix line endings for windows\n\nNew shell folder, new .gitattributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b86911b20011a4ff2827313faa9fdec05812a9de", "author": {"user": {"login": "pdudits", "name": "Patrik Dudit\u0161"}}, "url": "https://github.com/payara/Payara/commit/b86911b20011a4ff2827313faa9fdec05812a9de", "committedDate": "2020-04-20T11:57:21Z", "message": "CUSTOM-130: Retain CMD compatibility for Payara Micro image\n\n- deploymentDir is now CMD concern, overrideable by user\n- shell executes exec, so that java becomes the main process of container\n- shell expansion is not available in CMD, therefore DEPLOY_DIR used expanded,\n  but this is usual Docker behavior"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2017f760ff4229d693fdfa6b7ee306c926dce43", "author": {"user": {"login": "pdudits", "name": "Patrik Dudit\u0161"}}, "url": "https://github.com/payara/Payara/commit/a2017f760ff4229d693fdfa6b7ee306c926dce43", "committedDate": "2020-04-20T11:57:21Z", "message": "CUSTCOM-130 Reorder copy commands for better layering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "207c5270d139b47ef5ae1df82db4b6b713a49589", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/207c5270d139b47ef5ae1df82db4b6b713a49589", "committedDate": "2020-04-20T12:59:13Z", "message": "CUSTCOM-130 Updated TestContainers and JUnit5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6174171e438e5051c7c4be1303e097652260a99", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/a6174171e438e5051c7c4be1303e097652260a99", "committedDate": "2020-04-20T14:07:27Z", "message": "CUSTCOM-130 Cleanup in Micro Dockerfile\n\n- removed unuseful comments\n- sync with other docker files\n- tested\n- note: even if environment variables are not used here, they may be used\n  by users"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a21357330526ae1c38acf9b28303c016a2aab87", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/3a21357330526ae1c38acf9b28303c016a2aab87", "committedDate": "2020-04-20T13:03:36Z", "message": "CUSTCOM-130 Cleanup in Micro Dockerfile\n\n- removed unused DEPLOY_DIR and unuseful comments\n- sync with other docker files\n- tested"}, "afterCommit": {"oid": "a6174171e438e5051c7c4be1303e097652260a99", "author": {"user": null}, "url": "https://github.com/payara/Payara/commit/a6174171e438e5051c7c4be1303e097652260a99", "committedDate": "2020-04-20T14:07:27Z", "message": "CUSTCOM-130 Cleanup in Micro Dockerfile\n\n- removed unuseful comments\n- sync with other docker files\n- tested\n- note: even if environment variables are not used here, they may be used\n  by users"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MTI3Mjkw", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-397127290", "createdAt": "2020-04-21T08:57:28Z", "commit": {"oid": "a6174171e438e5051c7c4be1303e097652260a99"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODo1NzoyOVrOGI6r4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODo1NzoyOVrOGI6r4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwMzI5OQ==", "bodyText": "Heads up that tini v0.19 has been released two days ago.\nReleases now offer SHA256 sums, thus easing installation A LOT!\nhttps://github.com/krallin/tini/releases/tag/v0.19.0\nSee also krallin/tini#153", "url": "https://github.com/payara/Payara/pull/4594#discussion_r412003299", "createdAt": "2020-04-21T08:57:29Z", "author": {"login": "poikilotherm"}, "path": "appserver/extras/docker-images/basic/src/main/docker/Dockerfile", "diffHunk": "@@ -0,0 +1,42 @@\n+FROM @docker.java.image@\n+\n+ENV HOME_DIR=/opt/payara\n+ENV PAYARA_DIR=${HOME_DIR}/appserver \\\n+    SCRIPT_DIR=${HOME_DIR}/scripts \\\n+    CONFIG_DIR=${HOME_DIR}/config \\\n+    DEPLOY_DIR=${HOME_DIR}/deployments \\\n+    PASSWORD_FILE=${HOME_DIR}/passwordFile \\\n+    ADMIN_USER=admin \\\n+    ADMIN_PASSWORD=admin \\\n+    JVM_ARGS=\"\" \\\n+    MEM_MAX_RAM_PERCENTAGE=\"70.0\" \\\n+    MEM_XSS=\"512k\"\n+ENV PATH=\"${PATH}:${PAYARA_DIR}/bin\"\n+\n+ARG TINI_VERSION=v0.18.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6174171e438e5051c7c4be1303e097652260a99"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNTk1MjA4", "url": "https://github.com/payara/Payara/pull/4594#pullrequestreview-402595208", "createdAt": "2020-04-29T11:55:50Z", "commit": {"oid": "a6174171e438e5051c7c4be1303e097652260a99"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 793, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}