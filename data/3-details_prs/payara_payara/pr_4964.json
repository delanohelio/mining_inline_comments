{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4OTE1MzA0", "number": 4964, "title": "FISH-337 Create DynamoDB Config Source", "bodyText": "Description\n\nThis a feature that config source reads configuration properties from a DynamoDB database table.\nDocumentation\nhttps://docs.payara.fish/community/docs/5.2020.7/documentation/microprofile/config/cloud/dynamo-db.html", "createdAt": "2020-10-23T11:54:12Z", "url": "https://github.com/payara/Payara/pull/4964", "merged": true, "mergeCommit": {"oid": "96a13b50c6c20b575f32e1578d0bd3da32425b48"}, "closed": true, "closedAt": "2020-10-30T09:30:02Z", "author": {"login": "MeroRai"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVSCxlAH2gAyNTA4OTE1MzA0OjkxNWFiYmQ3NWE4MDc1MWNjOGZkZTAwMjYxNGNlN2FjNzM1ZTZlOTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXWMrPgH2gAyNTA4OTE1MzA0OjFiMTA1NTk5NzZjZGYxNzI1ZDA0NDRmYWUzN2I1YWQ2NzUwYzhkZWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "915abbd75a80751cc8fde002614ce7ac735e6e97", "author": {"user": {"login": "MeroRai", "name": "Mero Rai"}}, "url": "https://github.com/payara/Payara/commit/915abbd75a80751cc8fde002614ce7ac735e6e97", "committedDate": "2020-10-23T08:10:58Z", "message": "FISH-337 DynamoDB Config Source Implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355e78326e4cfd9dcacc6ae5f2040a4cff8553c4", "author": {"user": {"login": "MeroRai", "name": "Mero Rai"}}, "url": "https://github.com/payara/Payara/commit/355e78326e4cfd9dcacc6ae5f2040a4cff8553c4", "committedDate": "2020-10-23T11:47:34Z", "message": "FISH-337 DynamoDB Config Source Admin Console integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30fd7a7f3e9cdc2ceac54bbba8257728043f48a8", "author": {"user": {"login": "MeroRai", "name": "Mero Rai"}}, "url": "https://github.com/payara/Payara/commit/30fd7a7f3e9cdc2ceac54bbba8257728043f48a8", "committedDate": "2020-10-23T16:10:33Z", "message": "Added test for testing attribute with different data types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b26a35a3c924c5e4a5d9729117319dc184d5eaf", "author": {"user": {"login": "MeroRai", "name": "Mero Rai"}}, "url": "https://github.com/payara/Payara/commit/3b26a35a3c924c5e4a5d9729117319dc184d5eaf", "committedDate": "2020-10-23T16:19:17Z", "message": "Added copyright header and removed unwanted code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODYzMTE5", "url": "https://github.com/payara/Payara/pull/4964#pullrequestreview-519863119", "createdAt": "2020-10-29T16:38:54Z", "commit": {"oid": "3b26a35a3c924c5e4a5d9729117319dc184d5eaf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODc1MjYy", "url": "https://github.com/payara/Payara/pull/4964#pullrequestreview-519875262", "createdAt": "2020-10-29T16:51:37Z", "commit": {"oid": "3b26a35a3c924c5e4a5d9729117319dc184d5eaf"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjo1MTozOFrOHqlT9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjo1MTozOFrOHqlT9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQxMzU1Ng==", "bodyText": "Required but apparently has a default of 100", "url": "https://github.com/payara/Payara/pull/4964#discussion_r514413556", "createdAt": "2020-10-29T16:51:38Z", "author": {"login": "Pandrex247"}, "path": "appserver/admingui/microprofile-console-plugin/src/main/resources/microprofile/specs/configAPI/dynamoDBConfigSourceConfiguration.jsf", "diffHunk": "@@ -0,0 +1,153 @@\n+<!--\n+    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.\n+\n+    Copyright (c) 2020 Payara Foundation and/or its affiliates. All rights reserved.\n+\n+    The contents of this file are subject to the terms of either the GNU\n+    General Public License Version 2 only (\"GPL\") or the Common Development\n+    and Distribution License(\"CDDL\") (collectively, the \"License\").  You\n+    may not use this file except in compliance with the License.  You can\n+    obtain a copy of the License at\n+    https://github.com/payara/Payara/blob/master/LICENSE.txt\n+    See the License for the specific\n+    language governing permissions and limitations under the License.\n+\n+    When distributing the software, include this License Header Notice in each\n+    file and include the License file at glassfish/legal/LICENSE.txt.\n+\n+    GPL Classpath Exception:\n+    The Payara Foundation designates this particular file as subject to the \"Classpath\"\n+    exception as provided by the Payara Foundation in the GPL Version 2 section of the License\n+    file that accompanied this code.\n+\n+    Modifications:\n+    If applicable, add the following below the License Header, with the fields\n+    enclosed by brackets [] replaced by your own identifying information:\n+    \"Portions Copyright [year] [name of copyright owner]\"\n+\n+    Contributor(s):\n+    If you wish your version of this file to be governed by only the CDDL or\n+    only the GPL Version 2, indicate your decision by adding \"[Contributor]\n+    elects to include this software in this distribution under the [CDDL or GPL\n+    Version 2] license.\"  If you don't indicate a single choice of license, a\n+    recipient has the option to distribute your version of this file under\n+    either the CDDL, the GPL Version 2 or to extend the choice of license to\n+    its licensees as provided above.  However, if you add GPL Version 2 code\n+    and therefore, elected the GPL Version 2 license, then the option applies\n+    only if the new code is made subject to such option by the copyright\n+    holder.\n+-->\n+\n+<!initPage\n+    setResourceBundle(key=\"i18n_microprofile\" bundle=\"fish.payara.admingui.microprofile.Strings\");\n+/>\n+<!composition template=\"/templates/default.layout\"  \n+    guiTitle=\"$resource{i18n_microprofile.microprofile.specs.configuration.config.dynamodbConfigSource.pageTitle}\">\n+\n+<!define name=\"content\">\n+\n+<event>\n+    <!beforeCreate\n+        setSessionAttribute(key=\"microprofileConfigTabs\" value=\"microProfileConfigDynamoDBConfigSourceTab\");\n+        getRequestValue(key=\"configName\" value=\"#{pageSession.configName}\");\n+        setPageSessionAttribute(key=\"MICROPROFILE_CONFIG_URL\", \n+                value=\"#{sessionScope.REST_URL}/configs/config/#{pageSession.configName}/microprofile-config\");\n+        gf.restRequest(endpoint=\"#{pageSession.MICROPROFILE_CONFIG_URL}/get-dynamodb-config-source-configuration?target=#{pageSession.configName}\"  \n+                method=\"GET\" result=\"#{requestScope.resp}\");\n+        \n+        setPageSessionAttribute(key=\"valueMap\", \n+                value=\"#{requestScope.resp.data.extraProperties.configSourceConfiguration}\");\n+        mapPut(map=\"#{pageSession.valueMap}\" key=\"target\" value=\"#{pageSession.configName}\");\n+        \n+        setPageSessionAttribute(key=\"convertToFalseList\", value={\"enabled\"});\n+        \n+        if (#{pageSession.valueMap['enabled']}=true) {\n+            setPageSessionAttribute(key=\"enabledSelected\", value=\"true\");\n+        }\n+        setPageSessionAttribute(key=\"dynamic\", value=\"true\");\n+        />\n+</event>\n+    \n+    \n+<sun:form id=\"propertyForm\">\n+#include \"/common/shared/alertMsg_1.inc\"\n+#include \"/microprofile/microprofile/microprofileConfigTabs.inc\"\n+#include \"/microprofile/microprofile/microprofileConfigAPITabs.inc\"\n+    <sun:title id=\"propertyContentPage\" title=\"$resource{i18n_microprofile.microprofile.specs.configuration.config.dynamodbConfigSource.pageTitle}\" \n+               helpText=\"$resource{i18n_microprofile.microprofile.specs.configuration.config.dynamodbConfigSource.pageTitleHelpText}\" >\n+        <!facet pageButtonsTop>\n+        <sun:panelGroup id=\"topButtons\">\n+            <sun:button id=\"saveButton\"  text=\"$resource{i18n.button.Save}\"\n+                        onClick=\"if (guiValidate('#{reqMsg}','#{reqInt}','#{reqPort}')) \n+                        submitAndDisable(this, '$resource{i18n.button.Processing}'); return false;\" >\n+                <!command\n+                mapPut(map=\"#{pageSession.valueMap}\" key=\"enabled\" value=\"#{pageSession.enabledSelected}\");\n+                mapPut(map=\"#{pageSession.valueMap}\" key=\"dynamic\" value=\"#{pageSession.dynamic}\");\n+                    prepareSuccessfulMsg();\n+                    gf.updateEntity(endpoint=\"#{pageSession.MICROPROFILE_CONFIG_URL}/set-dynamodb-config-source-configuration\" \n+                            attrs=\"#{pageSession.valueMap}\" convertToFalse=\"#{pageSession.convertToFalseList}\");\n+                    /> \n+            </sun:button>\n+        </sun:panelGroup>\n+    </facet>\n+    </sun:title>\n+<sun:propertySheet id=\"propertySheet\">\n+#include \"/common/shared/configNameSection.inc\"\n+  <sun:propertySheetSection id=\"dynamodbConfigSourceProps\">\n+        <sun:property id=\"enabledProp\" labelAlign=\"left\" noWrap=\"#{true}\" overlapLabel=\"#{false}\" \n+                    label=\"$resource{i18n_microprofile.config.dynamodb.configuration.enabledLabel}\"  \n+                    helpText=\"$resource{i18n_microprofile.config.dynamodb.configuration.enabledHelpText}\">\n+            <sun:checkbox id=\"enabledProp\" selected=\"#{pageSession.enabledSelected}\" selectedValue=\"true\" />\n+        </sun:property>\n+        <sun:property id=\"dynamic\" labelAlign=\"left\" noWrap=\"#{true}\" overlapLabel=\"#{false}\" \n+                    label=\"$resource{i18n_microprofile.config.dynamodb.configuration.dynamicLabel}\"  \n+                    helpText=\"$resource{i18n_microprofile.config.dynamodb.configuration.dynamicHelpText}\">\n+            <sun:checkbox id=\"dynamic\" selected=\"#{pageSession.dynamic}\" selectedValue=\"true\" />\n+        </sun:property>\n+        <sun:property id=\"regionName\" labelAlign=\"left\" noWrap=\"#{true}\" overlapLabel=\"#{false}\" \n+                    label=\"$resource{i18n_microprofile.config.dynamodb.configuration.regionNameLabel}\"  \n+                    helpText=\"$resource{i18n_microprofile.config.dynamodb.configuration.regionNameHelpText}\">\n+            <sun:textField id=\"regionNameField\" columns=\"$int{75}\" maxLength=\"255\"\n+                        text=\"#{pageSession.valueMap['regionName']}\" styleClass=\"required\"  \n+                        required=\"#{true}\"/>\n+        </sun:property>\n+        <sun:property id=\"tableName\" labelAlign=\"left\" noWrap=\"#{true}\" overlapLabel=\"#{false}\" \n+                    label=\"$resource{i18n_microprofile.config.dynamodb.configuration.tableNameLabel}\"  \n+                    helpText=\"$resource{i18n_microprofile.config.dynamodb.configuration.tableNameHelpText}\">\n+            <sun:textField id=\"tableNameField\" columns=\"$int{75}\" maxLength=\"255\" \n+                        text=\"#{pageSession.valueMap['tableName']}\" styleClass=\"required\"  \n+                        required=\"#{true}\"/>\n+        </sun:property>\n+        <sun:property id=\"tableName\" labelAlign=\"left\" noWrap=\"#{true}\" overlapLabel=\"#{false}\" \n+                    label=\"$resource{i18n_microprofile.config.dynamodb.configuration.tableNameLabel}\"  \n+                    helpText=\"$resource{i18n_microprofile.config.dynamodb.configuration.tableNameHelpText}\">\n+            <sun:textField id=\"tableNameField\" columns=\"$int{75}\" maxLength=\"255\" \n+                        text=\"#{pageSession.valueMap['tableName']}\" styleClass=\"required\"  \n+                        required=\"#{true}\"/>\n+        </sun:property>\n+        <sun:property id=\"keyColumnName\" labelAlign=\"left\" noWrap=\"#{true}\" overlapLabel=\"#{false}\" \n+                    label=\"$resource{i18n_microprofile.config.dynamodb.configuration.keyColumnNameLabel}\"  \n+                    helpText=\"$resource{i18n_microprofile.config.dynamodb.configuration.keyColumnNameHelpText}\">\n+            <sun:textField id=\"keyColumnNameField\" columns=\"$int{75}\" maxLength=\"255\" \n+                        text=\"#{pageSession.valueMap['keyColumnName']}\" styleClass=\"required\"  \n+                        required=\"#{true}\"/>\n+        </sun:property>\n+        <sun:property id=\"valueColumnName\" labelAlign=\"left\" noWrap=\"#{true}\" overlapLabel=\"#{false}\" \n+                    label=\"$resource{i18n_microprofile.config.dynamodb.configuration.valueColumnNameLabel}\"  \n+                    helpText=\"$resource{i18n_microprofile.config.dynamodb.configuration.valueColumnNameHelpText}\">\n+            <sun:textField id=\"valueColumnNameField\" columns=\"$int{75}\" maxLength=\"255\" \n+                        text=\"#{pageSession.valueMap['valueColumnName']}\" styleClass=\"required\"  \n+                        required=\"#{true}\"/>\n+        </sun:property>\n+        <sun:property id=\"limit\" labelAlign=\"left\" noWrap=\"#{true}\" overlapLabel=\"#{false}\" \n+                    label=\"$resource{i18n_microprofile.config.dynamodb.configuration.limitLabel}\"  \n+                    helpText=\"$resource{i18n_microprofile.config.dynamodb.configuration.limitHelpText}\">\n+            <sun:textField id=\"limitField\" columns=\"$int{75}\" maxLength=\"255\" \n+                        text=\"#{pageSession.valueMap['limit']}\" styleClass=\"required\"  \n+                        required=\"#{true}\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b26a35a3c924c5e4a5d9729117319dc184d5eaf"}, "originalPosition": 147}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b10559976cdf1725d0444fae37b5ad6750c8deb", "author": {"user": {"login": "MeroRai", "name": "Mero Rai"}}, "url": "https://github.com/payara/Payara/commit/1b10559976cdf1725d0444fae37b5ad6750c8deb", "committedDate": "2020-10-29T18:09:15Z", "message": "FISH-337 Limit parameter in the set-dynamodb-config-source-configuration command is no longer required"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 698, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}