{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNDgyMzcx", "number": 3550, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDowMTowN1rOEhsBkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDowMTowN1rOEhsBkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzU5NzYzOnYy", "diffSide": "RIGHT", "path": "src/test/java/spoon/generating/CorrectIdentifierTest.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDowMTowN1rOHPI2dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNTo0NTowNVrOHQPF0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNTcwMg==", "bodyText": "is that a valid name for a local variable reference? Maybe you mean a type reference instead?", "url": "https://github.com/INRIA/spoon/pull/3550#discussion_r485635702", "createdAt": "2020-09-09T14:01:07Z", "author": {"login": "monperrus"}, "path": "src/test/java/spoon/generating/CorrectIdentifierTest.java", "diffHunk": "@@ -69,4 +69,10 @@ public void correctIdentiferUtfChinese() {\n \t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n \t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"\u51e6\u7406\"));\n \t}\n+\n+\t@Test\n+\tpublic void correctSquareBrackets() {\n+\t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n+\t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"List<String>[]\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd3313d5820f5aca1b1a949aa621bb0502913c70"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1NzQyOQ==", "bodyText": "It isn't a allowed identifier for a local variable, must be more or less alphanumeric with some exceptions.\nWe have 1 check for all setSimpleName methods. Looking at the decision today i would prefer something like a visitor. Allowing different handling for the cases., like type or local variable.", "url": "https://github.com/INRIA/spoon/pull/3550#discussion_r485657429", "createdAt": "2020-09-09T14:29:09Z", "author": {"login": "MartinWitt"}, "path": "src/test/java/spoon/generating/CorrectIdentifierTest.java", "diffHunk": "@@ -69,4 +69,10 @@ public void correctIdentiferUtfChinese() {\n \t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n \t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"\u51e6\u7406\"));\n \t}\n+\n+\t@Test\n+\tpublic void correctSquareBrackets() {\n+\t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n+\t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"List<String>[]\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNTcwMg=="}, "originalCommit": {"oid": "fd3313d5820f5aca1b1a949aa621bb0502913c70"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjA2OTIwNg==", "bodyText": "OK, @Strum355 could you create a type reference instead?", "url": "https://github.com/INRIA/spoon/pull/3550#discussion_r486069206", "createdAt": "2020-09-10T05:11:38Z", "author": {"login": "monperrus"}, "path": "src/test/java/spoon/generating/CorrectIdentifierTest.java", "diffHunk": "@@ -69,4 +69,10 @@ public void correctIdentiferUtfChinese() {\n \t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n \t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"\u51e6\u7406\"));\n \t}\n+\n+\t@Test\n+\tpublic void correctSquareBrackets() {\n+\t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n+\t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"List<String>[]\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNTcwMg=="}, "originalCommit": {"oid": "fd3313d5820f5aca1b1a949aa621bb0502913c70"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjI2MjQ5Nw==", "bodyText": "My attempts have been unsuccessful unfortunately, I consistently get NPE as getPackage always returns null and Ive been unable to run the Launcher in classpath mode. Im afraid my knowledge of Spoon only goes sofar \ud83d\ude1e", "url": "https://github.com/INRIA/spoon/pull/3550#discussion_r486262497", "createdAt": "2020-09-10T11:27:03Z", "author": {"login": "Strum355"}, "path": "src/test/java/spoon/generating/CorrectIdentifierTest.java", "diffHunk": "@@ -69,4 +69,10 @@ public void correctIdentiferUtfChinese() {\n \t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n \t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"\u51e6\u7406\"));\n \t}\n+\n+\t@Test\n+\tpublic void correctSquareBrackets() {\n+\t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n+\t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"List<String>[]\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNTcwMg=="}, "originalCommit": {"oid": "fd3313d5820f5aca1b1a949aa621bb0502913c70"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc4NjUxNA==", "bodyText": "Fixed by CtTypeReference localVariableRef = new Launcher().getFactory().createTypeReference();\nLGTM, OK to merge", "url": "https://github.com/INRIA/spoon/pull/3550#discussion_r486786514", "createdAt": "2020-09-11T05:45:05Z", "author": {"login": "monperrus"}, "path": "src/test/java/spoon/generating/CorrectIdentifierTest.java", "diffHunk": "@@ -69,4 +69,10 @@ public void correctIdentiferUtfChinese() {\n \t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n \t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"\u51e6\u7406\"));\n \t}\n+\n+\t@Test\n+\tpublic void correctSquareBrackets() {\n+\t\tCtLocalVariableReference<Object> localVariableRef = new Launcher().getFactory().createLocalVariableReference();\n+\t\tassertDoesNotThrow(() -> localVariableRef.setSimpleName(\"List<String>[]\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYzNTcwMg=="}, "originalCommit": {"oid": "fd3313d5820f5aca1b1a949aa621bb0502913c70"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3648, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}