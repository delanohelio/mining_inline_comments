{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5MDU5Mjg4", "number": 3396, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMTo1NzoxM1rOEDMV3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMjowODoyMlrOEDMX1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzgzMzg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/spoon/support/sniper/internal/AbstractSourceFragmentPrinter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMTo1NzoxM1rOGgF3mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QyMDozNzoxNVrOGgLt8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwMzc2OA==", "bodyText": "update comment, null value is not returned anymore?", "url": "https://github.com/INRIA/spoon/pull/3396#discussion_r436303768", "createdAt": "2020-06-06T21:57:13Z", "author": {"login": "MartinWitt"}, "path": "src/main/java/spoon/support/sniper/internal/AbstractSourceFragmentPrinter.java", "diffHunk": "@@ -133,29 +133,29 @@ protected void printSpaces(int fragmentIndex) {\n \t * \tfalse if whole `fragment` is not modified.\n \t * \tnull if it is not possible to detect it here. Then it will be detected later.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa259840c0a25b9b8f9c16ccbbd437bd8914716a"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5OTYwMA==", "bodyText": "done, thanks.", "url": "https://github.com/INRIA/spoon/pull/3396#discussion_r436399600", "createdAt": "2020-06-07T20:37:15Z", "author": {"login": "monperrus"}, "path": "src/main/java/spoon/support/sniper/internal/AbstractSourceFragmentPrinter.java", "diffHunk": "@@ -133,29 +133,29 @@ protected void printSpaces(int fragmentIndex) {\n \t * \tfalse if whole `fragment` is not modified.\n \t * \tnull if it is not possible to detect it here. Then it will be detected later.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwMzc2OA=="}, "originalCommit": {"oid": "aa259840c0a25b9b8f9c16ccbbd437bd8914716a"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzgzODM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/spoon/support/sniper/internal/ModificationStatus.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMjowNzoyNFrOGgF53Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QyMDozNzo0NFrOGgLuGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwNDM0OQ==", "bodyText": "shouldn't this be abstract and all Enum constants implement this? Otherwise every new enum item would need a change in this method.", "url": "https://github.com/INRIA/spoon/pull/3396#discussion_r436304349", "createdAt": "2020-06-06T22:07:24Z", "author": {"login": "MartinWitt"}, "path": "src/main/java/spoon/support/sniper/internal/ModificationStatus.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/**\n+ * SPDX-License-Identifier: (MIT OR CECILL-C)\n+ *\n+ * Copyright (C) 2006-2019 INRIA and contributors\n+ *\n+ * Spoon is available either under the terms of the MIT License (see LICENSE-MIT.txt) of the Cecill-C License (see LICENSE-CECILL-C.txt). You as the user are entitled to choose the terms under which to adopt Spoon.\n+ */\n+package spoon.support.sniper.internal;\n+\n+/** represents whether a {@link spoon.support.sniper.internal.SourceFragment} has been modified, and should be reprinted as is or with the normal pretty-printer */\n+public enum ModificationStatus {\n+\tUNKNOWN,\n+\tMODIFIED,\n+\tNOT_MODIFIED;\n+\n+\tpublic static ModificationStatus fromBoolean(Boolean b) {\n+\t\tif (b) {\n+\t\t\treturn MODIFIED;\n+\t\t}\n+\t\treturn NOT_MODIFIED;\n+\t}\n+\n+\tpublic boolean toBoolean() {\n+\t\tif (this == MODIFIED) {\n+\t\t\treturn true;\n+\t\t}\n+\t\tif (this == NOT_MODIFIED) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tthrow new IllegalStateException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa259840c0a25b9b8f9c16ccbbd437bd8914716a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5OTY0Mw==", "bodyText": "that's not necessary to over-engineer, this enum is very unlikely to change", "url": "https://github.com/INRIA/spoon/pull/3396#discussion_r436399643", "createdAt": "2020-06-07T20:37:44Z", "author": {"login": "monperrus"}, "path": "src/main/java/spoon/support/sniper/internal/ModificationStatus.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/**\n+ * SPDX-License-Identifier: (MIT OR CECILL-C)\n+ *\n+ * Copyright (C) 2006-2019 INRIA and contributors\n+ *\n+ * Spoon is available either under the terms of the MIT License (see LICENSE-MIT.txt) of the Cecill-C License (see LICENSE-CECILL-C.txt). You as the user are entitled to choose the terms under which to adopt Spoon.\n+ */\n+package spoon.support.sniper.internal;\n+\n+/** represents whether a {@link spoon.support.sniper.internal.SourceFragment} has been modified, and should be reprinted as is or with the normal pretty-printer */\n+public enum ModificationStatus {\n+\tUNKNOWN,\n+\tMODIFIED,\n+\tNOT_MODIFIED;\n+\n+\tpublic static ModificationStatus fromBoolean(Boolean b) {\n+\t\tif (b) {\n+\t\t\treturn MODIFIED;\n+\t\t}\n+\t\treturn NOT_MODIFIED;\n+\t}\n+\n+\tpublic boolean toBoolean() {\n+\t\tif (this == MODIFIED) {\n+\t\t\treturn true;\n+\t\t}\n+\t\tif (this == NOT_MODIFIED) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tthrow new IllegalStateException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwNDM0OQ=="}, "originalCommit": {"oid": "aa259840c0a25b9b8f9c16ccbbd437bd8914716a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzgzODkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/spoon/support/sniper/internal/AbstractSourceFragmentContextCollection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQyMjowODoyMlrOGgF6Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QyMDozNzowOVrOGgLt7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwNDQxNQ==", "bodyText": "update comment, null value is not returned anymore?", "url": "https://github.com/INRIA/spoon/pull/3396#discussion_r436304415", "createdAt": "2020-06-06T22:08:22Z", "author": {"login": "MartinWitt"}, "path": "src/main/java/spoon/support/sniper/internal/AbstractSourceFragmentContextCollection.java", "diffHunk": "@@ -69,10 +69,10 @@ public boolean knowsHowToPrint(PrinterEvent event) {\n \t}\n \n \t@Override\n-\tprotected Boolean isFragmentModified(SourceFragment fragment) {\n+\tprotected ModificationStatus isFragmentModified(SourceFragment fragment) {\n \t\t//we cannot fast detect if it is modified using our changeResolver.\n \t\t//So return null. The code later will detect it including modified roles.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa259840c0a25b9b8f9c16ccbbd437bd8914716a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5OTU5OQ==", "bodyText": "done, thanks.", "url": "https://github.com/INRIA/spoon/pull/3396#discussion_r436399599", "createdAt": "2020-06-07T20:37:09Z", "author": {"login": "monperrus"}, "path": "src/main/java/spoon/support/sniper/internal/AbstractSourceFragmentContextCollection.java", "diffHunk": "@@ -69,10 +69,10 @@ public boolean knowsHowToPrint(PrinterEvent event) {\n \t}\n \n \t@Override\n-\tprotected Boolean isFragmentModified(SourceFragment fragment) {\n+\tprotected ModificationStatus isFragmentModified(SourceFragment fragment) {\n \t\t//we cannot fast detect if it is modified using our changeResolver.\n \t\t//So return null. The code later will detect it including modified roles.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjMwNDQxNQ=="}, "originalCommit": {"oid": "aa259840c0a25b9b8f9c16ccbbd437bd8914716a"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3670, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}