{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NzM5NTU4", "number": 3655, "title": "fix: more resilient wrt to errors during shadow class building", "bodyText": "Hello everyone,\nWe develop a static code analyzer and to do it we need to build models using Spoon for a lot of projects.\nSome background information.\nThis is how it was before:\nJDTImportBuilder::getOrLoadClass tried to get imported class through getClass().getClassLoader().loadClass(className) ... it didn't manage to find anything ('null', ClassNotFoundException, ...).\nThis led to the situation when JDTImportBuilder::getOrLoadClass returned 'null'. We couldn't get it and that was OK.\nThis is how it is now:\nRecently JDTImportBuilder::getOrLoadClass tries to load class using JDTImportBuilder::loadClass.\nThat is, if 'factory.getEnvironment().getInputClassLoader' existed, we tried to get it from there, otherwise we got class, same as before.\nSo through the factory environment you are able to get classes that, before the change, thrown with ClassNotFoundException.\nBut this modification led to the situation when TypeFactory::get(Class) couldn't get the shadowClass using JavaReflectionTreeBuilder (probably because reflection has not enough information). This leads to the SpoonClassNotFoundException exception that interrupts model building. Therefore we can't start the analysis niether.\nThere are a lot of reasons of program crash when launching JavaReflectionTreeBuilder:\n    * Caused by: java.lang.ExceptionInInitializerError\n    * Caused by: java.lang.TypeNotPresentException: Type org.jvnet.mimepull.Header not present\n    * Caused by: java.lang.ArrayStoreException: sun.reflect.annotation.TypeNotPresentExceptionProxy\n    * Caused by: java.lang.SecurityException: class \"com.google.protobuf.GeneratedMessageV3$FieldAccessorTable\"'s signer information does not match signer information of other classes in the same package\n    * Caused by: java.lang.IncompatibleClassChangeError: com.google.common.collect.Interners and com.google.common.collect.Interners$InternerImpl disagree on InnerClasses attribute\n    * ....\n\nPR details:\nI added logging 'cannot create shadow class' (just in case).\nI think, returning 'null' makes more sense, as it was before. If you couldn't get it, that's OK (alas, something's missing).", "createdAt": "2020-10-16T10:17:45Z", "url": "https://github.com/INRIA/spoon/pull/3655", "merged": true, "mergeCommit": {"oid": "4ccbf0a1e7cc092d2b75aac767d3797eb10c0399"}, "closed": true, "closedAt": "2020-10-26T06:11:41Z", "author": {"login": "BuzzMS"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTA8KzgH2gAyNTA0NzM5NTU4OmRlMTUzODRjMjlkYjAwYzZiZjY2NTYxMTdkYmFjMTdkYjdlNmJhNWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVTAIVgH2gAyNTA0NzM5NTU4OjgyODcxMTJlMDE3MzAzZDQyODM3YzlhODU1YWNhOGQ5NzkwOWY4Yzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "de15384c29db00c6bf6656117dbac17db7e6ba5b", "author": {"user": {"login": "BuzzMS", "name": "Maxim Stefanov"}}, "url": "https://github.com/INRIA/spoon/commit/de15384c29db00c6bf6656117dbac17db7e6ba5b", "committedDate": "2020-10-16T07:07:31Z", "message": "Replaced throwing an exception 'SpoonClassNotFoundException' with logging."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9b990c551a8bdf17eb19a3a92172496bfca6e59", "author": {"user": {"login": "BuzzMS", "name": "Maxim Stefanov"}}, "url": "https://github.com/INRIA/spoon/commit/d9b990c551a8bdf17eb19a3a92172496bfca6e59", "committedDate": "2020-10-16T10:57:49Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e282b29c91a8b54b5494863d834354ec2cc64f1", "author": {"user": {"login": "BuzzMS", "name": "Maxim Stefanov"}}, "url": "https://github.com/INRIA/spoon/commit/2e282b29c91a8b54b5494863d834354ec2cc64f1", "committedDate": "2020-10-20T06:51:23Z", "message": "Added a test when JavaReflectionTreeBuilder throws an exception."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c8fbcf8e97f2f298a94f5f6b2f5d4c1be1466e1", "author": {"user": {"login": "BuzzMS", "name": "Maxim Stefanov"}}, "url": "https://github.com/INRIA/spoon/commit/4c8fbcf8e97f2f298a94f5f6b2f5d4c1be1466e1", "committedDate": "2020-10-20T07:53:44Z", "message": "Minor fix. The test for a class and a single test are run differently."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MzYzMTg2", "url": "https://github.com/INRIA/spoon/pull/3655#pullrequestreview-514363186", "createdAt": "2020-10-22T05:09:56Z", "commit": {"oid": "4c8fbcf8e97f2f298a94f5f6b2f5d4c1be1466e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNTowOTo1NlrOHmQyww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNTowOTo1NlrOHmQyww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg4MzA3NQ==", "bodyText": "could you add a comment \"contract: ...\" in natural language where you describe the intention of the test? Thanks", "url": "https://github.com/INRIA/spoon/pull/3655#discussion_r509883075", "createdAt": "2020-10-22T05:09:56Z", "author": {"login": "monperrus"}, "path": "src/test/java/spoon/support/visitor/java/JavaReflectionTreeBuilderTest.java", "diffHunk": "@@ -682,4 +683,14 @@ public boolean matches(CtType element) {\n \t\tassertEquals(true, ctClass.isShadow());\n \t\tassertEquals(\"foo\", ctClass.getMethods().toArray(new CtMethod[0])[0].getSimpleName());\n \t}\n+\n+\t@Test\n+\tpublic void testExpectedExceptionInInitializerError() {\n+\t\ttry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c8fbcf8e97f2f298a94f5f6b2f5d4c1be1466e1"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c090ca97b3281bd19559843251de7a12b26a1976", "author": {"user": {"login": "BuzzMS", "name": "Maxim Stefanov"}}, "url": "https://github.com/INRIA/spoon/commit/c090ca97b3281bd19559843251de7a12b26a1976", "committedDate": "2020-10-22T14:15:00Z", "message": "Rework of exception (\"cannot create shadow class\")"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MjU1NjQw", "url": "https://github.com/INRIA/spoon/pull/3655#pullrequestreview-515255640", "createdAt": "2020-10-23T03:40:52Z", "commit": {"oid": "c090ca97b3281bd19559843251de7a12b26a1976"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMzo0MDo1MlrOHm7Glw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwMzo0MDo1MlrOHm7Glw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDU3NjI3OQ==", "bodyText": "What about catching \"IllegalAccessException | ExceptionInInitializerError\"?\nThanks a lot for the changes!", "url": "https://github.com/INRIA/spoon/pull/3655#discussion_r510576279", "createdAt": "2020-10-23T03:40:52Z", "author": {"login": "monperrus"}, "path": "src/main/java/spoon/support/visitor/java/JavaReflectionTreeBuilder.java", "diffHunk": "@@ -296,7 +296,7 @@ public void visitField(Field field) {\n \t\t\t\tCtLiteral<Object> defaultExpression = factory.createLiteral(field.get(null));\n \t\t\t\tctField.setDefaultExpression(defaultExpression);\n \t\t\t}\n-\t\t} catch (IllegalAccessException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c090ca97b3281bd19559843251de7a12b26a1976"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8287112e017303d42837c9a855aca8d97909f8c9", "author": {"user": {"login": "BuzzMS", "name": "Maxim Stefanov"}}, "url": "https://github.com/INRIA/spoon/commit/8287112e017303d42837c9a855aca8d97909f8c9", "committedDate": "2020-10-23T09:17:59Z", "message": "Rework of exception N2 (\"cannot create shadow class\")"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1319, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}