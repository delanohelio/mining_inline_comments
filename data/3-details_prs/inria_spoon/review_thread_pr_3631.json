{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3Mjk2NDA2", "number": 3631, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjoxMDowMlrOEqYx8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjoxMDoyOVrOEqYyrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODgxNjQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/spoon/metamodel/MMMethodKind.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjoxMDowMlrOHckE-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOTozNDo1OFrOHc-ClQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxMzI3NA==", "bodyText": "Instead of commenting the fields and co, it would be better to simply remove them", "url": "https://github.com/INRIA/spoon/pull/3631#discussion_r499713274", "createdAt": "2020-10-05T16:10:02Z", "author": {"login": "monperrus"}, "path": "src/main/java/spoon/metamodel/MMMethodKind.java", "diffHunk": "@@ -77,13 +77,12 @@\n \tprivate final Predicate<CtMethod<?>> detector;\n \tprivate final int level;\n \tprivate final boolean multi;\n-\tprivate final int valueParameterIndex;\n \n \tMMMethodKind(int valueParameterIndex, boolean multi, int level, Predicate<CtMethod<?>> detector) {\n \t\tthis.multi = multi;\n \t\tthis.level = level;\n \t\tthis.detector = detector;\n-\t\tthis.valueParameterIndex = valueParameterIndex;\n+\t\t// valueParameterindex is never used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "442e8f3c2be65a696c1357ab6827d2da9c65b910"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcyNTgzMw==", "bodyText": "I was unsure about it, because the field is marked for future use.", "url": "https://github.com/INRIA/spoon/pull/3631#discussion_r499725833", "createdAt": "2020-10-05T16:30:11Z", "author": {"login": "MartinWitt"}, "path": "src/main/java/spoon/metamodel/MMMethodKind.java", "diffHunk": "@@ -77,13 +77,12 @@\n \tprivate final Predicate<CtMethod<?>> detector;\n \tprivate final int level;\n \tprivate final boolean multi;\n-\tprivate final int valueParameterIndex;\n \n \tMMMethodKind(int valueParameterIndex, boolean multi, int level, Predicate<CtMethod<?>> detector) {\n \t\tthis.multi = multi;\n \t\tthis.level = level;\n \t\tthis.detector = detector;\n-\t\tthis.valueParameterIndex = valueParameterIndex;\n+\t\t// valueParameterindex is never used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxMzI3NA=="}, "originalCommit": {"oid": "442e8f3c2be65a696c1357ab6827d2da9c65b910"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAyMjAyMA==", "bodyText": "let's remove it completely", "url": "https://github.com/INRIA/spoon/pull/3631#discussion_r500022020", "createdAt": "2020-10-06T05:56:44Z", "author": {"login": "monperrus"}, "path": "src/main/java/spoon/metamodel/MMMethodKind.java", "diffHunk": "@@ -77,13 +77,12 @@\n \tprivate final Predicate<CtMethod<?>> detector;\n \tprivate final int level;\n \tprivate final boolean multi;\n-\tprivate final int valueParameterIndex;\n \n \tMMMethodKind(int valueParameterIndex, boolean multi, int level, Predicate<CtMethod<?>> detector) {\n \t\tthis.multi = multi;\n \t\tthis.level = level;\n \t\tthis.detector = detector;\n-\t\tthis.valueParameterIndex = valueParameterIndex;\n+\t\t// valueParameterindex is never used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxMzI3NA=="}, "originalCommit": {"oid": "442e8f3c2be65a696c1357ab6827d2da9c65b910"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEzODY0NQ==", "bodyText": "You are correct, it's an Enum => we can simply remove the parameter because enums cant be subclassed and the value was private.", "url": "https://github.com/INRIA/spoon/pull/3631#discussion_r500138645", "createdAt": "2020-10-06T09:34:58Z", "author": {"login": "MartinWitt"}, "path": "src/main/java/spoon/metamodel/MMMethodKind.java", "diffHunk": "@@ -77,13 +77,12 @@\n \tprivate final Predicate<CtMethod<?>> detector;\n \tprivate final int level;\n \tprivate final boolean multi;\n-\tprivate final int valueParameterIndex;\n \n \tMMMethodKind(int valueParameterIndex, boolean multi, int level, Predicate<CtMethod<?>> detector) {\n \t\tthis.multi = multi;\n \t\tthis.level = level;\n \t\tthis.detector = detector;\n-\t\tthis.valueParameterIndex = valueParameterIndex;\n+\t\t// valueParameterindex is never used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxMzI3NA=="}, "originalCommit": {"oid": "442e8f3c2be65a696c1357ab6827d2da9c65b910"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODgxODM3OnYy", "diffSide": "RIGHT", "path": "src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjoxMDoyOVrOHckGGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzowNjo0OFrOHcmH_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxMzU2MQ==", "bodyText": "out of curiosity how long does this new check take?", "url": "https://github.com/INRIA/spoon/pull/3631#discussion_r499713561", "createdAt": "2020-10-05T16:10:29Z", "author": {"login": "monperrus"}, "path": "src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java", "diffHunk": "@@ -459,4 +465,23 @@ private static String computeDifference(Set<?> set1, Set<?> set2) {\n \t\t}\n \t\treturn StringUtils.join(results, \"\\n\");\n \t}\n+\tprivate void checkFields(CtModel model) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "442e8f3c2be65a696c1357ab6827d2da9c65b910"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0NjgxNQ==", "bodyText": "some testing shows around 60 seconds but I have an idea to speed it up.\nEdit: Local Tests with HashSet reduce it to < 5 seconds", "url": "https://github.com/INRIA/spoon/pull/3631#discussion_r499746815", "createdAt": "2020-10-05T17:06:48Z", "author": {"login": "MartinWitt"}, "path": "src/test/java/spoon/test/architecture/SpoonArchitectureEnforcerTest.java", "diffHunk": "@@ -459,4 +465,23 @@ private static String computeDifference(Set<?> set1, Set<?> set2) {\n \t\t}\n \t\treturn StringUtils.join(results, \"\\n\");\n \t}\n+\tprivate void checkFields(CtModel model) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcxMzU2MQ=="}, "originalCommit": {"oid": "442e8f3c2be65a696c1357ab6827d2da9c65b910"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3609, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}