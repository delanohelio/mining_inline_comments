{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMDg5MDU0", "number": 3546, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTo0MzoyOFrOEcIT0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTo0MzoyOFrOEcIT0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTMxNzMxOnYy", "diffSide": "RIGHT", "path": "src/test/java/spoon/reflect/visitor/CtScannerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTo0MzoyOFrOHGeP8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTo0MzoyOFrOHGeP8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0OTEwNw==", "bodyText": "How about assertAll?\nassertAll(\n\t() -> assertEquals(45, l.size()); // we visited the whole tree\n\t() -> assertEquals(0, l.get(0));\n\t() -> assertEquals(1, l.get(1)); // visiting a child\n\t() -> assertEquals(2, l.get(3)); // visiting a grand child\n)\nassertAll runs all checks and doesn't stop at first failure.", "url": "https://github.com/INRIA/spoon/pull/3546#discussion_r476549107", "createdAt": "2020-08-25T15:43:28Z", "author": {"login": "MartinWitt"}, "path": "src/test/java/spoon/reflect/visitor/CtScannerTest.java", "diffHunk": "@@ -356,4 +356,22 @@ public void assertRemoveSame(CtElement o) {\n \t\t\tfail();\n \t\t}\n \t}\n+\n+\t@Test\n+\tpublic void testDequeSCanner() {\n+\t\tCtClass<?> c = Launcher.parseClass(\"class A { void m() { System.out.println(\\\\\\\"yeah\\\\\\\");} }\");\n+\t\tArrayList l = new ArrayList<Integer>();\n+\t\tnew CtDequeScanner() {\n+\t\t\t@Override\n+\t\t\tpublic void scan(CtElement o) {\n+\t\t\t\tl.add(elementsDeque.size());\n+\t\t\t\tsuper.scan(o);\n+\t\t\t}\n+\t\t}.scan(c);\n+\t\t// contract: the CtDequeScanner has the context information of the parents\n+\t\tassertEquals(45, l.size()); // we visited the whole tree\n+\t\tassertEquals(0, l.get(0));\n+\t\tassertEquals(1, l.get(1)); // visiting a child\n+\t\tassertEquals(2, l.get(3)); // visiting a grand child", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69286da85c4570008a2b560569c9c140454cec19"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3647, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}