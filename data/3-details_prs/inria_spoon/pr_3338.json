{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1Njg5NDgy", "number": 3338, "title": "fix: correct package assumption when there is a star import", "bodyText": "Fix #3337\nHello!\nThis is an attempt to fix Spoon incorrectly guessing the package of a type in noclasspath mode. See #3337 for details.\nI need some help with this PR, see the comments.", "createdAt": "2020-04-19T16:07:44Z", "url": "https://github.com/INRIA/spoon/pull/3338", "merged": true, "mergeCommit": {"oid": "6dd8258e7456c22dfa3801176b4a80cd9f3fa1de"}, "closed": true, "closedAt": "2020-05-05T15:28:37Z", "author": {"login": "slarse"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZMpfTAH2gAyNDA1Njg5NDgyOjU5YWZjNjIwOGI4YjkzMjllYmI3OGEwZDU2MmVlZGRlZThkNGZiYTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceQMUmgH2gAyNDA1Njg5NDgyOjQzNTFiZGUyYjI5NmIzZThjZjNjM2MwNDVhYjU1YjIxNWEyMDE3Nzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59afc6208b8b9329ebb78a0d562eeddee8d4fba9", "author": {"user": {"login": "slarse", "name": "Simon Lars\u00e9n"}}, "url": "https://github.com/INRIA/spoon/commit/59afc6208b8b9329ebb78a0d562eeddee8d4fba9", "committedDate": "2020-04-19T15:58:22Z", "message": "Add failing test case for type access+star import with no classpath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a0cdcf444821a1593dbe8927c9a399f6979bd8d", "author": {"user": {"login": "slarse", "name": "Simon Lars\u00e9n"}}, "url": "https://github.com/INRIA/spoon/commit/2a0cdcf444821a1593dbe8927c9a399f6979bd8d", "committedDate": "2020-04-19T16:00:54Z", "message": "Avoid guessing type's package if there is any star import\n\nThis is too restrictive, and counts e.g. java.util.* as an offending import, even though it's fine"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDM0OTg0", "url": "https://github.com/INRIA/spoon/pull/3338#pullrequestreview-396034984", "createdAt": "2020-04-19T16:09:25Z", "commit": {"oid": "2a0cdcf444821a1593dbe8927c9a399f6979bd8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjowOToyNVrOGH5obg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjowOToyNVrOGH5obg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkzNzQ1NA==", "bodyText": "I'm not sure we need to check if it's noclasspath mode, we shouldn't get here in classpath mode? Perhaps assert isNoClasspath instead?", "url": "https://github.com/INRIA/spoon/pull/3338#discussion_r410937454", "createdAt": "2020-04-19T16:09:25Z", "author": {"login": "slarse"}, "path": "src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java", "diffHunk": "@@ -1059,14 +1060,28 @@ void setPackageOrDeclaringType(CtTypeReference<?> ref, CtReference declaring) {\n \t\t\t\tjavaLangPackageReference.setSimpleName(\"java.lang\");\n \t\t\t\tref.setPackage(javaLangPackageReference);\n \t\t\t} catch (NoClassDefFoundError | ClassNotFoundException e) {\n-\t\t\t\t// in that case we consider the package should be the same as the current one. Fix #1293\n-\t\t\t\tref.setPackage(jdtTreeBuilder.getContextBuilder().compilationUnitSpoon.getDeclaredPackage().getReference());\n+\t\t\t\tContextBuilder ctx = jdtTreeBuilder.getContextBuilder();\n+\t\t\t\tboolean isNoClasspath = jdtTreeBuilder.getFactory().getEnvironment().getNoClasspath();\n+\t\t\t\tif (isNoClasspath && containsStarImport(ctx.compilationunitdeclaration.imports)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a0cdcf444821a1593dbe8927c9a399f6979bd8d"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDM1MjM1", "url": "https://github.com/INRIA/spoon/pull/3338#pullrequestreview-396035235", "createdAt": "2020-04-19T16:12:08Z", "commit": {"oid": "2a0cdcf444821a1593dbe8927c9a399f6979bd8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjoxMjowOFrOGH5qNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNjoxMjowOFrOGH5qNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkzNzkwOQ==", "bodyText": "This will return true if there's any star import, which is too restrictive. For example, if there's an import java.util.*, then this will return true and we won't assign the CU's package to the type. But if the star import is actually available, which should be the case for stdlib packages, depending on JDK version, then it should be fine to guess assign the CU's package to the type.\nIs there any way to check which imported packages are actually available at this stage?", "url": "https://github.com/INRIA/spoon/pull/3338#discussion_r410937909", "createdAt": "2020-04-19T16:12:08Z", "author": {"login": "slarse"}, "path": "src/main/java/spoon/support/compiler/jdt/ReferenceBuilder.java", "diffHunk": "@@ -1059,14 +1060,28 @@ void setPackageOrDeclaringType(CtTypeReference<?> ref, CtReference declaring) {\n \t\t\t\tjavaLangPackageReference.setSimpleName(\"java.lang\");\n \t\t\t\tref.setPackage(javaLangPackageReference);\n \t\t\t} catch (NoClassDefFoundError | ClassNotFoundException e) {\n-\t\t\t\t// in that case we consider the package should be the same as the current one. Fix #1293\n-\t\t\t\tref.setPackage(jdtTreeBuilder.getContextBuilder().compilationUnitSpoon.getDeclaredPackage().getReference());\n+\t\t\t\tContextBuilder ctx = jdtTreeBuilder.getContextBuilder();\n+\t\t\t\tboolean isNoClasspath = jdtTreeBuilder.getFactory().getEnvironment().getNoClasspath();\n+\t\t\t\tif (isNoClasspath && containsStarImport(ctx.compilationunitdeclaration.imports)) {\n+\t\t\t\t\t// If there is an unresolved star import in noclasspath,\n+\t\t\t\t\t// we can't tell which package the type belongs to (#3337)\n+\t\t\t\t\tCtPackageReference pkgRef = jdtTreeBuilder.getFactory().Core().createPackageReference();\n+\t\t\t\t\tpkgRef.setImplicit(true);\n+\t\t\t\t\tref.setPackage(pkgRef);\n+\t\t\t\t} else {\n+\t\t\t\t\t// otherwise the type must belong to the CU's package (#1293)\n+\t\t\t\t\tref.setPackage(ctx.compilationUnitSpoon.getDeclaredPackage().getReference());\n+\t\t\t\t}\n \t\t\t}\n \t\t} else {\n \t\t\tthrow new AssertionError(\"unexpected declaring type: \" + declaring.getClass() + \" of \" + declaring);\n \t\t}\n \t}\n \n+\tprivate static boolean containsStarImport(ImportReference[] imports) {\n+\t    return imports != null && Arrays.stream(imports).anyMatch(imp -> imp.toString().endsWith(\"*\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a0cdcf444821a1593dbe8927c9a399f6979bd8d"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76f25924fc445ff05206ab9b44118d6f942ce434", "author": {"user": {"login": "slarse", "name": "Simon Lars\u00e9n"}}, "url": "https://github.com/INRIA/spoon/commit/76f25924fc445ff05206ab9b44118d6f942ce434", "committedDate": "2020-04-19T17:38:05Z", "message": "Fix incorrect indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "157fdd16b6cc71b0c1b953683fb13010053a5909", "author": {"user": {"login": "slarse", "name": "Simon Lars\u00e9n"}}, "url": "https://github.com/INRIA/spoon/commit/157fdd16b6cc71b0c1b953683fb13010053a5909", "committedDate": "2020-05-04T06:54:08Z", "message": "Assert noclasspath mode instead of checking it\n\nWe should never get here in classpath mode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4351bde2b296b3e8cf3c3c045ab55b215a201779", "author": {"user": {"login": "slarse", "name": "Simon Lars\u00e9n"}}, "url": "https://github.com/INRIA/spoon/commit/4351bde2b296b3e8cf3c3c045ab55b215a201779", "committedDate": "2020-05-05T08:55:45Z", "message": "Move assertion to start of block"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1365, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}