{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4OTczNzQ1", "number": 1122, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjoxMDo0NVrOExRVoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwMzowMzoxMVrOExnYOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDk5NzQ0OnYy", "diffSide": "RIGHT", "path": "src/main/resources/application-dev.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjoxMDo0NVrOHnUbhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QyMzozOTo0N1rOHnhEJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk5MTIzNg==", "bodyText": "exclude \u914d\u7f6e\u9700\u914d\u7f6e\u5230 application.yml \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u4fdd\u8bc1\u6240\u6709\u914d\u7f6e\u6587\u4ef6\u751f\u6548\u3002", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r510991236", "createdAt": "2020-10-23T16:10:45Z", "author": {"login": "JohnNiang"}, "path": "src/main/resources/application-dev.yaml", "diffHunk": "@@ -43,6 +43,8 @@ spring:\n       max-request-size: 10240MB\n   cache:\n     type: none\n+  autoconfigure:\n+    exclude: org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "522f3d5388f1a25aae72b7ef920c302953eaff92"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAxOTE0Nw==", "bodyText": "\u5efa\u8bae\u5728 Application \u7c7b\u91cc\u9762\u7528\u6ce8\u89e3 exclude\u3002\u4e0d\u60f3\u5728\u914d\u7f6e\u6587\u4ef6\u6709\u592a\u591a\u4e1c\u897f\u3002", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511019147", "createdAt": "2020-10-23T17:01:40Z", "author": {"login": "ruibaby"}, "path": "src/main/resources/application-dev.yaml", "diffHunk": "@@ -43,6 +43,8 @@ spring:\n       max-request-size: 10240MB\n   cache:\n     type: none\n+  autoconfigure:\n+    exclude: org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk5MTIzNg=="}, "originalCommit": {"oid": "522f3d5388f1a25aae72b7ef920c302953eaff92"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTE5ODI0NQ==", "bodyText": "\u5df2\u53bb\u6389\u914d\u7f6e\uff0c\u6539\u6210\u5728Application\u7c7b\u6dfb\u52a0exclude\u6ce8\u89e3", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511198245", "createdAt": "2020-10-23T23:39:47Z", "author": {"login": "johnwonder"}, "path": "src/main/resources/application-dev.yaml", "diffHunk": "@@ -43,6 +43,8 @@ spring:\n       max-request-size: 10240MB\n   cache:\n     type: none\n+  autoconfigure:\n+    exclude: org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDk5MTIzNg=="}, "originalCommit": {"oid": "522f3d5388f1a25aae72b7ef920c302953eaff92"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMzExMTY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/config/WebMvcAutoConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNTo0MToyNlrOHnovbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNTo0MToyNlrOHnovbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyNDAxMg==", "bodyText": "\u5176\u4ed6\u51e0\u4e2a\u53c2\u6570\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e0b  \u6bd4\u5982\u8bf7\u6c42\u6587\u4ef6\u603b\u5927\u5c0f", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511324012", "createdAt": "2020-10-24T05:41:26Z", "author": {"login": "guqing"}, "path": "src/main/java/run/halo/app/config/WebMvcAutoConfiguration.java", "diffHunk": "@@ -158,6 +164,20 @@ public FreeMarkerConfigurer freemarkerConfig(HaloProperties haloProperties) thro\n         return configurer;\n     }\n \n+    /**\n+     * Configuring multipartResolver for large file upload..\n+     *\n+     * @return new multipartResolver\n+     */\n+    @Bean(name = \"multipartResolver\")\n+    public MultipartResolver multipartResolver(MultipartProperties multipartProperties) {\n+        MultipartConfigElement multipartConfigElement = multipartProperties.createMultipartConfig();\n+        CommonsMultipartResolver resolver = new CommonsMultipartResolver();\n+        resolver.setDefaultEncoding(\"UTF-8\");\n+        resolver.setMaxUploadSize(multipartConfigElement.getMaxFileSize());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9656085b6d433161673d3ba152cc52fc3388225f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDEyNjE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/config/WebMvcAutoConfiguration.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNToyMTo0OVrOHnydjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwMzozMToxMVrOHn2B0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4MzI3Ng==", "bodyText": "\u8fd9\u91cc\u7684\u914d\u7f6e\u4f3c\u4e4e\u8bbe\u7f6e\u53cd\u4e86\u3002\nresolver.setMaxUploadSize(multipartConfigElement.getMaxRequestSize());\nresolver.setMaxUploadSizePerFile(multipartConfigElement.getMaxFileSize())", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511483276", "createdAt": "2020-10-24T15:21:49Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/config/WebMvcAutoConfiguration.java", "diffHunk": "@@ -158,6 +164,20 @@ public FreeMarkerConfigurer freemarkerConfig(HaloProperties haloProperties) thro\n         return configurer;\n     }\n \n+    /**\n+     * Configuring multipartResolver for large file upload..\n+     *\n+     * @return new multipartResolver\n+     */\n+    @Bean(name = \"multipartResolver\")\n+    public MultipartResolver multipartResolver(MultipartProperties multipartProperties) {\n+        MultipartConfigElement multipartConfigElement = multipartProperties.createMultipartConfig();\n+        CommonsMultipartResolver resolver = new CommonsMultipartResolver();\n+        resolver.setDefaultEncoding(\"UTF-8\");\n+        resolver.setMaxUploadSize(multipartConfigElement.getMaxFileSize());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9656085b6d433161673d3ba152cc52fc3388225f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4NDcxNQ==", "bodyText": "\u4e5f\u5efa\u8bae\u5bf9 org.springframework.web.multipart.MaxUploadSizeExceededException \u5f02\u5e38\u8fdb\u884c\u5904\u7406\u3002", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511484715", "createdAt": "2020-10-24T15:36:55Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/config/WebMvcAutoConfiguration.java", "diffHunk": "@@ -158,6 +164,20 @@ public FreeMarkerConfigurer freemarkerConfig(HaloProperties haloProperties) thro\n         return configurer;\n     }\n \n+    /**\n+     * Configuring multipartResolver for large file upload..\n+     *\n+     * @return new multipartResolver\n+     */\n+    @Bean(name = \"multipartResolver\")\n+    public MultipartResolver multipartResolver(MultipartProperties multipartProperties) {\n+        MultipartConfigElement multipartConfigElement = multipartProperties.createMultipartConfig();\n+        CommonsMultipartResolver resolver = new CommonsMultipartResolver();\n+        resolver.setDefaultEncoding(\"UTF-8\");\n+        resolver.setMaxUploadSize(multipartConfigElement.getMaxFileSize());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4MzI3Ng=="}, "originalCommit": {"oid": "9656085b6d433161673d3ba152cc52fc3388225f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzNjU1OA==", "bodyText": "\u597d\u7684 \u6539\u4e86", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511536558", "createdAt": "2020-10-25T02:15:47Z", "author": {"login": "johnwonder"}, "path": "src/main/java/run/halo/app/config/WebMvcAutoConfiguration.java", "diffHunk": "@@ -158,6 +164,20 @@ public FreeMarkerConfigurer freemarkerConfig(HaloProperties haloProperties) thro\n         return configurer;\n     }\n \n+    /**\n+     * Configuring multipartResolver for large file upload..\n+     *\n+     * @return new multipartResolver\n+     */\n+    @Bean(name = \"multipartResolver\")\n+    public MultipartResolver multipartResolver(MultipartProperties multipartProperties) {\n+        MultipartConfigElement multipartConfigElement = multipartProperties.createMultipartConfig();\n+        CommonsMultipartResolver resolver = new CommonsMultipartResolver();\n+        resolver.setDefaultEncoding(\"UTF-8\");\n+        resolver.setMaxUploadSize(multipartConfigElement.getMaxFileSize());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4MzI3Ng=="}, "originalCommit": {"oid": "9656085b6d433161673d3ba152cc52fc3388225f"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU0MTcxNQ==", "bodyText": "\u6211\u672c\u6765\u89c9\u5f97\u4e0d\u8981catch \u8fd9\u4e2a\u5f02\u5e38\u7684\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6709\u4e86multipart\u914d\u7f6e\uff0c\u53ef\u4ee5\u624b\u52a8\u4f7f\u7528\nboolean isMultiPart = MimeTypes.Type.MULTIPART_FORM_DATA.is(HttpFields.valueParameters(request.getContentType(), null)); if(isMultiPart && request.getContentLength() > multipartProperties.getMaxFileSize().toBytes()) \n\u6765\u5224\u65ad\u4e0a\u4f20\u5927\u5c0f\uff0c\u4f46\u662f\u60f3\u60f3\u8fd8\u662f\u89c9\u5f97\u4ea4\u7531\u6846\u67b6\u5c42\u9762\u53bb\u5224\u65ad\u5427", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511541715", "createdAt": "2020-10-25T03:31:11Z", "author": {"login": "johnwonder"}, "path": "src/main/java/run/halo/app/config/WebMvcAutoConfiguration.java", "diffHunk": "@@ -158,6 +164,20 @@ public FreeMarkerConfigurer freemarkerConfig(HaloProperties haloProperties) thro\n         return configurer;\n     }\n \n+    /**\n+     * Configuring multipartResolver for large file upload..\n+     *\n+     * @return new multipartResolver\n+     */\n+    @Bean(name = \"multipartResolver\")\n+    public MultipartResolver multipartResolver(MultipartProperties multipartProperties) {\n+        MultipartConfigElement multipartConfigElement = multipartProperties.createMultipartConfig();\n+        CommonsMultipartResolver resolver = new CommonsMultipartResolver();\n+        resolver.setDefaultEncoding(\"UTF-8\");\n+        resolver.setMaxUploadSize(multipartConfigElement.getMaxFileSize());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4MzI3Ng=="}, "originalCommit": {"oid": "9656085b6d433161673d3ba152cc52fc3388225f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDYwODU2OnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/security/filter/AdminAuthenticationFilter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwMzowMzoxMVrOHn16PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwNToxNTo0OVrOHn2d2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzOTc3Mw==", "bodyText": "\u4e0d\u63a8\u8350\u5728 AdminAuthenticationFilter \u4e2d\u5904\u7406\u8fd9\u6837\u7684\u5f02\u5e38\u3002\n\u5efa\u8bae\u5728 run.halo.app.core.ControllerExceptionHandler \u4e2d\u6dfb\u52a0\u5168\u5c40\u5f02\u5e38\u5904\u7406\u3002\n    @ExceptionHandler(MaxUploadSizeExceededException.class)\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\n    public BaseResponse<?> handleUploadSizeExceededException(MaxUploadSizeExceededException e) {\n        BaseResponse<Object> response = handleBaseException(e);\n        response.setStatus(HttpStatus.BAD_REQUEST.value());\n        response.setMessage(\"\u5f53\u524d\u8bf7\u6c42\u8d85\u51fa\u6700\u5927\u9650\u5236\uff1a\" + e.getMaxUploadSize() + \" bytes\");\n        return response;\n    }\n\u8fd9\u91cc\u6709\u4e00\u4e2a\u524d\u63d0\u662f\uff1a\u8bbe\u7f6e CommonsMultipartResolver \u7684 resolveLazily \u5c5e\u6027\u4e3a true\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u5e38\u6355\u6349\u5230\u5f02\u5e38\u3002\n        CommonsMultipartResolver resolver = new CommonsMultipartResolver();\n        resolver.setDefaultEncoding(\"UTF-8\");\n        resolver.setMaxUploadSize(multipartConfigElement.getMaxRequestSize());\n        resolver.setMaxUploadSizePerFile(multipartConfigElement.getMaxFileSize());\n+       resolver.setResolveLazily(true);\n        return resolver;", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511539773", "createdAt": "2020-10-25T03:03:11Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/security/filter/AdminAuthenticationFilter.java", "diffHunk": "@@ -113,7 +116,15 @@ protected void doAuthenticate(HttpServletRequest request, HttpServletResponse re\n         SecurityContextHolder.setContext(new SecurityContextImpl(new AuthenticationImpl(userDetail)));\n \n         // Do filter\n-        filterChain.doFilter(request, response);\n+        try{\n+            filterChain.doFilter(request, response);\n+        }\n+        catch (NestedServletException nestedServletEx){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8aa4d15e4c0bb860295b11adba54a4fd12238e73"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU0ODMzMg==", "bodyText": "\u539f\u6765ResolveLazily\u662f\u8fd9\u4e2a\u610f\u601d \u6211\u9760\u5b66\u5230\u4e86\ud83d\ude4a \u5999\u554a", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511548332", "createdAt": "2020-10-25T05:07:44Z", "author": {"login": "guqing"}, "path": "src/main/java/run/halo/app/security/filter/AdminAuthenticationFilter.java", "diffHunk": "@@ -113,7 +116,15 @@ protected void doAuthenticate(HttpServletRequest request, HttpServletResponse re\n         SecurityContextHolder.setContext(new SecurityContextImpl(new AuthenticationImpl(userDetail)));\n \n         // Do filter\n-        filterChain.doFilter(request, response);\n+        try{\n+            filterChain.doFilter(request, response);\n+        }\n+        catch (NestedServletException nestedServletEx){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzOTc3Mw=="}, "originalCommit": {"oid": "8aa4d15e4c0bb860295b11adba54a4fd12238e73"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU0ODg5MA==", "bodyText": "ok,\u5fd8\u4e86\u6709\u5168\u5c40\u5f02\u5e38\u5904\u7406\u3002\u3002\u3002,\u611f\u8c22\u6307\u6559", "url": "https://github.com/halo-dev/halo/pull/1122#discussion_r511548890", "createdAt": "2020-10-25T05:15:49Z", "author": {"login": "johnwonder"}, "path": "src/main/java/run/halo/app/security/filter/AdminAuthenticationFilter.java", "diffHunk": "@@ -113,7 +116,15 @@ protected void doAuthenticate(HttpServletRequest request, HttpServletResponse re\n         SecurityContextHolder.setContext(new SecurityContextImpl(new AuthenticationImpl(userDetail)));\n \n         // Do filter\n-        filterChain.doFilter(request, response);\n+        try{\n+            filterChain.doFilter(request, response);\n+        }\n+        catch (NestedServletException nestedServletEx){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTUzOTc3Mw=="}, "originalCommit": {"oid": "8aa4d15e4c0bb860295b11adba54a4fd12238e73"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2027, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}