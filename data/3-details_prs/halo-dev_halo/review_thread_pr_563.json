{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNDY3NjIw", "number": 563, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDozNDoyNVrODeryRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNzo1MjoxMlrODgMrLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxMjU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/service/impl/CategoryServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDozNDoyNVrOFn9SPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjo0Njo1NlrOFn-pwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mjg3OA==", "bodyText": "\u8fd9\u4e2a\u62fc\u63a5\u7684\u90e8\u5206\u548ctag\u903b\u8f91\u5dee\u4e0d\u591a\u662f\u4e0d\u662f\u8003\u8651\u62bd\u53d6\u4e00\u4e0b", "url": "https://github.com/halo-dev/halo/pull/563#discussion_r377442878", "createdAt": "2020-02-11T04:34:25Z", "author": {"login": "guqing"}, "path": "src/main/java/run/halo/app/service/impl/CategoryServiceImpl.java", "diffHunk": "@@ -188,7 +193,23 @@ public void removeCategoryAndPostCategoryBy(Integer categoryId) {\n     public CategoryDTO convertTo(Category category) {\n         Assert.notNull(category, \"Category must not be null\");\n \n-        return new CategoryDTO().convertFrom(category);\n+        CategoryDTO categoryDTO = new CategoryDTO().convertFrom(category);\n+\n+        StringBuilder fullPath = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4da89205c563a19b896e06eb83e179682fcaa35"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NTI4MA==", "bodyText": "\u597d", "url": "https://github.com/halo-dev/halo/pull/563#discussion_r377465280", "createdAt": "2020-02-11T06:46:56Z", "author": {"login": "ruibaby"}, "path": "src/main/java/run/halo/app/service/impl/CategoryServiceImpl.java", "diffHunk": "@@ -188,7 +193,23 @@ public void removeCategoryAndPostCategoryBy(Integer categoryId) {\n     public CategoryDTO convertTo(Category category) {\n         Assert.notNull(category, \"Category must not be null\");\n \n-        return new CategoryDTO().convertFrom(category);\n+        CategoryDTO categoryDTO = new CategoryDTO().convertFrom(category);\n+\n+        StringBuilder fullPath = new StringBuilder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mjg3OA=="}, "originalCommit": {"oid": "a4da89205c563a19b896e06eb83e179682fcaa35"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjU5MTA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/controller/content/ContentContentController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNjoxNTo0N1rOFpsiwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNjozODo0MFrOFps2Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI2NTcyOQ==", "bodyText": "\u8fd9\u4e48\u591a if  else\uff0c\u5f97\u8003\u8651\u4f18\u5316\u4e00\u4e0b\u4e86\u3002", "url": "https://github.com/halo-dev/halo/pull/563#discussion_r379265729", "createdAt": "2020-02-14T06:15:47Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/controller/content/ContentContentController.java", "diffHunk": "@@ -37,41 +34,56 @@\n \n     private final TagModel tagModel;\n \n+    private final JournalModel journalModel;\n+\n+    private final PhotoModel photoModel;\n+\n     private final OptionService optionService;\n \n     private final PostService postService;\n \n     private final SheetService sheetService;\n \n+    private final ThemeService themeService;\n+\n     public ContentContentController(PostModel postModel,\n                                     SheetModel sheetModel,\n                                     CategoryModel categoryModel,\n                                     TagModel tagModel,\n+                                    JournalModel journalModel,\n+                                    PhotoModel photoModel,\n                                     OptionService optionService,\n                                     PostService postService,\n-                                    SheetService sheetService) {\n+                                    SheetService sheetService,\n+                                    ThemeService themeService) {\n         this.postModel = postModel;\n         this.sheetModel = sheetModel;\n         this.categoryModel = categoryModel;\n         this.tagModel = tagModel;\n+        this.journalModel = journalModel;\n+        this.photoModel = photoModel;\n         this.optionService = optionService;\n         this.postService = postService;\n         this.sheetService = sheetService;\n+        this.themeService = themeService;\n     }\n \n     @GetMapping(\"{prefix}\")\n     public String content(@PathVariable(\"prefix\") String prefix,\n                           Model model) {\n-        String archivesPrefix = optionService.getByPropertyOrDefault(PermalinkProperties.ARCHIVES_PREFIX, String.class, PermalinkProperties.ARCHIVES_PREFIX.defaultValue());\n-        String categoriesPrefix = optionService.getByPropertyOrDefault(PermalinkProperties.CATEGORIES_PREFIX, String.class, PermalinkProperties.CATEGORIES_PREFIX.defaultValue());\n-        String tagsPrefix = optionService.getByPropertyOrDefault(PermalinkProperties.TAGS_PREFIX, String.class, PermalinkProperties.TAGS_PREFIX.defaultValue());\n-\n-        if (archivesPrefix.equals(prefix)) {\n+        if (optionService.getArchivesPrefix().equals(prefix)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65dd741ede1c73d8eeeca2bb5adcb332a58fa620"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI3MDczMA==", "bodyText": "\u4f1a\u7684", "url": "https://github.com/halo-dev/halo/pull/563#discussion_r379270730", "createdAt": "2020-02-14T06:38:40Z", "author": {"login": "ruibaby"}, "path": "src/main/java/run/halo/app/controller/content/ContentContentController.java", "diffHunk": "@@ -37,41 +34,56 @@\n \n     private final TagModel tagModel;\n \n+    private final JournalModel journalModel;\n+\n+    private final PhotoModel photoModel;\n+\n     private final OptionService optionService;\n \n     private final PostService postService;\n \n     private final SheetService sheetService;\n \n+    private final ThemeService themeService;\n+\n     public ContentContentController(PostModel postModel,\n                                     SheetModel sheetModel,\n                                     CategoryModel categoryModel,\n                                     TagModel tagModel,\n+                                    JournalModel journalModel,\n+                                    PhotoModel photoModel,\n                                     OptionService optionService,\n                                     PostService postService,\n-                                    SheetService sheetService) {\n+                                    SheetService sheetService,\n+                                    ThemeService themeService) {\n         this.postModel = postModel;\n         this.sheetModel = sheetModel;\n         this.categoryModel = categoryModel;\n         this.tagModel = tagModel;\n+        this.journalModel = journalModel;\n+        this.photoModel = photoModel;\n         this.optionService = optionService;\n         this.postService = postService;\n         this.sheetService = sheetService;\n+        this.themeService = themeService;\n     }\n \n     @GetMapping(\"{prefix}\")\n     public String content(@PathVariable(\"prefix\") String prefix,\n                           Model model) {\n-        String archivesPrefix = optionService.getByPropertyOrDefault(PermalinkProperties.ARCHIVES_PREFIX, String.class, PermalinkProperties.ARCHIVES_PREFIX.defaultValue());\n-        String categoriesPrefix = optionService.getByPropertyOrDefault(PermalinkProperties.CATEGORIES_PREFIX, String.class, PermalinkProperties.CATEGORIES_PREFIX.defaultValue());\n-        String tagsPrefix = optionService.getByPropertyOrDefault(PermalinkProperties.TAGS_PREFIX, String.class, PermalinkProperties.TAGS_PREFIX.defaultValue());\n-\n-        if (archivesPrefix.equals(prefix)) {\n+        if (optionService.getArchivesPrefix().equals(prefix)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI2NTcyOQ=="}, "originalCommit": {"oid": "65dd741ede1c73d8eeeca2bb5adcb332a58fa620"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDg4Njg2OnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/controller/content/ContentContentController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNzo1MjoxMlrOFqSNAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNzo1MjoxMlrOFqSNAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg4Mjc1Mw==", "bodyText": "\u8fd9\u91cc\u53ef\u4ee5\u8003\u8651\u7528 OneTimeTokenService \u6765\u4ee3\u66ff\u3002", "url": "https://github.com/halo-dev/halo/pull/563#discussion_r379882753", "createdAt": "2020-02-16T07:52:12Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/controller/content/ContentContentController.java", "diffHunk": "@@ -170,4 +181,38 @@ public String content(@PathVariable(\"year\") Integer year,\n             throw new NotFoundException(\"Not Found\");\n         }\n     }\n+\n+    @PostMapping(value = \"archives/{url:.*}/password\")\n+    @CacheLock(traceRequest = true, expired = 2)\n+    public String password(@PathVariable(\"url\") String url,\n+                           @RequestParam(value = \"password\") String password) throws UnsupportedEncodingException {\n+        Post post = postService.getBy(PostStatus.INTIMATE, url);\n+\n+        post.setUrl(URLEncoder.encode(post.getUrl(), StandardCharsets.UTF_8.name()));\n+\n+        BasePostMinimalDTO postMinimalDTO = postService.convertToMinimal(post);\n+\n+        StringBuilder redirectUrl = new StringBuilder();\n+\n+        if (!optionService.isEnabledAbsolutePath()) {\n+            redirectUrl.append(optionService.getBlogBaseUrl());\n+        }\n+\n+        redirectUrl.append(postMinimalDTO.getFullPath());\n+\n+        if (password.equals(post.getPassword())) {\n+            String token = IdUtil.simpleUUID();\n+            cacheStore.putAny(token, token, 10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f0cd86b97122e37d54f2a9a66561537a23c1984"}, "originalPosition": 86}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2066, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}