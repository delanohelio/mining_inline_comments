{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNTIzOTU5", "number": 812, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowMzo1OVrOD4Dtaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoyMjozOFrOD4EN-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTA3NjI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/service/impl/BackupServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowMzo1OVrOGOq0xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoxOTowN1rOGOresw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNDg4NQ==", "bodyText": "\u8fd9\u91cc\u7684\u6392\u5e8f\u53ef\u80fd\u548c\u672c\u8eab\u7684\u6392\u5e8f\u76f8\u53cd\uff0c\u4e0d\u77e5\u9053\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\u5bb9\u6211\u60f3\u60f3\u3002", "url": "https://github.com/halo-dev/halo/pull/812#discussion_r418034885", "createdAt": "2020-04-30T14:03:59Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/service/impl/BackupServiceImpl.java", "diffHunk": "@@ -190,17 +191,10 @@ public BackupDTO backupWorkDirectory() {\n         // Build backup dto\n         try (Stream<Path> subPathStream = Files.list(backupParentPath)) {\n             return subPathStream\n-                .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n-                .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n-                .sorted((leftBackup, rightBackup) -> {\n-                    // Sort the result\n-                    if (leftBackup.getUpdateTime() < rightBackup.getUpdateTime()) {\n-                        return 1;\n-                    } else if (leftBackup.getUpdateTime() > rightBackup.getUpdateTime()) {\n-                        return -1;\n-                    }\n-                    return 0;\n-                }).collect(Collectors.toList());\n+                    .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n+                    .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n+                    .sorted(Comparator.comparingLong(BackupDTO::getUpdateTime))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca886193bb75a85b9398a55f34553702d07be8b9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0MzU5NQ==", "bodyText": "\u8c8c\u4f3c\u597d\u50cf\u662f\u53cd\u7684\n    List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8);\n\n    List<Integer> values = numbers.stream()\n            .sorted(Comparator.comparingLong(Integer::longValue).reversed())\n            .collect(Collectors.toList());\n    System.out.println(values);\n\n    List<Integer> anotherValues = numbers.stream().sorted((prev, next) -> {\n        if (prev < next) {\n            return 1;\n        } else if (prev > next) {\n            return -1;\n        }\n        return 0;\n    }).collect(Collectors.toList());\n\n    System.out.println(anotherValues);\n\u52a0\u4e0areversed\u4e4b\u540e\u7ed3\u679c\u662f\u7b26\u5408\u9884\u671f\u7684\n[8, 7, 6, 5, 4, 3, 2, 1]\n[8, 7, 6, 5, 4, 3, 2, 1]", "url": "https://github.com/halo-dev/halo/pull/812#discussion_r418043595", "createdAt": "2020-04-30T14:16:16Z", "author": {"login": "liaozan"}, "path": "src/main/java/run/halo/app/service/impl/BackupServiceImpl.java", "diffHunk": "@@ -190,17 +191,10 @@ public BackupDTO backupWorkDirectory() {\n         // Build backup dto\n         try (Stream<Path> subPathStream = Files.list(backupParentPath)) {\n             return subPathStream\n-                .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n-                .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n-                .sorted((leftBackup, rightBackup) -> {\n-                    // Sort the result\n-                    if (leftBackup.getUpdateTime() < rightBackup.getUpdateTime()) {\n-                        return 1;\n-                    } else if (leftBackup.getUpdateTime() > rightBackup.getUpdateTime()) {\n-                        return -1;\n-                    }\n-                    return 0;\n-                }).collect(Collectors.toList());\n+                    .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n+                    .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n+                    .sorted(Comparator.comparingLong(BackupDTO::getUpdateTime))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNDg4NQ=="}, "originalCommit": {"oid": "ca886193bb75a85b9398a55f34553702d07be8b9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0NTYxOQ==", "bodyText": "\u5df2\u4fee\u590d", "url": "https://github.com/halo-dev/halo/pull/812#discussion_r418045619", "createdAt": "2020-04-30T14:19:07Z", "author": {"login": "liaozan"}, "path": "src/main/java/run/halo/app/service/impl/BackupServiceImpl.java", "diffHunk": "@@ -190,17 +191,10 @@ public BackupDTO backupWorkDirectory() {\n         // Build backup dto\n         try (Stream<Path> subPathStream = Files.list(backupParentPath)) {\n             return subPathStream\n-                .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n-                .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n-                .sorted((leftBackup, rightBackup) -> {\n-                    // Sort the result\n-                    if (leftBackup.getUpdateTime() < rightBackup.getUpdateTime()) {\n-                        return 1;\n-                    } else if (leftBackup.getUpdateTime() > rightBackup.getUpdateTime()) {\n-                        return -1;\n-                    }\n-                    return 0;\n-                }).collect(Collectors.toList());\n+                    .filter(backupPath -> StringUtils.startsWithIgnoreCase(backupPath.getFileName().toString(), HaloConst.HALO_BACKUP_PREFIX))\n+                    .map(backupPath -> buildBackupDto(BACKUP_RESOURCE_BASE_URI, backupPath))\n+                    .sorted(Comparator.comparingLong(BackupDTO::getUpdateTime))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNDg4NQ=="}, "originalCommit": {"oid": "ca886193bb75a85b9398a55f34553702d07be8b9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTE1OTYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/service/impl/BackupServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoyMjozOFrOGOro8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDoyMjozOFrOGOro8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA0ODI0MQ==", "bodyText": "\u4f60\u53ef\u80fd\u5c06 Pattern \u63d0\u53d6\u5230\u4e86 DateTimeUtils\uff0c\u4f46\u662f\u5fd8\u8bb0\u6dfb\u52a0\u5230 Git \u4e86\u3002", "url": "https://github.com/halo-dev/halo/pull/812#discussion_r418048241", "createdAt": "2020-04-30T14:22:38Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/service/impl/BackupServiceImpl.java", "diffHunk": "@@ -285,8 +286,8 @@ public BackupDTO exportData() {\n \n         try {\n             String haloDataFileName = HaloConst.HALO_DATA_EXPORT_PREFIX +\n-                LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd-HH-mm-ss-\")) +\n-                IdUtil.simpleUUID().hashCode() + \".json\";\n+                    LocalDateTime.now().format(DateTimeUtils.HORIZONTAL_LINE_DATETIME_FORMATTER) +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c887fd637e9e86ff41ea85947435eae9db13e3"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2041, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}