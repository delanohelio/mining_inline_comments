{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NjMzODc2", "number": 956, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjoxNDozMlrOEMwVgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjoxMzoxNFrOENHa0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODEwMzA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/run/halo/app/utils/HttpClientUtils.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNjoxNDozMlrOGvDC7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMjowNToxNlrOGvOHrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NjE1Ng==", "bodyText": "\u662f\u5426\u9700\u8981\u8003\u8651\u4e00\u4e0b\u9700\u8981\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u4ee3\u7406\u5462\uff1f", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r451986156", "createdAt": "2020-07-09T06:14:32Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/utils/HttpClientUtils.java", "diffHunk": "@@ -44,7 +47,13 @@ public static CloseableHttpClient createHttpsClient(int timeout) throws KeyStore\n             .loadTrustMaterial(null, (certificate, authType) -> true)\n             .build();\n \n-        return HttpClients.custom()\n+        final HttpClientBuilder httpClientBuilder = HttpClients.custom();\n+        final String httpProxy = System.getenv(\"http_proxy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf39244dc1136156c6effbdce8135332669e4baf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NzE5Ng==", "bodyText": "Follow: https://hc.apache.org/httpcomponents-client-ga/httpclient/examples/org/apache/http/examples/client/ClientProxyAuthentication.java", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r451987196", "createdAt": "2020-07-09T06:17:03Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/utils/HttpClientUtils.java", "diffHunk": "@@ -44,7 +47,13 @@ public static CloseableHttpClient createHttpsClient(int timeout) throws KeyStore\n             .loadTrustMaterial(null, (certificate, authType) -> true)\n             .build();\n \n-        return HttpClients.custom()\n+        final HttpClientBuilder httpClientBuilder = HttpClients.custom();\n+        final String httpProxy = System.getenv(\"http_proxy\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NjE1Ng=="}, "originalCommit": {"oid": "cf39244dc1136156c6effbdce8135332669e4baf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAxNTY3Ng==", "bodyText": "\u52a0\u4e86\u54c8", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452015676", "createdAt": "2020-07-09T07:24:21Z", "author": {"login": "sheiy"}, "path": "src/main/java/run/halo/app/utils/HttpClientUtils.java", "diffHunk": "@@ -44,7 +47,13 @@ public static CloseableHttpClient createHttpsClient(int timeout) throws KeyStore\n             .loadTrustMaterial(null, (certificate, authType) -> true)\n             .build();\n \n-        return HttpClients.custom()\n+        final HttpClientBuilder httpClientBuilder = HttpClients.custom();\n+        final String httpProxy = System.getenv(\"http_proxy\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NjE1Ng=="}, "originalCommit": {"oid": "cf39244dc1136156c6effbdce8135332669e4baf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0NTU5OQ==", "bodyText": "\u5efa\u8bae\u5bf9\u89e3\u6790 http_proxy \u90e8\u5206\u7684\u4ee3\u7801\u62bd\u51fa\u6765\uff0c\u5e76\u5bf9\u5176\u5199\u4e00\u4e9b\u6d4b\u8bd5\u3002", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452045599", "createdAt": "2020-07-09T08:19:03Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/utils/HttpClientUtils.java", "diffHunk": "@@ -44,7 +47,13 @@ public static CloseableHttpClient createHttpsClient(int timeout) throws KeyStore\n             .loadTrustMaterial(null, (certificate, authType) -> true)\n             .build();\n \n-        return HttpClients.custom()\n+        final HttpClientBuilder httpClientBuilder = HttpClients.custom();\n+        final String httpProxy = System.getenv(\"http_proxy\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NjE1Ng=="}, "originalCommit": {"oid": "cf39244dc1136156c6effbdce8135332669e4baf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEwMTg3Ng==", "bodyText": "\u6211\u6ce8\u91ca\u6389\u4e5f\u80fd\u6b63\u5e38\u542f\u52a8\u73b0\u5728\u7cfb\u7edf\u4e2d\u662f\u5426\u8fd8\u5728\u4f7f\u7528\u8fd9\u4e2a\u5305\uff1f//    implementation \"com.google.zxing:core:$zxingVersion\"", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452101876", "createdAt": "2020-07-09T09:54:11Z", "author": {"login": "sheiy"}, "path": "src/main/java/run/halo/app/utils/HttpClientUtils.java", "diffHunk": "@@ -44,7 +47,13 @@ public static CloseableHttpClient createHttpsClient(int timeout) throws KeyStore\n             .loadTrustMaterial(null, (certificate, authType) -> true)\n             .build();\n \n-        return HttpClients.custom()\n+        final HttpClientBuilder httpClientBuilder = HttpClients.custom();\n+        final String httpProxy = System.getenv(\"http_proxy\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NjE1Ng=="}, "originalCommit": {"oid": "cf39244dc1136156c6effbdce8135332669e4baf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2NzU5Nw==", "bodyText": "\u8be5\u4f9d\u8d56\u4f3c\u4e4e\u6ca1\u6709\u88ab\u7528\u5230\u3002\u53ef\u4ee5\u79fb\u51fa\u3002", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452167597", "createdAt": "2020-07-09T12:05:16Z", "author": {"login": "JohnNiang"}, "path": "src/main/java/run/halo/app/utils/HttpClientUtils.java", "diffHunk": "@@ -44,7 +47,13 @@ public static CloseableHttpClient createHttpsClient(int timeout) throws KeyStore\n             .loadTrustMaterial(null, (certificate, authType) -> true)\n             .build();\n \n-        return HttpClients.custom()\n+        final HttpClientBuilder httpClientBuilder = HttpClients.custom();\n+        final String httpProxy = System.getenv(\"http_proxy\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk4NjE1Ng=="}, "originalCommit": {"oid": "cf39244dc1136156c6effbdce8135332669e4baf"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTIyMzI0OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo1NTo0MVrOGvN0xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo1NTo0MVrOGvN0xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2Mjc1OQ==", "bodyText": "\u524d\u6bb5\u65f6\u95f4\u6211\u4eec\u5df2\u7ecf\u5168\u9762\u5c06 junit4 \u6a21\u5757\u66f4\u6539\u4e3a junit5\uff0c\u8fd9\u91cc\u662f\u4e0d\u9700\u8981\u8fd9\u6bb5\u914d\u7f6e\u7684\u3002", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452162759", "createdAt": "2020-07-09T11:55:41Z", "author": {"login": "JohnNiang"}, "path": "build.gradle", "diffHunk": "@@ -68,6 +68,10 @@ ext {\n     powermockApiMockito2 = \"2.0.7\"\n }\n \n+test {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcead705f70883ea7f4bd1d961ff44b566433a21"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTIyNjI1OnYy", "diffSide": "RIGHT", "path": "src/test/java/run/halo/app/utils/HttpClientUtilsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo1NjozN1rOGvN2sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTo1OTowNVrOGvN7ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2MzI1MQ==", "bodyText": "\u63a8\u8350\u7528 org.junit.jupiter.api.Assertions#assertArrayEquals()\u3002", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452163251", "createdAt": "2020-07-09T11:56:37Z", "author": {"login": "JohnNiang"}, "path": "src/test/java/run/halo/app/utils/HttpClientUtilsTest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package run.halo.app.utils;\n+\n+import cn.hutool.core.lang.Tuple;\n+import org.junit.jupiter.api.Test;\n+\n+import java.lang.reflect.Method;\n+\n+public class HttpClientUtilsTest {\n+\n+\n+    @Test\n+    void resolveHttpProxyTest() throws Exception {\n+        final Method resolveHttpProxy = HttpClientUtils.class.getDeclaredMethod(\"resolveHttpProxy\", String.class);\n+        resolveHttpProxy.setAccessible(true);\n+\n+        Tuple result = (Tuple) resolveHttpProxy.invoke(null, \"http://127.0.0.1\");\n+        assert result.get(0).equals(\"http://127.0.0.1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcead705f70883ea7f4bd1d961ff44b566433a21"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2NDQ5MA==", "bodyText": "\u8fd8\u6709 org.junit.jupiter.api.Assertions#assertEquals()\u3002", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452164490", "createdAt": "2020-07-09T11:59:05Z", "author": {"login": "JohnNiang"}, "path": "src/test/java/run/halo/app/utils/HttpClientUtilsTest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package run.halo.app.utils;\n+\n+import cn.hutool.core.lang.Tuple;\n+import org.junit.jupiter.api.Test;\n+\n+import java.lang.reflect.Method;\n+\n+public class HttpClientUtilsTest {\n+\n+\n+    @Test\n+    void resolveHttpProxyTest() throws Exception {\n+        final Method resolveHttpProxy = HttpClientUtils.class.getDeclaredMethod(\"resolveHttpProxy\", String.class);\n+        resolveHttpProxy.setAccessible(true);\n+\n+        Tuple result = (Tuple) resolveHttpProxy.invoke(null, \"http://127.0.0.1\");\n+        assert result.get(0).equals(\"http://127.0.0.1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE2MzI1MQ=="}, "originalCommit": {"oid": "dcead705f70883ea7f4bd1d961ff44b566433a21"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTg4NDk4OnYy", "diffSide": "RIGHT", "path": "src/test/java/run/halo/app/utils/HttpClientUtilsTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjoxMzoxNFrOGvnnjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjo1MDoyNVrOGvoKzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4NTM1OA==", "bodyText": "\u7a81\u7136\u53d1\u73b0\u8fd9\u91cc\u6709\u4e9b\u4e0d\u6807\u51c6\u3002\nu:p@https://127.0.0.1:123\nhttps://u:p@127.0.0.1:123\n\u5b9e\u9645\u4e0a resolveHttpProxy \u8fd9\u6bb5\u903b\u8f91\u5728 java.net.URI \u5df2\u7ecf\u5b9e\u73b0\u4e86\u3002", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452585358", "createdAt": "2020-07-10T02:13:14Z", "author": {"login": "JohnNiang"}, "path": "src/test/java/run/halo/app/utils/HttpClientUtilsTest.java", "diffHunk": "@@ -5,28 +5,27 @@\n \n import java.lang.reflect.Method;\n \n-public class HttpClientUtilsTest {\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n \n+public class HttpClientUtilsTest {\n \n     @Test\n     void resolveHttpProxyTest() throws Exception {\n         final Method resolveHttpProxy = HttpClientUtils.class.getDeclaredMethod(\"resolveHttpProxy\", String.class);\n         resolveHttpProxy.setAccessible(true);\n \n         Tuple result = (Tuple) resolveHttpProxy.invoke(null, \"http://127.0.0.1\");\n-        assert result.get(0).equals(\"http://127.0.0.1\");\n+        assertEquals(result.get(0), \"http://127.0.0.1\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"https://127.0.0.1\");\n-        assert result.get(0).equals(\"https://127.0.0.1\");\n+        assertEquals(result.get(0), \"https://127.0.0.1\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"https://127.0.0.1:123\");\n-        assert result.get(0).equals(\"https://127.0.0.1:123\");\n+        assertEquals(result.get(0), \"https://127.0.0.1:123\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"u:p@https://127.0.0.1:123\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "480a6505c62d400a1eda2d3f35a569a1a69a384c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4OTg4MA==", "bodyText": "\u6211\u7f51\u4e0a\u641clinux\u547d\u4ee4\u884c\u914d\u7f6e\u4ee3\u7406\u8c8c\u4f3c\u662f\u8fd9\u4e2a\u683c\u5f0f\u554a \u4e0d\u8fc7\u6211\u6ca1\u8bd5\u8fc7", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452589880", "createdAt": "2020-07-10T02:31:49Z", "author": {"login": "sheiy"}, "path": "src/test/java/run/halo/app/utils/HttpClientUtilsTest.java", "diffHunk": "@@ -5,28 +5,27 @@\n \n import java.lang.reflect.Method;\n \n-public class HttpClientUtilsTest {\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n \n+public class HttpClientUtilsTest {\n \n     @Test\n     void resolveHttpProxyTest() throws Exception {\n         final Method resolveHttpProxy = HttpClientUtils.class.getDeclaredMethod(\"resolveHttpProxy\", String.class);\n         resolveHttpProxy.setAccessible(true);\n \n         Tuple result = (Tuple) resolveHttpProxy.invoke(null, \"http://127.0.0.1\");\n-        assert result.get(0).equals(\"http://127.0.0.1\");\n+        assertEquals(result.get(0), \"http://127.0.0.1\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"https://127.0.0.1\");\n-        assert result.get(0).equals(\"https://127.0.0.1\");\n+        assertEquals(result.get(0), \"https://127.0.0.1\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"https://127.0.0.1:123\");\n-        assert result.get(0).equals(\"https://127.0.0.1:123\");\n+        assertEquals(result.get(0), \"https://127.0.0.1:123\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"u:p@https://127.0.0.1:123\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4NTM1OA=="}, "originalCommit": {"oid": "480a6505c62d400a1eda2d3f35a569a1a69a384c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU5NDM4Mw==", "bodyText": "\u767e\u5ea6\u5bb3\u4eba  \u6211\u521agoogle\u4e86\u4e0b  https://u:p@127.0.0.1:123 \u8fd9\u79cd\u624d\u662f\u5bf9\u7684  \u6211\u6539\u4e0b\u3002\u3002\u3002\u3002", "url": "https://github.com/halo-dev/halo/pull/956#discussion_r452594383", "createdAt": "2020-07-10T02:50:25Z", "author": {"login": "sheiy"}, "path": "src/test/java/run/halo/app/utils/HttpClientUtilsTest.java", "diffHunk": "@@ -5,28 +5,27 @@\n \n import java.lang.reflect.Method;\n \n-public class HttpClientUtilsTest {\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n \n+public class HttpClientUtilsTest {\n \n     @Test\n     void resolveHttpProxyTest() throws Exception {\n         final Method resolveHttpProxy = HttpClientUtils.class.getDeclaredMethod(\"resolveHttpProxy\", String.class);\n         resolveHttpProxy.setAccessible(true);\n \n         Tuple result = (Tuple) resolveHttpProxy.invoke(null, \"http://127.0.0.1\");\n-        assert result.get(0).equals(\"http://127.0.0.1\");\n+        assertEquals(result.get(0), \"http://127.0.0.1\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"https://127.0.0.1\");\n-        assert result.get(0).equals(\"https://127.0.0.1\");\n+        assertEquals(result.get(0), \"https://127.0.0.1\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"https://127.0.0.1:123\");\n-        assert result.get(0).equals(\"https://127.0.0.1:123\");\n+        assertEquals(result.get(0), \"https://127.0.0.1:123\");\n \n         result = (Tuple) resolveHttpProxy.invoke(null, \"u:p@https://127.0.0.1:123\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4NTM1OA=="}, "originalCommit": {"oid": "480a6505c62d400a1eda2d3f35a569a1a69a384c"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2001, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}