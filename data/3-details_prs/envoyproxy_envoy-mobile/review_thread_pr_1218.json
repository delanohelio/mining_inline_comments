{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyODA0OTgx", "number": 1218, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoxNzo0MVrOFNzv5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoxODowNlrOFNzwlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMDIzNjU0OnYy", "diffSide": "RIGHT", "path": "library/cc/stream.cc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoxNzo0MVrOISORRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoxOTowOFrOISOU4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk3OTA3OA==", "bodyText": "Envoy style is for all instance methods to be camelCase.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1218#discussion_r555979078", "createdAt": "2021-01-12T18:17:41Z", "author": {"login": "goaway"}, "path": "library/cc/stream.cc", "diffHunk": "@@ -0,0 +1,37 @@\n+#include \"stream.h\"\n+\n+#include <iostream>\n+\n+#include \"bridge_utility.h\"\n+#include \"library/common/main_interface.h\"\n+#include \"library/common/types/c_types.h\"\n+\n+namespace Envoy {\n+namespace Platform {\n+\n+Stream::Stream(envoy_stream_t handle, EnvoyHttpCallbacksAdapterSharedPtr adapter)\n+    : handle_(handle), adapter_(adapter) {}\n+\n+Stream& Stream::send_headers(RequestHeadersSharedPtr headers, bool end_stream) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48fb7229e98ef6b6970a64c01b9357f8434c541d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk4MDAwMA==", "bodyText": "Let's worry about this later though, I'm going to approve and merge.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1218#discussion_r555980000", "createdAt": "2021-01-12T18:19:08Z", "author": {"login": "goaway"}, "path": "library/cc/stream.cc", "diffHunk": "@@ -0,0 +1,37 @@\n+#include \"stream.h\"\n+\n+#include <iostream>\n+\n+#include \"bridge_utility.h\"\n+#include \"library/common/main_interface.h\"\n+#include \"library/common/types/c_types.h\"\n+\n+namespace Envoy {\n+namespace Platform {\n+\n+Stream::Stream(envoy_stream_t handle, EnvoyHttpCallbacksAdapterSharedPtr adapter)\n+    : handle_(handle), adapter_(adapter) {}\n+\n+Stream& Stream::send_headers(RequestHeadersSharedPtr headers, bool end_stream) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk3OTA3OA=="}, "originalCommit": {"oid": "48fb7229e98ef6b6970a64c01b9357f8434c541d"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwMDIzODMxOnYy", "diffSide": "RIGHT", "path": "library/cc/stream_callbacks.cc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoxODowNlrOISOSSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxODoxODowNlrOISOSSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTk3OTMzOQ==", "bodyText": "These though I think we can leave as snake_case to distinguish them", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1218#discussion_r555979339", "createdAt": "2021-01-12T18:18:06Z", "author": {"login": "goaway"}, "path": "library/cc/stream_callbacks.cc", "diffHunk": "@@ -0,0 +1,96 @@\n+#include \"stream_callbacks.h\"\n+\n+#include \"bridge_utility.h\"\n+#include \"response_headers_builder.h\"\n+#include \"response_trailers_builder.h\"\n+\n+namespace Envoy {\n+namespace Platform {\n+\n+EnvoyHttpCallbacksAdapter::EnvoyHttpCallbacksAdapter(StreamCallbacksSharedPtr callbacks)\n+    : stream_callbacks_(callbacks) {}\n+\n+envoy_http_callbacks EnvoyHttpCallbacksAdapter::as_envoy_http_callbacks() {\n+  envoy_http_callbacks callbacks{\n+      .on_headers = &EnvoyHttpCallbacksAdapter::c_on_headers,\n+      .on_data = &EnvoyHttpCallbacksAdapter::c_on_data,\n+      // on_metadata is not used\n+      .on_trailers = &EnvoyHttpCallbacksAdapter::c_on_trailers,\n+      .on_error = &EnvoyHttpCallbacksAdapter::c_on_error,\n+      .on_complete = &EnvoyHttpCallbacksAdapter::c_on_complete,\n+      .on_cancel = &EnvoyHttpCallbacksAdapter::c_on_cancel,\n+      .context = this,\n+  };\n+  return callbacks;\n+}\n+\n+void* EnvoyHttpCallbacksAdapter::c_on_headers(envoy_headers headers, bool end_stream,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48fb7229e98ef6b6970a64c01b9357f8434c541d"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 560, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}