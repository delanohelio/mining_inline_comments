{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDIzMzA4", "number": 659, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDoyMjoyNVrODdHaEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDoyNToxNFrODdHdJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODU2NjU5OnYy", "diffSide": "RIGHT", "path": "library/swift/src/RetryPolicy.swift", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDoyMjoyNVrOFliN3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMjozMDowMlrOFllvWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg==", "bodyText": "you still need to check for totalUpstreamTimeoutMS = 0 here, right?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374902236", "createdAt": "2020-02-04T20:22:25Z", "author": {"login": "Augustyniak"}, "path": "library/swift/src/RetryPolicy.swift", "diffHunk": "@@ -47,13 +47,15 @@ public final class RetryPolicy: NSObject {\n   ///                                     retries. Spans the point at which the entire downstream\n   ///                                     request has been processed and when the upstream\n   ///                                     response has been completely processed.\n-  ///                                     Zero may be specified to disable the upstream timeout.\n+  ///                                     Nil may be specified to disable the upstream timeout.\n   public init(maxRetryCount: UInt, retryOn: [RetryRule], perRetryTimeoutMS: UInt? = nil,\n-              totalUpstreamTimeoutMS: UInt = 15_000)\n+              totalUpstreamTimeoutMS: UInt? = 15_000)\n   {\n-    if let perRetryTimeoutMS = perRetryTimeoutMS {\n-      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS || totalUpstreamTimeoutMS == 0,\n-             \"Per-retry timeout must be <= total timeout if total timeout != 0\")\n+    if let perRetryTimeoutMS = perRetryTimeoutMS,\n+      let totalUpstreamTimeoutMS = totalUpstreamTimeoutMS\n+    {\n+      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2816ba5f7ddaa936cabc69f7a894bdffc135f214"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjk1Mg==", "bodyText": "assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS && totalUpstreamTimeoutMS != 0)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374902952", "createdAt": "2020-02-04T20:23:59Z", "author": {"login": "Augustyniak"}, "path": "library/swift/src/RetryPolicy.swift", "diffHunk": "@@ -47,13 +47,15 @@ public final class RetryPolicy: NSObject {\n   ///                                     retries. Spans the point at which the entire downstream\n   ///                                     request has been processed and when the upstream\n   ///                                     response has been completely processed.\n-  ///                                     Zero may be specified to disable the upstream timeout.\n+  ///                                     Nil may be specified to disable the upstream timeout.\n   public init(maxRetryCount: UInt, retryOn: [RetryRule], perRetryTimeoutMS: UInt? = nil,\n-              totalUpstreamTimeoutMS: UInt = 15_000)\n+              totalUpstreamTimeoutMS: UInt? = 15_000)\n   {\n-    if let perRetryTimeoutMS = perRetryTimeoutMS {\n-      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS || totalUpstreamTimeoutMS == 0,\n-             \"Per-retry timeout must be <= total timeout if total timeout != 0\")\n+    if let perRetryTimeoutMS = perRetryTimeoutMS,\n+      let totalUpstreamTimeoutMS = totalUpstreamTimeoutMS\n+    {\n+      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg=="}, "originalCommit": {"oid": "2816ba5f7ddaa936cabc69f7a894bdffc135f214"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMzU2Mg==", "bodyText": "Personally I think that omitting the totalUpstreamTimeoutMS != 0 exclusion from the assert is probably preferred here since the consumer will then change the 0 to nil to achieve the same behavior (in line with the documentation of this function). Thoughts?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374933562", "createdAt": "2020-02-04T21:29:58Z", "author": {"login": "rebello95"}, "path": "library/swift/src/RetryPolicy.swift", "diffHunk": "@@ -47,13 +47,15 @@ public final class RetryPolicy: NSObject {\n   ///                                     retries. Spans the point at which the entire downstream\n   ///                                     request has been processed and when the upstream\n   ///                                     response has been completely processed.\n-  ///                                     Zero may be specified to disable the upstream timeout.\n+  ///                                     Nil may be specified to disable the upstream timeout.\n   public init(maxRetryCount: UInt, retryOn: [RetryRule], perRetryTimeoutMS: UInt? = nil,\n-              totalUpstreamTimeoutMS: UInt = 15_000)\n+              totalUpstreamTimeoutMS: UInt? = 15_000)\n   {\n-    if let perRetryTimeoutMS = perRetryTimeoutMS {\n-      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS || totalUpstreamTimeoutMS == 0,\n-             \"Per-retry timeout must be <= total timeout if total timeout != 0\")\n+    if let perRetryTimeoutMS = perRetryTimeoutMS,\n+      let totalUpstreamTimeoutMS = totalUpstreamTimeoutMS\n+    {\n+      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg=="}, "originalCommit": {"oid": "2816ba5f7ddaa936cabc69f7a894bdffc135f214"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNzkzMQ==", "bodyText": "One question - What happens if I provide perRetryTimeoutMS = 0 and totalUpstreamTimeoutMS = 0? I would expect this to break since the docs says that a user should use nil if they want totalUpstreamTimeoutMS to be ignored.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374937931", "createdAt": "2020-02-04T21:39:43Z", "author": {"login": "Augustyniak"}, "path": "library/swift/src/RetryPolicy.swift", "diffHunk": "@@ -47,13 +47,15 @@ public final class RetryPolicy: NSObject {\n   ///                                     retries. Spans the point at which the entire downstream\n   ///                                     request has been processed and when the upstream\n   ///                                     response has been completely processed.\n-  ///                                     Zero may be specified to disable the upstream timeout.\n+  ///                                     Nil may be specified to disable the upstream timeout.\n   public init(maxRetryCount: UInt, retryOn: [RetryRule], perRetryTimeoutMS: UInt? = nil,\n-              totalUpstreamTimeoutMS: UInt = 15_000)\n+              totalUpstreamTimeoutMS: UInt? = 15_000)\n   {\n-    if let perRetryTimeoutMS = perRetryTimeoutMS {\n-      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS || totalUpstreamTimeoutMS == 0,\n-             \"Per-retry timeout must be <= total timeout if total timeout != 0\")\n+    if let perRetryTimeoutMS = perRetryTimeoutMS,\n+      let totalUpstreamTimeoutMS = totalUpstreamTimeoutMS\n+    {\n+      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg=="}, "originalCommit": {"oid": "2816ba5f7ddaa936cabc69f7a894bdffc135f214"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDk1OTk2Mg==", "bodyText": "That's fair, I can update to include it in the assert.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374959962", "createdAt": "2020-02-04T22:30:02Z", "author": {"login": "rebello95"}, "path": "library/swift/src/RetryPolicy.swift", "diffHunk": "@@ -47,13 +47,15 @@ public final class RetryPolicy: NSObject {\n   ///                                     retries. Spans the point at which the entire downstream\n   ///                                     request has been processed and when the upstream\n   ///                                     response has been completely processed.\n-  ///                                     Zero may be specified to disable the upstream timeout.\n+  ///                                     Nil may be specified to disable the upstream timeout.\n   public init(maxRetryCount: UInt, retryOn: [RetryRule], perRetryTimeoutMS: UInt? = nil,\n-              totalUpstreamTimeoutMS: UInt = 15_000)\n+              totalUpstreamTimeoutMS: UInt? = 15_000)\n   {\n-    if let perRetryTimeoutMS = perRetryTimeoutMS {\n-      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS || totalUpstreamTimeoutMS == 0,\n-             \"Per-retry timeout must be <= total timeout if total timeout != 0\")\n+    if let perRetryTimeoutMS = perRetryTimeoutMS,\n+      let totalUpstreamTimeoutMS = totalUpstreamTimeoutMS\n+    {\n+      assert(perRetryTimeoutMS <= totalUpstreamTimeoutMS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMjIzNg=="}, "originalCommit": {"oid": "2816ba5f7ddaa936cabc69f7a894bdffc135f214"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODU3NDQ0OnYy", "diffSide": "RIGHT", "path": "library/swift/test/RetryPolicyMapperTests.swift", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMDoyNToxNFrOFliS5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMToyODowOVrOFlkE-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMzUyNQ==", "bodyText": "let's add a test case for when per request timeout is equal to 0 (not nil) and per retry timeout is greater than 0.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374903525", "createdAt": "2020-02-04T20:25:14Z", "author": {"login": "Augustyniak"}, "path": "library/swift/test/RetryPolicyMapperTests.swift", "diffHunk": "@@ -23,4 +23,9 @@ final class RetryPolicyMapperTests: XCTestCase {\n     let policy = RetryPolicy(maxRetryCount: 123, retryOn: RetryRule.allCases)\n     XCTAssertNil(policy.outboundHeaders()[\"x-envoy-upstream-rq-per-try-timeout-ms\"])\n   }\n+\n+  func testConvertingToHeadersWithoutUpstreamTimeoutIncludesZeroForTimeoutHeader() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2816ba5f7ddaa936cabc69f7a894bdffc135f214"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzMjcyOQ==", "bodyText": "Considered that but iOS doesn't really provide a way to test that asserts fail, and making the builder throw doesn't really seem worth it here", "url": "https://github.com/envoyproxy/envoy-mobile/pull/659#discussion_r374932729", "createdAt": "2020-02-04T21:28:09Z", "author": {"login": "rebello95"}, "path": "library/swift/test/RetryPolicyMapperTests.swift", "diffHunk": "@@ -23,4 +23,9 @@ final class RetryPolicyMapperTests: XCTestCase {\n     let policy = RetryPolicy(maxRetryCount: 123, retryOn: RetryRule.allCases)\n     XCTAssertNil(policy.outboundHeaders()[\"x-envoy-upstream-rq-per-try-timeout-ms\"])\n   }\n+\n+  func testConvertingToHeadersWithoutUpstreamTimeoutIncludesZeroForTimeoutHeader() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkwMzUyNQ=="}, "originalCommit": {"oid": "2816ba5f7ddaa936cabc69f7a894bdffc135f214"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 832, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}