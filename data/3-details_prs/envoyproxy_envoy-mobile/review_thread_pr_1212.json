{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNTA0ODA1", "number": 1212, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoxMToxMlrOFHMvIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoxMToxMlrOFHMvIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDkzMDI1OnYy", "diffSide": "RIGHT", "path": "library/objective-c/EnvoyBridgeUtility.h", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoxMToxMlrOIIkTuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxOToyNDoxNFrOIIv_pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1NDM5Mw==", "bodyText": "Is this necessary? I assume that envoy doesn't add white spaces, in which case we may more closely preserve the \"original\" content by not trimming", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1212#discussion_r545854393", "createdAt": "2020-12-18T14:11:12Z", "author": {"login": "rebello95"}, "path": "library/objective-c/EnvoyBridgeUtility.h", "diffHunk": "@@ -83,12 +83,27 @@ static inline EnvoyHeaders *to_ios_headers(envoy_headers headers) {\n     NSString *headerValue = [[NSString alloc] initWithBytes:header.value.bytes\n                                                      length:header.value.length\n                                                    encoding:NSUTF8StringEncoding];\n+    // Ensure list is present in dictionary value\n     NSMutableArray *headerValueList = headerDict[headerKey];\n     if (headerValueList == nil) {\n       headerValueList = [NSMutableArray new];\n       headerDict[headerKey] = headerValueList;\n     }\n-    [headerValueList addObject:headerValue];\n+\n+    // By convention, these headers disregard the RFC and contain commas single values.\n+    if (headerKey == @\"set-cookie\" ||\n+        headerKey == @\"www-authenticate\" ||\n+        headerKey == @\"proxy-authenticate\") {\n+      [headerValueList addObject:headerValue];\n+    } else {\n+      // Add trimmed, comma-separated values as individual members of the list.\n+      NSArray *newValueList = [headerValue componentsSeparatedByString:@\",\"];\n+      for (NSString *value in newValueList) {\n+        NSString *trimmedValue =\n+          [value stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f0eb36dfa915ab591c1a0ad823e03af09272b0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTk5ODA4MA==", "bodyText": "It's desirable because comma delimiting may take the form of \",\" or \", \", and both are common. Users will likely find themselves inadvertently failing to match simple string comparisons if leading or trailing spaces are left on that are an artifact of how the header was coalesced and encoded.\nMoreover, the RFCs state that all header values are encoded with optional leading and trailing whitespace, implying one should not treat it as part of the value.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1212#discussion_r545998080", "createdAt": "2020-12-18T18:01:51Z", "author": {"login": "goaway"}, "path": "library/objective-c/EnvoyBridgeUtility.h", "diffHunk": "@@ -83,12 +83,27 @@ static inline EnvoyHeaders *to_ios_headers(envoy_headers headers) {\n     NSString *headerValue = [[NSString alloc] initWithBytes:header.value.bytes\n                                                      length:header.value.length\n                                                    encoding:NSUTF8StringEncoding];\n+    // Ensure list is present in dictionary value\n     NSMutableArray *headerValueList = headerDict[headerKey];\n     if (headerValueList == nil) {\n       headerValueList = [NSMutableArray new];\n       headerDict[headerKey] = headerValueList;\n     }\n-    [headerValueList addObject:headerValue];\n+\n+    // By convention, these headers disregard the RFC and contain commas single values.\n+    if (headerKey == @\"set-cookie\" ||\n+        headerKey == @\"www-authenticate\" ||\n+        headerKey == @\"proxy-authenticate\") {\n+      [headerValueList addObject:headerValue];\n+    } else {\n+      // Add trimmed, comma-separated values as individual members of the list.\n+      NSArray *newValueList = [headerValue componentsSeparatedByString:@\",\"];\n+      for (NSString *value in newValueList) {\n+        NSString *trimmedValue =\n+          [value stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1NDM5Mw=="}, "originalCommit": {"oid": "d4f0eb36dfa915ab591c1a0ad823e03af09272b0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMTA0Mw==", "bodyText": "Sounds good. This implementation seems to have warnings when building:\nINFO: From Compiling library/objective-c/EnvoyEngineImpl.m:\nIn file included from library/objective-c/EnvoyEngineImpl.m:2:\n./library/objective-c/EnvoyBridgeUtility.h:94:19: warning: direct comparison of a string literal has undefined behavior [-Wobjc-string-compare]\n    if (headerKey == @\"set-cookie\" || headerKey == @\"www-authenticate\" ||\n                  ^  ~~~~~~~~~~~~~\n./library/objective-c/EnvoyBridgeUtility.h:94:19: note: use 'isEqual:' instead\n    if (headerKey == @\"set-cookie\" || headerKey == @\"www-authenticate\" ||\n                  ^~\n        [          isEqual:       ]\n./library/objective-c/EnvoyBridgeUtility.h:94:49: warning: direct comparison of a string literal has undefined behavior [-Wobjc-string-compare]\n    if (headerKey == @\"set-cookie\" || headerKey == @\"www-authenticate\" ||\n                                                ^  ~~~~~~~~~~~~~~~~~~~\n./library/objective-c/EnvoyBridgeUtility.h:94:49: note: use 'isEqual:' instead\n    if (headerKey == @\"set-cookie\" || headerKey == @\"www-authenticate\" ||\n                                                ^~\n                                      [          isEqual:             ]\n./library/objective-c/EnvoyBridgeUtility.h:95:19: warning: direct comparison of a string literal has undefined behavior [-Wobjc-string-compare]\n        headerKey == @\"proxy-authenticate\") {\n                  ^  ~~~~~~~~~~~~~~~~~~~~~\n./library/objective-c/EnvoyBridgeUtility.h:95:19: note: use 'isEqual:' instead\n        headerKey == @\"proxy-authenticate\") {\n                  ^~\n        [          isEqual:               ]", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1212#discussion_r546001043", "createdAt": "2020-12-18T18:07:53Z", "author": {"login": "rebello95"}, "path": "library/objective-c/EnvoyBridgeUtility.h", "diffHunk": "@@ -83,12 +83,27 @@ static inline EnvoyHeaders *to_ios_headers(envoy_headers headers) {\n     NSString *headerValue = [[NSString alloc] initWithBytes:header.value.bytes\n                                                      length:header.value.length\n                                                    encoding:NSUTF8StringEncoding];\n+    // Ensure list is present in dictionary value\n     NSMutableArray *headerValueList = headerDict[headerKey];\n     if (headerValueList == nil) {\n       headerValueList = [NSMutableArray new];\n       headerDict[headerKey] = headerValueList;\n     }\n-    [headerValueList addObject:headerValue];\n+\n+    // By convention, these headers disregard the RFC and contain commas single values.\n+    if (headerKey == @\"set-cookie\" ||\n+        headerKey == @\"www-authenticate\" ||\n+        headerKey == @\"proxy-authenticate\") {\n+      [headerValueList addObject:headerValue];\n+    } else {\n+      // Add trimmed, comma-separated values as individual members of the list.\n+      NSArray *newValueList = [headerValue componentsSeparatedByString:@\",\"];\n+      for (NSString *value in newValueList) {\n+        NSString *trimmedValue =\n+          [value stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1NDM5Mw=="}, "originalCommit": {"oid": "d4f0eb36dfa915ab591c1a0ad823e03af09272b0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA0NTg2MQ==", "bodyText": "Switched to caseInsensitiveCompare", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1212#discussion_r546045861", "createdAt": "2020-12-18T19:24:14Z", "author": {"login": "goaway"}, "path": "library/objective-c/EnvoyBridgeUtility.h", "diffHunk": "@@ -83,12 +83,27 @@ static inline EnvoyHeaders *to_ios_headers(envoy_headers headers) {\n     NSString *headerValue = [[NSString alloc] initWithBytes:header.value.bytes\n                                                      length:header.value.length\n                                                    encoding:NSUTF8StringEncoding];\n+    // Ensure list is present in dictionary value\n     NSMutableArray *headerValueList = headerDict[headerKey];\n     if (headerValueList == nil) {\n       headerValueList = [NSMutableArray new];\n       headerDict[headerKey] = headerValueList;\n     }\n-    [headerValueList addObject:headerValue];\n+\n+    // By convention, these headers disregard the RFC and contain commas single values.\n+    if (headerKey == @\"set-cookie\" ||\n+        headerKey == @\"www-authenticate\" ||\n+        headerKey == @\"proxy-authenticate\") {\n+      [headerValueList addObject:headerValue];\n+    } else {\n+      // Add trimmed, comma-separated values as individual members of the list.\n+      NSArray *newValueList = [headerValue componentsSeparatedByString:@\",\"];\n+      for (NSString *value in newValueList) {\n+        NSString *trimmedValue =\n+          [value stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceCharacterSet]];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg1NDM5Mw=="}, "originalCommit": {"oid": "d4f0eb36dfa915ab591c1a0ad823e03af09272b0"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 546, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}