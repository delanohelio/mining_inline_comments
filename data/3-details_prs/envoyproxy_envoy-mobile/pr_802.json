{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MzY4Mjgx", "number": 802, "title": "platform: update interfaces for unary/streamed requests", "bodyText": "Currently, our platform-level unary interfaces have the following limitations:\n\nIt's not very clear when sending a request if it's going to be unary or streamed\nIt's not possible to send headers-only requests\nTrailers are non-optional\n\nThis PR introduces the following changes to improve these interfaces:\n\nsend(...) is used for unary requests, and start(...) is used for streaming\nsend(...) provides the ability to send headers-only requests\nCallers can specify whether they'd like to close with body data or trailers by explicitly passing one as nil (see inline documentation)\n\nAdditionally, this PR introduces a new set of EnvoyClient tests which are 1:1 on iOS and Android.\nThis change is being made as a precursor to L7 Swift/Kotlin filters.\nSigned-off-by: Michael Rebello me@michaelrebello.com", "createdAt": "2020-04-21T00:15:22Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/802", "merged": true, "mergeCommit": {"oid": "e309d22e8e4989b4fcce047c15d312800425606a"}, "closed": true, "closedAt": "2020-04-22T04:04:24Z", "author": {"login": "rebello95"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZoUsuAH2gAyNDA2MzY4MjgxOmI4ZTMxZTI5YTUyOGEwNjQ1ZTFmN2VkMjU4NWZiOGU1OGE2ZmRjMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ-AxogFqTM5Nzc4MTE4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b8e31e29a528a0645e1f7ed2585fb8e58a6fdc27", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/b8e31e29a528a0645e1f7ed2585fb8e58a6fdc27", "committedDate": "2020-04-21T00:13:00Z", "message": "platform: update interfaces for unary/streamed requests\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bb676eaf509d083e2134283623a9b9d153e2f10", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/0bb676eaf509d083e2134283623a9b9d153e2f10", "committedDate": "2020-04-21T23:11:56Z", "message": "android\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a9ebb25b8673a62ee1f942a3a62416d48de1793", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/3a9ebb25b8673a62ee1f942a3a62416d48de1793", "committedDate": "2020-04-21T23:45:48Z", "message": "Merge remote-tracking branch 'origin/master' into platform-interfaces\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7eec1c8f142b0a4f9c0cb99707a19aa65589085", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/f7eec1c8f142b0a4f9c0cb99707a19aa65589085", "committedDate": "2020-04-22T01:03:50Z", "message": "tests\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NzgxMDQw", "url": "https://github.com/envoyproxy/envoy-mobile/pull/802#pullrequestreview-397781040", "createdAt": "2020-04-22T01:28:50Z", "commit": {"oid": "f7eec1c8f142b0a4f9c0cb99707a19aa65589085"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMToyODo1MFrOGJfQGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMToyODo1MFrOGJfQGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYwMjM5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  method: .post, scheme: \"https\", authority: \"www.envoyproxy.io\", path: \"/test\")\n          \n          \n            \n                  method: .post, scheme: \"https\", authority: \"envoyproxy.io\", path: \"/test\")", "url": "https://github.com/envoyproxy/envoy-mobile/pull/802#discussion_r412602393", "createdAt": "2020-04-22T01:28:50Z", "author": {"login": "buildbreaker"}, "path": "library/swift/test/EnvoyClientTests.swift", "diffHunk": "@@ -17,26 +17,163 @@ private final class MockEnvoyEngine: EnvoyEngine {\n }\n \n final class EnvoyClientTests: XCTestCase {\n+  private var envoy: EnvoyClient!\n+\n+  override func setUp() {\n+    super.setUp()\n+    self.envoy = try! EnvoyClientBuilder()\n+      .addEngineType(MockEnvoyEngine.self)\n+      .build()\n+  }\n+\n   override func tearDown() {\n     super.tearDown()\n     MockEnvoyHTTPStream.reset()\n   }\n \n-  func testNonStreamingExtensionSendsRequestDetailsThroughStream() throws {\n-    let requestExpectation = self.expectation(description: \"Sends request\")\n-    let dataExpectation = self.expectation(description: \"Sends data\")\n-    let closeExpectation = self.expectation(description: \"Calls close\")\n+  // MARK: - Streaming\n+\n+  func testStartingAStreamSendsHeaders() {\n+    let expectation = self.expectation(description: \"Sends stream headers\")\n+    let expectedHeaders = [\n+      \"key_1\": [\"value_a\"],\n+      \":method\": [\"POST\"],\n+      \":scheme\": [\"https\"],\n+      \":authority\": [\"www.envoyproxy.io\"],\n+      \":path\": [\"/test\"],\n+    ]\n \n-    let expectedRequest = RequestBuilder(\n-      method: .get, scheme: \"https\", authority: \"www.envoyproxy.io\", path: \"/docs\")\n+    MockEnvoyHTTPStream.onHeaders = { headers, closeStream in\n+      XCTAssertEqual(expectedHeaders, headers)\n+      XCTAssertFalse(closeStream)\n+      expectation.fulfill()\n+    }\n+\n+    let request = RequestBuilder(\n+      method: .post, scheme: \"https\", authority: \"www.envoyproxy.io\", path: \"/test\")\n+      .addHeader(name: \"key_1\", value: \"value_a\")\n       .build()\n-    let expectedData = Data([1, 2, 3])\n-    let expectedTrailers = [\"foo\": [\"bar\", \"baz\"]]\n+    _ = self.envoy.start(request, handler: ResponseHandler())\n+    self.wait(for: [expectation], timeout: 0.1)\n+  }\n+\n+  func testSendingDataOnStreamPassesDataToTheUnderlyingStream() {\n+    let expectation = self.expectation(description: \"Sends stream data\")\n \n+    let expectedData = Data([0x0, 0x1, 0x2])\n+    MockEnvoyHTTPStream.onData = { data, closeStream in\n+      XCTAssertEqual(expectedData, data)\n+      XCTAssertFalse(closeStream)\n+      expectation.fulfill()\n+    }\n+\n+    let request = RequestBuilder(\n+      method: .post, scheme: \"https\", authority: \"www.envoyproxy.io\", path: \"/test\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7eec1c8f142b0a4f9c0cb99707a19aa65589085"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NzgxMTg2", "url": "https://github.com/envoyproxy/envoy-mobile/pull/802#pullrequestreview-397781186", "createdAt": "2020-04-22T01:29:09Z", "commit": {"oid": "f7eec1c8f142b0a4f9c0cb99707a19aa65589085"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4350, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}