{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MDc5MjI3", "number": 989, "title": "filters: instantiate on Android on a per-stream basis", "bodyText": "Description: Changes filter instantiation to be a per-stream basis at the Android platform layers.\nRisk Level: Low\nTesting: Local and CI\nSigned-off-by: Mike Schore mike.schore@gmail.com", "createdAt": "2020-07-30T11:07:05Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989", "merged": true, "mergeCommit": {"oid": "86b888ebad118412f684b1d38c62f60a10c2b8fa"}, "closed": true, "closedAt": "2020-08-03T23:43:54Z", "author": {"login": "goaway"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5904UABqjM2MDMzNTA5OTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7XwxRAFqTQ2MDMwNzc1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a13fa6b82ff0832a7a7b12cbd7ecdb68b31f7fd1", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/a13fa6b82ff0832a7a7b12cbd7ecdb68b31f7fd1", "committedDate": "2020-07-30T11:06:25Z", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "7c518992ee2a64e2ec1ac678ed0a6c8caa9cbae5", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/7c518992ee2a64e2ec1ac678ed0a6c8caa9cbae5", "committedDate": "2020-07-30T11:21:25Z", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c518992ee2a64e2ec1ac678ed0a6c8caa9cbae5", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/7c518992ee2a64e2ec1ac678ed0a6c8caa9cbae5", "committedDate": "2020-07-30T11:21:25Z", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "c944ebe2da51583cb241737eedb10bac6645e87c", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/c944ebe2da51583cb241737eedb10bac6645e87c", "committedDate": "2020-07-30T22:11:14Z", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c944ebe2da51583cb241737eedb10bac6645e87c", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/c944ebe2da51583cb241737eedb10bac6645e87c", "committedDate": "2020-07-30T22:11:14Z", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "89809f2a3dbd83d57fa85f90c7029c737fd2d496", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/89809f2a3dbd83d57fa85f90c7029c737fd2d496", "committedDate": "2020-07-30T22:20:10Z", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bb82eb809a61278879ee5a90ab8d906f0dc8f4a", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/7bb82eb809a61278879ee5a90ab8d906f0dc8f4a", "committedDate": "2020-07-31T18:16:36Z", "message": "filters: instantiate on Android on a per-stream basis\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "89809f2a3dbd83d57fa85f90c7029c737fd2d496", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/89809f2a3dbd83d57fa85f90c7029c737fd2d496", "committedDate": "2020-07-30T22:20:10Z", "message": "wip\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "7bb82eb809a61278879ee5a90ab8d906f0dc8f4a", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/7bb82eb809a61278879ee5a90ab8d906f0dc8f4a", "committedDate": "2020-07-31T18:16:36Z", "message": "filters: instantiate on Android on a per-stream basis\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda53d4ef5b369d49b75d8f7be864fb343760a5a", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/cda53d4ef5b369d49b75d8f7be864fb343760a5a", "committedDate": "2020-07-31T18:22:30Z", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/befac9b60d376060a48534b97b3f9639cdcc19a5", "committedDate": "2020-07-31T20:54:45Z", "message": "fix whitespace\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDczMDU5", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#pullrequestreview-459473059", "createdAt": "2020-07-31T20:56:02Z", "commit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo1NjowMlrOG6WMxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo1OTo1NVrOG6WX7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDMwOA==", "bodyText": "These should be discussing request headers, right?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834308", "createdAt": "2020-07-31T20:56:02Z", "author": {"login": "rebello95"}, "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDQyNQ==", "bodyText": "Same here", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834425", "createdAt": "2020-07-31T20:56:10Z", "author": {"login": "rebello95"}, "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onRequestHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDUwOA==", "bodyText": "Uncomment? \ud83d\ude43", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834508", "createdAt": "2020-07-31T20:56:17Z", "author": {"login": "rebello95"}, "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onRequestHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */\n+  // public abstract List onRequestData(ByteBuffer data, boolean endStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDU5MA==", "bodyText": "Same as above", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834590", "createdAt": "2020-07-31T20:56:24Z", "author": {"login": "rebello95"}, "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onRequestHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */\n+  // public abstract List onRequestData(ByteBuffer data, boolean endStream);\n+\n+  /**\n+   * Called when all trailers get received on the async HTTP stream. Note that end\n+   * stream is implied when on_trailers is called.\n+   *\n+   * @param trailers, the trailers received.\n+   */\n+  // public abstract void onRequestTrailers(Map<String, List<String>> trailers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNDc4Nw==", "bodyText": "Same for this and onResponseTrailers below", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463834787", "createdAt": "2020-07-31T20:56:40Z", "author": {"login": "rebello95"}, "path": "library/java/src/io/envoyproxy/envoymobile/engine/types/EnvoyHTTPFilter.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package io.envoyproxy.envoymobile.engine.types;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.Executor;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface EnvoyHTTPFilter {\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onRequestHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */\n+  // public abstract List onRequestData(ByteBuffer data, boolean endStream);\n+\n+  /**\n+   * Called when all trailers get received on the async HTTP stream. Note that end\n+   * stream is implied when on_trailers is called.\n+   *\n+   * @param trailers, the trailers received.\n+   */\n+  // public abstract void onRequestTrailers(Map<String, List<String>> trailers);\n+\n+  /**\n+   * Called when all headers get received on the async HTTP stream.\n+   *\n+   * @param headers,   the headers received.\n+   * @param endStream, whether the response is headers-only.\n+   */\n+  Object[] onResponseHeaders(Map<String, List<String>> headers, boolean endStream);\n+\n+  /**\n+   * Called when a data frame gets received on the async HTTP stream. This\n+   * callback can be invoked multiple times if the data gets streamed.\n+   *\n+   * @param data,      the buffer of the data received.\n+   * @param endStream, whether the data is the last data frame.\n+   */\n+  // public abstract void onResponseData(ByteBuffer data, boolean endStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNTU5MA==", "bodyText": "If we are unable to infer the filterName like we do based on type in iOS, can we update the iOS builder to replicate this function accepting a filterName explicitly?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463835590", "createdAt": "2020-07-31T20:57:46Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/StreamClientBuilder.kt", "diffHunk": "@@ -102,6 +103,19 @@ open class StreamClientBuilder(\n     return this\n   }\n \n+  /**\n+   * Add an HTTP filter factory used to create filters for streams sent by this client.\n+   *\n+   * @param filterName: unique name identifying this filter in the chain.\n+   * @param factory closure returning an instantiated filter.\n+   *\n+   * @return this builder.\n+   */\n+  fun addFilter(filterName: String, factory: () -> Filter): StreamClientBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzNzE2NA==", "bodyText": "Out of curiosity, why add this type in Kotlin rather than storing the Java EnvoyHTTPFilterFactory like we do on iOS?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r463837164", "createdAt": "2020-07-31T20:59:55Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/filters/Filter.kt", "diffHunk": "@@ -1,7 +1,47 @@\n package io.envoyproxy.envoymobile\n \n+import io.envoyproxy.envoymobile.engine.types.EnvoyHTTPFilter\n+import io.envoyproxy.envoymobile.engine.types.EnvoyHTTPFilterFactory\n+\n /*\n  * Interface representing a filter. See `RequestFilter` and `ResponseFilter` for more details.\n  */\n @Suppress(\"EmptyClassBlock\")\n interface Filter\n+\n+internal class FilterFactory(\n+  private val filterName: String,\n+  private val factory: () -> Filter\n+) : EnvoyHTTPFilterFactory {\n+  override fun getFilterName(): String {\n+    return filterName\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "befac9b60d376060a48534b97b3f9639cdcc19a5"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "793a944e0f76fc8d875c42658527f7ececde6a27", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/793a944e0f76fc8d875c42658527f7ececde6a27", "committedDate": "2020-08-03T09:31:50Z", "message": "updates for comments\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d3ad5d7b54408ba9253dcb406acb9f429d15250", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/9d3ad5d7b54408ba9253dcb406acb9f429d15250", "committedDate": "2020-08-03T09:43:43Z", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMjk3MDI1", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#pullrequestreview-460297025", "createdAt": "2020-08-03T19:50:05Z", "commit": {"oid": "9d3ad5d7b54408ba9253dcb406acb9f429d15250"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo1MDowNVrOG7Glxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxOTo1MDowNVrOG7Glxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDYyNzE0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private var filterChain = ArrayList<FilterFactory>()\n          \n          \n            \n              private var filterChain = mutableListOf<FilterFactory>()", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#discussion_r464627143", "createdAt": "2020-08-03T19:50:05Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/StreamClientBuilder.kt", "diffHunk": "@@ -23,6 +23,7 @@ open class StreamClientBuilder(\n   private var dnsRefreshSeconds = 60\n   private var dnsFailureRefreshSecondsBase = 2\n   private var dnsFailureRefreshSecondsMax = 10\n+  private var filterChain = ArrayList<FilterFactory>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d3ad5d7b54408ba9253dcb406acb9f429d15250"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89cd0f4e91c0696e2aef3eb03f3f03228694e13c", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/89cd0f4e91c0696e2aef3eb03f3f03228694e13c", "committedDate": "2020-08-03T20:07:27Z", "message": "update for comments\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMzA3NzU5", "url": "https://github.com/envoyproxy/envoy-mobile/pull/989#pullrequestreview-460307759", "createdAt": "2020-08-03T20:08:43Z", "commit": {"oid": "89cd0f4e91c0696e2aef3eb03f3f03228694e13c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4133, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}