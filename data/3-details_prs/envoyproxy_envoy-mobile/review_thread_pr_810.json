{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3Njc4NjA1", "number": 810, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1ODowM1rOD1F1oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxODo1NFrOD1dVSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTk2NzY4OnYy", "diffSide": "RIGHT", "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNDo1ODowM1rOGKWlug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNjo1NTozN1rOGOyCWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA==", "bodyText": "Maybe we can just do a global detekt rule and just add it to the top level BUILD file. What do you think about that?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r413509050", "createdAt": "2020-04-23T04:58:03Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxNDAwNg==", "bodyText": "Do you mean a single target with all Kotlin sources? Certainly will work. However, this gives Bazel a little room to run things in parallel. Thinking about \u2014\u00a0I probably should change the GitHub Actions workflow to query Detekt targets and run them in a single Bazel invocation.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r413514006", "createdAt": "2020-04-23T05:13:05Z", "author": {"login": "arturdryomov"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA=="}, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkxNTc2MA==", "bodyText": "Gotcha. That sounds good. There might be a good way for us to hide this in a custom bazel macro in the future too.\nDo you want to do the actions change in this pr as well or are you looking to do it as a follow up?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r413915760", "createdAt": "2020-04-23T15:52:23Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA=="}, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3MjczNQ==", "bodyText": "Just tried to fight the CI. Seems like bazel query evaluates a bit much and fails to resolve swiftc on a Linux machine. Is it possible to resolve this somehow? I\u2019ve looked over different GitHub workflows but saw no difference.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414072735", "createdAt": "2020-04-23T19:40:42Z", "author": {"login": "arturdryomov"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA=="}, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgyNDkwOA==", "bodyText": "I'll have to dig deeper to figure out (I end up needing to relearn bazel + ci every time). We can move forward without that niceness change for now.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414824908", "createdAt": "2020-04-24T19:52:39Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA=="}, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI0MTExNA==", "bodyText": "@artem-zinnatullin, do you have ideas how to resolve this? Or a better approach is just not to use bazel query for this at all?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r415241114", "createdAt": "2020-04-26T07:27:10Z", "author": {"login": "arturdryomov"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA=="}, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgyMTA5Ng==", "bodyText": "All right, removed bazel query for now, we can tune it in the future with the growing number of Kotlin targets.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r416821096", "createdAt": "2020-04-28T18:10:53Z", "author": {"login": "arturdryomov"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA=="}, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5NzExNA==", "bodyText": "hm, this is not good indeed if query fails depending on OS, there is probably a way to use config_settings to only configure swift if we're running on macOS and then use cquery or something like that\nMaybe @justhecuke, @keith or @kastiglione have some ideas", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r417897114", "createdAt": "2020-04-30T10:02:00Z", "author": {"login": "artem-zinnatullin"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA=="}, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODE1MzA1MA==", "bodyText": "What's the specific query failure? I expect it's because some of the repository rule setup in rules_swift checks what features your swift version supports, and those fail. I don't think we've had this issue internally since likely even if we weren't using it directly our docker images always had swift installed. It might be worth looking for a related bazel issue, seems like there must be one about this. Note that you also hit problems like this on macOS if you don't have the Android SDK installed", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r418153050", "createdAt": "2020-04-30T16:55:37Z", "author": {"login": "keith"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",\n+    srcs = glob([\"*.kt\"]),\n+    build_upon_default_config = True,\n+    cfgs = [\"//:kotlin_lint_config\"],\n+)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUwOTA1MA=="}, "originalCommit": {"oid": "68c8ea51f7bae0feb8a1505fcbd06a2de937fdcb"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzgxNDczOnYy", "diffSide": "RIGHT", "path": "examples/kotlin/hello_world/BUILD", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxODoxNlrOGK6Yqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxODoxNlrOGK6Yqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NTUzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                name = \"hello_envoy_kt_lint\",\n          \n          \n            \n                name = \"hello_envoy_kt_detekt\",", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414095531", "createdAt": "2020-04-23T20:18:16Z", "author": {"login": "artem-zinnatullin"}, "path": "examples/kotlin/hello_world/BUILD", "diffHunk": "@@ -29,3 +30,10 @@ kt_android_library(\n         \"@androidsdk//com.android.support:recyclerview-v7-25.0.0\",\n     ],\n )\n+\n+detekt(\n+    name = \"hello_envoy_kt_lint\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f72e005e6b2e254c9e399962d1f3e8345080e6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzgxNTg3OnYy", "diffSide": "RIGHT", "path": ".github/workflows/format.yml", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxODozOFrOGK6ZaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODoxMDowNFrOGNgtiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NTcyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  - name: 'Run Kotlin Lint'\n          \n          \n            \n                  - name: 'Run Detekt (Kotlin Lint)'", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414095720", "createdAt": "2020-04-23T20:18:38Z", "author": {"login": "artem-zinnatullin"}, "path": ".github/workflows/format.yml", "diffHunk": "@@ -49,11 +49,15 @@ jobs:\n     name: kotlin_lint\n     runs-on: ubuntu-18.04\n     timeout-minutes: 45\n-    container:\n-      image: openjdk:8-jdk\n     steps:\n       - uses: actions/checkout@v1\n         with:\n           submodules: true\n-      - name: 'Run Kotlin lint'\n-        run: ./ci/kotlin_lint.sh\n+      - name: 'Install dependencies'\n+        run: ./ci/linux_ci_setup.sh\n+      - name: 'Run Kotlin Lint'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f72e005e6b2e254c9e399962d1f3e8345080e6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NjU3MA==", "bodyText": "The more info about the actual tool we have in the names of things the easier it is to work with for external contributors, ie when they see a Detekt failure but don't know that it's Detekt it might be confusing", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414096570", "createdAt": "2020-04-23T20:20:02Z", "author": {"login": "artem-zinnatullin"}, "path": ".github/workflows/format.yml", "diffHunk": "@@ -49,11 +49,15 @@ jobs:\n     name: kotlin_lint\n     runs-on: ubuntu-18.04\n     timeout-minutes: 45\n-    container:\n-      image: openjdk:8-jdk\n     steps:\n       - uses: actions/checkout@v1\n         with:\n           submodules: true\n-      - name: 'Run Kotlin lint'\n-        run: ./ci/kotlin_lint.sh\n+      - name: 'Install dependencies'\n+        run: ./ci/linux_ci_setup.sh\n+      - name: 'Run Kotlin Lint'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NTcyMA=="}, "originalCommit": {"oid": "71f72e005e6b2e254c9e399962d1f3e8345080e6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI5NjYzNw==", "bodyText": "Let\u2019s hear @buildbreaker. I was under an impression that the Lint tool was intentionally abstracted \u2014\u00a0even the config file is called kotlinlint.yml.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414296637", "createdAt": "2020-04-24T05:08:44Z", "author": {"login": "arturdryomov"}, "path": ".github/workflows/format.yml", "diffHunk": "@@ -49,11 +49,15 @@ jobs:\n     name: kotlin_lint\n     runs-on: ubuntu-18.04\n     timeout-minutes: 45\n-    container:\n-      image: openjdk:8-jdk\n     steps:\n       - uses: actions/checkout@v1\n         with:\n           submodules: true\n-      - name: 'Run Kotlin lint'\n-        run: ./ci/kotlin_lint.sh\n+      - name: 'Install dependencies'\n+        run: ./ci/linux_ci_setup.sh\n+      - name: 'Run Kotlin Lint'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NTcyMA=="}, "originalCommit": {"oid": "71f72e005e6b2e254c9e399962d1f3e8345080e6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgyMzU0OQ==", "bodyText": "I think it'll be nice to abstract it away. We could do something like Run Kotlin Lint (Detekt)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414823549", "createdAt": "2020-04-24T19:50:08Z", "author": {"login": "buildbreaker"}, "path": ".github/workflows/format.yml", "diffHunk": "@@ -49,11 +49,15 @@ jobs:\n     name: kotlin_lint\n     runs-on: ubuntu-18.04\n     timeout-minutes: 45\n-    container:\n-      image: openjdk:8-jdk\n     steps:\n       - uses: actions/checkout@v1\n         with:\n           submodules: true\n-      - name: 'Run Kotlin lint'\n-        run: ./ci/kotlin_lint.sh\n+      - name: 'Install dependencies'\n+        run: ./ci/linux_ci_setup.sh\n+      - name: 'Run Kotlin Lint'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NTcyMA=="}, "originalCommit": {"oid": "71f72e005e6b2e254c9e399962d1f3e8345080e6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg5MTIzNg==", "bodyText": "Run Kotlin Lint (Detekt) lgtm, but I'm not blocking on that, use your judgement :)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414891236", "createdAt": "2020-04-24T22:10:25Z", "author": {"login": "artem-zinnatullin"}, "path": ".github/workflows/format.yml", "diffHunk": "@@ -49,11 +49,15 @@ jobs:\n     name: kotlin_lint\n     runs-on: ubuntu-18.04\n     timeout-minutes: 45\n-    container:\n-      image: openjdk:8-jdk\n     steps:\n       - uses: actions/checkout@v1\n         with:\n           submodules: true\n-      - name: 'Run Kotlin lint'\n-        run: ./ci/kotlin_lint.sh\n+      - name: 'Install dependencies'\n+        run: ./ci/linux_ci_setup.sh\n+      - name: 'Run Kotlin Lint'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NTcyMA=="}, "originalCommit": {"oid": "71f72e005e6b2e254c9e399962d1f3e8345080e6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgyMDYxNw==", "bodyText": "Replaced with Run Kotlin Lint (Detekt) and Run Swift Lint (SwiftLint) for consistency.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r416820617", "createdAt": "2020-04-28T18:10:04Z", "author": {"login": "arturdryomov"}, "path": ".github/workflows/format.yml", "diffHunk": "@@ -49,11 +49,15 @@ jobs:\n     name: kotlin_lint\n     runs-on: ubuntu-18.04\n     timeout-minutes: 45\n-    container:\n-      image: openjdk:8-jdk\n     steps:\n       - uses: actions/checkout@v1\n         with:\n           submodules: true\n-      - name: 'Run Kotlin lint'\n-        run: ./ci/kotlin_lint.sh\n+      - name: 'Install dependencies'\n+        run: ./ci/linux_ci_setup.sh\n+      - name: 'Run Kotlin Lint'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NTcyMA=="}, "originalCommit": {"oid": "71f72e005e6b2e254c9e399962d1f3e8345080e6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzgxNzA3OnYy", "diffSide": "RIGHT", "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxODo1NFrOGK6aEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxODo1NFrOGK6aEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NTg5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                name = \"envoy_lib_lint\",\n          \n          \n            \n                name = \"envoy_lib_detekt\",", "url": "https://github.com/envoyproxy/envoy-mobile/pull/810#discussion_r414095890", "createdAt": "2020-04-23T20:18:54Z", "author": {"login": "artem-zinnatullin"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -60,3 +61,10 @@ envoy_mobile_kt_library(\n         \"//library/java/src/io/envoyproxy/envoymobile/engine:envoy_base_engine_lib\",\n     ],\n )\n+\n+detekt(\n+    name = \"envoy_lib_lint\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f72e005e6b2e254c9e399962d1f3e8345080e6"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 765, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}