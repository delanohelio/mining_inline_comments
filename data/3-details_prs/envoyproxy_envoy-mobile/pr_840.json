{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDM3NjA4", "number": 840, "title": "filters: add kotlin filter interfaces", "bodyText": "Description: kotlin version of #795\nRisk Level: low\nTesting: builds. No current tests, as we are just checking in interfaces\nprogress for #545\nSigned-off-by: Jose Nino jnino@lyft.com", "createdAt": "2020-05-12T01:50:32Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840", "merged": true, "mergeCommit": {"oid": "b9e0d7dc358a2ce9be1db7f3af7a602844370cef"}, "closed": true, "closedAt": "2020-05-16T00:05:57Z", "author": {"login": "junr03"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgaS3mAH2gAyNDE2NDM3NjA4OjdlZTY4NTBlMGU5ODAwM2FmM2Y3ZTRjMjI1NjE3MGY4NDBlOWE0YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchl_mGAFqTQxMjg1Nzc3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ee6850e0e98003af3f7e4c2256170f840e9a4be", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/7ee6850e0e98003af3f7e4c2256170f840e9a4be", "committedDate": "2020-05-12T01:49:48Z", "message": "filters: add kotlin filter interfaces\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eaa0e8bb97098589097178a9018aa221128fe1a", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/5eaa0e8bb97098589097178a9018aa221128fe1a", "committedDate": "2020-05-12T01:52:21Z", "message": "fmt\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fb9693deb0b074b1f408b1526748b33e0ef22d3", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/6fb9693deb0b074b1f408b1526748b33e0ef22d3", "committedDate": "2020-05-12T20:07:43Z", "message": "update\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2722caf1910f6b80acfea1147df66421ff7281f8", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/2722caf1910f6b80acfea1147df66421ff7281f8", "committedDate": "2020-05-12T20:22:04Z", "message": "green\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzkzMjIz", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410393223", "createdAt": "2020-05-12T20:22:51Z", "commit": {"oid": "2722caf1910f6b80acfea1147df66421ff7281f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoyMjo1MVrOGUXjHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoyMjo1MVrOGUXjHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxMDUyNw==", "bodyText": "We are missing builders for ResponseHeaders/Trailers for both kotlin and swift.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424010527", "createdAt": "2020-05-12T20:22:51Z", "author": {"login": "junr03"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -40,17 +40,34 @@ envoy_mobile_kt_library(\n         \"EnvoyClientBuilder.kt\",\n         \"EnvoyError.kt\",\n         \"EnvoyStreamEmitter.kt\",\n+        \"Filter.kt\",\n+        \"FilterDataStatus.kt\",\n+        \"FilterHeaderStatus.kt\",\n+        \"FilterRegistry.kt\",\n+        \"FilterTrailerStatus.kt\",\n         \"GRPCClient.kt\",\n         \"GRPCRequestBuilder.kt\",\n         \"GRPCResponseHandler.kt\",\n         \"GRPCStreamEmitter.kt\",\n         \"HTTPClient.kt\",\n+        \"Headers.kt\",\n+        \"HeadersBuilder.kt\",\n         \"LogLevel.kt\",\n         \"Request.kt\",\n         \"RequestBuilder.kt\",\n+        \"RequestFilter.kt\",\n+        \"RequestFilterCallbacks.kt\",\n+        \"RequestHeaders.kt\",\n+        \"RequestHeadersBuilder.kt\",\n         \"RequestMapper.kt\",\n         \"RequestMethod.kt\",\n+        \"RequestTrailersBuilder.kt\",\n+        \"RequestTrailers.kt\",\n+        \"ResponseFilter.kt\",\n+        \"ResponseFilterCallbacks.kt\",\n         \"ResponseHandler.kt\",\n+        \"ResponseHeaders.kt\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2722caf1910f6b80acfea1147df66421ff7281f8"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/9d671b1b94349a2dbe58c98408cef97169ebd936", "committedDate": "2020-05-12T20:37:04Z", "message": "fmt\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDA1Njkz", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410405693", "createdAt": "2020-05-12T20:41:45Z", "commit": {"oid": "2722caf1910f6b80acfea1147df66421ff7281f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo0MTo0NlrOGUYJqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo0MTo0NlrOGUYJqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyMDM5Mw==", "bodyText": "Can we add a TODO for fixing the linter from being this strict?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424020393", "createdAt": "2020-05-12T20:41:46Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/Headers.kt", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Base class that is used to represent header/trailer data structures.\n+ * To instantiate new instances, see `{Request|Response}HeadersBuilder`.\n+ */\n+open class Headers {\n+  @Suppress(\"MemberNameEqualsClassName\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2722caf1910f6b80acfea1147df66421ff7281f8"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDA1OTE1", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410405915", "createdAt": "2020-05-12T20:42:03Z", "commit": {"oid": "2722caf1910f6b80acfea1147df66421ff7281f8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo0MjowNFrOGUYKTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo0MjowNFrOGUYKTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyMDU1OQ==", "bodyText": "Let's add a TODO for avoid linting on this", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424020559", "createdAt": "2020-05-12T20:42:04Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/Filter.kt", "diffHunk": "@@ -0,0 +1,7 @@\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Interface representing a filter. See `RequestFilter` and `ResponseFilter` for more details.\n+ */\n+@Suppress(\"EmptyClassBlock\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2722caf1910f6b80acfea1147df66421ff7281f8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDE1NzI0", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410415724", "createdAt": "2020-05-12T20:56:35Z", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1NjozNVrOGUYpVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1NjozNVrOGUYpVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyODUwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.lang.IllegalArgumentException\n          \n          \n            \n            \n          \n          \n            \n            import java.lang.IllegalArgumentException", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424028500", "createdAt": "2020-05-12T20:56:35Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestMethod.kt", "diffHunk": "@@ -1,5 +1,5 @@\n package io.envoyproxy.envoymobile\n-\n+import java.lang.IllegalArgumentException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDE2MDMw", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410416030", "createdAt": "2020-05-12T20:57:03Z", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1NzowM1rOGUYqVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1NzowM1rOGUYqVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyODc1OA==", "bodyText": "Is this actually needed? We can add a TODO for removing this lint check", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424028758", "createdAt": "2020-05-12T20:57:03Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestTrailers.kt", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Trailers representing an outbound request.\n+ */\n+@Suppress(\"EmptyClassBlock\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDE2OTcy", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410416972", "createdAt": "2020-05-12T20:58:24Z", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1ODoyNFrOGUYtMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1ODoyNFrOGUYtMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyOTQ5MQ==", "bodyText": "@rebello95 Could you give insight onto how we can find this out (or help find this out for us?)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424029491", "createdAt": "2020-05-12T20:58:24Z", "author": {"login": "buildbreaker"}, "path": "library/swift/src/RetryPolicyMapper.swift", "diffHunk": "@@ -36,8 +36,10 @@ extension RetryPolicy {\n     self.init(\n       maxRetryCount: maxRetryCount,\n       retryOn: headers.value(forName: \"x-envoy-retry-on\")?.compactMap(RetryRule.init) ?? [],\n+      // TODO: does the UInt.init blow up? or does it return nil?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDE3Mjk1", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410417295", "createdAt": "2020-05-12T20:58:56Z", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1ODo1NlrOGUYuKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1ODo1NlrOGUYuKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyOTczNg==", "bodyText": "@rebello95 Same here, do we error out when a :status is not a number?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424029736", "createdAt": "2020-05-12T20:58:56Z", "author": {"login": "buildbreaker"}, "path": "library/swift/src/ResponseHeaders.swift", "diffHunk": "@@ -4,6 +4,7 @@ import Foundation\n @objcMembers\n public final class ResponseHeaders: Headers {\n   /// HTTP status code received with the response.\n+  /// TODO: in Kotlin this blows up if the value of status cannot be translated to an int.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDE3NTI0", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410417524", "createdAt": "2020-05-12T20:59:14Z", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1OToxNVrOGUYuyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1OToxNVrOGUYuyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyOTg5Nw==", "bodyText": "Nice catch!", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424029897", "createdAt": "2020-05-12T20:59:15Z", "author": {"login": "buildbreaker"}, "path": "library/swift/src/ResponseFilterCallbacks.swift", "diffHunk": "@@ -20,5 +21,5 @@ public protocol ResponseFilterCallbacks {\n   /// `endStream = true` in order to guarantee that the client will not send its own trailers.\n   ///\n   /// - parameter trailers: The trailers to add and pass to subsequent filters.\n-  func addResponseTrailers() -> ResponseHeaders\n+  func addResponseTrailers(_ trailers: ResponseTrailers)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDE3OTQ4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410417948", "createdAt": "2020-05-12T20:59:51Z", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1OTo1MVrOGUYwOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDo1OTo1MVrOGUYwOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMDI2Nw==", "bodyText": "Is this still relevant since you've added the enumValue() method in the class?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424030267", "createdAt": "2020-05-12T20:59:51Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RetryPolicyMapper.kt", "diffHunk": "@@ -30,6 +30,7 @@ internal fun RetryPolicy.outboundHeaders(): Map<String, List<String>> {\n  *\n  * @return The string representation of the retry rule\n  */\n+ //TODO: change to enum pattern in UpstreamHttpProtocol", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDE4MzYx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410418361", "createdAt": "2020-05-12T21:00:22Z", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowMDoyM1rOGUYxog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTowMDoyM1rOGUYxog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAzMDYyNg==", "bodyText": "Contingent on https://github.com/lyft/envoy-mobile/pull/840/files#r424029491", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424030626", "createdAt": "2020-05-12T21:00:23Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RetryPolicy.kt", "diffHunk": "@@ -25,6 +25,22 @@ data class RetryPolicy(\n       throw IllegalArgumentException(\"Per-retry timeout cannot be less than total timeout\")\n     }\n   }\n+\n+  /**\n+   * Initialize the retry policy from a set of headers.\n+   *\n+   * @param headers: The headers with which to initialize the retry policy.\n+   */\n+  constructor(headers: Headers): this(\n+      headers.value(\"x-envoy-max-retries\")?.first()!!.toInt(),\n+      // TODO: should we have ? after the map?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTgxOTE4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-410581918", "createdAt": "2020-05-13T04:39:38Z", "commit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDozOTozOFrOGUhLLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDo0OToxNVrOGUhTjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2ODIzOQ==", "bodyText": "Ah yea we should add those. Originally I thought they wouldn't be necessary, but since we'll allow filters to add/mutate response headers/trailers, we'll need to add those. Can do in a separate PR (maybe comment on the issue?)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424168239", "createdAt": "2020-05-13T04:39:38Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/BUILD", "diffHunk": "@@ -40,17 +40,34 @@ envoy_mobile_kt_library(\n         \"EnvoyClientBuilder.kt\",\n         \"EnvoyError.kt\",\n         \"EnvoyStreamEmitter.kt\",\n+        \"Filter.kt\",\n+        \"FilterDataStatus.kt\",\n+        \"FilterHeaderStatus.kt\",\n+        \"FilterRegistry.kt\",\n+        \"FilterTrailerStatus.kt\",\n         \"GRPCClient.kt\",\n         \"GRPCRequestBuilder.kt\",\n         \"GRPCResponseHandler.kt\",\n         \"GRPCStreamEmitter.kt\",\n         \"HTTPClient.kt\",\n+        \"Headers.kt\",\n+        \"HeadersBuilder.kt\",\n         \"LogLevel.kt\",\n         \"Request.kt\",\n         \"RequestBuilder.kt\",\n+        \"RequestFilter.kt\",\n+        \"RequestFilterCallbacks.kt\",\n+        \"RequestHeaders.kt\",\n+        \"RequestHeadersBuilder.kt\",\n         \"RequestMapper.kt\",\n         \"RequestMethod.kt\",\n+        \"RequestTrailersBuilder.kt\",\n+        \"RequestTrailers.kt\",\n+        \"ResponseFilter.kt\",\n+        \"ResponseFilterCallbacks.kt\",\n         \"ResponseHandler.kt\",\n+        \"ResponseHeaders.kt\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAxMDUyNw=="}, "originalCommit": {"oid": "2722caf1910f6b80acfea1147df66421ff7281f8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2ODc2OA==", "bodyText": "In Swift these are computed and are only computed when they're accessed by the consumer. Is it possible to do that here @buildbreaker?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424168768", "createdAt": "2020-05-13T04:42:10Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestHeaders.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Headers representing an outbound request.\n+ */\n+class RequestHeaders: Headers {\n+  /**\n+   * Internal constructor used by builders.\n+   *\n+   * @param headers: Headers to set.\n+   */\n+  internal constructor(headers: Map<String, List<String>>) : super(headers)\n+\n+  /**\n+   * Method for the request.\n+   */\n+  val method = RequestMethod.enumValue(value(\":method\")?.first()!!)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2ODkxMw==", "bodyText": "This is optional/nullable, so we probably should not force unwrap here", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424168913", "createdAt": "2020-05-13T04:42:45Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestHeaders.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Headers representing an outbound request.\n+ */\n+class RequestHeaders: Headers {\n+  /**\n+   * Internal constructor used by builders.\n+   *\n+   * @param headers: Headers to set.\n+   */\n+  internal constructor(headers: Map<String, List<String>>) : super(headers)\n+\n+  /**\n+   * Method for the request.\n+   */\n+  val method = RequestMethod.enumValue(value(\":method\")?.first()!!)\n+\n+  /**\n+   * The URL scheme for the request (i.e., \"https\").\n+   */\n+  val scheme = value(\":scheme\")?.first()!!\n+\n+  /**\n+   * The URL authority for the request (i.e., \"api.foo.com\").\n+   */\n+  val authority = value(\":authority\")?.first()!!\n+\n+  /**\n+   * The URL path for the request (i.e., \"/foo\").\n+   */\n+  val path = value(\":path\")?.first()!!\n+\n+  /**\n+   * Retry policy to use for this request.\n+   */\n+  // TODO: retry policy mapper\n+  val retryPolicy = RetryPolicy(this)\n+\n+  /**\n+   * The protocol version to use for upstream requests.\n+   */\n+  val upstreamHttpProtocol =\n+    UpstreamHttpProtocol.enumValue(value(\"x-envoy-mobile-upstream-protocol\")?.first()!!)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2ODk5Ng==", "bodyText": "What's necessary to do here?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424168996", "createdAt": "2020-05-13T04:43:02Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestHeaders.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Headers representing an outbound request.\n+ */\n+class RequestHeaders: Headers {\n+  /**\n+   * Internal constructor used by builders.\n+   *\n+   * @param headers: Headers to set.\n+   */\n+  internal constructor(headers: Map<String, List<String>>) : super(headers)\n+\n+  /**\n+   * Method for the request.\n+   */\n+  val method = RequestMethod.enumValue(value(\":method\")?.first()!!)\n+\n+  /**\n+   * The URL scheme for the request (i.e., \"https\").\n+   */\n+  val scheme = value(\":scheme\")?.first()!!\n+\n+  /**\n+   * The URL authority for the request (i.e., \"api.foo.com\").\n+   */\n+  val authority = value(\":authority\")?.first()!!\n+\n+  /**\n+   * The URL path for the request (i.e., \"/foo\").\n+   */\n+  val path = value(\":path\")?.first()!!\n+\n+  /**\n+   * Retry policy to use for this request.\n+   */\n+  // TODO: retry policy mapper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2OTQ2MQ==", "bodyText": "I think we should probably avoid throwing an exception here if possible to match Swift", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424169461", "createdAt": "2020-05-13T04:45:09Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/ResponseHeaders.kt", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Headers representing an inbound response.\n+ */\n+class ResponseHeaders: Headers {\n+  /**\n+   * Internal constructor used by builders.\n+   *\n+   * @param headers: Headers to set.\n+   */\n+  internal constructor(headers: Map<String, List<String>>) : super(headers)\n+\n+  /**\n+   * HTTP status code received with the response.\n+   */\n+  val httpStatus = value(\":status\")?.first()?.toInt()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2OTcwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              func onRequestTrailers(_ trailers: RequestTrailers) -> FilterTrailerStatus<RequestHeaders>\n          \n          \n            \n              func onRequestTrailers(_ trailers: RequestTrailers) -> FilterTrailerStatus<RequestTrailers>\n          \n      \n    \n    \n  \n\nMissed one \ud83d\ude09", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424169707", "createdAt": "2020-05-13T04:46:20Z", "author": {"login": "rebello95"}, "path": "library/swift/src/RequestFilter.swift", "diffHunk": "@@ -36,5 +36,5 @@ public protocol RequestFilter: Filter {\n   /// - parameter trailers: The outbound trailers.\n   ///\n   /// - returns: The trailer status containing body with which to continue or buffer.\n-  func onRequestTrailers(_ trailers: RequestHeaders) -> FilterTrailerStatus<RequestHeaders>\n+  func onRequestTrailers(_ trailers: RequestTrailers) -> FilterTrailerStatus<RequestHeaders>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2OTk1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /// Interface for RequestFilters to access FilterManager state.\n          \n          \n            \n            /// Interface for RequestFilters to access FilterManager state.\n          \n      \n    \n    \n  \n\nMight want to remove this (same in Kotlin) for now since we haven't yet confirmed if FilterManager will be a class or where that logic will live", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424169953", "createdAt": "2020-05-13T04:47:30Z", "author": {"login": "rebello95"}, "path": "library/swift/src/RequestFilterCallbacks.swift", "diffHunk": "@@ -1,5 +1,6 @@\n import Foundation\n \n+/// Interface for RequestFilters to access FilterManager state.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MDAzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /// Builder used for constructing instances of `RequestTrailers` type.\n          \n          \n            \n            /// Builder used for constructing instances of the `RequestTrailers` type.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424170036", "createdAt": "2020-05-13T04:47:42Z", "author": {"login": "rebello95"}, "path": "library/swift/src/RequestTrailersBuilder.swift", "diffHunk": "@@ -1,6 +1,6 @@\n import Foundation\n \n-/// Builder used for constructing instances of `RequestTrailers` types.\n+/// Builder used for constructing instances of `RequestTrailers` type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MDEyOQ==", "bodyText": "This was \"types\" before since we have multiple subclasses, but no strong opinion (let's just keep them all consistent)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424170129", "createdAt": "2020-05-13T04:48:06Z", "author": {"login": "rebello95"}, "path": "library/swift/src/RequestTrailersBuilder.swift", "diffHunk": "@@ -1,6 +1,6 @@\n import Foundation\n \n-/// Builder used for constructing instances of `RequestTrailers` types.\n+/// Builder used for constructing instances of `RequestTrailers` type.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MDAzNg=="}, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE3MDM4MQ==", "bodyText": "Commented above, but swift returns nil in the case of an invalid :status which I think makes sense, especially if at some point we have internal headers generated by Envoy/Envoy Mobile in the future that don't contain this header", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424170381", "createdAt": "2020-05-13T04:49:15Z", "author": {"login": "rebello95"}, "path": "library/swift/src/ResponseHeaders.swift", "diffHunk": "@@ -4,6 +4,7 @@ import Foundation\n @objcMembers\n public final class ResponseHeaders: Headers {\n   /// HTTP status code received with the response.\n+  /// TODO: in Kotlin this blows up if the value of status cannot be translated to an int.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAyOTczNg=="}, "originalCommit": {"oid": "9d671b1b94349a2dbe58c98408cef97169ebd936"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63aac4c217b06355beb3818d1879f470128ec57e", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/63aac4c217b06355beb3818d1879f470128ec57e", "committedDate": "2020-05-13T20:30:15Z", "message": "Merge branch 'master' into kotlin-filters\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3b28689191116d6ba62b84e262286eef6b238f3", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/d3b28689191116d6ba62b84e262286eef6b238f3", "committedDate": "2020-05-13T20:53:10Z", "message": "comments\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjkzNjY3", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-411293667", "createdAt": "2020-05-13T20:57:20Z", "commit": {"oid": "d3b28689191116d6ba62b84e262286eef6b238f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo1NzoyMVrOGVDP1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo1NzoyMVrOGVDP1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyNjQ4Nw==", "bodyText": "https://www.hackingwithswift.com/articles/205/whats-the-difference-between-map-flatmap-and-compactmap", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424726487", "createdAt": "2020-05-13T20:57:21Z", "author": {"login": "junr03"}, "path": "library/swift/src/RetryPolicyMapper.swift", "diffHunk": "@@ -38,6 +38,7 @@ extension RetryPolicy {\n       retryOn: headers.value(forName: \"x-envoy-retry-on\")?.compactMap(RetryRule.init) ?? [],\n       retryStatusCodes: headers.value(forName: \"x-envoy-retriable-status-codes\")?\n         .compactMap(UInt.init) ?? [],\n+      // TODO: is the flatmap to apply the constructor even if there is only one value?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3b28689191116d6ba62b84e262286eef6b238f3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dff47d79cbe7776b490b8fe4c26fc09266ff5daa", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/dff47d79cbe7776b490b8fe4c26fc09266ff5daa", "committedDate": "2020-05-13T20:57:32Z", "message": "remove todo\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/23feee94ac3038e6f22ea2959783eb7297c3dc37", "committedDate": "2020-05-13T21:09:32Z", "message": "lazy\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzAxOTQz", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-411301943", "createdAt": "2020-05-13T21:10:35Z", "commit": {"oid": "dff47d79cbe7776b490b8fe4c26fc09266ff5daa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToxMDozNVrOGVDpYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMToxMDozNVrOGVDpYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDczMzAyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              val method = RequestMethod.enumValue(value(\":method\")?.first()!!)\n          \n          \n            \n              val method by lazy { RequestMethod.enumValue(value(\":method\")?.first()!!) }", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r424733025", "createdAt": "2020-05-13T21:10:35Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestHeaders.kt", "diffHunk": "@@ -0,0 +1,54 @@\n+\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Headers representing an outbound request.\n+ */\n+class RequestHeaders: Headers {\n+  /**\n+   * Internal constructor used by builders.\n+   *\n+   * @param headers: Headers to set.\n+   */\n+  internal constructor(headers: Map<String, List<String>>) : super(headers)\n+\n+  /**\n+   * Method for the request.\n+   */\n+  val method = RequestMethod.enumValue(value(\":method\")?.first()!!)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dff47d79cbe7776b490b8fe4c26fc09266ff5daa"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzAzNTEy", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-411303512", "createdAt": "2020-05-13T21:12:56Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc1MTk4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412075198", "createdAt": "2020-05-14T18:26:32Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyNjozMlrOGVpBTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyNjozMlrOGVpBTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NTM1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              fun onRequestTrailers(trailers: RequestTrailers): FilterTrailerStatus<RequestHeaders>\n          \n          \n            \n              fun onRequestTrailers(trailers: RequestTrailers): FilterTrailerStatus<RequestTrailers>", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425345358", "createdAt": "2020-05-14T18:26:32Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestFilter.kt", "diffHunk": "@@ -0,0 +1,52 @@\n+package io.envoyproxy.envoymobile\n+\n+import java.nio.ByteBuffer\n+\n+/*\n+ * Filter executed for outbound requests, providing the ability to observe and mutate streams.\n+ */\n+interface RequestFilter: Filter {\n+  /**\n+   * Called by the filter manager once to initialize the filter callbacks that the filter should\n+   * use.\n+   *\n+   * @param callbacks: The callbacks for this filter to use to interact with the chain.\n+   */\n+  fun setRequestFilterCallbacks(callbacks: RequestFilterCallbacks)\n+\n+  /**\n+   * Called once when the request is initiated.\n+   *\n+   * Filters may mutate or delay the request headers.\n+   *\n+   * @param headers:   The current request headers.\n+   * @param endStream: Whether this is a headers-only request.\n+   *\n+   * @return: The header status containing headers with which to continue or buffer.\n+   */\n+  fun onRequestHeaders(headers: RequestHeaders, endStream: Boolean):\n+    FilterHeaderStatus<RequestHeaders>\n+\n+  /**\n+   * Called any number of times whenever body data is sent.\n+   *\n+   * Filters may mutate or buffer (defer and concatenate) the data.\n+   *\n+   * @param body:      The outbound body data chunk.\n+   * @param endStream: Whether this is the last data frame.\n+   *\n+   * @return: The data status containing body with which to continue or buffer.\n+   */\n+  fun onRequestData(body: ByteBuffer, endStream: Boolean): FilterDataStatus\n+\n+  /**\n+   * Called at most once when the request is closed from the client with trailers.\n+   *\n+   * Filters may mutate or delay the trailers.\n+   *\n+   * @param trailers: The outbound trailers.\n+   *\n+   * @return: The trailer status containing body with which to continue or buffer.\n+   */\n+  fun onRequestTrailers(trailers: RequestTrailers): FilterTrailerStatus<RequestHeaders>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc1ODAw", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412075800", "createdAt": "2020-05-14T18:27:20Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyNzoyMFrOGVpDGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyNzoyMFrOGVpDGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NTgxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              val retryPolicy: RetryPolicy by lazy { RetryPolicy(this) }\n          \n          \n            \n              val retryPolicy: RetryPolicy? by lazy { RetryPolicy(this) }\n          \n      \n    \n    \n  \n\nShouldn't this be optional?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425345816", "createdAt": "2020-05-14T18:27:20Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestHeaders.kt", "diffHunk": "@@ -0,0 +1,55 @@\n+\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Headers representing an outbound request.\n+ */\n+class RequestHeaders: Headers {\n+  /**\n+   * Internal constructor used by builders.\n+   *\n+   * @param headers: Headers to set.\n+   */\n+  internal constructor(headers: Map<String, List<String>>) : super(headers)\n+\n+  /**\n+   * Method for the request.\n+   */\n+  val method: RequestMethod by lazy { RequestMethod.enumValue(value(\":method\")?.first()!!) }\n+\n+  /**\n+   * The URL scheme for the request (i.e., \"https\").\n+   */\n+  val scheme: String by lazy { value(\":scheme\")?.first()!! }\n+\n+  /**\n+   * The URL authority for the request (i.e., \"api.foo.com\").\n+   */\n+  val authority: String by lazy { value(\":authority\")?.first()!! }\n+\n+  /**\n+   * The URL path for the request (i.e., \"/foo\").\n+   */\n+  val path: String by lazy { value(\":path\")?.first()!! }\n+\n+  /**\n+   * Retry policy to use for this request.\n+   */\n+  val retryPolicy: RetryPolicy by lazy { RetryPolicy(this) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc3MjMx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412077231", "createdAt": "2020-05-14T18:29:16Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyOToxNlrOGVpHWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyOToxNlrOGVpHWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NjkwNQ==", "bodyText": "\ud83e\udd14 how'd this work before? Do they work the same way @buildbreaker?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425346905", "createdAt": "2020-05-14T18:29:16Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestMapper.kt", "diffHunk": "@@ -8,7 +8,7 @@ internal fun Request.outboundHeaders(): Map<String, List<String>> {\n     !entry.key.startsWith(\":\") && !entry.key.startsWith(\"x-envoy-mobile\")\n   })\n   result.putAll(retryPolicyHeaders)\n-  result[\":method\"] = listOf(method.stringValue())\n+  result[\":method\"] = listOf(method.stringValue)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc3NDYy", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412077462", "createdAt": "2020-05-14T18:29:37Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyOTozN1rOGVpIAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyOTozN1rOGVpIAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NzA3Mw==", "bodyText": "I think this can be internal", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425347073", "createdAt": "2020-05-14T18:29:37Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestMethod.kt", "diffHunk": "@@ -1,15 +1,33 @@\n package io.envoyproxy.envoymobile\n \n+import java.lang.IllegalArgumentException\n+\n /**\n  * Represents an HTTP request method.\n  */\n-enum class RequestMethod {\n-  DELETE,\n-  GET,\n-  HEAD,\n-  OPTIONS,\n-  PATCH,\n-  POST,\n-  PUT,\n-  TRACE\n+enum class RequestMethod(internal val stringValue: String) {\n+  DELETE(\"DELETE\"),\n+  GET(\"GET\"),\n+  HEAD(\"HEAD\"),\n+  OPTIONS(\"OPTIONS\"),\n+  PATCH(\"PATCH\"),\n+  POST(\"POST\"),\n+  PUT(\"PUT\"),\n+  TRACE(\"TRACE\");\n+\n+  companion object {\n+    fun enumValue(stringRepresentation: String): RequestMethod {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc3ODY0", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412077864", "createdAt": "2020-05-14T18:30:08Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMDowOFrOGVpJRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMDowOFrOGVpJRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NzM5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                FilterHeaderStatus<ResponseTrailers>\n          \n          \n            \n                FilterHeaderStatus<ResponseHeaders>", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425347399", "createdAt": "2020-05-14T18:30:08Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/ResponseFilter.kt", "diffHunk": "@@ -0,0 +1,70 @@\n+package io.envoyproxy.envoymobile\n+\n+import java.nio.ByteBuffer\n+\n+/*\n+ * Filter executed for inbound responses, providing the ability to observe and mutate streams.\n+ */\n+interface ResponseFilter: Filter {\n+  /**\n+   * Called by the filter manager once to initialize the filter callbacks that the filter should\n+   * use.\n+   *\n+   * @param callbacks: The callbacks for this filter to use to interact with the chain.\n+   */\n+  fun setResponseFilterCallbacks(callbacks: ResponseFilterCallbacks)\n+\n+  /**\n+   * Called once when the response is initiated.\n+   *\n+   * Filters may mutate or delay the response headers.\n+   *\n+   * @param headers:   The current response headers.\n+   * @param endStream: Whether this is a headers-only response.\n+   *\n+   * @return: The header status containing headers with which to continue or buffer.\n+   */\n+  fun onResponseHeaders(headers: ResponseHeaders, endStream: Boolean):\n+    FilterHeaderStatus<ResponseTrailers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc3OTg2", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412077986", "createdAt": "2020-05-14T18:30:18Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMDoxOFrOGVpJpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMDoxOFrOGVpJpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NzQ5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              fun onResponseTrailers(trailers: RequestTrailers): FilterTrailerStatus<ResponseTrailers>\n          \n          \n            \n              fun onResponseTrailers(trailers: ResponseTrailers): FilterTrailerStatus<ResponseTrailers>", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425347495", "createdAt": "2020-05-14T18:30:18Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/ResponseFilter.kt", "diffHunk": "@@ -0,0 +1,70 @@\n+package io.envoyproxy.envoymobile\n+\n+import java.nio.ByteBuffer\n+\n+/*\n+ * Filter executed for inbound responses, providing the ability to observe and mutate streams.\n+ */\n+interface ResponseFilter: Filter {\n+  /**\n+   * Called by the filter manager once to initialize the filter callbacks that the filter should\n+   * use.\n+   *\n+   * @param callbacks: The callbacks for this filter to use to interact with the chain.\n+   */\n+  fun setResponseFilterCallbacks(callbacks: ResponseFilterCallbacks)\n+\n+  /**\n+   * Called once when the response is initiated.\n+   *\n+   * Filters may mutate or delay the response headers.\n+   *\n+   * @param headers:   The current response headers.\n+   * @param endStream: Whether this is a headers-only response.\n+   *\n+   * @return: The header status containing headers with which to continue or buffer.\n+   */\n+  fun onResponseHeaders(headers: ResponseHeaders, endStream: Boolean):\n+    FilterHeaderStatus<ResponseTrailers>\n+\n+  /**\n+   * Called any number of times whenever body data is received.\n+   *\n+   * Filters may mutate or buffer (defer and concatenate) the data.\n+   *\n+   * @param body:      The inbound body data chunk.\n+   * @param endStream: Whether this is the last data frame.\n+   *\n+   * @return: The data status containing body with which to continue or buffer.\n+   */\n+  fun onResponseData(body: ByteBuffer, endStream: Boolean): FilterDataStatus\n+\n+  /**\n+   * Called at most once when the response is closed from the server with trailers.\n+   *\n+   * Filters may mutate or delay the trailers.\n+   *\n+   * @param trailers: The inbound trailers.\n+   *\n+   * @return: The trailer status containing body with which to continue or buffer.\n+   */\n+  fun onResponseTrailers(trailers: RequestTrailers): FilterTrailerStatus<ResponseTrailers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc4MjI0", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412078224", "createdAt": "2020-05-14T18:30:39Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMDozOVrOGVpKZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMDozOVrOGVpKZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NzY4Nw==", "bodyText": "This one should be lazy as well", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425347687", "createdAt": "2020-05-14T18:30:39Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/ResponseHeaders.kt", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Headers representing an inbound response.\n+ */\n+class ResponseHeaders: Headers {\n+  /**\n+   * Internal constructor used by builders.\n+   *\n+   * @param headers: Headers to set.\n+   */\n+  internal constructor(headers: Map<String, List<String>>) : super(headers)\n+\n+  /**\n+   * HTTP status code received with the response.\n+   */\n+  val httpStatus = value(\":status\")?.first()?.toIntOrNull()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc4Mzcx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412078371", "createdAt": "2020-05-14T18:30:52Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMDo1MlrOGVpKzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMDo1MlrOGVpKzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0Nzc4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param trailers: Headers to set.\n          \n          \n            \n               * @param trailers: Trailers to set.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425347789", "createdAt": "2020-05-14T18:30:52Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/ResponseTrailers.kt", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.envoyproxy.envoymobile\n+\n+/*\n+ * Trailers representing an inbound response.\n+ */\n+@Suppress(\"EmptyClassBlock\")\n+class ResponseTrailers: Headers {\n+  /**\n+   * Internal constructor used by builders.\n+   *\n+   * @param trailers: Headers to set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc4OTcx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412078971", "createdAt": "2020-05-14T18:31:39Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMTozOVrOGVpMkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMTozOVrOGVpMkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0ODI0Mg==", "bodyText": "I think we should avoid crashing here like we do in Swift (and early return)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425348242", "createdAt": "2020-05-14T18:31:39Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RetryPolicy.kt", "diffHunk": "@@ -25,18 +25,49 @@ data class RetryPolicy(\n       throw IllegalArgumentException(\"Per-retry timeout cannot be less than total timeout\")\n     }\n   }\n+\n+  /**\n+   * Initialize the retry policy from a set of headers.\n+   *\n+   * @param headers: The headers with which to initialize the retry policy.\n+   */\n+  constructor(headers: Headers): this(\n+      headers.value(\"x-envoy-max-retries\")?.first()!!.toInt(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc5MzI4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412079328", "createdAt": "2020-05-14T18:32:11Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMjoxMVrOGVpNow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMjoxMVrOGVpNow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0ODUxNQ==", "bodyText": "Can be internal", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425348515", "createdAt": "2020-05-14T18:32:11Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RetryPolicy.kt", "diffHunk": "@@ -25,18 +25,49 @@ data class RetryPolicy(\n       throw IllegalArgumentException(\"Per-retry timeout cannot be less than total timeout\")\n     }\n   }\n+\n+  /**\n+   * Initialize the retry policy from a set of headers.\n+   *\n+   * @param headers: The headers with which to initialize the retry policy.\n+   */\n+  constructor(headers: Headers): this(\n+      headers.value(\"x-envoy-max-retries\")?.first()!!.toInt(),\n+      // TODO: should we have ? after the map?\n+      headers.value(\"x-envoy-retry-on\")\n+        ?.map { retryOn -> RetryRule.enumValue(retryOn) }?.filterNotNull() ?: emptyList(),\n+      headers.value(\"x-envoy-retriable-status-codes\")\n+        ?.map { statusCode -> statusCode.toIntOrNull() }?.filterNotNull() ?: emptyList(),\n+      headers.value(\"x-envoy-upstream-rq-per-try-timeout-ms\")?.firstOrNull()?.toLongOrNull(),\n+      headers.value(\"x-envoy-upstream-rq-timeout-ms\")?.firstOrNull()?.toLongOrNull()\n+    )\n }\n \n /**\n  * Rules that may be used with `RetryPolicy`.\n  * See the `x-envoy-retry-on` Envoy header for documentation.\n  */\n-enum class RetryRule {\n-  STATUS_5XX,\n-  GATEWAY_ERROR,\n-  CONNECT_FAILURE,\n-  REFUSED_STREAM,\n-  RETRIABLE_4XX,\n-  RETRIABLE_HEADERS,\n-  RESET,\n+enum class RetryRule(internal val stringValue: String) {\n+  STATUS_5XX(\"5xx\"),\n+  GATEWAY_ERROR(\"gateway-error\"),\n+  CONNECT_FAILURE(\"connect-failure\"),\n+  REFUSED_STREAM(\"refused-stream\"),\n+  RETRIABLE_4XX(\"retriable-4xx\"),\n+  RETRIABLE_HEADERS(\"retriable-headers\"),\n+  RESET(\"reset\");\n+\n+  companion object {\n+    fun enumValue(stringRepresentation: String): RetryRule? {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc5NTMx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412079531", "createdAt": "2020-05-14T18:32:28Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMjoyOFrOGVpONw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMjoyOFrOGVpONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0ODY2Mw==", "bodyText": "Internal", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425348663", "createdAt": "2020-05-14T18:32:28Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/UpstreamHttpProtocol.kt", "diffHunk": "@@ -5,5 +5,15 @@ package io.envoyproxy.envoymobile\n  */\n enum class UpstreamHttpProtocol(internal val stringValue: String) {\n   HTTP1(\"http1\"),\n-  HTTP2(\"http2\"),\n+  HTTP2(\"http2\");\n+\n+  companion object {\n+    fun enumValue(stringRepresentation: String): UpstreamHttpProtocol {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDc5ODAw", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412079800", "createdAt": "2020-05-14T18:32:53Z", "commit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMjo1M1rOGVpPIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozMjo1M1rOGVpPIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0ODg5Nw==", "bodyText": "I noticed that some of these throw and others are nullable. Should we keep them consistent?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425348897", "createdAt": "2020-05-14T18:32:53Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/UpstreamHttpProtocol.kt", "diffHunk": "@@ -5,5 +5,15 @@ package io.envoyproxy.envoymobile\n  */\n enum class UpstreamHttpProtocol(internal val stringValue: String) {\n   HTTP1(\"http1\"),\n-  HTTP2(\"http2\"),\n+  HTTP2(\"http2\");\n+\n+  companion object {\n+    fun enumValue(stringRepresentation: String): UpstreamHttpProtocol {\n+      return when (stringRepresentation) {\n+        \"http1\" -> UpstreamHttpProtocol.HTTP1\n+        \"http2\" -> UpstreamHttpProtocol.HTTP2\n+        else -> throw IllegalArgumentException(\"Unable to find value for $stringRepresentation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23feee94ac3038e6f22ea2959783eb7297c3dc37"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68ababa0d6a4da1beea3c216c47b6bcd2f619d6d", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/68ababa0d6a4da1beea3c216c47b6bcd2f619d6d", "committedDate": "2020-05-14T20:00:58Z", "message": "comments\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ab351489b0530812e6e84e467971d9cfe594300", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/0ab351489b0530812e6e84e467971d9cfe594300", "committedDate": "2020-05-15T00:26:59Z", "message": "factory\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d37812946e2456920d90cf6da1c5394b9ad7648", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/7d37812946e2456920d90cf6da1c5394b9ad7648", "committedDate": "2020-05-15T00:57:37Z", "message": "comments\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjgyOTUy", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412282952", "createdAt": "2020-05-15T01:07:00Z", "commit": {"oid": "7d37812946e2456920d90cf6da1c5394b9ad7648"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMTowNzowMFrOGVzKEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMTowNzowMFrOGVzKEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUxMTQ0Mg==", "bodyText": "Non-blocking: Do we return nil in swift?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425511442", "createdAt": "2020-05-15T01:07:00Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/RequestMethod.kt", "diffHunk": "@@ -1,15 +1,33 @@\n package io.envoyproxy.envoymobile\n \n+import java.lang.IllegalArgumentException\n+\n /**\n  * Represents an HTTP request method.\n  */\n-enum class RequestMethod {\n-  DELETE,\n-  GET,\n-  HEAD,\n-  OPTIONS,\n-  PATCH,\n-  POST,\n-  PUT,\n-  TRACE\n+enum class RequestMethod(internal val stringValue: String) {\n+  DELETE(\"DELETE\"),\n+  GET(\"GET\"),\n+  HEAD(\"HEAD\"),\n+  OPTIONS(\"OPTIONS\"),\n+  PATCH(\"PATCH\"),\n+  POST(\"POST\"),\n+  PUT(\"PUT\"),\n+  TRACE(\"TRACE\");\n+\n+  companion object {\n+    internal fun enumValue(stringRepresentation: String): RequestMethod {\n+      return when (stringRepresentation) {\n+        \"DELETE\" -> RequestMethod.DELETE\n+        \"GET\" -> RequestMethod.GET\n+        \"HEAD\" -> RequestMethod.HEAD\n+        \"OPTIONS\" -> RequestMethod.OPTIONS\n+        \"PATCH\" -> RequestMethod.PATCH\n+        \"POST\" -> RequestMethod.POST\n+        \"PUT\" -> RequestMethod.PUT\n+        \"TRACE\" -> RequestMethod.TRACE\n+        else -> throw IllegalArgumentException(\"invalid value $stringRepresentation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d37812946e2456920d90cf6da1c5394b9ad7648"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjgzMTQw", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412283140", "createdAt": "2020-05-15T01:07:43Z", "commit": {"oid": "7d37812946e2456920d90cf6da1c5394b9ad7648"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMTowNzo0M1rOGVzKwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMTowNzo0M1rOGVzKwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUxMTYxNg==", "bodyText": "We do now!", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#discussion_r425511616", "createdAt": "2020-05-15T01:07:43Z", "author": {"login": "buildbreaker"}, "path": "library/swift/src/RequestMethod.swift", "diffHunk": "@@ -56,7 +56,7 @@ public enum RequestMethod: Int, CaseIterable {\n     case \"TRACE\":\n       self = .trace\n     default:\n-      return nil\n+      fatalError(\"invalid value '\\(stringValue)'\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d37812946e2456920d90cf6da1c5394b9ad7648"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjgzMTY5", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412283169", "createdAt": "2020-05-15T01:07:50Z", "commit": {"oid": "7d37812946e2456920d90cf6da1c5394b9ad7648"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyODU3Nzc0", "url": "https://github.com/envoyproxy/envoy-mobile/pull/840#pullrequestreview-412857774", "createdAt": "2020-05-15T18:01:32Z", "commit": {"oid": "7d37812946e2456920d90cf6da1c5394b9ad7648"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4214, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}