{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjY5NzEz", "number": 669, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzoxNToyM1rODeiXXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzoxNToyM1rODeiXXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzQ2OTEwOnYy", "diffSide": "RIGHT", "path": "library/common/http/dispatcher.cc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzoxNToyM1rOFnufOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzo0MToyM1rOFnvVJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwMDQ0MA==", "bodyText": "nit: pending_cleanup or pending_delete is a little more concise and feels equally expressive in this case. definitely nabd.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/669#discussion_r377200440", "createdAt": "2020-02-10T17:15:23Z", "author": {"login": "goaway"}, "path": "library/common/http/dispatcher.cc", "diffHunk": "@@ -31,6 +31,13 @@ Dispatcher::DirectStreamCallbacks::DirectStreamCallbacks(DirectStream& direct_st\n void Dispatcher::DirectStreamCallbacks::encodeHeaders(const HeaderMap& headers, bool end_stream) {\n   ENVOY_LOG(debug, \"[S{}] response headers for stream (end_stream={}):\\n{}\",\n             direct_stream_.stream_handle_, end_stream, headers);\n+\n+  // @see Dispatcher::resetStream's comment on its call to runResetCallbacks.\n+  // Envoy only deferredDeletes the ActiveStream if it was fully closed otherwise it issues a reset.\n+  if (direct_stream_.local_closed_ && end_stream) {\n+    direct_stream_.pending_stream_deferred_delete_ = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91b1a099beb37cf5750d7d03291b89806a78ba57"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNDI0NQ==", "bodyText": "@goaway I wanted to make it clear that it isn't the direct_stream that is pending deletion, but the HCM's active_stream that the direct_stream shadows. I am concerned that direct_stream_.pending_cleanup makes it seem like the direct stream is the one pending cleanup.\nPerhaps hcm_stream_pending_destroy?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/669#discussion_r377214245", "createdAt": "2020-02-10T17:41:23Z", "author": {"login": "junr03"}, "path": "library/common/http/dispatcher.cc", "diffHunk": "@@ -31,6 +31,13 @@ Dispatcher::DirectStreamCallbacks::DirectStreamCallbacks(DirectStream& direct_st\n void Dispatcher::DirectStreamCallbacks::encodeHeaders(const HeaderMap& headers, bool end_stream) {\n   ENVOY_LOG(debug, \"[S{}] response headers for stream (end_stream={}):\\n{}\",\n             direct_stream_.stream_handle_, end_stream, headers);\n+\n+  // @see Dispatcher::resetStream's comment on its call to runResetCallbacks.\n+  // Envoy only deferredDeletes the ActiveStream if it was fully closed otherwise it issues a reset.\n+  if (direct_stream_.local_closed_ && end_stream) {\n+    direct_stream_.pending_stream_deferred_delete_ = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwMDQ0MA=="}, "originalCommit": {"oid": "91b1a099beb37cf5750d7d03291b89806a78ba57"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 841, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}