{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDM5NDQw", "number": 663, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMDo1MDowOVrODeMJ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMDo1MDowOVrODeMJ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTgzMDA3OnYy", "diffSide": "RIGHT", "path": "library/common/http/dispatcher.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMDo1MDowOVrOFnOH9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMjoxNjo1NFrOFnOrwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY3MDE5Nw==", "bodyText": "this should only inherit from the ResponseEncoder", "url": "https://github.com/envoyproxy/envoy-mobile/pull/663#discussion_r376670197", "createdAt": "2020-02-08T00:50:09Z", "author": {"login": "junr03"}, "path": "library/common/http/dispatcher.h", "diffHunk": "@@ -99,7 +99,9 @@ class Dispatcher : public Logger::Loggable<Logger::Id::http> {\n    * DirectStreamCallbacks can continue to receive events until the remote to local stream is\n    * closed, or resetStream is called.\n    */\n-  class DirectStreamCallbacks : public StreamEncoder, public Logger::Loggable<Logger::Id::http> {\n+  class DirectStreamCallbacks : public RequestEncoder,\n+                                public ResponseEncoder,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f41b0afe5c2c5bf767a24982b936dd083836073d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY3OTM2MA==", "bodyText": "updated", "url": "https://github.com/envoyproxy/envoy-mobile/pull/663#discussion_r376679360", "createdAt": "2020-02-08T02:16:54Z", "author": {"login": "rebello95"}, "path": "library/common/http/dispatcher.h", "diffHunk": "@@ -99,7 +99,9 @@ class Dispatcher : public Logger::Loggable<Logger::Id::http> {\n    * DirectStreamCallbacks can continue to receive events until the remote to local stream is\n    * closed, or resetStream is called.\n    */\n-  class DirectStreamCallbacks : public StreamEncoder, public Logger::Loggable<Logger::Id::http> {\n+  class DirectStreamCallbacks : public RequestEncoder,\n+                                public ResponseEncoder,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY3MDE5Nw=="}, "originalCommit": {"oid": "f41b0afe5c2c5bf767a24982b936dd083836073d"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 839, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}