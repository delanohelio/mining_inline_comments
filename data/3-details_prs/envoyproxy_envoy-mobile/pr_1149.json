{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMDQxNzIw", "number": 1149, "title": "doc: add gauge apis", "bodyText": "Add doc for Gauge APIs introduced in #1117.\nRisk Level: Low\nSigned-off-by: Jingwei Hao jingwei.hao@gmail.com", "createdAt": "2020-10-27T20:35:24Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149", "merged": true, "mergeCommit": {"oid": "70d6cdbb70783d32a03ba65b37305c53f4f54f84"}, "closed": true, "closedAt": "2020-10-28T20:02:52Z", "author": {"login": "jingwei99"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWvDF0gH2gAyNTExMDQxNzIwOmIyYjljNjY0YzNkZmRmNTUyNDA4NGE5YmRlNDMxZjM2ZTA2NjJhZjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXBb-IgFqTUxODk0MjQyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b2b9c664c3dfdf5524084a9bde431f36e0662af9", "author": {"user": {"login": "jingwei99", "name": "Jingwei"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/b2b9c664c3dfdf5524084a9bde431f36e0662af9", "committedDate": "2020-10-27T20:32:29Z", "message": "doc: add gauge apis\n\nSigned-off-by: Jingwei Hao <jingwei.hao@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "605bd65fa2ebdb320c70c1182231093259d35679", "author": {"user": {"login": "jingwei99", "name": "Jingwei"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/605bd65fa2ebdb320c70c1182231093259d35679", "committedDate": "2020-10-27T20:46:06Z", "message": "precommit\n\nSigned-off-by: Jingwei Hao <jingwei.hao@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MTUxNDM1", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#pullrequestreview-518151435", "createdAt": "2020-10-27T21:07:00Z", "commit": {"oid": "605bd65fa2ebdb320c70c1182231093259d35679"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMTowNzowMFrOHpRAcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMTowOTo1MFrOHpRH5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAzMjMwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from ``Engine`` (refer to :ref:`api_starting_envoy` for building an engine instance), and store the stats client to create ``Counter`` or ``Gauge`` instances. The following code examples show how to create a ``Counter``, and it's similar in the way a ``Gauge`` is created.\n          \n          \n            \n            To use Envoy Mobile's stats, obtain an instance of ``StatsClient`` from ``Engine`` (refer to :ref:`api_starting_envoy` for building an engine instance), and store the stats client to create ``Counter`` or ``Gauge`` instances:\n          \n      \n    \n    \n  \n\nI'd just add an example for gauges since that's what we do everywhere else, and it's nice to be comprehensive.\nAlso, please cap line widths as we do elsewhere in the file (100 characters IIRC)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#discussion_r513032307", "createdAt": "2020-10-27T21:07:00Z", "author": {"login": "rebello95"}, "path": "docs/root/api/stats.rst", "diffHunk": "@@ -7,7 +7,9 @@ Stats\n ``StatsClient``\n ---------------\n \n-To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from ``Engine`` (refer to :ref:`api_starting_envoy` for building an engine instance), and store the stats client to create ``Counter`` instances.\n+Envoy Mobile's stats function currently supports two type of stats: ``Counter`` and ``Gauge``.\n+\n+To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from ``Engine`` (refer to :ref:`api_starting_envoy` for building an engine instance), and store the stats client to create ``Counter`` or ``Gauge`` instances. The following code examples show how to create a ``Counter``, and it's similar in the way a ``Gauge`` is created.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "605bd65fa2ebdb320c70c1182231093259d35679"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAzMjgyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The ``counter`` method from stats client takes a variable number of elements and returns a ``Counter`` instance, the elements are used to form a dot(.) delimited string, this string serves as the identifier of the counter. The string formed from the example code above is ``foo.bar``.\n          \n          \n            \n            The ``counter`` method from the stats client takes a variable number of elements and returns a ``Counter`` instance. The elements provided are used to form a dot(``.``) delimited string that serves as the identifier of the counter. The string formed from the example code above is ``foo.bar``.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#discussion_r513032828", "createdAt": "2020-10-27T21:07:52Z", "author": {"login": "rebello95"}, "path": "docs/root/api/stats.rst", "diffHunk": "@@ -17,9 +19,16 @@ To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from\n \n   statsClient.counter(elements: [\"foo\", \"bar\"])\n \n-The ``counter`` method from stats client takes a variable number of elements and returns a ``Counter`` instance, the elements are used to for a dot(.) delimited string. For the example code above, the formed string is ``foo.bar``, this string serves as the identifier of the counter.\n \n-Store the counter instance, and call the ``increment`` method to increment the counter wherever it applies.\n+The ``counter`` method from stats client takes a variable number of elements and returns a ``Counter`` instance, the elements are used to form a dot(.) delimited string, this string serves as the identifier of the counter. The string formed from the example code above is ``foo.bar``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "605bd65fa2ebdb320c70c1182231093259d35679"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAzMzI4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Store the counter instance, or the gauge instance if you are working with gauge.\n          \n          \n            \n            Store the instance of the counter or gauge, then use it to increment as necessary.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#discussion_r513033287", "createdAt": "2020-10-27T21:08:31Z", "author": {"login": "rebello95"}, "path": "docs/root/api/stats.rst", "diffHunk": "@@ -17,9 +19,16 @@ To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from\n \n   statsClient.counter(elements: [\"foo\", \"bar\"])\n \n-The ``counter`` method from stats client takes a variable number of elements and returns a ``Counter`` instance, the elements are used to for a dot(.) delimited string. For the example code above, the formed string is ``foo.bar``, this string serves as the identifier of the counter.\n \n-Store the counter instance, and call the ``increment`` method to increment the counter wherever it applies.\n+The ``counter`` method from stats client takes a variable number of elements and returns a ``Counter`` instance, the elements are used to form a dot(.) delimited string, this string serves as the identifier of the counter. The string formed from the example code above is ``foo.bar``.\n+\n+Store the counter instance, or the gauge instance if you are working with gauge.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "605bd65fa2ebdb320c70c1182231093259d35679"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAzMzY5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A ``Counter`` can increment, call the ``increment`` method to increment the counter wherever it applies.\n          \n          \n            \n            A ``Counter`` can be incremented by calling the ``increment()`` method when applicable.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#discussion_r513033696", "createdAt": "2020-10-27T21:09:02Z", "author": {"login": "rebello95"}, "path": "docs/root/api/stats.rst", "diffHunk": "@@ -17,9 +19,16 @@ To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from\n \n   statsClient.counter(elements: [\"foo\", \"bar\"])\n \n-The ``counter`` method from stats client takes a variable number of elements and returns a ``Counter`` instance, the elements are used to for a dot(.) delimited string. For the example code above, the formed string is ``foo.bar``, this string serves as the identifier of the counter.\n \n-Store the counter instance, and call the ``increment`` method to increment the counter wherever it applies.\n+The ``counter`` method from stats client takes a variable number of elements and returns a ``Counter`` instance, the elements are used to form a dot(.) delimited string, this string serves as the identifier of the counter. The string formed from the example code above is ``foo.bar``.\n+\n+Store the counter instance, or the gauge instance if you are working with gauge.\n+\n+-----------\n+``Counter``\n+-----------\n+\n+A ``Counter`` can increment, call the ``increment`` method to increment the counter wherever it applies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "605bd65fa2ebdb320c70c1182231093259d35679"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAzNDIxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A ``Gauge`` can be set with a value, added an amount to or subtracted an amount from.\n          \n          \n            \n            \n          \n          \n            \n            The value of a ``Gauge`` can be incremented, decremented, or reassigned.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#discussion_r513034214", "createdAt": "2020-10-27T21:09:50Z", "author": {"login": "rebello95"}, "path": "docs/root/api/stats.rst", "diffHunk": "@@ -36,3 +45,31 @@ The count argument of ``increment`` is defaulted with a value of ``1``.\n   // Increment the counter by 5\n   // Swift\n   counter.increment(count: 5)\n+\n+---------\n+``Gauge``\n+---------\n+A ``Gauge`` can be set with a value, added an amount to or subtracted an amount from.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "605bd65fa2ebdb320c70c1182231093259d35679"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b49bd6ed9b7d3327cf8aa14bbb75a7496b84405", "author": {"user": {"login": "jingwei99", "name": "Jingwei"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/3b49bd6ed9b7d3327cf8aa14bbb75a7496b84405", "committedDate": "2020-10-28T00:20:34Z", "message": "comments\n\nSigned-off-by: Jingwei Hao <jingwei.hao@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODk5OTYy", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#pullrequestreview-518899962", "createdAt": "2020-10-28T17:11:28Z", "commit": {"oid": "3b49bd6ed9b7d3327cf8aa14bbb75a7496b84405"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzoxMToyOVrOHp01qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzoxMTo1N1rOHp029g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYxOTM2OQ==", "bodyText": "\"function\" should probably be \"functionality\"", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#discussion_r513619369", "createdAt": "2020-10-28T17:11:29Z", "author": {"login": "rebello95"}, "path": "docs/root/api/stats.rst", "diffHunk": "@@ -9,7 +9,10 @@ Stats\n \n Envoy Mobile's stats function currently supports two type of stats: ``Counter`` and ``Gauge``.\n \n-To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from ``Engine`` (refer to :ref:`api_starting_envoy` for building an engine instance), and store the stats client to create ``Counter`` or ``Gauge`` instances. The following code examples show how to create a ``Counter``, and it's similar in the way a ``Gauge`` is created.\n+To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from ``Engine``", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b49bd6ed9b7d3327cf8aa14bbb75a7496b84405"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzYxOTcwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            a ``Counter``, and it's similar in the way a ``Gauge`` is created.\n          \n          \n            \n            a ``Counter``, and the same approach is used to create a ``Gauge``.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#discussion_r513619702", "createdAt": "2020-10-28T17:11:57Z", "author": {"login": "rebello95"}, "path": "docs/root/api/stats.rst", "diffHunk": "@@ -9,7 +9,10 @@ Stats\n \n Envoy Mobile's stats function currently supports two type of stats: ``Counter`` and ``Gauge``.\n \n-To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from ``Engine`` (refer to :ref:`api_starting_envoy` for building an engine instance), and store the stats client to create ``Counter`` or ``Gauge`` instances. The following code examples show how to create a ``Counter``, and it's similar in the way a ``Gauge`` is created.\n+To use Envoy Mobile's stats function, obtain an instance of ``StatsClient`` from ``Engine``\n+(refer to :ref:`api_starting_envoy` for building an engine instance), and store the stats client to\n+create ``Counter`` or ``Gauge`` instances. The following code examples show how to create\n+a ``Counter``, and it's similar in the way a ``Gauge`` is created.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b49bd6ed9b7d3327cf8aa14bbb75a7496b84405"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3647b707d94f1ff0db0347f6a482eb16c69aad64", "author": {"user": {"login": "jingwei99", "name": "Jingwei"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/3647b707d94f1ff0db0347f6a482eb16c69aad64", "committedDate": "2020-10-28T17:56:33Z", "message": "comments\n\nSigned-off-by: Jingwei Hao <jingwei.hao@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4OTQyNDIx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1149#pullrequestreview-518942421", "createdAt": "2020-10-28T17:57:57Z", "commit": {"oid": "3647b707d94f1ff0db0347f6a482eb16c69aad64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3879, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}