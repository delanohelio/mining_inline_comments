{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMTU2Njgw", "number": 795, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzowM1rOD7Z5YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowOTowOVrOD7Z76g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE2ODY1OnYy", "diffSide": "RIGHT", "path": "library/swift/src/ResponseFilter.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzowM1rOGTtZ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzowM1rOGTtZ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMDA1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              func onResponseData(body: Data, endStream: Bool) -> FilterDataStatus\n          \n          \n            \n              func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423320059", "createdAt": "2020-05-11T21:07:03Z", "author": {"login": "junr03"}, "path": "library/swift/src/ResponseFilter.swift", "diffHunk": "@@ -0,0 +1,54 @@\n+import Foundation\n+\n+/// Filter executed for inbound responses, providing the ability to observe and mutate streams.\n+public protocol ResponseFilter: Filter {\n+  /// Called by the filter manager once to initialize the filter callbacks that the filter should\n+  /// use.\n+  ///\n+  /// - parameter callbacks: The callbacks for this filter to use to interact with the chain.\n+  func setResponseFilterCallbacks(callbacks: ResponseFilterCallbacks)\n+\n+  /// Called once when the response is initiated.\n+  ///\n+  /// Filters may mutate or delay the response headers.\n+  ///\n+  /// - parameter headers:   The current response headers.\n+  /// - parameter endStream: Whether this is a headers-only response.\n+  ///\n+  /// - returns: The header status containing headers with which to continue or buffer.\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeaderStatus<ResponseHeaders>\n+\n+  /// Called any number of times whenever body data is received.\n+  ///\n+  /// Filters may mutate or buffer (defer and concatenate) the data.\n+  ///\n+  /// - parameter body:      The outbound body data chunk.\n+  /// - parameter endStream: Whether this is the last data frame.\n+  ///\n+  /// - returns: The data status containing body with which to continue or buffer.\n+  func onResponseData(body: Data, endStream: Bool) -> FilterDataStatus", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE2ODk4OnYy", "diffSide": "RIGHT", "path": "library/swift/src/ResponseFilter.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzoxMVrOGTtaPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzoxMVrOGTtaPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMDEyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              func onResponseTrailers(trailers: ResponseTrailers) -> FilterTrailerStatus<ResponseTrailers>\n          \n          \n            \n              func onResponseTrailers(_ trailers: ResponseTrailers) -> FilterTrailerStatus<ResponseTrailers>", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423320125", "createdAt": "2020-05-11T21:07:11Z", "author": {"login": "junr03"}, "path": "library/swift/src/ResponseFilter.swift", "diffHunk": "@@ -0,0 +1,54 @@\n+import Foundation\n+\n+/// Filter executed for inbound responses, providing the ability to observe and mutate streams.\n+public protocol ResponseFilter: Filter {\n+  /// Called by the filter manager once to initialize the filter callbacks that the filter should\n+  /// use.\n+  ///\n+  /// - parameter callbacks: The callbacks for this filter to use to interact with the chain.\n+  func setResponseFilterCallbacks(callbacks: ResponseFilterCallbacks)\n+\n+  /// Called once when the response is initiated.\n+  ///\n+  /// Filters may mutate or delay the response headers.\n+  ///\n+  /// - parameter headers:   The current response headers.\n+  /// - parameter endStream: Whether this is a headers-only response.\n+  ///\n+  /// - returns: The header status containing headers with which to continue or buffer.\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeaderStatus<ResponseHeaders>\n+\n+  /// Called any number of times whenever body data is received.\n+  ///\n+  /// Filters may mutate or buffer (defer and concatenate) the data.\n+  ///\n+  /// - parameter body:      The outbound body data chunk.\n+  /// - parameter endStream: Whether this is the last data frame.\n+  ///\n+  /// - returns: The data status containing body with which to continue or buffer.\n+  func onResponseData(body: Data, endStream: Bool) -> FilterDataStatus\n+\n+  /// Called at most once when the response is closed from the server with trailers.\n+  ///\n+  /// Filters may mutate or delay the trailers.\n+  ///\n+  /// - parameter trailers: The outbound trailers.\n+  ///\n+  /// - returns: The trailer status containing body with which to continue or buffer.\n+  func onResponseTrailers(trailers: ResponseTrailers) -> FilterTrailerStatus<ResponseTrailers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE2OTQ3OnYy", "diffSide": "RIGHT", "path": "library/swift/src/ResponseFilter.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzoyMlrOGTtalg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzoyMlrOGTtalg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMDIxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              func onError(error: EnvoyError)\n          \n          \n            \n              func onError(_ error: EnvoyError)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423320214", "createdAt": "2020-05-11T21:07:22Z", "author": {"login": "junr03"}, "path": "library/swift/src/ResponseFilter.swift", "diffHunk": "@@ -0,0 +1,54 @@\n+import Foundation\n+\n+/// Filter executed for inbound responses, providing the ability to observe and mutate streams.\n+public protocol ResponseFilter: Filter {\n+  /// Called by the filter manager once to initialize the filter callbacks that the filter should\n+  /// use.\n+  ///\n+  /// - parameter callbacks: The callbacks for this filter to use to interact with the chain.\n+  func setResponseFilterCallbacks(callbacks: ResponseFilterCallbacks)\n+\n+  /// Called once when the response is initiated.\n+  ///\n+  /// Filters may mutate or delay the response headers.\n+  ///\n+  /// - parameter headers:   The current response headers.\n+  /// - parameter endStream: Whether this is a headers-only response.\n+  ///\n+  /// - returns: The header status containing headers with which to continue or buffer.\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeaderStatus<ResponseHeaders>\n+\n+  /// Called any number of times whenever body data is received.\n+  ///\n+  /// Filters may mutate or buffer (defer and concatenate) the data.\n+  ///\n+  /// - parameter body:      The outbound body data chunk.\n+  /// - parameter endStream: Whether this is the last data frame.\n+  ///\n+  /// - returns: The data status containing body with which to continue or buffer.\n+  func onResponseData(body: Data, endStream: Bool) -> FilterDataStatus\n+\n+  /// Called at most once when the response is closed from the server with trailers.\n+  ///\n+  /// Filters may mutate or delay the trailers.\n+  ///\n+  /// - parameter trailers: The outbound trailers.\n+  ///\n+  /// - returns: The trailer status containing body with which to continue or buffer.\n+  func onResponseTrailers(trailers: ResponseTrailers) -> FilterTrailerStatus<ResponseTrailers>\n+\n+  /// Called at most once when an error within Envoy occurs.\n+  ///\n+  /// This should be considered a terminal state, and invalidates any previous attempts to\n+  /// `stopIteration{...}`.\n+  ///\n+  /// - error: The error that occurred within Envoy.\n+  func onError(error: EnvoyError)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE3MTA0OnYy", "diffSide": "RIGHT", "path": "library/swift/src/ResponseFilterCallbacks.swift", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzo0OVrOGTtbgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMToxMjo0MVrOGTtk8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMDQ1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              func responseBuffer() -> Data\n          \n          \n            \n              func responseBuffer() -> Data?\n          \n      \n    \n    \n  \n\nBecause it can be nil, right?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423320451", "createdAt": "2020-05-11T21:07:49Z", "author": {"login": "junr03"}, "path": "library/swift/src/ResponseFilterCallbacks.swift", "diffHunk": "@@ -0,0 +1,24 @@\n+import Foundation\n+\n+public protocol ResponseFilterCallbacks {\n+  /// Continue iterating through the filter chain with buffered headers and body data.\n+  ///\n+  /// This can only be called if the filter has previously returned `stopIteration{...}` from\n+  /// `onHeaders()`/`onData()`/`onTrailers()`.\n+  ///\n+  /// Headers and any buffered body data will be passed to the next filter in the chain.\n+  ///\n+  /// If the response is not complete, this filter will still receive `onData()`/`onTrailers()`\n+  /// calls.\n+  func continueResponse()\n+\n+  /// - returns: The currently buffered data as buffered by this filter or previous ones in the\n+  ///            filter chain. Nil if nothing has been buffered yet.\n+  func responseBuffer() -> Data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMjg2Ng==", "bodyText": "Yep", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423322866", "createdAt": "2020-05-11T21:12:41Z", "author": {"login": "rebello95"}, "path": "library/swift/src/ResponseFilterCallbacks.swift", "diffHunk": "@@ -0,0 +1,24 @@\n+import Foundation\n+\n+public protocol ResponseFilterCallbacks {\n+  /// Continue iterating through the filter chain with buffered headers and body data.\n+  ///\n+  /// This can only be called if the filter has previously returned `stopIteration{...}` from\n+  /// `onHeaders()`/`onData()`/`onTrailers()`.\n+  ///\n+  /// Headers and any buffered body data will be passed to the next filter in the chain.\n+  ///\n+  /// If the response is not complete, this filter will still receive `onData()`/`onTrailers()`\n+  /// calls.\n+  func continueResponse()\n+\n+  /// - returns: The currently buffered data as buffered by this filter or previous ones in the\n+  ///            filter chain. Nil if nothing has been buffered yet.\n+  func responseBuffer() -> Data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMDQ1MQ=="}, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE3MTI5OnYy", "diffSide": "RIGHT", "path": "library/swift/src/RequestFilterCallbacks.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzo1NVrOGTtbtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowNzo1NVrOGTtbtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMDUwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /// If the request is not complete, this filter will still receive `onData()`/`onTrailers()`\n          \n          \n            \n              /// If the request is not complete, the filter will still receive `onData()`/`onTrailers()`", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423320500", "createdAt": "2020-05-11T21:07:55Z", "author": {"login": "buildbreaker"}, "path": "library/swift/src/RequestFilterCallbacks.swift", "diffHunk": "@@ -0,0 +1,24 @@\n+import Foundation\n+\n+public protocol RequestFilterCallbacks {\n+  /// Continue iterating through the filter chain with buffered headers and body data.\n+  ///\n+  /// This can only be called if the filter has previously returned `stopIteration{...}` from\n+  /// `onHeaders()`/`onData()`/`onTrailers()`.\n+  ///\n+  /// Headers and any buffered body data will be passed to the next filter in the chain.\n+  ///\n+  /// If the request is not complete, this filter will still receive `onData()`/`onTrailers()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE3MjMzOnYy", "diffSide": "RIGHT", "path": "library/swift/src/RequestFilterCallbacks.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowODoxNFrOGTtcVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowODoxNFrOGTtcVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMDY2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /// - returns: The currently buffered data as buffered by this filter or previous ones in the\n          \n          \n            \n              /// - returns: The currently buffered data as buffered by the filter or previous ones in the", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423320662", "createdAt": "2020-05-11T21:08:14Z", "author": {"login": "buildbreaker"}, "path": "library/swift/src/RequestFilterCallbacks.swift", "diffHunk": "@@ -0,0 +1,24 @@\n+import Foundation\n+\n+public protocol RequestFilterCallbacks {\n+  /// Continue iterating through the filter chain with buffered headers and body data.\n+  ///\n+  /// This can only be called if the filter has previously returned `stopIteration{...}` from\n+  /// `onHeaders()`/`onData()`/`onTrailers()`.\n+  ///\n+  /// Headers and any buffered body data will be passed to the next filter in the chain.\n+  ///\n+  /// If the request is not complete, this filter will still receive `onData()`/`onTrailers()`\n+  /// calls.\n+  func continueRequest()\n+\n+  /// - returns: The currently buffered data as buffered by this filter or previous ones in the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE3NDY0OnYy", "diffSide": "RIGHT", "path": "library/swift/src/ResponseFilterCallbacks.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowODo1OVrOGTtd1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowODo1OVrOGTtd1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMTA0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /// If the response is not complete, this filter will still receive `onData()`/`onTrailers()`\n          \n          \n            \n              /// If the response is not complete, the filter will still receive `onData()`/`onTrailers()`", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423321045", "createdAt": "2020-05-11T21:08:59Z", "author": {"login": "buildbreaker"}, "path": "library/swift/src/ResponseFilterCallbacks.swift", "diffHunk": "@@ -0,0 +1,24 @@\n+import Foundation\n+\n+public protocol ResponseFilterCallbacks {\n+  /// Continue iterating through the filter chain with buffered headers and body data.\n+  ///\n+  /// This can only be called if the filter has previously returned `stopIteration{...}` from\n+  /// `onHeaders()`/`onData()`/`onTrailers()`.\n+  ///\n+  /// Headers and any buffered body data will be passed to the next filter in the chain.\n+  ///\n+  /// If the response is not complete, this filter will still receive `onData()`/`onTrailers()`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjE3NTE0OnYy", "diffSide": "RIGHT", "path": "library/swift/src/ResponseFilterCallbacks.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowOTowOVrOGTteJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTowOTowOVrOGTteJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMTEyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              /// - returns: The currently buffered data as buffered by this filter or previous ones in the\n          \n          \n            \n              /// - returns: The currently buffered data as buffered by the filter or previous ones in the", "url": "https://github.com/envoyproxy/envoy-mobile/pull/795#discussion_r423321127", "createdAt": "2020-05-11T21:09:09Z", "author": {"login": "buildbreaker"}, "path": "library/swift/src/ResponseFilterCallbacks.swift", "diffHunk": "@@ -0,0 +1,24 @@\n+import Foundation\n+\n+public protocol ResponseFilterCallbacks {\n+  /// Continue iterating through the filter chain with buffered headers and body data.\n+  ///\n+  /// This can only be called if the filter has previously returned `stopIteration{...}` from\n+  /// `onHeaders()`/`onData()`/`onTrailers()`.\n+  ///\n+  /// Headers and any buffered body data will be passed to the next filter in the chain.\n+  ///\n+  /// If the response is not complete, this filter will still receive `onData()`/`onTrailers()`\n+  /// calls.\n+  func continueResponse()\n+\n+  /// - returns: The currently buffered data as buffered by this filter or previous ones in the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdf9fffbc76f5fe152b207dbe3a597a1de879a84"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 900, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}