{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjQxMTA5", "number": 871, "title": "observability: add stream stats to the http dispatcher", "bodyText": "Description: stream level stats for the http dispatcher\nRisk Level:  low, new stats\nTesting: added new integration tests\nDocs Changes: I want to have tables similar to envoy's, e.g., https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter.html?highlight=virtual%20cluster#virtual-clusters in an observability landing page #874\nSigned-off-by: Jose Nino jnino@lyft.com", "createdAt": "2020-06-01T22:10:41Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871", "merged": true, "mergeCommit": {"oid": "f1bf1503a5a6d54e7f39ec14a011c7e72ff07c8e"}, "closed": true, "closedAt": "2020-06-02T23:38:44Z", "author": {"login": "junr03"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnHkq1gH2gAyNDI2MjQxMTA5OjdlNzg2MjliMGUzOGMwYWY2ZWNhMDE5NGIwNDI3YWJmODUxOWQ2Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcncmdsgH2gAyNDI2MjQxMTA5OjEyNTAzZDUyYjc5MmYyYmU2NDNmYjk1OGU5ZmRkODk0ZTA4ZDlkMGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7e78629b0e38c0af6eca0194b0427abf8519d627", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/7e78629b0e38c0af6eca0194b0427abf8519d627", "committedDate": "2020-06-01T21:58:31Z", "message": "observability: add stream stats to the http dispatcher\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/bee32cbaa7147d723adc4ccabd810f65192efa65", "committedDate": "2020-06-01T22:09:09Z", "message": "emission\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjM0MDQ4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-422234048", "createdAt": "2020-06-01T22:53:43Z", "commit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo1Mzo0M1rOGdcpJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo1Mzo0M1rOGdcpJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMTE3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // only count the on error if it is dispatchable. Otherwise, the onReset was caused due to a\n          \n          \n            \n                // Only count the on error if it is dispatchable. Otherwise, the onReset was caused due to a", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#discussion_r433531175", "createdAt": "2020-06-01T22:53:43Z", "author": {"login": "buildbreaker"}, "path": "library/common/http/dispatcher.cc", "diffHunk": "@@ -206,6 +219,9 @@ void Dispatcher::DirectStreamCallbacks::onReset() {\n   if (direct_stream_.dispatchable(true)) {\n     ENVOY_LOG(debug, \"[S{}] dispatching to platform remote reset stream\",\n               direct_stream_.stream_handle_);\n+    // only count the on error if it is dispatchable. Otherwise, the onReset was caused due to a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjM0NjE3", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-422234617", "createdAt": "2020-06-01T22:55:02Z", "commit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo1NTowMlrOGdcquA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjo1NTowMlrOGdcquA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMTU3Ng==", "bodyText": "Why not just emit the stat here?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#discussion_r433531576", "createdAt": "2020-06-01T22:55:02Z", "author": {"login": "goaway"}, "path": "library/common/http/dispatcher.cc", "diffHunk": "@@ -33,6 +34,13 @@ void Dispatcher::DirectStreamCallbacks::encodeHeaders(const ResponseHeaderMap& h\n   ENVOY_LOG(debug, \"[S{}] response headers for stream (end_stream={}):\\n{}\",\n             direct_stream_.stream_handle_, end_stream, headers);\n \n+  uint64_t response_status = Utility::getResponseStatus(headers);\n+\n+  // Record received status to report success or failure stat in\n+  // Dispatcher::DirectStreamCallbacks::closeRemote. Not reported here to avoid more complexity with\n+  // checking end stream, and the potential for stream reset, thus resulting in mis-reporting.\n+  observed_success_ = CodeUtility::is2xx(response_status);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjM2NjQ4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-422236648", "createdAt": "2020-06-01T23:00:43Z", "commit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzowMDo0M1rOGdcxjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzowMDo0M1rOGdcxjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMzMyNQ==", "bodyText": "Looks like this is explained via the docs directly above?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#discussion_r433533325", "createdAt": "2020-06-01T23:00:43Z", "author": {"login": "rebello95"}, "path": "library/common/http/dispatcher.cc", "diffHunk": "@@ -33,6 +34,13 @@ void Dispatcher::DirectStreamCallbacks::encodeHeaders(const ResponseHeaderMap& h\n   ENVOY_LOG(debug, \"[S{}] response headers for stream (end_stream={}):\\n{}\",\n             direct_stream_.stream_handle_, end_stream, headers);\n \n+  uint64_t response_status = Utility::getResponseStatus(headers);\n+\n+  // Record received status to report success or failure stat in\n+  // Dispatcher::DirectStreamCallbacks::closeRemote. Not reported here to avoid more complexity with\n+  // checking end stream, and the potential for stream reset, thus resulting in mis-reporting.\n+  observed_success_ = CodeUtility::is2xx(response_status);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMTU3Ng=="}, "originalCommit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjM5OTc2", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-422239976", "createdAt": "2020-06-01T23:09:58Z", "commit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzowOTo1OFrOGdc77A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzowOTo1OFrOGdc77A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzNTk4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // Set response header status to be non-2xx to test correct stats get charged.\n          \n          \n            \n              // Set response header status to be non-2xx to test that correct stats get charged.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#discussion_r433535980", "createdAt": "2020-06-01T23:09:58Z", "author": {"login": "buildbreaker"}, "path": "test/integration/dispatcher_integration_test.cc", "diffHunk": "@@ -177,13 +177,107 @@ TEST_P(DispatcherIntegrationTest, Basic) {\n   ASSERT_EQ(cc.on_headers_calls, 1);\n   ASSERT_EQ(cc.on_data_calls, 2);\n   ASSERT_EQ(cc.on_complete_calls, 1);\n+\n+  test_server_->waitForCounterEq(\"http.dispatcher.stream_success\", 1);\n+}\n+\n+TEST_P(DispatcherIntegrationTest, BasicNon2xx) {\n+  ConditionalInitializer ready_ran;\n+  test_server_->server().dispatcher().post([this, &ready_ran]() -> void {\n+    http_dispatcher_.ready(\n+        test_server_->server().dispatcher(), test_server_->statStore(),\n+        test_server_->server().listenerManager().apiListener()->get().http()->get());\n+    ready_ran.setReady();\n+  });\n+  ready_ran.waitReady();\n+\n+  // Set response header status to be non-2xx to test correct stats get charged.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjQwMjcx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-422240271", "createdAt": "2020-06-01T23:10:46Z", "commit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoxMDo0NlrOGdc82g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoxMDo0NlrOGdc82g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzNjIxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    test_server_->server().dispatcher(), test_server_->statStore(),\n          \n          \n            \n                    test_server_->server().dispatcher(), \n          \n          \n            \n                    test_server_->statStore(),", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#discussion_r433536218", "createdAt": "2020-06-01T23:10:46Z", "author": {"login": "buildbreaker"}, "path": "test/integration/dispatcher_integration_test.cc", "diffHunk": "@@ -114,7 +114,7 @@ TEST_P(DispatcherIntegrationTest, Basic) {\n   ConditionalInitializer ready_ran;\n   test_server_->server().dispatcher().post([this, &ready_ran]() -> void {\n     http_dispatcher_.ready(\n-        test_server_->server().dispatcher(),\n+        test_server_->server().dispatcher(), test_server_->statStore(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjQwNzk3", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-422240797", "createdAt": "2020-06-01T23:12:15Z", "commit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoxMjoxNVrOGdc-iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoxMjoxNVrOGdc-iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzNjY1MQ==", "bodyText": "Maybe we should have a positive case also: Basic2xx?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#discussion_r433536651", "createdAt": "2020-06-01T23:12:15Z", "author": {"login": "buildbreaker"}, "path": "test/integration/dispatcher_integration_test.cc", "diffHunk": "@@ -177,13 +177,107 @@ TEST_P(DispatcherIntegrationTest, Basic) {\n   ASSERT_EQ(cc.on_headers_calls, 1);\n   ASSERT_EQ(cc.on_data_calls, 2);\n   ASSERT_EQ(cc.on_complete_calls, 1);\n+\n+  test_server_->waitForCounterEq(\"http.dispatcher.stream_success\", 1);\n+}\n+\n+TEST_P(DispatcherIntegrationTest, BasicNon2xx) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMjQxNzA2", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-422241706", "createdAt": "2020-06-01T23:14:47Z", "commit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoxNDo0OFrOGddBTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzoxNDo0OFrOGddBTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzNzM1OQ==", "bodyText": "What do you think about the naming BasicResetsIncrementFailures to help describe what behavior we are trying to exercise here?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#discussion_r433537359", "createdAt": "2020-06-01T23:14:48Z", "author": {"login": "buildbreaker"}, "path": "test/integration/dispatcher_integration_test.cc", "diffHunk": "@@ -177,13 +177,107 @@ TEST_P(DispatcherIntegrationTest, Basic) {\n   ASSERT_EQ(cc.on_headers_calls, 1);\n   ASSERT_EQ(cc.on_data_calls, 2);\n   ASSERT_EQ(cc.on_complete_calls, 1);\n+\n+  test_server_->waitForCounterEq(\"http.dispatcher.stream_success\", 1);\n+}\n+\n+TEST_P(DispatcherIntegrationTest, BasicNon2xx) {\n+  ConditionalInitializer ready_ran;\n+  test_server_->server().dispatcher().post([this, &ready_ran]() -> void {\n+    http_dispatcher_.ready(\n+        test_server_->server().dispatcher(), test_server_->statStore(),\n+        test_server_->server().listenerManager().apiListener()->get().http()->get());\n+    ready_ran.setReady();\n+  });\n+  ready_ran.waitReady();\n+\n+  // Set response header status to be non-2xx to test correct stats get charged.\n+  reinterpret_cast<AutonomousUpstream*>(fake_upstreams_.front().get())\n+      ->setResponseHeaders(std::make_unique<Http::TestResponseHeaderMapImpl>(\n+          Http::TestHeaderMapImpl({{\":status\", \"503\"}, {\"content-length\", \"0\"}})));\n+\n+  envoy_stream_t stream = 1;\n+  // Setup bridge_callbacks to handle the response.\n+  envoy_http_callbacks bridge_callbacks;\n+  ConditionalInitializer terminal_callback;\n+  callbacks_called cc = {0, 0, 0, 0, 0, &terminal_callback};\n+  bridge_callbacks.context = &cc;\n+  bridge_callbacks.on_headers = [](envoy_headers, bool, void* context) -> void {\n+    callbacks_called* cc = static_cast<callbacks_called*>(context);\n+    cc->on_headers_calls++;\n+  };\n+  bridge_callbacks.on_complete = [](void* context) -> void {\n+    callbacks_called* cc = static_cast<callbacks_called*>(context);\n+    cc->on_complete_calls++;\n+    cc->terminal_callback->setReady();\n+  };\n+  bridge_callbacks.on_error = [](envoy_error, void* context) -> void {\n+    callbacks_called* cc = static_cast<callbacks_called*>(context);\n+    cc->on_error_calls++;\n+  };\n+\n+  // Build a set of request headers.\n+  Http::TestRequestHeaderMapImpl headers;\n+  HttpTestUtility::addDefaultHeaders(headers);\n+  envoy_headers c_headers = Http::Utility::toBridgeHeaders(headers);\n+\n+  // Create a stream.\n+  EXPECT_EQ(http_dispatcher_.startStream(stream, bridge_callbacks), ENVOY_SUCCESS);\n+  http_dispatcher_.sendHeaders(stream, c_headers, true);\n+\n+  terminal_callback.waitReady();\n+\n+  ASSERT_EQ(cc.on_error_calls, 0);\n+  ASSERT_EQ(cc.on_headers_calls, 1);\n+  ASSERT_EQ(cc.on_complete_calls, 1);\n+\n+  test_server_->waitForCounterEq(\"http.dispatcher.stream_failure\", 1);\n+}\n+\n+TEST_P(DispatcherIntegrationTest, BasicReset) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bee32cbaa7147d723adc4ccabd810f65192efa65"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8defca58dd938eea4c3af885fd861d13631e0d18", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/8defca58dd938eea4c3af885fd861d13631e0d18", "committedDate": "2020-06-02T17:10:32Z", "message": "comments\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25f9e6a7864478ce2e8a1bd2aa927980f9b546ea", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/25f9e6a7864478ce2e8a1bd2aa927980f9b546ea", "committedDate": "2020-06-02T21:05:37Z", "message": "asan\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a9257bb4cdfafc3885d8f27608233a1a97b7c68", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/9a9257bb4cdfafc3885d8f27608233a1a97b7c68", "committedDate": "2020-06-02T21:05:59Z", "message": "fmt\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDY4MDk4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-423068098", "createdAt": "2020-06-02T21:23:51Z", "commit": {"oid": "9a9257bb4cdfafc3885d8f27608233a1a97b7c68"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDY5MzEx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-423069311", "createdAt": "2020-06-02T21:25:56Z", "commit": {"oid": "9a9257bb4cdfafc3885d8f27608233a1a97b7c68"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDcyMjY5", "url": "https://github.com/envoyproxy/envoy-mobile/pull/871#pullrequestreview-423072269", "createdAt": "2020-06-02T21:31:04Z", "commit": {"oid": "9a9257bb4cdfafc3885d8f27608233a1a97b7c68"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12503d52b792f2be643fb958e9fdd894e08d9d0f", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/12503d52b792f2be643fb958e9fdd894e08d9d0f", "committedDate": "2020-06-02T22:28:29Z", "message": "asan\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4237, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}