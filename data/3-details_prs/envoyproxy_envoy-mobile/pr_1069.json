{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4ODA1NjE1", "number": 1069, "title": "swift: http acceptance tests with assertion filter", "bodyText": "Description: this PR add end-to-end tests for (almost) all http streaming functionality in the library from the swift platform layer to the core layer.\nRisk Level: low\nTesting: adds new testing strategy.\nSigned-off-by: Jose Nino jnino@lyft.com", "createdAt": "2020-09-03T18:19:42Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069", "merged": true, "mergeCommit": {"oid": "c460e83646f7de6897ca5f379348c545ba5930b4"}, "closed": true, "closedAt": "2020-09-30T20:15:22Z", "author": {"login": "junr03"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAOQhQgH2gAyNDc4ODA1NjE1OjlkZTRjYmI2NzIyNzM5OThjZWNkZWFjMzU3N2ZlOWNjNDg2ODRlZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOBfc5AFqTQ5OTcyMzA5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9de4cbb672273998cecdeac3577fe9cc48684ed4", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/9de4cbb672273998cecdeac3577fe9cc48684ed4", "committedDate": "2020-08-18T21:53:57Z", "message": "wip, segfault\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "907758cd5a5d09bd628decc571acdf5dd49fddb2", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/907758cd5a5d09bd628decc571acdf5dd49fddb2", "committedDate": "2020-09-03T18:18:26Z", "message": "wip\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e53bdf57d434a79f648701387dc48b944949f311", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/e53bdf57d434a79f648701387dc48b944949f311", "committedDate": "2020-09-04T20:48:34Z", "message": "Merge branch 'main' into swift-tests\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaa3e7d65b94486a6002ba10e06bb854163f9d96", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/eaa3e7d65b94486a6002ba10e06bb854163f9d96", "committedDate": "2020-09-04T23:08:47Z", "message": "green test\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "237d39f9523d9bd4100c466ac01dfa1bbd08f77f", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/237d39f9523d9bd4100c466ac01dfa1bbd08f77f", "committedDate": "2020-09-04T23:12:03Z", "message": "lint\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6417305edae972382fe3c69a578edac8286152a7", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/6417305edae972382fe3c69a578edac8286152a7", "committedDate": "2020-09-04T23:27:01Z", "message": "actual lint clean\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTEzNTUw", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#pullrequestreview-484513550", "createdAt": "2020-09-08T21:44:29Z", "commit": {"oid": "6417305edae972382fe3c69a578edac8286152a7"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMTo0NDoyOVrOHOvEbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMTo0Nzo1MFrOHOvKDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxMzI5NQ==", "bodyText": "This shouldn't be required for ResponseFilter implementations", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r485213295", "createdAt": "2020-09-08T21:44:29Z", "author": {"login": "rebello95"}, "path": "library/swift/test/DemoFilter.swift", "diffHunk": "@@ -0,0 +1,30 @@\n+import Envoy\n+import Foundation\n+\n+struct DemoFilter: ResponseFilter {\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    NSLog(\"Adding new header!\")\n+    let builder = headers.toResponseHeadersBuilder()\n+    builder.add(name: \"filter-demo\", value: \"1\")\n+    return .continue(headers: builder.build())\n+  }\n+\n+  func setResponseFilterCallbacks(_ callbacks: ResponseFilterCallbacks) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6417305edae972382fe3c69a578edac8286152a7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxMzQ0MQ==", "bodyText": "Can remove this", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r485213441", "createdAt": "2020-09-08T21:44:48Z", "author": {"login": "rebello95"}, "path": "library/swift/test/BridgeTests.swift", "diffHunk": "@@ -0,0 +1,100 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+private let kMockTemplate = \"\"\"\n+mock_template:\n+- name: mock\n+  stats_domain: {{ stats_domain }}\n+  device_os: {{ device_os }}\n+  connect_timeout: {{ connect_timeout_seconds }}s\n+  dns_refresh_rate: {{ dns_refresh_rate_seconds }}s\n+  dns_failure_refresh_rate:\n+    base_interval: {{ dns_failure_refresh_rate_seconds_base }}s\n+    max_interval: {{ dns_failure_refresh_rate_seconds_max }}s\n+  platform_filter_chain: {{ platform_filter_chain }}\n+  stats_flush_interval: {{ stats_flush_interval_seconds }}s\n+  app_version: {{ app_version }}\n+  app_id: {{ app_id }}\n+  virtual_clusters: {{ virtual_clusters }}\n+\"\"\"\n+\n+private struct TestFilter: Filter {}\n+\n+final class BridgeTests: XCTestCase {\n+  override func tearDown() {\n+    super.tearDown()\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6417305edae972382fe3c69a578edac8286152a7"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxNDEwMw==", "bodyText": "We should be using XCTestExpectation rather than NSCondition: https://github.com/lyft/envoy-mobile/blob/06fc24a895cb640408450bc220190c01c3f2f2c0/library/swift/test/EngineBuilderTests.swift#L131", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r485214103", "createdAt": "2020-09-08T21:46:23Z", "author": {"login": "rebello95"}, "path": "library/swift/test/BridgeTests.swift", "diffHunk": "@@ -0,0 +1,100 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+private let kMockTemplate = \"\"\"\n+mock_template:\n+- name: mock\n+  stats_domain: {{ stats_domain }}\n+  device_os: {{ device_os }}\n+  connect_timeout: {{ connect_timeout_seconds }}s\n+  dns_refresh_rate: {{ dns_refresh_rate_seconds }}s\n+  dns_failure_refresh_rate:\n+    base_interval: {{ dns_failure_refresh_rate_seconds_base }}s\n+    max_interval: {{ dns_failure_refresh_rate_seconds_max }}s\n+  platform_filter_chain: {{ platform_filter_chain }}\n+  stats_flush_interval: {{ stats_flush_interval_seconds }}s\n+  app_version: {{ app_version }}\n+  app_id: {{ app_id }}\n+  virtual_clusters: {{ virtual_clusters }}\n+\"\"\"\n+\n+private struct TestFilter: Filter {}\n+\n+final class BridgeTests: XCTestCase {\n+  override func tearDown() {\n+    super.tearDown()\n+  }\n+\n+  func testInitial() throws {\n+    // swiftlint:disable:next line_length\n+    let apiListenerType = \"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\"\n+    // swiftlint:disable:next line_length\n+    let assertionFilterType = \"type.googleapis.com/envoymobile.extensions.filters.http.assertion.Assertion\"\n+    let config =\n+    \"\"\"\n+    static_resources:\n+      listeners:\n+      - name: base_api_listener\n+        address:\n+          socket_address:\n+            protocol: TCP\n+            address: 0.0.0.0\n+            port_value: 10000\n+        api_listener:\n+          api_listener:\n+            \"@type\": \\(apiListenerType)\n+            stat_prefix: hcm\n+            route_config:\n+              name: api_router\n+              virtual_hosts:\n+                - name: api\n+                  domains:\n+                    - \"*\"\n+                  routes:\n+                    - match:\n+                        prefix: \"/\"\n+                      direct_response:\n+                        status: 418\n+            http_filters:\n+              - name: envoy.filters.http.assertion\n+                typed_config:\n+                  \"@type\": \\(assertionFilterType)\n+                  match_config:\n+                    http_request_headers_match:\n+                      headers:\n+                        - name: \":authority\"\n+                          exact_match: example.com\n+              - name: envoy.router\n+                typed_config:\n+                  \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n+    \"\"\"\n+    let cond = NSCondition()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6417305edae972382fe3c69a578edac8286152a7"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxNDQ0Ng==", "bodyText": "We should add some more color to what this is actually testing (test names can be quite verbose which is fine)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r485214446", "createdAt": "2020-09-08T21:47:15Z", "author": {"login": "rebello95"}, "path": "library/swift/test/BridgeTests.swift", "diffHunk": "@@ -0,0 +1,100 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+private let kMockTemplate = \"\"\"\n+mock_template:\n+- name: mock\n+  stats_domain: {{ stats_domain }}\n+  device_os: {{ device_os }}\n+  connect_timeout: {{ connect_timeout_seconds }}s\n+  dns_refresh_rate: {{ dns_refresh_rate_seconds }}s\n+  dns_failure_refresh_rate:\n+    base_interval: {{ dns_failure_refresh_rate_seconds_base }}s\n+    max_interval: {{ dns_failure_refresh_rate_seconds_max }}s\n+  platform_filter_chain: {{ platform_filter_chain }}\n+  stats_flush_interval: {{ stats_flush_interval_seconds }}s\n+  app_version: {{ app_version }}\n+  app_id: {{ app_id }}\n+  virtual_clusters: {{ virtual_clusters }}\n+\"\"\"\n+\n+private struct TestFilter: Filter {}\n+\n+final class BridgeTests: XCTestCase {\n+  override func tearDown() {\n+    super.tearDown()\n+  }\n+\n+  func testInitial() throws {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6417305edae972382fe3c69a578edac8286152a7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxNDU4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    let status = responseHeaders.httpStatus ?? -1\n          \n          \n            \n                     XCTAssertEqual(200, status)\n          \n          \n            \n                     XCTAssertEqual(200, responseHeaders.httpStatus)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r485214589", "createdAt": "2020-09-08T21:47:32Z", "author": {"login": "rebello95"}, "path": "library/swift/test/BridgeTests.swift", "diffHunk": "@@ -0,0 +1,100 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+private let kMockTemplate = \"\"\"\n+mock_template:\n+- name: mock\n+  stats_domain: {{ stats_domain }}\n+  device_os: {{ device_os }}\n+  connect_timeout: {{ connect_timeout_seconds }}s\n+  dns_refresh_rate: {{ dns_refresh_rate_seconds }}s\n+  dns_failure_refresh_rate:\n+    base_interval: {{ dns_failure_refresh_rate_seconds_base }}s\n+    max_interval: {{ dns_failure_refresh_rate_seconds_max }}s\n+  platform_filter_chain: {{ platform_filter_chain }}\n+  stats_flush_interval: {{ stats_flush_interval_seconds }}s\n+  app_version: {{ app_version }}\n+  app_id: {{ app_id }}\n+  virtual_clusters: {{ virtual_clusters }}\n+\"\"\"\n+\n+private struct TestFilter: Filter {}\n+\n+final class BridgeTests: XCTestCase {\n+  override func tearDown() {\n+    super.tearDown()\n+  }\n+\n+  func testInitial() throws {\n+    // swiftlint:disable:next line_length\n+    let apiListenerType = \"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\"\n+    // swiftlint:disable:next line_length\n+    let assertionFilterType = \"type.googleapis.com/envoymobile.extensions.filters.http.assertion.Assertion\"\n+    let config =\n+    \"\"\"\n+    static_resources:\n+      listeners:\n+      - name: base_api_listener\n+        address:\n+          socket_address:\n+            protocol: TCP\n+            address: 0.0.0.0\n+            port_value: 10000\n+        api_listener:\n+          api_listener:\n+            \"@type\": \\(apiListenerType)\n+            stat_prefix: hcm\n+            route_config:\n+              name: api_router\n+              virtual_hosts:\n+                - name: api\n+                  domains:\n+                    - \"*\"\n+                  routes:\n+                    - match:\n+                        prefix: \"/\"\n+                      direct_response:\n+                        status: 418\n+            http_filters:\n+              - name: envoy.filters.http.assertion\n+                typed_config:\n+                  \"@type\": \\(assertionFilterType)\n+                  match_config:\n+                    http_request_headers_match:\n+                      headers:\n+                        - name: \":authority\"\n+                          exact_match: example.com\n+              - name: envoy.router\n+                typed_config:\n+                  \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n+    \"\"\"\n+    let cond = NSCondition()\n+    let q = DispatchQueue(label: \"test.envoymobile\")\n+    let client = try EngineBuilder(yaml: config)\n+      .addLogLevel(.debug)\n+      .addFilter(factory: DemoFilter.init)\n+      .build()\n+      .streamClient\n+\n+    let requestHeaders = RequestHeadersBuilder(method: .get, scheme: \"https\",\n+                                               authority: \"example.com\", path: \"/test\")\n+      .addUpstreamHttpProtocol(.http2)\n+      .build()\n+    client\n+      .newStreamPrototype()\n+      .setOnResponseHeaders { responseHeaders, _ in\n+        let status = responseHeaders.httpStatus ?? -1\n+         XCTAssertEqual(200, status)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6417305edae972382fe3c69a578edac8286152a7"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxNDczMg==", "bodyText": "Could probably just use .main", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r485214732", "createdAt": "2020-09-08T21:47:50Z", "author": {"login": "rebello95"}, "path": "library/swift/test/BridgeTests.swift", "diffHunk": "@@ -0,0 +1,100 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+private let kMockTemplate = \"\"\"\n+mock_template:\n+- name: mock\n+  stats_domain: {{ stats_domain }}\n+  device_os: {{ device_os }}\n+  connect_timeout: {{ connect_timeout_seconds }}s\n+  dns_refresh_rate: {{ dns_refresh_rate_seconds }}s\n+  dns_failure_refresh_rate:\n+    base_interval: {{ dns_failure_refresh_rate_seconds_base }}s\n+    max_interval: {{ dns_failure_refresh_rate_seconds_max }}s\n+  platform_filter_chain: {{ platform_filter_chain }}\n+  stats_flush_interval: {{ stats_flush_interval_seconds }}s\n+  app_version: {{ app_version }}\n+  app_id: {{ app_id }}\n+  virtual_clusters: {{ virtual_clusters }}\n+\"\"\"\n+\n+private struct TestFilter: Filter {}\n+\n+final class BridgeTests: XCTestCase {\n+  override func tearDown() {\n+    super.tearDown()\n+  }\n+\n+  func testInitial() throws {\n+    // swiftlint:disable:next line_length\n+    let apiListenerType = \"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\"\n+    // swiftlint:disable:next line_length\n+    let assertionFilterType = \"type.googleapis.com/envoymobile.extensions.filters.http.assertion.Assertion\"\n+    let config =\n+    \"\"\"\n+    static_resources:\n+      listeners:\n+      - name: base_api_listener\n+        address:\n+          socket_address:\n+            protocol: TCP\n+            address: 0.0.0.0\n+            port_value: 10000\n+        api_listener:\n+          api_listener:\n+            \"@type\": \\(apiListenerType)\n+            stat_prefix: hcm\n+            route_config:\n+              name: api_router\n+              virtual_hosts:\n+                - name: api\n+                  domains:\n+                    - \"*\"\n+                  routes:\n+                    - match:\n+                        prefix: \"/\"\n+                      direct_response:\n+                        status: 418\n+            http_filters:\n+              - name: envoy.filters.http.assertion\n+                typed_config:\n+                  \"@type\": \\(assertionFilterType)\n+                  match_config:\n+                    http_request_headers_match:\n+                      headers:\n+                        - name: \":authority\"\n+                          exact_match: example.com\n+              - name: envoy.router\n+                typed_config:\n+                  \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n+    \"\"\"\n+    let cond = NSCondition()\n+    let q = DispatchQueue(label: \"test.envoymobile\")\n+    let client = try EngineBuilder(yaml: config)\n+      .addLogLevel(.debug)\n+      .addFilter(factory: DemoFilter.init)\n+      .build()\n+      .streamClient\n+\n+    let requestHeaders = RequestHeadersBuilder(method: .get, scheme: \"https\",\n+                                               authority: \"example.com\", path: \"/test\")\n+      .addUpstreamHttpProtocol(.http2)\n+      .build()\n+    client\n+      .newStreamPrototype()\n+      .setOnResponseHeaders { responseHeaders, _ in\n+        let status = responseHeaders.httpStatus ?? -1\n+         XCTAssertEqual(200, status)\n+      }\n+      .setOnResponseData { _, endStream in\n+        XCTAssertTrue(endStream)\n+        cond.signal()\n+      }\n+      .start(queue: q)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6417305edae972382fe3c69a578edac8286152a7"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "021dcea578e7d9bbeaef24b929bbd5371ccc19aa", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/021dcea578e7d9bbeaef24b929bbd5371ccc19aa", "committedDate": "2020-09-28T21:37:34Z", "message": "Merge branch 'main' into swift-tests\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed9d0d8a24466628e6539c5f32b72e8fd87a3207", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/ed9d0d8a24466628e6539c5f32b72e8fd87a3207", "committedDate": "2020-09-28T23:50:12Z", "message": "full test suite\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dabe39ceda24354b560dfb4d775ab1bb18e38df1", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/dabe39ceda24354b560dfb4d775ab1bb18e38df1", "committedDate": "2020-09-29T16:22:30Z", "message": "done\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0f2e50714a0b8a07b6d553379046ac971aa032", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/bb0f2e50714a0b8a07b6d553379046ac971aa032", "committedDate": "2020-09-29T16:24:07Z", "message": "fmt\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c64ae723260ee3c76d8c8a191c3c0e95d2e3c8e", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/2c64ae723260ee3c76d8c8a191c3c0e95d2e3c8e", "committedDate": "2020-09-29T16:28:28Z", "message": "pre-commit\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6308d2ff5a0df953de2c09987f26e03f04ea87e9", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/6308d2ff5a0df953de2c09987f26e03f04ea87e9", "committedDate": "2020-09-29T16:38:33Z", "message": "change queue\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86467c06c1746475d85104abe03bad3acfb48109", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/86467c06c1746475d85104abe03bad3acfb48109", "committedDate": "2020-09-29T16:38:56Z", "message": "Merge branch 'main' into swift-tests\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/326f349c71c90f31f64f89fcaf9aa7748545693b", "committedDate": "2020-09-29T18:34:06Z", "message": "update\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NzcxNDM0", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#pullrequestreview-498771434", "createdAt": "2020-09-29T18:36:23Z", "commit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "state": "DISMISSED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODozNjoyM1rOHZ7wAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODo0ODoyOFrOHZ8K2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1NTM5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                self.waitForExpectations(timeout: 1)\n          \n          \n            \n                XCTAssertEqual(XCTWaiter.wait(for: [expectation], timeout: 1), .completed)\n          \n      \n    \n    \n  \n\nI'd replace these with assertions that the result of the wait is actually completed (throughout this PR)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r496955393", "createdAt": "2020-09-29T18:36:23Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/CancelStreamTest.swift", "diffHunk": "@@ -0,0 +1,57 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+final class CancelStreamTests: XCTestCase {\n+  func testCancelStream() throws {\n+    // swiftlint:disable:next line_length\n+    let apiListenerType = \"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\"\n+    let config =\n+    \"\"\"\n+    static_resources:\n+      listeners:\n+      - name: base_api_listener\n+        address:\n+          socket_address:\n+            protocol: TCP\n+            address: 0.0.0.0\n+            port_value: 10000\n+        api_listener:\n+          api_listener:\n+            \"@type\": \\(apiListenerType)\n+            stat_prefix: hcm\n+            route_config:\n+              name: api_router\n+              virtual_hosts:\n+                - name: api\n+                  domains:\n+                    - \"*\"\n+                  routes:\n+                    - match:\n+                        prefix: \"/\"\n+                      direct_response:\n+                        status: 200\n+            http_filters:\n+              - name: envoy.router\n+                typed_config:\n+                  \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n+    \"\"\"\n+    let expectation = self.expectation(description: \"Run called with expected cancellation\")\n+    let client = try EngineBuilder(yaml: config)\n+      .addLogLevel(.debug)\n+      .addFilter(factory: DemoFilter.init)\n+      .build()\n+      .streamClient()\n+\n+    client\n+      .newStreamPrototype()\n+      .setOnCancel {\n+         expectation.fulfill()\n+      }\n+      .start()\n+      .cancel()\n+\n+    self.waitForExpectations(timeout: 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1NTY2Ng==", "bodyText": "Should we remove these logs?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r496955666", "createdAt": "2020-09-29T18:36:52Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/DemoFilter.swift", "diffHunk": "@@ -0,0 +1,28 @@\n+import Envoy\n+import Foundation\n+\n+struct DemoFilter: ResponseFilter {\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    NSLog(\"Adding new header!\")\n+    let builder = headers.toResponseHeadersBuilder()\n+    builder.add(name: \"filter-demo\", value: \"1\")\n+    return .continue(headers: builder.build())\n+  }\n+\n+  func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+    // TODO(goaway): Can remove this when we have better integration coverage in place.\n+    NSLog(\"Saw data chunk of length \\(body.count)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1NTY5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                NSLog(\"Adding new header!\")", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r496955698", "createdAt": "2020-09-29T18:36:56Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/DemoFilter.swift", "diffHunk": "@@ -0,0 +1,28 @@\n+import Envoy\n+import Foundation\n+\n+struct DemoFilter: ResponseFilter {\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    NSLog(\"Adding new header!\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1NzczOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This test suite tests end-to-end integration of the platform layer to the core layer's HTTP\n          \n          \n            \n            functionality. It tests both the request side sendHeaders/Data,Close,Cancel; and the response\n          \n          \n            \n            side via all the setOnResponseHeaders/Data,setOnError,setOnCancel.\n          \n          \n            \n            \n          \n          \n            \n            Note: These tests are broke apart into different suites and bazel targets in order to tear down\n          \n          \n            \n            app state --and thus static lifetime objects like the Envoy engine -- between tests. When\n          \n          \n            \n            multiple engine support (https://github.com/lyft/envoy-mobile/issues/332) lands, all of these\n          \n          \n            \n            tests can be collapsed to the same suite/target.\n          \n          \n            \n            \n          \n          \n            \n            TODO: setOnTrailers is not tested as the neither the direct_response pathway, nor the router\n          \n          \n            \n            allow sending trailers programmatically. Add tests once possible.\n          \n          \n            \n            This test suite tests end-to-end integration of the platform layer and the core layer's HTTP\n          \n          \n            \n            functionality. It tests both the request side `send{Headers|Data}`, `close`, `cancel`,\n          \n          \n            \n            as well as the response side via all the` setOnResponse{...}` functions.\n          \n          \n            \n            \n          \n          \n            \n            TODO: These tests are broken apart into different suites and bazel targets in order to tear down\n          \n          \n            \n            app state - and thus static lifetime objects like the Envoy engine - between tests. When\n          \n          \n            \n            multiple engine support (https://github.com/lyft/envoy-mobile/issues/332) lands, all of these\n          \n          \n            \n            tests can be collapsed to the same suite/target.\n          \n          \n            \n            \n          \n          \n            \n            TODO: setOnTrailers is not tested as neither the `direct_response` pathway, nor the router\n          \n          \n            \n            allow sending trailers programmatically. Add tests once possible.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r496957738", "createdAt": "2020-09-29T18:40:40Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/README.md", "diffHunk": "@@ -0,0 +1,11 @@\n+This test suite tests end-to-end integration of the platform layer to the core layer's HTTP\n+functionality. It tests both the request side sendHeaders/Data,Close,Cancel; and the response\n+side via all the setOnResponseHeaders/Data,setOnError,setOnCancel.\n+\n+Note: These tests are broke apart into different suites and bazel targets in order to tear down\n+app state --and thus static lifetime objects like the Envoy engine -- between tests. When\n+multiple engine support (https://github.com/lyft/envoy-mobile/issues/332) lands, all of these\n+tests can be collapsed to the same suite/target.\n+\n+TODO: setOnTrailers is not tested as the neither the direct_response pathway, nor the router\n+allow sending trailers programmatically. Add tests once possible.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1ODA5Ng==", "bodyText": "If you want you could put one of these at the top of the individual file and do // swiftlint:disable line_length", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r496958096", "createdAt": "2020-09-29T18:41:11Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/ReceiveDataTest.swift", "diffHunk": "@@ -0,0 +1,78 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+final class ReceiveDataTests: XCTestCase {\n+  func testReceiveData() throws {\n+    // swiftlint:disable:next line_length\n+    let apiListenerType = \"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\"\n+    // swiftlint:disable:next line_length", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1OTQyMw==", "bodyText": "We should add a second expectation here and wait for it below as well - there's no validation as-is that this assert is actually called", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r496959423", "createdAt": "2020-09-29T18:43:27Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/ReceiveDataTest.swift", "diffHunk": "@@ -0,0 +1,78 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+final class ReceiveDataTests: XCTestCase {\n+  func testReceiveData() throws {\n+    // swiftlint:disable:next line_length\n+    let apiListenerType = \"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\"\n+    // swiftlint:disable:next line_length\n+    let assertionFilterType = \"type.googleapis.com/envoymobile.extensions.filters.http.assertion.Assertion\"\n+    let config =\n+    \"\"\"\n+    static_resources:\n+      listeners:\n+      - name: base_api_listener\n+        address:\n+          socket_address:\n+            protocol: TCP\n+            address: 0.0.0.0\n+            port_value: 10000\n+        api_listener:\n+          api_listener:\n+            \"@type\": \\(apiListenerType)\n+            stat_prefix: hcm\n+            route_config:\n+              name: api_router\n+              virtual_hosts:\n+                - name: api\n+                  domains:\n+                    - \"*\"\n+                  routes:\n+                    - match:\n+                        prefix: \"/\"\n+                      direct_response:\n+                        status: 200\n+                        body:\n+                          inline_string: response_body\n+            http_filters:\n+              - name: envoy.filters.http.assertion\n+                typed_config:\n+                  \"@type\": \\(assertionFilterType)\n+                  match_config:\n+                    http_request_headers_match:\n+                      headers:\n+                        - name: \":authority\"\n+                          exact_match: example.com\n+              - name: envoy.router\n+                typed_config:\n+                  \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n+    \"\"\"\n+    let expectation = self.expectation(description: \"Run called with expected data\")\n+    let client = try EngineBuilder(yaml: config)\n+      .addLogLevel(.debug)\n+      .addFilter(factory: DemoFilter.init)\n+      .build()\n+      .streamClient()\n+\n+    let requestHeaders = RequestHeadersBuilder(method: .get, scheme: \"https\",\n+                                               authority: \"example.com\", path: \"/test\")\n+      .addUpstreamHttpProtocol(.http2)\n+      .build()\n+    client\n+      .newStreamPrototype()\n+      .setOnResponseHeaders { responseHeaders, _ in\n+         XCTAssertEqual(200, responseHeaders.httpStatus)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk1OTY4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    let responseBody = String(decoding: data, as: UTF8.self)\n          \n          \n            \n                    let responseBody = String(data: data, encoding: .utf8)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r496959681", "createdAt": "2020-09-29T18:43:55Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/ReceiveDataTest.swift", "diffHunk": "@@ -0,0 +1,78 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+final class ReceiveDataTests: XCTestCase {\n+  func testReceiveData() throws {\n+    // swiftlint:disable:next line_length\n+    let apiListenerType = \"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\"\n+    // swiftlint:disable:next line_length\n+    let assertionFilterType = \"type.googleapis.com/envoymobile.extensions.filters.http.assertion.Assertion\"\n+    let config =\n+    \"\"\"\n+    static_resources:\n+      listeners:\n+      - name: base_api_listener\n+        address:\n+          socket_address:\n+            protocol: TCP\n+            address: 0.0.0.0\n+            port_value: 10000\n+        api_listener:\n+          api_listener:\n+            \"@type\": \\(apiListenerType)\n+            stat_prefix: hcm\n+            route_config:\n+              name: api_router\n+              virtual_hosts:\n+                - name: api\n+                  domains:\n+                    - \"*\"\n+                  routes:\n+                    - match:\n+                        prefix: \"/\"\n+                      direct_response:\n+                        status: 200\n+                        body:\n+                          inline_string: response_body\n+            http_filters:\n+              - name: envoy.filters.http.assertion\n+                typed_config:\n+                  \"@type\": \\(assertionFilterType)\n+                  match_config:\n+                    http_request_headers_match:\n+                      headers:\n+                        - name: \":authority\"\n+                          exact_match: example.com\n+              - name: envoy.router\n+                typed_config:\n+                  \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n+    \"\"\"\n+    let expectation = self.expectation(description: \"Run called with expected data\")\n+    let client = try EngineBuilder(yaml: config)\n+      .addLogLevel(.debug)\n+      .addFilter(factory: DemoFilter.init)\n+      .build()\n+      .streamClient()\n+\n+    let requestHeaders = RequestHeadersBuilder(method: .get, scheme: \"https\",\n+                                               authority: \"example.com\", path: \"/test\")\n+      .addUpstreamHttpProtocol(.http2)\n+      .build()\n+    client\n+      .newStreamPrototype()\n+      .setOnResponseHeaders { responseHeaders, _ in\n+         XCTAssertEqual(200, responseHeaders.httpStatus)\n+      }\n+      .setOnResponseData { data, _ in\n+        let responseBody = String(decoding: data, as: UTF8.self)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk2MjI2NQ==", "bodyText": "Would it make sense to document lower in the test that Envoy Mobile maps a 503 to an EnvoyError which is what's being tested?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r496962265", "createdAt": "2020-09-29T18:48:28Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/ReceiveErrorTest.swift", "diffHunk": "@@ -0,0 +1,69 @@\n+import Envoy\n+import EnvoyEngine\n+import Foundation\n+import XCTest\n+\n+final class ReceiveErrorTests: XCTestCase {\n+  func testReceiveError() throws {\n+    // swiftlint:disable:next line_length\n+    let apiListenerType = \"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\"\n+    // swiftlint:disable:next line_length\n+    let assertionFilterType = \"type.googleapis.com/envoymobile.extensions.filters.http.assertion.Assertion\"\n+    let config =\n+    \"\"\"\n+    static_resources:\n+      listeners:\n+      - name: base_api_listener\n+        address:\n+          socket_address:\n+            protocol: TCP\n+            address: 0.0.0.0\n+            port_value: 10000\n+        api_listener:\n+          api_listener:\n+            \"@type\": \\(apiListenerType)\n+            stat_prefix: hcm\n+            route_config:\n+              name: api_router\n+              virtual_hosts:\n+                - name: api\n+                  domains:\n+                    - \"*\"\n+                  routes:\n+                    - match:\n+                        prefix: \"/\"\n+                      direct_response:\n+                        status: 503", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "326f349c71c90f31f64f89fcaf9aa7748545693b"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33b8bc9a84d44938fe29e9c894b3b9de1167fb34", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/33b8bc9a84d44938fe29e9c894b3b9de1167fb34", "committedDate": "2020-09-29T19:30:39Z", "message": "comments\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1c8dfa16c6846763f4450253dc97960c92263f2", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/b1c8dfa16c6846763f4450253dc97960c92263f2", "committedDate": "2020-09-29T20:28:23Z", "message": "comments\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fad7157babc843855a1d0daa3e14b064580fc9c7", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/fad7157babc843855a1d0daa3e14b064580fc9c7", "committedDate": "2020-09-29T21:12:34Z", "message": "swiftlint\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4OTE3MTA5", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#pullrequestreview-498917109", "createdAt": "2020-09-29T21:46:19Z", "commit": {"oid": "b1c8dfa16c6846763f4450253dc97960c92263f2"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTo0NjoyMFrOHaDUwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMTo0NjoyMFrOHaDUwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3OTQ4OA==", "bodyText": "you could also pass enforceOrder: true here if you want", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#discussion_r497079488", "createdAt": "2020-09-29T21:46:20Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/ReceiveDataTest.swift", "diffHunk": "@@ -60,19 +59,24 @@ final class ReceiveDataTests: XCTestCase {\n                                                authority: \"example.com\", path: \"/test\")\n       .addUpstreamHttpProtocol(.http2)\n       .build()\n+\n+    let headersExpectation = self.expectation(description: \"Run called with expected headers\")\n+    let dataExpectation = self.expectation(description: \"Run called with expected data\")\n+\n     client\n       .newStreamPrototype()\n       .setOnResponseHeaders { responseHeaders, _ in\n          XCTAssertEqual(200, responseHeaders.httpStatus)\n+         headersExpectation.fulfill()\n       }\n       .setOnResponseData { data, _ in\n         let responseBody = String(data: data, encoding: .utf8)\n         XCTAssertEqual(\"response_body\", responseBody)\n-        expectation.fulfill()\n+        dataExpectation.fulfill()\n       }\n       .start()\n       .sendHeaders(requestHeaders, endStream: true)\n \n-    XCTAssertEqual(XCTWaiter.wait(for: [expectation], timeout: 1), .completed)\n+    XCTAssertEqual(XCTWaiter.wait(for: [headersExpectation, dataExpectation], timeout: 1), .completed)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c8dfa16c6846763f4450253dc97960c92263f2"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "542240463ba43ddfca47cb05be48834b81c8df42", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/542240463ba43ddfca47cb05be48834b81c8df42", "committedDate": "2020-09-30T00:30:16Z", "message": "comments\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDEyNTg1", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#pullrequestreview-499012585", "createdAt": "2020-09-30T00:31:07Z", "commit": {"oid": "542240463ba43ddfca47cb05be48834b81c8df42"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b631152d697554caa0d4224caa4daa34c48289a", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/7b631152d697554caa0d4224caa4daa34c48289a", "committedDate": "2020-09-30T18:56:10Z", "message": "Merge remote-tracking branch 'origin/main' into swift-tests\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NzIzMDk5", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1069#pullrequestreview-499723099", "createdAt": "2020-09-30T18:56:26Z", "commit": {"oid": "7b631152d697554caa0d4224caa4daa34c48289a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4009, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}