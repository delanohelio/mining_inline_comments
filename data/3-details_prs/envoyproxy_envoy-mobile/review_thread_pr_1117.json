{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMjA2ODcy", "number": 1117, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDowMjowOFrOEmTjmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMToxMToyN1rOEnOIfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjAxNzU1OnYy", "diffSide": "LEFT", "path": "test/common/engine_test.cc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDowMjowOFrOHWQYQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODoyODoyMlrOHXncXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5OTA3Mg==", "bodyText": "moved to main_interface_test", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r493099072", "createdAt": "2020-09-23T00:02:08Z", "author": {"login": "jingwei99"}, "path": "test/common/engine_test.cc", "diffHunk": "@@ -49,42 +49,4 @@ TEST_F(EngineTest, EarlyExit) {\n \n   start_stream(0, {});\n }\n-\n-// TODO: move to main_interface_test.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNTUzMw==", "bodyText": "thanks!", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494525533", "createdAt": "2020-09-24T18:28:22Z", "author": {"login": "junr03"}, "path": "test/common/engine_test.cc", "diffHunk": "@@ -49,42 +49,4 @@ TEST_F(EngineTest, EarlyExit) {\n \n   start_stream(0, {});\n }\n-\n-// TODO: move to main_interface_test.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5OTA3Mg=="}, "originalCommit": {"oid": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTA1OTYyOnYy", "diffSide": "RIGHT", "path": "test/common/main_interface_test.cc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODoyOTowN1rOHXnfEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODoyOTowN1rOHXnfEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNjIyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            const std::string CONFIG =\n          \n          \n            \n            const std::string MINIMAL_NOOP_CONFIG =", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494526226", "createdAt": "2020-09-24T18:29:07Z", "author": {"login": "junr03"}, "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -13,6 +13,26 @@ typedef struct {\n   absl::Notification on_exit;\n } engine_test_context;\n \n+// This config is the minimal envoy mobile config that allows for running the engine.\n+// There is nothing functional about the config, as the created stream is only used for\n+// send_metadata.\n+const std::string CONFIG =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTA2MTM1OnYy", "diffSide": "RIGHT", "path": "test/common/main_interface_test.cc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODoyOToyNVrOHXngMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODozMDoyOVrOHXnkIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNjUxNA==", "bodyText": "do you mind updating the comment, as this is now used in more places?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494526514", "createdAt": "2020-09-24T18:29:25Z", "author": {"login": "junr03"}, "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -13,6 +13,26 @@ typedef struct {\n   absl::Notification on_exit;\n } engine_test_context;\n \n+// This config is the minimal envoy mobile config that allows for running the engine.\n+// There is nothing functional about the config, as the created stream is only used for\n+// send_metadata.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNzUyMQ==", "bodyText": "There is nothing functional about the config, as the created stream is only used for send_metadata. This part of the comment (and similar parts in other deleted comments) could be left in the test itself explaining why the minimal config is being used.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494527521", "createdAt": "2020-09-24T18:30:29Z", "author": {"login": "junr03"}, "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -13,6 +13,26 @@ typedef struct {\n   absl::Notification on_exit;\n } engine_test_context;\n \n+// This config is the minimal envoy mobile config that allows for running the engine.\n+// There is nothing functional about the config, as the created stream is only used for\n+// send_metadata.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNjUxNA=="}, "originalCommit": {"oid": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTA2MjA4OnYy", "diffSide": "RIGHT", "path": "test/common/main_interface_test.cc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODoyOTozM1rOHXngqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODoyOTozM1rOHXngqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNjYzNA==", "bodyText": "Thanks! Great clean up", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494526634", "createdAt": "2020-09-24T18:29:33Z", "author": {"login": "junr03"}, "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -13,6 +13,26 @@ typedef struct {\n   absl::Notification on_exit;\n } engine_test_context;\n \n+// This config is the minimal envoy mobile config that allows for running the engine.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7621fb1c3c8d0a072a07cc87be29d5e7d12553e8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTYxNDY4OnYy", "diffSide": "RIGHT", "path": "library/common/engine.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMToxMToyN1rOHXsxvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMjozOTo0NlrOHXu_Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMjkyNQ==", "bodyText": "I had originally been thinking we could group all stats-recording functions by prefixing them with record*. These could be called recordGuageSet, recordGuageAdd, recordGuageSub. recordCounter could be change to recordCounterInc or stay the same. What do you think?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494612925", "createdAt": "2020-09-24T21:11:27Z", "author": {"login": "goaway"}, "path": "library/common/engine.h", "diffHunk": "@@ -39,10 +39,30 @@ class Engine {\n    * Increment a counter with a given string of elements and by the given count.\n    * @param elements, joined elements of the timeseries.\n    * @param count, amount to add to the counter.\n-   * @param envoy_status_t, the resulting status of the operation.\n    */\n   envoy_status_t recordCounter(const std::string& elements, uint64_t count);\n \n+  /**\n+   * Set a gauge of a given string of elements with the given value.\n+   * @param elements, joined elements of the timeseries.\n+   * @param value, value to set to the gauge.\n+   */\n+  envoy_status_t setGauge(const std::string& elements, uint64_t value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d031c19053e364e893a8bee17e0ed3fd0fcc3ea8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0OTE5MA==", "bodyText": "Grouping all the stats-recording functions by the same prefix sounds a good idea to me.\nI'll update the gauge related methods to the suggested names in this pr.\nAs for the renaming of recordCounter, I assume we want the renaming to go all the way to the platform apis. It will be a breaking change, and I will split that change into a separate pr.\nHow does this plan sound? @goaway", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1117#discussion_r494649190", "createdAt": "2020-09-24T22:39:46Z", "author": {"login": "jingwei99"}, "path": "library/common/engine.h", "diffHunk": "@@ -39,10 +39,30 @@ class Engine {\n    * Increment a counter with a given string of elements and by the given count.\n    * @param elements, joined elements of the timeseries.\n    * @param count, amount to add to the counter.\n-   * @param envoy_status_t, the resulting status of the operation.\n    */\n   envoy_status_t recordCounter(const std::string& elements, uint64_t count);\n \n+  /**\n+   * Set a gauge of a given string of elements with the given value.\n+   * @param elements, joined elements of the timeseries.\n+   * @param value, value to set to the gauge.\n+   */\n+  envoy_status_t setGauge(const std::string& elements, uint64_t value);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMjkyNQ=="}, "originalCommit": {"oid": "d031c19053e364e893a8bee17e0ed3fd0fcc3ea8"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 640, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}