{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5ODU0NzU2", "number": 1178, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODoxNTozOVrOFAZK-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODoxNzozOFrOFAZPlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTU2NzI5OnYy", "diffSide": "RIGHT", "path": "library/swift/src/filters/Filter.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODoxNTozOVrOH-qfIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODoxNTozOVrOH-qfIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ2OTg1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  self.onCancel = {\n          \n          \n            \n                    responseFilter.onCancel()\n          \n          \n            \n                  }\n          \n          \n            \n                  self.onCancel = responseFilter.onCancel", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1178#discussion_r535469859", "createdAt": "2020-12-03T18:15:39Z", "author": {"login": "rebello95"}, "path": "library/swift/src/filters/Filter.swift", "diffHunk": "@@ -104,6 +104,16 @@ extension EnvoyHTTPFilter {\n           ]\n         }\n       }\n+\n+      self.onError = { errorCode, message, attemptCount in\n+        let error = EnvoyError(errorCode: errorCode, message: message,\n+                               attemptCount: UInt32(exactly: attemptCount), cause: nil)\n+        responseFilter.onError(error)\n+      }\n+\n+      self.onCancel = {\n+        responseFilter.onCancel()\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbab625a9e8218d08f840c421f12c11b1e1c002e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTU3MjcyOnYy", "diffSide": "RIGHT", "path": "library/swift/test/HttpBridgeTests/CancelStreamTest.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODoxNjozM1rOH-qiOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODoxNjozM1rOH-qiOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ3MDY0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  init(expectation: XCTestExpectation) {\n          \n          \n            \n                    self.expectation = expectation\n          \n          \n            \n                  }\n          \n      \n    \n    \n  \n\nThis will work without the explicit init since the type is a struct", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1178#discussion_r535470649", "createdAt": "2020-12-03T18:16:33Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/CancelStreamTest.swift", "diffHunk": "@@ -33,25 +35,64 @@ final class CancelStreamTests: XCTestCase {\n                       direct_response:\n                         status: 200\n             http_filters:\n+              - name: envoy.filters.http.platform_bridge\n+                typed_config:\n+                  \"@type\": \\(platformBridgeFilterType)\n+                  platform_filter_name: cancel_validation_filter\n               - name: envoy.router\n                 typed_config:\n                   \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n     \"\"\"\n-    let expectation = self.expectation(description: \"Run called with expected cancellation\")\n+\n+    struct CancelValidationFilter: ResponseFilter {\n+      let expectation: XCTestExpectation\n+\n+      init(expectation: XCTestExpectation) {\n+        self.expectation = expectation\n+      }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbab625a9e8218d08f840c421f12c11b1e1c002e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTU3OTA4OnYy", "diffSide": "RIGHT", "path": "library/swift/test/HttpBridgeTests/CancelStreamTest.swift", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODoxNzozOFrOH-qmFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODozMzo0OVrOH_dCLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ3MTYzNg==", "bodyText": "Can we add a test for onError?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1178#discussion_r535471636", "createdAt": "2020-12-03T18:17:38Z", "author": {"login": "rebello95"}, "path": "library/swift/test/HttpBridgeTests/CancelStreamTest.swift", "diffHunk": "@@ -33,25 +35,64 @@ final class CancelStreamTests: XCTestCase {\n                       direct_response:\n                         status: 200\n             http_filters:\n+              - name: envoy.filters.http.platform_bridge\n+                typed_config:\n+                  \"@type\": \\(platformBridgeFilterType)\n+                  platform_filter_name: cancel_validation_filter\n               - name: envoy.router\n                 typed_config:\n                   \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n     \"\"\"\n-    let expectation = self.expectation(description: \"Run called with expected cancellation\")\n+\n+    struct CancelValidationFilter: ResponseFilter {\n+      let expectation: XCTestExpectation\n+\n+      init(expectation: XCTestExpectation) {\n+        self.expectation = expectation\n+      }\n+\n+      func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+        -> FilterHeadersStatus<ResponseHeaders>\n+      {\n+        return .continue(headers: headers)\n+      }\n+\n+      func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+        return .continue(data: body)\n+      }\n+\n+      func onResponseTrailers(_ trailers: ResponseTrailers)\n+          -> FilterTrailersStatus<ResponseHeaders, ResponseTrailers> {\n+        return .continue(trailers: trailers)\n+      }\n+\n+      func onError(_ error: EnvoyError) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbab625a9e8218d08f840c421f12c11b1e1c002e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI5ODAyOA==", "bodyText": "Support/test added in a separate PR.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1178#discussion_r536298028", "createdAt": "2020-12-04T18:33:49Z", "author": {"login": "goaway"}, "path": "library/swift/test/HttpBridgeTests/CancelStreamTest.swift", "diffHunk": "@@ -33,25 +35,64 @@ final class CancelStreamTests: XCTestCase {\n                       direct_response:\n                         status: 200\n             http_filters:\n+              - name: envoy.filters.http.platform_bridge\n+                typed_config:\n+                  \"@type\": \\(platformBridgeFilterType)\n+                  platform_filter_name: cancel_validation_filter\n               - name: envoy.router\n                 typed_config:\n                   \"@type\": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\n     \"\"\"\n-    let expectation = self.expectation(description: \"Run called with expected cancellation\")\n+\n+    struct CancelValidationFilter: ResponseFilter {\n+      let expectation: XCTestExpectation\n+\n+      init(expectation: XCTestExpectation) {\n+        self.expectation = expectation\n+      }\n+\n+      func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+        -> FilterHeadersStatus<ResponseHeaders>\n+      {\n+        return .continue(headers: headers)\n+      }\n+\n+      func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+        return .continue(data: body)\n+      }\n+\n+      func onResponseTrailers(_ trailers: ResponseTrailers)\n+          -> FilterTrailersStatus<ResponseHeaders, ResponseTrailers> {\n+        return .continue(trailers: trailers)\n+      }\n+\n+      func onError(_ error: EnvoyError) {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ3MTYzNg=="}, "originalCommit": {"oid": "cbab625a9e8218d08f840c421f12c11b1e1c002e"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 507, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}