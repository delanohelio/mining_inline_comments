{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNzgxNTIz", "number": 1147, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMDowNlrOEydb4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxNjowNVrOEydlgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQ2NTI5OnYy", "diffSide": "RIGHT", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMDowNlrOHpHTxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxNzo1MFrOHpHoUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MzQxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            class AsyncDemoFilter: AsyncResponseFilter {\n          \n          \n            \n            final class AsyncDemoFilter: AsyncResponseFilter {", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512873412", "createdAt": "2020-10-27T17:10:06Z", "author": {"login": "rebello95"}, "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3ODY3Mg==", "bodyText": "Would also add a docstring above", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512878672", "createdAt": "2020-10-27T17:17:50Z", "author": {"login": "rebello95"}, "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MzQxMg=="}, "originalCommit": {"oid": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQ2ODQ5OnYy", "diffSide": "RIGHT", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMDo1MVrOHpHVug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzo1OTowN1rOHpJpng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MzkxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private var internalCallbacks: ResponseFilterCallbacks?\n          \n          \n            \n              private lazy var callbacks: ResponseFilterCallbacks = {\n          \n          \n            \n                internalCallbacks! //swiftlint:disable:this force_unwrapping\n          \n          \n            \n              }()\n          \n          \n            \n              private var callbacks: ResponseFilterCallbacks!", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512873914", "createdAt": "2020-10-27T17:10:51Z", "author": {"login": "rebello95"}, "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkxMTc3NA==", "bodyText": "Nice, I figured you must know a more idiomatic way of doing this. :)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512911774", "createdAt": "2020-10-27T17:59:07Z", "author": {"login": "goaway"}, "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3MzkxNA=="}, "originalCommit": {"oid": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQ3MDkzOnYy", "diffSide": "RIGHT", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMToyNVrOHpHXUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMToyNVrOHpHXUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3NDMyMg==", "bodyText": "Might be nice to add inline comments to explain what it's doing (since these serve as demos for readers looking to use the library)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512874322", "createdAt": "2020-10-27T17:11:25Z", "author": {"login": "rebello95"}, "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()\n+\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    return .stopIteration\n+  }\n+\n+  func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+    if endStream {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQ3MzU5OnYy", "diffSide": "RIGHT", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMjowMFrOHpHZBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxMjowMFrOHpHZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3NDc1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                self.internalCallbacks = callbacks\n          \n          \n            \n                self.callbacks = callbacks", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512874756", "createdAt": "2020-10-27T17:12:00Z", "author": {"login": "rebello95"}, "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()\n+\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    return .stopIteration\n+  }\n+\n+  func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+    if endStream {\n+      callbacks.resumeResponse()\n+    }\n+    return .stopIterationAndBuffer\n+  }\n+\n+  func onResponseTrailers(\n+    _ trailers: ResponseTrailers\n+  ) -> FilterTrailersStatus<ResponseHeaders, ResponseTrailers> {\n+    callbacks.resumeResponse()\n+    return .stopIteration\n+  }\n+\n+  func setResponseFilterCallbacks(_ callbacks: ResponseFilterCallbacks) {\n+    self.internalCallbacks = callbacks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzQ4OTk0OnYy", "diffSide": "RIGHT", "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxNjowNVrOHpHjzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNzoxNjowNVrOHpHjzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg3NzUxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                builder.add(name: \"async-filter-demo\", value: \"1\")\n          \n          \n            \n                  .add(name: \"async-filter-demo\", value: \"1\")", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1147#discussion_r512877519", "createdAt": "2020-10-27T17:16:05Z", "author": {"login": "rebello95"}, "path": "examples/swift/hello_world/AsyncDemoFilter.swift", "diffHunk": "@@ -0,0 +1,52 @@\n+import Envoy\n+import Foundation\n+\n+class AsyncDemoFilter: AsyncResponseFilter {\n+  private var internalCallbacks: ResponseFilterCallbacks?\n+  private lazy var callbacks: ResponseFilterCallbacks = {\n+    internalCallbacks! //swiftlint:disable:this force_unwrapping\n+  }()\n+\n+  func onResponseHeaders(_ headers: ResponseHeaders, endStream: Bool)\n+    -> FilterHeadersStatus<ResponseHeaders>\n+  {\n+    return .stopIteration\n+  }\n+\n+  func onResponseData(_ body: Data, endStream: Bool) -> FilterDataStatus<ResponseHeaders> {\n+    if endStream {\n+      callbacks.resumeResponse()\n+    }\n+    return .stopIterationAndBuffer\n+  }\n+\n+  func onResponseTrailers(\n+    _ trailers: ResponseTrailers\n+  ) -> FilterTrailersStatus<ResponseHeaders, ResponseTrailers> {\n+    callbacks.resumeResponse()\n+    return .stopIteration\n+  }\n+\n+  func setResponseFilterCallbacks(_ callbacks: ResponseFilterCallbacks) {\n+    self.internalCallbacks = callbacks\n+  }\n+\n+  func onResumeResponse(\n+    headers: ResponseHeaders?,\n+    data: Data?,\n+    trailers: ResponseTrailers?,\n+    endStream: Bool\n+  ) -> FilterResumeStatus<ResponseHeaders, ResponseTrailers> {\n+    guard let headers = headers else {\n+      // Iteration stopped on headers, so headers must be present.\n+      fatalError(\"Filter behavior violation!\")\n+    }\n+    let builder = headers.toResponseHeadersBuilder()\n+    builder.add(name: \"async-filter-demo\", value: \"1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88ce2987bef693ab9dadac2dc0d02d587b3d1fa8"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 478, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}