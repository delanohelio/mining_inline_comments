{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4Mjc4MTEw", "number": 1102, "title": "test: add tests around main interface", "bodyText": "Description: adds explicit tests for main interface functions.\nRisk Level: low\nTesting: add new integration style tests for the main interface static functions.\nSigned-off-by: Jose Nino jnino@lyft.com", "createdAt": "2020-09-16T22:28:15Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102", "merged": true, "mergeCommit": {"oid": "ff7e8cc125b2cb8e4aed37425a26a850af7b2c15"}, "closed": true, "closedAt": "2020-09-18T03:30:42Z", "author": {"login": "junr03"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJkHOvAH2gAyNDg4Mjc4MTEwOjliMWQwOGU2NGM1M2Q1OGQyN2FmZjc3YjNhZGUxOTQ3ZjE4NjJkZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ7Yw0AH2gAyNDg4Mjc4MTEwOmYzOWEwM2E2MzVhYTNkNTFmMTU4M2I5NWU4ZTI3ZjIwYzAyZTIyNDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9b1d08e64c53d58d27aff77b3ade1947f1862dd8", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/9b1d08e64c53d58d27aff77b3ade1947f1862dd8", "committedDate": "2020-09-16T22:27:02Z", "message": "test: add tests around main interface\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bda570002916b6579fde136c02d065bf9a6edf74", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/bda570002916b6579fde136c02d065bf9a6edf74", "committedDate": "2020-09-16T22:45:05Z", "message": "Merge branch 'main' into remaining-coverage\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDgyOTY0", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#pullrequestreview-490082964", "createdAt": "2020-09-16T23:23:47Z", "commit": {"oid": "bda570002916b6579fde136c02d065bf9a6edf74"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMzoyMzo0N1rOHTHcJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMzoyNzowNlrOHTHgIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgwNjg4Nw==", "bodyText": "You'll need to merge main for this; there's an on_engine_running callback now", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#discussion_r489806887", "createdAt": "2020-09-16T23:23:47Z", "author": {"login": "rebello95"}, "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -0,0 +1,128 @@\n+#include \"test/common/http/common.h\"\n+\n+#include \"absl/synchronization/notification.h\"\n+#include \"gtest/gtest.h\"\n+#include \"library/common/buffer/utility.h\"\n+#include \"library/common/http/header_utility.h\"\n+#include \"library/common/main_interface.h\"\n+\n+namespace Envoy {\n+\n+class MainInterfaceTest : public testing::Test {};\n+\n+TEST_F(MainInterfaceTest, BasicStream) {\n+  const std::string config =\n+      \"{\\\"admin\\\":{},\\\"static_resources\\\":{\\\"listeners\\\":[{\\\"name\\\":\\\"base_api_listener\\\", \"\n+      \"\\\"address\\\":{\\\"socket_address\\\":{\\\"protocol\\\":\\\"TCP\\\",\\\"address\\\":\\\"0.0.0.0\\\",\\\"port_\"\n+      \"value\\\":10000}},\\\"api_listener\\\":{\\\"api_listener\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\\\",\\\"stat_\"\n+      \"prefix\\\":\\\"hcm\\\",\\\"route_config\\\":{\\\"name\\\":\\\"api_router\\\",\\\"virtual_hosts\\\":[{\\\"name\\\":\"\n+      \"\\\"api\\\",\\\"include_attempt_count_in_response\\\":true,\\\"domains\\\":[\\\"*\\\"],\\\"routes\\\":[{\"\n+      \"\\\"match\\\":{\\\"prefix\\\":\\\"/\"\n+      \"\\\"},\\\"direct_response\\\":{\\\"status\\\":\\\"200\\\"}}]}]},\\\"http_filters\\\":[{\\\"name\\\":\\\"buffer\\\",\"\n+      \"\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.buffer.v3.Buffer\\\", \\\"max_request_bytes\\\": \\\"65000\\\"}}, \"\n+      \"{\\\"name\\\":\\\"envoy.router\\\",\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.router.v3.Router\\\"}}]}}}]},\\\"layered_runtime\\\":{\\\"layers\\\":[{\"\n+      \"\\\"name\\\":\\\"static_layer_0\\\",\\\"static_layer\\\":{\\\"overload\\\":{\\\"global_downstream_max_\"\n+      \"connections\\\":50000}}}]}}\";\n+  const std::string level = \"debug\";\n+  absl::Notification exit;\n+  envoy_engine_callbacks engine_cbs{[](void* context) -> void {\n+                                      auto* exit = static_cast<absl::Notification*>(context);\n+                                      exit->Notify();\n+                                    },\n+                                    &exit};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda570002916b6579fde136c02d065bf9a6edf74"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgwNjk1Mg==", "bodyText": "Can you /*document*/ these?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#discussion_r489806952", "createdAt": "2020-09-16T23:24:03Z", "author": {"login": "rebello95"}, "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -0,0 +1,128 @@\n+#include \"test/common/http/common.h\"\n+\n+#include \"absl/synchronization/notification.h\"\n+#include \"gtest/gtest.h\"\n+#include \"library/common/buffer/utility.h\"\n+#include \"library/common/http/header_utility.h\"\n+#include \"library/common/main_interface.h\"\n+\n+namespace Envoy {\n+\n+class MainInterfaceTest : public testing::Test {};\n+\n+TEST_F(MainInterfaceTest, BasicStream) {\n+  const std::string config =\n+      \"{\\\"admin\\\":{},\\\"static_resources\\\":{\\\"listeners\\\":[{\\\"name\\\":\\\"base_api_listener\\\", \"\n+      \"\\\"address\\\":{\\\"socket_address\\\":{\\\"protocol\\\":\\\"TCP\\\",\\\"address\\\":\\\"0.0.0.0\\\",\\\"port_\"\n+      \"value\\\":10000}},\\\"api_listener\\\":{\\\"api_listener\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\\\",\\\"stat_\"\n+      \"prefix\\\":\\\"hcm\\\",\\\"route_config\\\":{\\\"name\\\":\\\"api_router\\\",\\\"virtual_hosts\\\":[{\\\"name\\\":\"\n+      \"\\\"api\\\",\\\"include_attempt_count_in_response\\\":true,\\\"domains\\\":[\\\"*\\\"],\\\"routes\\\":[{\"\n+      \"\\\"match\\\":{\\\"prefix\\\":\\\"/\"\n+      \"\\\"},\\\"direct_response\\\":{\\\"status\\\":\\\"200\\\"}}]}]},\\\"http_filters\\\":[{\\\"name\\\":\\\"buffer\\\",\"\n+      \"\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.buffer.v3.Buffer\\\", \\\"max_request_bytes\\\": \\\"65000\\\"}}, \"\n+      \"{\\\"name\\\":\\\"envoy.router\\\",\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.router.v3.Router\\\"}}]}}}]},\\\"layered_runtime\\\":{\\\"layers\\\":[{\"\n+      \"\\\"name\\\":\\\"static_layer_0\\\",\\\"static_layer\\\":{\\\"overload\\\":{\\\"global_downstream_max_\"\n+      \"connections\\\":50000}}}]}}\";\n+  const std::string level = \"debug\";\n+  absl::Notification exit;\n+  envoy_engine_callbacks engine_cbs{[](void* context) -> void {\n+                                      auto* exit = static_cast<absl::Notification*>(context);\n+                                      exit->Notify();\n+                                    },\n+                                    &exit};\n+  run_engine(0, engine_cbs, config.c_str(), level.c_str());\n+\n+  absl::Notification on_complete_notification;\n+  envoy_http_callbacks stream_cbs{[](envoy_headers, bool, void*) -> void* { return nullptr; },\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda570002916b6579fde136c02d065bf9a6edf74"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgwNzQzMQ==", "bodyText": "Same comments for this test case as above", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#discussion_r489807431", "createdAt": "2020-09-16T23:25:25Z", "author": {"login": "rebello95"}, "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -0,0 +1,128 @@\n+#include \"test/common/http/common.h\"\n+\n+#include \"absl/synchronization/notification.h\"\n+#include \"gtest/gtest.h\"\n+#include \"library/common/buffer/utility.h\"\n+#include \"library/common/http/header_utility.h\"\n+#include \"library/common/main_interface.h\"\n+\n+namespace Envoy {\n+\n+class MainInterfaceTest : public testing::Test {};\n+\n+TEST_F(MainInterfaceTest, BasicStream) {\n+  const std::string config =\n+      \"{\\\"admin\\\":{},\\\"static_resources\\\":{\\\"listeners\\\":[{\\\"name\\\":\\\"base_api_listener\\\", \"\n+      \"\\\"address\\\":{\\\"socket_address\\\":{\\\"protocol\\\":\\\"TCP\\\",\\\"address\\\":\\\"0.0.0.0\\\",\\\"port_\"\n+      \"value\\\":10000}},\\\"api_listener\\\":{\\\"api_listener\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\\\",\\\"stat_\"\n+      \"prefix\\\":\\\"hcm\\\",\\\"route_config\\\":{\\\"name\\\":\\\"api_router\\\",\\\"virtual_hosts\\\":[{\\\"name\\\":\"\n+      \"\\\"api\\\",\\\"include_attempt_count_in_response\\\":true,\\\"domains\\\":[\\\"*\\\"],\\\"routes\\\":[{\"\n+      \"\\\"match\\\":{\\\"prefix\\\":\\\"/\"\n+      \"\\\"},\\\"direct_response\\\":{\\\"status\\\":\\\"200\\\"}}]}]},\\\"http_filters\\\":[{\\\"name\\\":\\\"buffer\\\",\"\n+      \"\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.buffer.v3.Buffer\\\", \\\"max_request_bytes\\\": \\\"65000\\\"}}, \"\n+      \"{\\\"name\\\":\\\"envoy.router\\\",\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.router.v3.Router\\\"}}]}}}]},\\\"layered_runtime\\\":{\\\"layers\\\":[{\"\n+      \"\\\"name\\\":\\\"static_layer_0\\\",\\\"static_layer\\\":{\\\"overload\\\":{\\\"global_downstream_max_\"\n+      \"connections\\\":50000}}}]}}\";\n+  const std::string level = \"debug\";\n+  absl::Notification exit;\n+  envoy_engine_callbacks engine_cbs{[](void* context) -> void {\n+                                      auto* exit = static_cast<absl::Notification*>(context);\n+                                      exit->Notify();\n+                                    },\n+                                    &exit};\n+  run_engine(0, engine_cbs, config.c_str(), level.c_str());\n+\n+  absl::Notification on_complete_notification;\n+  envoy_http_callbacks stream_cbs{[](envoy_headers, bool, void*) -> void* { return nullptr; },\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,\n+                                  [](void* context) -> void* {\n+                                    auto* on_complete_notification =\n+                                        static_cast<absl::Notification*>(context);\n+                                    on_complete_notification->Notify();\n+                                    return nullptr;\n+                                  },\n+                                  nullptr,\n+                                  &on_complete_notification};\n+  Http::TestRequestHeaderMapImpl headers;\n+  HttpTestUtility::addDefaultHeaders(headers);\n+  envoy_headers c_headers = Http::Utility::toBridgeHeaders(headers);\n+\n+  Buffer::OwnedImpl request_data = Buffer::OwnedImpl(\"request body\");\n+  envoy_data c_data = Buffer::Utility::toBridgeData(request_data);\n+\n+  Http::TestRequestTrailerMapImpl trailers;\n+  envoy_headers c_trailers = Http::Utility::toBridgeHeaders(trailers);\n+\n+  envoy_stream_t stream = init_stream(0);\n+\n+  start_stream(stream, stream_cbs);\n+\n+  send_headers(stream, c_headers, false);\n+  send_data(stream, c_data, false);\n+  send_trailers(stream, c_trailers);\n+\n+  ASSERT_TRUE(on_complete_notification.WaitForNotificationWithTimeout(absl::Seconds(10)));\n+\n+  terminate_engine(0);\n+\n+  ASSERT_TRUE(exit.WaitForNotificationWithTimeout(absl::Seconds(10)));\n+}\n+\n+TEST_F(MainInterfaceTest, ResetStream) {\n+  const std::string config =\n+      \"{\\\"admin\\\":{},\\\"static_resources\\\":{\\\"listeners\\\":[{\\\"name\\\":\\\"base_api_listener\\\",\"\n+      \"\\\"address\\\":{\\\"socket_address\\\":{\\\"protocol\\\":\\\"TCP\\\",\\\"address\\\":\\\"0.0.0.0\\\",\\\"port_\"\n+      \"value\\\":10000}},\\\"api_listener\\\":{\\\"api_listener\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\\\",\\\"stat_\"\n+      \"prefix\\\":\\\"hcm\\\",\\\"route_config\\\":{\\\"name\\\":\\\"api_router\\\",\\\"virtual_hosts\\\":[{\\\"name\\\":\"\n+      \"\\\"api\\\",\\\"include_attempt_count_in_response\\\":true,\\\"domains\\\":[\\\"*\\\"],\\\"routes\\\":[{\"\n+      \"\\\"match\\\":{\\\"prefix\\\":\\\"/\"\n+      \"\\\"},\\\"route\\\":{\\\"cluster_header\\\":\\\"x-envoy-mobile-cluster\\\",\\\"retry_policy\\\":{\\\"retry_back_\"\n+      \"off\\\":{\\\"base_interval\\\":\\\"0.25s\\\",\\\"max_interval\\\":\\\"60s\\\"}}}}]}]},\\\"http_filters\\\":[{\"\n+      \"\\\"name\\\":\\\"envoy.router\\\",\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.router.v3.Router\\\"}}]}}}]},\\\"layered_runtime\\\":{\\\"layers\\\":[{\"\n+      \"\\\"name\\\":\\\"static_layer_0\\\",\\\"static_layer\\\":{\\\"overload\\\":{\\\"global_downstream_max_\"\n+      \"connections\\\":50000}}}]}}\";\n+  const std::string level = \"debug\";\n+  absl::Notification exit;\n+  envoy_engine_callbacks engine_cbs{[](void* context) -> void {\n+                                      auto* exit = static_cast<absl::Notification*>(context);\n+                                      exit->Notify();\n+                                    },\n+                                    &exit};\n+  run_engine(0, engine_cbs, config.c_str(), level.c_str());\n+\n+  absl::Notification on_cancel_notification;\n+  envoy_http_callbacks stream_cbs{[](envoy_headers, bool, void*) -> void* { return nullptr; },\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,\n+                                  [](void* context) -> void* {\n+                                    auto* on_cancel_notification =\n+                                        static_cast<absl::Notification*>(context);\n+                                    on_cancel_notification->Notify();\n+                                    return nullptr;\n+                                  },\n+                                  &on_cancel_notification};\n+\n+  envoy_stream_t stream = init_stream(0);\n+\n+  start_stream(stream, stream_cbs);\n+\n+  reset_stream(stream);\n+\n+  ASSERT_TRUE(on_cancel_notification.WaitForNotificationWithTimeout(absl::Seconds(10)));\n+\n+  terminate_engine(0);\n+\n+  ASSERT_TRUE(exit.WaitForNotificationWithTimeout(absl::Seconds(10)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda570002916b6579fde136c02d065bf9a6edf74"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTgwNzkwNw==", "bodyText": "I think it's worth a docstring somewhere here explaining that the config above triggers a direct response which is why the stream completes. Also, should we validate the response itself?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#discussion_r489807907", "createdAt": "2020-09-16T23:27:06Z", "author": {"login": "rebello95"}, "path": "test/common/main_interface_test.cc", "diffHunk": "@@ -0,0 +1,128 @@\n+#include \"test/common/http/common.h\"\n+\n+#include \"absl/synchronization/notification.h\"\n+#include \"gtest/gtest.h\"\n+#include \"library/common/buffer/utility.h\"\n+#include \"library/common/http/header_utility.h\"\n+#include \"library/common/main_interface.h\"\n+\n+namespace Envoy {\n+\n+class MainInterfaceTest : public testing::Test {};\n+\n+TEST_F(MainInterfaceTest, BasicStream) {\n+  const std::string config =\n+      \"{\\\"admin\\\":{},\\\"static_resources\\\":{\\\"listeners\\\":[{\\\"name\\\":\\\"base_api_listener\\\", \"\n+      \"\\\"address\\\":{\\\"socket_address\\\":{\\\"protocol\\\":\\\"TCP\\\",\\\"address\\\":\\\"0.0.0.0\\\",\\\"port_\"\n+      \"value\\\":10000}},\\\"api_listener\\\":{\\\"api_listener\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\\\",\\\"stat_\"\n+      \"prefix\\\":\\\"hcm\\\",\\\"route_config\\\":{\\\"name\\\":\\\"api_router\\\",\\\"virtual_hosts\\\":[{\\\"name\\\":\"\n+      \"\\\"api\\\",\\\"include_attempt_count_in_response\\\":true,\\\"domains\\\":[\\\"*\\\"],\\\"routes\\\":[{\"\n+      \"\\\"match\\\":{\\\"prefix\\\":\\\"/\"\n+      \"\\\"},\\\"direct_response\\\":{\\\"status\\\":\\\"200\\\"}}]}]},\\\"http_filters\\\":[{\\\"name\\\":\\\"buffer\\\",\"\n+      \"\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.buffer.v3.Buffer\\\", \\\"max_request_bytes\\\": \\\"65000\\\"}}, \"\n+      \"{\\\"name\\\":\\\"envoy.router\\\",\\\"typed_config\\\":{\\\"@type\\\":\\\"type.googleapis.com/\"\n+      \"envoy.extensions.filters.http.router.v3.Router\\\"}}]}}}]},\\\"layered_runtime\\\":{\\\"layers\\\":[{\"\n+      \"\\\"name\\\":\\\"static_layer_0\\\",\\\"static_layer\\\":{\\\"overload\\\":{\\\"global_downstream_max_\"\n+      \"connections\\\":50000}}}]}}\";\n+  const std::string level = \"debug\";\n+  absl::Notification exit;\n+  envoy_engine_callbacks engine_cbs{[](void* context) -> void {\n+                                      auto* exit = static_cast<absl::Notification*>(context);\n+                                      exit->Notify();\n+                                    },\n+                                    &exit};\n+  run_engine(0, engine_cbs, config.c_str(), level.c_str());\n+\n+  absl::Notification on_complete_notification;\n+  envoy_http_callbacks stream_cbs{[](envoy_headers, bool, void*) -> void* { return nullptr; },\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,\n+                                  nullptr,\n+                                  [](void* context) -> void* {\n+                                    auto* on_complete_notification =\n+                                        static_cast<absl::Notification*>(context);\n+                                    on_complete_notification->Notify();\n+                                    return nullptr;\n+                                  },\n+                                  nullptr,\n+                                  &on_complete_notification};\n+  Http::TestRequestHeaderMapImpl headers;\n+  HttpTestUtility::addDefaultHeaders(headers);\n+  envoy_headers c_headers = Http::Utility::toBridgeHeaders(headers);\n+\n+  Buffer::OwnedImpl request_data = Buffer::OwnedImpl(\"request body\");\n+  envoy_data c_data = Buffer::Utility::toBridgeData(request_data);\n+\n+  Http::TestRequestTrailerMapImpl trailers;\n+  envoy_headers c_trailers = Http::Utility::toBridgeHeaders(trailers);\n+\n+  envoy_stream_t stream = init_stream(0);\n+\n+  start_stream(stream, stream_cbs);\n+\n+  send_headers(stream, c_headers, false);\n+  send_data(stream, c_data, false);\n+  send_trailers(stream, c_trailers);\n+\n+  ASSERT_TRUE(on_complete_notification.WaitForNotificationWithTimeout(absl::Seconds(10)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bda570002916b6579fde136c02d065bf9a6edf74"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ee2e97b6c8026305601d78a62d4a80ef5454435", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/8ee2e97b6c8026305601d78a62d4a80ef5454435", "committedDate": "2020-09-17T00:06:22Z", "message": "Merge branch 'main' into remaining-coverage\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "502ef07d44696c91f7702efd67662dcc3ecbb469", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/502ef07d44696c91f7702efd67662dcc3ecbb469", "committedDate": "2020-09-17T00:28:15Z", "message": "comments and fix\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62669c930a20c1586d58e3f01a1f556d330fed10", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/62669c930a20c1586d58e3f01a1f556d330fed10", "committedDate": "2020-09-17T00:43:41Z", "message": "metadata\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b65f75aa4e67dd8f512f499aadfb292b8ab44c8d", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/b65f75aa4e67dd8f512f499aadfb292b8ab44c8d", "committedDate": "2020-09-17T00:55:48Z", "message": "cleanup\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODEzNjYz", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#pullrequestreview-490813663", "createdAt": "2020-09-17T17:07:04Z", "commit": {"oid": "b65f75aa4e67dd8f512f499aadfb292b8ab44c8d"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzowNzowNFrOHTs_ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzowODoyNVrOHTtCsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjIwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                absl::string_view details_;\n          \n          \n            \n                absl::string_view response_details_;", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#discussion_r490422202", "createdAt": "2020-09-17T17:07:04Z", "author": {"login": "rebello95"}, "path": "library/common/http/dispatcher.h", "diffHunk": "@@ -168,19 +172,24 @@ class Dispatcher : public Logger::Loggable<Logger::Id::http> {\n     const Network::Address::InstanceConstSharedPtr& connectionLocalAddress() override {\n       return parent_.address_;\n     }\n+    absl::string_view responseDetails() override { return details_; }\n     // TODO: https://github.com/lyft/envoy-mobile/issues/825\n     void readDisable(bool /*disable*/) override {}\n     uint32_t bufferLimit() override { return 65000; }\n     // Not applicable\n     void setFlushTimeout(std::chrono::milliseconds) override {}\n \n+    void setDetails(absl::string_view details) { details_ = details; }\n+\n     const envoy_stream_t stream_handle_;\n \n     // Used to issue outgoing HTTP stream operations.\n     RequestDecoder* request_decoder_;\n     // Used to receive incoming HTTP stream operations.\n     DirectStreamCallbacksPtr callbacks_;\n     Dispatcher& parent_;\n+    // Response details used by the connection manager.\n+    absl::string_view details_;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b65f75aa4e67dd8f512f499aadfb292b8ab44c8d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjk2Mg==", "bodyText": "setResponseDetails? I'm also curious as to what the benefit is of having an explicit setter when details_ has the same access level below and can be modified directly", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#discussion_r490422962", "createdAt": "2020-09-17T17:08:25Z", "author": {"login": "rebello95"}, "path": "library/common/http/dispatcher.h", "diffHunk": "@@ -168,19 +172,24 @@ class Dispatcher : public Logger::Loggable<Logger::Id::http> {\n     const Network::Address::InstanceConstSharedPtr& connectionLocalAddress() override {\n       return parent_.address_;\n     }\n+    absl::string_view responseDetails() override { return details_; }\n     // TODO: https://github.com/lyft/envoy-mobile/issues/825\n     void readDisable(bool /*disable*/) override {}\n     uint32_t bufferLimit() override { return 65000; }\n     // Not applicable\n     void setFlushTimeout(std::chrono::milliseconds) override {}\n \n+    void setDetails(absl::string_view details) { details_ = details; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b65f75aa4e67dd8f512f499aadfb292b8ab44c8d"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f042a572ac514a2fc47e66ad3e60c24c404dba20", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/f042a572ac514a2fc47e66ad3e60c24c404dba20", "committedDate": "2020-09-17T23:52:47Z", "message": "asan and fmt\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c4fd3b02a726299eae647acc819e388ba9357de", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/4c4fd3b02a726299eae647acc819e388ba9357de", "committedDate": "2020-09-17T23:53:48Z", "message": "Merge branch 'main' into remaining-coverage\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a1c0fb5cc2981b0add2fcc1767365340cfb83c6", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/5a1c0fb5cc2981b0add2fcc1767365340cfb83c6", "committedDate": "2020-09-18T00:00:50Z", "message": "bump ref\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDY1NTcx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1102#pullrequestreview-491065571", "createdAt": "2020-09-18T00:02:59Z", "commit": {"oid": "5a1c0fb5cc2981b0add2fcc1767365340cfb83c6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f39a03a635aa3d51f1583b95e8e27f20c02e2245", "author": {"user": {"login": "junr03", "name": "Jose Ulises Nino Rivera"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/f39a03a635aa3d51f1583b95e8e27f20c02e2245", "committedDate": "2020-09-18T01:34:00Z", "message": "size\n\nSigned-off-by: Jose Nino <jnino@lyft.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4033, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}