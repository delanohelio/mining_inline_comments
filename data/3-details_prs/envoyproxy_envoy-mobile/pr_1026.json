{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NzQ2OTc4", "number": 1026, "title": "filters: wire Android return path", "bodyText": "Description: Wires the return path for Android filter invocations, allowing modification of the current HTTP entity.\nRisk Level: Moderate\nTesting: Local and CI\nSigned-off-by: Mike Schore mike.schore@gmail.com", "createdAt": "2020-08-12T12:43:42Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026", "merged": true, "mergeCommit": {"oid": "8caefc4b72bbe2707936f1e82e38e604e85965ab"}, "closed": true, "closedAt": "2020-08-17T21:46:38Z", "author": {"login": "goaway"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_xgXugBqjM2NjE2MTQxMDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_3TligH2gAyNDY2NzQ2OTc4Ojk0NjY5Mzc3N2JjMTU3NjdmYzhlMzFjNDY0ODJmZWQ3M2UwOGIzYTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bbc7081f2a66a341f866e55afdb2e09b66893fbf", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/bbc7081f2a66a341f866e55afdb2e09b66893fbf", "committedDate": "2020-08-12T12:42:35Z", "message": "filters: wire Android return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "32eaa018ea1d8fcc86351e66665927a5e4ce74b4", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/32eaa018ea1d8fcc86351e66665927a5e4ce74b4", "committedDate": "2020-08-17T12:23:47Z", "message": "filters: wire Android return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f205524094d2d480ae312e5364231188f2f7417", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/6f205524094d2d480ae312e5364231188f2f7417", "committedDate": "2020-08-17T12:26:35Z", "message": "filters: wire Android return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32eaa018ea1d8fcc86351e66665927a5e4ce74b4", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/32eaa018ea1d8fcc86351e66665927a5e4ce74b4", "committedDate": "2020-08-17T12:23:47Z", "message": "filters: wire Android return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "6f205524094d2d480ae312e5364231188f2f7417", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/6f205524094d2d480ae312e5364231188f2f7417", "committedDate": "2020-08-17T12:26:35Z", "message": "filters: wire Android return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/780279db5263dc099d523c1825ebf5723ad1fff5", "committedDate": "2020-08-17T12:37:41Z", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDQxNTIz", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#pullrequestreview-468441523", "createdAt": "2020-08-17T13:02:53Z", "commit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowMjo1M1rOHBn0Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowMjo1M1rOHBn0Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2Mjk3OQ==", "bodyText": "The surrounding code was moved, but the above block is new.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471462979", "createdAt": "2020-08-17T13:02:53Z", "author": {"login": "goaway"}, "path": "library/common/jni/jni_interface.cc", "diffHunk": "@@ -101,6 +101,100 @@ Java_io_envoyproxy_envoymobile_engine_AndroidJniLibrary_flushStats(JNIEnv* env,\n   flush_stats();\n }\n \n+// Utility functions\n+static JNIEnv* get_env() {\n+  JNIEnv* env = nullptr;\n+  int get_env_res = static_jvm->GetEnv((void**)&env, JNI_VERSION);\n+  if (get_env_res == JNI_EDETACHED) {\n+    __android_log_write(ANDROID_LOG_VERBOSE, \"[Envoy]\", \"environment is JNI_EDETACHED\");\n+    // Note: the only thread that should need to be attached is Envoy's engine std::thread.\n+    // TODO: harden this piece of code to make sure that we are only needing to attach Envoy\n+    // engine's std::thread, and that we detach it successfully.\n+    static_jvm->AttachCurrentThread(&env, nullptr);\n+    static_jvm->GetEnv((void**)&env, JNI_VERSION);\n+  }\n+  return env;\n+}\n+\n+static void jni_delete_global_ref(void* context) {\n+  JNIEnv* env = get_env();\n+  jobject ref = static_cast<jobject>(context);\n+  env->DeleteGlobalRef(ref);\n+}\n+\n+static void jni_delete_const_global_ref(const void* context) {\n+  jni_delete_global_ref(const_cast<void*>(context));\n+}\n+\n+static int unbox_integer(JNIEnv* env, jobject boxedInteger) {\n+  jclass jcls_Integer = env->FindClass(\"java/lang/Integer\");\n+  jmethodID jmid_intValue = env->GetMethodID(jcls_Integer, \"intValue\", \"()I\");\n+  return env->CallIntMethod(boxedInteger, jmid_intValue);\n+}\n+\n+static envoy_data array_to_native_data(JNIEnv* env, jbyteArray j_data) {\n+  size_t data_length = env->GetArrayLength(j_data);\n+  uint8_t* native_bytes = (uint8_t*)malloc(data_length);\n+  void* critical_data = env->GetPrimitiveArrayCritical(j_data, 0);\n+  memcpy(native_bytes, critical_data, data_length);\n+  env->ReleasePrimitiveArrayCritical(j_data, critical_data, 0);\n+  return {data_length, native_bytes, free, native_bytes};\n+}\n+\n+static envoy_data buffer_to_native_data(JNIEnv* env, jobject j_data) {\n+  uint8_t* direct_address = static_cast<uint8_t*>(env->GetDirectBufferAddress(j_data));\n+\n+  if (direct_address == nullptr) {\n+    jclass jcls_ByteBuffer = env->FindClass(\"java/nio/ByteBuffer\");\n+    // We skip checking hasArray() because only direct ByteBuffers or array-backed ByteBuffers\n+    // are supported. We will crash here if this is an invalid buffer, but guards may be\n+    // implemented in the JVM layer.\n+    jmethodID jmid_array = env->GetMethodID(jcls_ByteBuffer, \"array\", \"()[B\");\n+    jbyteArray array = static_cast<jbyteArray>(env->CallObjectMethod(j_data, jmid_array));\n+    return array_to_native_data(env, array);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDQzODM4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#pullrequestreview-468443838", "createdAt": "2020-08-17T13:05:51Z", "commit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowNTo1MlrOHBn7DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowNTo1MlrOHBn7DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2NDcxNg==", "bodyText": "Previously we ignored the result; now we extract its elements, map, and return them.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471464716", "createdAt": "2020-08-17T13:05:52Z", "author": {"login": "goaway"}, "path": "library/common/jni/jni_interface.cc", "diffHunk": "@@ -236,20 +324,28 @@ static void* jvm_on_response_data(envoy_data data, bool end_stream, void* contex\n \n static envoy_filter_data_status jvm_http_filter_on_request_data(envoy_data data, bool end_stream,\n                                                                 const void* context) {\n-  envoy_data return_data = copy_envoy_data(data.length, data.bytes);\n-  jobject result = static_cast<jobject>(\n+  JNIEnv* env = get_env();\n+  jobjectArray result = static_cast<jobjectArray>(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "originalPosition": 166}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDQ1MTc4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#pullrequestreview-468445178", "createdAt": "2020-08-17T13:07:30Z", "commit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowNzozMFrOHBn-ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzowNzozMFrOHBn-ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2NTYxMA==", "bodyText": "Moved to utility class, which can be tested and reused.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471465610", "createdAt": "2020-08-17T13:07:30Z", "author": {"login": "goaway"}, "path": "library/java/src/io/envoyproxy/envoymobile/engine/EnvoyHTTPStream.java", "diffHunk": "@@ -76,17 +76,4 @@ public void sendTrailers(Map<String, List<String>> trailers) {\n    * @return int, success unless the stream has already been canceled.\n    */\n   public int cancel() { return JniLibrary.resetStream(streamHandle); }\n-\n-  private static byte[][] toJniLibraryHeaders(Map<String, List<String>> headers) {\n-    // Create array with some room for potential headers that have more than one\n-    // value.\n-    final List<byte[]> convertedHeaders = new ArrayList<byte[]>(2 * headers.size());\n-    for (Map.Entry<String, List<String>> entry : headers.entrySet()) {\n-      for (String value : entry.getValue()) {\n-        convertedHeaders.add(entry.getKey().getBytes(StandardCharsets.UTF_8));\n-        convertedHeaders.add(value.getBytes(StandardCharsets.UTF_8));\n-      }\n-    }\n-    return convertedHeaders.toArray(new byte[0][0]);\n-  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NDQ3ODc5", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#pullrequestreview-468447879", "createdAt": "2020-08-17T13:10:50Z", "commit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzoxMDo1MVrOHBoFlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzoxMDo1MVrOHBoFlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2NzQxNA==", "bodyText": "Introduce a \"static\" constant value here that maps to Envoy's enum. It's not possible to directly set these from the native values, but I'd like to add a runtime check and/or test that verifies they're the same.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471467414", "createdAt": "2020-08-17T13:10:51Z", "author": {"login": "goaway"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/filters/FilterDataStatus.kt", "diffHunk": "@@ -5,14 +5,16 @@ import java.nio.ByteBuffer\n /*\n  * Status to be returned by filters when transmitting or receiving data.\n  */\n-sealed class FilterDataStatus<T : Headers> {\n+sealed class FilterDataStatus<T : Headers>(\n+  val status: Int", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NjE0NzM2", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#pullrequestreview-468614736", "createdAt": "2020-08-17T16:26:42Z", "commit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjoyNjo0MlrOHBv5fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjoyNjo0MlrOHBv5fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NTM5MA==", "bodyText": "I feel like this would be clearer if we just have an if statement\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                (filter as? RequestFilter)?.let { requestFilter ->\n          \n          \n            \n                if (filter is RequestFilter) {\n          \n          \n            \n                     ...\n          \n          \n            \n                }\n          \n          \n            \n                return arrayOf(0, data)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471595390", "createdAt": "2020-08-17T16:26:42Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/filters/Filter.kt", "diffHunk": "@@ -39,26 +39,60 @@ internal class EnvoyHTTPFilterAdapter(\n     (filter as? ResponseFilter)?.let { responseFilter ->\n       val result = responseFilter.onResponseHeaders(ResponseHeaders(headers), endStream)\n       return when (result) {\n-        is FilterHeadersStatus.Continue -> arrayOf(0 /*EnvoyHTTPHeadersStatusContinue*/, result.headers.headers)\n-        is FilterHeadersStatus.StopIteration -> arrayOf(1 /*EnvoyHTTPHeadersStatusStopIteration*/, headers)\n+        is FilterHeadersStatus.Continue -> arrayOf(result.status, result.headers.headers)\n+        is FilterHeadersStatus.StopIteration -> arrayOf(result.status, headers)\n       }\n     }\n     return arrayOf(0, headers)\n   }\n \n   override fun onRequestData(data: ByteBuffer, endStream: Boolean): Array<Any> {\n+    (filter as? RequestFilter)?.let { requestFilter ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NjE1NTEy", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#pullrequestreview-468615512", "createdAt": "2020-08-17T16:27:49Z", "commit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjoyNzo1MFrOHBv79Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjoyNzo1MFrOHBv79Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NjAyMQ==", "bodyText": "Could we add a quick test here?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#discussion_r471596021", "createdAt": "2020-08-17T16:27:50Z", "author": {"login": "buildbreaker"}, "path": "library/java/src/io/envoyproxy/envoymobile/engine/JniBridgeUtility.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.envoyproxy.envoymobile.engine;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Class to assist with passing types from the JVM to native code. Currently supports\n+ * HTTP headers.\n+ */\n+final class JniBridgeUtility {\n+\n+  private JniBridgeUtility() {}\n+\n+  public static byte[][] toJniHeaders(Map<String, List<String>> headers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "780279db5263dc099d523c1825ebf5723ad1fff5"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1faf9091604ebdd247389dc70df918f792cb8f8", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/f1faf9091604ebdd247389dc70df918f792cb8f8", "committedDate": "2020-08-17T18:43:13Z", "message": "update example app to exercise working return path\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NzU2NDMw", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1026#pullrequestreview-468756430", "createdAt": "2020-08-17T19:00:32Z", "commit": {"oid": "f1faf9091604ebdd247389dc70df918f792cb8f8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "946693777bc15767fc8e31c46482fed73e08b3a5", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/946693777bc15767fc8e31c46482fed73e08b3a5", "committedDate": "2020-08-17T19:09:29Z", "message": "remove stray semicolon\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4176, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}