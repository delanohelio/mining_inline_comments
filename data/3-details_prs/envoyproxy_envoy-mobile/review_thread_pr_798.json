{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MzI3ODgx", "number": 798, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjowOToxOFrODz8eLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjoxMToyMlrODz8g2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Nzk0NzMyOnYy", "diffSide": "RIGHT", "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjowOToxOFrOGIpuSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjo0NzoyMlrOGIqwyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw==", "bodyText": "Not going to keep the comments?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411725387", "createdAt": "2020-04-20T22:09:18Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNzg2NQ==", "bodyText": "They're specified in the superclass, so I figured it was better to have them in one place rather than copy-pasted to every implementation. WDYT?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411727865", "createdAt": "2020-04-20T22:14:44Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw=="}, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczMDA2NA==", "bodyText": "Could we also delete the other comments? If it's a lot to change, we can both do it in another PR", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411730064", "createdAt": "2020-04-20T22:19:28Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw=="}, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczMDQ0OA==", "bodyText": "I'll do it in a follow up PR yep, waiting on this to merge to avoid conflicts", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411730448", "createdAt": "2020-04-20T22:20:16Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw=="}, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc0MjQwOQ==", "bodyText": "https://github.com/lyft/envoy-mobile/pull/799/files#diff-9652aa5519ef4ba01992a74aaa5cd9b1L10", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411742409", "createdAt": "2020-04-20T22:47:22Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNTM4Nw=="}, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Nzk1NDE5OnYy", "diffSide": "RIGHT", "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjoxMToyMlrOGIpyOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMjoyMzowM1rOGIqG-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNjM5Mg==", "bodyText": "What was the rationale for making this required (instead of having something like fun close(byteBuffer: ByteBuffer = ByteBuffer.allocate(0)", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411726392", "createdAt": "2020-04-20T22:11:22Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {\n+    stream.sendTrailers(trailers)\n+  }\n+\n+  override fun close(byteBuffer: ByteBuffer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyODExOA==", "bodyText": "It'd be ambiguous if we did that for trailers as well, right? Consumers calling .close() would no longer be able to differentiate between data and trailers", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411728118", "createdAt": "2020-04-20T22:15:16Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {\n+    stream.sendTrailers(trailers)\n+  }\n+\n+  override fun close(byteBuffer: ByteBuffer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNjM5Mg=="}, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczMDY2NA==", "bodyText": "Ah so the change here is to introduce the concept of closing with data versus closing with trailers", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411730664", "createdAt": "2020-04-20T22:20:42Z", "author": {"login": "buildbreaker"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {\n+    stream.sendTrailers(trailers)\n+  }\n+\n+  override fun close(byteBuffer: ByteBuffer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNjM5Mg=="}, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTczMTcwNA==", "bodyText": "Yes", "url": "https://github.com/envoyproxy/envoy-mobile/pull/798#discussion_r411731704", "createdAt": "2020-04-20T22:23:03Z", "author": {"login": "rebello95"}, "path": "library/kotlin/src/io/envoyproxy/envoymobile/EnvoyStreamEmitter.kt", "diffHunk": "@@ -29,22 +29,14 @@ class EnvoyStreamEmitter(\n     return this\n   }\n \n-  /**\n-   * For ending an associated stream and sending trailers.\n-   *\n-   * @param trailers to send with ending a stream. If null, stream will be closed with an empty data frame.\n-   */\n-  override fun close(trailers: Map<String, List<String>>?) {\n-    trailers?.let {\n-      stream.sendTrailers(it)\n-      return\n-    }\n-    stream.sendData(ByteBuffer.allocate(0), true)\n+  override fun close(trailers: Map<String, List<String>>) {\n+    stream.sendTrailers(trailers)\n+  }\n+\n+  override fun close(byteBuffer: ByteBuffer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTcyNjM5Mg=="}, "originalCommit": {"oid": "fe8a04bb5cec9518da0244a1d79f5aa57dc4c2e2"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 903, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}