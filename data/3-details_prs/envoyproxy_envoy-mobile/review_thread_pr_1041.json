{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MzQzODE5", "number": 1041, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzowOTo1N1rOEZk3vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzowOTo1N1rOEZk3vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjUzOTUwOnYy", "diffSide": "RIGHT", "path": "examples/swift/hello_world/ViewController.swift", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzowOTo1N1rOHCeF6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODowMjoyNVrOHCf_qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MjIzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    var headerMessage = \"\"\n          \n          \n            \n                    headers.allHeaders().forEach { name, value in\n          \n          \n            \n                      if kFilteredHeaders.contains(name) {\n          \n          \n            \n                        headerMessage += \"\\(name): \\(value.joined(separator: \", \"))\\n\"\n          \n          \n            \n                      }\n          \n          \n            \n                    }\n          \n          \n            \n                    let headerMessage = headers.allHeaders()\n          \n          \n            \n                      .filter { kFilteredHeaders.contains($0.key) }\n          \n          \n            \n                      .map { \"\\($0.key): \\($0.value.joined(separator: \", \"))\" }\n          \n          \n            \n                      .joined(separator: \"\\n\")", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1041#discussion_r472352233", "createdAt": "2020-08-18T17:09:57Z", "author": {"login": "rebello95"}, "path": "examples/swift/hello_world/ViewController.swift", "diffHunk": "@@ -59,14 +60,22 @@ final class ViewController: UITableViewController {\n       .newStreamPrototype()\n       .setOnResponseHeaders { [weak self] headers, _ in\n         let statusCode = headers.httpStatus ?? -1\n-        var message = \"received headers with status \\(statusCode)\"\n+        let message = \"received headers with status \\(statusCode)\"\n+\n+        var headerMessage = \"\"\n+        headers.allHeaders().forEach { name, value in\n+          if kFilteredHeaders.contains(name) {\n+            headerMessage += \"\\(name): \\(value.joined(separator: \", \"))\\n\"\n+          }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6af739d5a734703697de618136513c52074d164b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MzMzMw==", "bodyText": "This keeps the value immutable and is a bit more idiomatic", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1041#discussion_r472353333", "createdAt": "2020-08-18T17:11:45Z", "author": {"login": "rebello95"}, "path": "examples/swift/hello_world/ViewController.swift", "diffHunk": "@@ -59,14 +60,22 @@ final class ViewController: UITableViewController {\n       .newStreamPrototype()\n       .setOnResponseHeaders { [weak self] headers, _ in\n         let statusCode = headers.httpStatus ?? -1\n-        var message = \"received headers with status \\(statusCode)\"\n+        let message = \"received headers with status \\(statusCode)\"\n+\n+        var headerMessage = \"\"\n+        headers.allHeaders().forEach { name, value in\n+          if kFilteredHeaders.contains(name) {\n+            headerMessage += \"\\(name): \\(value.joined(separator: \", \"))\\n\"\n+          }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MjIzMw=="}, "originalCommit": {"oid": "6af739d5a734703697de618136513c52074d164b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MzQwMw==", "bodyText": "Nice, thanks.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1041#discussion_r472383403", "createdAt": "2020-08-18T18:02:25Z", "author": {"login": "goaway"}, "path": "examples/swift/hello_world/ViewController.swift", "diffHunk": "@@ -59,14 +60,22 @@ final class ViewController: UITableViewController {\n       .newStreamPrototype()\n       .setOnResponseHeaders { [weak self] headers, _ in\n         let statusCode = headers.httpStatus ?? -1\n-        var message = \"received headers with status \\(statusCode)\"\n+        let message = \"received headers with status \\(statusCode)\"\n+\n+        var headerMessage = \"\"\n+        headers.allHeaders().forEach { name, value in\n+          if kFilteredHeaders.contains(name) {\n+            headerMessage += \"\\(name): \\(value.joined(separator: \", \"))\\n\"\n+          }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MjIzMw=="}, "originalCommit": {"oid": "6af739d5a734703697de618136513c52074d164b"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 576, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}