{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTk3NTQx", "number": 685, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMTowMFrODfqwtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozNzo0MFrODfuPEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTMzMDQ3OnYy", "diffSide": "RIGHT", "path": "library/common/http/header_utility.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMTowMFrOFpgceQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMTowMFrOFpgceQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NzUxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.\n          \n          \n            \n             * @return RequestHeaderMapPtr, the RequestHeaderMap 1:1 transformation of the headers param.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/685#discussion_r379067513", "createdAt": "2020-02-13T19:21:00Z", "author": {"login": "rebello95"}, "path": "library/common/http/header_utility.h", "diffHunk": "@@ -17,12 +17,20 @@ namespace Utility {\n std::string convertToString(envoy_data s);\n \n /**\n- * Transform envoy_headers to HeaderMap.\n+ * Transform envoy_headers to RequestHeaderMap.\n+ * This function copies the content.\n+ * @param headers, the envoy_headers to transform.\n+ * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20281666383030ace055b792a99653f59954b836"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTMzMjA2OnYy", "diffSide": "RIGHT", "path": "library/common/http/header_utility.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMToyMFrOFpgdVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMToyMFrOFpgdVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2NzczNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.\n          \n          \n            \n             * @return RequestTrailerMapPtr, the RequestTrailerMap 1:1 transformation of the headers param.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/685#discussion_r379067734", "createdAt": "2020-02-13T19:21:20Z", "author": {"login": "rebello95"}, "path": "library/common/http/header_utility.h", "diffHunk": "@@ -17,12 +17,20 @@ namespace Utility {\n std::string convertToString(envoy_data s);\n \n /**\n- * Transform envoy_headers to HeaderMap.\n+ * Transform envoy_headers to RequestHeaderMap.\n+ * This function copies the content.\n+ * @param headers, the envoy_headers to transform.\n+ * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.\n+ */\n+RequestHeaderMapPtr toRequestHeaders(envoy_headers headers);\n+\n+/**\n+ * Transform envoy_headers to RequestHeaderMap.\n  * This function copies the content.\n  * @param headers, the envoy_headers to transform.\n  * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20281666383030ace055b792a99653f59954b836"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTMzMzYxOnYy", "diffSide": "RIGHT", "path": "library/common/http/header_utility.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMTo1MVrOFpgeVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozNTowMFrOFpl9eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2Nzk5MA==", "bodyText": "nit: might also make sense to rename headers to trailers now that we have an explicit RequestTrailerMapPtr type", "url": "https://github.com/envoyproxy/envoy-mobile/pull/685#discussion_r379067990", "createdAt": "2020-02-13T19:21:51Z", "author": {"login": "rebello95"}, "path": "library/common/http/header_utility.h", "diffHunk": "@@ -17,12 +17,20 @@ namespace Utility {\n std::string convertToString(envoy_data s);\n \n /**\n- * Transform envoy_headers to HeaderMap.\n+ * Transform envoy_headers to RequestHeaderMap.\n+ * This function copies the content.\n+ * @param headers, the envoy_headers to transform.\n+ * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.\n+ */\n+RequestHeaderMapPtr toRequestHeaders(envoy_headers headers);\n+\n+/**\n+ * Transform envoy_headers to RequestHeaderMap.\n  * This function copies the content.\n  * @param headers, the envoy_headers to transform.\n  * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.\n  */\n-HeaderMapPtr toInternalHeaders(envoy_headers headers);\n+RequestTrailerMapPtr toRequestTrailers(envoy_headers headers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20281666383030ace055b792a99653f59954b836"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1Nzg4MQ==", "bodyText": "Thoughts?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/685#discussion_r379157881", "createdAt": "2020-02-13T22:35:00Z", "author": {"login": "rebello95"}, "path": "library/common/http/header_utility.h", "diffHunk": "@@ -17,12 +17,20 @@ namespace Utility {\n std::string convertToString(envoy_data s);\n \n /**\n- * Transform envoy_headers to HeaderMap.\n+ * Transform envoy_headers to RequestHeaderMap.\n+ * This function copies the content.\n+ * @param headers, the envoy_headers to transform.\n+ * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.\n+ */\n+RequestHeaderMapPtr toRequestHeaders(envoy_headers headers);\n+\n+/**\n+ * Transform envoy_headers to RequestHeaderMap.\n  * This function copies the content.\n  * @param headers, the envoy_headers to transform.\n  * @return HeaderMapPtr, the HeaderMap 1:1 transformation of the headers param.\n  */\n-HeaderMapPtr toInternalHeaders(envoy_headers headers);\n+RequestTrailerMapPtr toRequestTrailers(envoy_headers headers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2Nzk5MA=="}, "originalCommit": {"oid": "20281666383030ace055b792a99653f59954b836"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg5MzE2OnYy", "diffSide": "RIGHT", "path": "library/common/http/header_utility.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozNDo1NVrOFpl9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozNDo1NVrOFpl9Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1Nzg1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Transform envoy_headers to RequestHeaderMap.\n          \n          \n            \n             * Transform envoy_headers to RequestTrailerMap.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/685#discussion_r379157855", "createdAt": "2020-02-13T22:34:55Z", "author": {"login": "rebello95"}, "path": "library/common/http/header_utility.h", "diffHunk": "@@ -17,12 +17,20 @@ namespace Utility {\n std::string convertToString(envoy_data s);\n \n /**\n- * Transform envoy_headers to HeaderMap.\n+ * Transform envoy_headers to RequestHeaderMap.\n+ * This function copies the content.\n+ * @param headers, the envoy_headers to transform.\n+ * @return RequestHeaderMapPtr, the RequestHeaderMap 1:1 transformation of the headers param.\n+ */\n+RequestHeaderMapPtr toRequestHeaders(envoy_headers headers);\n+\n+/**\n+ * Transform envoy_headers to RequestHeaderMap.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3788d981320e05d455de60b73acec9036d3be2dc"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg5OTcxOnYy", "diffSide": "RIGHT", "path": "test/common/http/header_utility_test.cc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozNzo0MFrOFpmBUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjozNzo0MFrOFpmBUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1ODg2Nw==", "bodyText": "toInternalHeaders doesn't exist anymore", "url": "https://github.com/envoyproxy/envoy-mobile/pull/685#discussion_r379158867", "createdAt": "2020-02-13T22:37:40Z", "author": {"login": "rebello95"}, "path": "test/common/http/header_utility_test.cc", "diffHunk": "@@ -66,6 +75,47 @@ TEST(HeaderDataConstructorTest, FromCToCpp) {\n   delete sentinel;\n }\n \n+TEST(RequestTrailerDataConstructorTest, FromCToCpp) {\n+  // Backing strings for all the envoy_datas in the c_trailers.\n+  std::vector<std::pair<std::string, std::string>> trailers = {\n+      {\"processing-duration-ms\", \"25\"}, {\"response-compression-ratio\", \"0.61\"}};\n+\n+  envoy_header* header_array = new envoy_header[trailers.size()];\n+\n+  uint32_t* sentinel = new uint32_t;\n+  *sentinel = 0;\n+  for (size_t i = 0; i < trailers.size(); i++) {\n+    header_array[i] = {\n+        envoyTestString(trailers[i].first, sentinel),\n+        envoyTestString(trailers[i].second, sentinel),\n+    };\n+  }\n+\n+  envoy_headers c_trailers = {static_cast<envoy_header_size_t>(trailers.size()), header_array};\n+  // This copy is used for assertions given that envoy_trailers are released when toInternalHeaders", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3788d981320e05d455de60b73acec9036d3be2dc"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 849, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}