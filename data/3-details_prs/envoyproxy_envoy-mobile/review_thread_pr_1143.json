{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NDM1MDE0", "number": 1143, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo0NDo1MVrOEw2urg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo0NDo1MVrOEw2urg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjYzNzkwOnYy", "diffSide": "RIGHT", "path": "library/common/jni/jni_interface.cc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjo0NDo1MVrOHmqy1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTowODoyMFrOHmv_QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMwOTA3OA==", "bodyText": "I might have my rules mixed up but do we need to delete this local ref here?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1143#discussion_r510309078", "createdAt": "2020-10-22T16:44:51Z", "author": {"login": "buildbreaker"}, "path": "library/common/jni/jni_interface.cc", "diffHunk": "@@ -362,6 +363,122 @@ static envoy_filter_trailers_status jvm_http_filter_on_response_trailers(envoy_h\n                                         /*trailers*/ native_headers};\n }\n \n+static void jvm_http_filter_set_request_callbacks(envoy_http_filter_callbacks callbacks,\n+                                                  const void* context) {\n+\n+  __android_log_write(ANDROID_LOG_VERBOSE, \"[Envoy]\", \"jvm_http_filter_set_request_callbacks\");\n+\n+  JNIEnv* env = get_env();\n+  jobject j_context = static_cast<jobject>(const_cast<void*>(context));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68cbf96f188ef90fd45a3f0421d7fb757d52db6d"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM5NDE3Nw==", "bodyText": "Yep, great catch. In a separate branch I started on last week, I'm adding caching to a bunch of the JNI refs, which in addition to being a noteworthy performance improvement, also reduces the number of locations we need to track refs like this and risk leaking.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1143#discussion_r510394177", "createdAt": "2020-10-22T19:08:20Z", "author": {"login": "goaway"}, "path": "library/common/jni/jni_interface.cc", "diffHunk": "@@ -362,6 +363,122 @@ static envoy_filter_trailers_status jvm_http_filter_on_response_trailers(envoy_h\n                                         /*trailers*/ native_headers};\n }\n \n+static void jvm_http_filter_set_request_callbacks(envoy_http_filter_callbacks callbacks,\n+                                                  const void* context) {\n+\n+  __android_log_write(ANDROID_LOG_VERBOSE, \"[Envoy]\", \"jvm_http_filter_set_request_callbacks\");\n+\n+  JNIEnv* env = get_env();\n+  jobject j_context = static_cast<jobject>(const_cast<void*>(context));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMwOTA3OA=="}, "originalCommit": {"oid": "68cbf96f188ef90fd45a3f0421d7fb757d52db6d"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 665, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}