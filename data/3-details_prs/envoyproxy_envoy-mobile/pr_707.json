{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDk1Nzcx", "number": 707, "title": "core: expose functionality for flushing stats manually", "bodyText": "Adds functionality built on top of the upstream Envoy changes in envoyproxy/envoy#10097 which will allow the bridging layers to manually flush stats based on lifecycle changes in the mobile application.\nNote: Stats must be flushed from the main Envoy thread, as validated by the following assertion failure that occurs when attempting to flush from another thread:\n[2020-02-27 14:38:43.181][4716580][critical][assert] [external/envoy/source/common/thread_local/thread_local_impl.cc:190] assert failure: std::this_thread::get_id() == main_thread_id_.\n\nFollow-up PRs will call these functions from Java/Objective-C.\nPart of #573.\nSigned-off-by: Michael Rebello me@michaelrebello.com", "createdAt": "2020-02-27T22:02:05Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/707", "merged": true, "mergeCommit": {"oid": "9b257345e36dbc82f2fb5cb95da50b33349687ca"}, "closed": true, "closedAt": "2020-03-03T00:25:03Z", "author": {"login": "rebello95"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIirrAgH2gAyMzgxMDk1NzcxOmI0MzU0MWUzMDhlMjVhYjViNzgyZDVlYWZlYWJlNTc3MTg2OWVkYmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJ3H6GgFqTM2NzYyNjAyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b43541e308e25ab5b782d5eafeabe5771869edbd", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/b43541e308e25ab5b782d5eafeabe5771869edbd", "committedDate": "2020-02-27T22:01:57Z", "message": "core: expose functionality for flushing stats manually\n\nAdds functionality built on top of the upstream Envoy changes in https://github.com/envoyproxy/envoy/pull/10097 which will allow the bridging layers to manually flush stats based on lifecycle changes in the mobile application.\n\nFollow-up PRs will call these functions from Java/Objective-C.\n\nPart of https://github.com/lyft/envoy-mobile/issues/573.\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0db7a6ece740a5f1f7413d69a779948ea14da207", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/0db7a6ece740a5f1f7413d69a779948ea14da207", "committedDate": "2020-02-27T22:47:02Z", "message": "must be called on main\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDk5NjQz", "url": "https://github.com/envoyproxy/envoy-mobile/pull/707#pullrequestreview-366099643", "createdAt": "2020-02-28T00:51:14Z", "commit": {"oid": "0db7a6ece740a5f1f7413d69a779948ea14da207"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDo1MToxNVrOFvmPpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDo1NzoyNVrOFvmW0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1Mzk4OQ==", "bodyText": "Might be worth to also document that flushing before the engine has initialized results in no flush.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/707#discussion_r385453989", "createdAt": "2020-02-28T00:51:15Z", "author": {"login": "junr03"}, "path": "library/common/main_interface.h", "diffHunk": "@@ -91,6 +91,13 @@ envoy_engine_t init_engine();\n  */\n envoy_status_t set_preferred_network(envoy_network_t network);\n \n+/**\n+ * Flush the stats sinks outside of a flushing interval.\n+ * Note: stats flushing may not be synchronous.\n+ * Therefore, this function may return prior to flushing taking place.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db7a6ece740a5f1f7413d69a779948ea14da207"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1NTYwOQ==", "bodyText": "True that we need to flush from Envoy's main thread. However, I believe this won't accomplish it, as you are blocking the platform thread until Envoy's main thread finishes execution. What we need to do is:\nif (server_instance_) {\n  server_instance_->dispatcher().post([this]() -> void {\n    server_instance_->flushStats();\n  });\n}\n(sorry if there is a syntax error, you get the idea)\nThis way we are posting the function call into the main thread's event loop.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/707#discussion_r385455609", "createdAt": "2020-02-28T00:56:40Z", "author": {"login": "junr03"}, "path": "library/common/engine.cc", "diffHunk": "@@ -106,6 +107,19 @@ Engine::~Engine() {\n   main_thread_.join();\n }\n \n+void Engine::flushStats() {\n+  // Stats must be flushed from the main thread. If we aren't on the main thread, join it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db7a6ece740a5f1f7413d69a779948ea14da207"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ1NTgyNQ==", "bodyText": "nit: just server_?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/707#discussion_r385455825", "createdAt": "2020-02-28T00:57:25Z", "author": {"login": "junr03"}, "path": "library/common/engine.h", "diffHunk": "@@ -28,16 +28,24 @@ class Engine {\n \n   Http::Dispatcher& httpDispatcher();\n \n+  /**\n+   * Flush the stats sinks outside of a flushing interval.\n+   * Note: stats flushing may not be synchronous.\n+   * Therefore, this function may return prior to flushing taking place.\n+   */\n+  void flushStats();\n+\n private:\n   envoy_status_t run(std::string config, std::string log_level);\n \n   envoy_engine_callbacks callbacks_;\n   Thread::MutexBasicLockable mutex_;\n   Thread::CondVar cv_;\n   std::thread main_thread_;\n-  std::unique_ptr<Envoy::Http::Dispatcher> http_dispatcher_;\n-  std::unique_ptr<Envoy::MainCommon> main_common_ GUARDED_BY(mutex_);\n-  Envoy::Server::ServerLifecycleNotifier::HandlePtr postinit_callback_handler_;\n+  std::unique_ptr<Http::Dispatcher> http_dispatcher_;\n+  std::unique_ptr<MainCommon> main_common_ GUARDED_BY(mutex_);\n+  Server::Instance* server_instance_;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db7a6ece740a5f1f7413d69a779948ea14da207"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2720babe88717df8d11b86bd461d1e0ae51ae4b", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/f2720babe88717df8d11b86bd461d1e0ae51ae4b", "committedDate": "2020-02-28T01:05:46Z", "message": "CR\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTg2Mjg4", "url": "https://github.com/envoyproxy/envoy-mobile/pull/707#pullrequestreview-367586288", "createdAt": "2020-03-02T22:46:52Z", "commit": {"oid": "f2720babe88717df8d11b86bd461d1e0ae51ae4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjo0Njo1MlrOFwyJ7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMjo0Njo1MlrOFwyJ7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjY5NzcwOA==", "bodyText": "So I do think this will be racy. The raw pointer is set and read from different threads, so there's at least a window where threads calling flush_stats may not see the server even though it's been set. The only time I think it would crash though is potentially on teardown. However, we've spent some time chasing down shutdown crashes, so I don't know if we really want to add to that risk.\nI would suggest leveraging the http_dispatcher and its mutex for accessing Envoy's event_dispatcher instead for now, since I think this is a risky pattern to promulgate without further protections. Additionally, I think we should limit the surface area of cross-thread interactions just to make it easier to reason about logic and improve safety.\nLong-term I'd like to split the business logic of encoding/decoding HTTP requests and handling dispatch into two separate entities, instead of having a single HTTPDispatcher.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/707#discussion_r386697708", "createdAt": "2020-03-02T22:46:52Z", "author": {"login": "goaway"}, "path": "library/common/engine.h", "diffHunk": "@@ -28,16 +28,24 @@ class Engine {\n \n   Http::Dispatcher& httpDispatcher();\n \n+  /**\n+   * Flush the stats sinks outside of a flushing interval.\n+   * Note: stats flushing may not be synchronous.\n+   * Therefore, this function may return prior to flushing taking place.\n+   */\n+  void flushStats();\n+\n private:\n   envoy_status_t run(std::string config, std::string log_level);\n \n   envoy_engine_callbacks callbacks_;\n   Thread::MutexBasicLockable mutex_;\n   Thread::CondVar cv_;\n   std::thread main_thread_;\n-  std::unique_ptr<Envoy::Http::Dispatcher> http_dispatcher_;\n-  std::unique_ptr<Envoy::MainCommon> main_common_ GUARDED_BY(mutex_);\n-  Envoy::Server::ServerLifecycleNotifier::HandlePtr postinit_callback_handler_;\n+  std::unique_ptr<Http::Dispatcher> http_dispatcher_;\n+  std::unique_ptr<MainCommon> main_common_ GUARDED_BY(mutex_);\n+  Server::Instance* server_;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2720babe88717df8d11b86bd461d1e0ae51ae4b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f36c6cc2b396ea4dae928f954014133f19236c09", "author": {"user": {"login": "rebello95", "name": "Michael Rebello"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/f36c6cc2b396ea4dae928f954014133f19236c09", "committedDate": "2020-03-03T00:23:06Z", "message": "link issue\n\nSigned-off-by: Michael Rebello <me@michaelrebello.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NjI2MDIx", "url": "https://github.com/envoyproxy/envoy-mobile/pull/707#pullrequestreview-367626021", "createdAt": "2020-03-03T00:24:49Z", "commit": {"oid": "f36c6cc2b396ea4dae928f954014133f19236c09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4290, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}