{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDg1MjAx", "number": 641, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODowNDoyNFrODcUGrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODowNjo0NlrODcUIzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDE2MTExOnYy", "diffSide": "RIGHT", "path": "library/swift/test/EnvoyClientTests.swift", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODowNDoyNFrOFkTYIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNjo0ODoyMlrOFkeSog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxMDUyOA==", "bodyText": "do we want to protect at the core layer against sendHeaders calls that do not set an authority header?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/641#discussion_r373610528", "createdAt": "2020-01-31T18:04:24Z", "author": {"login": "junr03"}, "path": "library/swift/test/EnvoyClientTests.swift", "diffHunk": "@@ -67,7 +67,7 @@ final class EnvoyClientTests: XCTestCase {\n       method: .get, scheme: \"https\", authority: \"www.envoyproxy.io\", path: \"/docs\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2683bd0335dee1613915d5b0c4cc8355f04da4d0"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NzY5Ng==", "bodyText": "That's a good callout and something we've discussed before. Right now we don't check to see if this is a valid HTTP/2 request at this layer, but we certainly could. I think it's worth discussing and/or tracking in an issue, but somewhat orthogonal to this change (since we haven't done it before either).", "url": "https://github.com/envoyproxy/envoy-mobile/pull/641#discussion_r373787696", "createdAt": "2020-02-01T16:13:39Z", "author": {"login": "goaway"}, "path": "library/swift/test/EnvoyClientTests.swift", "diffHunk": "@@ -67,7 +67,7 @@ final class EnvoyClientTests: XCTestCase {\n       method: .get, scheme: \"https\", authority: \"www.envoyproxy.io\", path: \"/docs\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxMDUyOA=="}, "originalCommit": {"oid": "2683bd0335dee1613915d5b0c4cc8355f04da4d0"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4OTM0Ng==", "bodyText": "FWIW authority is a required property when initializing the RequestBuilder, so consumers would have to explicitly set an invalid/empty authority value here. Could be worth asserting or logging in the core layer as you mentioned, though", "url": "https://github.com/envoyproxy/envoy-mobile/pull/641#discussion_r373789346", "createdAt": "2020-02-01T16:48:22Z", "author": {"login": "rebello95"}, "path": "library/swift/test/EnvoyClientTests.swift", "diffHunk": "@@ -67,7 +67,7 @@ final class EnvoyClientTests: XCTestCase {\n       method: .get, scheme: \"https\", authority: \"www.envoyproxy.io\", path: \"/docs\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxMDUyOA=="}, "originalCommit": {"oid": "2683bd0335dee1613915d5b0c4cc8355f04da4d0"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDE2NjU1OnYy", "diffSide": "RIGHT", "path": "library/objective-c/EnvoyEngine.h", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODowNjo0NlrOFkTbvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNjoxMTozN1rOFkeLxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxMTQ1NA==", "bodyText": "I think we have a templating bug. Which is that now we are not setting SNI in the template if we don't populate domain. Which actually brings the larger question of how we want to do that (and relatedly #630) for the dynamic proxy? I need to read the docs to see if that can be dynamic as well.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/641#discussion_r373611454", "createdAt": "2020-01-31T18:06:46Z", "author": {"login": "junr03"}, "path": "library/objective-c/EnvoyEngine.h", "diffHunk": "@@ -143,11 +142,10 @@ typedef NSDictionary<NSString *, NSArray<NSString *> *> EnvoyHeaders;\n /**\n  Create a new instance of the configuration.\n  */\n-- (instancetype)initWithDomain:(NSString *)domain\n-                   statsDomain:(NSString *)statsDomain\n-         connectTimeoutSeconds:(UInt32)connectTimeoutSeconds\n-             dnsRefreshSeconds:(UInt32)dnsRefreshSeconds\n-             statsFlushSeconds:(UInt32)statsFlushSeconds;\n+- (instancetype)initWithStatsDomain:(NSString *)statsDomain", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2683bd0335dee1613915d5b0c4cc8355f04da4d0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NzU2Ng==", "bodyText": "According to the docs here it sounds like SNI will happen automatically as long as there's a TLS context on the cluster:\nhttps://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_proxy", "url": "https://github.com/envoyproxy/envoy-mobile/pull/641#discussion_r373787566", "createdAt": "2020-02-01T16:11:18Z", "author": {"login": "goaway"}, "path": "library/objective-c/EnvoyEngine.h", "diffHunk": "@@ -143,11 +142,10 @@ typedef NSDictionary<NSString *, NSArray<NSString *> *> EnvoyHeaders;\n /**\n  Create a new instance of the configuration.\n  */\n-- (instancetype)initWithDomain:(NSString *)domain\n-                   statsDomain:(NSString *)statsDomain\n-         connectTimeoutSeconds:(UInt32)connectTimeoutSeconds\n-             dnsRefreshSeconds:(UInt32)dnsRefreshSeconds\n-             statsFlushSeconds:(UInt32)statsFlushSeconds;\n+- (instancetype)initWithStatsDomain:(NSString *)statsDomain", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxMTQ1NA=="}, "originalCommit": {"oid": "2683bd0335dee1613915d5b0c4cc8355f04da4d0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4NzU4OA==", "bodyText": "Will update.", "url": "https://github.com/envoyproxy/envoy-mobile/pull/641#discussion_r373787588", "createdAt": "2020-02-01T16:11:37Z", "author": {"login": "goaway"}, "path": "library/objective-c/EnvoyEngine.h", "diffHunk": "@@ -143,11 +142,10 @@ typedef NSDictionary<NSString *, NSArray<NSString *> *> EnvoyHeaders;\n /**\n  Create a new instance of the configuration.\n  */\n-- (instancetype)initWithDomain:(NSString *)domain\n-                   statsDomain:(NSString *)statsDomain\n-         connectTimeoutSeconds:(UInt32)connectTimeoutSeconds\n-             dnsRefreshSeconds:(UInt32)dnsRefreshSeconds\n-             statsFlushSeconds:(UInt32)statsFlushSeconds;\n+- (instancetype)initWithStatsDomain:(NSString *)statsDomain", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYxMTQ1NA=="}, "originalCommit": {"oid": "2683bd0335dee1613915d5b0c4cc8355f04da4d0"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 921, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}