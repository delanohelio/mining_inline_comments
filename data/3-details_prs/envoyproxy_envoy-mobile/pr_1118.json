{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNjc4NjI5", "number": 1118, "title": "filters: add core and iOS support for on-resume invocations", "bodyText": "Description: Adds support for the new on-resume invocation, fired in response to asynchronous resume callbacks.\nRisk Level: Moderate\nTesting: Unit tests\nSigned-off-by: Mike Schore mike.schore@gmail.com", "createdAt": "2020-09-23T10:33:48Z", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118", "merged": true, "mergeCommit": {"oid": "7cf3bbd96c838495eccac1efd82220f3aea3f199"}, "closed": true, "closedAt": "2020-10-13T17:58:34Z", "author": {"login": "goaway"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNR-zVABqjM4MTQwNjA0NzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSLbYSAFqTUwNzY0MDcwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbeb63f16264447be68a716e405268a12aa2e1bd", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/cbeb63f16264447be68a716e405268a12aa2e1bd", "committedDate": "2020-09-23T10:33:07Z", "message": "filters: add onAsyncResume invocation\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "ab9eaa530d0155c9341e2f7286585bb34681bf56", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/ab9eaa530d0155c9341e2f7286585bb34681bf56", "committedDate": "2020-09-28T11:35:05Z", "message": "filters: wire onResume in core PlatformBridgeFilter\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab9eaa530d0155c9341e2f7286585bb34681bf56", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/ab9eaa530d0155c9341e2f7286585bb34681bf56", "committedDate": "2020-09-28T11:35:05Z", "message": "filters: wire onResume in core PlatformBridgeFilter\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "c52880d55ef7f089e0f7da9d600a7765147171ee", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/c52880d55ef7f089e0f7da9d600a7765147171ee", "committedDate": "2020-09-29T01:22:56Z", "message": "filters: wire onResume in core PlatformBridgeFilter\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c52880d55ef7f089e0f7da9d600a7765147171ee", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/c52880d55ef7f089e0f7da9d600a7765147171ee", "committedDate": "2020-09-29T01:22:56Z", "message": "filters: wire onResume in core PlatformBridgeFilter\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "fcdd408b5eb35618e97512242f4331b0bbc26ffc", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/fcdd408b5eb35618e97512242f4331b0bbc26ffc", "committedDate": "2020-09-30T13:33:25Z", "message": "ios wiring\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fcdd408b5eb35618e97512242f4331b0bbc26ffc", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/fcdd408b5eb35618e97512242f4331b0bbc26ffc", "committedDate": "2020-09-30T13:33:25Z", "message": "ios wiring\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "bed6824f6e8f1de9c0a4466f52166434e74522eb", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/bed6824f6e8f1de9c0a4466f52166434e74522eb", "committedDate": "2020-10-01T12:33:43Z", "message": "fixes\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4c2225494ebb326a30d49d0e17417777f9d7208", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/a4c2225494ebb326a30d49d0e17417777f9d7208", "committedDate": "2020-10-05T09:03:50Z", "message": "filters: wire onResume in core PlatformBridgeFilter\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e909ff3237d54604a8b978d2b8004928dd214766", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/e909ff3237d54604a8b978d2b8004928dd214766", "committedDate": "2020-10-05T09:03:50Z", "message": "ios wiring\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99f86cc3d8172e418c47922f0e4ab66b5092e842", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/99f86cc3d8172e418c47922f0e4ab66b5092e842", "committedDate": "2020-10-05T09:03:50Z", "message": "fixes\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "133f2c264cbb15f194a1f80bfdb6b1ba2de924d2", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/133f2c264cbb15f194a1f80bfdb6b1ba2de924d2", "committedDate": "2020-10-05T09:03:50Z", "message": "more fixes\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9006065419ec478abdf7dfb36d0aa16e60cb6574", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/9006065419ec478abdf7dfb36d0aa16e60cb6574", "committedDate": "2020-10-07T11:33:33Z", "message": "compiles\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de59a96ca8ee5a4541df2e9519a458e52e2dd5f0", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/de59a96ca8ee5a4541df2e9519a458e52e2dd5f0", "committedDate": "2020-10-07T11:33:59Z", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a16d3148348de960e320dd15c1fdd4a6fd79d74", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/2a16d3148348de960e320dd15c1fdd4a6fd79d74", "committedDate": "2020-10-07T11:37:49Z", "message": "swiftlint\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/4584f8f456b6c69ef822cd98c1e954b8f6803ef0", "committedDate": "2020-10-07T11:51:24Z", "message": "runs\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bed6824f6e8f1de9c0a4466f52166434e74522eb", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/bed6824f6e8f1de9c0a4466f52166434e74522eb", "committedDate": "2020-10-01T12:33:43Z", "message": "fixes\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}, "afterCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/4584f8f456b6c69ef822cd98c1e954b8f6803ef0", "committedDate": "2020-10-07T11:51:24Z", "message": "runs\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0Mjc4NzMy", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#pullrequestreview-504278732", "createdAt": "2020-10-07T21:24:53Z", "commit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "state": "DISMISSED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMToyNDo1NFrOHeGEwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMTo1MzoxOFrOHeG2QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMxODg0OA==", "bodyText": "If these are truly arbitrary, why not start zero-indexed? I assume the -1 is coming from the same reasoning above, in which case we should probably make that clearer here", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501318848", "createdAt": "2020-10-07T21:24:54Z", "author": {"login": "rebello95"}, "path": "library/common/extensions/filters/http/platform_bridge/c_type_definitions.h", "diffHunk": "@@ -44,3 +44,7 @@ const envoy_filter_trailers_status_t kEnvoyFilterTrailersStatusStopIteration =\n // See comment above.\n const envoy_filter_trailers_status_t kEnvoyFilterTrailersStatusResumeIteration =\n     kEnvoyFilterTrailersStatusContinue - 1;\n+\n+// These values don't exist in Envoy and are essentially arbitrary.\n+const envoy_filter_resume_status_t kEnvoyFilterResumeStatusStopIteration = 1;\n+const envoy_filter_resume_status_t kEnvoyFilterResumeStatusResumeIteration = -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNTIyMg==", "bodyText": "nits on naming:\n\npending_* here might be easily misread between pending_headers/pending_request_header. Might be worth changing to headers_to_send or something like that\nwhy internal_buffer instead of pending_request_data to align with the others?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501325222", "createdAt": "2020-10-07T21:38:47Z", "author": {"login": "rebello95"}, "path": "library/common/extensions/filters/http/platform_bridge/filter.cc", "diffHunk": "@@ -313,9 +321,111 @@ PlatformBridgeFilter::encodeTrailers(Http::ResponseTrailerMap& trailers) {\n   if (status == Http::FilterTrailersStatus::StopIteration) {\n     pending_response_trailers_ = &trailers;\n   }\n+  response_complete_ = true;\n   return status;\n }\n \n+void PlatformBridgeFilter::onResumeDecoding() {\n+  Buffer::Instance* internal_buffer = nullptr;\n+  if (decoder_callbacks_->decodingBuffer()) {\n+    decoder_callbacks_->modifyDecodingBuffer([&internal_buffer](Buffer::Instance& mutable_buffer) {\n+      internal_buffer = &mutable_buffer;\n+    });\n+  }\n+\n+  envoy_headers* pending_headers = nullptr;\n+  envoy_data* pending_data = nullptr;\n+  envoy_headers* pending_trailers = nullptr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNTU1MQ==", "bodyText": "Should we assert in the else case that result.pending_headers is not passed?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501325551", "createdAt": "2020-10-07T21:39:35Z", "author": {"login": "rebello95"}, "path": "library/common/extensions/filters/http/platform_bridge/filter.cc", "diffHunk": "@@ -313,9 +321,111 @@ PlatformBridgeFilter::encodeTrailers(Http::ResponseTrailerMap& trailers) {\n   if (status == Http::FilterTrailersStatus::StopIteration) {\n     pending_response_trailers_ = &trailers;\n   }\n+  response_complete_ = true;\n   return status;\n }\n \n+void PlatformBridgeFilter::onResumeDecoding() {\n+  Buffer::Instance* internal_buffer = nullptr;\n+  if (decoder_callbacks_->decodingBuffer()) {\n+    decoder_callbacks_->modifyDecodingBuffer([&internal_buffer](Buffer::Instance& mutable_buffer) {\n+      internal_buffer = &mutable_buffer;\n+    });\n+  }\n+\n+  envoy_headers* pending_headers = nullptr;\n+  envoy_data* pending_data = nullptr;\n+  envoy_headers* pending_trailers = nullptr;\n+  if (pending_request_headers_) {\n+    *pending_headers = Http::Utility::toBridgeHeaders(*pending_request_headers_);\n+  }\n+  if (internal_buffer) {\n+    *pending_data = Buffer::Utility::copyToBridgeData(*internal_buffer);\n+  }\n+  if (pending_request_trailers_) {\n+    *pending_trailers = Http::Utility::toBridgeHeaders(*pending_request_trailers_);\n+  }\n+\n+  envoy_filter_resume_status result =\n+      platform_filter_.on_resume_request(pending_headers, pending_data, pending_trailers,\n+                                         request_complete_, platform_filter_.instance_context);\n+  if (result.status == kEnvoyFilterResumeStatusStopIteration) {\n+    return;\n+  }\n+  if (pending_request_headers_) {\n+    PlatformBridgeFilter::replaceHeaders(*pending_request_headers_, *result.pending_headers);\n+    pending_request_headers_ = nullptr;\n+    free(result.pending_headers);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNTY0Mg==", "bodyText": "Same here regarding assert", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501325642", "createdAt": "2020-10-07T21:39:44Z", "author": {"login": "rebello95"}, "path": "library/common/extensions/filters/http/platform_bridge/filter.cc", "diffHunk": "@@ -313,9 +321,111 @@ PlatformBridgeFilter::encodeTrailers(Http::ResponseTrailerMap& trailers) {\n   if (status == Http::FilterTrailersStatus::StopIteration) {\n     pending_response_trailers_ = &trailers;\n   }\n+  response_complete_ = true;\n   return status;\n }\n \n+void PlatformBridgeFilter::onResumeDecoding() {\n+  Buffer::Instance* internal_buffer = nullptr;\n+  if (decoder_callbacks_->decodingBuffer()) {\n+    decoder_callbacks_->modifyDecodingBuffer([&internal_buffer](Buffer::Instance& mutable_buffer) {\n+      internal_buffer = &mutable_buffer;\n+    });\n+  }\n+\n+  envoy_headers* pending_headers = nullptr;\n+  envoy_data* pending_data = nullptr;\n+  envoy_headers* pending_trailers = nullptr;\n+  if (pending_request_headers_) {\n+    *pending_headers = Http::Utility::toBridgeHeaders(*pending_request_headers_);\n+  }\n+  if (internal_buffer) {\n+    *pending_data = Buffer::Utility::copyToBridgeData(*internal_buffer);\n+  }\n+  if (pending_request_trailers_) {\n+    *pending_trailers = Http::Utility::toBridgeHeaders(*pending_request_trailers_);\n+  }\n+\n+  envoy_filter_resume_status result =\n+      platform_filter_.on_resume_request(pending_headers, pending_data, pending_trailers,\n+                                         request_complete_, platform_filter_.instance_context);\n+  if (result.status == kEnvoyFilterResumeStatusStopIteration) {\n+    return;\n+  }\n+  if (pending_request_headers_) {\n+    PlatformBridgeFilter::replaceHeaders(*pending_request_headers_, *result.pending_headers);\n+    pending_request_headers_ = nullptr;\n+    free(result.pending_headers);\n+  }\n+  if (internal_buffer) {\n+    internal_buffer->drain(internal_buffer->length());\n+    internal_buffer->addBufferFragment(\n+        *Buffer::BridgeFragment::createBridgeFragment(*result.pending_data));\n+    free(result.pending_data);\n+  } else if (result.pending_data) {\n+    Buffer::OwnedImpl inject_data;\n+    inject_data.addBufferFragment(\n+        *Buffer::BridgeFragment::createBridgeFragment(*result.pending_data));\n+    decoder_callbacks_->addDecodedData(inject_data, false);\n+    free(result.pending_data);\n+  }\n+  if (pending_request_trailers_) {\n+    PlatformBridgeFilter::replaceHeaders(*pending_request_trailers_, *result.pending_trailers);\n+    pending_request_trailers_ = nullptr;\n+    free(result.pending_trailers);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNjIxNg==", "bodyText": "is false referring to end_stream here? If so, is it safe to always assume false (how does the consumer close the stream?)?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501326216", "createdAt": "2020-10-07T21:41:07Z", "author": {"login": "rebello95"}, "path": "library/common/extensions/filters/http/platform_bridge/filter.cc", "diffHunk": "@@ -313,9 +321,111 @@ PlatformBridgeFilter::encodeTrailers(Http::ResponseTrailerMap& trailers) {\n   if (status == Http::FilterTrailersStatus::StopIteration) {\n     pending_response_trailers_ = &trailers;\n   }\n+  response_complete_ = true;\n   return status;\n }\n \n+void PlatformBridgeFilter::onResumeDecoding() {\n+  Buffer::Instance* internal_buffer = nullptr;\n+  if (decoder_callbacks_->decodingBuffer()) {\n+    decoder_callbacks_->modifyDecodingBuffer([&internal_buffer](Buffer::Instance& mutable_buffer) {\n+      internal_buffer = &mutable_buffer;\n+    });\n+  }\n+\n+  envoy_headers* pending_headers = nullptr;\n+  envoy_data* pending_data = nullptr;\n+  envoy_headers* pending_trailers = nullptr;\n+  if (pending_request_headers_) {\n+    *pending_headers = Http::Utility::toBridgeHeaders(*pending_request_headers_);\n+  }\n+  if (internal_buffer) {\n+    *pending_data = Buffer::Utility::copyToBridgeData(*internal_buffer);\n+  }\n+  if (pending_request_trailers_) {\n+    *pending_trailers = Http::Utility::toBridgeHeaders(*pending_request_trailers_);\n+  }\n+\n+  envoy_filter_resume_status result =\n+      platform_filter_.on_resume_request(pending_headers, pending_data, pending_trailers,\n+                                         request_complete_, platform_filter_.instance_context);\n+  if (result.status == kEnvoyFilterResumeStatusStopIteration) {\n+    return;\n+  }\n+  if (pending_request_headers_) {\n+    PlatformBridgeFilter::replaceHeaders(*pending_request_headers_, *result.pending_headers);\n+    pending_request_headers_ = nullptr;\n+    free(result.pending_headers);\n+  }\n+  if (internal_buffer) {\n+    internal_buffer->drain(internal_buffer->length());\n+    internal_buffer->addBufferFragment(\n+        *Buffer::BridgeFragment::createBridgeFragment(*result.pending_data));\n+    free(result.pending_data);\n+  } else if (result.pending_data) {\n+    Buffer::OwnedImpl inject_data;\n+    inject_data.addBufferFragment(\n+        *Buffer::BridgeFragment::createBridgeFragment(*result.pending_data));\n+    decoder_callbacks_->addDecodedData(inject_data, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNjkwOQ==", "bodyText": "I now see below that internal_buffer is reused between request/response, which I assume is the reason for that name. Are there any concerns around that state not being properly cleared before starting to receive response data?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501326909", "createdAt": "2020-10-07T21:42:46Z", "author": {"login": "rebello95"}, "path": "library/common/extensions/filters/http/platform_bridge/filter.cc", "diffHunk": "@@ -313,9 +321,111 @@ PlatformBridgeFilter::encodeTrailers(Http::ResponseTrailerMap& trailers) {\n   if (status == Http::FilterTrailersStatus::StopIteration) {\n     pending_response_trailers_ = &trailers;\n   }\n+  response_complete_ = true;\n   return status;\n }\n \n+void PlatformBridgeFilter::onResumeDecoding() {\n+  Buffer::Instance* internal_buffer = nullptr;\n+  if (decoder_callbacks_->decodingBuffer()) {\n+    decoder_callbacks_->modifyDecodingBuffer([&internal_buffer](Buffer::Instance& mutable_buffer) {\n+      internal_buffer = &mutable_buffer;\n+    });\n+  }\n+\n+  envoy_headers* pending_headers = nullptr;\n+  envoy_data* pending_data = nullptr;\n+  envoy_headers* pending_trailers = nullptr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNTIyMg=="}, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNzUzNg==", "bodyText": "I know decoding/encoding is an Envoy construct, but I think onResumeRequest/onResumeResponse would be clearer here since these are executed as a result of functions with similar names in Envoy Mobile", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501327536", "createdAt": "2020-10-07T21:44:20Z", "author": {"login": "rebello95"}, "path": "library/common/extensions/filters/http/platform_bridge/filter.h", "diffHunk": "@@ -50,6 +50,18 @@ class PlatformBridgeFilter final : public Http::PassThroughFilter,\n public:\n   PlatformBridgeFilter(PlatformBridgeFilterConfigSharedPtr config);\n \n+  // Scheduled on the dispatcher when resumeRequest is called from platform\n+  // filter callbacks. Provides a snapshot of pending request state to the\n+  // platform filter, and consumes invocation results to modify pending HTTP\n+  // entities before resuming decoding.\n+  void onResumeDecoding();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNzg5MQ==", "bodyText": "Mind documenting this?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501327891", "createdAt": "2020-10-07T21:45:07Z", "author": {"login": "rebello95"}, "path": "library/objective-c/EnvoyEngine.h", "diffHunk": "@@ -74,6 +74,17 @@ extern const int kEnvoyFilterTrailersStatusContinue;\n extern const int kEnvoyFilterTrailersStatusStopIteration;\n extern const int kEnvoyFilterTrailersStatusResumeIteration;\n \n+/// Return codes for on-resume filter invocations. These are unique to platform filters,\n+/// and used exclusively after an asynchronous request to resume iteration via callbacks.\n+extern const int kEnvoyFilterResumeStatusStopIteration;\n+extern const int kEnvoyFilterResumeStatusResumeIteration;\n+\n+@protocol EnvoyHTTPFilterCallbacks\n+\n+- (void)resumeIteration;\n+\n+@end", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyODQ2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                callbacks.resumeIteration()\n          \n          \n            \n                self.callbacks.resumeIteration()", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501328464", "createdAt": "2020-10-07T21:46:28Z", "author": {"login": "rebello95"}, "path": "library/swift/src/filters/ResponseFilterCallbacksImpl.swift", "diffHunk": "@@ -0,0 +1,18 @@\n+@_implementationOnly import EnvoyEngine\n+import Foundation\n+\n+/// Envoy implementation of ResponseFilterCallbacks\n+final class ResponseFilterCallbacksImpl: NSObject {\n+  private let callbacks: EnvoyHTTPFilterCallbacks\n+\n+  init(callbacks: EnvoyHTTPFilterCallbacks) {\n+    self.callbacks = callbacks\n+    super.init()\n+  }\n+}\n+\n+extension ResponseFilterCallbacksImpl: ResponseFilterCallbacks {\n+  func resumeResponse() {\n+    callbacks.resumeIteration()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyODUxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                callbacks.resumeIteration()\n          \n          \n            \n                self.callbacks.resumeIteration()", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501328519", "createdAt": "2020-10-07T21:46:34Z", "author": {"login": "rebello95"}, "path": "library/swift/src/filters/RequestFilterCallbacksImpl.swift", "diffHunk": "@@ -0,0 +1,18 @@\n+@_implementationOnly import EnvoyEngine\n+import Foundation\n+\n+/// Envoy implementation of RequestFilterCallbacks\n+final class RequestFilterCallbacksImpl: NSObject {\n+  private let callbacks: EnvoyHTTPFilterCallbacks\n+\n+  init(callbacks: EnvoyHTTPFilterCallbacks) {\n+    self.callbacks = callbacks\n+    super.init()\n+  }\n+}\n+\n+extension RequestFilterCallbacksImpl: RequestFilterCallbacks {\n+  func resumeRequest() {\n+    callbacks.resumeIteration()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyOTk1NQ==", "bodyText": "I know adding type annotations here isn't possible since they're varied types, but can we at least document the expected contents and lengths of these NSArrays?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501329955", "createdAt": "2020-10-07T21:49:52Z", "author": {"login": "rebello95"}, "path": "library/objective-c/EnvoyEngine.h", "diffHunk": "@@ -88,6 +99,20 @@ extern const int kEnvoyFilterTrailersStatusResumeIteration;\n \n @property (nonatomic, copy) NSArray * (^onResponseTrailers)(EnvoyHeaders *trailers);\n \n+@property (nonatomic, copy) void (^setRequestFilterCallbacks)\n+    (id<EnvoyHTTPFilterCallbacks> callbacks);\n+\n+@property (nonatomic, copy) NSArray * (^onResumeRequest)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMDI3MQ==", "bodyText": "Why do we need this?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501330271", "createdAt": "2020-10-07T21:50:34Z", "author": {"login": "rebello95"}, "path": "library/objective-c/EnvoyFilterCallbacksImpl.m", "diffHunk": "@@ -0,0 +1,20 @@\n+#import \"library/objective-c/EnvoyEngine.h\"\n+\n+#pragma mark - EnvoyHTTPFilterCallbacksImpl\n+\n+@implementation EnvoyHTTPFilterCallbacks {\n+}\n+\n+- (instancetype)init {\n+  self = [super init];\n+  if (!self) {\n+    return nil\n+  }\n+  return self;\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMDMzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @implementation EnvoyHTTPFilterCallbacks {\n          \n          \n            \n            }\n          \n          \n            \n            @implementation EnvoyHTTPFilterCallbacks", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501330333", "createdAt": "2020-10-07T21:50:41Z", "author": {"login": "rebello95"}, "path": "library/objective-c/EnvoyFilterCallbacksImpl.m", "diffHunk": "@@ -0,0 +1,20 @@\n+#import \"library/objective-c/EnvoyEngine.h\"\n+\n+#pragma mark - EnvoyHTTPFilterCallbacksImpl\n+\n+@implementation EnvoyHTTPFilterCallbacks {\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMDM3NA==", "bodyText": "Should there be a TODO here?", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501330374", "createdAt": "2020-10-07T21:50:47Z", "author": {"login": "rebello95"}, "path": "library/objective-c/EnvoyFilterCallbacksImpl.m", "diffHunk": "@@ -0,0 +1,20 @@\n+#import \"library/objective-c/EnvoyEngine.h\"\n+\n+#pragma mark - EnvoyHTTPFilterCallbacksImpl\n+\n+@implementation EnvoyHTTPFilterCallbacks {\n+}\n+\n+- (instancetype)init {\n+  self = [super init];\n+  if (!self) {\n+    return nil\n+  }\n+  return self;\n+}\n+\n+- (void)resumeIteration {\n+  NSLog(@\"async resume\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMDc5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      headers: envoyHeaders.flatMap(RequestHeaders.init),\n          \n          \n            \n                      headers: envoyHeaders.map(RequestHeaders.init),", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501330793", "createdAt": "2020-10-07T21:51:40Z", "author": {"login": "rebello95"}, "path": "library/swift/src/filters/Filter.swift", "diffHunk": "@@ -105,5 +105,55 @@ extension EnvoyHTTPFilter {\n         }\n       }\n     }\n+\n+    if let asyncRequestFilter = filter as? AsyncRequestFilter {\n+      self.setRequestFilterCallbacks = { envoyCallbacks in\n+        asyncRequestFilter.setRequestFilterCallbacks(\n+          RequestFilterCallbacksImpl(callbacks: envoyCallbacks)\n+        )\n+      }\n+\n+      self.onResumeRequest = { envoyHeaders, data, envoyTrailers, endStream in\n+        let result = asyncRequestFilter.onResumeRequest(\n+          headers: envoyHeaders.flatMap(RequestHeaders.init),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMDgzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      trailers: envoyTrailers.flatMap(RequestTrailers.init),\n          \n          \n            \n                      trailers: envoyTrailers.map(RequestTrailers.init),", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501330837", "createdAt": "2020-10-07T21:51:45Z", "author": {"login": "rebello95"}, "path": "library/swift/src/filters/Filter.swift", "diffHunk": "@@ -105,5 +105,55 @@ extension EnvoyHTTPFilter {\n         }\n       }\n     }\n+\n+    if let asyncRequestFilter = filter as? AsyncRequestFilter {\n+      self.setRequestFilterCallbacks = { envoyCallbacks in\n+        asyncRequestFilter.setRequestFilterCallbacks(\n+          RequestFilterCallbacksImpl(callbacks: envoyCallbacks)\n+        )\n+      }\n+\n+      self.onResumeRequest = { envoyHeaders, data, envoyTrailers, endStream in\n+        let result = asyncRequestFilter.onResumeRequest(\n+          headers: envoyHeaders.flatMap(RequestHeaders.init),\n+          data: data,\n+          trailers: envoyTrailers.flatMap(RequestTrailers.init),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMTI5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      headers: envoyHeaders.flatMap(ResponseHeaders.init),\n          \n          \n            \n                      headers: envoyHeaders.map(ResponseHeaders.init),", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501331299", "createdAt": "2020-10-07T21:52:44Z", "author": {"login": "rebello95"}, "path": "library/swift/src/filters/Filter.swift", "diffHunk": "@@ -105,5 +105,55 @@ extension EnvoyHTTPFilter {\n         }\n       }\n     }\n+\n+    if let asyncRequestFilter = filter as? AsyncRequestFilter {\n+      self.setRequestFilterCallbacks = { envoyCallbacks in\n+        asyncRequestFilter.setRequestFilterCallbacks(\n+          RequestFilterCallbacksImpl(callbacks: envoyCallbacks)\n+        )\n+      }\n+\n+      self.onResumeRequest = { envoyHeaders, data, envoyTrailers, endStream in\n+        let result = asyncRequestFilter.onResumeRequest(\n+          headers: envoyHeaders.flatMap(RequestHeaders.init),\n+          data: data,\n+          trailers: envoyTrailers.flatMap(RequestTrailers.init),\n+          endStream: endStream)\n+        switch result {\n+        case .resumeIteration(let headers, let data, let trailers):\n+          return [\n+            kEnvoyFilterResumeStatusResumeIteration,\n+            headers?.headers as Any,\n+            data as Any,\n+            trailers?.headers as Any,\n+          ]\n+        }\n+      }\n+    }\n+\n+    if let asyncResponseFilter = filter as? AsyncResponseFilter {\n+      self.setResponseFilterCallbacks = { envoyCallbacks in\n+        asyncResponseFilter.setResponseFilterCallbacks(\n+          ResponseFilterCallbacksImpl(callbacks: envoyCallbacks)\n+        )\n+      }\n+\n+      self.onResumeResponse = { envoyHeaders, data, envoyTrailers, endStream in\n+        let result = asyncResponseFilter.onResumeResponse(\n+          headers: envoyHeaders.flatMap(ResponseHeaders.init),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMTM0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      trailers: envoyTrailers.flatMap(ResponseTrailers.init),\n          \n          \n            \n                      trailers: envoyTrailers.map(ResponseTrailers.init),", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501331344", "createdAt": "2020-10-07T21:52:50Z", "author": {"login": "rebello95"}, "path": "library/swift/src/filters/Filter.swift", "diffHunk": "@@ -105,5 +105,55 @@ extension EnvoyHTTPFilter {\n         }\n       }\n     }\n+\n+    if let asyncRequestFilter = filter as? AsyncRequestFilter {\n+      self.setRequestFilterCallbacks = { envoyCallbacks in\n+        asyncRequestFilter.setRequestFilterCallbacks(\n+          RequestFilterCallbacksImpl(callbacks: envoyCallbacks)\n+        )\n+      }\n+\n+      self.onResumeRequest = { envoyHeaders, data, envoyTrailers, endStream in\n+        let result = asyncRequestFilter.onResumeRequest(\n+          headers: envoyHeaders.flatMap(RequestHeaders.init),\n+          data: data,\n+          trailers: envoyTrailers.flatMap(RequestTrailers.init),\n+          endStream: endStream)\n+        switch result {\n+        case .resumeIteration(let headers, let data, let trailers):\n+          return [\n+            kEnvoyFilterResumeStatusResumeIteration,\n+            headers?.headers as Any,\n+            data as Any,\n+            trailers?.headers as Any,\n+          ]\n+        }\n+      }\n+    }\n+\n+    if let asyncResponseFilter = filter as? AsyncResponseFilter {\n+      self.setResponseFilterCallbacks = { envoyCallbacks in\n+        asyncResponseFilter.setResponseFilterCallbacks(\n+          ResponseFilterCallbacksImpl(callbacks: envoyCallbacks)\n+        )\n+      }\n+\n+      self.onResumeResponse = { envoyHeaders, data, envoyTrailers, endStream in\n+        let result = asyncResponseFilter.onResumeResponse(\n+          headers: envoyHeaders.flatMap(ResponseHeaders.init),\n+          data: data,\n+          trailers: envoyTrailers.flatMap(ResponseTrailers.init),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMzMTUyMQ==", "bodyText": "asyncRequestFilter is being retained here - I assume that's intentional, but want to flag", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r501331521", "createdAt": "2020-10-07T21:53:18Z", "author": {"login": "rebello95"}, "path": "library/swift/src/filters/Filter.swift", "diffHunk": "@@ -105,5 +105,55 @@ extension EnvoyHTTPFilter {\n         }\n       }\n     }\n+\n+    if let asyncRequestFilter = filter as? AsyncRequestFilter {\n+      self.setRequestFilterCallbacks = { envoyCallbacks in\n+        asyncRequestFilter.setRequestFilterCallbacks(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MTY4Njk3", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#pullrequestreview-505168697", "createdAt": "2020-10-08T21:11:00Z", "commit": {"oid": "4584f8f456b6c69ef822cd98c1e954b8f6803ef0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98c38eff24e0485bb406db1813811b68342c7485", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/98c38eff24e0485bb406db1813811b68342c7485", "committedDate": "2020-10-12T11:46:16Z", "message": "a test and a fix\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e490ead59ca34e19e83b5a7a7afd7498647f339", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/4e490ead59ca34e19e83b5a7a7afd7498647f339", "committedDate": "2020-10-12T11:52:56Z", "message": "another test, another fix\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "976582364b13fd7bc7265abdfd9c1c2983189923", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/976582364b13fd7bc7265abdfd9c1c2983189923", "committedDate": "2020-10-12T11:53:55Z", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6c9db4c9ed477677dd3a2adf2e0555c203b4c8d", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/b6c9db4c9ed477677dd3a2adf2e0555c203b4c8d", "committedDate": "2020-10-12T12:11:27Z", "message": "add status/result assertions\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d37d6f126f412294d73747983ed9e5413fa4406", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/5d37d6f126f412294d73747983ed9e5413fa4406", "committedDate": "2020-10-12T12:14:50Z", "message": "inline comment\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd28b86508168e02746fba991c898407780002d0", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/fd28b86508168e02746fba991c898407780002d0", "committedDate": "2020-10-12T12:17:02Z", "message": "use map instead of flatMap\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2944394340b69f2097959863b275445afcd51bd", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/e2944394340b69f2097959863b275445afcd51bd", "committedDate": "2020-10-12T12:20:01Z", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f7879ab3b4054e0467a08167027cb005b75f5ac", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/9f7879ab3b4054e0467a08167027cb005b75f5ac", "committedDate": "2020-10-12T12:22:45Z", "message": "objc interface docstrings\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef16d7064c52d8e3f2b6b9c887735d28a87e9c52", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/ef16d7064c52d8e3f2b6b9c887735d28a87e9c52", "committedDate": "2020-10-12T12:23:41Z", "message": "use self in swift\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "264dff8c97345262347e4a4d9587183f9b9bfa06", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/264dff8c97345262347e4a4d9587183f9b9bfa06", "committedDate": "2020-10-12T12:25:46Z", "message": "todo\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "006b00be5d93671be8ea145ed9914ab66c353c48", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/006b00be5d93671be8ea145ed9914ab66c353c48", "committedDate": "2020-10-12T12:26:13Z", "message": "objc style\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27539473e69ec38b20d042a09ddfe941f494d704", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/27539473e69ec38b20d042a09ddfe941f494d704", "committedDate": "2020-10-12T12:33:46Z", "message": "document return tuples in objc\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2OTUwMjc3", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#pullrequestreview-506950277", "createdAt": "2020-10-12T22:18:09Z", "commit": {"oid": "27539473e69ec38b20d042a09ddfe941f494d704"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjoxODowOVrOHgO_UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMjoxODowOVrOHgO_UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU2MjA2NQ==", "bodyText": "Let's document these typedefs", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#discussion_r503562065", "createdAt": "2020-10-12T22:18:09Z", "author": {"login": "rebello95"}, "path": "library/common/extensions/filters/http/platform_bridge/c_types.h", "diffHunk": "@@ -103,11 +124,30 @@ typedef envoy_filter_data_status (*envoy_filter_on_data_f)(envoy_data data, bool\n typedef envoy_filter_trailers_status (*envoy_filter_on_trailers_f)(envoy_headers trailers,\n                                                                    const void* context);\n \n+/**\n+ * Function signature for filter invocation after asynchronous resumption. Passes a\n+ * snapshot of all HTTP state that has not yet been forwarded along the filter chain.\n+ */\n+typedef envoy_filter_resume_status (*envoy_filter_on_resume_f)(envoy_headers* headers,\n+                                                               envoy_data* data,\n+                                                               envoy_headers* trailers,\n+                                                               bool end_stream,\n+                                                               const void* context);\n+\n /**\n  * Function signature to release a filter instance once the filter chain is finished with it.\n  */\n typedef void (*envoy_filter_release_f)(const void* context);\n \n+typedef void (*envoy_filter_resume_f)(const void* context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27539473e69ec38b20d042a09ddfe941f494d704"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a558901ba523f4a24eb37070a07930aaa8db46a", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/1a558901ba523f4a24eb37070a07930aaa8db46a", "committedDate": "2020-10-13T01:25:32Z", "message": "more test coverage\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7623699559a0a216499587c606f8bbbabe74cb2", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/c7623699559a0a216499587c606f8bbbabe74cb2", "committedDate": "2020-10-13T01:27:42Z", "message": "format\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b12a36910fc15660949c23167b7ff8d032f2812c", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/b12a36910fc15660949c23167b7ff8d032f2812c", "committedDate": "2020-10-13T09:47:06Z", "message": "asan fix\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fea7997ba55290b56b01d6b24bf48f096bcccc6", "author": {"user": {"login": "goaway", "name": "Mike Schore"}}, "url": "https://github.com/envoyproxy/envoy-mobile/commit/0fea7997ba55290b56b01d6b24bf48f096bcccc6", "committedDate": "2020-10-13T09:58:27Z", "message": "additional docstrings\n\nSigned-off-by: Mike Schore <mike.schore@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NjQwNzA3", "url": "https://github.com/envoyproxy/envoy-mobile/pull/1118#pullrequestreview-507640707", "createdAt": "2020-10-13T16:46:44Z", "commit": {"oid": "0fea7997ba55290b56b01d6b24bf48f096bcccc6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4053, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}