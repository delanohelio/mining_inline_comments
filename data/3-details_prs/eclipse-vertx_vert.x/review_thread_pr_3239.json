{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NDg2NDA1", "number": 3239, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwODoyNzowNFrODWLewg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowODowOVrODWiSgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTgzMzYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwODoyNzowNFrOFaymUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODowODoxOFrOFbPKZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNjMwNw==", "bodyText": "\"Return the first param value with the specified name or @code{defaultValue} when the query param is not present.\"", "url": "https://github.com/eclipse-vertx/vert.x/pull/3239#discussion_r363636307", "createdAt": "2020-01-07T08:27:04Z", "author": {"login": "vietj"}, "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "diffHunk": "@@ -170,6 +169,18 @@ default String getParam(String paramName) {\n     return params().get(paramName);\n   }\n \n+  /**\n+   * Return the first param value or defaultValue if the query param is not provided.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0def904ddcffbcd813602956ecf8583d81c3ce5f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEwNDI5NA==", "bodyText": "Done.", "url": "https://github.com/eclipse-vertx/vert.x/pull/3239#discussion_r364104294", "createdAt": "2020-01-08T08:08:18Z", "author": {"login": "hradecek"}, "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "diffHunk": "@@ -170,6 +169,18 @@ default String getParam(String paramName) {\n     return params().get(paramName);\n   }\n \n+  /**\n+   * Return the first param value or defaultValue if the query param is not provided.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNjMwNw=="}, "originalCommit": {"oid": "0def904ddcffbcd813602956ecf8583d81c3ce5f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTgzNTIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwODoyNzo0MVrOFaynNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODowODoyNFrOFbPKhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNjUzMw==", "bodyText": "\"the param value or @code{defaultValue} when not present\"", "url": "https://github.com/eclipse-vertx/vert.x/pull/3239#discussion_r363636533", "createdAt": "2020-01-07T08:27:41Z", "author": {"login": "vietj"}, "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "diffHunk": "@@ -170,6 +169,18 @@ default String getParam(String paramName) {\n     return params().get(paramName);\n   }\n \n+  /**\n+   * Return the first param value or defaultValue if the query param is not provided.\n+   *\n+   * @param paramName    the param name\n+   * @param defaultValue the default value, must be non-null\n+   * @return the param value or default value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0def904ddcffbcd813602956ecf8583d81c3ce5f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEwNDMyNQ==", "bodyText": "Done.", "url": "https://github.com/eclipse-vertx/vert.x/pull/3239#discussion_r364104325", "createdAt": "2020-01-08T08:08:24Z", "author": {"login": "hradecek"}, "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "diffHunk": "@@ -170,6 +169,18 @@ default String getParam(String paramName) {\n     return params().get(paramName);\n   }\n \n+  /**\n+   * Return the first param value or defaultValue if the query param is not provided.\n+   *\n+   * @param paramName    the param name\n+   * @param defaultValue the default value, must be non-null\n+   * @return the param value or default value", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNjUzMw=="}, "originalCommit": {"oid": "0def904ddcffbcd813602956ecf8583d81c3ce5f"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Nzc1OTMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QyMDo0MDoyOFrOFbFLrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODowOToxNlrOFbPLfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk0MDc4MQ==", "bodyText": "This method is a good idea! \ud83d\ude0e  I know I'm nitpicking, but may I suggest to skip the contains() call and just do a get() and if nul\ufffdl, then return defaultValue?  This will skip at least one MultiMap call.", "url": "https://github.com/eclipse-vertx/vert.x/pull/3239#discussion_r363940781", "createdAt": "2020-01-07T20:40:28Z", "author": {"login": "petarov"}, "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "diffHunk": "@@ -170,6 +169,18 @@ default String getParam(String paramName) {\n     return params().get(paramName);\n   }\n \n+  /**\n+   * Return the first param value or defaultValue if the query param is not provided.\n+   *\n+   * @param paramName    the param name\n+   * @param defaultValue the default value, must be non-null\n+   * @return the param value or default value\n+   */\n+  default String getParam(String paramName, String defaultValue) {\n+    Objects.requireNonNull(defaultValue, \"defaultValue\");\n+    return params().contains(paramName) ? params().get(paramName) : defaultValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0def904ddcffbcd813602956ecf8583d81c3ce5f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEwNDU3Mw==", "bodyText": "I know I'm nitpicking\n\nNoo, I was actually thinking about this way of implementation too, but I found contains() then get() more general and interface-friendlier.\nBut you're right as definition of MultiMap#get() is: Something or null if there is no such entry.\nRe-implemented as you have suggested, thanks.", "url": "https://github.com/eclipse-vertx/vert.x/pull/3239#discussion_r364104573", "createdAt": "2020-01-08T08:09:16Z", "author": {"login": "hradecek"}, "path": "src/main/java/io/vertx/core/http/HttpServerRequest.java", "diffHunk": "@@ -170,6 +169,18 @@ default String getParam(String paramName) {\n     return params().get(paramName);\n   }\n \n+  /**\n+   * Return the first param value or defaultValue if the query param is not provided.\n+   *\n+   * @param paramName    the param name\n+   * @param defaultValue the default value, must be non-null\n+   * @return the param value or default value\n+   */\n+  default String getParam(String paramName, String defaultValue) {\n+    Objects.requireNonNull(defaultValue, \"defaultValue\");\n+    return params().contains(paramName) ? params().get(paramName) : defaultValue;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzk0MDc4MQ=="}, "originalCommit": {"oid": "0def904ddcffbcd813602956ecf8583d81c3ce5f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTU3MDU2OnYy", "diffSide": "RIGHT", "path": "src/test/java/io/vertx/core/http/HttpTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowODowOVrOFbWTEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowODowOVrOFbWTEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyMTIwMg==", "bodyText": "please start server like in other tests (using testAddress) so the test can run with other config such as native transport.", "url": "https://github.com/eclipse-vertx/vert.x/pull/3239#discussion_r364221202", "createdAt": "2020-01-08T13:08:09Z", "author": {"login": "vietj"}, "path": "src/test/java/io/vertx/core/http/HttpTest.java", "diffHunk": "@@ -782,6 +782,29 @@ public void testNoParams() {\n     await();\n   }\n \n+  @Test\n+  public void testGetParamDefaultValue() {\n+    String paramName1 = \"foo\";\n+    String paramName1Value = \"bar\";\n+    String paramName2 = \"notPresentParam\";\n+    String defaultValue = \"defaultValue\";\n+    String reqUri = String.format(\"%s/?%s=%s\", DEFAULT_TEST_URI, paramName1, paramName1Value);\n+\n+    server.requestHandler(req -> {\n+      assertTrue(req.params().contains(paramName1));\n+      assertEquals(paramName1Value, req.getParam(paramName1, defaultValue));\n+      assertFalse(req.params().contains(paramName2));\n+      assertEquals(defaultValue, req.getParam(paramName2, defaultValue));\n+      req.response().end();\n+    });\n+\n+    server.listen(onSuccess(server -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d9d24e20b84ab7b6b272ff8facb72f1753d5b0"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4533, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}