{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4ODk2Nzcz", "number": 3498, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzoyMTo0NVrOEPiEMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwODoxNjo0MFrOEQCRqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzIyMjI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/http/impl/HttpClientPush.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzoyMTo0NVrOGzSwYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzoyMTo0NVrOGzSwYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzNzg1OQ==", "bodyText": "2020 \ud83d\ude09", "url": "https://github.com/eclipse-vertx/vert.x/pull/3498#discussion_r456437859", "createdAt": "2020-07-17T13:21:45Z", "author": {"login": "jponge"}, "path": "src/main/java/io/vertx/core/http/impl/HttpClientPush.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright (c) 2011-2019 Contributors to the Eclipse Foundation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36dbbb8d7b882c208e50940ecb7edd730f5f5bfc"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjQ1NjIwOnYy", "diffSide": "RIGHT", "path": "src/test/java/io/vertx/core/spi/tracing/HttpTracerTestBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwODowODoyMVrOGz-qVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwODowODoyMVrOGz-qVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE1NzIwNw==", "bodyText": "Update or remove?", "url": "https://github.com/eclipse-vertx/vert.x/pull/3498#discussion_r457157207", "createdAt": "2020-07-20T08:08:21Z", "author": {"login": "tsegismont"}, "path": "src/test/java/io/vertx/core/spi/tracing/HttpTracerTestBase.java", "diffHunk": "@@ -156,8 +160,8 @@ public Object sendRequest(Context context, Object request, String operation, BiC\n       public void receiveResponse(Context context, Object response, Object payload, Throwable failure, TagExtractor tagExtractor) {\n         assertSame(val, context.getLocal(key));\n         assertTrue(context.removeLocal(key));\n-        assertNotNull(response);\n-        assertTrue(response instanceof HttpClientResponse);\n+//        assertNotNull(response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "005c7cade9b17bd971b2b061e5b2d67b21af5919"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MjQ5OTYzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/http/impl/VertxHttp2Stream.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwODoxNjo0MFrOGz_CbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwODoxNjo0MFrOGz_CbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzE2MzM3Mg==", "bodyText": "todo, fail ?", "url": "https://github.com/eclipse-vertx/vert.x/pull/3498#discussion_r457163372", "createdAt": "2020-07-20T08:16:40Z", "author": {"login": "tsegismont"}, "path": "src/main/java/io/vertx/core/http/impl/VertxHttp2Stream.java", "diffHunk": "@@ -210,10 +212,20 @@ final void writeData(ByteBuf chunk, boolean end, Handler<AsyncResult<Void>> hand\n     }\n   }\n \n-  void doWriteData(ByteBuf chunk, boolean end, Handler<AsyncResult<Void>> handler) {\n-    bytesWritten += chunk.readableBytes();\n-    FutureListener<Void> promise = handler == null ? null : context.promise(handler);\n-    conn.handler.writeData(stream, chunk, end, promise);\n+  void doWriteData(ByteBuf buf, boolean end, Handler<AsyncResult<Void>> handler) {\n+    ByteBuf chunk;\n+    if (buf == null && end) {\n+      chunk = Unpooled.EMPTY_BUFFER;\n+    } else {\n+      chunk = buf;\n+    }\n+    if (chunk != null) {\n+      bytesWritten += chunk.readableBytes();\n+      FutureListener<Void> promise = handler == null ? null : context.promise(handler);\n+      conn.handler.writeData(stream, chunk, end, promise);\n+    } else {\n+      // todo ??????????", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "005c7cade9b17bd971b2b061e5b2d67b21af5919"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4517, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}