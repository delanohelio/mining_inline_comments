{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyOTk5MTkx", "number": 3342, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0NDo1OVrODvKY-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0Njo0N1rODvKcbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzc5ODk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/json/JsonObject.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0NDo1OVrOGBbQ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0NDo1OVrOGBbQ7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0ODQ2Mg==", "bodyText": "either buffer or {@code Buffer}\n{@code key}", "url": "https://github.com/eclipse-vertx/vert.x/pull/3342#discussion_r404148462", "createdAt": "2020-04-06T14:44:59Z", "author": {"login": "vietj"}, "path": "src/main/java/io/vertx/core/json/JsonObject.java", "diffHunk": "@@ -285,12 +287,50 @@ public JsonArray getJsonArray(String key) {\n     if (val instanceof byte[]) {\n       return (byte[]) val;\n     }\n+    // unwrap if value is already a Buffer\n+    if (val instanceof Buffer) {\n+      return ((Buffer) val).getBytes();\n+    }\n     // assume that the value is in String format as per RFC\n     String encoded = (String) val;\n     // parse to proper type\n     return BASE64_DECODER.decode(encoded);\n   }\n \n+  /**\n+   * Get the Buffer value with the specified key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "035a2cf24ebdb1135793d1ab2a123e826d7facf1"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzgwNTYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/json/JsonObject.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0NjoyMlrOGBbVEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0NjoyMlrOGBbVEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0OTUyMg==", "bodyText": "string", "url": "https://github.com/eclipse-vertx/vert.x/pull/3342#discussion_r404149522", "createdAt": "2020-04-06T14:46:22Z", "author": {"login": "vietj"}, "path": "src/main/java/io/vertx/core/json/JsonObject.java", "diffHunk": "@@ -285,12 +287,50 @@ public JsonArray getJsonArray(String key) {\n     if (val instanceof byte[]) {\n       return (byte[]) val;\n     }\n+    // unwrap if value is already a Buffer\n+    if (val instanceof Buffer) {\n+      return ((Buffer) val).getBytes();\n+    }\n     // assume that the value is in String format as per RFC\n     String encoded = (String) val;\n     // parse to proper type\n     return BASE64_DECODER.decode(encoded);\n   }\n \n+  /**\n+   * Get the Buffer value with the specified key.\n+   *\n+   * JSON itself has no notion of a binary, this extension complies to the RFC-7493, so this method assumes there is a\n+   * String value with the key and it contains a Base64 encoded binary, which it decodes if found and returns.\n+   *\n+   * @param key the key to return the value for\n+   * @return the value or null if no value for that key\n+   * @throws java.lang.ClassCastException       if the value is not a String", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "035a2cf24ebdb1135793d1ab2a123e826d7facf1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzgwNzgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/json/JsonObject.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0Njo0OFrOGBbWYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0Njo0OFrOGBbWYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE0OTg1Ng==", "bodyText": "simply \"value\" and not \"String value\"", "url": "https://github.com/eclipse-vertx/vert.x/pull/3342#discussion_r404149856", "createdAt": "2020-04-06T14:46:48Z", "author": {"login": "vietj"}, "path": "src/main/java/io/vertx/core/json/JsonObject.java", "diffHunk": "@@ -285,12 +287,50 @@ public JsonArray getJsonArray(String key) {\n     if (val instanceof byte[]) {\n       return (byte[]) val;\n     }\n+    // unwrap if value is already a Buffer\n+    if (val instanceof Buffer) {\n+      return ((Buffer) val).getBytes();\n+    }\n     // assume that the value is in String format as per RFC\n     String encoded = (String) val;\n     // parse to proper type\n     return BASE64_DECODER.decode(encoded);\n   }\n \n+  /**\n+   * Get the Buffer value with the specified key.\n+   *\n+   * JSON itself has no notion of a binary, this extension complies to the RFC-7493, so this method assumes there is a\n+   * String value with the key and it contains a Base64 encoded binary, which it decodes if found and returns.\n+   *\n+   * @param key the key to return the value for\n+   * @return the value or null if no value for that key\n+   * @throws java.lang.ClassCastException       if the value is not a String\n+   * @throws java.lang.IllegalArgumentException if the String value is not a legal Base64 encoded value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "035a2cf24ebdb1135793d1ab2a123e826d7facf1"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4547, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}