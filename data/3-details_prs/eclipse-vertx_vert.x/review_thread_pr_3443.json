{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNTgyMjk3", "number": 3443, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTowNzoyMlrOEFBVUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTowNzoyMlrOEFBVUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzAwMTc4OnYy", "diffSide": "RIGHT", "path": "src/test/java/io/vertx/core/http/HttpTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTowNzoyMlrOGjAIvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoyNTo1MVrOGjCEkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NTU4Mg==", "bodyText": "the occupied server socket should be closed in a finally block surrounding this", "url": "https://github.com/eclipse-vertx/vert.x/pull/3443#discussion_r439355582", "createdAt": "2020-06-12T11:07:22Z", "author": {"login": "vietj"}, "path": "src/test/java/io/vertx/core/http/HttpTest.java", "diffHunk": "@@ -2704,12 +2705,13 @@ public void testGetAbsoluteURI() {\n \n   @Test\n   public void testListenInvalidPort() throws Exception {\n-    /* Port 7 is free for use by any application in Windows, so this test fails. */\n-    Assume.assumeFalse(System.getProperty(\"os.name\").startsWith(\"Windows\"));\n     server.close();\n-    server = vertx.createHttpServer(new HttpServerOptions().setPort(7));\n-    server.requestHandler(noOpHandler()).listen(onFailure(server -> testComplete()));\n-    await();\n+    try(ServerSocket occupied = new ServerSocket(0)){\n+      occupied.setReuseAddress(false);\n+      server = vertx.createHttpServer(new HttpServerOptions().setPort(occupied.getLocalPort()));\n+      server.requestHandler(noOpHandler()).listen(onFailure(server -> testComplete()));\n+      await();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76418f20fbc41d4ad4e87455c90ba75d228248e7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4MzAxNA==", "bodyText": "Please correct me if I am wrong but:\n\nThe occupied resource is opened in the try-with-resources\nServerSocket implements java.io.Closeable which extends AutoCloseable\nThe await() will prevent the try-with-resources AutoClosing the socket before\nthe test has executed.\nThe try-with-resources will close() the socket at the end\nThe (parent) pom requires Java 1.8+ which has try with resources\n\nI do see the code is not obvious if read quickly and I tried to talk to this above in \"The socket is Closable so the try with resources should close the port (after the await) \". I apologise that I did not put a comment this effect in the code (and also for the use of port 0 result of assigning a free port) but the rest of the tests are not very wordy so I was trying to adopt the same style.", "url": "https://github.com/eclipse-vertx/vert.x/pull/3443#discussion_r439383014", "createdAt": "2020-06-12T12:15:54Z", "author": {"login": "hutchig"}, "path": "src/test/java/io/vertx/core/http/HttpTest.java", "diffHunk": "@@ -2704,12 +2705,13 @@ public void testGetAbsoluteURI() {\n \n   @Test\n   public void testListenInvalidPort() throws Exception {\n-    /* Port 7 is free for use by any application in Windows, so this test fails. */\n-    Assume.assumeFalse(System.getProperty(\"os.name\").startsWith(\"Windows\"));\n     server.close();\n-    server = vertx.createHttpServer(new HttpServerOptions().setPort(7));\n-    server.requestHandler(noOpHandler()).listen(onFailure(server -> testComplete()));\n-    await();\n+    try(ServerSocket occupied = new ServerSocket(0)){\n+      occupied.setReuseAddress(false);\n+      server = vertx.createHttpServer(new HttpServerOptions().setPort(occupied.getLocalPort()));\n+      server.requestHandler(noOpHandler()).listen(onFailure(server -> testComplete()));\n+      await();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NTU4Mg=="}, "originalCommit": {"oid": "76418f20fbc41d4ad4e87455c90ba75d228248e7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NTk4OQ==", "bodyText": "ServerSocket is autoclosable and occupied is closed by the try-with-resources statement", "url": "https://github.com/eclipse-vertx/vert.x/pull/3443#discussion_r439385989", "createdAt": "2020-06-12T12:22:55Z", "author": {"login": "hutchig"}, "path": "src/test/java/io/vertx/core/http/HttpTest.java", "diffHunk": "@@ -2704,12 +2705,13 @@ public void testGetAbsoluteURI() {\n \n   @Test\n   public void testListenInvalidPort() throws Exception {\n-    /* Port 7 is free for use by any application in Windows, so this test fails. */\n-    Assume.assumeFalse(System.getProperty(\"os.name\").startsWith(\"Windows\"));\n     server.close();\n-    server = vertx.createHttpServer(new HttpServerOptions().setPort(7));\n-    server.requestHandler(noOpHandler()).listen(onFailure(server -> testComplete()));\n-    await();\n+    try(ServerSocket occupied = new ServerSocket(0)){\n+      occupied.setReuseAddress(false);\n+      server = vertx.createHttpServer(new HttpServerOptions().setPort(occupied.getLocalPort()));\n+      server.requestHandler(noOpHandler()).listen(onFailure(server -> testComplete()));\n+      await();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NTU4Mg=="}, "originalCommit": {"oid": "76418f20fbc41d4ad4e87455c90ba75d228248e7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NzI4Mw==", "bodyText": "indeed that's very correct, I am not using this pattern as we don't use it often with non blocking resources", "url": "https://github.com/eclipse-vertx/vert.x/pull/3443#discussion_r439387283", "createdAt": "2020-06-12T12:25:51Z", "author": {"login": "vietj"}, "path": "src/test/java/io/vertx/core/http/HttpTest.java", "diffHunk": "@@ -2704,12 +2705,13 @@ public void testGetAbsoluteURI() {\n \n   @Test\n   public void testListenInvalidPort() throws Exception {\n-    /* Port 7 is free for use by any application in Windows, so this test fails. */\n-    Assume.assumeFalse(System.getProperty(\"os.name\").startsWith(\"Windows\"));\n     server.close();\n-    server = vertx.createHttpServer(new HttpServerOptions().setPort(7));\n-    server.requestHandler(noOpHandler()).listen(onFailure(server -> testComplete()));\n-    await();\n+    try(ServerSocket occupied = new ServerSocket(0)){\n+      occupied.setReuseAddress(false);\n+      server = vertx.createHttpServer(new HttpServerOptions().setPort(occupied.getLocalPort()));\n+      server.requestHandler(noOpHandler()).listen(onFailure(server -> testComplete()));\n+      await();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM1NTU4Mg=="}, "originalCommit": {"oid": "76418f20fbc41d4ad4e87455c90ba75d228248e7"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4513, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}