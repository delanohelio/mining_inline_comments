{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzIwNDg5", "number": 3425, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjoxNjoyOFrOD_XY9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjoxNjoyOFrOD_XY9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzcwMTAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/vertx/core/file/impl/FileResolver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjoxNjoyOFrOGZ_P4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjoxNjoyOFrOGZ_P4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwMzg0Mg==", "bodyText": "instead of a Latch use thread.join on the thread that was started", "url": "https://github.com/eclipse-vertx/vert.x/pull/3425#discussion_r429903842", "createdAt": "2020-05-25T12:16:28Z", "author": {"login": "vietj"}, "path": "src/main/java/io/vertx/core/file/impl/FileResolver.java", "diffHunk": "@@ -377,31 +377,29 @@ private ClassLoader getClassLoader() {\n     return cl;\n   }\n \n-  private void setupCacheDir() {\n-    String cacheDirName = fileCacheDir + \"/file-cache-\" + UUID.randomUUID().toString();\n+  private synchronized void setupCacheDir(String id) {\n+    String cacheDirName = fileCacheDir + \"/file-cache-\" + id;\n     cacheDir = new File(cacheDirName);\n     if (!cacheDir.mkdirs()) {\n       throw new IllegalStateException(\"Failed to create cache dir: \" + cacheDirName);\n     }\n     // Add shutdown hook to delete on exit\n-    synchronized (this) {\n-      shutdownHook = new Thread(() -> {\n-        CountDownLatch latch = new CountDownLatch(1);\n-        new Thread(() -> {\n-          try {\n-            deleteCacheDir();\n-          } catch (IOException ignore) {\n-          }\n-          latch.countDown();\n-        }).run();\n+    shutdownHook = new Thread(() -> {\n+      CountDownLatch latch = new CountDownLatch(1);\n+      new Thread(() -> {\n         try {\n-          latch.await(10, TimeUnit.SECONDS);\n-        } catch (InterruptedException e) {\n-          Thread.currentThread().interrupt();\n+          deleteCacheDir();\n+        } catch (IOException ignore) {\n         }\n-      });\n-      Runtime.getRuntime().addShutdownHook(shutdownHook);\n-    }\n+        latch.countDown();\n+      }).start();\n+      try {\n+        latch.await(10, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24ab84a119a1a27e92ca4b1f6ea6798c2273cede"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4508, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}