{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMzcxOTYz", "number": 7348, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNzozMzoyMVrODxE1sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTo0Njo0NFrODxN-dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzg2MDk2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceXMLReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNzozMzoyMVrOGEXS4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMzoxNDoxMVrOGEZcaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIyOTE1Mw==", "bodyText": "Using @NonNullByDefault({}) is the only way to be compatible with both annotated and non-annotated classes.", "url": "https://github.com/openhab/openhab-addons/pull/7348#discussion_r407229153", "createdAt": "2020-04-12T17:33:21Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceXMLReader.java", "diffHunk": "@@ -25,18 +26,19 @@\n  * @author Kai Kreuzer - Initial contribution and API\n  *\n  */\n+@NonNullByDefault\n public class MarketplaceXMLReader extends XmlDocumentReader<Marketplace> {\n \n     public MarketplaceXMLReader() {\n         super.setClassLoader(Marketplace.class.getClassLoader());\n     }\n \n     @Override\n-    public void registerConverters(XStream xstream) {\n+    public void registerConverters(@NonNullByDefault({}) XStream xstream) {\n     }\n \n     @Override\n-    public void registerAliases(XStream xstream) {\n+    public void registerAliases(@NonNullByDefault({}) XStream xstream) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0efaf56718624d815eb5da4c3f23adb9b5793fd9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI2NDM2MQ==", "bodyText": "I have no problems with this, sometimes it is the only way to deal with libraries.", "url": "https://github.com/openhab/openhab-addons/pull/7348#discussion_r407264361", "createdAt": "2020-04-12T23:14:11Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceXMLReader.java", "diffHunk": "@@ -25,18 +26,19 @@\n  * @author Kai Kreuzer - Initial contribution and API\n  *\n  */\n+@NonNullByDefault\n public class MarketplaceXMLReader extends XmlDocumentReader<Marketplace> {\n \n     public MarketplaceXMLReader() {\n         super.setClassLoader(Marketplace.class.getClassLoader());\n     }\n \n     @Override\n-    public void registerConverters(XStream xstream) {\n+    public void registerConverters(@NonNullByDefault({}) XStream xstream) {\n     }\n \n     @Override\n-    public void registerAliases(XStream xstream) {\n+    public void registerAliases(@NonNullByDefault({}) XStream xstream) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIyOTE1Mw=="}, "originalCommit": {"oid": "0efaf56718624d815eb5da4c3f23adb9b5793fd9"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyODA0MjQ5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceProxy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQyMTowNDoxNVrOGEYsDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QwNzo0NzozMVrOGEfcjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI1MTk4MA==", "bodyText": "There is a slight chance that getNodes() is called in between the clear() and addAll(..). Perhaps we should synchronize the critical sections on cachedNodes so it's thread safe and still performs well.", "url": "https://github.com/openhab/openhab-addons/pull/7348#discussion_r407251980", "createdAt": "2020-04-12T21:04:15Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceProxy.java", "diffHunk": "@@ -81,24 +82,27 @@ public MarketplaceProxy() {\n     public synchronized void refresh() {\n         XmlDocumentReader<Marketplace> reader = new MarketplaceXMLReader();\n         try {\n+            @Nullable\n             Marketplace result = reader.readFromXML(url);\n-            cachedNodes = result.categories[0].nodes;\n+            if (result != null) {\n+                cachedNodes.clear();\n+                cachedNodes.addAll(Arrays.asList(result.categories[0].nodes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0efaf56718624d815eb5da4c3f23adb9b5793fd9"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI2MzkxOA==", "bodyText": "Why couldn't you keep cacheNodes a non-null array but just have it initialized to new Node[0]?", "url": "https://github.com/openhab/openhab-addons/pull/7348#discussion_r407263918", "createdAt": "2020-04-12T23:09:11Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceProxy.java", "diffHunk": "@@ -81,24 +82,27 @@ public MarketplaceProxy() {\n     public synchronized void refresh() {\n         XmlDocumentReader<Marketplace> reader = new MarketplaceXMLReader();\n         try {\n+            @Nullable\n             Marketplace result = reader.readFromXML(url);\n-            cachedNodes = result.categories[0].nodes;\n+            if (result != null) {\n+                cachedNodes.clear();\n+                cachedNodes.addAll(Arrays.asList(result.categories[0].nodes));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI1MTk4MA=="}, "originalCommit": {"oid": "0efaf56718624d815eb5da4c3f23adb9b5793fd9"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzM2MjcwMw==", "bodyText": "I've changed it back again. It seems like using an array here has an edge over using a collection. Usually it's the other way around so you can make the variable final to prevent null assignments and use methods like .isEmpty() instead of comparing .length to 0 etc.", "url": "https://github.com/openhab/openhab-addons/pull/7348#discussion_r407362703", "createdAt": "2020-04-13T07:47:31Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceProxy.java", "diffHunk": "@@ -81,24 +82,27 @@ public MarketplaceProxy() {\n     public synchronized void refresh() {\n         XmlDocumentReader<Marketplace> reader = new MarketplaceXMLReader();\n         try {\n+            @Nullable\n             Marketplace result = reader.readFromXML(url);\n-            cachedNodes = result.categories[0].nodes;\n+            if (result != null) {\n+                cachedNodes.clear();\n+                cachedNodes.addAll(Arrays.asList(result.categories[0].nodes));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzI1MTk4MA=="}, "originalCommit": {"oid": "0efaf56718624d815eb5da4c3f23adb9b5793fd9"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyOTM1Nzk4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceProxy.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTo0Njo0NFrOGEkRCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMTo1Mzo0M1rOGEkZTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0MTY3Mw==", "bodyText": "But it makes sense to return an immutable list here. Doesn't it?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Arrays.asList(cachedNodes);\n          \n          \n            \n                    return Collections.unmodifiableList(Arrays.asList(cachedNodes));", "url": "https://github.com/openhab/openhab-addons/pull/7348#discussion_r407441673", "createdAt": "2020-04-13T11:46:44Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceProxy.java", "diffHunk": "@@ -72,7 +71,7 @@ public MarketplaceProxy() {\n      * @return list of marketplace nodes\n      */\n     public List<Node> getNodes() {\n-        return cachedNodes != null ? Arrays.asList(cachedNodes) : Collections.emptyList();\n+        return Arrays.asList(cachedNodes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af4a1f5315b9c68f5ab4d9eb6894799ffbbe9921"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0Mzc5MA==", "bodyText": "Yes it's best to prevent code from messing with the cached values.", "url": "https://github.com/openhab/openhab-addons/pull/7348#discussion_r407443790", "createdAt": "2020-04-13T11:53:43Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.extensionservice.marketplace/src/main/java/org/openhab/extensionservice/marketplace/internal/MarketplaceProxy.java", "diffHunk": "@@ -72,7 +71,7 @@ public MarketplaceProxy() {\n      * @return list of marketplace nodes\n      */\n     public List<Node> getNodes() {\n-        return cachedNodes != null ? Arrays.asList(cachedNodes) : Collections.emptyList();\n+        return Arrays.asList(cachedNodes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ0MTY3Mw=="}, "originalCommit": {"oid": "af4a1f5315b9c68f5ab4d9eb6894799ffbbe9921"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 590, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}