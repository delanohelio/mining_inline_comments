{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MTg2MzYy", "number": 8001, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToyMDoyOFrOEIiHGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToyMDoyOFrOEIiHGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzgyOTM5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/GroupMessageStateMachine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToyMDoyOFrOGojiIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjowNDoyN1rOGoktmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3ODQwMA==", "bodyText": "To prevent unnecessary calls to Utils.getHexByte we should check if logging would occur at all.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        logger.debug(\"{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}\", address, group,\n          \n          \n            \n                                                Utils.getHexByte(cmd1), Utils.getHexByte(lastCmd1));\n          \n          \n            \n                                        if (logger.isDebugEnabled()) {\n          \n          \n            \n                                            logger.debug(\"{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}\", address, group,\n          \n          \n            \n                                                     Utils.getHexByte(cmd1), Utils.getHexByte(lastCmd1));\n          \n          \n            \n                                        }", "url": "https://github.com/openhab/openhab-addons/pull/8001#discussion_r445178400", "createdAt": "2020-06-24T21:20:28Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/GroupMessageStateMachine.java", "diffHunk": "@@ -132,7 +135,13 @@ public boolean action(GroupMessage a, InsteonAddress address, int group) {\n             case EXPECT_CLEAN:\n                 switch (a) {\n                     case BCAST:\n-                        publish = false;\n+                        if (lastCmd1 == cmd1) {\n+                            publish = false;\n+                        } else {\n+                            logger.debug(\"{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}\", address, group,\n+                                    Utils.getHexByte(cmd1), Utils.getHexByte(lastCmd1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81856e7f3b5ccdb1aca81af8a603bd6c341c2aec"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NzcyMw==", "bodyText": "Good idea, I wonder why this convention isn't used around all logger.* message.", "url": "https://github.com/openhab/openhab-addons/pull/8001#discussion_r445197723", "createdAt": "2020-06-24T22:04:27Z", "author": {"login": "robnielsen"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/GroupMessageStateMachine.java", "diffHunk": "@@ -132,7 +135,13 @@ public boolean action(GroupMessage a, InsteonAddress address, int group) {\n             case EXPECT_CLEAN:\n                 switch (a) {\n                     case BCAST:\n-                        publish = false;\n+                        if (lastCmd1 == cmd1) {\n+                            publish = false;\n+                        } else {\n+                            logger.debug(\"{} group {} cmd1 {} is not a dup BCAST, last cmd1 {}\", address, group,\n+                                    Utils.getHexByte(cmd1), Utils.getHexByte(lastCmd1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3ODQwMA=="}, "originalCommit": {"oid": "81856e7f3b5ccdb1aca81af8a603bd6c341c2aec"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4862, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}