{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MjIzNzEz", "number": 6851, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxNjowMDowNlrODZAMLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzozNDoxNFrODcAAtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTQ0MTEwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/dhcp/DHCPPacketListenerServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxNjowMDowNlrOFfLNvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxNzoxNjoyMVrOFfLcgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzMzkxNw==", "bodyText": "What is the benefit of the null-check? null is not equal to DHCPPacket.DHCPREQUEST anyway.", "url": "https://github.com/openhab/openhab-addons/pull/6851#discussion_r368233917", "createdAt": "2020-01-18T16:00:06Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/dhcp/DHCPPacketListenerServer.java", "diffHunk": "@@ -70,7 +70,7 @@ protected void receivePacket(DHCPPacket request, @Nullable InetAddress udpRemote\n \n         Byte dhcpMessageType = request.getDHCPMessageType();\n \n-        if (dhcpMessageType != DHCPPacket.DHCPREQUEST) {\n+        if (dhcpMessageType != null && dhcpMessageType != DHCPPacket.DHCPREQUEST) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "463a8c2d33a753041b1b8b9174daa567ff2d5250"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzNzY5OQ==", "bodyText": "You're 100% right !", "url": "https://github.com/openhab/openhab-addons/pull/6851#discussion_r368237699", "createdAt": "2020-01-18T17:16:21Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/dhcp/DHCPPacketListenerServer.java", "diffHunk": "@@ -70,7 +70,7 @@ protected void receivePacket(DHCPPacket request, @Nullable InetAddress udpRemote\n \n         Byte dhcpMessageType = request.getDHCPMessageType();\n \n-        if (dhcpMessageType != DHCPPacket.DHCPREQUEST) {\n+        if (dhcpMessageType != null && dhcpMessageType != DHCPPacket.DHCPREQUEST) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIzMzkxNw=="}, "originalCommit": {"oid": "463a8c2d33a753041b1b8b9174daa567ff2d5250"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjg2OTAyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/handler/SpeedTestHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzozNDoxNFrOFjzr_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxODoyODoxNlrOFkT_2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5MTMyNw==", "bodyText": "How can the user reset this counter? I'm thinking of e.g. a network connection problem which takes half a day or so.\nOr maybe a setting of configuration.maxTimeouts=0 disables timeouts at all?", "url": "https://github.com/openhab/openhab-addons/pull/6851#discussion_r373091327", "createdAt": "2020-01-30T17:34:14Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/handler/SpeedTestHandler.java", "diffHunk": "@@ -132,7 +130,17 @@ public void onError(final @Nullable SpeedTestError testError, final @Nullable St\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, errorMessage);\n             freeRefreshTask();\n             return;\n-        } else if (SpeedTestError.SOCKET_TIMEOUT.equals(testError) || SpeedTestError.SOCKET_ERROR.equals(testError)\n+        } else if (SpeedTestError.SOCKET_TIMEOUT.equals(testError)) {\n+            timeouts--;\n+            if (timeouts <= 0) {\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Max timeout count reached\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "512ff432f8d26390a641e5af93ce46dc81d65493"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM4MzI1Nw==", "bodyText": "Disabling the thing is an option no ?", "url": "https://github.com/openhab/openhab-addons/pull/6851#discussion_r373383257", "createdAt": "2020-01-31T09:22:51Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/handler/SpeedTestHandler.java", "diffHunk": "@@ -132,7 +130,17 @@ public void onError(final @Nullable SpeedTestError testError, final @Nullable St\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, errorMessage);\n             freeRefreshTask();\n             return;\n-        } else if (SpeedTestError.SOCKET_TIMEOUT.equals(testError) || SpeedTestError.SOCKET_ERROR.equals(testError)\n+        } else if (SpeedTestError.SOCKET_TIMEOUT.equals(testError)) {\n+            timeouts--;\n+            if (timeouts <= 0) {\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Max timeout count reached\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5MTMyNw=="}, "originalCommit": {"oid": "512ff432f8d26390a641e5af93ce46dc81d65493"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYyMDY5OQ==", "bodyText": "Sounds good. But what do you think of the timeout-counter disable?", "url": "https://github.com/openhab/openhab-addons/pull/6851#discussion_r373620699", "createdAt": "2020-01-31T18:28:16Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.network/src/main/java/org/openhab/binding/network/internal/handler/SpeedTestHandler.java", "diffHunk": "@@ -132,7 +130,17 @@ public void onError(final @Nullable SpeedTestError testError, final @Nullable St\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, errorMessage);\n             freeRefreshTask();\n             return;\n-        } else if (SpeedTestError.SOCKET_TIMEOUT.equals(testError) || SpeedTestError.SOCKET_ERROR.equals(testError)\n+        } else if (SpeedTestError.SOCKET_TIMEOUT.equals(testError)) {\n+            timeouts--;\n+            if (timeouts <= 0) {\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, \"Max timeout count reached\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA5MTMyNw=="}, "originalCommit": {"oid": "512ff432f8d26390a641e5af93ce46dc81d65493"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1095, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}