{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzM2NTQ0", "number": 7782, "title": "[homekit] add support for min/max values for temperature", "bodyText": "HomeKit specification supports custom min/max values as well as the min step for some characteristics, including temperature. For instance, an outside temperature sensor can have a different temperature range than an inside temperature sensor.\nJava-HAP library added support for custom min/max values recently.\nThis PR add supports for min/max/step to HomeKit binding.\nchanges:\n\nupdate to latest Java-HAP library (minor update)\nadd support for configurable min/max/step values at item level for temperatures.\nreduce level of one logging warning which is rather common and harmless\n\nCloses #3400\nSigned-off-by: Eugen Freiter freiter@gmx.de", "createdAt": "2020-05-25T12:52:22Z", "url": "https://github.com/openhab/openhab-addons/pull/7782", "merged": true, "mergeCommit": {"oid": "cd3f520d9616ba1ade0302232b24bc8948cade4c"}, "closed": true, "closedAt": "2020-05-27T18:38:30Z", "author": {"login": "yfre"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckvU9LgH2gAyNDIyNzM2NTQ0OmI2NTAyMDIzODM2ZjJhMzdiMmFhYjM2YTc3YzNiMDcyZjg4MmQyOGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclOR8YgFqTQxODc2OTUxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b6502023836f2a37b2aab36a77c3b072f882d28f", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/b6502023836f2a37b2aab36a77c3b072f882d28f", "committedDate": "2020-05-25T12:35:47Z", "message": "add support for min/max values for temperature\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTA4Mjg0", "url": "https://github.com/openhab/openhab-addons/pull/7782#pullrequestreview-417908284", "createdAt": "2020-05-26T00:24:45Z", "commit": {"oid": "b6502023836f2a37b2aab36a77c3b072f882d28f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMDoyNDo0NVrOGaLd8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwMDoyNDo0NVrOGaLd8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDEwNDA1MA==", "bodyText": "This needs to be formatted", "url": "https://github.com/openhab/openhab-addons/pull/7782#discussion_r430104050", "createdAt": "2020-05-26T00:24:45Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "diffHunk": "@@ -174,6 +174,34 @@ protected void unsubscribe(HomekitCharacteristicType characteristicType) {\n         return defaultValue;\n     }\n \n+    /**\n+     * return configuration attached to the root accessory, e.g. groupItem.\n+     * Note: result will be casted to the type of the default value.\n+     * The type for number is BigDecimal.\n+     * @param key configuration key\n+     * @param defaultValue default value\n+     * @param <T> expected type\n+     * @return configuration value\n+     */\n+    protected <T> T getAccessoryConfiguration(@NonNull String key, @NonNull T defaultValue) {\n+        return getItemConfiguration(accessory, key, defaultValue);\n+    }\n+\n+    /**\n+     * return configuration of the characteristic item, e.g. currentTemperature.\n+     * Note: result will be casted to the type of the default value.\n+     * The type for number is BigDecimal.\n+     * @param characteristicType characteristic type\n+     * @param key configuration key\n+     * @param defaultValue default value\n+     * @param <T> expected type\n+     * @return configuration value\n+     */\n+    protected <T> T getAccessoryConfiguration(@NonNull HomekitCharacteristicType characteristicType, @NonNull String key, @NonNull T defaultValue) {\n+        final Optional<HomekitTaggedItem> characteristic = getCharacteristic(characteristicType);\n+        return characteristic.isPresent()?getItemConfiguration(characteristic.get(), key,defaultValue):defaultValue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6502023836f2a37b2aab36a77c3b072f882d28f"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f428d3e2cd7ff066d756b86be541e2eec4f7b92", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/2f428d3e2cd7ff066d756b86be541e2eec4f7b92", "committedDate": "2020-05-26T15:59:49Z", "message": "run spotless\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NzY5NTE5", "url": "https://github.com/openhab/openhab-addons/pull/7782#pullrequestreview-418769519", "createdAt": "2020-05-27T00:39:33Z", "commit": {"oid": "2f428d3e2cd7ff066d756b86be541e2eec4f7b92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 424, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}