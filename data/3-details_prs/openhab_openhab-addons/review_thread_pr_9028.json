{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMDM5Mzc2", "number": 9028, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMDoxODozNlrOE5NMWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMDoxNzozMlrOE5qKOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDIwNDQwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMDoxODozNlrOHzitOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMDoxODozNlrOHzitOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgwODA1Nw==", "bodyText": "Aren't the lists returned by Arrays.asList immutable? I don't think this would work unless you make a copy of the oldScenarios  List first.", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523808057", "createdAt": "2020-11-15T20:18:36Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -263,19 +263,14 @@ private void refreshActiveScenarios() {\n             logger.debug(\"API is null [likely bridge is offline]\");\n         } else {\n             try {\n-                final String[] activeScenarios = api.getActiveScenarios();\n-                final String[] oldScenarios = this.activeScenarios.getAndSet(activeScenarios);\n-\n-                if (!ArrayUtils.isEquals(activeScenarios, oldScenarios)) {\n-                    for (String scenario : activeScenarios) {\n-                        refreshScenarioStatus(scenario);\n-                    }\n-\n-                    for (String oldScenario : oldScenarios) {\n-                        if (!ArrayUtils.contains(activeScenarios, oldScenario)) {\n-                            refreshScenarioStatus(oldScenario);\n-                        }\n-                    }\n+                final String[] apiScenarios = api.getActiveScenarios();\n+                final List<String> activeScenarios = Arrays.asList(apiScenarios);\n+                final List<String> oldScenarios = Arrays.asList(this.activeScenarios.getAndSet(apiScenarios));\n+\n+                if (!activeScenarios.equals(oldScenarios)) {\n+                    activeScenarios.forEach(this::refreshScenarioStatus);\n+                    oldScenarios.removeIf(activeScenarios::contains);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdcd377fcc0c4a7dfc737886f98e2637a4133da"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDIxMTg5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMDoyNTo1M1rOHziw4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMDoyNTo1M1rOHziw4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgwODk5Mg==", "bodyText": "Same issue here.", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523808992", "createdAt": "2020-11-15T20:25:53Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,18 +123,19 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final String[] activeScenarios = this.activeScenarios.get();\n-        final int idx = ArrayUtils.indexOf(activeScenarios, scenarioKey);\n+        final List<String> activeScenarios = Arrays.asList(this.activeScenarios.get());\n+        final int idx = activeScenarios.indexOf(scenarioKey);\n \n         // already set that way\n         if ((idx < 0 && !launch) || (idx >= 0 && launch)) {\n             return;\n+        } else if (idx >= 0) {\n+            activeScenarios.remove(scenarioKey);\n+        } else {\n+            activeScenarios.add(scenarioKey);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fdcd377fcc0c4a7dfc737886f98e2637a4133da"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDI1ODQ0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMToxNDowNVrOHzjG-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMToxNDowNVrOHzjG-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgxNDY1MA==", "bodyText": "You risk concurrency exceptions if you don't make a copy of the list here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final List<String> activeScenarios = this.activeScenarios.get();\n          \n          \n            \n                    final List<String> activeScenarios = new ArrayList<>(this.activeScenarios.get());", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523814650", "createdAt": "2020-11-15T21:14:05Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,19 +124,23 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final String[] activeScenarios = this.activeScenarios.get();\n-        final int idx = ArrayUtils.indexOf(activeScenarios, scenarioKey);\n+        final List<String> activeScenarios = this.activeScenarios.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35d04249109a75f119116dae48aab30d2bd03bc"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDMzMDMwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQyMjoyOToxM1rOHzjphw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMDoxODoxOFrOH0Px7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMzQ5NQ==", "bodyText": "For this to behave correctly in a concurrent environment you should use AtomicReference.compareAndSet to make sure that the reference has't been changed by something else before you were able to set it. Usually this is put in a while loop and only exists once the compareAndSet returns true.", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523823495", "createdAt": "2020-11-15T22:29:13Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,19 +123,23 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final String[] activeScenarios = this.activeScenarios.get();\n-        final int idx = ArrayUtils.indexOf(activeScenarios, scenarioKey);\n+        final List<String> activeScenarios = this.activeScenarios.get();\n \n-        // already set that way\n-        if ((idx < 0 && !launch) || (idx >= 0 && launch)) {\n-            return;\n+        if (activeScenarios.contains(scenarioKey)) {\n+            if (launch) {\n+                return;\n+            } else {\n+                activeScenarios.remove(scenarioKey);\n+            }\n+        } else {\n+            if (launch) {\n+                activeScenarios.add(scenarioKey);\n+            } else {\n+                return;\n+            }\n         }\n \n-        final String[] newScenarios = idx >= 0 ? (String[]) ArrayUtils.remove(activeScenarios, idx)\n-                : (String[]) ArrayUtils.add(activeScenarios, scenarioKey);\n-\n-        this.activeScenarios.set(newScenarios);\n-\n+        this.activeScenarios.set(activeScenarios);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d96e66ff31b6e94aae13dec49d92e2aca27574a"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk0MjYwMg==", "bodyText": "I wonder if this is sort of over-kill, but I changed it accordingly.", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r523942602", "createdAt": "2020-11-16T07:36:16Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,19 +123,23 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final String[] activeScenarios = this.activeScenarios.get();\n-        final int idx = ArrayUtils.indexOf(activeScenarios, scenarioKey);\n+        final List<String> activeScenarios = this.activeScenarios.get();\n \n-        // already set that way\n-        if ((idx < 0 && !launch) || (idx >= 0 && launch)) {\n-            return;\n+        if (activeScenarios.contains(scenarioKey)) {\n+            if (launch) {\n+                return;\n+            } else {\n+                activeScenarios.remove(scenarioKey);\n+            }\n+        } else {\n+            if (launch) {\n+                activeScenarios.add(scenarioKey);\n+            } else {\n+                return;\n+            }\n         }\n \n-        final String[] newScenarios = idx >= 0 ? (String[]) ArrayUtils.remove(activeScenarios, idx)\n-                : (String[]) ArrayUtils.add(activeScenarios, scenarioKey);\n-\n-        this.activeScenarios.set(newScenarios);\n-\n+        this.activeScenarios.set(activeScenarios);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMzQ5NQ=="}, "originalCommit": {"oid": "7d96e66ff31b6e94aae13dec49d92e2aca27574a"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0NjU0MQ==", "bodyText": "I'm sure it is, but if any of the atomic utility classes are going to be used, they should be used correctly.", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r524546541", "createdAt": "2020-11-16T20:18:18Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,19 +123,23 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final String[] activeScenarios = this.activeScenarios.get();\n-        final int idx = ArrayUtils.indexOf(activeScenarios, scenarioKey);\n+        final List<String> activeScenarios = this.activeScenarios.get();\n \n-        // already set that way\n-        if ((idx < 0 && !launch) || (idx >= 0 && launch)) {\n-            return;\n+        if (activeScenarios.contains(scenarioKey)) {\n+            if (launch) {\n+                return;\n+            } else {\n+                activeScenarios.remove(scenarioKey);\n+            }\n+        } else {\n+            if (launch) {\n+                activeScenarios.add(scenarioKey);\n+            } else {\n+                return;\n+            }\n         }\n \n-        final String[] newScenarios = idx >= 0 ? (String[]) ArrayUtils.remove(activeScenarios, idx)\n-                : (String[]) ArrayUtils.add(activeScenarios, scenarioKey);\n-\n-        this.activeScenarios.set(newScenarios);\n-\n+        this.activeScenarios.set(activeScenarios);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzgyMzQ5NQ=="}, "originalCommit": {"oid": "7d96e66ff31b6e94aae13dec49d92e2aca27574a"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODk1MDMyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMDoxNzozMlrOH0PwPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMDoxNzozMlrOH0PwPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDU0NjExMQ==", "bodyText": "The compareAndSet here will never return true since you always make a copy of activeScenarios.get(). The compareAndSet does reference comparison.", "url": "https://github.com/openhab/openhab-addons/pull/9028#discussion_r524546111", "createdAt": "2020-11-16T20:17:32Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neeo/src/main/java/org/openhab/binding/neeo/internal/NeeoRoomProtocol.java", "diffHunk": "@@ -123,23 +123,28 @@ public void processAction(NeeoAction action) {\n     private void processScenarioChange(String scenarioKey, boolean launch) {\n         NeeoUtil.requireNotEmpty(scenarioKey, \"scenarioKey cannot be empty\");\n \n-        final List<String> activeScenarios = this.activeScenarios.get();\n+        List<String> activeScenarios;\n+        List<String> newActiveScenarios;\n \n-        if (activeScenarios.contains(scenarioKey)) {\n-            if (launch) {\n-                return;\n-            } else {\n-                activeScenarios.remove(scenarioKey);\n-            }\n-        } else {\n-            if (launch) {\n-                activeScenarios.add(scenarioKey);\n+        do {\n+            activeScenarios = new ArrayList<>(this.activeScenarios.get());\n+            newActiveScenarios = new ArrayList<>(activeScenarios);\n+\n+            if (activeScenarios.contains(scenarioKey)) {\n+                if (launch) {\n+                    return;\n+                } else {\n+                    newActiveScenarios.remove(scenarioKey);\n+                }\n             } else {\n-                return;\n+                if (launch) {\n+                    newActiveScenarios.add(scenarioKey);\n+                } else {\n+                    return;\n+                }\n             }\n-        }\n+        } while (!this.activeScenarios.compareAndSet(activeScenarios, newActiveScenarios));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfb5b82fd49e63cb761c22df59f836fbb19099d1"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3913, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}