{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzM5Mjk3", "number": 7940, "title": "[homekit] fix corrupt storage ", "bodyText": "there are regular reports about \"lost mac address\" issue.\nhttps://community.openhab.org/t/homekit-could-not-find-existing-mac/100845/8\nhttps://community.openhab.org/t/need-to-reset-homekit-pairing-at-every-launch/13542/32\nsometimes the mac address disappears from homekit.json and one need to repair home clients with openhab.\nthis issue is difficult to reproduce. there is no place in the source code where mac address gets removed from storage. there are only 2 places related to mac address: one is writing new mac to storage, another one is reading the mac from storage.\nso, must be something like race condition and inconsistent state of the storage object\nthis PR reduces number of class which have references to storage object. it also stops a runnable that could potential try to update storage at binding stop/shutdown event.\nchanges:\n\nremove reference to storage object from HomekitCommandExtension, use a a call of HomekitImpl method instead\nstop Debouncer runnables on stop/shutdown event\nadd some additional logging.\n\nit is unclear whether it will fix the issue but imho it is at least an improvement of the storage handling and shutdown process\nSigned-off-by: Eugen Freiter freiter@gmx.de", "createdAt": "2020-06-18T20:13:17Z", "url": "https://github.com/openhab/openhab-addons/pull/7940", "merged": true, "mergeCommit": {"oid": "ac8c88b5706d43217463408ee6d950b74fba409a"}, "closed": true, "closedAt": "2020-06-20T17:19:36Z", "author": {"login": "yfre"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcshCkCgH2gAyNDM2NzM5Mjk3OjFkMzcyMzE4MGNkN2ZjNmJhNGRmNmRmMTVkNzVhMzhjNWIwNTcwZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABctK9ymgFqTQzNDQ0MTk3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/1d3723180cd7fc6ba4df6df15d75a38c5b0570e4", "committedDate": "2020-06-18T16:28:25Z", "message": "fix for race conditions\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNzQ1NzU2", "url": "https://github.com/openhab/openhab-addons/pull/7940#pullrequestreview-433745756", "createdAt": "2020-06-19T01:25:59Z", "commit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMToyNTo1OVrOGmFIjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMTozMjo1MlrOGmFPFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4MzE4MA==", "bodyText": "You should be able to remove this try/catch now", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442583180", "createdAt": "2020-06-19T01:25:59Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitCommandExtension.java", "diffHunk": "@@ -127,8 +116,7 @@ public void unsetHomekit(Homekit homekit) {\n \n     private void clearHomekitPairings(Console console) {\n         try {\n-            new HomekitAuthInfoImpl(storageService, null).clear();\n-            homekit.refreshAuthInfo();\n+            homekit.clearHomekitPairings();\n             console.println(\"Cleared HomeKit pairings\");\n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDM3MA==", "bodyText": "Instead of this constantly rescheduling itself why not just have it called with a fixed delay.\nThen you can have the future canceled inside of tryActionOrPostpone if it doesn't want to be called again?", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442584370", "createdAt": "2020-06-19T01:30:58Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "diffHunk": "@@ -74,7 +76,14 @@ void call() {\n         lastCallAttempt = clock.millis();\n         calls.incrementAndGet();\n         if (pending.compareAndSet(false, true)) {\n-            scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+            feature = scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDg1NQ==", "bodyText": "should this also change your pending AtomicBoolean here to allow future call attempts?", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442584855", "createdAt": "2020-06-19T01:32:52Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "diffHunk": "@@ -74,7 +76,14 @@ void call() {\n         lastCallAttempt = clock.millis();\n         calls.incrementAndGet();\n         if (pending.compareAndSet(false, true)) {\n-            scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+            feature = scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+        }\n+    }\n+\n+    public void stop() {\n+        logger.trace(\"stop debouncer\");\n+        if (feature != null) {\n+            feature.cancel(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff141b3a363802c630a9be9319d68d7e146ed817", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/ff141b3a363802c630a9be9319d68d7e146ed817", "committedDate": "2020-06-19T07:03:07Z", "message": "incorporate feedback\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjQwNzQy", "url": "https://github.com/openhab/openhab-addons/pull/7940#pullrequestreview-434240742", "createdAt": "2020-06-19T17:32:07Z", "commit": {"oid": "ff141b3a363802c630a9be9319d68d7e146ed817"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzozMjowOFrOGmcbjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0OTowOVrOGmc3xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDg3Nw==", "bodyText": "shouldn't this have an override annotation?", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442964877", "createdAt": "2020-06-19T17:32:08Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java", "diffHunk": "@@ -203,4 +206,15 @@ public void allowUnauthenticatedRequests(boolean allow) {\n     public List<HomekitAccessory> getAccessories() {\n         return new ArrayList<HomekitAccessory>(this.changeListener.getAccessories().values());\n     }\n+\n+    public void clearHomekitPairings() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff141b3a363802c630a9be9319d68d7e146ed817"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MDE3Mw==", "bodyText": "Yeah, you are right, it is doing some funky logic. Doesn't look like it can really be changed either. After looking more closely I actually kinda like the way it was designed, so yeah, don't change it.", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442970173", "createdAt": "2020-06-19T17:44:51Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "diffHunk": "@@ -74,7 +76,14 @@ void call() {\n         lastCallAttempt = clock.millis();\n         calls.incrementAndGet();\n         if (pending.compareAndSet(false, true)) {\n-            scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+            feature = scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDM3MA=="}, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjEwMQ==", "bodyText": "Seems wasteful to make multiple calls to storage.get during initialization. You have no idea what kind of storage is used nor how performant that storage is. Please try to minimize interactions with storage as much as possible.", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442972101", "createdAt": "2020-06-19T17:49:09Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitAuthInfoImpl.java", "diffHunk": "@@ -41,13 +40,13 @@\n     private final byte[] privateKey;\n     private final String pin;\n \n-    public HomekitAuthInfoImpl(StorageService storageService, String pin) throws InvalidAlgorithmParameterException {\n-        storage = storageService.getStorage(\"homekit\");\n-        initializeStorage();\n+    public HomekitAuthInfoImpl(final Storage storage, final String pin) throws InvalidAlgorithmParameterException {\n+        this.storage = storage;\n         this.pin = pin;\n-        mac = storage.get(\"mac\");\n-        salt = new BigInteger(storage.get(\"salt\"));\n-        privateKey = Base64.getDecoder().decode(storage.get(\"privateKey\"));\n+        initializeStorage();\n+        mac = this.storage.get(\"mac\");\n+        salt = new BigInteger(this.storage.get(\"salt\"));\n+        privateKey = Base64.getDecoder().decode(this.storage.get(\"privateKey\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff141b3a363802c630a9be9319d68d7e146ed817"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6877248f603bb5b2a1992d9d6e744b6503840eb7", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/6877248f603bb5b2a1992d9d6e744b6503840eb7", "committedDate": "2020-06-20T14:46:24Z", "message": "reduce number of interactions with the storage. fix bug in clear method\n\nSigned-off-by: Eugen Freiter <freiter@gmx.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDQxOTcw", "url": "https://github.com/openhab/openhab-addons/pull/7940#pullrequestreview-434441970", "createdAt": "2020-06-20T17:19:13Z", "commit": {"oid": "6877248f603bb5b2a1992d9d6e744b6503840eb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 293, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}