{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NjM0ODU4", "number": 9522, "title": "[ecobee] Rework discovery", "bodyText": "Fixes #9496\n@kaikreuzer Could I trouble you for a review please?", "createdAt": "2020-12-25T22:01:56Z", "url": "https://github.com/openhab/openhab-addons/pull/9522", "merged": true, "mergeCommit": {"oid": "f9b763210d67f286186eeded6c69e1001ed28d2b"}, "closed": true, "closedAt": "2020-12-30T00:18:43Z", "author": {"login": "mhilbush"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpo2tAgH2gAyNTQ1NjM0ODU4Ojk4ZjQyMWM2YmZmOGY1ZmViODdhODVmZmZhZmY3NDcxNGIzYmEzNWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdq_THOgFqTU1OTY1NzUyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "98f421c6bff8f5feb87a85fffaff74714b3ba35f", "author": {"user": {"login": "mhilbush", "name": "Mark Hilbush"}}, "url": "https://github.com/openhab/openhab-addons/commit/98f421c6bff8f5feb87a85fffaff74714b3ba35f", "committedDate": "2020-12-25T14:04:05Z", "message": "Rework discovery\n\nSigned-off-by: Mark Hilbush <mark@hilbush.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdca20202e4efb871aea707f008437444d0758a2", "author": {"user": {"login": "mhilbush", "name": "Mark Hilbush"}}, "url": "https://github.com/openhab/openhab-addons/commit/cdca20202e4efb871aea707f008437444d0758a2", "committedDate": "2020-12-25T21:57:15Z", "message": "Consolidate discovery into one service\n\nSigned-off-by: Mark Hilbush <mark@hilbush.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODk1NTkx", "url": "https://github.com/openhab/openhab-addons/pull/9522#pullrequestreview-558895591", "createdAt": "2020-12-26T23:22:43Z", "commit": {"oid": "cdca20202e4efb871aea707f008437444d0758a2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMzoyMjo0NFrOILm2Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMzozMDoyOVrOILm4vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MTc2Ng==", "bodyText": "This check should be removed. This method is called upon manually triggered scans, so it must be performed even if background discovery is not activated.", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549041766", "createdAt": "2020-12-26T23:22:44Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/discovery/EcobeeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ecobee.internal.discovery;\n+\n+import static org.openhab.binding.ecobee.internal.EcobeeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.RemoteSensorDTO;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.ThermostatDTO;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeAccountBridgeHandler;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeThermostatBridgeHandler;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link EcobeeDiscoveryService} is responsible for discovering the Ecobee\n+ * thermostats that are associated with the Ecobee Account, as well as the sensors\n+ * are associated with the Ecobee thermostats.\n+ *\n+ * @author Mark Hilbush - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EcobeeDiscoveryService extends AbstractDiscoveryService implements ThingHandlerService {\n+\n+    private final Logger logger = LoggerFactory.getLogger(EcobeeDiscoveryService.class);\n+\n+    private @NonNullByDefault({}) EcobeeAccountBridgeHandler bridgeHandler;\n+\n+    private @Nullable Future<?> discoveryJob;\n+\n+    public EcobeeDiscoveryService() {\n+        super(SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS, 8, true);\n+    }\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        if (handler instanceof EcobeeAccountBridgeHandler) {\n+            this.bridgeHandler = (EcobeeAccountBridgeHandler) handler;\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return bridgeHandler;\n+    }\n+\n+    @Override\n+    public void activate() {\n+        super.activate(null);\n+        ThingHandlerService.super.activate();\n+    }\n+\n+    @Override\n+    public void deactivate() {\n+        super.deactivate();\n+    }\n+\n+    @Override\n+    public Set<ThingTypeUID> getSupportedThingTypes() {\n+        return SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS;\n+    }\n+\n+    @Override\n+    protected void startBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Starting background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob == null || localDiscoveryJob.isCancelled()) {\n+            discoveryJob = scheduler.scheduleWithFixedDelay(this::discover, DISCOVERY_INITIAL_DELAY_SECONDS,\n+                    DISCOVERY_INTERVAL_SECONDS, TimeUnit.SECONDS);\n+        }\n+    }\n+\n+    @Override\n+    protected void stopBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Stopping background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob != null) {\n+            localDiscoveryJob.cancel(true);\n+            discoveryJob = null;\n+        }\n+    }\n+\n+    @Override\n+    public void startScan() {\n+        logger.debug(\"EcobeeDiscovery: Starting discovery scan\");\n+        discover();\n+    }\n+\n+    private void discover() {\n+        if (!bridgeHandler.isBackgroundDiscoveryEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdca20202e4efb871aea707f008437444d0758a2"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTA0MjM2NA==", "bodyText": "You should check whether isBackgroundDiscoveryEnabled returns true before scheduling this job.", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549042364", "createdAt": "2020-12-26T23:30:29Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/discovery/EcobeeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ecobee.internal.discovery;\n+\n+import static org.openhab.binding.ecobee.internal.EcobeeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.RemoteSensorDTO;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.ThermostatDTO;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeAccountBridgeHandler;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeThermostatBridgeHandler;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link EcobeeDiscoveryService} is responsible for discovering the Ecobee\n+ * thermostats that are associated with the Ecobee Account, as well as the sensors\n+ * are associated with the Ecobee thermostats.\n+ *\n+ * @author Mark Hilbush - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EcobeeDiscoveryService extends AbstractDiscoveryService implements ThingHandlerService {\n+\n+    private final Logger logger = LoggerFactory.getLogger(EcobeeDiscoveryService.class);\n+\n+    private @NonNullByDefault({}) EcobeeAccountBridgeHandler bridgeHandler;\n+\n+    private @Nullable Future<?> discoveryJob;\n+\n+    public EcobeeDiscoveryService() {\n+        super(SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS, 8, true);\n+    }\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        if (handler instanceof EcobeeAccountBridgeHandler) {\n+            this.bridgeHandler = (EcobeeAccountBridgeHandler) handler;\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return bridgeHandler;\n+    }\n+\n+    @Override\n+    public void activate() {\n+        super.activate(null);\n+        ThingHandlerService.super.activate();\n+    }\n+\n+    @Override\n+    public void deactivate() {\n+        super.deactivate();\n+    }\n+\n+    @Override\n+    public Set<ThingTypeUID> getSupportedThingTypes() {\n+        return SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS;\n+    }\n+\n+    @Override\n+    protected void startBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Starting background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob == null || localDiscoveryJob.isCancelled()) {\n+            discoveryJob = scheduler.scheduleWithFixedDelay(this::discover, DISCOVERY_INITIAL_DELAY_SECONDS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdca20202e4efb871aea707f008437444d0758a2"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5546563d28a615f9e15b23483e988318a39a6a91", "author": {"user": {"login": "mhilbush", "name": "Mark Hilbush"}}, "url": "https://github.com/openhab/openhab-addons/commit/5546563d28a615f9e15b23483e988318a39a6a91", "committedDate": "2020-12-27T18:04:48Z", "message": "Address review feedback\n\nSigned-off-by: Mark Hilbush <mark@hilbush.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4OTczNzk5", "url": "https://github.com/openhab/openhab-addons/pull/9522#pullrequestreview-558973799", "createdAt": "2020-12-28T01:58:38Z", "commit": {"oid": "5546563d28a615f9e15b23483e988318a39a6a91"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwMTo1ODozOVrOILv6nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwMjowNDozOVrOILv9RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDMwMA==", "bodyText": "You don't need to call this since the super implementation is empty by default.", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549190300", "createdAt": "2020-12-28T01:58:39Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/discovery/EcobeeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ecobee.internal.discovery;\n+\n+import static org.openhab.binding.ecobee.internal.EcobeeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.RemoteSensorDTO;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.ThermostatDTO;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeAccountBridgeHandler;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeThermostatBridgeHandler;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link EcobeeDiscoveryService} is responsible for discovering the Ecobee\n+ * thermostats that are associated with the Ecobee Account, as well as the sensors\n+ * are associated with the Ecobee thermostats.\n+ *\n+ * @author Mark Hilbush - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EcobeeDiscoveryService extends AbstractDiscoveryService implements ThingHandlerService {\n+\n+    private final Logger logger = LoggerFactory.getLogger(EcobeeDiscoveryService.class);\n+\n+    private @NonNullByDefault({}) EcobeeAccountBridgeHandler bridgeHandler;\n+\n+    private @Nullable Future<?> discoveryJob;\n+\n+    public EcobeeDiscoveryService() {\n+        super(SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS, 8, true);\n+    }\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        if (handler instanceof EcobeeAccountBridgeHandler) {\n+            this.bridgeHandler = (EcobeeAccountBridgeHandler) handler;\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return bridgeHandler;\n+    }\n+\n+    @Override\n+    public void activate() {\n+        super.activate(null);\n+        ThingHandlerService.super.activate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5546563d28a615f9e15b23483e988318a39a6a91"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDY1Mw==", "bodyText": "Maybe this should be synchronized instead of discoverThermostats() and discoverSensors().", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549190653", "createdAt": "2020-12-28T02:02:05Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/discovery/EcobeeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,186 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.ecobee.internal.discovery;\n+\n+import static org.openhab.binding.ecobee.internal.EcobeeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.RemoteSensorDTO;\n+import org.openhab.binding.ecobee.internal.dto.thermostat.ThermostatDTO;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeAccountBridgeHandler;\n+import org.openhab.binding.ecobee.internal.handler.EcobeeThermostatBridgeHandler;\n+import org.openhab.core.config.discovery.AbstractDiscoveryService;\n+import org.openhab.core.config.discovery.DiscoveryResult;\n+import org.openhab.core.config.discovery.DiscoveryResultBuilder;\n+import org.openhab.core.thing.Thing;\n+import org.openhab.core.thing.ThingStatus;\n+import org.openhab.core.thing.ThingTypeUID;\n+import org.openhab.core.thing.ThingUID;\n+import org.openhab.core.thing.binding.ThingHandler;\n+import org.openhab.core.thing.binding.ThingHandlerService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link EcobeeDiscoveryService} is responsible for discovering the Ecobee\n+ * thermostats that are associated with the Ecobee Account, as well as the sensors\n+ * are associated with the Ecobee thermostats.\n+ *\n+ * @author Mark Hilbush - Initial contribution\n+ */\n+@NonNullByDefault\n+public class EcobeeDiscoveryService extends AbstractDiscoveryService implements ThingHandlerService {\n+\n+    private final Logger logger = LoggerFactory.getLogger(EcobeeDiscoveryService.class);\n+\n+    private @NonNullByDefault({}) EcobeeAccountBridgeHandler bridgeHandler;\n+\n+    private @Nullable Future<?> discoveryJob;\n+\n+    public EcobeeDiscoveryService() {\n+        super(SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS, 8, true);\n+    }\n+\n+    @Override\n+    public void setThingHandler(@Nullable ThingHandler handler) {\n+        if (handler instanceof EcobeeAccountBridgeHandler) {\n+            this.bridgeHandler = (EcobeeAccountBridgeHandler) handler;\n+        }\n+    }\n+\n+    @Override\n+    public @Nullable ThingHandler getThingHandler() {\n+        return bridgeHandler;\n+    }\n+\n+    @Override\n+    public void activate() {\n+        super.activate(null);\n+        ThingHandlerService.super.activate();\n+    }\n+\n+    @Override\n+    public void deactivate() {\n+        super.deactivate();\n+    }\n+\n+    @Override\n+    public Set<ThingTypeUID> getSupportedThingTypes() {\n+        return SUPPORTED_THERMOSTAT_AND_SENSOR_THING_TYPES_UIDS;\n+    }\n+\n+    @Override\n+    protected void startBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Starting background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob == null || localDiscoveryJob.isCancelled()) {\n+            discoveryJob = scheduler.scheduleWithFixedDelay(this::backgroundDiscover, DISCOVERY_INITIAL_DELAY_SECONDS,\n+                    DISCOVERY_INTERVAL_SECONDS, TimeUnit.SECONDS);\n+        }\n+    }\n+\n+    @Override\n+    protected void stopBackgroundDiscovery() {\n+        logger.debug(\"EcobeeDiscovery: Stopping background discovery job\");\n+        Future<?> localDiscoveryJob = discoveryJob;\n+        if (localDiscoveryJob != null) {\n+            localDiscoveryJob.cancel(true);\n+            discoveryJob = null;\n+        }\n+    }\n+\n+    @Override\n+    public void startScan() {\n+        logger.debug(\"EcobeeDiscovery: Starting discovery scan\");\n+        discover();\n+    }\n+\n+    private void backgroundDiscover() {\n+        if (!bridgeHandler.isBackgroundDiscoveryEnabled()) {\n+            return;\n+        }\n+        discover();\n+    }\n+\n+    private void discover() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5546563d28a615f9e15b23483e988318a39a6a91"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTE5MDk4MQ==", "bodyText": "Is this method ever called?", "url": "https://github.com/openhab/openhab-addons/pull/9522#discussion_r549190981", "createdAt": "2020-12-28T02:04:39Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ecobee/src/main/java/org/openhab/binding/ecobee/internal/handler/EcobeeThermostatBridgeHandler.java", "diffHunk": "@@ -179,8 +163,8 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         });\n     }\n \n-    public void setDiscoveryService(SensorDiscoveryService discoveryService) {\n-        this.discoveryService = discoveryService;\n+    public boolean isBackgroundDiscoveryEnabled() {\n+        return ((EcobeeAccountBridgeHandler) getBridge().getHandler()).isBackgroundDiscoveryEnabled();\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5546563d28a615f9e15b23483e988318a39a6a91"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89f444a4e73b3395426071138e4008209fed1d3b", "author": {"user": {"login": "mhilbush", "name": "Mark Hilbush"}}, "url": "https://github.com/openhab/openhab-addons/commit/89f444a4e73b3395426071138e4008209fed1d3b", "committedDate": "2020-12-28T14:29:24Z", "message": "Address review feedback\n\nSigned-off-by: Mark Hilbush <mark@hilbush.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjE1NjY4", "url": "https://github.com/openhab/openhab-addons/pull/9522#pullrequestreview-559215668", "createdAt": "2020-12-28T16:34:09Z", "commit": {"oid": "89f444a4e73b3395426071138e4008209fed1d3b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NjU3NTI4", "url": "https://github.com/openhab/openhab-addons/pull/9522#pullrequestreview-559657528", "createdAt": "2020-12-29T18:46:57Z", "commit": {"oid": "89f444a4e73b3395426071138e4008209fed1d3b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3617, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}