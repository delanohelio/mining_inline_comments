{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzMzNTA2", "number": 7690, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo1Nzo0NFrOD96QWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowNjoxM1rOD96dGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjQ0MTg3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/CeilingDeviceWithNightDevice.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo1Nzo0NFrOGXsKAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo1Nzo0NFrOGXsKAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5Mzg5MQ==", "bodyText": "Some of our build tools don't like EOF without a newline. So add a newline here.", "url": "https://github.com/openhab/openhab-addons/pull/7690#discussion_r427493891", "createdAt": "2020-05-19T17:57:44Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/lib/device/CeilingDeviceWithNightDevice.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.yeelight.internal.lib.device;\n+\n+import org.openhab.binding.yeelight.internal.lib.enums.ActiveMode;\n+import org.openhab.binding.yeelight.internal.lib.enums.DeviceType;\n+import org.openhab.binding.yeelight.internal.lib.enums.MethodAction;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+\n+/**\n+ * The {@link CeilingDeviceWithNightDevice} contains methods for handling the ceiling device with ambient light.\n+ *\n+ * @author DragonNP - Initial contribution\n+ */\n+public class CeilingDeviceWithNightDevice extends CeilingDevice\n+        implements DeviceWithNightlight {\n+    private final Logger logger = LoggerFactory.getLogger(CeilingDeviceWithNightDevice.class);\n+\n+    public CeilingDeviceWithNightDevice(String id) {\n+        super(id);\n+\n+        mDeviceType = DeviceType.ceiling1;\n+    }\n+\n+    @Override\n+    public void onNotify(String msg) {\n+        logger.debug(\"Got state: {}\", msg);\n+\n+        JsonObject result = new JsonParser().parse(msg).getAsJsonObject();\n+\n+        if (result.has(\"id\")) {\n+            String id = result.get(\"id\").getAsString();\n+            // for cmd transaction.\n+\n+            if (mQueryList.contains(id)) {\n+                JsonArray status = result.get(\"result\").getAsJsonArray();\n+\n+                final int activeMode = status.get(8).getAsInt();\n+                mDeviceStatus.setActiveMode(ActiveMode.values()[activeMode]);\n+            }\n+        }\n+\n+        super.onNotify(msg);\n+    }\n+\n+    @Override\n+    public void toggleNightlightMode(boolean turnOn) {\n+        if (turnOn) {\n+            mConnection.invoke(\n+                    new DeviceMethod(MethodAction.SCENE, new Object[] { \"nightlight\", mDeviceStatus.getBrightness() }));\n+        } else {\n+            mConnection.invoke(MethodFactory.buildCTMethod(mDeviceStatus.getCt(), DeviceMethod.EFFECT_SMOOTH, 500));\n+        }\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103a851fec7cf6b10af2e436bfdc2049655d697c"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjQ1NjY0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/handler/YeelightCeilingWithNightHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowMToyNlrOGXsTcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowMToyNlrOGXsTcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5NjMwNA==", "bodyText": "I don't think you need to override this. YeelightCeilingHandler already implements this for you, unless you want to fix the string instead.", "url": "https://github.com/openhab/openhab-addons/pull/7690#discussion_r427496304", "createdAt": "2020-05-19T18:01:26Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/handler/YeelightCeilingWithNightHandler.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.yeelight.internal.handler;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.yeelight.internal.YeelightBindingConstants;\n+import org.openhab.binding.yeelight.internal.lib.device.DeviceStatus;\n+import org.openhab.binding.yeelight.internal.lib.enums.ActiveMode;\n+\n+/**\n+ * The {@link YeelightCeilingWithNightHandler} is responsible for handling commands, which are\n+ * sent to one of the channels.\n+ *\n+ * @author DragonNP - Initial contribution\n+ */\n+public class YeelightCeilingWithNightHandler extends YeelightHandlerBase {\n+\n+    public YeelightCeilingWithNightHandler(Thing thing) {\n+        super(thing);\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+        handleCommandHelper(channelUID, command, \"Handle ceiling ambient light command\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103a851fec7cf6b10af2e436bfdc2049655d697c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjQ2ODY4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/handler/YeelightCeilingWithNightHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowNDozOVrOGXsa-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowNDozOVrOGXsa-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5ODIzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class YeelightCeilingWithNightHandler extends YeelightHandlerBase {\n          \n          \n            \n            public class YeelightCeilingWithNightHandler extends YeelightCeilingHandler {", "url": "https://github.com/openhab/openhab-addons/pull/7690#discussion_r427498233", "createdAt": "2020-05-19T18:04:39Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/handler/YeelightCeilingWithNightHandler.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.yeelight.internal.handler;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.yeelight.internal.YeelightBindingConstants;\n+import org.openhab.binding.yeelight.internal.lib.device.DeviceStatus;\n+import org.openhab.binding.yeelight.internal.lib.enums.ActiveMode;\n+\n+/**\n+ * The {@link YeelightCeilingWithNightHandler} is responsible for handling commands, which are\n+ * sent to one of the channels.\n+ *\n+ * @author DragonNP - Initial contribution\n+ */\n+public class YeelightCeilingWithNightHandler extends YeelightHandlerBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103a851fec7cf6b10af2e436bfdc2049655d697c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjQ3NDUwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/YeelightHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowNjoxM1rOGXserg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODowNjoxM1rOGXserg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ5OTE4Mg==", "bodyText": "Also, please use your real name in the authoring tags", "url": "https://github.com/openhab/openhab-addons/pull/7690#discussion_r427499182", "createdAt": "2020-05-19T18:06:13Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.yeelight/src/main/java/org/openhab/binding/yeelight/internal/YeelightHandlerFactory.java", "diffHunk": "@@ -29,6 +29,7 @@\n  * The {@link YeelightHandlerFactory} is responsible for returning supported things and handlers for the devices.\n  *\n  * @author Coaster Li - Initial contribution\n+ * @author DragonNP - Added YeelightCeilingWithNightHandler for Ceiling 3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "103a851fec7cf6b10af2e436bfdc2049655d697c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 54, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}