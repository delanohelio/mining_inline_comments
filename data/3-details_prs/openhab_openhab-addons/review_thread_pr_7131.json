{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjYwODM4", "number": 7131, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMDowNTozNVrODmgM5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjoyNDo0NVrODmwa3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzAwMDcxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.groheondus/src/main/java/org/openhab/binding/groheondus/internal/discovery/GroheOndusDiscoveryService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMDowNTozNVrOFz9Vzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDozNjoxMlrOF0JY3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAyNjcwMg==", "bodyText": "Given that they are two Appliance classes in the api I would suggest making the namespaces explicit.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            case Appliance.TYPE:\n          \n          \n            \n                            case org.grohe.ondus.api.model.sense.Appliance.TYPE:", "url": "https://github.com/openhab/openhab-addons/pull/7131#discussion_r390026702", "createdAt": "2020-03-10T00:05:35Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.groheondus/src/main/java/org/openhab/binding/groheondus/internal/discovery/GroheOndusDiscoveryService.java", "diffHunk": "@@ -82,10 +79,10 @@ protected void startScan() {\n             ThingUID bridgeUID = bridgeHandler.getThing().getUID();\n             ThingUID thingUID = null;\n             switch (appliance.getType()) {\n-                case SenseGuardAppliance.TYPE:\n+                case org.grohe.ondus.api.model.guard.Appliance.TYPE:\n                     thingUID = new ThingUID(THING_TYPE_SENSEGUARD, appliance.getApplianceId());\n                     break;\n-                case SenseAppliance.TYPE:\n+                case Appliance.TYPE:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "378af2bd69e8f02ddd718138be6c35c54436f770"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNDA5NA==", "bodyText": "Agreed! :)", "url": "https://github.com/openhab/openhab-addons/pull/7131#discussion_r390224094", "createdAt": "2020-03-10T10:36:12Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.groheondus/src/main/java/org/openhab/binding/groheondus/internal/discovery/GroheOndusDiscoveryService.java", "diffHunk": "@@ -82,10 +79,10 @@ protected void startScan() {\n             ThingUID bridgeUID = bridgeHandler.getThing().getUID();\n             ThingUID thingUID = null;\n             switch (appliance.getType()) {\n-                case SenseGuardAppliance.TYPE:\n+                case org.grohe.ondus.api.model.guard.Appliance.TYPE:\n                     thingUID = new ThingUID(THING_TYPE_SENSEGUARD, appliance.getApplianceId());\n                     break;\n-                case SenseAppliance.TYPE:\n+                case Appliance.TYPE:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAyNjcwMg=="}, "originalCommit": {"oid": "378af2bd69e8f02ddd718138be6c35c54436f770"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTY1Nzg5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.groheondus/src/main/java/org/openhab/binding/groheondus/internal/handler/GroheOndusAccountHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjoyNDo0NVrOF0WwZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzowNDowNVrOF1AWSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ0MzEwOA==", "bodyText": "This change is functionally equivalent though right?", "url": "https://github.com/openhab/openhab-addons/pull/7131#discussion_r390443108", "createdAt": "2020-03-10T16:24:45Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.groheondus/src/main/java/org/openhab/binding/groheondus/internal/handler/GroheOndusAccountHandler.java", "diffHunk": "@@ -142,7 +142,9 @@ public void initialize() {\n                 ondusService = OndusService.login(storage.get(STORAGE_KEY_REFRESH_TOKEN));\n                 scheduleTokenRefresh();\n             } else {\n-                ondusService = OndusService.login(config.username, config.password);\n+                // TODO: That's probably really inefficient, internally the loginWebform method acquires a refresh\n+                // token, maybe there should be a way to obtain this token here, somehow.\n+                ondusService = OndusService.loginWebform(config.username, config.password);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aabf4ee297d8240b521661624328f135404e300f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyNDU1Mw==", "bodyText": "Yes, it just uses another method to login :) From a user point of view, nothing really changes with that.", "url": "https://github.com/openhab/openhab-addons/pull/7131#discussion_r391124553", "createdAt": "2020-03-11T17:04:05Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.groheondus/src/main/java/org/openhab/binding/groheondus/internal/handler/GroheOndusAccountHandler.java", "diffHunk": "@@ -142,7 +142,9 @@ public void initialize() {\n                 ondusService = OndusService.login(storage.get(STORAGE_KEY_REFRESH_TOKEN));\n                 scheduleTokenRefresh();\n             } else {\n-                ondusService = OndusService.login(config.username, config.password);\n+                // TODO: That's probably really inefficient, internally the loginWebform method acquires a refresh\n+                // token, maybe there should be a way to obtain this token here, somehow.\n+                ondusService = OndusService.loginWebform(config.username, config.password);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ0MzEwOA=="}, "originalCommit": {"oid": "aabf4ee297d8240b521661624328f135404e300f"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 663, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}