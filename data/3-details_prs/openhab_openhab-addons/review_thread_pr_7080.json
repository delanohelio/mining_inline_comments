{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNzg5NTUx", "number": 7080, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDoyNDoxOVrODmHrIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDoyNDoxOVrODmHrIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMjk4MjA4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/ComponentLight.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMDoyNDoxOVrOFzXN-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNDozODo1NlrOFzaxXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwMjEwNw==", "bodyText": "Did you notic, that the stateTopic()method allows for any number of templates?\nThe frist non-Blank one will be used.\nSo we could just do:\n.stateTopic(channelConfiguration.state_topic, channelConfiguration.state_value_template, channelConfiguration.value_template)", "url": "https://github.com/openhab/openhab-addons/pull/7080#discussion_r389402107", "createdAt": "2020-03-08T20:24:19Z", "author": {"login": "jochen314"}, "path": "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/ComponentLight.java", "diffHunk": "@@ -102,6 +102,16 @@ public ComponentLight(CFactory.ComponentConfiguration builder) {\n         this.channelStateUpdateListener = builder.getUpdateListener();\n         ColorValue value = new ColorValue(true, channelConfiguration.payload_on, channelConfiguration.payload_off, 100);\n \n+        // HomeAssistant MQTT Discovery documentation is a bit unclear as to when to use value_template and\n+        // when to use state_value_template. As a result, not all light implementations use state_value_template.\n+        // Lights using the Tasmota firmware for example use value_template.\n+        if (channelConfiguration.state_value_template == null) {\n+            channelConfiguration.state_value_template = channelConfiguration.value_template;\n+        }\n+        if (channelConfiguration.value_template == null) {\n+            channelConfiguration.value_template = channelConfiguration.state_value_template;\n+        }\n+\n         // Create three MQTT subscriptions and use this class object as update listener\n         switchChannel = buildChannel(switchChannelID, value, channelConfiguration.name, this)//\n                 .stateTopic(channelConfiguration.state_topic, channelConfiguration.state_value_template)//", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "faef3a253a43bd72e0cd3ad937051c39d138a5f6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ2MDMxOA==", "bodyText": "I did not notice that, your suggestion is a cleaner solution.  I will modify to use that approach.  Thanks for the update.", "url": "https://github.com/openhab/openhab-addons/pull/7080#discussion_r389460318", "createdAt": "2020-03-09T04:38:56Z", "author": {"login": "mehoekstra"}, "path": "bundles/org.openhab.binding.mqtt.homeassistant/src/main/java/org/openhab/binding/mqtt/homeassistant/internal/ComponentLight.java", "diffHunk": "@@ -102,6 +102,16 @@ public ComponentLight(CFactory.ComponentConfiguration builder) {\n         this.channelStateUpdateListener = builder.getUpdateListener();\n         ColorValue value = new ColorValue(true, channelConfiguration.payload_on, channelConfiguration.payload_off, 100);\n \n+        // HomeAssistant MQTT Discovery documentation is a bit unclear as to when to use value_template and\n+        // when to use state_value_template. As a result, not all light implementations use state_value_template.\n+        // Lights using the Tasmota firmware for example use value_template.\n+        if (channelConfiguration.state_value_template == null) {\n+            channelConfiguration.state_value_template = channelConfiguration.value_template;\n+        }\n+        if (channelConfiguration.value_template == null) {\n+            channelConfiguration.value_template = channelConfiguration.state_value_template;\n+        }\n+\n         // Create three MQTT subscriptions and use this class object as update listener\n         switchChannel = buildChannel(switchChannelID, value, channelConfiguration.name, this)//\n                 .stateTopic(channelConfiguration.state_topic, channelConfiguration.state_value_template)//", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQwMjEwNw=="}, "originalCommit": {"oid": "faef3a253a43bd72e0cd3ad937051c39d138a5f6"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 614, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}