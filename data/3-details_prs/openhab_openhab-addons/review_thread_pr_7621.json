{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDEzNzUw", "number": 7621, "reviewThreads": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1NDowNlrOD8LLEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo0MDo1NlrOD8OrBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI0MjA5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/test/java/org/openhab/binding/onewire/owserver/OwserverConnectionTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1NDowNlrOGU9CQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1NDowNlrOGU9CQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNDcwNw==", "bodyText": "Nope. Don't catch Exception.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424624707", "createdAt": "2020-05-13T17:54:06Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/test/java/org/openhab/binding/onewire/owserver/OwserverConnectionTest.java", "diffHunk": "@@ -154,8 +152,8 @@ public void testCheckPresence() {\n \n             presence = owserverConnection.checkPresence(\"notpresent\");\n             assertEquals(OnOffType.OFF, presence);\n-        } catch (OwException e) {\n-            Assert.fail(\"caught unexpected OwException\");\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI1MjQ5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1Njo1MlrOGU9I_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozMjowM1rOGVCdrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNjQzMQ==", "bodyText": "I would suhggest to check !refreshable, log the error and return. That wax the rest of the method can stay as it is (which is more clear IMO).", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424626431", "createdAt": "2020-05-13T17:56:52Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "diffHunk": "@@ -145,29 +165,37 @@ private void refresh() {\n                     thingCount--;\n                 }\n \n-                refreshBridgeChannels(now);\n+                if (refreshable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxMzY0NA==", "bodyText": "Good idea - I also did that for the outermost check for refresheable.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424713644", "createdAt": "2020-05-13T20:32:03Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "diffHunk": "@@ -145,29 +165,37 @@ private void refresh() {\n                     thingCount--;\n                 }\n \n-                refreshBridgeChannels(now);\n+                if (refreshable) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNjQzMQ=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI1NjU0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1Nzo1M1rOGU9LmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozMzo1MVrOGVChMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNzA5Ng==", "bodyText": "I don't think we need this log-message. Logging the new connection state is sufficient. You can remove oldConnectionState then.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424627096", "createdAt": "2020-05-13T17:57:53Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "diffHunk": "@@ -342,12 +370,15 @@ public boolean isRefreshable() {\n      * @param connectionState current connection state\n      */\n     public void reportConnectionState(OwserverConnectionState connectionState) {\n+        logger.debug(\"Updating owserverconnectionstate from {} to {}\", oldConnectionState, connectionState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxNDU0NQ==", "bodyText": "Done.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424714545", "createdAt": "2020-05-13T20:33:51Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "diffHunk": "@@ -342,12 +370,15 @@ public boolean isRefreshable() {\n      * @param connectionState current connection state\n      */\n     public void reportConnectionState(OwserverConnectionState connectionState) {\n+        logger.debug(\"Updating owserverconnectionstate from {} to {}\", oldConnectionState, connectionState);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNzA5Ng=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI2MDU4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1OTowN1rOGU9OUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo1NTozMVrOGVt3ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNzc5NQ==", "bodyText": "Why does this need to be synchronized? I don't see any concurrency issue here.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424627795", "createdAt": "2020-05-13T17:59:07Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "diffHunk": "@@ -106,7 +123,9 @@ public void initialize() {\n         updateStatus(ThingStatus.UNKNOWN);\n \n         scheduler.execute(() -> {\n-            owserverConnection.start();\n+            synchronized (owserverConnection) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxMDg1MA==", "bodyText": "Thanks - I do take your point that during intialization there shouldn't be any parallel threads accessing the object. However just from the signatures of the methods, a parallel call to one of the reads / writes would be possible. Furthermore, the owserverConnection could also be an already existing object.\nSo my suggestion would be to play it safe...", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424710850", "createdAt": "2020-05-13T20:26:42Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "diffHunk": "@@ -106,7 +123,9 @@ public void initialize() {\n         updateStatus(ThingStatus.UNKNOWN);\n \n         scheduler.execute(() -> {\n-            owserverConnection.start();\n+            synchronized (owserverConnection) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNzc5NQ=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQyNDc2Mw==", "bodyText": "For now, I'm leaving it in... if that's an issue, please get back to me. Thanks.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r425424763", "createdAt": "2020-05-14T20:55:31Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/handler/OwserverBridgeHandler.java", "diffHunk": "@@ -106,7 +123,9 @@ public void initialize() {\n         updateStatus(ThingStatus.UNKNOWN);\n \n         scheduler.execute(() -> {\n-            owserverConnection.start();\n+            synchronized (owserverConnection) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNzc5NQ=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI2Mzc4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1OTo1NVrOGU9QYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozODowOVrOGVCpZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyODMyMQ==", "bodyText": "remove empty line", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424628321", "createdAt": "2020-05-13T17:59:55Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -37,7 +37,22 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * The {@link OwserverConnection} defines the protocol for connections to owservers\n+ * The {@link OwserverConnection} defines the protocol for connections to owservers.\n+ *\n+ *\n+ * Data is requested by using one of the read / write methods. In case of errors, an {@link OwException}\n+ * is thrown. All other exceptions are caught and handled.\n+ *\n+ * The data request methods follow a general pattern:\n+ * * build the appropriate {@link OwserverPacket} for the request\n+ * * call {@link #request(OwserverPacket)} to ask for the data, which then\n+ * * uses {@link #write(OwserverPacket)} to get the request to the server and\n+ * * uses {@link #read(boolean)} to get the result\n+ *\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxNjY0NQ==", "bodyText": "Done (multiple places).", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424716645", "createdAt": "2020-05-13T20:38:09Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -37,7 +37,22 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * The {@link OwserverConnection} defines the protocol for connections to owservers\n+ * The {@link OwserverConnection} defines the protocol for connections to owservers.\n+ *\n+ *\n+ * Data is requested by using one of the read / write methods. In case of errors, an {@link OwException}\n+ * is thrown. All other exceptions are caught and handled.\n+ *\n+ * The data request methods follow a general pattern:\n+ * * build the appropriate {@link OwserverPacket} for the request\n+ * * call {@link #request(OwserverPacket)} to ask for the data, which then\n+ * * uses {@link #write(OwserverPacket)} to get the request to the server and\n+ * * uses {@link #read(boolean)} to get the result\n+ *\n+ *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyODMyMQ=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI2NTIyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMDoxN1rOGU9RUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMDoxN1rOGU9RUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyODU2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * expected payload is attached. If not, an {@link OwException} is raised.\n          \n          \n            \n             * expected payload is attached. If not, an {@link OwException} is thrown.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424628563", "createdAt": "2020-05-13T18:00:17Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -37,7 +37,22 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * The {@link OwserverConnection} defines the protocol for connections to owservers\n+ * The {@link OwserverConnection} defines the protocol for connections to owservers.\n+ *\n+ *\n+ * Data is requested by using one of the read / write methods. In case of errors, an {@link OwException}\n+ * is thrown. All other exceptions are caught and handled.\n+ *\n+ * The data request methods follow a general pattern:\n+ * * build the appropriate {@link OwserverPacket} for the request\n+ * * call {@link #request(OwserverPacket)} to ask for the data, which then\n+ * * uses {@link #write(OwserverPacket)} to get the request to the server and\n+ * * uses {@link #read(boolean)} to get the result\n+ *\n+ *\n+ * Hereby, the resulting packet is examined on an appropriate return code (!= -1) and whether the\n+ * expected payload is attached. If not, an {@link OwException} is raised.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI2NTk1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMDozMVrOGU9R2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozODoxN1rOGVCpmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyODY5OA==", "bodyText": "remove empty line", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424628698", "createdAt": "2020-05-13T18:00:31Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -37,7 +37,22 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * The {@link OwserverConnection} defines the protocol for connections to owservers\n+ * The {@link OwserverConnection} defines the protocol for connections to owservers.\n+ *\n+ *\n+ * Data is requested by using one of the read / write methods. In case of errors, an {@link OwException}\n+ * is thrown. All other exceptions are caught and handled.\n+ *\n+ * The data request methods follow a general pattern:\n+ * * build the appropriate {@link OwserverPacket} for the request\n+ * * call {@link #request(OwserverPacket)} to ask for the data, which then\n+ * * uses {@link #write(OwserverPacket)} to get the request to the server and\n+ * * uses {@link #read(boolean)} to get the result\n+ *\n+ *\n+ * Hereby, the resulting packet is examined on an appropriate return code (!= -1) and whether the\n+ * expected payload is attached. If not, an {@link OwException} is raised.\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxNjY5Ng==", "bodyText": "Done.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424716696", "createdAt": "2020-05-13T20:38:17Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -37,7 +37,22 @@\n import org.slf4j.LoggerFactory;\n \n /**\n- * The {@link OwserverConnection} defines the protocol for connections to owservers\n+ * The {@link OwserverConnection} defines the protocol for connections to owservers.\n+ *\n+ *\n+ * Data is requested by using one of the read / write methods. In case of errors, an {@link OwException}\n+ * is thrown. All other exceptions are caught and handled.\n+ *\n+ * The data request methods follow a general pattern:\n+ * * build the appropriate {@link OwserverPacket} for the request\n+ * * call {@link #request(OwserverPacket)} to ask for the data, which then\n+ * * uses {@link #write(OwserverPacket)} to get the request to the server and\n+ * * uses {@link #read(boolean)} to get the result\n+ *\n+ *\n+ * Hereby, the resulting packet is examined on an appropriate return code (!= -1) and whether the\n+ * expected payload is attached. If not, an {@link OwException} is raised.\n+ *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyODY5OA=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI2Nzc3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMDo1NlrOGU9S-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMDo1NlrOGU9S-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyODk4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * stop the owserver connection\n          \n          \n            \n                 *\n          \n          \n            \n                 * and report new {@link OwserverConnectionState} to {@link #thingHandlerCallback}.\n          \n          \n            \n                 * stop the owserver connection and report new {@link OwserverConnectionState} to {@link #thingHandlerCallback}.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424628985", "createdAt": "2020-05-13T18:00:56Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -95,16 +111,24 @@ public void setPort(int port) {\n      * start the owserver connection\n      */\n     public void start() {\n+        logger.debug(\"Trying to (re)start OW server connection - previous state: {}\",\n+                owserverConnectionState.toString());\n         connectionErrorCounter = 0;\n-        owserverConnectionState = OwserverConnectionState.CLOSED;\n+        tryingConnectionRecovery = true;\n+        // owserverConnectionState = OwserverConnectionState.CLOSED;\n         boolean success = false;\n         do {\n             success = open();\n-        } while (!success && owserverConnectionState != OwserverConnectionState.FAILED);\n+            if (success && owserverConnectionState != OwserverConnectionState.FAILED) {\n+                tryingConnectionRecovery = false;\n+            }\n+        } while (!success && (owserverConnectionState != OwserverConnectionState.FAILED || tryingConnectionRecovery));\n     }\n \n     /**\n      * stop the owserver connection\n+     *\n+     * and report new {@link OwserverConnectionState} to {@link #thingHandlerCallback}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI2ODUzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMToxMlrOGU9ThQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozOTozMVrOGVCr4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyOTEyNQ==", "bodyText": "remove commented code", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424629125", "createdAt": "2020-05-13T18:01:12Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -122,11 +146,11 @@ public void stop() {\n         OwserverPacket returnPacket = request(requestPacket);\n \n         if ((returnPacket.getReturnCode() != -1) && returnPacket.hasPayload()) {\n-            connectionErrorCounter = 0;\n+            // connectionErrorCounter = 0; -> done by request method!!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxNzI4Mw==", "bodyText": "Done.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424717283", "createdAt": "2020-05-13T20:39:31Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -122,11 +146,11 @@ public void stop() {\n         OwserverPacket returnPacket = request(requestPacket);\n \n         if ((returnPacket.getReturnCode() != -1) && returnPacket.hasPayload()) {\n-            connectionErrorCounter = 0;\n+            // connectionErrorCounter = 0; -> done by request method!!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyOTEyNQ=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI2OTcwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMTozOFrOGU9UVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo0MTozOVrOGVCwZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyOTMzMg==", "bodyText": "good catch!", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424629332", "createdAt": "2020-05-13T18:01:38Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -141,11 +165,12 @@ public void stop() {\n     /**\n      * check sensor presence\n      *\n+     * Errors are caught and interpreted as sensor not present.\n+     *\n      * @param path full owfs path to sensor\n      * @return OnOffType, ON=present, OFF=not present\n-     * @throws OwException\n      */\n-    public State checkPresence(String path) throws OwException {\n+    public State checkPresence(String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODQzNw==", "bodyText": "Thanks.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424718437", "createdAt": "2020-05-13T20:41:39Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -141,11 +165,12 @@ public void stop() {\n     /**\n      * check sensor presence\n      *\n+     * Errors are caught and interpreted as sensor not present.\n+     *\n      * @param path full owfs path to sensor\n      * @return OnOffType, ON=present, OFF=not present\n-     * @throws OwException\n      */\n-    public State checkPresence(String path) throws OwException {\n+    public State checkPresence(String path) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyOTMzMg=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI3MTQzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMjowOFrOGU9VdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMjowOFrOGU9VdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyOTYyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * In case of issues, the connection is close using {@link #closeOnError()} and false is returned.\n          \n          \n            \n                 * In case of issues, the connection is closed using {@link #closeOnError()} and false is returned.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424629621", "createdAt": "2020-05-13T18:02:08Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -291,18 +323,22 @@ private OwserverPacket request(OwserverPacket requestPacket) throws OwException\n             close();\n         }\n \n+        // Success! Reset error counter.\n         connectionErrorCounter = 0;\n         return returnPacket;\n     }\n \n     /**\n      * open/reopen the connection to the owserver\n      *\n+     * In case of issues, the connection is close using {@link #closeOnError()} and false is returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI3NjI3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMzoyNVrOGU9YaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMzoyNVrOGU9YaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMDM3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Calls {@link #close(boolean)} with reportConnectionState = true.\n          \n          \n            \n                 * close connection and report connection state to callback", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424630376", "createdAt": "2020-05-13T18:03:25Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -340,13 +376,25 @@ private boolean open() {\n     }\n \n     /**\n-     * close the connection to the owserver instance\n+     * Calls {@link #close(boolean)} with reportConnectionState = true.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 194}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI3ODQ3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNDowMlrOGU9Zzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNDowMlrOGU9Zzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMDczNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * close the connection to the owserver instance.\n          \n          \n            \n                 * issues during closing are ignored.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param reportConnectionState - report the CLOSED state to\n          \n          \n            \n                 */\n          \n          \n            \n                private void close(boolean reportConnectionState) {\n          \n          \n            \n                /**\n          \n          \n            \n                 * close the connection to the owserver instance.\n          \n          \n            \n                 *\n          \n          \n            \n                 * @param reportConnectionState  true, if connection state shall be reported to callback\n          \n          \n            \n                 */\n          \n          \n            \n                private void close(boolean reportConnectionState) {", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424630734", "createdAt": "2020-05-13T18:04:02Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -340,13 +376,25 @@ private boolean open() {\n     }\n \n     /**\n-     * close the connection to the owserver instance\n+     * Calls {@link #close(boolean)} with reportConnectionState = true.\n      */\n     private void close() {\n+        this.close(true);\n+    }\n+\n+    /**\n+     * close the connection to the owserver instance.\n+     * issues during closing are ignored.\n+     *\n+     * @param reportConnectionState - report the CLOSED state to\n+     */\n+    private void close(boolean reportConnectionState) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 206}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI4NTI5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNTo1N1rOGU9eIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMDo1NDowOFrOGVt0nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMTg0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * if {@link #CONNECTION_MAX_RETRY} is exceeded, the {@link #owserverConnectionState} is set to FAILED\n          \n          \n            \n                 * and reported to the {@link #thingHandlerCallback}.\n          \n          \n            \n                 * after {@link #CONNECTION_MAX_RETRY} is exceeded, connection state is reported to callback", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424631842", "createdAt": "2020-05-13T18:05:57Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -378,19 +425,29 @@ private void checkConnection() {\n \n     /**\n      * close the connection to the owserver instance after an error occured\n+     * if {@link #CONNECTION_MAX_RETRY} is exceeded, the {@link #owserverConnectionState} is set to FAILED\n+     * and reported to the {@link #thingHandlerCallback}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 235}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQyNDAyOQ==", "bodyText": "Pushing a commit with ... hope that's ok...\nif {@link #CONNECTION_MAX_RETRY} is exceeded, {@link #owserverConnectionState} is set to FAILED and state is reported to callback.", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r425424029", "createdAt": "2020-05-14T20:54:08Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -378,19 +425,29 @@ private void checkConnection() {\n \n     /**\n      * close the connection to the owserver instance after an error occured\n+     * if {@link #CONNECTION_MAX_RETRY} is exceeded, the {@link #owserverConnectionState} is set to FAILED\n+     * and reported to the {@link #thingHandlerCallback}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMTg0Mg=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 235}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI4NzI3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNjozMVrOGU9faQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo0NDo1NVrOGVC2lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMjE2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *\n          \n          \n            \n                 * If", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424632169", "createdAt": "2020-05-13T18:06:31Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -419,35 +478,53 @@ private void write(OwserverPacket requestPacket) throws OwException {\n     /**\n      * read from owserver\n      *\n+     * In case of errors (which may also be due to an erroneous path), the connection is checked and potentially closed\n+     * using {@link #checkConnection()}.\n+     *\n+     * If", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 279}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyMDAyMA==", "bodyText": "Whoops :)", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424720020", "createdAt": "2020-05-13T20:44:55Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -419,35 +478,53 @@ private void write(OwserverPacket requestPacket) throws OwException {\n     /**\n      * read from owserver\n      *\n+     * In case of errors (which may also be due to an erroneous path), the connection is checked and potentially closed\n+     * using {@link #checkConnection()}.\n+     *\n+     * If", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMjE2OQ=="}, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 279}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI5MDI2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNzoyOVrOGU9hdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNzoyOVrOGU9hdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMjY5Mg==", "bodyText": "remove empty line", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424632692", "createdAt": "2020-05-13T18:07:29Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -419,35 +478,53 @@ private void write(OwserverPacket requestPacket) throws OwException {\n     /**\n      * read from owserver\n      *\n+     * In case of errors (which may also be due to an erroneous path), the connection is checked and potentially closed\n+     * using {@link #checkConnection()}.\n+     *\n+     * If\n+     *\n+     * @param noTimeoutException retry in case of read time outs instead of exiting with an {@link OwException}.\n      * @return the read packet\n      * @throws OwException\n      */\n     private OwserverPacket read(boolean noTimeoutException) throws OwException {\n         OwserverPacket returnPacket = new OwserverPacket(OwserverPacketType.RETURN);\n-        try {\n-            final DataInputStream owserverInputStream = this.owserverInputStream;\n-            if (owserverInputStream != null) {\n-                DataInputStream inputStream = owserverInputStream;\n+        final DataInputStream owserverInputStream = this.owserverInputStream;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 292}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI5MTAwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNzo0NFrOGU9h9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowNzo0NFrOGU9h9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMjgyMA==", "bodyText": "remove empty line", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424632820", "createdAt": "2020-05-13T18:07:44Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -419,35 +478,53 @@ private void write(OwserverPacket requestPacket) throws OwException {\n     /**\n      * read from owserver\n      *\n+     * In case of errors (which may also be due to an erroneous path), the connection is checked and potentially closed\n+     * using {@link #checkConnection()}.\n+     *\n+     * If\n+     *\n+     * @param noTimeoutException retry in case of read time outs instead of exiting with an {@link OwException}.\n      * @return the read packet\n      * @throws OwException\n      */\n     private OwserverPacket read(boolean noTimeoutException) throws OwException {\n         OwserverPacket returnPacket = new OwserverPacket(OwserverPacketType.RETURN);\n-        try {\n-            final DataInputStream owserverInputStream = this.owserverInputStream;\n-            if (owserverInputStream != null) {\n-                DataInputStream inputStream = owserverInputStream;\n+        final DataInputStream owserverInputStream = this.owserverInputStream;\n+\n+        if (owserverInputStream != null) {\n+            DataInputStream inputStream = owserverInputStream;\n+            try {\n                 returnPacket = new OwserverPacket(inputStream, OwserverPacketType.RETURN);\n-                logger.trace(\"read: {}\", returnPacket);\n-            } else {\n-                logger.debug(\"input stream not available on read\");\n-                closeOnError();\n-            }\n-        } catch (EOFException e) {\n-            // nothing to read\n-        } catch (OwException e) {\n-            checkConnection();\n-            throw e;\n-        } catch (IOException e) {\n-            if (e.getMessage().equals(\"Read timed out\") && noTimeoutException) {\n-                logger.trace(\"timeout - setting error code to -1\");\n-                returnPacket.setPayload(\"timeout\");\n-                returnPacket.setReturnCode(-1);\n-            } else {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 313}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI5MjE1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowODowMFrOGU9inw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowODowMFrOGU9inw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMjk5MQ==", "bodyText": "remove empty line", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424632991", "createdAt": "2020-05-13T18:08:00Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -419,35 +478,53 @@ private void write(OwserverPacket requestPacket) throws OwException {\n     /**\n      * read from owserver\n      *\n+     * In case of errors (which may also be due to an erroneous path), the connection is checked and potentially closed\n+     * using {@link #checkConnection()}.\n+     *\n+     * If\n+     *\n+     * @param noTimeoutException retry in case of read time outs instead of exiting with an {@link OwException}.\n      * @return the read packet\n      * @throws OwException\n      */\n     private OwserverPacket read(boolean noTimeoutException) throws OwException {\n         OwserverPacket returnPacket = new OwserverPacket(OwserverPacketType.RETURN);\n-        try {\n-            final DataInputStream owserverInputStream = this.owserverInputStream;\n-            if (owserverInputStream != null) {\n-                DataInputStream inputStream = owserverInputStream;\n+        final DataInputStream owserverInputStream = this.owserverInputStream;\n+\n+        if (owserverInputStream != null) {\n+            DataInputStream inputStream = owserverInputStream;\n+            try {\n                 returnPacket = new OwserverPacket(inputStream, OwserverPacketType.RETURN);\n-                logger.trace(\"read: {}\", returnPacket);\n-            } else {\n-                logger.debug(\"input stream not available on read\");\n-                closeOnError();\n-            }\n-        } catch (EOFException e) {\n-            // nothing to read\n-        } catch (OwException e) {\n-            checkConnection();\n-            throw e;\n-        } catch (IOException e) {\n-            if (e.getMessage().equals(\"Read timed out\") && noTimeoutException) {\n-                logger.trace(\"timeout - setting error code to -1\");\n-                returnPacket.setPayload(\"timeout\");\n-                returnPacket.setReturnCode(-1);\n-            } else {\n+\n+            } catch (EOFException e) {\n+                // Read suddenly ended ....\n+                logger.warn(\"EOFException: exception while reading packet - {}\", e.getMessage());\n+                checkConnection();\n+                throw new OwException(\"EOFException: exception while reading packet - \" + e.getMessage());\n+            } catch (OwException e) {\n+                // Some other issue\n                 checkConnection();\n-                throw new OwException(\"I/O error: exception while reading packet - \" + e.getMessage());\n+                throw e;\n+            } catch (IOException e) {\n+                // Read time out\n+                if (e.getMessage().equals(\"Read timed out\") && noTimeoutException) {\n+                    logger.trace(\"timeout - setting error code to -1\");\n+                    // will lead to re-try reading in request method!!!\n+                    returnPacket.setPayload(\"timeout\");\n+                    returnPacket.setReturnCode(-1);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 331}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI5MzAyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowODoxM1rOGU9jLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowODoxM1rOGU9jLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMzEzNA==", "bodyText": "remove empty line", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424633134", "createdAt": "2020-05-13T18:08:13Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -419,35 +478,53 @@ private void write(OwserverPacket requestPacket) throws OwException {\n     /**\n      * read from owserver\n      *\n+     * In case of errors (which may also be due to an erroneous path), the connection is checked and potentially closed\n+     * using {@link #checkConnection()}.\n+     *\n+     * If\n+     *\n+     * @param noTimeoutException retry in case of read time outs instead of exiting with an {@link OwException}.\n      * @return the read packet\n      * @throws OwException\n      */\n     private OwserverPacket read(boolean noTimeoutException) throws OwException {\n         OwserverPacket returnPacket = new OwserverPacket(OwserverPacketType.RETURN);\n-        try {\n-            final DataInputStream owserverInputStream = this.owserverInputStream;\n-            if (owserverInputStream != null) {\n-                DataInputStream inputStream = owserverInputStream;\n+        final DataInputStream owserverInputStream = this.owserverInputStream;\n+\n+        if (owserverInputStream != null) {\n+            DataInputStream inputStream = owserverInputStream;\n+            try {\n                 returnPacket = new OwserverPacket(inputStream, OwserverPacketType.RETURN);\n-                logger.trace(\"read: {}\", returnPacket);\n-            } else {\n-                logger.debug(\"input stream not available on read\");\n-                closeOnError();\n-            }\n-        } catch (EOFException e) {\n-            // nothing to read\n-        } catch (OwException e) {\n-            checkConnection();\n-            throw e;\n-        } catch (IOException e) {\n-            if (e.getMessage().equals(\"Read timed out\") && noTimeoutException) {\n-                logger.trace(\"timeout - setting error code to -1\");\n-                returnPacket.setPayload(\"timeout\");\n-                returnPacket.setReturnCode(-1);\n-            } else {\n+\n+            } catch (EOFException e) {\n+                // Read suddenly ended ....\n+                logger.warn(\"EOFException: exception while reading packet - {}\", e.getMessage());\n+                checkConnection();\n+                throw new OwException(\"EOFException: exception while reading packet - \" + e.getMessage());\n+            } catch (OwException e) {\n+                // Some other issue\n                 checkConnection();\n-                throw new OwException(\"I/O error: exception while reading packet - \" + e.getMessage());\n+                throw e;\n+            } catch (IOException e) {\n+                // Read time out\n+                if (e.getMessage().equals(\"Read timed out\") && noTimeoutException) {\n+                    logger.trace(\"timeout - setting error code to -1\");\n+                    // will lead to re-try reading in request method!!!\n+                    returnPacket.setPayload(\"timeout\");\n+                    returnPacket.setReturnCode(-1);\n+\n+                } else {\n+                    // Other I/O issue\n+                    checkConnection();\n+                    throw new OwException(\"I/O error: exception while reading packet - \" + e.getMessage());\n+                }\n             }\n+            logger.trace(\"read: {}\", returnPacket);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 339}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI5NDc2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverPacket.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowODozOFrOGU9kUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowODozOFrOGU9kUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMzQyNA==", "bodyText": "remove empty line", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424633424", "createdAt": "2020-05-13T18:08:38Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverPacket.java", "diffHunk": "@@ -342,5 +343,7 @@ public String toString() {\n \n         return String.format(\"%s, size %d, controlFlags 0x%08x, payload '%s'\", prefix, HEADER_SIZE + payloadLength,\n                 controlFlags, getPayloadString().replaceAll(\"\\\\p{C}\", \"?\"));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDI5NTQwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverPacket.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowODo0OFrOGU9kvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowODo0OFrOGU9kvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMzUzMw==", "bodyText": "remove empty line", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424633533", "createdAt": "2020-05-13T18:08:48Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverPacket.java", "diffHunk": "@@ -342,5 +343,7 @@ public String toString() {\n \n         return String.format(\"%s, size %d, controlFlags 0x%08x, payload '%s'\", prefix, HEADER_SIZE + payloadLength,\n                 controlFlags, getPayloadString().replaceAll(\"\\\\p{C}\", \"?\"));\n+\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDgxNTQwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo0MDo1NlrOGVCu7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDo0MDo1NlrOGVCu7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxODA2Mw==", "bodyText": "I will also remove this commented code...", "url": "https://github.com/openhab/openhab-addons/pull/7621#discussion_r424718063", "createdAt": "2020-05-13T20:40:56Z", "author": {"login": "Urmel"}, "path": "bundles/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/owserver/OwserverConnection.java", "diffHunk": "@@ -95,16 +111,24 @@ public void setPort(int port) {\n      * start the owserver connection\n      */\n     public void start() {\n+        logger.debug(\"Trying to (re)start OW server connection - previous state: {}\",\n+                owserverConnectionState.toString());\n         connectionErrorCounter = 0;\n-        owserverConnectionState = OwserverConnectionState.CLOSED;\n+        tryingConnectionRecovery = true;\n+        // owserverConnectionState = OwserverConnectionState.CLOSED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "107145853c94c22639ce8fc4d1c164ee6f38c7f6"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 226, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}