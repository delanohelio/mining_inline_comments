{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwOTc0MTYz", "number": 9199, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTozMjowM1rOFA_Kdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwNTozOToyMlrOFBFK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTc5MTkxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/Ffmpeg.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTozMjowM1rOH_ivzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTozMjowM1rOH_ivzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM5MTYyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                ffmpegCommand.replaceAll(password, \"passwordRemoved\"));\n          \n          \n            \n                                ffmpegCommand.replaceAll(password, \"********\"));", "url": "https://github.com/openhab/openhab-addons/pull/9199#discussion_r536391629", "createdAt": "2020-12-04T21:32:03Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/Ffmpeg.java", "diffHunk": "@@ -169,7 +171,8 @@ public void run() {\n     public void startConverting() {\n         if (!ipCameraFfmpegThread.isAlive()) {\n             ipCameraFfmpegThread = new IpCameraFfmpegThread();\n-            logger.debug(\"Starting ffmpeg with this command now:{}\", ffmpegCommand);\n+            logger.debug(\"Starting ffmpeg with this command now:{}\",\n+                    ffmpegCommand.replaceAll(password, \"passwordRemoved\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bca198146376aea515e7ec040e8ed8f751ab0d10"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NTgxNjM2OnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/HikvisionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMTo0MDoxM1rOH_i93w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwNToxNDozOVrOH_qXQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM5NTIzMQ==", "bodyText": ".toString() might be an expensive operation, so calling it twice when you only need to call it once is a bad practice. The way it was before only called it once. What were you trying to address here with this change?", "url": "https://github.com/openhab/openhab-addons/pull/9199#discussion_r536395231", "createdAt": "2020-12-04T21:40:13Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/HikvisionHandler.java", "diffHunk": "@@ -64,18 +64,13 @@ public HikvisionHandler(ThingHandler handler, int nvrChannel) {\n     // This handles the incoming http replies back from the camera.\n     @Override\n     public void channelRead(@Nullable ChannelHandlerContext ctx, @Nullable Object msg) throws Exception {\n-        if (msg == null || ctx == null) {\n+        if (msg == null || ctx == null || msg.toString().isEmpty()) {\n             return;\n         }\n-        String content = \"\";\n-        int debounce = 3;\n         try {\n-            content = msg.toString();\n-            if (content.isEmpty()) {\n-                return;\n-            }\n+            int debounce = 3;\n+            String content = msg.toString();\n             logger.trace(\"HTTP Result back from camera is \\t:{}:\", content);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bca198146376aea515e7ec040e8ed8f751ab0d10"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUxNjQxNg==", "bodyText": "FIXED: I looked into it and what I was trying to address does not happen anymore. I have removed it back to only calling it once, thanks for pointing it out.", "url": "https://github.com/openhab/openhab-addons/pull/9199#discussion_r536516416", "createdAt": "2020-12-05T05:14:39Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/HikvisionHandler.java", "diffHunk": "@@ -64,18 +64,13 @@ public HikvisionHandler(ThingHandler handler, int nvrChannel) {\n     // This handles the incoming http replies back from the camera.\n     @Override\n     public void channelRead(@Nullable ChannelHandlerContext ctx, @Nullable Object msg) throws Exception {\n-        if (msg == null || ctx == null) {\n+        if (msg == null || ctx == null || msg.toString().isEmpty()) {\n             return;\n         }\n-        String content = \"\";\n-        int debounce = 3;\n         try {\n-            content = msg.toString();\n-            if (content.isEmpty()) {\n-                return;\n-            }\n+            int debounce = 3;\n+            String content = msg.toString();\n             logger.trace(\"HTTP Result back from camera is \\t:{}:\", content);\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM5NTIzMQ=="}, "originalCommit": {"oid": "bca198146376aea515e7ec040e8ed8f751ab0d10"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2Njc3NjI3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/onvif/OnvifDiscovery.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwNTozOToyMlrOH_qkgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwNDo1MTozMlrOIAFL_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUxOTgxMA==", "bodyText": "Does this still return a future that you should wait for? Or do you not need to do that anymore?", "url": "https://github.com/openhab/openhab-addons/pull/9199#discussion_r536519810", "createdAt": "2020-12-05T05:39:22Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/onvif/OnvifDiscovery.java", "diffHunk": "@@ -213,26 +215,21 @@ protected void channelRead0(@Nullable ChannelHandlerContext ctx, DatagramPacket\n                 }).option(ChannelOption.SO_BROADCAST, true).option(ChannelOption.SO_REUSEADDR, true)\n                 .option(ChannelOption.IP_MULTICAST_LOOP_DISABLED, false).option(ChannelOption.SO_RCVBUF, 2048)\n                 .option(ChannelOption.IP_MULTICAST_TTL, 255).option(ChannelOption.IP_MULTICAST_IF, networkInterface);\n-\n-        datagramChannel = (DatagramChannel) bootstrap.bind(localNetworkAddress).sync().channel();\n-        datagramChannel.joinGroup(multiCastAddress, networkInterface).sync();\n-        ChannelFuture chFuture;\n-        if (port == 1900) {\n-            String ssdp = \"M-SEARCH * HTTP/1.1\\n\" + \"HOST: 239.255.255.250:1900\\n\" + \"MAN: \\\"ssdp:discover\\\"\\n\"\n-                    + \"MX: 1\\n\" + \"ST: urn:dial-multiscreen-org:service:dial:1\\n\"\n-                    + \"USER-AGENT: Microsoft Edge/83.0.478.61 Windows\\n\" + \"\\n\" + \"\";\n-            ByteBuf ssdpProbeMessage = Unpooled.copiedBuffer(ssdp, 0, ssdp.length(), StandardCharsets.UTF_8);\n-            datagramPacket = new DatagramPacket(ssdpProbeMessage, multiCastAddress, localNetworkAddress);\n-            chFuture = datagramChannel.writeAndFlush(datagramPacket);\n-        } else {\n-            chFuture = datagramChannel.writeAndFlush(datagramPacket);\n+        ChannelGroup openChannels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);\n+        for (NetworkInterface nic : nics) {\n+            DatagramChannel datagramChannel = (DatagramChannel) bootstrap.option(ChannelOption.IP_MULTICAST_IF, nic)\n+                    .bind(new InetSocketAddress(0)).sync().channel();\n+            datagramChannel\n+                    .joinGroup(new InetSocketAddress(InetAddress.getByName(\"239.255.255.250\"), 3702), networkInterface)\n+                    .sync();\n+            openChannels.add(datagramChannel);\n+        }\n+        if (!openChannels.isEmpty()) {\n+            openChannels.writeAndFlush(wsDiscovery());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cae07ca51f222914b628badc12e366ce8c246e7"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk1NTkwMA==", "bodyText": "I don\u2019t need to use a future as it gives no benefits and only increases code length.", "url": "https://github.com/openhab/openhab-addons/pull/9199#discussion_r536955900", "createdAt": "2020-12-06T04:51:32Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/onvif/OnvifDiscovery.java", "diffHunk": "@@ -213,26 +215,21 @@ protected void channelRead0(@Nullable ChannelHandlerContext ctx, DatagramPacket\n                 }).option(ChannelOption.SO_BROADCAST, true).option(ChannelOption.SO_REUSEADDR, true)\n                 .option(ChannelOption.IP_MULTICAST_LOOP_DISABLED, false).option(ChannelOption.SO_RCVBUF, 2048)\n                 .option(ChannelOption.IP_MULTICAST_TTL, 255).option(ChannelOption.IP_MULTICAST_IF, networkInterface);\n-\n-        datagramChannel = (DatagramChannel) bootstrap.bind(localNetworkAddress).sync().channel();\n-        datagramChannel.joinGroup(multiCastAddress, networkInterface).sync();\n-        ChannelFuture chFuture;\n-        if (port == 1900) {\n-            String ssdp = \"M-SEARCH * HTTP/1.1\\n\" + \"HOST: 239.255.255.250:1900\\n\" + \"MAN: \\\"ssdp:discover\\\"\\n\"\n-                    + \"MX: 1\\n\" + \"ST: urn:dial-multiscreen-org:service:dial:1\\n\"\n-                    + \"USER-AGENT: Microsoft Edge/83.0.478.61 Windows\\n\" + \"\\n\" + \"\";\n-            ByteBuf ssdpProbeMessage = Unpooled.copiedBuffer(ssdp, 0, ssdp.length(), StandardCharsets.UTF_8);\n-            datagramPacket = new DatagramPacket(ssdpProbeMessage, multiCastAddress, localNetworkAddress);\n-            chFuture = datagramChannel.writeAndFlush(datagramPacket);\n-        } else {\n-            chFuture = datagramChannel.writeAndFlush(datagramPacket);\n+        ChannelGroup openChannels = new DefaultChannelGroup(GlobalEventExecutor.INSTANCE);\n+        for (NetworkInterface nic : nics) {\n+            DatagramChannel datagramChannel = (DatagramChannel) bootstrap.option(ChannelOption.IP_MULTICAST_IF, nic)\n+                    .bind(new InetSocketAddress(0)).sync().channel();\n+            datagramChannel\n+                    .joinGroup(new InetSocketAddress(InetAddress.getByName(\"239.255.255.250\"), 3702), networkInterface)\n+                    .sync();\n+            openChannels.add(datagramChannel);\n+        }\n+        if (!openChannels.isEmpty()) {\n+            openChannels.writeAndFlush(wsDiscovery());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjUxOTgxMA=="}, "originalCommit": {"oid": "7cae07ca51f222914b628badc12e366ce8c246e7"}, "originalPosition": 122}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3805, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}