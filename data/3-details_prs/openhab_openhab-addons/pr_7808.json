{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MDQxMTE1", "number": 7808, "title": "[freebox] Never log the application token", "bodyText": "Automatic update of the thing configuration with the application token\nConsole command to display the application token\nSigned-off-by: Laurent Garnier lg.hc@free.fr", "createdAt": "2020-05-27T18:33:45Z", "url": "https://github.com/openhab/openhab-addons/pull/7808", "merged": true, "mergeCommit": {"oid": "756437409ded50a47466af46089e76ee6ba28796"}, "closed": true, "closedAt": "2020-05-31T19:51:54Z", "author": {"login": "lolodomo"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcldoGyAH2gAyNDI0MDQxMTE1OjcwNTAxOTgwMmFkNmY5NGVkNWNkODdjOWU4ZjE0YjNiZDhhOTU4MmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmxJ_gAFqTQyMTUyMjgxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "705019802ad6f94ed5cd87c9e8f14b3bd8a9582b", "author": {"user": {"login": "lolodomo", "name": "lolodomo"}}, "url": "https://github.com/openhab/openhab-addons/commit/705019802ad6f94ed5cd87c9e8f14b3bd8a9582b", "committedDate": "2020-05-27T18:32:20Z", "message": "[freebox] Never log the application token\n\nAutomatic update of the thing configuration with the application token\n\nConsole command to display the application token\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c0557af05dec5da10034b562d6b3e4b37a9477d", "author": {"user": {"login": "lolodomo", "name": "lolodomo"}}, "url": "https://github.com/openhab/openhab-addons/commit/9c0557af05dec5da10034b562d6b3e4b37a9477d", "committedDate": "2020-05-28T11:32:51Z", "message": "Simplified console command in README\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzgyNjIy", "url": "https://github.com/openhab/openhab-addons/pull/7808#pullrequestreview-421382622", "createdAt": "2020-05-30T06:22:50Z", "commit": {"oid": "9c0557af05dec5da10034b562d6b3e4b37a9477d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwNjoyMjo1MFrOGcw9tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwNjoyMzozNlrOGcw94A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxNTU0Mw==", "bodyText": "Can you use the cached config instead?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return getConfigAs(FreeboxServerConfiguration.class).appToken;\n          \n          \n            \n                    return configuration.appToken;", "url": "https://github.com/openhab/openhab-addons/pull/7808#discussion_r432815543", "createdAt": "2020-05-30T06:22:50Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/handler/FreeboxHandler.java", "diffHunk": "@@ -293,6 +306,10 @@ public FreeboxApiManager getApiManager() {\n         return apiManager;\n     }\n \n+    public String getAppToken() {\n+        return getConfigAs(FreeboxServerConfiguration.class).appToken;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c0557af05dec5da10034b562d6b3e4b37a9477d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxNTU4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .asList(new String[] { buildCommandUsage(\"<bridgeUID> \" + APP_TOKEN, \"show the application token\") });\n          \n          \n            \n                            .asList(buildCommandUsage(\"<bridgeUID> \" + APP_TOKEN, \"show the application token\"));", "url": "https://github.com/openhab/openhab-addons/pull/7808#discussion_r432815584", "createdAt": "2020-05-30T06:23:36Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/console/FreeboxCommandExtension.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.freebox.internal.console;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingRegistry;\n+import org.eclipse.smarthome.core.thing.ThingUID;\n+import org.eclipse.smarthome.io.console.Console;\n+import org.eclipse.smarthome.io.console.extensions.AbstractConsoleCommandExtension;\n+import org.eclipse.smarthome.io.console.extensions.ConsoleCommandExtension;\n+import org.openhab.binding.freebox.internal.handler.FreeboxHandler;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+/**\n+ * The {@link FreeboxCommandExtension} is responsible for handling console commands\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+\n+@NonNullByDefault\n+@Component(service = ConsoleCommandExtension.class)\n+public class FreeboxCommandExtension extends AbstractConsoleCommandExtension {\n+\n+    private static final String APP_TOKEN = \"apptoken\";\n+\n+    private final ThingRegistry thingRegistry;\n+\n+    @Activate\n+    public FreeboxCommandExtension(final @Reference ThingRegistry thingRegistry) {\n+        super(\"freebox\", \"Interact with the freebox binding.\");\n+        this.thingRegistry = thingRegistry;\n+    }\n+\n+    @Override\n+    public void execute(String[] args, Console console) {\n+        if (args.length == 2) {\n+            FreeboxHandler handler = null;\n+            try {\n+                ThingUID thingUID = new ThingUID(args[0]);\n+                Thing thing = thingRegistry.get(thingUID);\n+                if ((thing != null) && (thing.getHandler() != null) && (thing.getHandler() instanceof FreeboxHandler)) {\n+                    handler = (FreeboxHandler) thing.getHandler();\n+                }\n+            } catch (IllegalArgumentException e) {\n+                handler = null;\n+            }\n+            if (handler == null) {\n+                console.println(\"Bad thing id '\" + args[0] + \"'\");\n+                printUsage(console);\n+            } else {\n+                switch (args[1]) {\n+                    case APP_TOKEN:\n+                        String token = handler.getAppToken();\n+                        console.println(\"Your application token is \" + (token != null ? token : \"undefined\"));\n+                        break;\n+                    default:\n+                        printUsage(console);\n+                        break;\n+                }\n+            }\n+        } else {\n+            printUsage(console);\n+        }\n+    }\n+\n+    @Override\n+    public List<String> getUsages() {\n+        return Arrays\n+                .asList(new String[] { buildCommandUsage(\"<bridgeUID> \" + APP_TOKEN, \"show the application token\") });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c0557af05dec5da10034b562d6b3e4b37a9477d"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bd2127c80e8d9f9fbf1490875bf1a63388c2f37", "author": {"user": {"login": "lolodomo", "name": "lolodomo"}}, "url": "https://github.com/openhab/openhab-addons/commit/5bd2127c80e8d9f9fbf1490875bf1a63388c2f37", "committedDate": "2020-05-30T18:52:40Z", "message": "Review comments considered\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDQyMDQw", "url": "https://github.com/openhab/openhab-addons/pull/7808#pullrequestreview-421442040", "createdAt": "2020-05-30T20:37:11Z", "commit": {"oid": "5bd2127c80e8d9f9fbf1490875bf1a63388c2f37"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDozNzoxMVrOGc1O4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDozNzoxMVrOGc1O4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4NTQ3Mw==", "bodyText": "This better deals with null checks.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if ((thing != null) && (thing.getHandler() != null) && (thing.getHandler() instanceof FreeboxHandler)) {\n          \n          \n            \n                                handler = (FreeboxHandler) thing.getHandler();\n          \n          \n            \n                            }\n          \n          \n            \n                            if(thing != null){\n          \n          \n            \n                                ThingHandler thingHandler = thing.getHandler();\n          \n          \n            \n                                if(thingHandler instanceof FreeboxHandler){\n          \n          \n            \n                                    handler = (FreeboxHandler) thingHandler;\n          \n          \n            \n                                }\n          \n          \n            \n                            }", "url": "https://github.com/openhab/openhab-addons/pull/7808#discussion_r432885473", "createdAt": "2020-05-30T20:37:11Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/console/FreeboxCommandExtension.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.freebox.internal.console;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingRegistry;\n+import org.eclipse.smarthome.core.thing.ThingUID;\n+import org.eclipse.smarthome.io.console.Console;\n+import org.eclipse.smarthome.io.console.extensions.AbstractConsoleCommandExtension;\n+import org.eclipse.smarthome.io.console.extensions.ConsoleCommandExtension;\n+import org.openhab.binding.freebox.internal.handler.FreeboxHandler;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+\n+/**\n+ * The {@link FreeboxCommandExtension} is responsible for handling console commands\n+ *\n+ * @author Laurent Garnier - Initial contribution\n+ */\n+\n+@NonNullByDefault\n+@Component(service = ConsoleCommandExtension.class)\n+public class FreeboxCommandExtension extends AbstractConsoleCommandExtension {\n+\n+    private static final String APP_TOKEN = \"apptoken\";\n+\n+    private final ThingRegistry thingRegistry;\n+\n+    @Activate\n+    public FreeboxCommandExtension(final @Reference ThingRegistry thingRegistry) {\n+        super(\"freebox\", \"Interact with the freebox binding.\");\n+        this.thingRegistry = thingRegistry;\n+    }\n+\n+    @Override\n+    public void execute(String[] args, Console console) {\n+        if (args.length == 2) {\n+            FreeboxHandler handler = null;\n+            try {\n+                ThingUID thingUID = new ThingUID(args[0]);\n+                Thing thing = thingRegistry.get(thingUID);\n+                if ((thing != null) && (thing.getHandler() != null) && (thing.getHandler() instanceof FreeboxHandler)) {\n+                    handler = (FreeboxHandler) thing.getHandler();\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bd2127c80e8d9f9fbf1490875bf1a63388c2f37"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b795f34c14c030251bfeb9a267c2589e78c89179", "author": {"user": {"login": "lolodomo", "name": "lolodomo"}}, "url": "https://github.com/openhab/openhab-addons/commit/b795f34c14c030251bfeb9a267c2589e78c89179", "committedDate": "2020-05-31T09:02:12Z", "message": "Changed way to get the thing handler\n\nSigned-off-by: Laurent Garnier <lg.hc@free.fr>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTIyODE5", "url": "https://github.com/openhab/openhab-addons/pull/7808#pullrequestreview-421522819", "createdAt": "2020-05-31T19:51:28Z", "commit": {"oid": "b795f34c14c030251bfeb9a267c2589e78c89179"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 474, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}