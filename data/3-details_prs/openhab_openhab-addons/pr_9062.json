{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMTU0ODc4", "number": 9062, "title": "[openweathermap] Add support for One Call API #7308", "bodyText": "Signed-off-by: wolfii wolfgang.klimt@consol.de\nThis is the OH3 version of PR #8395\nIt adds support for the Openweathermap One Call API to the openweathermap binding of @cweitkamp  as requested in #7308 . The binding is compatible to the existing version but adds two new things using the free version of the One Call API. For forecasts it should be simple to adapt the configuration from the existing thing to the new thing as the binding uses the same channel names where possible. Additionally a new thing allows to retrieve historical data for the last (up to 5) days.\nNearly all review comments that I got for the 2.5 version of the binding are resolved also in this version. For compatibility I will add the temperature channel as suggested by @boehan . Review comments are welcome. Please be patient, it may take several days until I find the time to respond.\nFind a snapshot build and example configs for testing here:\nhttps://home.klimt.de/owncloud/index.php/s/Y7P4mWfXJs7iWNW", "createdAt": "2020-11-18T12:37:23Z", "url": "https://github.com/openhab/openhab-addons/pull/9062", "merged": true, "mergeCommit": {"oid": "6afbe23ea61567322ee72f2501822929c4c9a471"}, "closed": true, "closedAt": "2020-11-30T20:09:21Z", "author": {"login": "Wolfgang1966"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddtFpUAH2gAyNTIzMTU0ODc4Ojk1YWEzNTY3NzgxZTJlNWNmM2RlZDNkZGY5NWFkMmU2ZWMzNGI1OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhrFMyAFqTU0MTI1NTMxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597", "committedDate": "2020-11-18T12:12:56Z", "message": "OH 3.0 version of the Openweathermap Onecall API Binding extension\n\nSigned-off-by: wolfii <wolfgang.klimt@consol.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MTA1NDM0", "url": "https://github.com/openhab/openhab-addons/pull/9062#pullrequestreview-536105434", "createdAt": "2020-11-22T19:14:16Z", "commit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQxOToxNDoxNlrOH36bvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQxOToyODoyOFrOH36h0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MTEwMg==", "bodyText": "Do we need this constant?", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r528391102", "createdAt": "2020-11-22T19:14:16Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/OpenWeatherMapBindingConstants.java", "diffHunk": "@@ -49,38 +53,66 @@\n     public static final ChannelGroupTypeUID CHANNEL_GROUP_TYPE_DAILY_FORECAST = new ChannelGroupTypeUID(BINDING_ID,\n             \"dailyForecast\");\n     public static final ChannelGroupTypeUID CHANNEL_GROUP_TYPE_UVINDEX = new ChannelGroupTypeUID(BINDING_ID, \"uvindex\");\n+    public static final ChannelGroupTypeUID CHANNEL_GROUP_TYPE_ONECALL_MINUTELY_FORECAST = new ChannelGroupTypeUID(\n+            BINDING_ID, \"oneCallMinutely\");\n+    public static final ChannelGroupTypeUID CHANNEL_GROUP_TYPE_ONECALL_HOURLY_FORECAST = new ChannelGroupTypeUID(\n+            BINDING_ID, \"oneCallHourly\");\n+    public static final ChannelGroupTypeUID CHANNEL_GROUP_TYPE_ONECALL_DAILY_FORECAST = new ChannelGroupTypeUID(\n+            BINDING_ID, \"oneCallDaily\");\n+    public static final ChannelGroupTypeUID CHANNEL_GROUP_TYPE_ONECALL_CURRENT = new ChannelGroupTypeUID(BINDING_ID,\n+            \"oneCallCurrent\");\n \n     // List of all channel groups\n     public static final String CHANNEL_GROUP_STATION = \"station\";\n     public static final String CHANNEL_GROUP_CURRENT_WEATHER = \"current\";\n     public static final String CHANNEL_GROUP_FORECAST_TODAY = \"forecastToday\";\n     public static final String CHANNEL_GROUP_FORECAST_TOMORROW = \"forecastTomorrow\";\n     public static final String CHANNEL_GROUP_CURRENT_UVINDEX = \"current\";\n+    public static final String CHANNEL_GROUP_ONECALL_CURRENT = \"current\";\n+    public static final String CHANNEL_GROUP_ONECALL_HISTORY = \"history\";\n+    public static final String CHANNEL_GROUP_ONECALL_TODAY = \"forecastToday\";\n+    public static final String CHANNEL_GROUP_ONECALL_TOMORROW = \"forecastTomorrow\";\n \n     // List of all channels\n     public static final String CHANNEL_STATION_ID = \"id\";\n     public static final String CHANNEL_STATION_NAME = \"name\";\n     public static final String CHANNEL_STATION_LOCATION = \"location\";\n     public static final String CHANNEL_TIME_STAMP = \"time-stamp\";\n+    public static final String CHANNEL_SUNRISE = \"sunrise\";\n+    public static final String CHANNEL_SUNSET = \"sunset\";\n     public static final String CHANNEL_CONDITION = \"condition\";\n     public static final String CHANNEL_CONDITION_ID = \"condition-id\";\n     public static final String CHANNEL_CONDITION_ICON = \"icon\";\n     public static final String CHANNEL_CONDITION_ICON_ID = \"icon-id\";\n     public static final String CHANNEL_TEMPERATURE = \"temperature\";\n     public static final String CHANNEL_APPARENT_TEMPERATURE = \"apparent-temperature\";\n+    public static final String CHANNEL_APPARENT_MORNING = \"apparent-morning\";\n+    public static final String CHANNEL_APPARENT_DAY = \"apparent-day\";\n+    public static final String CHANNEL_APPARENT_EVENING = \"apparent-evening\";\n+    public static final String CHANNEL_APPARENT_NIGHT = \"apparent-night\";\n     public static final String CHANNEL_MIN_TEMPERATURE = \"min-temperature\";\n     public static final String CHANNEL_MAX_TEMPERATURE = \"max-temperature\";\n+    public static final String CHANNEL_MORNING_TEMPERATURE = \"morning-temperature\";\n+    public static final String CHANNEL_DAY_TEMPERATURE = \"day-temperature\";\n+    public static final String CHANNEL_EVENING_TEMPERATURE = \"evening-temperature\";\n+    public static final String CHANNEL_NIGHT_TEMPERATURE = \"night-temperature\";\n+    public static final String CHANNEL_DEW_POINT = \"dew-point\";\n     public static final String CHANNEL_PRESSURE = \"pressure\";\n     public static final String CHANNEL_HUMIDITY = \"humidity\";\n     public static final String CHANNEL_WIND_SPEED = \"wind-speed\";\n     public static final String CHANNEL_WIND_DIRECTION = \"wind-direction\";\n     public static final String CHANNEL_GUST_SPEED = \"gust-speed\";\n     public static final String CHANNEL_CLOUDINESS = \"cloudiness\";\n+    public static final String CHANNEL_PRECIP_PROBABILITY = \"precip-probability\";\n     public static final String CHANNEL_RAIN = \"rain\";\n     public static final String CHANNEL_SNOW = \"snow\";\n     public static final String CHANNEL_VISIBILITY = \"visibility\";\n     public static final String CHANNEL_UVINDEX = \"uvindex\";\n+    public static final String CHANNEL_PRECIPITATION = \"precipitation\";\n \n     // List of all configuration\n     public static final String CONFIG_FORECAST_DAYS = \"forecastDays\";\n+\n+    // relative number of days in history\n+    public static final String CONFIG_HISTORY_DAYS = \"historyDays\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MTU3MA==", "bodyText": "The ByteArrayFileCache is now available in OHC. Please revert this change.", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r528391570", "createdAt": "2020-11-22T19:18:11Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/connection/OpenWeatherMapConnection.java", "diffHunk": "@@ -38,8 +39,10 @@\n import org.openhab.binding.openweathermap.internal.dto.OpenWeatherMapJsonHourlyForecastData;\n import org.openhab.binding.openweathermap.internal.dto.OpenWeatherMapJsonUVIndexData;\n import org.openhab.binding.openweathermap.internal.dto.OpenWeatherMapJsonWeatherData;\n+import org.openhab.binding.openweathermap.internal.dto.onecall.OpenWeatherMapOneCallAPIData;\n+import org.openhab.binding.openweathermap.internal.dto.onecallhist.OpenWeatherMapOneCallHistAPIData;\n import org.openhab.binding.openweathermap.internal.handler.OpenWeatherMapAPIHandler;\n-import org.openhab.core.cache.ByteArrayFileCache;\n+import org.openhab.binding.openweathermap.internal.utils.ByteArrayFileCache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MTYyMA==", "bodyText": "Please remove this class. It is not needed anymore because it is available in OHC.", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r528391620", "createdAt": "2020-11-22T19:18:53Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/utils/ByteArrayFileCache.java", "diffHunk": "@@ -0,0 +1,238 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.openweathermap.internal.utils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MjA5NQ==", "bodyText": "What is the difference between this class and the other Weather class? (see https://github.com/openhab/openhab-addons/pull/9062/files#diff-8d98c5ea97753b200daab2546b605d6713a25af0a2c16ef830cc678bc2eb35b2)", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r528392095", "createdAt": "2020-11-22T19:23:17Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/dto/onecall/Weather_.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.openweathermap.internal.dto.onecall;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MjEwMw==", "bodyText": "What is the difference between this class and the other Weather class? (see https://github.com/openhab/openhab-addons/pull/9062/files#diff-8d98c5ea97753b200daab2546b605d6713a25af0a2c16ef830cc678bc2eb35b2)", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r528392103", "createdAt": "2020-11-22T19:23:26Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/dto/onecall/Weather__.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.openweathermap.internal.dto.onecall;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MjE2Ng==", "bodyText": "What is the difference between this class and the other Weather class? (see https://github.com/openhab/openhab-addons/pull/9062/files#diff-9a8c2612d60ade9bb74e96978e5aba5d07bd90f08579e2001039c9c212e79cd7)", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r528392166", "createdAt": "2020-11-22T19:24:15Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/dto/onecallhist/Weather_.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.openweathermap.internal.dto.onecallhist;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MjYyOA==", "bodyText": "Can you check the file encoding? It needs to be ISO-8859.", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r528392628", "createdAt": "2020-11-22T19:28:05Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/resources/OH-INF/i18n/openweathermap_de.properties", "diffHunk": "@@ -4,11 +4,11 @@ binding.openweathermap.description = OpenWeatherMap - Aktuelles Wetter und Progn\n \n # bridge types\n thing-type.openweathermap.weather-api.label = OpenWeatherMap Konto\n-thing-type.openweathermap.weather-api.description = Erm\ufffdglicht den Zugriff auf die OpenWeatherMap API.\n+thing-type.openweathermap.weather-api.description = Erm\ufffdglicht den Zugriff auf die OpenWeatherMap API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODM5MjY1OQ==", "bodyText": "see above (file encoding).", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r528392659", "createdAt": "2020-11-22T19:28:28Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/resources/OH-INF/i18n/openweathermap_fr.properties", "diffHunk": "@@ -1,257 +1,261 @@\n # binding\n binding.openweathermap.name = Extension OpenWeatherMap\n-binding.openweathermap.description = L'extension OpenWeatherMap fournit la m\ufffdt\ufffdo actuelle et les pr\ufffdvisions dans votre ville.\n+binding.openweathermap.description = L'extension OpenWeatherMap fournit la m\ufffdt\ufffdo actuelle et les pr\ufffdvisions dans votre ville.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95aa3567781e2e5cf3ded3ddf95ad2e6ec34b597"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a8f265cc7eeaeec5ef5f7448fe56e83215b859e", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/1a8f265cc7eeaeec5ef5f7448fe56e83215b859e", "committedDate": "2020-11-28T16:18:29Z", "message": "Updates requested by cweitkamp\n\nSigned-off-by: wolfii <wolfgang.klimt@consol.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDA0NzU2", "url": "https://github.com/openhab/openhab-addons/pull/9062#pullrequestreview-540404756", "createdAt": "2020-11-28T17:10:05Z", "commit": {"oid": "1a8f265cc7eeaeec5ef5f7448fe56e83215b859e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxNzoxMDowNVrOH7azFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxNzoxMDowNVrOH7azFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjA2NzA5NA==", "bodyText": "One final comment from my side. The author-tag now is deprecated. Please remove it. Thanks for your efforts.", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r532067094", "createdAt": "2020-11-28T17:10:05Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/resources/OH-INF/binding/binding.xml", "diffHunk": "@@ -5,6 +5,6 @@\n \n \t<name>OpenWeatherMap Binding</name>\n \t<description>OpenWeatherMap - Current weather and forecasts in your city.</description>\n-\t<author>Christoph Weitkamp</author>\n+\t<author>Christoph Weitkamp, Wolfgang Klimt</author>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a8f265cc7eeaeec5ef5f7448fe56e83215b859e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60cdc9065da41e81165a98f6d0155b74b61fa937", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/60cdc9065da41e81165a98f6d0155b74b61fa937", "committedDate": "2020-11-28T17:56:34Z", "message": "Removed author tag\n\nSigned-off-by: wolfii <wolfgang.klimt@consol.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDA5MDMy", "url": "https://github.com/openhab/openhab-addons/pull/9062#pullrequestreview-540409032", "createdAt": "2020-11-28T18:24:47Z", "commit": {"oid": "60cdc9065da41e81165a98f6d0155b74b61fa937"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDE1MTM0", "url": "https://github.com/openhab/openhab-addons/pull/9062#pullrequestreview-540415134", "createdAt": "2020-11-28T20:16:49Z", "commit": {"oid": "60cdc9065da41e81165a98f6d0155b74b61fa937"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQyMDoxNjo0OVrOH7c7Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMzozMDo0OFrOH7fz5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEwMTk5MQ==", "bodyText": "Nullable annotations aren't needed on local variables, this can be removed.", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r532101991", "createdAt": "2020-11-28T20:16:49Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/AbstractOpenWeatherMapHandler.java", "diffHunk": "@@ -205,8 +206,10 @@ protected State getQuantityTypeState(@Nullable Number value, Unit<?> unit) {\n     }\n \n     protected List<Channel> createChannelsForGroup(String channelGroupId, ChannelGroupTypeUID channelGroupTypeUID) {\n-        logger.debug(\"Building channel group '{}' for thing '{}'.\", channelGroupId, getThing().getUID());\n+        logger.debug(\"Building channel group '{}' for thing '{}' and GroupType '{}'.\", channelGroupId,\n+                getThing().getUID(), channelGroupTypeUID);\n         List<Channel> channels = new ArrayList<>();\n+        @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60cdc9065da41e81165a98f6d0155b74b61fa937"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE0OTIyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                for (int i = (forecastDays < 2) ? 2 : forecastDays; i < newForecastDays; ++i) {\n          \n          \n            \n                                for (int i = Math.max(2, forecastDays); i < newForecastDays; i++) {", "url": "https://github.com/openhab/openhab-addons/pull/9062#discussion_r532149221", "createdAt": "2020-11-29T03:30:48Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/OpenWeatherMapOneCallHandler.java", "diffHunk": "@@ -0,0 +1,636 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.openweathermap.internal.handler;\n+\n+import static org.openhab.binding.openweathermap.internal.OpenWeatherMapBindingConstants.*;\n+import static org.openhab.core.library.unit.MetricPrefix.*;\n+import static org.openhab.core.library.unit.SIUnits.*;\n+import static org.openhab.core.library.unit.SmartHomeUnits.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.openweathermap.internal.config.OpenWeatherMapOneCallConfiguration;\n+import org.openhab.binding.openweathermap.internal.connection.OpenWeatherMapCommunicationException;\n+import org.openhab.binding.openweathermap.internal.connection.OpenWeatherMapConfigurationException;\n+import org.openhab.binding.openweathermap.internal.connection.OpenWeatherMapConnection;\n+import org.openhab.binding.openweathermap.internal.dto.onecall.*;\n+import org.openhab.core.i18n.TimeZoneProvider;\n+import org.openhab.core.library.types.QuantityType;\n+import org.openhab.core.thing.*;\n+import org.openhab.core.thing.binding.builder.ThingBuilder;\n+import org.openhab.core.types.State;\n+import org.openhab.core.types.UnDefType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.gson.JsonSyntaxException;\n+\n+/**\n+ * The {@link OpenWeatherMapOneCallHandler} is responsible for handling commands, which are sent to one of\n+ * the channels.\n+ *\n+ * @author Wolfgang Klimt - Initial contribution\n+ */\n+@NonNullByDefault\n+public class OpenWeatherMapOneCallHandler extends AbstractOpenWeatherMapHandler {\n+\n+    private final Logger logger = LoggerFactory.getLogger(OpenWeatherMapOneCallHandler.class);\n+\n+    private static final String CHANNEL_GROUP_MINUTELY_FORECAST_PREFIX = \"forecastMinutes\";\n+    private static final String CHANNEL_GROUP_HOURLY_FORECAST_PREFIX = \"forecastHours\";\n+    private static final String CHANNEL_GROUP_DAILY_FORECAST_PREFIX = \"forecastDay\";\n+    private static final Pattern CHANNEL_GROUP_HOURLY_FORECAST_PREFIX_PATTERN = Pattern\n+            .compile(CHANNEL_GROUP_HOURLY_FORECAST_PREFIX + \"([0-9]*)\");\n+    private static final Pattern CHANNEL_GROUP_DAILY_FORECAST_PREFIX_PATTERN = Pattern\n+            .compile(CHANNEL_GROUP_DAILY_FORECAST_PREFIX + \"([0-9]*)\");\n+    private static final Pattern CHANNEL_GROUP_MINUTELY_FORECAST_PREFIX_PATTERN = Pattern\n+            .compile(CHANNEL_GROUP_MINUTELY_FORECAST_PREFIX + \"([0-9]*)\");\n+\n+    private @Nullable OpenWeatherMapOneCallAPIData weatherData;\n+\n+    private int forecastMinutes = 60;\n+    private int forecastHours = 24;\n+    private int forecastDays = 8;\n+\n+    public OpenWeatherMapOneCallHandler(Thing thing, final TimeZoneProvider timeZoneProvider) {\n+        super(thing, timeZoneProvider);\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        super.initialize();\n+        logger.debug(\"Initialize OpenWeatherMapOneCallHandler handler '{}'.\", getThing().getUID());\n+        OpenWeatherMapOneCallConfiguration config = getConfigAs(OpenWeatherMapOneCallConfiguration.class);\n+\n+        boolean configValid = true;\n+        int newForecastMinutes = config.forecastMinutes;\n+        if (newForecastMinutes < 0 || newForecastMinutes > 60) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n+                    \"@text/offline.conf-error-not-supported-onecall-number-of-minutes\");\n+            configValid = false;\n+        }\n+        int newForecastHours = config.forecastHours;\n+        if (newForecastHours < 0 || newForecastHours > 48) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n+                    \"@text/offline.conf-error-not-supported-onecall-number-of-hours\");\n+            configValid = false;\n+        }\n+        int newForecastDays = config.forecastDays;\n+        if (newForecastDays < 0 || newForecastDays > 8) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n+                    \"@text/offline.conf-error-not-supported-onecall-number-of-days\");\n+            configValid = false;\n+        }\n+\n+        if (configValid) {\n+            logger.debug(\"Rebuilding thing '{}'.\", getThing().getUID());\n+            List<Channel> toBeAddedChannels = new ArrayList<>();\n+            List<Channel> toBeRemovedChannels = new ArrayList<>();\n+            toBeAddedChannels\n+                    .addAll(createChannelsForGroup(CHANNEL_GROUP_ONECALL_CURRENT, CHANNEL_GROUP_TYPE_ONECALL_CURRENT));\n+\n+            if (forecastMinutes != newForecastMinutes) {\n+                logger.debug(\"forecastMinutes changed from {} to {}. Rebuilding minutely forecast channel groups.\",\n+                        forecastMinutes, newForecastMinutes);\n+                if (forecastMinutes > newForecastMinutes) {\n+                    for (int i = newForecastMinutes + 1; i <= forecastMinutes; i++) {\n+                        toBeRemovedChannels.addAll(removeChannelsOfGroup(\n+                                CHANNEL_GROUP_MINUTELY_FORECAST_PREFIX + ((i < 10) ? \"0\" : \"\") + Integer.toString(i)));\n+                    }\n+                } else {\n+                    for (int i = forecastMinutes + 1; i <= newForecastMinutes; i++) {\n+                        toBeAddedChannels.addAll(createChannelsForGroup(\n+                                CHANNEL_GROUP_MINUTELY_FORECAST_PREFIX + ((i < 10) ? \"0\" : \"\") + Integer.toString(i),\n+                                CHANNEL_GROUP_TYPE_ONECALL_MINUTELY_FORECAST));\n+                    }\n+                }\n+                forecastMinutes = newForecastMinutes;\n+            }\n+            if (forecastHours != newForecastHours) {\n+                logger.debug(\"ForecastHours changed from {} to {}. Rebuilding hourly forecast channel groups.\",\n+                        forecastHours, newForecastHours);\n+                if (forecastHours > newForecastHours) {\n+                    for (int i = newForecastHours + 1; i <= forecastHours; i++) {\n+                        toBeRemovedChannels.addAll(removeChannelsOfGroup(\n+                                CHANNEL_GROUP_HOURLY_FORECAST_PREFIX + ((i < 10) ? \"0\" : \"\") + Integer.toString(i)));\n+                    }\n+                } else {\n+                    for (int i = forecastHours + 1; i <= newForecastHours; i++) {\n+                        toBeAddedChannels.addAll(createChannelsForGroup(\n+                                CHANNEL_GROUP_HOURLY_FORECAST_PREFIX + ((i < 10) ? \"0\" : \"\") + Integer.toString(i),\n+                                CHANNEL_GROUP_TYPE_ONECALL_HOURLY_FORECAST));\n+                    }\n+                }\n+                forecastHours = newForecastHours;\n+            }\n+            if (forecastDays != newForecastDays) {\n+                logger.debug(\"ForecastDays changed from {} to {}. Rebuilding daily forecast channel groups.\",\n+                        forecastDays, newForecastDays);\n+                if (forecastDays > newForecastDays) {\n+                    if (newForecastDays < 1) {\n+                        toBeRemovedChannels.addAll(removeChannelsOfGroup(CHANNEL_GROUP_FORECAST_TODAY));\n+                    }\n+                    if (newForecastDays < 2) {\n+                        toBeRemovedChannels.addAll(removeChannelsOfGroup(CHANNEL_GROUP_FORECAST_TOMORROW));\n+                    }\n+                    for (int i = newForecastDays; i < forecastDays; ++i) {\n+                        toBeRemovedChannels.addAll(\n+                                removeChannelsOfGroup(CHANNEL_GROUP_DAILY_FORECAST_PREFIX + Integer.toString(i)));\n+                    }\n+                } else {\n+                    if (forecastDays == 0 && newForecastDays > 0) {\n+                        toBeAddedChannels.addAll(createChannelsForGroup(CHANNEL_GROUP_FORECAST_TODAY,\n+                                CHANNEL_GROUP_TYPE_ONECALL_DAILY_FORECAST));\n+                    }\n+                    if (forecastDays <= 1 && newForecastDays > 1) {\n+                        toBeAddedChannels.addAll(createChannelsForGroup(CHANNEL_GROUP_FORECAST_TOMORROW,\n+                                CHANNEL_GROUP_TYPE_ONECALL_DAILY_FORECAST));\n+                    }\n+                    for (int i = (forecastDays < 2) ? 2 : forecastDays; i < newForecastDays; ++i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60cdc9065da41e81165a98f6d0155b74b61fa937"}, "originalPosition": 164}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "906c9a7629669296bb0f7d30af315a07612531fb", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/906c9a7629669296bb0f7d30af315a07612531fb", "committedDate": "2020-11-29T09:21:48Z", "message": "Review comments from cpmeister\n\nSigned-off-by: wolfii <wolfgang.klimt@consol.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjU1MzEx", "url": "https://github.com/openhab/openhab-addons/pull/9062#pullrequestreview-541255311", "createdAt": "2020-11-30T20:08:20Z", "commit": {"oid": "906c9a7629669296bb0f7d30af315a07612531fb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4114, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}