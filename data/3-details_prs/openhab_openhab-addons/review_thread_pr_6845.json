{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjExMTg1", "number": 6845, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNjoxMjo0NlrODYjwiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMjo1NToxNlrODY_y_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDc4MjgwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNjoxMjo0NlrOFefCTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDoxNTo0M1rOFe0e7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxMDA5NA==", "bodyText": "Why are you checking if the 'format' field contains the \"%\" sign? Shouldn't this be:\nif (attributes.unit != null && attributes.unit.contains(\"%\")) {\nHomie V4 specification defines that, for integer and float, \"format\" can only describe 'a range of payloads e.g. 10:15' (https://homieiot.github.io/specification/#property-attributes).\nPerhaps there is something I'm misssing \ud83e\udd14\nEDIT: Perhaps we should also check if the format is 0:100, so that we can ensure that the  published value is not outside the Percentage range (0-100).", "url": "https://github.com/openhab/openhab-addons/pull/6845#discussion_r367510094", "createdAt": "2020-01-16T16:12:46Z", "author": {"login": "bodiroga"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -187,13 +188,16 @@ public void createChannelFromAttribute() {\n                 BigDecimal min = s.length == 2 ? convertFromString(s[0]) : null;\n                 BigDecimal max = s.length == 2 ? convertFromString(s[1]) : null;\n                 BigDecimal step = (min != null && max != null)\n-                        ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n-                        : null;\n+                           ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n+                           : null;\n                 if (step != null && !isDecimal && step.intValue() <= 0) {\n-                    step = new BigDecimal(1);\n+                        step = new BigDecimal(1);\n+                }\n+                if(attributes.unit != null && attributes.format.contains(\"%\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "393ec6bd56c1ba077a16457964ab37fcac739be4"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg2MTQ4NQ==", "bodyText": "I forgot to add the latest changes to this branch. I will push them as I changed this already to unit.\nNot really, when I tested it OpenHab calculated the value from the format range from the Percentage value. So if your format is 0:200 and you have the Dimmer set to 50% the value which will be sent to MQTT is 100. I find it useful for values where you need dimmmer functionality but your range goes from 0 to 255 and OpenHab should display it as Dimmer.", "url": "https://github.com/openhab/openhab-addons/pull/6845#discussion_r367861485", "createdAt": "2020-01-17T10:15:43Z", "author": {"login": "szwenni"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -187,13 +188,16 @@ public void createChannelFromAttribute() {\n                 BigDecimal min = s.length == 2 ? convertFromString(s[0]) : null;\n                 BigDecimal max = s.length == 2 ? convertFromString(s[1]) : null;\n                 BigDecimal step = (min != null && max != null)\n-                        ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n-                        : null;\n+                           ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n+                           : null;\n                 if (step != null && !isDecimal && step.intValue() <= 0) {\n-                    step = new BigDecimal(1);\n+                        step = new BigDecimal(1);\n+                }\n+                if(attributes.unit != null && attributes.format.contains(\"%\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxMDA5NA=="}, "originalCommit": {"oid": "393ec6bd56c1ba077a16457964ab37fcac739be4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDc4OTM5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNjoxNDozNVrOFefGdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMDoxNzo0OVrOFe0iVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxMTE1OQ==", "bodyText": "Is there any formatting problem here? There are 3 more spaces in this lines.", "url": "https://github.com/openhab/openhab-addons/pull/6845#discussion_r367511159", "createdAt": "2020-01-16T16:14:35Z", "author": {"login": "bodiroga"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -187,13 +188,16 @@ public void createChannelFromAttribute() {\n                 BigDecimal min = s.length == 2 ? convertFromString(s[0]) : null;\n                 BigDecimal max = s.length == 2 ? convertFromString(s[1]) : null;\n                 BigDecimal step = (min != null && max != null)\n-                        ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n-                        : null;\n+                           ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "393ec6bd56c1ba077a16457964ab37fcac739be4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg2MjM1OA==", "bodyText": "Fixed this in the latest commit", "url": "https://github.com/openhab/openhab-addons/pull/6845#discussion_r367862358", "createdAt": "2020-01-17T10:17:49Z", "author": {"login": "szwenni"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -187,13 +188,16 @@ public void createChannelFromAttribute() {\n                 BigDecimal min = s.length == 2 ? convertFromString(s[0]) : null;\n                 BigDecimal max = s.length == 2 ? convertFromString(s[1]) : null;\n                 BigDecimal step = (min != null && max != null)\n-                        ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n-                        : null;\n+                           ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUxMTE1OQ=="}, "originalCommit": {"oid": "393ec6bd56c1ba077a16457964ab37fcac739be4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTM3NTk1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMjo1MzoyMVrOFfKs6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMzo1NDo0M1rOFfK3IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyNTUxNA==", "bodyText": "New spacing problem? Have you applied the openHAB formatter to your Eclipse IDE?", "url": "https://github.com/openhab/openhab-addons/pull/6845#discussion_r368225514", "createdAt": "2020-01-18T12:53:21Z", "author": {"login": "bodiroga"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -190,10 +191,13 @@ public void createChannelFromAttribute() {\n                         ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n                         : null;\n                 if (step != null && !isDecimal && step.intValue() <= 0) {\n-                    step = new BigDecimal(1);\n+                        step = new BigDecimal(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a953f27fb34d633dfe0ba6c3cffe6d6d13af533"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyODEyOQ==", "bodyText": "Now it looks correct, the auto formatter seems to have problems in the switch case statement somehow.", "url": "https://github.com/openhab/openhab-addons/pull/6845#discussion_r368228129", "createdAt": "2020-01-18T13:54:43Z", "author": {"login": "szwenni"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -190,10 +191,13 @@ public void createChannelFromAttribute() {\n                         ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n                         : null;\n                 if (step != null && !isDecimal && step.intValue() <= 0) {\n-                    step = new BigDecimal(1);\n+                        step = new BigDecimal(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyNTUxNA=="}, "originalCommit": {"oid": "6a953f27fb34d633dfe0ba6c3cffe6d6d13af533"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTM3NjYxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMjo1NToxNlrOFfKtOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMzo1NDo1MFrOFfK3KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyNTU5NQ==", "bodyText": "if (attribute.unit != null && attributes.unit.contains(\"%\")) {\nWe usually place a white space between the 'if' and the parenthesis. Let's keep this coherent across the file.", "url": "https://github.com/openhab/openhab-addons/pull/6845#discussion_r368225595", "createdAt": "2020-01-18T12:55:16Z", "author": {"login": "bodiroga"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -190,10 +191,13 @@ public void createChannelFromAttribute() {\n                         ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n                         : null;\n                 if (step != null && !isDecimal && step.intValue() <= 0) {\n-                    step = new BigDecimal(1);\n+                        step = new BigDecimal(1);\n+                }\n+                if(attributes.unit != null && attributes.unit.contains(\"%\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a953f27fb34d633dfe0ba6c3cffe6d6d13af533"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyODEzNg==", "bodyText": "Fixed it", "url": "https://github.com/openhab/openhab-addons/pull/6845#discussion_r368228136", "createdAt": "2020-01-18T13:54:50Z", "author": {"login": "szwenni"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -190,10 +191,13 @@ public void createChannelFromAttribute() {\n                         ? max.subtract(min).divide(new BigDecimal(100.0), new MathContext(isDecimal ? 2 : 0))\n                         : null;\n                 if (step != null && !isDecimal && step.intValue() <= 0) {\n-                    step = new BigDecimal(1);\n+                        step = new BigDecimal(1);\n+                }\n+                if(attributes.unit != null && attributes.unit.contains(\"%\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyNTU5NQ=="}, "originalCommit": {"oid": "6a953f27fb34d633dfe0ba6c3cffe6d6d13af533"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1089, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}