{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NTY1NDAy", "number": 8796, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMjoxODoyMFrOEv_4jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzoxODowOFrOEwDh9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NzY1MTk5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoBasicHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMjoxODoyMFrOHlTL2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMjoxODoyMFrOHlTL2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg3MzY4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Map<String, MiIoBasicChannel> refreshListCustomCommands = new HashMap<>();\n          \n          \n            \n                private Map<String, MiIoBasicChannel> refreshListCustomCommands = new HashMap<>();", "url": "https://github.com/openhab/openhab-addons/pull/8796#discussion_r508873688", "createdAt": "2020-10-20T22:18:20Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoBasicHandler.java", "diffHunk": "@@ -83,12 +83,16 @@\n     });\n \n     List<MiIoBasicChannel> refreshList = new ArrayList<>();\n+    Map<String, MiIoBasicChannel> refreshListCustomCommands = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad6501a9b7f1f5c2eadc9772d1d7d3674f2c43a8"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NzY3NDA4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoBasicHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMjoyNjozM1rOHlTYrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzoxNzowMlrOHlYsjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg3Njk3Mg==", "bodyText": "I'd imagine that channel types are contextual to the bindings that they are defined in, without the binding prefix I don't think that the registry would ever find the channel type you are looking for other than the system ones.", "url": "https://github.com/openhab/openhab-addons/pull/8796#discussion_r508876972", "createdAt": "2020-10-20T22:26:33Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoBasicHandler.java", "diffHunk": "@@ -398,17 +415,24 @@ private boolean buildChannelStructure(String deviceName) {\n             return null;\n         }\n         ChannelUID channelUID = new ChannelUID(getThing().getUID(), channel);\n-        ChannelTypeUID channelTypeUID = new ChannelTypeUID(channelType);\n \n         // TODO: Need to understand if this harms anything. If yes, channel only to be added when not there already.\n         // current way allows to have no issues when channels are changing.\n         if (getThing().getChannel(channel) != null) {\n             logger.info(\"Channel '{}' for thing {} already exist... removing\", channel, getThing().getUID());\n             thingBuilder.withoutChannel(new ChannelUID(getThing().getUID(), channel));\n         }\n-        Channel newChannel = ChannelBuilder.create(channelUID, datatype).withType(channelTypeUID)\n-                .withLabel(friendlyName).build();\n-        thingBuilder.withChannel(newChannel);\n+        ChannelBuilder newChannel = ChannelBuilder.create(channelUID, datatype).withLabel(friendlyName);\n+        if (!channelType.isBlank()) {\n+            ChannelTypeUID channelTypeUID = new ChannelTypeUID(channelType);\n+            if (channelTypeRegistry.getChannelType(channelTypeUID) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad6501a9b7f1f5c2eadc9772d1d7d3674f2c43a8"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODkwMDExNg==", "bodyText": "True, but the binding prefix is added in the the getChannelType\nhttps://github.com/openhab/openhab-addons/pull/8796/files#diff-1fbdf89cc35d86f5da2024be7a5588a90fca7e7314551a250755469e435ac900L138", "url": "https://github.com/openhab/openhab-addons/pull/8796#discussion_r508900116", "createdAt": "2020-10-20T23:33:31Z", "author": {"login": "marcelrv"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoBasicHandler.java", "diffHunk": "@@ -398,17 +415,24 @@ private boolean buildChannelStructure(String deviceName) {\n             return null;\n         }\n         ChannelUID channelUID = new ChannelUID(getThing().getUID(), channel);\n-        ChannelTypeUID channelTypeUID = new ChannelTypeUID(channelType);\n \n         // TODO: Need to understand if this harms anything. If yes, channel only to be added when not there already.\n         // current way allows to have no issues when channels are changing.\n         if (getThing().getChannel(channel) != null) {\n             logger.info(\"Channel '{}' for thing {} already exist... removing\", channel, getThing().getUID());\n             thingBuilder.withoutChannel(new ChannelUID(getThing().getUID(), channel));\n         }\n-        Channel newChannel = ChannelBuilder.create(channelUID, datatype).withType(channelTypeUID)\n-                .withLabel(friendlyName).build();\n-        thingBuilder.withChannel(newChannel);\n+        ChannelBuilder newChannel = ChannelBuilder.create(channelUID, datatype).withLabel(friendlyName);\n+        if (!channelType.isBlank()) {\n+            ChannelTypeUID channelTypeUID = new ChannelTypeUID(channelType);\n+            if (channelTypeRegistry.getChannelType(channelTypeUID) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg3Njk3Mg=="}, "originalCommit": {"oid": "ad6501a9b7f1f5c2eadc9772d1d7d3674f2c43a8"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk2Mzk4MQ==", "bodyText": "Ah, I saw the part you removed, but didn't notice the part you left in. You are correct.", "url": "https://github.com/openhab/openhab-addons/pull/8796#discussion_r508963981", "createdAt": "2020-10-21T03:17:02Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoBasicHandler.java", "diffHunk": "@@ -398,17 +415,24 @@ private boolean buildChannelStructure(String deviceName) {\n             return null;\n         }\n         ChannelUID channelUID = new ChannelUID(getThing().getUID(), channel);\n-        ChannelTypeUID channelTypeUID = new ChannelTypeUID(channelType);\n \n         // TODO: Need to understand if this harms anything. If yes, channel only to be added when not there already.\n         // current way allows to have no issues when channels are changing.\n         if (getThing().getChannel(channel) != null) {\n             logger.info(\"Channel '{}' for thing {} already exist... removing\", channel, getThing().getUID());\n             thingBuilder.withoutChannel(new ChannelUID(getThing().getUID(), channel));\n         }\n-        Channel newChannel = ChannelBuilder.create(channelUID, datatype).withType(channelTypeUID)\n-                .withLabel(friendlyName).build();\n-        thingBuilder.withChannel(newChannel);\n+        ChannelBuilder newChannel = ChannelBuilder.create(channelUID, datatype).withLabel(friendlyName);\n+        if (!channelType.isBlank()) {\n+            ChannelTypeUID channelTypeUID = new ChannelTypeUID(channelType);\n+            if (channelTypeRegistry.getChannelType(channelTypeUID) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg3Njk3Mg=="}, "originalCommit": {"oid": "ad6501a9b7f1f5c2eadc9772d1d7d3674f2c43a8"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODI0OTQ5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/resources/database/chuangmi.plug.v3fw.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwMzoxODowOFrOHlYtug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOToyMToyOFrOHl_0Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk2NDI4Mg==", "bodyText": "Also, why did the formatting change for this file? It is not inconsistent with the other files.", "url": "https://github.com/openhab/openhab-addons/pull/8796#discussion_r508964282", "createdAt": "2020-10-21T03:18:08Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/resources/database/chuangmi.plug.v3fw.json", "diffHunk": "@@ -1,64 +1,68 @@\n {\n-\t\"deviceMapping\": {\n-\t\t\"id\": [\n-\t\t\t\"chuangmi.plug.v3\",\n-\t\t\t\"chuangmi.plug.v3fw\",\n-\t\t\t\"chuangmi.plug.hmi206\",\n-\t\t\t\"chuangmi.plug.hmi208\"\n-\t\t],\n-\t\t\"channels\": [\n-\t\t\t{\n-\t\t\t\t\"property\": \"power\",\n-\t\t\t\t\"friendlyName\": \"Power\",\n-\t\t\t\t\"channel\": \"power\",\n-\t\t\t\t\"type\": \"Switch\",\n-\t\t\t\t\"refresh\": true,\n-\t\t\t\t\"ChannelGroup\": \"\",\n-\t\t\t\t\"readmeComment\": \"If this channel does not respond to on/off replace the model with chuangmi.plug.v3old in the config or upgrade firmware\",\n-\t\t\t\t\"actions\": [\n-\t\t\t\t\t{\n-\t\t\t\t\t\t\"command\": \"set_power\",\n-\t\t\t\t\t\t\"parameterType\": \"ONOFF\"\n-\t\t\t\t\t}\n-\t\t\t\t]\n-\t\t\t},\n-\t\t\t{\n-\t\t\t\t\"property\": \"usb_on\",\n-\t\t\t\t\"friendlyName\": \"USB\",\n-\t\t\t\t\"channel\": \"usb\",\n-\t\t\t\t\"type\": \"Switch\",\n-\t\t\t\t\"refresh\": true,\n-\t\t\t\t\"ChannelGroup\": \"actions\",\n-\t\t\t\t\"actions\": [\n-\t\t\t\t\t{\n-\t\t\t\t\t\t\"command\": \"set_usb_*\",\n-\t\t\t\t\t\t\"parameterType\": \"ONOFFPARA\"\n-\t\t\t\t\t}\n-\t\t\t\t]\n-\t\t\t},\n-\t\t\t{\n-\t\t\t\t\"property\": \"temperature\",\n-\t\t\t\t\"friendlyName\": \"Temperature\",\n-\t\t\t\t\"channel\": \"temperature\",\n-\t\t\t\t\"type\": \"Number\",\n-\t\t\t\t\"refresh\": true,\n-\t\t\t\t\"ChannelGroup\": \"\",\n-\t\t\t\t\"actions\": []\n-\t\t\t},\n-\t\t\t{\n-\t\t\t\t\"property\": \"wifi_led\",\n-\t\t\t\t\"friendlyName\": \"Wifi LED\",\n-\t\t\t\t\"channel\": \"led\",\n-\t\t\t\t\"type\": \"Switch\",\n-\t\t\t\t\"refresh\": true,\n-\t\t\t\t\"ChannelGroup\": \"actions\",\n-\t\t\t\t\"actions\": [\n-\t\t\t\t\t{\n-\t\t\t\t\t\t\"command\": \"set_wifi_led\",\n-\t\t\t\t\t\t\"parameterType\": \"ONOFF\"\n-\t\t\t\t\t}\n-\t\t\t\t]\n-\t\t\t}\n-\t\t]\n-\t}\n+  \"deviceMapping\": {\n+    \"id\": [\n+      \"chuangmi.plug.v3\",\n+      \"chuangmi.plug.v3fw\",\n+      \"chuangmi.plug.hmi206\",\n+      \"chuangmi.plug.hmi208\"\n+    ],\n+    \"channels\": [\n+      {\n+        \"property\": \"power\",\n+        \"friendlyName\": \"Power\",\n+        \"channel\": \"power\",\n+        \"channelType\": \"power\",\n+        \"type\": \"Switch\",\n+        \"refresh\": true,\n+        \"ChannelGroup\": \"\",\n+        \"actions\": [\n+          {\n+            \"command\": \"set_power\",\n+            \"parameterType\": \"ONOFF\"\n+          }\n+        ],\n+        \"readmeComment\": \"If this channel does not respond to on/off replace the model with chuangmi.plug.v3old in the config or upgrade firmware\"\n+      },\n+      {\n+        \"property\": \"usb_on\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9affb620408a3b2e1bd1811faf76c49ed973d64"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYwNDg5OA==", "bodyText": "I used that file for my testing, and did some intrim reset to undo my changes for the testing.\nseems that that also undone the formatting changes...\nApplied the formatter once more.", "url": "https://github.com/openhab/openhab-addons/pull/8796#discussion_r509604898", "createdAt": "2020-10-21T19:21:28Z", "author": {"login": "marcelrv"}, "path": "bundles/org.openhab.binding.miio/src/main/resources/database/chuangmi.plug.v3fw.json", "diffHunk": "@@ -1,64 +1,68 @@\n {\n-\t\"deviceMapping\": {\n-\t\t\"id\": [\n-\t\t\t\"chuangmi.plug.v3\",\n-\t\t\t\"chuangmi.plug.v3fw\",\n-\t\t\t\"chuangmi.plug.hmi206\",\n-\t\t\t\"chuangmi.plug.hmi208\"\n-\t\t],\n-\t\t\"channels\": [\n-\t\t\t{\n-\t\t\t\t\"property\": \"power\",\n-\t\t\t\t\"friendlyName\": \"Power\",\n-\t\t\t\t\"channel\": \"power\",\n-\t\t\t\t\"type\": \"Switch\",\n-\t\t\t\t\"refresh\": true,\n-\t\t\t\t\"ChannelGroup\": \"\",\n-\t\t\t\t\"readmeComment\": \"If this channel does not respond to on/off replace the model with chuangmi.plug.v3old in the config or upgrade firmware\",\n-\t\t\t\t\"actions\": [\n-\t\t\t\t\t{\n-\t\t\t\t\t\t\"command\": \"set_power\",\n-\t\t\t\t\t\t\"parameterType\": \"ONOFF\"\n-\t\t\t\t\t}\n-\t\t\t\t]\n-\t\t\t},\n-\t\t\t{\n-\t\t\t\t\"property\": \"usb_on\",\n-\t\t\t\t\"friendlyName\": \"USB\",\n-\t\t\t\t\"channel\": \"usb\",\n-\t\t\t\t\"type\": \"Switch\",\n-\t\t\t\t\"refresh\": true,\n-\t\t\t\t\"ChannelGroup\": \"actions\",\n-\t\t\t\t\"actions\": [\n-\t\t\t\t\t{\n-\t\t\t\t\t\t\"command\": \"set_usb_*\",\n-\t\t\t\t\t\t\"parameterType\": \"ONOFFPARA\"\n-\t\t\t\t\t}\n-\t\t\t\t]\n-\t\t\t},\n-\t\t\t{\n-\t\t\t\t\"property\": \"temperature\",\n-\t\t\t\t\"friendlyName\": \"Temperature\",\n-\t\t\t\t\"channel\": \"temperature\",\n-\t\t\t\t\"type\": \"Number\",\n-\t\t\t\t\"refresh\": true,\n-\t\t\t\t\"ChannelGroup\": \"\",\n-\t\t\t\t\"actions\": []\n-\t\t\t},\n-\t\t\t{\n-\t\t\t\t\"property\": \"wifi_led\",\n-\t\t\t\t\"friendlyName\": \"Wifi LED\",\n-\t\t\t\t\"channel\": \"led\",\n-\t\t\t\t\"type\": \"Switch\",\n-\t\t\t\t\"refresh\": true,\n-\t\t\t\t\"ChannelGroup\": \"actions\",\n-\t\t\t\t\"actions\": [\n-\t\t\t\t\t{\n-\t\t\t\t\t\t\"command\": \"set_wifi_led\",\n-\t\t\t\t\t\t\"parameterType\": \"ONOFF\"\n-\t\t\t\t\t}\n-\t\t\t\t]\n-\t\t\t}\n-\t\t]\n-\t}\n+  \"deviceMapping\": {\n+    \"id\": [\n+      \"chuangmi.plug.v3\",\n+      \"chuangmi.plug.v3fw\",\n+      \"chuangmi.plug.hmi206\",\n+      \"chuangmi.plug.hmi208\"\n+    ],\n+    \"channels\": [\n+      {\n+        \"property\": \"power\",\n+        \"friendlyName\": \"Power\",\n+        \"channel\": \"power\",\n+        \"channelType\": \"power\",\n+        \"type\": \"Switch\",\n+        \"refresh\": true,\n+        \"ChannelGroup\": \"\",\n+        \"actions\": [\n+          {\n+            \"command\": \"set_power\",\n+            \"parameterType\": \"ONOFF\"\n+          }\n+        ],\n+        \"readmeComment\": \"If this channel does not respond to on/off replace the model with chuangmi.plug.v3old in the config or upgrade firmware\"\n+      },\n+      {\n+        \"property\": \"usb_on\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk2NDI4Mg=="}, "originalCommit": {"oid": "d9affb620408a3b2e1bd1811faf76c49ed973d64"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4097, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}