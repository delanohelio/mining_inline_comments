{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MTY4MTQx", "number": 8213, "title": "[solaredge] simplified internal channel modelling", "bodyText": "removed duplicated modelling of channels in JAVA code. This should be easier to maintain.\nAlso improved code quality by fixing a lot of compiler warnings (most related to missing @NonNullByDefault annotations).\nThere is no functional change implemented in this PR.", "createdAt": "2020-07-27T13:34:29Z", "url": "https://github.com/openhab/openhab-addons/pull/8213", "merged": true, "mergeCommit": {"oid": "be573d1d4ba6644445f0e32ac2fe815d8868b676"}, "closed": true, "closedAt": "2020-07-28T18:26:36Z", "author": {"login": "alexf2015"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5B3ZrgH2gAyNDU3MTY4MTQxOmJiYTczNWRhN2E2MjRjZTY1YTU0YmI0NTViNDZjOWZkN2MwZmIwOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5aspmAFqTQ1Njg5NzA0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bba735da7a624ce65a54bb455b46c9fd7c0fb093", "author": {"user": {"login": "alexf2015", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/bba735da7a624ce65a54bb455b46c9fd7c0fb093", "committedDate": "2020-07-27T13:30:11Z", "message": "refactoring: remove JAVA modelling of channels\n\nSigned-off-by: Alexander Friese <af944580@googlemail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dce281b713e14070668f5c98bd1f2a84df943e43", "author": {"user": {"login": "alexf2015", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/dce281b713e14070668f5c98bd1f2a84df943e43", "committedDate": "2020-07-27T13:30:14Z", "message": "improved code quality: fixes due to compiler warnings\n\nSigned-off-by: Alexander Friese <af944580@googlemail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODY1NzI4", "url": "https://github.com/openhab/openhab-addons/pull/8213#pullrequestreview-455865728", "createdAt": "2020-07-27T14:59:01Z", "commit": {"oid": "dce281b713e14070668f5c98bd1f2a84df943e43"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDo1OTowMVrOG3mbyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDo1OTowMVrOG3mbyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1NDU2OQ==", "bodyText": "Is the cast to Type necessary?", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r460954569", "createdAt": "2020-07-27T14:59:01Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.solaredge/src/main/java/org/openhab/binding/solaredge/internal/callback/AbstractCommandCallback.java", "diffHunk": "@@ -172,13 +190,22 @@ public CommunicationStatus getCommunicationStatus() {\n      */\n     protected abstract String getURL();\n \n-    @Override\n-    public final StatusUpdateListener getListener() {\n-        return listener;\n-    }\n-\n     @Override\n     public final void setListener(StatusUpdateListener listener) {\n         this.listener = listener;\n     }\n+\n+    /**\n+     * just a wrapper as fromJson could return null. This will avoid warnings as eclipse otherwise assumes unnecessary\n+     * null checks which are not unnecessary\n+     *\n+     * @param <T>\n+     * @param json\n+     * @param classOfT\n+     * @return\n+     * @throws JsonSyntaxException\n+     */\n+    protected <T> @Nullable T fromJson(String json, Class<T> classOfT) throws JsonSyntaxException {\n+        return gson.fromJson(json, (Type) classOfT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dce281b713e14070668f5c98bd1f2a84df943e43"}, "originalPosition": 141}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODg1NzYy", "url": "https://github.com/openhab/openhab-addons/pull/8213#pullrequestreview-455885762", "createdAt": "2020-07-27T15:21:11Z", "commit": {"oid": "dce281b713e14070668f5c98bd1f2a84df943e43"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToyMToxMVrOG3nZ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToyOToxNFrOG3nwwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3MDQ1Mg==", "bodyText": "Null annotations on inner classes are not necessary. There is a bug in checkstyle, generating a false positive warning, which can safely be ignored. Same for the others.", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r460970452", "createdAt": "2020-07-27T15:21:11Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.solaredge/src/main/java/org/openhab/binding/solaredge/internal/model/AggregateDataResponsePublicApi.java", "diffHunk": "@@ -12,346 +12,45 @@\n  */\n package org.openhab.binding.solaredge.internal.model;\n \n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n \n-import javax.measure.Unit;\n-import javax.measure.quantity.Energy;\n-\n-import org.eclipse.smarthome.core.library.types.DecimalType;\n-import org.eclipse.smarthome.core.library.types.QuantityType;\n-import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n-import org.eclipse.smarthome.core.types.State;\n-import org.eclipse.smarthome.core.types.UnDefType;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n \n /**\n  * this class is used to map the aggregate data response of the public API\n  *\n  * @author Alexander Friese - initial contribution\n  */\n-public class AggregateDataResponsePublicApi implements DataResponse {\n-\n-    private final Logger logger = LoggerFactory.getLogger(AggregateDataResponsePublicApi.class);\n-\n-    private static final String METER_TYPE_PRODUCTION = \"Production\";\n-    private static final String METER_TYPE_CONSUMPTION = \"Consumption\";\n-    private static final String METER_TYPE_SELFCONSUMPTION = \"SelfConsumption\";\n-    private static final String METER_TYPE_IMPORT = \"Purchased\";\n-    private static final String METER_TYPE_EXPORT = \"FeedIn\";\n+@NonNullByDefault\n+public class AggregateDataResponsePublicApi {\n \n+    @NonNullByDefault", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dce281b713e14070668f5c98bd1f2a84df943e43"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk3NjMyMQ==", "bodyText": "These massive compiler warnings are not nice. You could store it to a local variable, which would be one extra line each.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (overview.currentPower != null) {\n          \n          \n            \n                            putPowerType(result, channelProvider.getChannel(CHANNEL_GROUP_LIVE, CHANNEL_ID_PRODUCTION),\n          \n          \n            \n                                    overview.currentPower.power, UNIT_W);\n          \n          \n            \n                        Power localCurrentPower = overview.currentPower;\n          \n          \n            \n                        if (localCurrentPower != null) {\n          \n          \n            \n                            putPowerType(result, channelProvider.getChannel(CHANNEL_GROUP_LIVE, CHANNEL_ID_PRODUCTION),\n          \n          \n            \n                                    localCurrentPower.power, UNIT_W);", "url": "https://github.com/openhab/openhab-addons/pull/8213#discussion_r460976321", "createdAt": "2020-07-27T15:29:14Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.solaredge/src/main/java/org/openhab/binding/solaredge/internal/model/LiveDataResponseTransformer.java", "diffHunk": "@@ -0,0 +1,161 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.solaredge.internal.model;\n+\n+import static org.openhab.binding.solaredge.internal.SolarEdgeBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.thing.Channel;\n+import org.eclipse.smarthome.core.types.State;\n+import org.openhab.binding.solaredge.internal.handler.ChannelProvider;\n+import org.openhab.binding.solaredge.internal.model.LiveDataResponse.Connection;\n+import org.openhab.binding.solaredge.internal.model.LiveDataResponse.SiteCurrentPowerFlow;\n+import org.openhab.binding.solaredge.internal.model.LiveDataResponseMeterless.Overview;\n+\n+/**\n+ * transforms the http response into the openhab datamodel (instances of State)\n+ *\n+ * @author Alexander Friese - initial contribution\n+ */\n+@NonNullByDefault\n+public class LiveDataResponseTransformer extends AbstractDataResponseTransformer {\n+    private static final Double ZERO_POWER = 0.0;\n+\n+    private final ChannelProvider channelProvider;\n+\n+    public LiveDataResponseTransformer(ChannelProvider channelProvider) {\n+        this.channelProvider = channelProvider;\n+    }\n+\n+    public Map<Channel, State> transform(LiveDataResponseMeterless response) {\n+        Map<Channel, State> result = new HashMap<>(20);\n+        Overview overview = response.getOverview();\n+\n+        if (overview != null) {\n+            if (overview.currentPower != null) {\n+                putPowerType(result, channelProvider.getChannel(CHANNEL_GROUP_LIVE, CHANNEL_ID_PRODUCTION),\n+                        overview.currentPower.power, UNIT_W);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dce281b713e14070668f5c98bd1f2a84df943e43"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7b36416ca2f29c1bbf3f561b0bded5fffe33de1", "author": {"user": {"login": "alexf2015", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/d7b36416ca2f29c1bbf3f561b0bded5fffe33de1", "committedDate": "2020-07-27T18:17:39Z", "message": "fixes due to code review\n\nSigned-off-by: Alexander Friese <af944580@googlemail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79e4181d6c853747b6fecce72d02072101f47825", "author": {"user": {"login": "alexf2015", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/79e4181d6c853747b6fecce72d02072101f47825", "committedDate": "2020-07-27T18:34:31Z", "message": "adopted README\n\nSigned-off-by: Alexander Friese <af944580@googlemail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2ODk3MDQw", "url": "https://github.com/openhab/openhab-addons/pull/8213#pullrequestreview-456897040", "createdAt": "2020-07-28T18:26:04Z", "commit": {"oid": "79e4181d6c853747b6fecce72d02072101f47825"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4893, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}