{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMTEzMTU3", "number": 8871, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMToyMTozNlrOEyTTGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoyOTo1N1rOE25ZMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTgwNDQyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/LinkyHandlerFactory.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMToyMTozNlrOHo3L9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxOTowMDoyMlrOHrpVvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwOTI3MA==", "bodyText": "Why do you need a new client for each thing?", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r512609270", "createdAt": "2020-10-27T11:21:36Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/LinkyHandlerFactory.java", "diffHunk": "@@ -69,10 +68,9 @@ public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n     protected @Nullable ThingHandler createHandler(Thing thing) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n-        if (supportsThingType(thingTypeUID)) {\n-            return new LinkyHandler(thing, localeProvider, gson, httpClient);\n-        }\n-\n-        return null;\n+        return supportsThingType(thingTypeUID)\n+                ? new LinkyHandler(thing, localeProvider, gson,\n+                        httpClientFactory.createHttpClient(thingTypeUID.getAsString().replace(\":\", \"_\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "648368732e9c234a32a81da4bd34af0100f7ef16"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYyNDAwNw==", "bodyText": "Because the thing may start or stop the client.", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r512624007", "createdAt": "2020-10-27T11:46:46Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/LinkyHandlerFactory.java", "diffHunk": "@@ -69,10 +68,9 @@ public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n     protected @Nullable ThingHandler createHandler(Thing thing) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n-        if (supportsThingType(thingTypeUID)) {\n-            return new LinkyHandler(thing, localeProvider, gson, httpClient);\n-        }\n-\n-        return null;\n+        return supportsThingType(thingTypeUID)\n+                ? new LinkyHandler(thing, localeProvider, gson,\n+                        httpClientFactory.createHttpClient(thingTypeUID.getAsString().replace(\":\", \"_\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwOTI3MA=="}, "originalCommit": {"oid": "648368732e9c234a32a81da4bd34af0100f7ef16"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY0NDQzOA==", "bodyText": "But why not having the client setup, started and stopped in the thing handler factory?\nThere is nothing depending on thing?", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r512644438", "createdAt": "2020-10-27T12:17:18Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/LinkyHandlerFactory.java", "diffHunk": "@@ -69,10 +68,9 @@ public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n     protected @Nullable ThingHandler createHandler(Thing thing) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n-        if (supportsThingType(thingTypeUID)) {\n-            return new LinkyHandler(thing, localeProvider, gson, httpClient);\n-        }\n-\n-        return null;\n+        return supportsThingType(thingTypeUID)\n+                ? new LinkyHandler(thing, localeProvider, gson,\n+                        httpClientFactory.createHttpClient(thingTypeUID.getAsString().replace(\":\", \"_\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwOTI3MA=="}, "originalCommit": {"oid": "648368732e9c234a32a81da4bd34af0100f7ef16"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI3OTMwNA==", "bodyText": "Why would the thing handler factory takes care of that ? It does not know is a given thing is activated or not.", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r513279304", "createdAt": "2020-10-28T09:04:04Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/LinkyHandlerFactory.java", "diffHunk": "@@ -69,10 +68,9 @@ public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n     protected @Nullable ThingHandler createHandler(Thing thing) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n-        if (supportsThingType(thingTypeUID)) {\n-            return new LinkyHandler(thing, localeProvider, gson, httpClient);\n-        }\n-\n-        return null;\n+        return supportsThingType(thingTypeUID)\n+                ? new LinkyHandler(thing, localeProvider, gson,\n+                        httpClientFactory.createHttpClient(thingTypeUID.getAsString().replace(\":\", \"_\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwOTI3MA=="}, "originalCommit": {"oid": "648368732e9c234a32a81da4bd34af0100f7ef16"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMzMjY3MA==", "bodyText": "It would just allow to create only one HTTP client for the binding and not one for each thing.\nBut this is not very important as 99,9\u2105 of users will define only one thing, so it makes no difference in practice.", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r513332670", "createdAt": "2020-10-28T10:25:45Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/LinkyHandlerFactory.java", "diffHunk": "@@ -69,10 +68,9 @@ public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n     protected @Nullable ThingHandler createHandler(Thing thing) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n-        if (supportsThingType(thingTypeUID)) {\n-            return new LinkyHandler(thing, localeProvider, gson, httpClient);\n-        }\n-\n-        return null;\n+        return supportsThingType(thingTypeUID)\n+                ? new LinkyHandler(thing, localeProvider, gson,\n+                        httpClientFactory.createHttpClient(thingTypeUID.getAsString().replace(\":\", \"_\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwOTI3MA=="}, "originalCommit": {"oid": "648368732e9c234a32a81da4bd34af0100f7ef16"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyMDAzMg==", "bodyText": "@J-N-K : with the explanation, is it ok for you?", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r515520032", "createdAt": "2020-10-31T17:34:50Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/LinkyHandlerFactory.java", "diffHunk": "@@ -69,10 +68,9 @@ public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n     protected @Nullable ThingHandler createHandler(Thing thing) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n-        if (supportsThingType(thingTypeUID)) {\n-            return new LinkyHandler(thing, localeProvider, gson, httpClient);\n-        }\n-\n-        return null;\n+        return supportsThingType(thingTypeUID)\n+                ? new LinkyHandler(thing, localeProvider, gson,\n+                        httpClientFactory.createHttpClient(thingTypeUID.getAsString().replace(\":\", \"_\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwOTI3MA=="}, "originalCommit": {"oid": "648368732e9c234a32a81da4bd34af0100f7ef16"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyODEyNQ==", "bodyText": "Of course hthe shared client should never be stopped, so this if of course a good reason. But why is it necessary to start/stop the client?", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r515528125", "createdAt": "2020-10-31T19:00:22Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/LinkyHandlerFactory.java", "diffHunk": "@@ -69,10 +68,9 @@ public boolean supportsThingType(ThingTypeUID thingTypeUID) {\n     protected @Nullable ThingHandler createHandler(Thing thing) {\n         ThingTypeUID thingTypeUID = thing.getThingTypeUID();\n \n-        if (supportsThingType(thingTypeUID)) {\n-            return new LinkyHandler(thing, localeProvider, gson, httpClient);\n-        }\n-\n-        return null;\n+        return supportsThingType(thingTypeUID)\n+                ? new LinkyHandler(thing, localeProvider, gson,\n+                        httpClientFactory.createHttpClient(thingTypeUID.getAsString().replace(\":\", \"_\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjYwOTI3MA=="}, "originalCommit": {"oid": "648368732e9c234a32a81da4bd34af0100f7ef16"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMDM1Njg1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxODo1Nzo1OVrOHrpU0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxODo1Nzo1OVrOHrpU0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUyNzg5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            8. Repeat steps 1, 2. You should arrive directly on step 5, then open the developper tool window (F12) and select \"Stockage\" tab. In the \"Cookies\" entry, select \"https://mon-compte-enedis.fr\". You'll find an entry named \"internalAuthId\", copy this value in your Openhab configuration.\n          \n          \n            \n            8. Repeat steps 1, 2. You should arrive directly on step 5, then open the developer tool window (F12) and select \"Stockage\" tab. In the \"Cookies\" entry, select \"https://mon-compte-enedis.fr\". You'll find an entry named \"internalAuthId\", copy this value in your Openhab configuration.", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r515527890", "createdAt": "2020-10-31T18:57:59Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.linky/README.md", "diffHunk": "@@ -40,7 +40,8 @@ Instructions given for Firefox :\n 4. Clic on \"Suivant\".\n 5. In the login page, prefilled with your mail address, enter your Enedis account password and click on \"Connexion \u00e0 Espace Client Enedis\".\n 6. You will be directed to your Enedis account environment. Get back to previous page in you browser.\n-7. Open the developper tool window (F12) and select \"Stockage\" tab. In the \"Cookies\" entry, select \"https://mon-compte-enedis.fr\". You should see an entry named \"internalAuthId\", copy this value in your Openhab configuration.\n+7. Disconnect from your Enedis account\n+8. Repeat steps 1, 2. You should arrive directly on step 5, then open the developper tool window (F12) and select \"Stockage\" tab. In the \"Cookies\" entry, select \"https://mon-compte-enedis.fr\". You'll find an entry named \"internalAuthId\", copy this value in your Openhab configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "648368732e9c234a32a81da4bd34af0100f7ef16"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTE1NDQ4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzozMDo0MFrOHs5Wug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzozMDo0MFrOHs5Wug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTA5OA==", "bodyText": "Please check that you have enough data to avoid s potential NPE.", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r516839098", "createdAt": "2020-11-03T17:30:40Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -167,50 +168,57 @@ public void initialize() {\n     private void updateData() {\n         updatePowerData();\n         updateDailyData();\n+        updateWeeklyData();\n         updateMonthlyData();\n         updateYearlyData();\n     }\n \n     private synchronized void updatePowerData() {\n         if (isLinked(PEAK_POWER) || isLinked(PEAK_TIMESTAMP)) {\n-            Consumption result = cachedPowerData.getValue();\n-            if (result != null) {\n-                updateVAChannel(PEAK_POWER, result.aggregats.days.datas.get(0));\n-                updateState(PEAK_TIMESTAMP, new DateTimeType(result.aggregats.days.periodes.get(0).dateDebut));\n-            }\n+            cachedPowerData.getValue().ifPresent(values -> {\n+                updateVAChannel(PEAK_POWER, values.aggregats.days.datas.get(0));\n+                updateState(PEAK_TIMESTAMP, new DateTimeType(values.aggregats.days.periodes.get(0).dateDebut));\n+            });\n         }\n     }\n \n     /**\n      * Request new dayly/weekly data and updates channels\n      */\n     private synchronized void updateDailyData() {\n-        if (isLinked(YESTERDAY) || isLinked(LAST_WEEK) || isLinked(THIS_WEEK)) {\n-            Consumption result = cachedDaylyData.getValue();\n-            if (result != null) {\n-                Aggregate days = result.aggregats.days;\n-\n+        if (isLinked(YESTERDAY) || isLinked(THIS_WEEK)) {\n+            cachedDailyData.getValue().ifPresent(values -> {\n+                Aggregate days = values.aggregats.days;\n                 int maxValue = days.periodes.size() - 1;\n                 int thisWeekNumber = days.periodes.get(maxValue).dateDebut.get(weekFields.weekOfWeekBasedYear());\n                 double yesterday = days.datas.get(maxValue);\n-                double lastWeek = 0.0;\n-                double thisWeek = 0.0;\n+                double thisWeek = 0.00;\n \n                 for (int i = maxValue; i >= 0; i--) {\n                     int weekNumber = days.periodes.get(i).dateDebut.get(weekFields.weekOfWeekBasedYear());\n                     if (weekNumber == thisWeekNumber) {\n-                        thisWeek += days.datas.get(i);\n-                    } else if (weekNumber == thisWeekNumber - 1) {\n-                        lastWeek += days.datas.get(i);\n+                        Double value = days.datas.get(i);\n+                        thisWeek += !value.isNaN() ? value : 0;\n                     } else {\n                         break;\n                     }\n                 }\n \n                 updateKwhChannel(YESTERDAY, yesterday);\n                 updateKwhChannel(THIS_WEEK, thisWeek);\n-                updateKwhChannel(LAST_WEEK, lastWeek);\n-            }\n+            });\n+        }\n+    }\n+\n+    /**\n+     * Request new weekly data and updates channels\n+     */\n+    private synchronized void updateWeeklyData() {\n+        if (isLinked(LAST_WEEK)) {\n+            cachedDailyData.getValue().ifPresent(values -> {\n+                Aggregate weeks = values.aggregats.weeks;\n+                updateKwhChannel(LAST_WEEK, weeks.datas.get(1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7d73d2a22b53f514af0711ab46d167f4d033534"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTk4ODk4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoyOTo1N1rOHv79zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0MzozNlrOHv8b_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyNzU5OA==", "bodyText": "I assume this is supposed to be:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                updateKwhChannel(LAST_YEAR, Double.NaN);\n          \n          \n            \n                                updateKwhChannel(THIS_YEAR, Double.NaN);", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r520027598", "createdAt": "2020-11-09T18:29:57Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -237,26 +246,28 @@ private synchronized void updateMonthlyData() {\n      */\n     private synchronized void updateYearlyData() {\n         if (isLinked(LAST_YEAR) || isLinked(THIS_YEAR)) {\n-            Consumption result = cachedYearlyData.getValue();\n-            if (result != null) {\n-                Aggregate years = result.aggregats.years;\n+            cachedYearlyData.getValue().ifPresent(values -> {\n+                Aggregate years = values.aggregats.years;\n                 updateKwhChannel(LAST_YEAR, years.datas.get(0));\n-                updateKwhChannel(THIS_YEAR, years.datas.get(1));\n-            }\n+                if (years.datas.size() > 1) {\n+                    updateKwhChannel(THIS_YEAR, years.datas.get(1));\n+                } else {\n+                    updateKwhChannel(LAST_YEAR, Double.NaN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0aaa22aa6c771aaca0c27020eddfd93f806b79e"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzNTMyNw==", "bodyText": "Ooops, nicely found", "url": "https://github.com/openhab/openhab-addons/pull/8871#discussion_r520035327", "createdAt": "2020-11-09T18:43:36Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -237,26 +246,28 @@ private synchronized void updateMonthlyData() {\n      */\n     private synchronized void updateYearlyData() {\n         if (isLinked(LAST_YEAR) || isLinked(THIS_YEAR)) {\n-            Consumption result = cachedYearlyData.getValue();\n-            if (result != null) {\n-                Aggregate years = result.aggregats.years;\n+            cachedYearlyData.getValue().ifPresent(values -> {\n+                Aggregate years = values.aggregats.years;\n                 updateKwhChannel(LAST_YEAR, years.datas.get(0));\n-                updateKwhChannel(THIS_YEAR, years.datas.get(1));\n-            }\n+                if (years.datas.size() > 1) {\n+                    updateKwhChannel(THIS_YEAR, years.datas.get(1));\n+                } else {\n+                    updateKwhChannel(LAST_YEAR, Double.NaN);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyNzU5OA=="}, "originalCommit": {"oid": "e0aaa22aa6c771aaca0c27020eddfd93f806b79e"}, "originalPosition": 200}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4160, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}