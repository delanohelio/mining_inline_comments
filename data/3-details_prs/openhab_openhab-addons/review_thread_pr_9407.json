{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMDA0MDE3", "number": 9407, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNzoxNjozNVrOFG0LxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNzoxNjozNVrOFG0LxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjkwNzU3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.gardena/src/main/java/org/openhab/binding/gardena/internal/GardenaSmartWebSocket.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNzoxNjozNVrOIIAC7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxODo1NDozNlrOIIEGkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2MDI3MA==", "bodyText": "Doesn't this give the same hashcode if you open 2 websockets because it takes the hashcode of the class itself? Maybe use hashcode of socketId?", "url": "https://github.com/openhab/openhab-addons/pull/9407#discussion_r545260270", "createdAt": "2020-12-17T17:16:35Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.gardena/src/main/java/org/openhab/binding/gardena/internal/GardenaSmartWebSocket.java", "diffHunk": "@@ -70,7 +70,8 @@ public GardenaSmartWebSocket(GardenaSmartWebSocketListener socketEventListener,\n         this.token = token;\n         this.socketId = socketId;\n \n-        webSocketClient = webSocketFactory.createWebSocketClient(socketId);\n+        String webSocketId = String.valueOf(this.getClass().hashCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04151f55b6db236bdccb0b2c8630c87acb3c8dfa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI3NzM2Mw==", "bodyText": "It's the hashCode of the instance and not of the class", "url": "https://github.com/openhab/openhab-addons/pull/9407#discussion_r545277363", "createdAt": "2020-12-17T17:40:26Z", "author": {"login": "gerrieg"}, "path": "bundles/org.openhab.binding.gardena/src/main/java/org/openhab/binding/gardena/internal/GardenaSmartWebSocket.java", "diffHunk": "@@ -70,7 +70,8 @@ public GardenaSmartWebSocket(GardenaSmartWebSocketListener socketEventListener,\n         this.token = token;\n         this.socketId = socketId;\n \n-        webSocketClient = webSocketFactory.createWebSocketClient(socketId);\n+        String webSocketId = String.valueOf(this.getClass().hashCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2MDI3MA=="}, "originalCommit": {"oid": "04151f55b6db236bdccb0b2c8630c87acb3c8dfa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI4NjEzNg==", "bodyText": "If you wanted the hashcode of the instance then you should doing this instead.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String webSocketId = String.valueOf(this.getClass().hashCode());\n          \n          \n            \n                    String webSocketId = String.valueOf(hashCode());", "url": "https://github.com/openhab/openhab-addons/pull/9407#discussion_r545286136", "createdAt": "2020-12-17T17:53:26Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.gardena/src/main/java/org/openhab/binding/gardena/internal/GardenaSmartWebSocket.java", "diffHunk": "@@ -70,7 +70,8 @@ public GardenaSmartWebSocket(GardenaSmartWebSocketListener socketEventListener,\n         this.token = token;\n         this.socketId = socketId;\n \n-        webSocketClient = webSocketFactory.createWebSocketClient(socketId);\n+        String webSocketId = String.valueOf(this.getClass().hashCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2MDI3MA=="}, "originalCommit": {"oid": "04151f55b6db236bdccb0b2c8630c87acb3c8dfa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMxODU4NA==", "bodyText": "Good catch, @Hilbrand!", "url": "https://github.com/openhab/openhab-addons/pull/9407#discussion_r545318584", "createdAt": "2020-12-17T18:43:20Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.gardena/src/main/java/org/openhab/binding/gardena/internal/GardenaSmartWebSocket.java", "diffHunk": "@@ -70,7 +70,8 @@ public GardenaSmartWebSocket(GardenaSmartWebSocketListener socketEventListener,\n         this.token = token;\n         this.socketId = socketId;\n \n-        webSocketClient = webSocketFactory.createWebSocketClient(socketId);\n+        String webSocketId = String.valueOf(this.getClass().hashCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2MDI3MA=="}, "originalCommit": {"oid": "04151f55b6db236bdccb0b2c8630c87acb3c8dfa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTMyNjczNg==", "bodyText": "Ups ... you are right, sorry!", "url": "https://github.com/openhab/openhab-addons/pull/9407#discussion_r545326736", "createdAt": "2020-12-17T18:54:36Z", "author": {"login": "gerrieg"}, "path": "bundles/org.openhab.binding.gardena/src/main/java/org/openhab/binding/gardena/internal/GardenaSmartWebSocket.java", "diffHunk": "@@ -70,7 +70,8 @@ public GardenaSmartWebSocket(GardenaSmartWebSocketListener socketEventListener,\n         this.token = token;\n         this.socketId = socketId;\n \n-        webSocketClient = webSocketFactory.createWebSocketClient(socketId);\n+        String webSocketId = String.valueOf(this.getClass().hashCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI2MDI3MA=="}, "originalCommit": {"oid": "04151f55b6db236bdccb0b2c8630c87acb3c8dfa"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3701, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}