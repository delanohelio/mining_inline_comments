{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTg0MzA5", "number": 8847, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwMTozNzozMlrOExbTbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwMTozODo1NlrOExbUng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjYzMDIxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwMTozNzozMlrOHnjrAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwMTozNzozMlrOHnjrAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTI0MDk2MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"Download of calendar failed while execution.\");\n          \n          \n            \n                        logger.warn(\"Download of calendar failed.\");", "url": "https://github.com/openhab/openhab-addons/pull/8847#discussion_r511240961", "createdAt": "2020-10-24T01:37:32Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java", "diffHunk": "@@ -100,8 +102,17 @@ public void run() {\n         Response response;\n         try {\n             response = asyncListener.get(HTTP_TIMEOUT_SECS, TimeUnit.SECONDS);\n-        } catch (InterruptedException | TimeoutException | ExecutionException e1) {\n-            logger.warn(\"Response for calendar request could not be retrieved. Error message is: {}\", e1.getMessage());\n+        } catch (InterruptedException e1) {\n+            logger.warn(\"Download of calendar was interrupted.\");\n+            logger.debug(\"InterruptedException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (TimeoutException e1) {\n+            logger.warn(\"Download of calendar timed out (waited too long for headers).\");\n+            logger.debug(\"TimeoutException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (ExecutionException e1) {\n+            logger.warn(\"Download of calendar failed while execution.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d6c2c372c34ba788a808c0e267b47fd6eaaa45"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjYzMzI2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwMTozODo1NlrOHnjtWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNDozOTo1M1rOHnoc3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTI0MTU2Mg==", "bodyText": "An ExecutionException is used to wrap other exceptions, so it never contains any useful message on its own.\nIt is better to log the cause exception instead.\nAlso, Is this supposed to be debug as well?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"ExecutionException message is: {}\", e1.getMessage());\n          \n          \n            \n                        logger.debug(\"ExecutionException message is: {}\", e1.getCause().getMessage());", "url": "https://github.com/openhab/openhab-addons/pull/8847#discussion_r511241562", "createdAt": "2020-10-24T01:38:56Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java", "diffHunk": "@@ -100,8 +102,17 @@ public void run() {\n         Response response;\n         try {\n             response = asyncListener.get(HTTP_TIMEOUT_SECS, TimeUnit.SECONDS);\n-        } catch (InterruptedException | TimeoutException | ExecutionException e1) {\n-            logger.warn(\"Response for calendar request could not be retrieved. Error message is: {}\", e1.getMessage());\n+        } catch (InterruptedException e1) {\n+            logger.warn(\"Download of calendar was interrupted.\");\n+            logger.debug(\"InterruptedException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (TimeoutException e1) {\n+            logger.warn(\"Download of calendar timed out (waited too long for headers).\");\n+            logger.debug(\"TimeoutException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (ExecutionException e1) {\n+            logger.warn(\"Download of calendar failed while execution.\");\n+            logger.warn(\"ExecutionException message is: {}\", e1.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d6c2c372c34ba788a808c0e267b47fd6eaaa45"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMxOTI2MQ==", "bodyText": "Yes, it's better to log the cause if the Exception itself is not explanatory.  I thought, warn would also fit for this type of exception as it's quite general. But i don't have any problem to move it to debug.", "url": "https://github.com/openhab/openhab-addons/pull/8847#discussion_r511319261", "createdAt": "2020-10-24T04:39:53Z", "author": {"login": "daMihe"}, "path": "bundles/org.openhab.binding.icalendar/src/main/java/org/openhab/binding/icalendar/internal/handler/PullJob.java", "diffHunk": "@@ -100,8 +102,17 @@ public void run() {\n         Response response;\n         try {\n             response = asyncListener.get(HTTP_TIMEOUT_SECS, TimeUnit.SECONDS);\n-        } catch (InterruptedException | TimeoutException | ExecutionException e1) {\n-            logger.warn(\"Response for calendar request could not be retrieved. Error message is: {}\", e1.getMessage());\n+        } catch (InterruptedException e1) {\n+            logger.warn(\"Download of calendar was interrupted.\");\n+            logger.debug(\"InterruptedException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (TimeoutException e1) {\n+            logger.warn(\"Download of calendar timed out (waited too long for headers).\");\n+            logger.debug(\"TimeoutException message is: {}\", e1.getMessage());\n+            return;\n+        } catch (ExecutionException e1) {\n+            logger.warn(\"Download of calendar failed while execution.\");\n+            logger.warn(\"ExecutionException message is: {}\", e1.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTI0MTU2Mg=="}, "originalCommit": {"oid": "05d6c2c372c34ba788a808c0e267b47fd6eaaa45"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4127, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}