{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMTA5OTYx", "number": 9251, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoxMjo1MlrOFB91eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNzo1NFrOGtk4vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjA2MDA4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoxMjo1MlrOIA4uBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzo1NjowNlrOICBJjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMDE5Ng==", "bodyText": "Please cache callbackQuery.data().split(\" \", 2) to a local variable so it isn't called twice.", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r537800196", "createdAt": "2020-12-07T20:12:52Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +404,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n+                    callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());\n+                    callbackPayload.addProperty(\"callback_id\", callbackQuery.id());\n+                    callbackPayload.addProperty(\"reply_id\", callbackQuery.data().split(\" \", 2)[0]);\n+                    callbackPayload.addProperty(\"text\", callbackQuery.data().split(\" \", 2)[1]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d1d472777982ac6f862f1e9a89125bff29abe06"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4Njg5Mw==", "bodyText": "Resolved in 7fe68eb", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r538986893", "createdAt": "2020-12-09T03:56:06Z", "author": {"login": "CrazyIvan359"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +404,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n+                    callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());\n+                    callbackPayload.addProperty(\"callback_id\", callbackQuery.id());\n+                    callbackPayload.addProperty(\"reply_id\", callbackQuery.data().split(\" \", 2)[0]);\n+                    callbackPayload.addProperty(\"text\", callbackQuery.data().split(\" \", 2)[1]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMDE5Ng=="}, "originalCommit": {"oid": "7d1d472777982ac6f862f1e9a89125bff29abe06"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NjA3MDk0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoxNTo0MlrOIA40RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzo1OTo0N1rOICBOSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMTc5Nw==", "bodyText": "Similar code is used in several places. Please refactor this into a function and call that instead.", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r537801797", "createdAt": "2020-12-07T20:15:42Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -278,6 +289,99 @@ private int handleUpdates(List<Update> updates) {\n                     // chat\n                 }\n \n+                // build and publish messageEvent trigger channel payload\n+                JsonObject messageRaw = json.parse(gson.toJson(message)).getAsJsonObject();\n+                JsonObject messagePayload = new JsonObject();\n+                messagePayload.addProperty(\"message_id\", message.messageId());\n+                messagePayload.addProperty(\"from\",\n+                        String.join(\" \", new String[] { message.from().firstName(), message.from().lastName() }));\n+                messagePayload.addProperty(\"chat_id\", message.chat().id());\n+                if (messageRaw.has(\"text\")) {\n+                    messagePayload.addProperty(\"text\", message.text());\n+                }\n+                if (messageRaw.has(\"animation\")) {\n+                    JsonObject animationPayload = messageRaw.getAsJsonObject(\"animation\");\n+                    String animationURL = getFullDownloadUrl(\n+                            animationPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    animationPayload.addProperty(\"file_url\", animationURL);\n+                    messagePayload.addProperty(\"animation_url\", animationURL);\n+                    if (animationPayload.has(\"thumb\")) {\n+                        animationPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                animationPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }\n+                }\n+                if (messageRaw.has(\"audio\")) {\n+                    JsonObject audioPayload = messageRaw.getAsJsonObject(\"audio\");\n+                    String audioURL = getFullDownloadUrl(audioPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    audioPayload.addProperty(\"file_url\", audioURL);\n+                    messagePayload.addProperty(\"audio_url\", audioURL);\n+                    if (audioPayload.has(\"thumb\")) {\n+                        audioPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                audioPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }\n+                }\n+                if (messageRaw.has(\"document\")) {\n+                    JsonObject documentPayload = messageRaw.getAsJsonObject(\"document\");\n+                    String documentURL = getFullDownloadUrl(\n+                            documentPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    documentPayload.addProperty(\"file_url\", documentURL);\n+                    messagePayload.addProperty(\"document_url\", documentURL);\n+                    if (documentPayload.has(\"thumb\")) {\n+                        documentPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                documentPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d1d472777982ac6f862f1e9a89125bff29abe06"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4ODEwNw==", "bodyText": "Resolved in 7fe68eb", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r538988107", "createdAt": "2020-12-09T03:59:47Z", "author": {"login": "CrazyIvan359"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -278,6 +289,99 @@ private int handleUpdates(List<Update> updates) {\n                     // chat\n                 }\n \n+                // build and publish messageEvent trigger channel payload\n+                JsonObject messageRaw = json.parse(gson.toJson(message)).getAsJsonObject();\n+                JsonObject messagePayload = new JsonObject();\n+                messagePayload.addProperty(\"message_id\", message.messageId());\n+                messagePayload.addProperty(\"from\",\n+                        String.join(\" \", new String[] { message.from().firstName(), message.from().lastName() }));\n+                messagePayload.addProperty(\"chat_id\", message.chat().id());\n+                if (messageRaw.has(\"text\")) {\n+                    messagePayload.addProperty(\"text\", message.text());\n+                }\n+                if (messageRaw.has(\"animation\")) {\n+                    JsonObject animationPayload = messageRaw.getAsJsonObject(\"animation\");\n+                    String animationURL = getFullDownloadUrl(\n+                            animationPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    animationPayload.addProperty(\"file_url\", animationURL);\n+                    messagePayload.addProperty(\"animation_url\", animationURL);\n+                    if (animationPayload.has(\"thumb\")) {\n+                        animationPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                animationPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }\n+                }\n+                if (messageRaw.has(\"audio\")) {\n+                    JsonObject audioPayload = messageRaw.getAsJsonObject(\"audio\");\n+                    String audioURL = getFullDownloadUrl(audioPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    audioPayload.addProperty(\"file_url\", audioURL);\n+                    messagePayload.addProperty(\"audio_url\", audioURL);\n+                    if (audioPayload.has(\"thumb\")) {\n+                        audioPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                audioPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }\n+                }\n+                if (messageRaw.has(\"document\")) {\n+                    JsonObject documentPayload = messageRaw.getAsJsonObject(\"document\");\n+                    String documentURL = getFullDownloadUrl(\n+                            documentPayload.getAsJsonPrimitive(\"file_id\").getAsString());\n+                    documentPayload.addProperty(\"file_url\", documentURL);\n+                    messagePayload.addProperty(\"document_url\", documentURL);\n+                    if (documentPayload.has(\"thumb\")) {\n+                        documentPayload.getAsJsonObject(\"thumb\").addProperty(\"file_url\", getFullDownloadUrl(\n+                                documentPayload.getAsJsonObject(\"thumb\").getAsJsonPrimitive(\"file_id\").getAsString()));\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwMTc5Nw=="}, "originalCommit": {"oid": "7d1d472777982ac6f862f1e9a89125bff29abe06"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODU0OTEzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTo1NTowNVrOICrSOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTo1NTowNVrOICrSOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3NzI0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                callbackPayload.addProperty(\"reply_id\", callbackData[0]);\n          \n          \n            \n                                callbackPayload.addProperty(\"text\", callbackData[1]);\n          \n          \n            \n                                callbackPayload.addProperty(\"reply_id\", replyId);\n          \n          \n            \n                                callbackPayload.addProperty(\"text\", lastMessageText);", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r539677240", "createdAt": "2020-12-09T21:55:05Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n+                    callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());\n+                    callbackPayload.addProperty(\"callback_id\", callbackQuery.id());\n+                    callbackPayload.addProperty(\"reply_id\", callbackData[0]);\n+                    callbackPayload.addProperty(\"text\", callbackData[1]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 167}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODU1ODExOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTo1NzoyMlrOICrXXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoxMTo1NVrOKJTnjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA==", "bodyText": "Try to use existing variables if possible.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                callbackPayload.addProperty(\"from\", String.join(\" \",\n          \n          \n            \n                                        new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n          \n          \n            \n                                callbackPayload.addProperty(\"from\", lastMessageFirstName + \" \" + lastMessageLastName);", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r539678558", "createdAt": "2020-12-09T21:57:22Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAxMjA3Ng==", "bodyText": "I was using String.join() because it is possible that lastName is null and for bots firstName will also be null.\nThe original code in the binding seems clunky and more (process time) costly than String.join():\nupdateChannel(LASTMESSAGENAME, (lastMessageFirstName != null || lastMessageLastName != null)\n        ? new StringType((lastMessageFirstName != null ? lastMessageFirstName + \" \" : \"\")\n                + (lastMessageLastName != null ? lastMessageLastName : \"\"))\n        : UnDefType.NULL);\nI will almalgamte both into a single operation, but what do you suggest between these two:\nlastMessageName = (lastMessageFirstName != null || lastMessageLastName != null)\n        ? (lastMessageFirstName != null ? lastMessageFirstName : \"\")\n        + (lastMessageLastName != null ? (lastMessageFirstName != null ? \" \" : \"\")\n        + lastMessageLastName : \"\") : null;\nlastMessageName = String.join(\" \",\n        new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() })", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r549012076", "createdAt": "2020-12-26T17:14:15Z", "author": {"login": "CrazyIvan359"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA=="}, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAxMjYyNQ==", "bodyText": "Oh, maybe the second version will throw errors if one of the values is null? I have not tested that specifically and don't know enough about Java to know how it will react.", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r549012625", "createdAt": "2020-12-26T17:20:23Z", "author": {"login": "CrazyIvan359"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA=="}, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MjUyOTA3Mg==", "bodyText": "If you want to exclude the nulls I would suggest using a custom utility function to do it.\nprivate static String join(String delimiter, String... elements){\n    StringJoiner joiner = new StringJoiner(delimiter);\n    for(String element : elements){\n        if(element != null){\n            joiner.add(element);\n        }\n    }\n    return joiner.toString();\n}", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r572529072", "createdAt": "2021-02-09T02:47:13Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA=="}, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg0NzI0NA==", "bodyText": "maybe the second version will throw errors if one of the values is null?\n\nJavaDoc of String.join says:\nNote that if an element is null, then {@code \"null\"} is added.\n\nThe current code therefore does not work as expected.\nBest if you go for @cpmeister's suggestion.", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680847244", "createdAt": "2021-08-02T10:11:55Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3ODU1OA=="}, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODU2NjUxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTo1OToyM1rOICrcIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxNzoyODoxNVrOILlHRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3OTc3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());\n          \n          \n            \n                                callbackPayload.addProperty(\"chat_id\", chatId);", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r539679778", "createdAt": "2020-12-09T21:59:23Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n+                    callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAxMzMxOA==", "bodyText": "chatId is not populated for callbacks, only regular messages. I have made this change for regular messages ~80 lines above this.", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r549013318", "createdAt": "2020-12-26T17:28:15Z", "author": {"login": "CrazyIvan359"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -300,28 +374,44 @@ private int handleUpdates(List<Update> updates) {\n                 }\n \n                 // process metadata\n-                lastMessageDate = message.date();\n-                lastMessageFirstName = message.from().firstName();\n-                lastMessageLastName = message.from().lastName();\n-                lastMessageUsername = message.from().username();\n-            } else if (update.callbackQuery() != null && update.callbackQuery().message() != null\n-                    && update.callbackQuery().message().text() != null) {\n-                String[] callbackData = update.callbackQuery().data().split(\" \", 2);\n+                if (lastMessageURL != null || lastMessageText != null) {\n+                    lastMessageDate = message.date();\n+                    lastMessageFirstName = message.from().firstName();\n+                    lastMessageLastName = message.from().lastName();\n+                    lastMessageUsername = message.from().username();\n+                }\n+            } else if (callbackQuery != null && callbackQuery.message() != null\n+                    && callbackQuery.message().text() != null) {\n+                String[] callbackData = callbackQuery.data().split(\" \", 2);\n \n                 if (callbackData.length == 2) {\n                     replyId = callbackData[0];\n                     lastMessageText = callbackData[1];\n-                    lastMessageDate = update.callbackQuery().message().date();\n-                    lastMessageFirstName = update.callbackQuery().from().firstName();\n-                    lastMessageLastName = update.callbackQuery().from().lastName();\n-                    lastMessageUsername = update.callbackQuery().from().username();\n-                    chatId = update.callbackQuery().message().chat().id();\n-                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), update.callbackQuery().id());\n-                    logger.debug(\"Received callbackId {} for chatId {} and replyId {}\", update.callbackQuery().id(),\n-                            chatId, replyId);\n+                    lastMessageDate = callbackQuery.message().date();\n+                    lastMessageFirstName = callbackQuery.from().firstName();\n+                    lastMessageLastName = callbackQuery.from().lastName();\n+                    lastMessageUsername = callbackQuery.from().username();\n+                    chatId = callbackQuery.message().chat().id();\n+                    replyIdToCallbackId.put(new ReplyKey(chatId, replyId), callbackQuery.id());\n+\n+                    // build and publish callbackEvent trigger channel payload\n+                    JsonObject callbackRaw = json.parse(gson.toJson(callbackQuery)).getAsJsonObject();\n+                    JsonObject callbackPayload = new JsonObject();\n+                    callbackPayload.addProperty(\"message_id\", callbackQuery.message().messageId());\n+                    callbackPayload.addProperty(\"from\", String.join(\" \",\n+                            new String[] { callbackQuery.from().firstName(), callbackQuery.from().lastName() }));\n+                    callbackPayload.addProperty(\"chat_id\", callbackQuery.message().chat().id());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY3OTc3OA=="}, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDMzMTc1MDg2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoxNjoyNlrOKJTy1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoxNjoyNlrOKJTy1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg1MDEzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    triggerChannel(new ChannelUID(getThing().getUID(), channelName), payload);\n          \n          \n            \n                    triggerChannel(channelName, payload);", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680850135", "createdAt": "2021-08-02T10:16:26Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/TelegramHandler.java", "diffHunk": "@@ -376,6 +466,10 @@ public void updateChannel(String channelName, State state) {\n         updateState(new ChannelUID(getThing().getUID(), channelName), state);\n     }\n \n+    public void triggerEvent(String channelName, String payload) {\n+        triggerChannel(new ChannelUID(getThing().getUID(), channelName), payload);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 185}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDMzMTc4Mzk5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNDoxMVrOKJUGLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxOTozOFrOKh_FlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg1NTA4Nw==", "bodyText": "I would suggest to mark all 4 new channel types as advanced, since trigger channels aren't normally meant to carry data structures in JSON. For the use case at hand I understand that this is helpful, though, so I'm fine with it.", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680855087", "createdAt": "2021-08-02T10:24:11Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjcyNTI2OA==", "bodyText": "DONE I made them all advanced.", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r706725268", "createdAt": "2021-09-12T01:19:38Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg1NTA4Nw=="}, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDMzMTc4NTU2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNDozNVrOKJUHIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNDozNVrOKJUHIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg1NTMzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<label>Message Received Event</label>\n          \n          \n            \n            \t\t<label>Message Received</label>", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680855330", "createdAt": "2021-08-02T10:24:35Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received Event</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDMzMTc4NjQwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNDo0OFrOKJUHmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNDo0OFrOKJUHmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg1NTQ0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<label>Message Received Event</label>\n          \n          \n            \n            \t\t<label>Raw Message Received</label>", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680855449", "createdAt": "2021-08-02T10:24:48Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received Event</label>\n+\t\t<description>\n+\t\t\t<![CDATA[\n+\t\t\tMessage encoded as JSON.<br />\n+\t\t\tEvent payload could contain the following, but `null` values will not be present:\n+\t\t\t<ul>\n+\t\t\t\t<li>Long `message_id` - Unique message ID in this chat</li>\n+\t\t\t\t<li>String `from` - First and/or last name of sender</li>\n+\t\t\t\t<li>Long `chat_id` - Unique chat ID</li>\n+\t\t\t\t<li>String `text` - Message text</li>\n+\t\t\t\t<li>String `animation_url` - URL to download animation from</li>\n+\t\t\t\t<li>String `audio_url` - URL to download audio from</li>\n+\t\t\t\t<li>String `document_url` - URL to download file from</li>\n+\t\t\t\t<li>Array `photo_url` - Array of URLs to download photos from</li>\n+\t\t\t\t<li>String `sticker_url` - URL to download sticker from</li>\n+\t\t\t\t<li>String `video_url` - URL to download video from</li>\n+\t\t\t\t<li>String `video_note_url` - URL to download video note from</li>\n+\t\t\t\t<li>String `voice_url` - URL to download voice clip from</li>\n+\t\t\t</ul>\n+\t\t\t]]>\n+\t\t</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"messageRawEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received Event</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDMzMTc4NzA5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNDo1OVrOKJUH_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNDo1OVrOKJUH_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg1NTU0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<label>Query Callback Received Event</label>\n          \n          \n            \n            \t\t<label>Query Callback Received</label>", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680855549", "createdAt": "2021-08-02T10:24:59Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received Event</label>\n+\t\t<description>\n+\t\t\t<![CDATA[\n+\t\t\tMessage encoded as JSON.<br />\n+\t\t\tEvent payload could contain the following, but `null` values will not be present:\n+\t\t\t<ul>\n+\t\t\t\t<li>Long `message_id` - Unique message ID in this chat</li>\n+\t\t\t\t<li>String `from` - First and/or last name of sender</li>\n+\t\t\t\t<li>Long `chat_id` - Unique chat ID</li>\n+\t\t\t\t<li>String `text` - Message text</li>\n+\t\t\t\t<li>String `animation_url` - URL to download animation from</li>\n+\t\t\t\t<li>String `audio_url` - URL to download audio from</li>\n+\t\t\t\t<li>String `document_url` - URL to download file from</li>\n+\t\t\t\t<li>Array `photo_url` - Array of URLs to download photos from</li>\n+\t\t\t\t<li>String `sticker_url` - URL to download sticker from</li>\n+\t\t\t\t<li>String `video_url` - URL to download video from</li>\n+\t\t\t\t<li>String `video_note_url` - URL to download video note from</li>\n+\t\t\t\t<li>String `voice_url` - URL to download voice clip from</li>\n+\t\t\t</ul>\n+\t\t\t]]>\n+\t\t</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"messageRawEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received Event</label>\n+\t\t<description>Raw Message from the Telegram library as JSON.</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"callbackEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Query Callback Received Event</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDMzMTc4ODY2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNToxOVrOKJUI1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0wMlQxMDoyNToxOVrOKJUI1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDg1NTc2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<label>Callback Query Received Event</label>\n          \n          \n            \n            \t\t<label>Raw Callback Query Received</label>", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r680855764", "createdAt": "2021-08-02T10:25:19Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received Event</label>\n+\t\t<description>\n+\t\t\t<![CDATA[\n+\t\t\tMessage encoded as JSON.<br />\n+\t\t\tEvent payload could contain the following, but `null` values will not be present:\n+\t\t\t<ul>\n+\t\t\t\t<li>Long `message_id` - Unique message ID in this chat</li>\n+\t\t\t\t<li>String `from` - First and/or last name of sender</li>\n+\t\t\t\t<li>Long `chat_id` - Unique chat ID</li>\n+\t\t\t\t<li>String `text` - Message text</li>\n+\t\t\t\t<li>String `animation_url` - URL to download animation from</li>\n+\t\t\t\t<li>String `audio_url` - URL to download audio from</li>\n+\t\t\t\t<li>String `document_url` - URL to download file from</li>\n+\t\t\t\t<li>Array `photo_url` - Array of URLs to download photos from</li>\n+\t\t\t\t<li>String `sticker_url` - URL to download sticker from</li>\n+\t\t\t\t<li>String `video_url` - URL to download video from</li>\n+\t\t\t\t<li>String `video_note_url` - URL to download video note from</li>\n+\t\t\t\t<li>String `voice_url` - URL to download voice clip from</li>\n+\t\t\t</ul>\n+\t\t\t]]>\n+\t\t</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"messageRawEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received Event</label>\n+\t\t<description>Raw Message from the Telegram library as JSON.</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"callbackEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Query Callback Received Event</label>\n+\t\t<description>\n+\t\t\t<![CDATA[\n+\t\t\tCallback Query response encoded as JSON.<br />\n+\t\t\tEvent payload could contain the following, but `null` values will not be present:\n+\t\t\t<ul>\n+\t\t\t\t<li>Long `message_id` - Unique message ID of the original Query message</li>\n+\t\t\t\t<li>String `from` - First and/or last name of sender</li>\n+\t\t\t\t<li>Long `chat_id` - Unique chat ID</li>\n+\t\t\t\t<li>String `callback_id` - Unique callback ID to send receipt confirmation to</li>\n+\t\t\t\t<li>String `reply_id` - Plain text name of original Query</li>\n+\t\t\t\t<li>String `text` - Selected response text from options give in original Query</li>\n+\t\t\t</ul>\n+\t\t\t]]>\n+\t\t</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"callbackRawEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Callback Query Received Event</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDQwMDY5NDYwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/action/TelegramActions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0xOFQxMjoxMjoyMlrOKTKFIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xOFQxMzowNjo1NFrOKmn5-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTE3NjczOA==", "bodyText": "Does this create a breaking change?", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r691176738", "createdAt": "2021-08-18T12:12:22Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/action/TelegramActions.java", "diffHunk": "@@ -108,34 +108,30 @@ public String toString() {\n \n     @RuleAction(label = \"send an answer\", description = \"Send a Telegram answer using the Telegram API.\")\n     public boolean sendTelegramAnswer(@ActionInput(name = \"chatId\") @Nullable Long chatId,\n-            @ActionInput(name = \"replyId\") @Nullable String replyId,\n+            @ActionInput(name = \"callbackId\") @Nullable String callbackId,\n+            @ActionInput(name = \"messageId\") @Nullable Long messageId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 6}, {"id": "PRRC_kwDOAS1o684qafn5", "bodyText": "@CrazyIvan359 Can you answer this question?\nIt seems to be breaking the existing action. So if this is the case, please create a PR similar to https://github.com/openhab/openhab-distro/pull/1314/files for the distro.", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r711588345", "createdAt": "2021-09-18T13:06:54Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.telegram/src/main/java/org/openhab/binding/telegram/internal/action/TelegramActions.java", "diffHunk": "@@ -108,34 +108,30 @@ public String toString() {\n \n     @RuleAction(label = \"send an answer\", description = \"Send a Telegram answer using the Telegram API.\")\n     public boolean sendTelegramAnswer(@ActionInput(name = \"chatId\") @Nullable Long chatId,\n-            @ActionInput(name = \"replyId\") @Nullable String replyId,\n+            @ActionInput(name = \"callbackId\") @Nullable String callbackId,\n+            @ActionInput(name = \"messageId\") @Nullable Long messageId,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTE3NjczOA=="}, "originalCommit": {"oid": "7fe68eb54b09bc6a88bc1fd434b335a63ac1ae82"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDUwNDQzMzYzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNjo1M1rOKh_Ewg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNjo1M1rOKh_Ewg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjcyNTA1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t<channel-type id=\"callbackRawEvent\">\n          \n          \n            \n            \t<channel-type id=\"callbackRawEvent\" advanced=\"true\">", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r706725058", "createdAt": "2021-09-12T01:16:53Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received</label>\n+\t\t<description>\n+\t\t\t<![CDATA[\n+\t\t\tMessage encoded as JSON.<br />\n+\t\t\tEvent payload could contain the following, but `null` values will not be present:\n+\t\t\t<ul>\n+\t\t\t\t<li>Long `message_id` - Unique message ID in this chat</li>\n+\t\t\t\t<li>String `from` - First and/or last name of sender</li>\n+\t\t\t\t<li>Long `chat_id` - Unique chat ID</li>\n+\t\t\t\t<li>String `text` - Message text</li>\n+\t\t\t\t<li>String `animation_url` - URL to download animation from</li>\n+\t\t\t\t<li>String `audio_url` - URL to download audio from</li>\n+\t\t\t\t<li>String `document_url` - URL to download file from</li>\n+\t\t\t\t<li>Array `photo_url` - Array of URLs to download photos from</li>\n+\t\t\t\t<li>String `sticker_url` - URL to download sticker from</li>\n+\t\t\t\t<li>String `video_url` - URL to download video from</li>\n+\t\t\t\t<li>String `video_note_url` - URL to download video note from</li>\n+\t\t\t\t<li>String `voice_url` - URL to download voice clip from</li>\n+\t\t\t</ul>\n+\t\t\t]]>\n+\t\t</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"messageRawEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Raw Message Received</label>\n+\t\t<description>Raw Message from the Telegram library as JSON.</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"callbackEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Query Callback Received</label>\n+\t\t<description>\n+\t\t\t<![CDATA[\n+\t\t\tCallback Query response encoded as JSON.<br />\n+\t\t\tEvent payload could contain the following, but `null` values will not be present:\n+\t\t\t<ul>\n+\t\t\t\t<li>Long `message_id` - Unique message ID of the original Query message</li>\n+\t\t\t\t<li>String `from` - First and/or last name of sender</li>\n+\t\t\t\t<li>Long `chat_id` - Unique chat ID</li>\n+\t\t\t\t<li>String `callback_id` - Unique callback ID to send receipt confirmation to</li>\n+\t\t\t\t<li>String `reply_id` - Plain text name of original Query</li>\n+\t\t\t\t<li>String `text` - Selected response text from options give in original Query</li>\n+\t\t\t</ul>\n+\t\t\t]]>\n+\t\t</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"callbackRawEvent\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08947d3ac7b232670c28d81079aadb171b1e73ad"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDUwNDQzMzk0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNzoxN1rOKh_E4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNzoxN1rOKh_E4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjcyNTA5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t<channel-type id=\"callbackEvent\">\n          \n          \n            \n            \t<channel-type id=\"callbackEvent\" advanced=\"true\">", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r706725090", "createdAt": "2021-09-12T01:17:17Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received</label>\n+\t\t<description>\n+\t\t\t<![CDATA[\n+\t\t\tMessage encoded as JSON.<br />\n+\t\t\tEvent payload could contain the following, but `null` values will not be present:\n+\t\t\t<ul>\n+\t\t\t\t<li>Long `message_id` - Unique message ID in this chat</li>\n+\t\t\t\t<li>String `from` - First and/or last name of sender</li>\n+\t\t\t\t<li>Long `chat_id` - Unique chat ID</li>\n+\t\t\t\t<li>String `text` - Message text</li>\n+\t\t\t\t<li>String `animation_url` - URL to download animation from</li>\n+\t\t\t\t<li>String `audio_url` - URL to download audio from</li>\n+\t\t\t\t<li>String `document_url` - URL to download file from</li>\n+\t\t\t\t<li>Array `photo_url` - Array of URLs to download photos from</li>\n+\t\t\t\t<li>String `sticker_url` - URL to download sticker from</li>\n+\t\t\t\t<li>String `video_url` - URL to download video from</li>\n+\t\t\t\t<li>String `video_note_url` - URL to download video note from</li>\n+\t\t\t\t<li>String `voice_url` - URL to download voice clip from</li>\n+\t\t\t</ul>\n+\t\t\t]]>\n+\t\t</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"messageRawEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Raw Message Received</label>\n+\t\t<description>Raw Message from the Telegram library as JSON.</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"callbackEvent\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08947d3ac7b232670c28d81079aadb171b1e73ad"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDUwNDQzNDExOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNzozNVrOKh_E9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNzozNVrOKh_E9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjcyNTExMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t<channel-type id=\"messageRawEvent\">\n          \n          \n            \n            \t<channel-type id=\"messageRawEvent\" advanced=\"true\">", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r706725110", "createdAt": "2021-09-12T01:17:35Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">\n+\t\t<kind>trigger</kind>\n+\t\t<label>Message Received</label>\n+\t\t<description>\n+\t\t\t<![CDATA[\n+\t\t\tMessage encoded as JSON.<br />\n+\t\t\tEvent payload could contain the following, but `null` values will not be present:\n+\t\t\t<ul>\n+\t\t\t\t<li>Long `message_id` - Unique message ID in this chat</li>\n+\t\t\t\t<li>String `from` - First and/or last name of sender</li>\n+\t\t\t\t<li>Long `chat_id` - Unique chat ID</li>\n+\t\t\t\t<li>String `text` - Message text</li>\n+\t\t\t\t<li>String `animation_url` - URL to download animation from</li>\n+\t\t\t\t<li>String `audio_url` - URL to download audio from</li>\n+\t\t\t\t<li>String `document_url` - URL to download file from</li>\n+\t\t\t\t<li>Array `photo_url` - Array of URLs to download photos from</li>\n+\t\t\t\t<li>String `sticker_url` - URL to download sticker from</li>\n+\t\t\t\t<li>String `video_url` - URL to download video from</li>\n+\t\t\t\t<li>String `video_note_url` - URL to download video note from</li>\n+\t\t\t\t<li>String `voice_url` - URL to download voice clip from</li>\n+\t\t\t</ul>\n+\t\t\t]]>\n+\t\t</description>\n+\t\t<event></event>\n+\t</channel-type>\n+\n+\t<channel-type id=\"messageRawEvent\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08947d3ac7b232670c28d81079aadb171b1e73ad"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDUwNDQzNDUzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNzo1NFrOKh_FIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xMlQwMToxNzo1NFrOKh_FIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwNjcyNTE1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t<channel-type id=\"messageEvent\">\n          \n          \n            \n            \t<channel-type id=\"messageEvent\" advanced=\"true\">", "url": "https://github.com/openhab/openhab-addons/pull/9251#discussion_r706725154", "createdAt": "2021-09-12T01:17:54Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.telegram/src/main/resources/OH-INF/thing/thing-types.xml", "diffHunk": "@@ -114,4 +118,64 @@\n \t\t<state readOnly=\"true\"/>\n \t</channel-type>\n \n+\t<channel-type id=\"messageEvent\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08947d3ac7b232670c28d81079aadb171b1e73ad"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3865, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}