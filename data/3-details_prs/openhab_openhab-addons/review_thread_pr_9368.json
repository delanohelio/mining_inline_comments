{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4OTg5MDU0", "number": 9368, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTozODo0OFrOFEwypg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDozOFrOFKnoYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTM4MDIyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTozODo0OFrOIE8jsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0MjozNVrOIFTuqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1NzM5Mw==", "bodyText": "How are these channels different? Also you should use units where possible. For time I suggest using Number:Time.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542057393", "createdAt": "2020-12-14T01:38:48Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "diffHunk": "@@ -129,4 +139,28 @@\n \t\t</command>\n \t</channel-type>\n \n+\t<channel-type id=\"brc1h_eyeBrightness\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Eye Illumination Brightness</label>\n+\t\t<state min=\"0\" max=\"19\" step=\"1\" readOnly=\"false\"/>\n+\t</channel-type>\n+\n+\t<channel-type id=\"brc1h_indoorPowerHours\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Number of hours system has been powered up</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\n+\t<channel-type id=\"brc1h_indoorOperationHours\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Number of hours system has been operating</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzNzAzMg==", "bodyText": "They don't report the same information: \"power hours\" is the number of hour the device has been connected to the electricity network - the \"operation hours\" are the number of hour the device has been powered on. Will change the time to Number:time.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542437032", "createdAt": "2020-12-14T14:42:35Z", "author": {"login": "blafois"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "diffHunk": "@@ -129,4 +139,28 @@\n \t\t</command>\n \t</channel-type>\n \n+\t<channel-type id=\"brc1h_eyeBrightness\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Eye Illumination Brightness</label>\n+\t\t<state min=\"0\" max=\"19\" step=\"1\" readOnly=\"false\"/>\n+\t</channel-type>\n+\n+\t<channel-type id=\"brc1h_indoorPowerHours\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Number of hours system has been powered up</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>\n+\n+\t<channel-type id=\"brc1h_indoorOperationHours\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Number of hours system has been operating</label>\n+\t\t<state readOnly=\"true\"/>\n+\t</channel-type>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1NzM5Mw=="}, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTM4MDg0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTozOToxMVrOIE8kCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0Mzo1MVrOIFTynQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1NzQ4MQ==", "bodyText": "Is this supposed to be a writable channel?", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542057481", "createdAt": "2020-12-14T01:39:11Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "diffHunk": "@@ -52,6 +57,11 @@\n \t\t<label>Unit Power Status</label>\n \t</channel-type>\n \n+\t<channel-type id=\"brc1h_cleanFilter\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Clean Filter Indicator</label>\n+\t</channel-type>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQzODA0NQ==", "bodyText": "Yes, writing \"OFF\" cleans the notification on the thermostat and restarts the clean-filter timer.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542438045", "createdAt": "2020-12-14T14:43:51Z", "author": {"login": "blafois"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "diffHunk": "@@ -52,6 +57,11 @@\n \t\t<label>Unit Power Status</label>\n \t</channel-type>\n \n+\t<channel-type id=\"brc1h_cleanFilter\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Clean Filter Indicator</label>\n+\t</channel-type>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1NzQ4MQ=="}, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTM4MTk5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTozOTozOVrOIE8klw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzo0NTo0NVrOIGX7lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1NzYyMw==", "bodyText": "Perhaps you could make this a Dimmer instead?", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542057623", "createdAt": "2020-12-14T01:39:39Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "diffHunk": "@@ -129,4 +139,28 @@\n \t\t</command>\n \t</channel-type>\n \n+\t<channel-type id=\"brc1h_eyeBrightness\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Eye Illumination Brightness</label>\n+\t\t<state min=\"0\" max=\"19\" step=\"1\" readOnly=\"false\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU1NDQ1NA==", "bodyText": "Done - with a % conversion.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r543554454", "createdAt": "2020-12-15T17:45:45Z", "author": {"login": "blafois"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/resources/OH-INF/thing/daikinmadoka.xml", "diffHunk": "@@ -129,4 +139,28 @@\n \t\t</command>\n \t</channel-type>\n \n+\t<channel-type id=\"brc1h_eyeBrightness\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Eye Illumination Brightness</label>\n+\t\t<state min=\"0\" max=\"19\" step=\"1\" readOnly=\"false\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1NzYyMw=="}, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTM4NjIwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/MadokaValue.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTo0MTo1MFrOIE8mtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNDo0NzoyOVrOIFT9VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1ODE2NA==", "bodyText": "Why do you need an enum for this when you can just use the ByteOrder class directly instead?", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542058164", "createdAt": "2020-12-14T01:41:50Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/MadokaValue.java", "diffHunk": "@@ -25,6 +26,21 @@\n @NonNullByDefault\n public class MadokaValue {\n \n+    public enum Endianness {\n+        LITTLE_ENDIAN(ByteOrder.LITTLE_ENDIAN),\n+        BIG_ENDIAN(ByteOrder.BIG_ENDIAN);\n+\n+        private ByteOrder order;\n+\n+        private Endianness(ByteOrder order) {\n+            this.order = order;\n+        }\n+\n+        public ByteOrder getOrder() {\n+            return this.order;\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ0MDc4OA==", "bodyText": "Yep - fixed.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542440788", "createdAt": "2020-12-14T14:47:29Z", "author": {"login": "blafois"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/MadokaValue.java", "diffHunk": "@@ -25,6 +26,21 @@\n @NonNullByDefault\n public class MadokaValue {\n \n+    public enum Endianness {\n+        LITTLE_ENDIAN(ByteOrder.LITTLE_ENDIAN),\n+        BIG_ENDIAN(ByteOrder.BIG_ENDIAN);\n+\n+        private ByteOrder order;\n+\n+        private Endianness(ByteOrder order) {\n+            this.order = order;\n+        }\n+\n+        public ByteOrder getOrder() {\n+            return this.order;\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA1ODE2NA=="}, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTQwMjc4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTo1MDoxNlrOIE8u3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTo1MDoxNlrOIE8u3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA2MDI1Mw==", "bodyText": "Because byteToHex can be an expensive(ish) operation please wrap this in a logging level check.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    logger.debug(\"[{}] onCharacteristicUpdate({})\", super.thing.getUID().getId(),\n          \n          \n            \n                            HexUtils.bytesToHex(characteristic.getByteValue()));\n          \n          \n            \n                    if(logger.isDebugEnabled()){\n          \n          \n            \n                        logger.debug(\"[{}] onCharacteristicUpdate({})\", super.thing.getUID().getId(),\n          \n          \n            \n                            HexUtils.bytesToHex(characteristic.getByteValue()));\n          \n          \n            \n                    }", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542060253", "createdAt": "2020-12-14T01:50:16Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "diffHunk": "@@ -290,8 +335,19 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         }\n     }\n \n+    /**\n+     * 2 actions need to be done: disable the notification AND reset the filter timer\n+     */\n+    private void resetCleanFilterIndicator() {\n+        logger.debug(\"[{}] resetCleanFilterIndicator()\", super.thing.getUID().getId());\n+        submitCommand(new DisableCleanFilterIndicatorCommand());\n+        submitCommand(new ResetCleanFilterTimerCommand());\n+    }\n+\n     @Override\n     public void onCharacteristicUpdate(BluetoothCharacteristic characteristic) {\n+        logger.debug(\"[{}] onCharacteristicUpdate({})\", super.thing.getUID().getId(),\n+                HexUtils.bytesToHex(characteristic.getByteValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTQwNDY5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTo1MToxNFrOIE8v1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTo1MToxNFrOIE8v1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA2MDUwMg==", "bodyText": "The error logging level should be reserved for issues catastrophic enough to threaten the operation of openHab itself. An error in a binding shouldn't qualify for this. Please read the openHab coding guidelines for expected use of logging in bindings.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542060502", "createdAt": "2020-12-14T01:51:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "diffHunk": "@@ -121,7 +129,30 @@ public void initialize() {\n             submitCommand(new GetPowerstateCommand()); // always keep the \"GetPowerState\" aftern the \"GetOperationMode\"\n             submitCommand(new GetSetpointCommand());\n             submitCommand(new GetFanspeedCommand());\n-        }, 10, c.refreshInterval, TimeUnit.SECONDS);\n+            submitCommand(new GetCleanFilterIndicatorCommand());\n+\n+            // As it is a complex operation - it has been extracted to a method.\n+            retrieveOperationHours();\n+\n+            submitCommand(new GetEyeBrightnessCommand());\n+        }, new Random().nextInt(30), c.refreshInterval, TimeUnit.SECONDS); // We introduce a random start time, it\n+                                                                           // avoids when having multiple devices to\n+                                                                           // have the commands sent simultaneously.\n+    }\n+\n+    private void retrieveOperationHours() {\n+        // This one is special - and MUST be ran twice, after being in priv mode\n+        // run it once an hour is sufficient... TODO\n+        submitCommand(new EnterPrivilegedModeCommand());\n+        submitCommand(new GetOperationHoursCommand());\n+        // a 1second+ delay is necessary\n+        try {\n+            Thread.sleep(1500);\n+        } catch (InterruptedException e) {\n+            logger.error(\"Error in retrieveOperationHours()\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNTQwODU2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTo1Mjo1OFrOIE8xzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwMTo1Mjo1OFrOIE8xzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjA2MTAwNQ==", "bodyText": "If the thread was interrupted you should try and return as soon as possible since an interrupt means that the system wants your thread to shutdown.\nSimply returning early from this may not be sufficient as the method's caller might continue operating as if things are normal. I suggest having the InterruptedException continue up the stack and let the caller handler it.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r542061005", "createdAt": "2020-12-14T01:52:58Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "diffHunk": "@@ -121,7 +129,30 @@ public void initialize() {\n             submitCommand(new GetPowerstateCommand()); // always keep the \"GetPowerState\" aftern the \"GetOperationMode\"\n             submitCommand(new GetSetpointCommand());\n             submitCommand(new GetFanspeedCommand());\n-        }, 10, c.refreshInterval, TimeUnit.SECONDS);\n+            submitCommand(new GetCleanFilterIndicatorCommand());\n+\n+            // As it is a complex operation - it has been extracted to a method.\n+            retrieveOperationHours();\n+\n+            submitCommand(new GetEyeBrightnessCommand());\n+        }, new Random().nextInt(30), c.refreshInterval, TimeUnit.SECONDS); // We introduce a random start time, it\n+                                                                           // avoids when having multiple devices to\n+                                                                           // have the commands sent simultaneously.\n+    }\n+\n+    private void retrieveOperationHours() {\n+        // This one is special - and MUST be ran twice, after being in priv mode\n+        // run it once an hour is sufficient... TODO\n+        submitCommand(new EnterPrivilegedModeCommand());\n+        submitCommand(new GetOperationHoursCommand());\n+        // a 1second+ delay is necessary\n+        try {\n+            Thread.sleep(1500);\n+        } catch (InterruptedException e) {\n+            logger.error(\"Error in retrieveOperationHours()\", e);\n+            Thread.currentThread().interrupt();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbfe73ac279dca23ae510fcc4621bdfe7c8bbfbf"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjY4MTMyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOToyNjozOFrOIKxPnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMDo1MjozOFrOILmJ-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE2MzQ4NQ==", "bodyText": "These should be QuantityTypes now instead.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r548163485", "createdAt": "2020-12-23T19:26:38Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "diffHunk": "@@ -690,6 +786,36 @@ public void receivedResponse(SetPowerstateCommand command) {\n         }\n     }\n \n+    @Override\n+    public void receivedResponse(GetOperationHoursCommand command) {\n+        logger.debug(\"receivedResponse(GetOperationHoursCommand command)\");\n+\n+        DecimalType indoorPowerHours = command.getIndoorPowerHours();\n+        DecimalType indoorOperationHours = command.getIndoorOperationHours();\n+        DecimalType indoorFanHours = command.getIndoorFanHours();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "452f1818c4ae675f40ecd487e7dc1e7bdc6aff38"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAzMDM5Mg==", "bodyText": "Fixed. Have also fixed other units (SetPoint, IndoorTemperature, OutdoorTemperature...) all migrated to QuantityType", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r549030392", "createdAt": "2020-12-26T20:52:38Z", "author": {"login": "blafois"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/handler/DaikinMadokaHandler.java", "diffHunk": "@@ -690,6 +786,36 @@ public void receivedResponse(SetPowerstateCommand command) {\n         }\n     }\n \n+    @Override\n+    public void receivedResponse(GetOperationHoursCommand command) {\n+        logger.debug(\"receivedResponse(GetOperationHoursCommand command)\");\n+\n+        DecimalType indoorPowerHours = command.getIndoorPowerHours();\n+        DecimalType indoorOperationHours = command.getIndoorOperationHours();\n+        DecimalType indoorFanHours = command.getIndoorFanHours();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE2MzQ4NQ=="}, "originalCommit": {"oid": "452f1818c4ae675f40ecd487e7dc1e7bdc6aff38"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjY4NDkzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/BRC1HUartProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOToyNzoxN1rOIKxSFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQyMDo1NDozNFrOILmKlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE2NDExNg==", "bodyText": "all locking should be done in a try statement with the unlock inside the finally clause.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r548164116", "createdAt": "2020-12-23T19:27:17Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/BRC1HUartProcessor.java", "diffHunk": "@@ -94,6 +104,7 @@ public void chunkReceived(byte[] byteValue) {\n \n             this.responseListener.receivedResponse(bos.toByteArray());\n         }\n+        stateLock.unlock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "452f1818c4ae675f40ecd487e7dc1e7bdc6aff38"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAzMDU1MQ==", "bodyText": "Done", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r549030551", "createdAt": "2020-12-26T20:54:34Z", "author": {"login": "blafois"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/BRC1HUartProcessor.java", "diffHunk": "@@ -94,6 +104,7 @@ public void chunkReceived(byte[] byteValue) {\n \n             this.responseListener.receivedResponse(bos.toByteArray());\n         }\n+        stateLock.unlock();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE2NDExNg=="}, "originalCommit": {"oid": "452f1818c4ae675f40ecd487e7dc1e7bdc6aff38"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTg1NTc4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoxMTowOFrOIL961g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoyNTo1NlrOIL-Lzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxOTczNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | eyeBrightness | Number | R/W | This channel allows to manipulate the Blue \"Eye\" indicator Brightness. Values are between 0 and 19.\n          \n          \n            \n            | indoorPowerHours | Number | R | This channel indicates the number of hours the indoor unit has been powered (operating or not).\n          \n          \n            \n            | indoorOperationHours | Number | R | This channel indicates the number of hours the indoor unit has been operating.\n          \n          \n            \n            | indoorFanHours | Number | R | This channel indicates the number of hours the fan has been blowing.\n          \n          \n            \n            | eyeBrightness | Number:Dimensionless | R/W | This channel allows to manipulate the Blue \"Eye\" indicator Brightness. Values are between 0 and 19.\n          \n          \n            \n            | indoorPowerHours | Number:Time | R | This channel indicates the number of hours the indoor unit has been powered (operating or not).\n          \n          \n            \n            | indoorOperationHours | Number:Time | R | This channel indicates the number of hours the indoor unit has been operating.\n          \n          \n            \n            | indoorFanHours | Number:Time | R | This channel indicates the number of hours the fan has been blowing.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r549419734", "createdAt": "2020-12-28T17:11:08Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/README.md", "diffHunk": "@@ -49,10 +49,16 @@ _Note that it is planned to generate some part of this based on the XML files wi\n | commCtrlVersion  | String | R | Communication Controller Firmware Version\n | remoteCtrlVersion  | String | R | Remote Controller Firmware Version\n | operationMode  | String | R/W | The operation mode of the AC unit. Currently supported values: HEAT, COOL.  \n-| fanSpeed  | Number | R/W | This is a \"virtual channel\" : its value is calculated depending on current operation mode. It is the channel to be used to change the fan speed, whatever the current mode is. Fan speed are from 1 to 5. On BRC1H, the device supports 3 speeds: LOW (1), MEDIUM (2-4), MAX (5).\n+| fanSpeed  | Number | R/W | This is a \"virtual channel\" : its value is calculated depending on current operation mode. It is the channel to be used to change the fan speed, whatever the current mode is. Fan speed are from 1 to 5. On BRC1H, the device supports 3 speeds: LOW (1), MEDIUM (2-4), MAX (5). Some BRC1H also support an AUTO (0) mode - but not all of them support it (depending on internal unit).\n | setpoint  | Number:Temperature | R/W | This is a \"virtual channel\" : its value is calculated depending on current operation mode. It is the channel to be used to change the setpoint, whatever the current mode is.\n | homekitCurrentHeatingCoolingMode  | String | R | This channel is a \"virtual channel\" to be used with the HomeKit add-on to implement Thermostat thing. Values supported are the HomeKit addon ones: Off, CoolOn, HeatOn, Auto.\n | homekitTargetHeatingCoolingMode  | String | R/W | This channel is a \"virtual channel\" to be used with the HomeKit add-on to implement Thermostat thing. Values supported are the HomeKit addon ones: Off, CoolOn, HeatOn, Auto.\n+| homebridgeMode | String | R/W | This channel is a \"virtual channel\" to be used with external HomeBridge. Values are: Off, Heating, Cooling, Auto.\n+| eyeBrightness | Number | R/W | This channel allows to manipulate the Blue \"Eye\" indicator Brightness. Values are between 0 and 19.\n+| indoorPowerHours | Number | R | This channel indicates the number of hours the indoor unit has been powered (operating or not).\n+| indoorOperationHours | Number | R | This channel indicates the number of hours the indoor unit has been operating.\n+| indoorFanHours | Number | R | This channel indicates the number of hours the fan has been blowing.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1efc07ee9bb1173db53f7a25601420a119c3a1e8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQyNDA3OQ==", "bodyText": "Have replaced the EyeBrightness by a dimmer.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r549424079", "createdAt": "2020-12-28T17:25:56Z", "author": {"login": "blafois"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/README.md", "diffHunk": "@@ -49,10 +49,16 @@ _Note that it is planned to generate some part of this based on the XML files wi\n | commCtrlVersion  | String | R | Communication Controller Firmware Version\n | remoteCtrlVersion  | String | R | Remote Controller Firmware Version\n | operationMode  | String | R/W | The operation mode of the AC unit. Currently supported values: HEAT, COOL.  \n-| fanSpeed  | Number | R/W | This is a \"virtual channel\" : its value is calculated depending on current operation mode. It is the channel to be used to change the fan speed, whatever the current mode is. Fan speed are from 1 to 5. On BRC1H, the device supports 3 speeds: LOW (1), MEDIUM (2-4), MAX (5).\n+| fanSpeed  | Number | R/W | This is a \"virtual channel\" : its value is calculated depending on current operation mode. It is the channel to be used to change the fan speed, whatever the current mode is. Fan speed are from 1 to 5. On BRC1H, the device supports 3 speeds: LOW (1), MEDIUM (2-4), MAX (5). Some BRC1H also support an AUTO (0) mode - but not all of them support it (depending on internal unit).\n | setpoint  | Number:Temperature | R/W | This is a \"virtual channel\" : its value is calculated depending on current operation mode. It is the channel to be used to change the setpoint, whatever the current mode is.\n | homekitCurrentHeatingCoolingMode  | String | R | This channel is a \"virtual channel\" to be used with the HomeKit add-on to implement Thermostat thing. Values supported are the HomeKit addon ones: Off, CoolOn, HeatOn, Auto.\n | homekitTargetHeatingCoolingMode  | String | R/W | This channel is a \"virtual channel\" to be used with the HomeKit add-on to implement Thermostat thing. Values supported are the HomeKit addon ones: Off, CoolOn, HeatOn, Auto.\n+| homebridgeMode | String | R/W | This channel is a \"virtual channel\" to be used with external HomeBridge. Values are: Off, Heating, Cooling, Auto.\n+| eyeBrightness | Number | R/W | This channel allows to manipulate the Blue \"Eye\" indicator Brightness. Values are between 0 and 19.\n+| indoorPowerHours | Number | R | This channel indicates the number of hours the indoor unit has been powered (operating or not).\n+| indoorOperationHours | Number | R | This channel indicates the number of hours the indoor unit has been operating.\n+| indoorFanHours | Number | R | This channel indicates the number of hours the fan has been blowing.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxOTczNA=="}, "originalCommit": {"oid": "1efc07ee9bb1173db53f7a25601420a119c3a1e8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NjU3OTIxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/BRC1HUartProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQxOTozNDoyNFrOINZFWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQyMDoyNDoxOFrOINZWSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkxMzM2OA==", "bodyText": "I think that calling this inside of a lock might risk a deadlock in the core. Can you call this outside of your lock/unlock block?", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550913368", "createdAt": "2021-01-02T19:34:24Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/BRC1HUartProcessor.java", "diffHunk": "@@ -78,21 +86,27 @@ private boolean isMessageComplete() {\n     }\n \n     public void chunkReceived(byte[] byteValue) {\n-        this.uartMessages.add(byteValue);\n-        if (isMessageComplete()) {\n-\n-            // Beyond this point, full message received\n-            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n-\n-            for (byte[] msg : uartMessages) {\n-                if (msg.length > 1) {\n-                    bos.write(msg, 1, msg.length - 1);\n+        stateLock.lock();\n+        try {\n+            this.uartMessages.add(byteValue);\n+            if (isMessageComplete()) {\n+                logger.debug(\"Complete message received!\");\n+\n+                // Beyond this point, full message received\n+                ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+\n+                for (byte[] msg : uartMessages) {\n+                    if (msg.length > 1) {\n+                        bos.write(msg, 1, msg.length - 1);\n+                    }\n                 }\n-            }\n \n-            this.uartMessages.clear();\n+                this.uartMessages.clear();\n \n-            this.responseListener.receivedResponse(bos.toByteArray());\n+                this.responseListener.receivedResponse(bos.toByteArray());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bee0f426328a8a6d5c63c1e8abbb2bae0fb19cd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkxNDgyNw==", "bodyText": "I dont see other option. The goal here is to avoid the Byte Array Output Stream to be modified. Otherwise, I should maybe clone the BOS and call the received response after ?", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550914827", "createdAt": "2021-01-02T19:50:42Z", "author": {"login": "blafois"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/BRC1HUartProcessor.java", "diffHunk": "@@ -78,21 +86,27 @@ private boolean isMessageComplete() {\n     }\n \n     public void chunkReceived(byte[] byteValue) {\n-        this.uartMessages.add(byteValue);\n-        if (isMessageComplete()) {\n-\n-            // Beyond this point, full message received\n-            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n-\n-            for (byte[] msg : uartMessages) {\n-                if (msg.length > 1) {\n-                    bos.write(msg, 1, msg.length - 1);\n+        stateLock.lock();\n+        try {\n+            this.uartMessages.add(byteValue);\n+            if (isMessageComplete()) {\n+                logger.debug(\"Complete message received!\");\n+\n+                // Beyond this point, full message received\n+                ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+\n+                for (byte[] msg : uartMessages) {\n+                    if (msg.length > 1) {\n+                        bos.write(msg, 1, msg.length - 1);\n+                    }\n                 }\n-            }\n \n-            this.uartMessages.clear();\n+                this.uartMessages.clear();\n \n-            this.responseListener.receivedResponse(bos.toByteArray());\n+                this.responseListener.receivedResponse(bos.toByteArray());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkxMzM2OA=="}, "originalCommit": {"oid": "2bee0f426328a8a6d5c63c1e8abbb2bae0fb19cd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkxNzcwNQ==", "bodyText": "Copying the array then calling receivedResponse later would be preferred, yes.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550917705", "createdAt": "2021-01-02T20:24:18Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/BRC1HUartProcessor.java", "diffHunk": "@@ -78,21 +86,27 @@ private boolean isMessageComplete() {\n     }\n \n     public void chunkReceived(byte[] byteValue) {\n-        this.uartMessages.add(byteValue);\n-        if (isMessageComplete()) {\n-\n-            // Beyond this point, full message received\n-            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n-\n-            for (byte[] msg : uartMessages) {\n-                if (msg.length > 1) {\n-                    bos.write(msg, 1, msg.length - 1);\n+        stateLock.lock();\n+        try {\n+            this.uartMessages.add(byteValue);\n+            if (isMessageComplete()) {\n+                logger.debug(\"Complete message received!\");\n+\n+                // Beyond this point, full message received\n+                ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+\n+                for (byte[] msg : uartMessages) {\n+                    if (msg.length > 1) {\n+                        bos.write(msg, 1, msg.length - 1);\n+                    }\n                 }\n-            }\n \n-            this.uartMessages.clear();\n+                this.uartMessages.clear();\n \n-            this.responseListener.receivedResponse(bos.toByteArray());\n+                this.responseListener.receivedResponse(bos.toByteArray());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkxMzM2OA=="}, "originalCommit": {"oid": "2bee0f426328a8a6d5c63c1e8abbb2bae0fb19cd"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NjU4MTY3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/GetOperationHoursCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQxOTozNjo0OVrOINZGcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMlQxOTozNjo0OVrOINZGcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkxMzY1MA==", "bodyText": "Please just import the core package instead of declaring here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.indoorFanHours = new QuantityType<Time>(iIndoorFanHours, org.openhab.core.library.unit.Units.HOUR);\n          \n          \n            \n                        this.indoorFanHours = new QuantityType<Time>(iIndoorFanHours, Units.HOUR);\n          \n      \n    \n    \n  \n\nPlease update wherever applicable.", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550913650", "createdAt": "2021-01-02T19:36:49Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/GetOperationHoursCommand.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.bluetooth.daikinmadoka.internal.model.commands;\n+\n+import java.nio.ByteOrder;\n+import java.util.concurrent.Executor;\n+\n+import javax.measure.quantity.Time;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.openhab.binding.bluetooth.daikinmadoka.internal.model.MadokaMessage;\n+import org.openhab.binding.bluetooth.daikinmadoka.internal.model.MadokaParsingException;\n+import org.openhab.binding.bluetooth.daikinmadoka.internal.model.MadokaValue;\n+import org.openhab.core.library.types.QuantityType;\n+import org.openhab.core.util.HexUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This command returns the operating hours of internal unit\n+ *\n+ * @author Benjamin Lafois - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class GetOperationHoursCommand extends BRC1HCommand {\n+\n+    private final Logger logger = LoggerFactory.getLogger(GetOperationHoursCommand.class);\n+\n+    private @Nullable QuantityType<Time> indoorOperationHours;\n+    private @Nullable QuantityType<Time> indoorFanHours;\n+    private @Nullable QuantityType<Time> indoorPowerHours;\n+\n+    @Override\n+    public byte[][] getRequest() {\n+        MadokaValue specificUnitNumber = new MadokaValue(0x02, 1, new byte[] { (byte) 0x00 });\n+        MadokaValue p40 = new MadokaValue(0x40, 0, new byte[] {});\n+        MadokaValue p41 = new MadokaValue(0x41, 0, new byte[] {});\n+        MadokaValue p42 = new MadokaValue(0x42, 0, new byte[] {});\n+        MadokaValue p43 = new MadokaValue(0x43, 0, new byte[] {});\n+        MadokaValue p44 = new MadokaValue(0x44, 0, new byte[] {});\n+        MadokaValue p45 = new MadokaValue(0x45, 0, new byte[] {});\n+        MadokaValue p46 = new MadokaValue(0x46, 0, new byte[] {});\n+        MadokaValue p47 = new MadokaValue(0x47, 0, new byte[] {});\n+        MadokaValue p48 = new MadokaValue(0x48, 0, new byte[] {});\n+\n+        return MadokaMessage.createRequest(this, specificUnitNumber, p40, p41, p42, p43, p44, p45, p46, p47, p48);\n+    }\n+\n+    @Override\n+    public void handleResponse(Executor executor, ResponseListener listener, MadokaMessage mm)\n+            throws MadokaParsingException {\n+        try {\n+\n+            byte[] msg = mm.getRawMessage();\n+            if (logger.isDebugEnabled() && msg != null) {\n+                logger.debug(\"Got response for {} : {}\", this.getClass().getSimpleName(), HexUtils.bytesToHex(msg));\n+            }\n+\n+            // The specific GetOperationHours requires 2 consecutive runs for some reason.\n+            // If value size is 0, then it will be for the next query!\n+            if (mm.getValues().get(0x40).getSize() == 0) {\n+                setState(State.SUCCEEDED);\n+                return;\n+            }\n+\n+            Integer iIndoorOperationHours = (int) (mm.getValues().get(0x40).getComputedValue(ByteOrder.LITTLE_ENDIAN));\n+            Integer iIndoorFanHours = (int) (mm.getValues().get(0x41).getComputedValue(ByteOrder.LITTLE_ENDIAN));\n+            Integer iIndoorPowerHours = (int) (mm.getValues().get(0x42).getComputedValue(ByteOrder.LITTLE_ENDIAN));\n+\n+            this.indoorOperationHours = new QuantityType<Time>(iIndoorOperationHours,\n+                    org.openhab.core.library.unit.Units.HOUR);\n+            this.indoorFanHours = new QuantityType<Time>(iIndoorFanHours, org.openhab.core.library.unit.Units.HOUR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bee0f426328a8a6d5c63c1e8abbb2bae0fb19cd"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Njc5MzE5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/GetOperationHoursCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozMzo0MVrOINaj7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozMzo0MVrOINaj7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNzU4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2010-2020 Contributors to the openHAB project\n          \n          \n            \n             * Copyright (c) 2010-2021 Contributors to the openHAB project", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550937580", "createdAt": "2021-01-03T00:33:41Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/GetOperationHoursCommand.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21e793db4baff31804d5e3f11f156b6e62d9acf"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Njc5MzYyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/test/java/org/openhab/binding/bluetooth/daikinmadoka/internal/UartProcessorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDowOFrOINakGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDowOFrOINakGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNzYyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2010-2020 Contributors to the openHAB project\n          \n          \n            \n             * Copyright (c) 2010-2021 Contributors to the openHAB project", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550937626", "createdAt": "2021-01-03T00:34:08Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/test/java/org/openhab/binding/bluetooth/daikinmadoka/internal/UartProcessorTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21e793db4baff31804d5e3f11f156b6e62d9acf"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Njc5MzY1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/GetEyeBrightnessCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDoxN1rOINakHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDoxN1rOINakHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNzYyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2010-2020 Contributors to the openHAB project\n          \n          \n            \n             * Copyright (c) 2010-2021 Contributors to the openHAB project", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550937629", "createdAt": "2021-01-03T00:34:17Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/GetEyeBrightnessCommand.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21e793db4baff31804d5e3f11f156b6e62d9acf"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Njc5Mzc5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/GetCleanFilterIndicatorCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDoyNlrOINakKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDoyNlrOINakKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNzY0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2010-2020 Contributors to the openHAB project\n          \n          \n            \n             * Copyright (c) 2010-2021 Contributors to the openHAB project", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550937643", "createdAt": "2021-01-03T00:34:26Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/GetCleanFilterIndicatorCommand.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21e793db4baff31804d5e3f11f156b6e62d9acf"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Njc5Mzg2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/EnterPrivilegedModeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDozMlrOINakMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDozMlrOINakMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNzY1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2010-2020 Contributors to the openHAB project\n          \n          \n            \n             * Copyright (c) 2010-2021 Contributors to the openHAB project", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550937651", "createdAt": "2021-01-03T00:34:32Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/EnterPrivilegedModeCommand.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21e793db4baff31804d5e3f11f156b6e62d9acf"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2Njc5Mzk0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/DisableCleanFilterIndicatorCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDozOFrOINakOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wM1QwMDozNDozOFrOINakOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDkzNzY1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2010-2020 Contributors to the openHAB project\n          \n          \n            \n             * Copyright (c) 2010-2021 Contributors to the openHAB project", "url": "https://github.com/openhab/openhab-addons/pull/9368#discussion_r550937658", "createdAt": "2021-01-03T00:34:38Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.daikinmadoka/src/main/java/org/openhab/binding/bluetooth/daikinmadoka/internal/model/commands/DisableCleanFilterIndicatorCommand.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c21e793db4baff31804d5e3f11f156b6e62d9acf"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3659, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}