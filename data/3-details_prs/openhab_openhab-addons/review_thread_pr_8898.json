{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMTkxOTI1", "number": 8898, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODozNDowMVrOEzsd8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODozNDowMVrOEzsd8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjQxMzkyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/CloudConnector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODozNDowMVrOHrFeDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwOTozNjoyOVrOHrHb0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0MDQyOA==", "bodyText": "Exceptions should be logged as the placeholder-less last parameter.", "url": "https://github.com/openhab/openhab-addons/pull/8898#discussion_r514940428", "createdAt": "2020-10-30T08:34:01Z", "author": {"login": "t-8ch"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/CloudConnector.java", "diffHunk": "@@ -137,14 +137,22 @@ public boolean isConnected() {\n             mapCountry = country.trim().toLowerCase();\n             mapUrl = cl.getMapUrl(mapId, mapCountry);\n         }\n-        @Nullable\n-        RawType mapData = HttpUtil.downloadData(mapUrl, null, false, -1);\n-        if (mapData != null) {\n-            return mapData;\n-        } else {\n-            logger.debug(\"Could not download '{}'\", mapUrl);\n+        if (mapUrl.isEmpty()) {\n+            logger.debug(\"Cannot download map data: Returned map URL is empty\");\n             return null;\n         }\n+        try {\n+            RawType mapData = HttpUtil.downloadData(mapUrl, null, false, -1);\n+            if (mapData != null) {\n+                return mapData;\n+            } else {\n+                logger.debug(\"Could not download '{}'\", mapUrl);\n+                return null;\n+            }\n+        } catch (IllegalArgumentException e) {\n+            logger.debug(\"Error downloading map: {}\", e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e61960c5f9dadf125defa41a3534f4a79de46f91"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk3MjYyNg==", "bodyText": "thanks @t-8ch for your comment.\nnot sure that I grasp what you mean with your comment.\nDo you mean like logger.debug(\"Error downloading map: \", e); ?  my understanding is that gives the full stacktrace rather than just the message, which is not what I want. Purpose of this PR is to get rid of the full error /stacktrace in folks log.", "url": "https://github.com/openhab/openhab-addons/pull/8898#discussion_r514972626", "createdAt": "2020-10-30T09:36:29Z", "author": {"login": "marcelrv"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/cloud/CloudConnector.java", "diffHunk": "@@ -137,14 +137,22 @@ public boolean isConnected() {\n             mapCountry = country.trim().toLowerCase();\n             mapUrl = cl.getMapUrl(mapId, mapCountry);\n         }\n-        @Nullable\n-        RawType mapData = HttpUtil.downloadData(mapUrl, null, false, -1);\n-        if (mapData != null) {\n-            return mapData;\n-        } else {\n-            logger.debug(\"Could not download '{}'\", mapUrl);\n+        if (mapUrl.isEmpty()) {\n+            logger.debug(\"Cannot download map data: Returned map URL is empty\");\n             return null;\n         }\n+        try {\n+            RawType mapData = HttpUtil.downloadData(mapUrl, null, false, -1);\n+            if (mapData != null) {\n+                return mapData;\n+            } else {\n+                logger.debug(\"Could not download '{}'\", mapUrl);\n+                return null;\n+            }\n+        } catch (IllegalArgumentException e) {\n+            logger.debug(\"Error downloading map: {}\", e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0MDQyOA=="}, "originalCommit": {"oid": "e61960c5f9dadf125defa41a3534f4a79de46f91"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4168, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}