{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDY4MTE5", "number": 7529, "title": "[pioneeravr] support REFRESH command type where applicable", "bodyText": "This PR adds support for REFRESH commands on Pioneer AVR channels where this makes sense.\nThis way the REFRESH caused by BaseThingHandler.channelLinked() is properly handled.\nSigned-off-by: Nils Schnabel github@to.nilsschnabel.de", "createdAt": "2020-05-02T15:38:02Z", "url": "https://github.com/openhab/openhab-addons/pull/7529", "merged": true, "mergeCommit": {"oid": "556ecaf5ea18532f31d84df1ee794caff09dc29f"}, "closed": true, "closedAt": "2020-05-03T20:10:55Z", "author": {"login": "nils"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdYRV6gBqjMyOTYyMzk4OTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdwnwMgFqTQwNDY1Mjk0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa95f583147b060da94b49a5d0041c4445134a82", "author": {"user": {"login": "nils", "name": "Nils Schnabel"}}, "url": "https://github.com/openhab/openhab-addons/commit/fa95f583147b060da94b49a5d0041c4445134a82", "committedDate": "2020-05-02T15:29:24Z", "message": "support REFRESH command type where applicable\n\nSigned-off-by: Nils Schnabel <github@to.nilsschnabel.de>"}, "afterCommit": {"oid": "76d723f4d685a991c40bfdccfd671710b30da23b", "author": {"user": {"login": "nils", "name": "Nils Schnabel"}}, "url": "https://github.com/openhab/openhab-addons/commit/76d723f4d685a991c40bfdccfd671710b30da23b", "committedDate": "2020-05-02T15:44:51Z", "message": "support REFRESH command type where applicable\n\nSigned-off-by: Nils Schnabel <github@to.nilsschnabel.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1962a1dd13787d0712957d73b5f26f7a7cb2dac", "author": {"user": {"login": "nils", "name": "Nils Schnabel"}}, "url": "https://github.com/openhab/openhab-addons/commit/c1962a1dd13787d0712957d73b5f26f7a7cb2dac", "committedDate": "2020-05-02T15:50:22Z", "message": "support REFRESH command type where applicable\n\nSigned-off-by: Nils Schnabel <github@to.nilsschnabel.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76d723f4d685a991c40bfdccfd671710b30da23b", "author": {"user": {"login": "nils", "name": "Nils Schnabel"}}, "url": "https://github.com/openhab/openhab-addons/commit/76d723f4d685a991c40bfdccfd671710b30da23b", "committedDate": "2020-05-02T15:44:51Z", "message": "support REFRESH command type where applicable\n\nSigned-off-by: Nils Schnabel <github@to.nilsschnabel.de>"}, "afterCommit": {"oid": "c1962a1dd13787d0712957d73b5f26f7a7cb2dac", "author": {"user": {"login": "nils", "name": "Nils Schnabel"}}, "url": "https://github.com/openhab/openhab-addons/commit/c1962a1dd13787d0712957d73b5f26f7a7cb2dac", "committedDate": "2020-05-02T15:50:22Z", "message": "support REFRESH command type where applicable\n\nSigned-off-by: Nils Schnabel <github@to.nilsschnabel.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTUyNTU5", "url": "https://github.com/openhab/openhab-addons/pull/7529#pullrequestreview-404552559", "createdAt": "2020-05-02T19:03:38Z", "commit": {"oid": "c1962a1dd13787d0712957d73b5f26f7a7cb2dac"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOTowMzozOFrOGPlcVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOTowMzozOFrOGPlcVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NTI4Nw==", "bodyText": "How does the channel get refreshed though? I don't see you using the result of the query to update the state of the channel.", "url": "https://github.com/openhab/openhab-addons/pull/7529#discussion_r418995287", "createdAt": "2020-05-02T19:03:38Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.pioneeravr/src/main/java/org/openhab/binding/pioneeravr/internal/handler/AbstractAvrHandler.java", "diffHunk": "@@ -166,16 +167,37 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             boolean unknownCommand = false;\n \n             if (channelUID.getId().contains(PioneerAvrBindingConstants.POWER_CHANNEL)) {\n-                commandSent = connection.sendPowerCommand(command, getZoneFromChannelUID(channelUID.getId()));\n+                if (command == RefreshType.REFRESH) {\n+                    commandSent = connection.sendPowerQuery(getZoneFromChannelUID(channelUID.getId()));\n+                } else {\n+                    commandSent = connection.sendPowerCommand(command, getZoneFromChannelUID(channelUID.getId()));\n+                }\n             } else if (channelUID.getId().contains(PioneerAvrBindingConstants.VOLUME_DIMMER_CHANNEL)\n                     || channelUID.getId().contains(PioneerAvrBindingConstants.VOLUME_DB_CHANNEL)) {\n-                commandSent = connection.sendVolumeCommand(command, getZoneFromChannelUID(channelUID.getId()));\n+                if (command == RefreshType.REFRESH) {\n+                    commandSent = connection.sendVolumeQuery(getZoneFromChannelUID(channelUID.getId()));\n+                } else {\n+                    commandSent = connection.sendVolumeCommand(command, getZoneFromChannelUID(channelUID.getId()));\n+                }\n             } else if (channelUID.getId().contains(PioneerAvrBindingConstants.SET_INPUT_SOURCE_CHANNEL)) {\n-                commandSent = connection.sendInputSourceCommand(command, getZoneFromChannelUID(channelUID.getId()));\n+                if (command == RefreshType.REFRESH) {\n+                    commandSent = connection.sendInputSourceQuery(getZoneFromChannelUID(channelUID.getId()));\n+                } else {\n+                    commandSent = connection.sendInputSourceCommand(command, getZoneFromChannelUID(channelUID.getId()));\n+                }\n             } else if (channelUID.getId().contains(PioneerAvrBindingConstants.LISTENING_MODE_CHANNEL)) {\n-                commandSent = connection.sendListeningModeCommand(command, getZoneFromChannelUID(channelUID.getId()));\n+                if (command == RefreshType.REFRESH) {\n+                    commandSent = connection.sendListeningModeQuery(getZoneFromChannelUID(channelUID.getId()));\n+                } else {\n+                    commandSent = connection.sendListeningModeCommand(command,\n+                            getZoneFromChannelUID(channelUID.getId()));\n+                }\n             } else if (channelUID.getId().contains(PioneerAvrBindingConstants.MUTE_CHANNEL)) {\n-                commandSent = connection.sendMuteCommand(command, getZoneFromChannelUID(channelUID.getId()));\n+                if (command == RefreshType.REFRESH) {\n+                    commandSent = connection.sendMuteQuery(getZoneFromChannelUID(channelUID.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1962a1dd13787d0712957d73b5f26f7a7cb2dac"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjUyOTQx", "url": "https://github.com/openhab/openhab-addons/pull/7529#pullrequestreview-404652941", "createdAt": "2020-05-03T20:08:45Z", "commit": {"oid": "c1962a1dd13787d0712957d73b5f26f7a7cb2dac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 709, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}