{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MjMzODY5", "number": 7160, "title": "[modbus] gracefully handle unexpected slave responses", "bodyText": "Resolves #7159\nIn this PR, we handle gracefully the two following errors observed in the wild\n\nslave responds with too little data (e.g. returning 5 registers even though 7 was requested). Instead of crashing later when\nusing the data, abort immediately.\nslave responds with function code which does not match the request (e.g. returning input registers even though holding registers were requested).\n\nIn addition, we have a catch-all to cover any other unknown corner cases, to prevent silent halting of the polling as discussed in #7159.", "createdAt": "2020-03-14T09:27:25Z", "url": "https://github.com/openhab/openhab-addons/pull/7160", "merged": true, "mergeCommit": {"oid": "1f89d98e64c0853b2405f316e05baad746a90bcf"}, "closed": true, "closedAt": "2020-03-16T06:30:28Z", "author": {"login": "ssalonen"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNhRNrAH2gAyMzg4MjMzODY5OmI4OGEyMzQxYTg0NzkwYWNjNmRiMzVkZDdhOTIwYzYyYjQyNGVlYTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcN85gkgFqTM3NDgxNzc4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b88a2341a84790acc6db35dd7a920c62b424eea2", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/b88a2341a84790acc6db35dd7a920c62b424eea2", "committedDate": "2020-03-14T09:12:46Z", "message": "[modbus] Handle various invalid/illegal slave responses gracefully\n\n- slave responds with too little data. Instead of crashing later when\n  using the data, abort immediately.\n- slave responds with function code which does not match the request.\n  This is illegal according to protocol\n\nSince we have seen both of the errors in the wild it is better to handle\nthem gracefully, and print out good error message for the user.\n\nIn addition, we now catch all Exceptions in the runnable that polls the\ndata. This is to cover any unexpected / unknown errors that might arise.\nNow that we catch the error, the polling does not get halted (behaviour\nof the scheduler we use) but instead it will be retried again.\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49a1a8d60a3963e90232c86d3ed3af438612ab65", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/49a1a8d60a3963e90232c86d3ed3af438612ab65", "committedDate": "2020-03-14T09:13:29Z", "message": "[modbus] Fixed docstring\n\nObviously copy-pasted from jamod (the underlying modbus library)\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5312790fe3da36f2e8e3ab5ad05794896970674", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/a5312790fe3da36f2e8e3ab5ad05794896970674", "committedDate": "2020-03-14T09:14:10Z", "message": "[modbus] More tests with coils and discretes to cover edge cases\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NzMzNjQz", "url": "https://github.com/openhab/openhab-addons/pull/7160#pullrequestreview-374733643", "createdAt": "2020-03-14T15:21:41Z", "commit": {"oid": "a5312790fe3da36f2e8e3ab5ad05794896970674"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNToyMTo0MlrOF2aKPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxNToyMjoyMlrOF2aKaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NjAyOQ==", "bodyText": "why Throwable instead of ModbusException?", "url": "https://github.com/openhab/openhab-addons/pull/7160#discussion_r392596029", "createdAt": "2020-03-14T15:21:42Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.transport.modbus/src/main/java/org/openhab/io/transport/modbus/internal/SimpleStopWatch.java", "diffHunk": "@@ -38,8 +36,8 @@\n     }\n \n     @FunctionalInterface\n-    public abstract interface RunnableWithModbusException {\n-        public abstract void run() throws ModbusException;\n+    public abstract interface RunnableWithException<T extends Throwable> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5312790fe3da36f2e8e3ab5ad05794896970674"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NjAzMw==", "bodyText": "If you are going to include javadocs at least fill them out. Or get rid of the javadocs....", "url": "https://github.com/openhab/openhab-addons/pull/7160#discussion_r392596033", "createdAt": "2020-03-14T15:21:46Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.transport.modbus/src/main/java/org/openhab/io/transport/modbus/internal/ModbusManagerImpl.java", "diffHunk": "@@ -125,15 +135,53 @@ public void accept(AggregateStopWatch timer, T task, ModbusSlaveConnection conne\n         // Compare request and response transaction ID. NOTE: ModbusTransaction.getTransactionID() is static and\n         // not safe to use\n         if ((response.getTransactionID() != libRequest.getTransactionID()) && !response.isHeadless()) {\n-            logger.warn(\n-                    \"Transaction id of the response ({}) does not match request ({}) {}. Endpoint {}. Ignoring response. [operation ID {}]\",\n-                    response.getTransactionID(), libRequest.getTransactionID(), task.getRequest(), task.getEndpoint(),\n-                    operationId);\n             throw new ModbusUnexpectedTransactionIdException(libRequest.getTransactionID(),\n                     response.getTransactionID());\n         }\n     }\n \n+    /**\n+     * Check that function code of the response and request match\n+     *\n+     * @param response\n+     * @param libRequest\n+     * @param task\n+     * @param operationId\n+     * @throws ModbusUnexpectedTransactionIdException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5312790fe3da36f2e8e3ab5ad05794896970674"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NjA3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                logger.error(\n          \n          \n            \n                                logger.warn(", "url": "https://github.com/openhab/openhab-addons/pull/7160#discussion_r392596073", "createdAt": "2020-03-14T15:22:22Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.transport.modbus/src/main/java/org/openhab/io/transport/modbus/internal/ModbusManagerImpl.java", "diffHunk": "@@ -721,7 +774,16 @@ public void registerRegularPoll(@NonNull PollTask task, long pollPeriodMillis, l\n                 long started = System.currentTimeMillis();\n                 logger.debug(\"Executing scheduled ({}ms) poll task {}. Current millis: {}\", pollPeriodMillis, task,\n                         started);\n-                executeOperation(task, false, pollOperation);\n+                try {\n+                    executeOperation(task, false, pollOperation);\n+                } catch (Exception e) {\n+                    // We want to catch all unexpected exceptions since all unhandled exceptions make\n+                    // ScheduledExecutorService halt the polling. It is better to print out the exception, and try again\n+                    // (on next poll cycle)\n+                    logger.error(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5312790fe3da36f2e8e3ab5ad05794896970674"}, "originalPosition": 174}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fe133ed3d1df19c79c36a17b1c498567a586b51", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/1fe133ed3d1df19c79c36a17b1c498567a586b51", "committedDate": "2020-03-15T09:47:42Z", "message": "[modbus] improvements based on code review\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e359c6f2d7acb0fcdfae346c59db9e51972d279", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/3e359c6f2d7acb0fcdfae346c59db9e51972d279", "committedDate": "2020-03-15T09:49:25Z", "message": "[modbus] simplify\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODE3Nzgx", "url": "https://github.com/openhab/openhab-addons/pull/7160#pullrequestreview-374817781", "createdAt": "2020-03-15T17:24:13Z", "commit": {"oid": "3e359c6f2d7acb0fcdfae346c59db9e51972d279"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1158, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}