{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4Njg3NjAy", "number": 8387, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToyMjoyOVrOEgCp8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToyNDowOFrOEgf_Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDMzMzk1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/MiIoDeviceAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToyMjoyOVrOHMrxfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToyMjoyOVrOHMrxfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA2MjE0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (aiid != null && siid != null && (getAiid() != 0 || getSiid() != 0)) {\n          \n          \n            \n                        return true;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return aiid != null && siid != null && (getAiid() != 0 || getSiid() != 0);", "url": "https://github.com/openhab/openhab-addons/pull/8387#discussion_r483062143", "createdAt": "2020-09-03T15:22:29Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/MiIoDeviceAction.java", "diffHunk": "@@ -70,6 +76,40 @@ public void setparameterType(String type) {\n         this.commandParameterType = org.openhab.binding.miio.internal.basic.CommandParameterType.fromString(type);\n     }\n \n+    public int getSiid() {\n+        final Integer siid = this.siid;\n+        if (siid != null) {\n+            return siid.intValue();\n+        } else {\n+            return 0;\n+        }\n+    }\n+\n+    public void setSiid(Integer siid) {\n+        this.siid = siid;\n+    }\n+\n+    public int getAiid() {\n+        final Integer aiid = this.aiid;\n+        if (aiid != null) {\n+            return aiid.intValue();\n+        } else {\n+            return 0;\n+        }\n+    }\n+\n+    public void setAiid(Integer aiid) {\n+        this.aiid = aiid;\n+    }\n+\n+    public boolean isMiOtAction() {\n+        if (aiid != null && siid != null && (getAiid() != 0 || getSiid() != 0)) {\n+            return true;\n+        } else {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "945a3f8ba79a0ecad72290aa96d5712ae066fbe2"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNTEzOTU5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToyNDowOFrOHNZSmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxOToyNDowOFrOHNZSmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzgwNzg5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOGGER.trace(\"Matching '{}' with '{}': {}\", matchvalue, command.toString(), matching);\n          \n          \n            \n                                LOGGER.trace(\"Matching '{}' with '{}': {}\", matchvalue, command, matching);", "url": "https://github.com/openhab/openhab-addons/pull/8387#discussion_r483807898", "createdAt": "2020-09-04T19:24:08Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/basic/ActionConditions.java", "diffHunk": "@@ -105,6 +107,44 @@\n         return null;\n     }\n \n+    /**\n+     * Check if the command value matches the condition value.\n+     * The condition parameter element should be a Json array, containing Json objects with a matchValue element.\n+     * Optionally it can contain a 'returnValue'element which will be returned in case of match.\n+     * If no match this function will return a null\n+     *\n+     * @param condition.\n+     * @param command\n+     * @param value\n+     * @return returnValue or value in case matching, return null if no match\n+     */\n+    private static @Nullable JsonElement matchValue(MiIoDeviceActionCondition condition, @Nullable Command command,\n+            @Nullable JsonElement value) {\n+        if (condition.getParameters().isJsonArray() && command != null) {\n+            JsonArray conditionArray = condition.getParameters().getAsJsonArray();\n+            for (int i = 0; i < conditionArray.size(); i++) {\n+                if (conditionArray.get(i).isJsonObject() && conditionArray.get(i).getAsJsonObject().has(\"matchValue\")) {\n+                    JsonObject matchCondition = conditionArray.get(i).getAsJsonObject();\n+                    String matchvalue = matchCondition.get(\"matchValue\").getAsString();\n+                    boolean matching = command.toString().matches(matchvalue);\n+                    LOGGER.trace(\"Matching '{}' with '{}': {}\", matchvalue, command.toString(), matching);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1362dd1df3b49df90f0be72e61b6401031c97b70"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4416, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}