{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MDE3MzE0", "number": 8609, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOTozMzowMlrOEot_kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOTozMzowMlrOEot_kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMTMyMDUwOnYy", "diffSide": "RIGHT", "path": "itests/org.openhab.binding.mqtt.homie.tests/src/main/java/org/openhab/binding/mqtt/HomieImplementationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOTozMzowMlrOHZ-HxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxOTozMzowMlrOHZ-HxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5NDI0NA==", "bodyText": "This scheduler instance isn't shutdown since it is immediately replaced by another instance in the @BeforeEach method.", "url": "https://github.com/openhab/openhab-addons/pull/8609#discussion_r496994244", "createdAt": "2020-09-29T19:33:02Z", "author": {"login": "cpmeister"}, "path": "itests/org.openhab.binding.mqtt.homie.tests/src/main/java/org/openhab/binding/mqtt/HomieImplementationTest.java", "diffHunk": "@@ -65,25 +65,26 @@\n  *\n  * @author David Graeff - Initial contribution\n  */\n+@NonNullByDefault\n public class HomieImplementationTest extends JavaOSGiTest {\n     private static final String BASE_TOPIC = \"homie\";\n     private static final String DEVICE_ID = ThingChannelConstants.testHomieThing.getId();\n     private static final String DEVICE_TOPIC = BASE_TOPIC + \"/\" + DEVICE_ID;\n \n-    private MqttService mqttService;\n-    private MqttBrokerConnection embeddedConnection;\n-    private MqttBrokerConnection connection;\n+    private @NonNullByDefault({}) MqttService mqttService;\n+    private @NonNullByDefault({}) MqttBrokerConnection embeddedConnection;\n+    private @NonNullByDefault({}) MqttBrokerConnection connection;\n     private int registeredTopics = 100;\n \n-    private AutoCloseable mocksCloseable;\n+    private @NonNullByDefault({}) AutoCloseable mocksCloseable;\n \n     // The handler is not tested here, so just mock the callback\n-    private @Mock DeviceCallback callback;\n+    private @Mock @NonNullByDefault({}) DeviceCallback callback;\n \n     // A handler mock is required to verify that channel value changes have been received\n-    private @Mock HomieThingHandler handler;\n+    private @Mock @NonNullByDefault({}) HomieThingHandler handler;\n \n-    private ScheduledExecutorService scheduler;\n+    private ScheduledExecutorService scheduler = new ScheduledThreadPoolExecutor(6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d088470facbc082aeb82fd146824a0a89130fad8"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4389, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}