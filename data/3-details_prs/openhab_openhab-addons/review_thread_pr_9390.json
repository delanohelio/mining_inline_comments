{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzI3NTkz", "number": 9390, "reviewThreads": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjowMToyNlrOFF08bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0NToyNFrOFF16kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjU0NjM3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjowMToyNlrOIGh8bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjowMToyNlrOIGh8bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxODUwOA==", "bodyText": "@Confectrician will this link work in the rendered version?", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543718508", "createdAt": "2020-12-15T22:01:26Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -14,11 +14,13 @@ The binding focuses on reporting the device status and device control.\n Initial setup and device configuration has to be performed using the Shelly Apps.\n The binding gets in sync with the next status refresh.\n \n+Refer to [Advanced Users](doc/AdvancedUsers.md) for more information on openHAB Shelly integration, e.g. firmware upgrade, network communication or log filtering.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjU2NzgzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjowNjo1NVrOIGiIgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowMjo1MFrOIG6ydw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMTYwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Refer to section Full Example:.rules for examples how to catch alarm triggers in openHAB rules\n          \n          \n            \n            Refer to section [Full Example/.rules](#shelly.rules) for examples how to catch alarm triggers in openHAB rules", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543721601", "createdAt": "2020-12-15T22:06:55Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -312,26 +289,23 @@ A new alarm will be triggered on a new condition or every 5 minutes if the condi\n |TEMP_OVER   |Above \"temperature over\" threshold                                                                               |\n \n \n-```\n-rule \"Shelly Alarm\"\n-when\n-    Channel \"shelly:shelly1:XXXXXX:device#alarm\" triggered\n-then\n-    logInfo(\"Shelly\", \"n alarm condition was detected:\" + receivedEvent.toString())\n-end\n-```\n+Refer to section Full Example:.rules for examples how to catch alarm triggers in openHAB rules", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4ODM0MQ==", "bodyText": "Are you sure that this is the connect syntax? If I include the # for shelly.rules Eclipse displays an error\nNow I have 'Full Example:shelly.rules ', but not if the link works", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544088341", "createdAt": "2020-12-16T08:02:59Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -312,26 +289,23 @@ A new alarm will be triggered on a new condition or every 5 minutes if the condi\n |TEMP_OVER   |Above \"temperature over\" threshold                                                                               |\n \n \n-```\n-rule \"Shelly Alarm\"\n-when\n-    Channel \"shelly:shelly1:XXXXXX:device#alarm\" triggered\n-then\n-    logInfo(\"Shelly\", \"n alarm condition was detected:\" + receivedEvent.toString())\n-end\n-```\n+Refer to section Full Example:.rules for examples how to catch alarm triggers in openHAB rules", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMTYwMQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwNDcxMQ==", "bodyText": "found it, '.' has to be replaced by '-' in the anchor name", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544104711", "createdAt": "2020-12-16T08:30:37Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -312,26 +289,23 @@ A new alarm will be triggered on a new condition or every 5 minutes if the condi\n |TEMP_OVER   |Above \"temperature over\" threshold                                                                               |\n \n \n-```\n-rule \"Shelly Alarm\"\n-when\n-    Channel \"shelly:shelly1:XXXXXX:device#alarm\" triggered\n-then\n-    logInfo(\"Shelly\", \"n alarm condition was detected:\" + receivedEvent.toString())\n-end\n-```\n+Refer to section Full Example:.rules for examples how to catch alarm triggers in openHAB rules", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMTYwMQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyNTU1OQ==", "bodyText": "I tested it with Visual Studio Code and only a dot worked. I was surprised as I first tried a dash, too. We'll see what's correct.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544125559", "createdAt": "2020-12-16T09:02:50Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -312,26 +289,23 @@ A new alarm will be triggered on a new condition or every 5 minutes if the condi\n |TEMP_OVER   |Above \"temperature over\" threshold                                                                               |\n \n \n-```\n-rule \"Shelly Alarm\"\n-when\n-    Channel \"shelly:shelly1:XXXXXX:device#alarm\" triggered\n-then\n-    logInfo(\"Shelly\", \"n alarm condition was detected:\" + receivedEvent.toString())\n-end\n-```\n+Refer to section Full Example:.rules for examples how to catch alarm triggers in openHAB rules", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMTYwMQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjU4Mzc3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxMToxNFrOIGiRrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowMzo0M1rOIG4iQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMzk1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Use the thing configuration option brightnessAutoOn you could decide if the light is turned on when a brightness > 0 is set.\n          \n          \n            \n            Use the thing configuration option `brightnessAutoOn` you could decide if the light is turned on when a brightness > 0 is set.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543723950", "createdAt": "2020-12-15T22:11:14Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -505,43 +493,31 @@ The Shelly 4Pro provides 4 relays and 4 power meters.\n |relay     |             |         |         |See group relay1 for Shelly 2                                                    |\n |meter     |             |         |         |See group meter1 for Shelly 2                                                    |\n \n-### Shelly Dimmer (thing-type: shellydimmer)\n+### Shelly Dimmer 1 + 2 (thing-type: shellydimmer, shellydimmer2)\n \n |Group     |Channel      |Type     |read-only|Description                                                                      |\n |----------|-------------|---------|---------|---------------------------------------------------------------------------------|\n |relay     |brightness   |Dimmer   |r/w      |Currently selected brightness.                                                   |\n-|          |input1       |Switch   |yes      |State of Input 1 (S1)                                                            |\n-|          |input2       |Switch   |yes      |State of Input 2 (S2)                                                            |\n-|          |autoOn       |Number   |r/w      |Sets a  timer to turn the device ON after every OFF command; in seconds          |\n-|          |autoOff      |Number   |r/w      |Sets a  timer to turn the device OFF after every ON command; in seconds          |\n-|          |button       |Trigger  |yes      |Event trigger with payload SHORT_PRESSED or LONG_PRESSED (FW 1.5.6+)             |\n |          |outputName   |String   |yes      |Logical name of this relay output as configured in the Shelly App                |\n+|          |input1       |Switch   |yes      |ON: Input/Button for input 1 is powered, see general notes on channels           |\n+|          |button       |Trigger  |yes      |Event trigger with payload SHORT_PRESSED or LONG_PRESSED (FW 1.5.6+)             |\n+|          |input2       |Switch   |yes      |ON: Input/Button for channel 2 is powered, see general notes on channels         |\n+|          |autoOn       |Number   |r/w      |Relay #1: Sets a  timer to turn the device ON after every OFF command; in seconds|\n+|          |autoOff      |Number   |r/w      |Relay #1: Sets a  timer to turn the device OFF after every ON command; in seconds|\n+|          |timerActive  |Switch   |yes      |Relay #1: ON: An auto-on/off timer is active                                     |\n |meter     |currentWatts |Number   |yes      |Current power consumption in Watts                                               |\n |          |lastPower1   |Number   |yes      |Energy consumption in Watts for a round minute, 1 minute  ago                    |\n |          |lastPower2   |Number   |yes      |Energy consumption in Watts for a round minute, 2 minutes ago                    |\n |          |lastPower3   |Number   |yes      |Energy consumption in Watts for a round minute, 3 minutes ago                    |\n |          |totalKWH     |Number   |yes      |Total energy consumption in Watts since the device powered up (resets on restart)|\n |          |lastUpdate   |DateTime |yes      |Timestamp of the last measurement                                                |\n \n-### Shelly Dimmer2 (thing-type: shellydimmer2)\n \n-|Group     |Channel      |Type     |read-only|Description                                                                      |\n-|----------|-------------|---------|---------|---------------------------------------------------------------------------------|\n-|relay     |brightness   |Dimmer   |r/w      |Currently selected brightness.                                                   |\n-|          |input1       |Switch   |yes      |State of Input 1 (S1)                                                            |\n-|          |input2       |Switch   |yes      |State of Input 2 (S2)                                                            |\n-|          |autoOn       |Number   |r/w      |Sets a  timer to turn the device ON after every OFF command; in seconds          |\n-|          |autoOff      |Number   |r/w      |Sets a  timer to turn the device OFF after every ON command; in seconds          |\n-|          |button       |Trigger  |yes      |Event trigger with payload SHORT_PRESSED or LONG_PRESSED (FW 1.5.6+)             |\n-|          |outputName   |String   |yes      |Logical name of this relay output as configured in the Shelly App                |\n-|meter     |currentWatts |Number   |yes      |Current power consumption in Watts                                               |\n-|          |lastPower1   |Number   |yes      |Energy consumption in Watts for a round minute, 1 minute  ago                    |\n-|          |lastPower2   |Number   |yes      |Energy consumption in Watts for a round minute, 2 minutes ago                    |\n-|          |lastPower3   |Number   |yes      |Energy consumption in Watts for a round minute, 3 minutes ago                    |\n-|          |totalKWH     |Number   |yes      |Total energy consumption in Watts since the device powered up (resets on restart)|\n-|          |lastUpdate   |DateTime |yes      |Timestamp of the last measurement                                                |\n+Note: The Dimmer should be calibrated using the Shelly App.\n \n-The Dimmer should be calibrated using the Shelly App.\n+Use the thing configuration option brightnessAutoOn you could decide if the light is turned on when a brightness > 0 is set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 362}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4ODY0MQ==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544088641", "createdAt": "2020-12-16T08:03:43Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -505,43 +493,31 @@ The Shelly 4Pro provides 4 relays and 4 power meters.\n |relay     |             |         |         |See group relay1 for Shelly 2                                                    |\n |meter     |             |         |         |See group meter1 for Shelly 2                                                    |\n \n-### Shelly Dimmer (thing-type: shellydimmer)\n+### Shelly Dimmer 1 + 2 (thing-type: shellydimmer, shellydimmer2)\n \n |Group     |Channel      |Type     |read-only|Description                                                                      |\n |----------|-------------|---------|---------|---------------------------------------------------------------------------------|\n |relay     |brightness   |Dimmer   |r/w      |Currently selected brightness.                                                   |\n-|          |input1       |Switch   |yes      |State of Input 1 (S1)                                                            |\n-|          |input2       |Switch   |yes      |State of Input 2 (S2)                                                            |\n-|          |autoOn       |Number   |r/w      |Sets a  timer to turn the device ON after every OFF command; in seconds          |\n-|          |autoOff      |Number   |r/w      |Sets a  timer to turn the device OFF after every ON command; in seconds          |\n-|          |button       |Trigger  |yes      |Event trigger with payload SHORT_PRESSED or LONG_PRESSED (FW 1.5.6+)             |\n |          |outputName   |String   |yes      |Logical name of this relay output as configured in the Shelly App                |\n+|          |input1       |Switch   |yes      |ON: Input/Button for input 1 is powered, see general notes on channels           |\n+|          |button       |Trigger  |yes      |Event trigger with payload SHORT_PRESSED or LONG_PRESSED (FW 1.5.6+)             |\n+|          |input2       |Switch   |yes      |ON: Input/Button for channel 2 is powered, see general notes on channels         |\n+|          |autoOn       |Number   |r/w      |Relay #1: Sets a  timer to turn the device ON after every OFF command; in seconds|\n+|          |autoOff      |Number   |r/w      |Relay #1: Sets a  timer to turn the device OFF after every ON command; in seconds|\n+|          |timerActive  |Switch   |yes      |Relay #1: ON: An auto-on/off timer is active                                     |\n |meter     |currentWatts |Number   |yes      |Current power consumption in Watts                                               |\n |          |lastPower1   |Number   |yes      |Energy consumption in Watts for a round minute, 1 minute  ago                    |\n |          |lastPower2   |Number   |yes      |Energy consumption in Watts for a round minute, 2 minutes ago                    |\n |          |lastPower3   |Number   |yes      |Energy consumption in Watts for a round minute, 3 minutes ago                    |\n |          |totalKWH     |Number   |yes      |Total energy consumption in Watts since the device powered up (resets on restart)|\n |          |lastUpdate   |DateTime |yes      |Timestamp of the last measurement                                                |\n \n-### Shelly Dimmer2 (thing-type: shellydimmer2)\n \n-|Group     |Channel      |Type     |read-only|Description                                                                      |\n-|----------|-------------|---------|---------|---------------------------------------------------------------------------------|\n-|relay     |brightness   |Dimmer   |r/w      |Currently selected brightness.                                                   |\n-|          |input1       |Switch   |yes      |State of Input 1 (S1)                                                            |\n-|          |input2       |Switch   |yes      |State of Input 2 (S2)                                                            |\n-|          |autoOn       |Number   |r/w      |Sets a  timer to turn the device ON after every OFF command; in seconds          |\n-|          |autoOff      |Number   |r/w      |Sets a  timer to turn the device OFF after every ON command; in seconds          |\n-|          |button       |Trigger  |yes      |Event trigger with payload SHORT_PRESSED or LONG_PRESSED (FW 1.5.6+)             |\n-|          |outputName   |String   |yes      |Logical name of this relay output as configured in the Shelly App                |\n-|meter     |currentWatts |Number   |yes      |Current power consumption in Watts                                               |\n-|          |lastPower1   |Number   |yes      |Energy consumption in Watts for a round minute, 1 minute  ago                    |\n-|          |lastPower2   |Number   |yes      |Energy consumption in Watts for a round minute, 2 minutes ago                    |\n-|          |lastPower3   |Number   |yes      |Energy consumption in Watts for a round minute, 3 minutes ago                    |\n-|          |totalKWH     |Number   |yes      |Total energy consumption in Watts since the device powered up (resets on restart)|\n-|          |lastUpdate   |DateTime |yes      |Timestamp of the last measurement                                                |\n+Note: The Dimmer should be calibrated using the Shelly App.\n \n-The Dimmer should be calibrated using the Shelly App.\n+Use the thing configuration option brightnessAutoOn you could decide if the light is turned on when a brightness > 0 is set.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyMzk1MA=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 362}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjU4NTYwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxMTo0MlrOIGiSvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowNDoyNlrOIG4jiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNDIyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Use the thing configuration option brightnessAutoOn you could decide if the light is turned on when a brightness > 0 is set.\n          \n          \n            \n            Use the thing configuration option `brightnessAutoOn` you could decide if the light is turned on when a brightness > 0 is set.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543724220", "createdAt": "2020-12-15T22:11:42Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -635,6 +611,10 @@ The Dimmer should be calibrated using the Shelly App.\n |          |             |         |         |0=No effect, 1=Meteor Shower, 2=Gradual Change, 3=Flash                |\n |meter     |currentWatts |Number   |yes      |Current power consumption in Watts                                     |\n \n+Use the thing configuration option brightnessAutoOn you could decide if the light is turned on when a brightness > 0 is set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 372}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4ODk2OA==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544088968", "createdAt": "2020-12-16T08:04:26Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -635,6 +611,10 @@ The Dimmer should be calibrated using the Shelly App.\n |          |             |         |         |0=No effect, 1=Meteor Shower, 2=Gradual Change, 3=Flash                |\n |meter     |currentWatts |Number   |yes      |Current power consumption in Watts                                     |\n \n+Use the thing configuration option brightnessAutoOn you could decide if the light is turned on when a brightness > 0 is set.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNDIyMA=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 372}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjU5MDY1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxMjo1N1rOIGiVhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowNTozOVrOIG4mCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNDkzMw==", "bodyText": "The lower than and greater than signs need to be escaped, or better the entire line:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Group   gBattery        \"Batterien\"         <battery>       (All)\n          \n          \n            \n            `Group   gBattery        \"Batterien\"         <battery>       (All)`", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543724933", "createdAt": "2020-12-15T22:12:57Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -823,7 +803,128 @@ Number Shelly_Power     \"Bath Room Light Power\"                {channel=\"shelly:\n \n ### shelly.rules\n \n-reading colors from color picker:\n+#### Catch alarms\n+\n+```\n+rule \"Monitor Shelly Restartt\"\n+when\n+    Channel \"shelly:shelly2-relay:XXXXXX:device#alarm\" triggered OVERTEMP\n+then\n+        logInfo(\"Shelly1\", \"Device is getting to hot!!\")\n+end\n+```\n+\n+#### Trigger scene with Button-1\n+\n+```\n+rule \"Button-1 SHORT_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered SHORT_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported SHORT_PRESSED\")\n+    if (MyTV.state != OFF) {\n+        logInfo(\"Button\", \"   switch TV OFF\")\n+        sendCommand(MyTV, \"OFF\")\n+    } else {\n+        logInfo(\"Button\", \"   switch TV to ON\")\n+        sendCommand(MyTV, ON)\n+    }\n+end\n+\n+rule \"Button-1 TRIPLE_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered TRIPLE_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported TRIPLE_PRESSED\")\n+end\n+```\n+\n+#### Observe battery status\n+\n+pre-requisites:\n+\n+- Install Send Mail Action\n+- Define a group called gBatteries\n+Group   gBattery        \"Batterien\"         <battery>       (All)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 426}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4OTYxMA==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544089610", "createdAt": "2020-12-16T08:05:39Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -823,7 +803,128 @@ Number Shelly_Power     \"Bath Room Light Power\"                {channel=\"shelly:\n \n ### shelly.rules\n \n-reading colors from color picker:\n+#### Catch alarms\n+\n+```\n+rule \"Monitor Shelly Restartt\"\n+when\n+    Channel \"shelly:shelly2-relay:XXXXXX:device#alarm\" triggered OVERTEMP\n+then\n+        logInfo(\"Shelly1\", \"Device is getting to hot!!\")\n+end\n+```\n+\n+#### Trigger scene with Button-1\n+\n+```\n+rule \"Button-1 SHORT_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered SHORT_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported SHORT_PRESSED\")\n+    if (MyTV.state != OFF) {\n+        logInfo(\"Button\", \"   switch TV OFF\")\n+        sendCommand(MyTV, \"OFF\")\n+    } else {\n+        logInfo(\"Button\", \"   switch TV to ON\")\n+        sendCommand(MyTV, ON)\n+    }\n+end\n+\n+rule \"Button-1 TRIPLE_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered TRIPLE_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported TRIPLE_PRESSED\")\n+end\n+```\n+\n+#### Observe battery status\n+\n+pre-requisites:\n+\n+- Install Send Mail Action\n+- Define a group called gBatteries\n+Group   gBattery        \"Batterien\"         <battery>       (All)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNDkzMw=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 426}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjU5MTMzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxMzoxMVrOIGiV_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowNjowM1rOIG4m2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTA1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Link battery channel for all you Shelly battery powered devices\n          \n          \n            \n            - Link battery channel for all your Shelly battery powered devices", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543725055", "createdAt": "2020-12-15T22:13:11Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -823,7 +803,128 @@ Number Shelly_Power     \"Bath Room Light Power\"                {channel=\"shelly:\n \n ### shelly.rules\n \n-reading colors from color picker:\n+#### Catch alarms\n+\n+```\n+rule \"Monitor Shelly Restartt\"\n+when\n+    Channel \"shelly:shelly2-relay:XXXXXX:device#alarm\" triggered OVERTEMP\n+then\n+        logInfo(\"Shelly1\", \"Device is getting to hot!!\")\n+end\n+```\n+\n+#### Trigger scene with Button-1\n+\n+```\n+rule \"Button-1 SHORT_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered SHORT_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported SHORT_PRESSED\")\n+    if (MyTV.state != OFF) {\n+        logInfo(\"Button\", \"   switch TV OFF\")\n+        sendCommand(MyTV, \"OFF\")\n+    } else {\n+        logInfo(\"Button\", \"   switch TV to ON\")\n+        sendCommand(MyTV, ON)\n+    }\n+end\n+\n+rule \"Button-1 TRIPLE_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered TRIPLE_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported TRIPLE_PRESSED\")\n+end\n+```\n+\n+#### Observe battery status\n+\n+pre-requisites:\n+\n+- Install Send Mail Action\n+- Define a group called gBatteries\n+Group   gBattery        \"Batterien\"         <battery>       (All)\n+- Link battery channel for all you Shelly battery powered devices", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 427}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4OTgxOQ==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544089819", "createdAt": "2020-12-16T08:06:03Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -823,7 +803,128 @@ Number Shelly_Power     \"Bath Room Light Power\"                {channel=\"shelly:\n \n ### shelly.rules\n \n-reading colors from color picker:\n+#### Catch alarms\n+\n+```\n+rule \"Monitor Shelly Restartt\"\n+when\n+    Channel \"shelly:shelly2-relay:XXXXXX:device#alarm\" triggered OVERTEMP\n+then\n+        logInfo(\"Shelly1\", \"Device is getting to hot!!\")\n+end\n+```\n+\n+#### Trigger scene with Button-1\n+\n+```\n+rule \"Button-1 SHORT_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered SHORT_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported SHORT_PRESSED\")\n+    if (MyTV.state != OFF) {\n+        logInfo(\"Button\", \"   switch TV OFF\")\n+        sendCommand(MyTV, \"OFF\")\n+    } else {\n+        logInfo(\"Button\", \"   switch TV to ON\")\n+        sendCommand(MyTV, ON)\n+    }\n+end\n+\n+rule \"Button-1 TRIPLE_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered TRIPLE_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported TRIPLE_PRESSED\")\n+end\n+```\n+\n+#### Observe battery status\n+\n+pre-requisites:\n+\n+- Install Send Mail Action\n+- Define a group called gBatteries\n+Group   gBattery        \"Batterien\"         <battery>       (All)\n+- Link battery channel for all you Shelly battery powered devices", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTA1NQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 427}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjU5NDIyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxNDowMVrOIGiXsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowNjo1OVrOIG4o7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTQ5MQ==", "bodyText": "Better surround this with backticks.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543725491", "createdAt": "2020-12-15T22:14:01Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -823,7 +803,128 @@ Number Shelly_Power     \"Bath Room Light Power\"                {channel=\"shelly:\n \n ### shelly.rules\n \n-reading colors from color picker:\n+#### Catch alarms\n+\n+```\n+rule \"Monitor Shelly Restartt\"\n+when\n+    Channel \"shelly:shelly2-relay:XXXXXX:device#alarm\" triggered OVERTEMP\n+then\n+        logInfo(\"Shelly1\", \"Device is getting to hot!!\")\n+end\n+```\n+\n+#### Trigger scene with Button-1\n+\n+```\n+rule \"Button-1 SHORT_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered SHORT_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported SHORT_PRESSED\")\n+    if (MyTV.state != OFF) {\n+        logInfo(\"Button\", \"   switch TV OFF\")\n+        sendCommand(MyTV, \"OFF\")\n+    } else {\n+        logInfo(\"Button\", \"   switch TV to ON\")\n+        sendCommand(MyTV, ON)\n+    }\n+end\n+\n+rule \"Button-1 TRIPLE_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered TRIPLE_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported TRIPLE_PRESSED\")\n+end\n+```\n+\n+#### Observe battery status\n+\n+pre-requisites:\n+\n+- Install Send Mail Action\n+- Define a group called gBatteries\n+Group   gBattery        \"Batterien\"         <battery>       (All)\n+- Link battery channel for all you Shelly battery powered devices\n+- Add battery items to group gBattery\n+\n+```\n+val String mailTo     = \"alarm@openhab.me\"\n+\n+/* ------------- Battery Monitor ----------- */\n+\n+rule \"Battery Monitor\"\n+when\n+    System started or\n+    Time cron \"0 0 10 * * ?\"\n+then\n+    logInfo(\"BatteryMon\", \"Check Battery state\")\n+\n+    if (! gBattery.allMembers.filter([state < lowBatteryThreshold]).empty) {\n+        message = \"Battery levels:\\n\"\n+\n+        var report = gBattery.allMembers.filter([ state instanceof DecimalType ]).sortBy([ state instanceof DecimalType ]).map[ \n+        name + \": \" + state.format(\"%d%%\\n\") ]\n+        message = message + report\n+\n+        message = message + \"\\nBattery Level:\\n\"\n+        gBattery?.allMembers.forEach([sw|\n+            message = message + sw.name + \": \" + state.format(\"%d%%\\n\")\n+        ])\n+\n+        sendMail(mailTo, \"Home: LOW Battery Alert!\", message)\n+    }\n+    logInfo(\"BatteryMon\", \"Batteries checked.\")\n+end\n+```\n+\n+#### Control CCT LED stripes\n+\n+Usage & Requirements:\n+- 4 Items per thing required. Example:\n+    Group gCCT_LED        \"All CCT LEDs\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 464}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5MDM0OA==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544090348", "createdAt": "2020-12-16T08:06:59Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -823,7 +803,128 @@ Number Shelly_Power     \"Bath Room Light Power\"                {channel=\"shelly:\n \n ### shelly.rules\n \n-reading colors from color picker:\n+#### Catch alarms\n+\n+```\n+rule \"Monitor Shelly Restartt\"\n+when\n+    Channel \"shelly:shelly2-relay:XXXXXX:device#alarm\" triggered OVERTEMP\n+then\n+        logInfo(\"Shelly1\", \"Device is getting to hot!!\")\n+end\n+```\n+\n+#### Trigger scene with Button-1\n+\n+```\n+rule \"Button-1 SHORT_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered SHORT_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported SHORT_PRESSED\")\n+    if (MyTV.state != OFF) {\n+        logInfo(\"Button\", \"   switch TV OFF\")\n+        sendCommand(MyTV, \"OFF\")\n+    } else {\n+        logInfo(\"Button\", \"   switch TV to ON\")\n+        sendCommand(MyTV, ON)\n+    }\n+end\n+\n+rule \"Button-1 TRIPLE_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered TRIPLE_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported TRIPLE_PRESSED\")\n+end\n+```\n+\n+#### Observe battery status\n+\n+pre-requisites:\n+\n+- Install Send Mail Action\n+- Define a group called gBatteries\n+Group   gBattery        \"Batterien\"         <battery>       (All)\n+- Link battery channel for all you Shelly battery powered devices\n+- Add battery items to group gBattery\n+\n+```\n+val String mailTo     = \"alarm@openhab.me\"\n+\n+/* ------------- Battery Monitor ----------- */\n+\n+rule \"Battery Monitor\"\n+when\n+    System started or\n+    Time cron \"0 0 10 * * ?\"\n+then\n+    logInfo(\"BatteryMon\", \"Check Battery state\")\n+\n+    if (! gBattery.allMembers.filter([state < lowBatteryThreshold]).empty) {\n+        message = \"Battery levels:\\n\"\n+\n+        var report = gBattery.allMembers.filter([ state instanceof DecimalType ]).sortBy([ state instanceof DecimalType ]).map[ \n+        name + \": \" + state.format(\"%d%%\\n\") ]\n+        message = message + report\n+\n+        message = message + \"\\nBattery Level:\\n\"\n+        gBattery?.allMembers.forEach([sw|\n+            message = message + sw.name + \": \" + state.format(\"%d%%\\n\")\n+        ])\n+\n+        sendMail(mailTo, \"Home: LOW Battery Alert!\", message)\n+    }\n+    logInfo(\"BatteryMon\", \"Batteries checked.\")\n+end\n+```\n+\n+#### Control CCT LED stripes\n+\n+Usage & Requirements:\n+- 4 Items per thing required. Example:\n+    Group gCCT_LED        \"All CCT LEDs\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNTQ5MQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 464}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjU5ODQwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxNTowN1rOIGiaKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowNzo0MlrOIG4qjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNjEyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Items \"LED1_cw\" and \"LED_ww\" are litems linked to thing channel. Not required in sitemaps. Do NOT include in this group\n          \n          \n            \n            - Items \"LED1_cw\" and \"LED_ww\" are items linked to a thing channel. Not required in sitemaps. Do NOT include in this group", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543726121", "createdAt": "2020-12-15T22:15:07Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -823,7 +803,128 @@ Number Shelly_Power     \"Bath Room Light Power\"                {channel=\"shelly:\n \n ### shelly.rules\n \n-reading colors from color picker:\n+#### Catch alarms\n+\n+```\n+rule \"Monitor Shelly Restartt\"\n+when\n+    Channel \"shelly:shelly2-relay:XXXXXX:device#alarm\" triggered OVERTEMP\n+then\n+        logInfo(\"Shelly1\", \"Device is getting to hot!!\")\n+end\n+```\n+\n+#### Trigger scene with Button-1\n+\n+```\n+rule \"Button-1 SHORT_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered SHORT_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported SHORT_PRESSED\")\n+    if (MyTV.state != OFF) {\n+        logInfo(\"Button\", \"   switch TV OFF\")\n+        sendCommand(MyTV, \"OFF\")\n+    } else {\n+        logInfo(\"Button\", \"   switch TV to ON\")\n+        sendCommand(MyTV, ON)\n+    }\n+end\n+\n+rule \"Button-1 TRIPLE_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered TRIPLE_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported TRIPLE_PRESSED\")\n+end\n+```\n+\n+#### Observe battery status\n+\n+pre-requisites:\n+\n+- Install Send Mail Action\n+- Define a group called gBatteries\n+Group   gBattery        \"Batterien\"         <battery>       (All)\n+- Link battery channel for all you Shelly battery powered devices\n+- Add battery items to group gBattery\n+\n+```\n+val String mailTo     = \"alarm@openhab.me\"\n+\n+/* ------------- Battery Monitor ----------- */\n+\n+rule \"Battery Monitor\"\n+when\n+    System started or\n+    Time cron \"0 0 10 * * ?\"\n+then\n+    logInfo(\"BatteryMon\", \"Check Battery state\")\n+\n+    if (! gBattery.allMembers.filter([state < lowBatteryThreshold]).empty) {\n+        message = \"Battery levels:\\n\"\n+\n+        var report = gBattery.allMembers.filter([ state instanceof DecimalType ]).sortBy([ state instanceof DecimalType ]).map[ \n+        name + \": \" + state.format(\"%d%%\\n\") ]\n+        message = message + report\n+\n+        message = message + \"\\nBattery Level:\\n\"\n+        gBattery?.allMembers.forEach([sw|\n+            message = message + sw.name + \": \" + state.format(\"%d%%\\n\")\n+        ])\n+\n+        sendMail(mailTo, \"Home: LOW Battery Alert!\", message)\n+    }\n+    logInfo(\"BatteryMon\", \"Batteries checked.\")\n+end\n+```\n+\n+#### Control CCT LED stripes\n+\n+Usage & Requirements:\n+- 4 Items per thing required. Example:\n+    Group gCCT_LED        \"All CCT LEDs\"\n+    Dimmer    LED1_brightness     \"Brightness\"    (gCCT_LED)\n+    Dimmer    LED1_temperature    \"Temperature\"   (gCCT_LED)\n+    Dimmer    LED1_cw         \"cold white Channel\"\n+    Dimmer    LED1_ww         \"warm white Channel\"\n+- Items \"LED1\" and \"LED1_temperature\" are proxy items and to be used in sitemaps. Both have to be a member of group \"gCCT_LED\"\n+- Items \"LED1_cw\" and \"LED_ww\" are litems linked to thing channel. Not required in sitemaps. Do NOT include in this group", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 470}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5MDc2NQ==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544090765", "createdAt": "2020-12-16T08:07:42Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/README.md", "diffHunk": "@@ -823,7 +803,128 @@ Number Shelly_Power     \"Bath Room Light Power\"                {channel=\"shelly:\n \n ### shelly.rules\n \n-reading colors from color picker:\n+#### Catch alarms\n+\n+```\n+rule \"Monitor Shelly Restartt\"\n+when\n+    Channel \"shelly:shelly2-relay:XXXXXX:device#alarm\" triggered OVERTEMP\n+then\n+        logInfo(\"Shelly1\", \"Device is getting to hot!!\")\n+end\n+```\n+\n+#### Trigger scene with Button-1\n+\n+```\n+rule \"Button-1 SHORT_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered SHORT_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported SHORT_PRESSED\")\n+    if (MyTV.state != OFF) {\n+        logInfo(\"Button\", \"   switch TV OFF\")\n+        sendCommand(MyTV, \"OFF\")\n+    } else {\n+        logInfo(\"Button\", \"   switch TV to ON\")\n+        sendCommand(MyTV, ON)\n+    }\n+end\n+\n+rule \"Button-1 TRIPLE_PRESSED\"\n+when\n+    Channel \"shelly:shellybutton1:d8f15bXXXXXX:status#button\" triggered TRIPLE_PRESSED\n+then\n+    logInfo(\"Button\", \"Shelly Button reported TRIPLE_PRESSED\")\n+end\n+```\n+\n+#### Observe battery status\n+\n+pre-requisites:\n+\n+- Install Send Mail Action\n+- Define a group called gBatteries\n+Group   gBattery        \"Batterien\"         <battery>       (All)\n+- Link battery channel for all you Shelly battery powered devices\n+- Add battery items to group gBattery\n+\n+```\n+val String mailTo     = \"alarm@openhab.me\"\n+\n+/* ------------- Battery Monitor ----------- */\n+\n+rule \"Battery Monitor\"\n+when\n+    System started or\n+    Time cron \"0 0 10 * * ?\"\n+then\n+    logInfo(\"BatteryMon\", \"Check Battery state\")\n+\n+    if (! gBattery.allMembers.filter([state < lowBatteryThreshold]).empty) {\n+        message = \"Battery levels:\\n\"\n+\n+        var report = gBattery.allMembers.filter([ state instanceof DecimalType ]).sortBy([ state instanceof DecimalType ]).map[ \n+        name + \": \" + state.format(\"%d%%\\n\") ]\n+        message = message + report\n+\n+        message = message + \"\\nBattery Level:\\n\"\n+        gBattery?.allMembers.forEach([sw|\n+            message = message + sw.name + \": \" + state.format(\"%d%%\\n\")\n+        ])\n+\n+        sendMail(mailTo, \"Home: LOW Battery Alert!\", message)\n+    }\n+    logInfo(\"BatteryMon\", \"Batteries checked.\")\n+end\n+```\n+\n+#### Control CCT LED stripes\n+\n+Usage & Requirements:\n+- 4 Items per thing required. Example:\n+    Group gCCT_LED        \"All CCT LEDs\"\n+    Dimmer    LED1_brightness     \"Brightness\"    (gCCT_LED)\n+    Dimmer    LED1_temperature    \"Temperature\"   (gCCT_LED)\n+    Dimmer    LED1_cw         \"cold white Channel\"\n+    Dimmer    LED1_ww         \"warm white Channel\"\n+- Items \"LED1\" and \"LED1_temperature\" are proxy items and to be used in sitemaps. Both have to be a member of group \"gCCT_LED\"\n+- Items \"LED1_cw\" and \"LED_ww\" are litems linked to thing channel. Not required in sitemaps. Do NOT include in this group", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNjEyMQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 470}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjYwMzEzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxNjozOFrOIGidBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowODo1NlrOIG4tOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNjg1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n          \n          \n            \n            However, if this doesn't work (sometimes there are issues) you could use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543726853", "createdAt": "2020-12-15T22:16:38Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5MTQ1MQ==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544091451", "createdAt": "2020-12-16T08:08:56Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyNjg1Mw=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjYxMDk0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoxODo0MlrOIGihrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowOToxNlrOIG4t8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyODA0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n          \n          \n            \n            This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet access).", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543728047", "createdAt": "2020-12-15T22:18:42Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5MTYzMg==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544091632", "createdAt": "2020-12-16T08:09:16Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyODA0Nw=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjYyMDg2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyMToxN1rOIGinTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODowOTozN1rOIG4uwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyOTQ4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.\n          \n          \n            \n            The binding provides channels (e.g. heartBeat, currentWatts), which might cause a lot of log output, especially when having multiple dozen Shellys.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543729484", "createdAt": "2020-12-15T22:21:17Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n+You specify the device's IP and device model SHSW-25 and the page will generate you the link for the firmware download using the OTA of the device.\n+Then you run \"curl -s [-u user:password] &gt;generated link&gt;\" from the terminal.\n+This should show a JSON result, make sure that it shows \"status:updating\".\n+Wait 15sec and access the device's Web UI, go to Settings:Firmware Upgrade and make sure than the new version was installed successful.\n+- Manual download and installation of the firmware\n+Manually pick the download link from the [Shelly Firmware Repository](https://api.shelly.cloud/files/firmware) and get the release or beta link.\n+Once you downloaded the file you need to copy it to an http server. \n+Open the following url http://&lt;shelly ip&gt;/ota?url=http://&lt;web server&gt;/&lt;path&gt;/&lt;zip-file&gt;\n+Again, make sure that the file is downloaded and installed properly.\n+\n+## Trouble Shooting\n+\n+### Network Settings\n+\n+Shelly devices do only support IPv4. \n+This implies that the openHAB host system has IPv4 bound to the network interface.\n+The binding is only able to discover devices on the local subnet. \n+Add things manually with the given IP if you have a routed network in between or using a VPN connection.\n+\n+The binding enables CoIoT protocol by default if the device is running firmware 1.6 or newer.\n+CoIoT is based on CoAP and uses a UDP based signaling using IP Multicast (224.0.1.187, port 5683).\n+Again if the device is not on the same local IP subnet you need special router/switch configurations to utilized CoAP via IP Multicast.\n+Otherwise disable the Auto-CoIoT feature in the binding config (not the thing config), disable CoIoT events in the thing configuration and enable sensors events (http callback).\n+Nevertheless in this setup the binding can communicate the device, but you are loosing the benefits of CoIoT.\n+\n+Refer to openHAB's general documentation when running openHAB in a docker container. Enabling mDNS discovery has additional setup requirements.  \n+\n+### Re-discover when IP address has changed\n+ \n+Important: The IP address should not be changed after the device is added to openHAB.\n+\n+This can be achieved by\n+\n+- assigning a static IP address (recommended for battery powered devices) or\n+- using DHCP and setup the router to always assign the same IP address to the device\n+\n+When the IP address changes for a device you need to delete the Thing and then re-discover the device.\n+In this case channel linkage gets lost and you need to re-link the channels/items.\n+\n+## Log optimization\n+\n+The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5MTg0MA==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544091840", "createdAt": "2020-12-16T08:09:37Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n+You specify the device's IP and device model SHSW-25 and the page will generate you the link for the firmware download using the OTA of the device.\n+Then you run \"curl -s [-u user:password] &gt;generated link&gt;\" from the terminal.\n+This should show a JSON result, make sure that it shows \"status:updating\".\n+Wait 15sec and access the device's Web UI, go to Settings:Firmware Upgrade and make sure than the new version was installed successful.\n+- Manual download and installation of the firmware\n+Manually pick the download link from the [Shelly Firmware Repository](https://api.shelly.cloud/files/firmware) and get the release or beta link.\n+Once you downloaded the file you need to copy it to an http server. \n+Open the following url http://&lt;shelly ip&gt;/ota?url=http://&lt;web server&gt;/&lt;path&gt;/&lt;zip-file&gt;\n+Again, make sure that the file is downloaded and installed properly.\n+\n+## Trouble Shooting\n+\n+### Network Settings\n+\n+Shelly devices do only support IPv4. \n+This implies that the openHAB host system has IPv4 bound to the network interface.\n+The binding is only able to discover devices on the local subnet. \n+Add things manually with the given IP if you have a routed network in between or using a VPN connection.\n+\n+The binding enables CoIoT protocol by default if the device is running firmware 1.6 or newer.\n+CoIoT is based on CoAP and uses a UDP based signaling using IP Multicast (224.0.1.187, port 5683).\n+Again if the device is not on the same local IP subnet you need special router/switch configurations to utilized CoAP via IP Multicast.\n+Otherwise disable the Auto-CoIoT feature in the binding config (not the thing config), disable CoIoT events in the thing configuration and enable sensors events (http callback).\n+Nevertheless in this setup the binding can communicate the device, but you are loosing the benefits of CoIoT.\n+\n+Refer to openHAB's general documentation when running openHAB in a docker container. Enabling mDNS discovery has additional setup requirements.  \n+\n+### Re-discover when IP address has changed\n+ \n+Important: The IP address should not be changed after the device is added to openHAB.\n+\n+This can be achieved by\n+\n+- assigning a static IP address (recommended for battery powered devices) or\n+- using DHCP and setup the router to always assign the same IP address to the device\n+\n+When the IP address changes for a device you need to delete the Thing and then re-discover the device.\n+In this case channel linkage gets lost and you need to re-link the channels/items.\n+\n+## Log optimization\n+\n+The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcyOTQ4NA=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjYyNzI2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyMjo1M1rOIGirAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxOTo1OTowMVrOIIGgFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDQzNQ==", "bodyText": "The directory name has changed to openhab-userdata in OH3. Also, the default logging file is now log4j2.xml, which is XML based.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543730435", "createdAt": "2020-12-15T22:22:53Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n+You specify the device's IP and device model SHSW-25 and the page will generate you the link for the firmware download using the OTA of the device.\n+Then you run \"curl -s [-u user:password] &gt;generated link&gt;\" from the terminal.\n+This should show a JSON result, make sure that it shows \"status:updating\".\n+Wait 15sec and access the device's Web UI, go to Settings:Firmware Upgrade and make sure than the new version was installed successful.\n+- Manual download and installation of the firmware\n+Manually pick the download link from the [Shelly Firmware Repository](https://api.shelly.cloud/files/firmware) and get the release or beta link.\n+Once you downloaded the file you need to copy it to an http server. \n+Open the following url http://&lt;shelly ip&gt;/ota?url=http://&lt;web server&gt;/&lt;path&gt;/&lt;zip-file&gt;\n+Again, make sure that the file is downloaded and installed properly.\n+\n+## Trouble Shooting\n+\n+### Network Settings\n+\n+Shelly devices do only support IPv4. \n+This implies that the openHAB host system has IPv4 bound to the network interface.\n+The binding is only able to discover devices on the local subnet. \n+Add things manually with the given IP if you have a routed network in between or using a VPN connection.\n+\n+The binding enables CoIoT protocol by default if the device is running firmware 1.6 or newer.\n+CoIoT is based on CoAP and uses a UDP based signaling using IP Multicast (224.0.1.187, port 5683).\n+Again if the device is not on the same local IP subnet you need special router/switch configurations to utilized CoAP via IP Multicast.\n+Otherwise disable the Auto-CoIoT feature in the binding config (not the thing config), disable CoIoT events in the thing configuration and enable sensors events (http callback).\n+Nevertheless in this setup the binding can communicate the device, but you are loosing the benefits of CoIoT.\n+\n+Refer to openHAB's general documentation when running openHAB in a docker container. Enabling mDNS discovery has additional setup requirements.  \n+\n+### Re-discover when IP address has changed\n+ \n+Important: The IP address should not be changed after the device is added to openHAB.\n+\n+This can be achieved by\n+\n+- assigning a static IP address (recommended for battery powered devices) or\n+- using DHCP and setup the router to always assign the same IP address to the device\n+\n+When the IP address changes for a device you need to delete the Thing and then re-discover the device.\n+In this case channel linkage gets lost and you need to re-link the channels/items.\n+\n+## Log optimization\n+\n+The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.\n+\n+openHAB has an integrated feature to filter the event log.\n+This mechanism doesn't filter the event, but the log output (items still receive the updates).\n+\n+A configuration is added as a new section to `openhab2-userdata/etc/org.ops4j.pax.logging.cfg`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5Mjk0Nw==", "bodyText": "hmm, could you provide me the matching OH3 Info, currently I'm not really in OH3, otherwhise I need to remove this section (which was driven by users, because updates to currentWatt and other rapid changing channels could flood the log)", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544092947", "createdAt": "2020-12-16T08:11:32Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n+You specify the device's IP and device model SHSW-25 and the page will generate you the link for the firmware download using the OTA of the device.\n+Then you run \"curl -s [-u user:password] &gt;generated link&gt;\" from the terminal.\n+This should show a JSON result, make sure that it shows \"status:updating\".\n+Wait 15sec and access the device's Web UI, go to Settings:Firmware Upgrade and make sure than the new version was installed successful.\n+- Manual download and installation of the firmware\n+Manually pick the download link from the [Shelly Firmware Repository](https://api.shelly.cloud/files/firmware) and get the release or beta link.\n+Once you downloaded the file you need to copy it to an http server. \n+Open the following url http://&lt;shelly ip&gt;/ota?url=http://&lt;web server&gt;/&lt;path&gt;/&lt;zip-file&gt;\n+Again, make sure that the file is downloaded and installed properly.\n+\n+## Trouble Shooting\n+\n+### Network Settings\n+\n+Shelly devices do only support IPv4. \n+This implies that the openHAB host system has IPv4 bound to the network interface.\n+The binding is only able to discover devices on the local subnet. \n+Add things manually with the given IP if you have a routed network in between or using a VPN connection.\n+\n+The binding enables CoIoT protocol by default if the device is running firmware 1.6 or newer.\n+CoIoT is based on CoAP and uses a UDP based signaling using IP Multicast (224.0.1.187, port 5683).\n+Again if the device is not on the same local IP subnet you need special router/switch configurations to utilized CoAP via IP Multicast.\n+Otherwise disable the Auto-CoIoT feature in the binding config (not the thing config), disable CoIoT events in the thing configuration and enable sensors events (http callback).\n+Nevertheless in this setup the binding can communicate the device, but you are loosing the benefits of CoIoT.\n+\n+Refer to openHAB's general documentation when running openHAB in a docker container. Enabling mDNS discovery has additional setup requirements.  \n+\n+### Re-discover when IP address has changed\n+ \n+Important: The IP address should not be changed after the device is added to openHAB.\n+\n+This can be achieved by\n+\n+- assigning a static IP address (recommended for battery powered devices) or\n+- using DHCP and setup the router to always assign the same IP address to the device\n+\n+When the IP address changes for a device you need to delete the Thing and then re-discover the device.\n+In this case channel linkage gets lost and you need to re-link the channels/items.\n+\n+## Log optimization\n+\n+The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.\n+\n+openHAB has an integrated feature to filter the event log.\n+This mechanism doesn't filter the event, but the log output (items still receive the updates).\n+\n+A configuration is added as a new section to `openhab2-userdata/etc/org.ops4j.pax.logging.cfg`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDQzNQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyNjQxMQ==", "bodyText": "Here is the new config file: https://github.com/openhab/openhab-distro/blob/master/distributions/openhab/src/main/resources/userdata/etc/log4j2.xml", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544126411", "createdAt": "2020-12-16T09:04:12Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n+You specify the device's IP and device model SHSW-25 and the page will generate you the link for the firmware download using the OTA of the device.\n+Then you run \"curl -s [-u user:password] &gt;generated link&gt;\" from the terminal.\n+This should show a JSON result, make sure that it shows \"status:updating\".\n+Wait 15sec and access the device's Web UI, go to Settings:Firmware Upgrade and make sure than the new version was installed successful.\n+- Manual download and installation of the firmware\n+Manually pick the download link from the [Shelly Firmware Repository](https://api.shelly.cloud/files/firmware) and get the release or beta link.\n+Once you downloaded the file you need to copy it to an http server. \n+Open the following url http://&lt;shelly ip&gt;/ota?url=http://&lt;web server&gt;/&lt;path&gt;/&lt;zip-file&gt;\n+Again, make sure that the file is downloaded and installed properly.\n+\n+## Trouble Shooting\n+\n+### Network Settings\n+\n+Shelly devices do only support IPv4. \n+This implies that the openHAB host system has IPv4 bound to the network interface.\n+The binding is only able to discover devices on the local subnet. \n+Add things manually with the given IP if you have a routed network in between or using a VPN connection.\n+\n+The binding enables CoIoT protocol by default if the device is running firmware 1.6 or newer.\n+CoIoT is based on CoAP and uses a UDP based signaling using IP Multicast (224.0.1.187, port 5683).\n+Again if the device is not on the same local IP subnet you need special router/switch configurations to utilized CoAP via IP Multicast.\n+Otherwise disable the Auto-CoIoT feature in the binding config (not the thing config), disable CoIoT events in the thing configuration and enable sensors events (http callback).\n+Nevertheless in this setup the binding can communicate the device, but you are loosing the benefits of CoIoT.\n+\n+Refer to openHAB's general documentation when running openHAB in a docker container. Enabling mDNS discovery has additional setup requirements.  \n+\n+### Re-discover when IP address has changed\n+ \n+Important: The IP address should not be changed after the device is added to openHAB.\n+\n+This can be achieved by\n+\n+- assigning a static IP address (recommended for battery powered devices) or\n+- using DHCP and setup the router to always assign the same IP address to the device\n+\n+When the IP address changes for a device you need to delete the Thing and then re-discover the device.\n+In this case channel linkage gets lost and you need to re-link the channels/items.\n+\n+## Log optimization\n+\n+The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.\n+\n+openHAB has an integrated feature to filter the event log.\n+This mechanism doesn't filter the event, but the log output (items still receive the updates).\n+\n+A configuration is added as a new section to `openhab2-userdata/etc/org.ops4j.pax.logging.cfg`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDQzNQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDM3MjA2NQ==", "bodyText": "ok, that looks similar to the old format still used in the IDE setup\nbut how could I define filters specifically removing those frequent messages from the logfile, e.g. based on item names to text patterns. adapting the 2.5.x definition:\n# custom filtering rules\nlog4j2.appender.event.filter.uselessevents.type = RegexFilter\nlog4j2.appender.event.filter.uselessevents.regex = .*(heartBeat|LastUpdate|lastUpdate|LetzteAktualisierung|Uptime|Laufzeit|ZuletztGesehen).*\nlog4j2.appender.event.filter.uselessevents.onMatch = DENY\nlog4j2.appender.event.filter.uselessevents.onMisMatch = NEUTRAL", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544372065", "createdAt": "2020-12-16T15:05:18Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n+You specify the device's IP and device model SHSW-25 and the page will generate you the link for the firmware download using the OTA of the device.\n+Then you run \"curl -s [-u user:password] &gt;generated link&gt;\" from the terminal.\n+This should show a JSON result, make sure that it shows \"status:updating\".\n+Wait 15sec and access the device's Web UI, go to Settings:Firmware Upgrade and make sure than the new version was installed successful.\n+- Manual download and installation of the firmware\n+Manually pick the download link from the [Shelly Firmware Repository](https://api.shelly.cloud/files/firmware) and get the release or beta link.\n+Once you downloaded the file you need to copy it to an http server. \n+Open the following url http://&lt;shelly ip&gt;/ota?url=http://&lt;web server&gt;/&lt;path&gt;/&lt;zip-file&gt;\n+Again, make sure that the file is downloaded and installed properly.\n+\n+## Trouble Shooting\n+\n+### Network Settings\n+\n+Shelly devices do only support IPv4. \n+This implies that the openHAB host system has IPv4 bound to the network interface.\n+The binding is only able to discover devices on the local subnet. \n+Add things manually with the given IP if you have a routed network in between or using a VPN connection.\n+\n+The binding enables CoIoT protocol by default if the device is running firmware 1.6 or newer.\n+CoIoT is based on CoAP and uses a UDP based signaling using IP Multicast (224.0.1.187, port 5683).\n+Again if the device is not on the same local IP subnet you need special router/switch configurations to utilized CoAP via IP Multicast.\n+Otherwise disable the Auto-CoIoT feature in the binding config (not the thing config), disable CoIoT events in the thing configuration and enable sensors events (http callback).\n+Nevertheless in this setup the binding can communicate the device, but you are loosing the benefits of CoIoT.\n+\n+Refer to openHAB's general documentation when running openHAB in a docker container. Enabling mDNS discovery has additional setup requirements.  \n+\n+### Re-discover when IP address has changed\n+ \n+Important: The IP address should not be changed after the device is added to openHAB.\n+\n+This can be achieved by\n+\n+- assigning a static IP address (recommended for battery powered devices) or\n+- using DHCP and setup the router to always assign the same IP address to the device\n+\n+When the IP address changes for a device you need to delete the Thing and then re-discover the device.\n+In this case channel linkage gets lost and you need to re-link the channels/items.\n+\n+## Log optimization\n+\n+The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.\n+\n+openHAB has an integrated feature to filter the event log.\n+This mechanism doesn't filter the event, but the log output (items still receive the updates).\n+\n+A configuration is added as a new section to `openhab2-userdata/etc/org.ops4j.pax.logging.cfg`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDQzNQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ0ODI3OA==", "bodyText": "I would need to dive into it, too. Although if we cobble something together we'd need to test it.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544448278", "createdAt": "2020-12-16T16:38:15Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n+You specify the device's IP and device model SHSW-25 and the page will generate you the link for the firmware download using the OTA of the device.\n+Then you run \"curl -s [-u user:password] &gt;generated link&gt;\" from the terminal.\n+This should show a JSON result, make sure that it shows \"status:updating\".\n+Wait 15sec and access the device's Web UI, go to Settings:Firmware Upgrade and make sure than the new version was installed successful.\n+- Manual download and installation of the firmware\n+Manually pick the download link from the [Shelly Firmware Repository](https://api.shelly.cloud/files/firmware) and get the release or beta link.\n+Once you downloaded the file you need to copy it to an http server. \n+Open the following url http://&lt;shelly ip&gt;/ota?url=http://&lt;web server&gt;/&lt;path&gt;/&lt;zip-file&gt;\n+Again, make sure that the file is downloaded and installed properly.\n+\n+## Trouble Shooting\n+\n+### Network Settings\n+\n+Shelly devices do only support IPv4. \n+This implies that the openHAB host system has IPv4 bound to the network interface.\n+The binding is only able to discover devices on the local subnet. \n+Add things manually with the given IP if you have a routed network in between or using a VPN connection.\n+\n+The binding enables CoIoT protocol by default if the device is running firmware 1.6 or newer.\n+CoIoT is based on CoAP and uses a UDP based signaling using IP Multicast (224.0.1.187, port 5683).\n+Again if the device is not on the same local IP subnet you need special router/switch configurations to utilized CoAP via IP Multicast.\n+Otherwise disable the Auto-CoIoT feature in the binding config (not the thing config), disable CoIoT events in the thing configuration and enable sensors events (http callback).\n+Nevertheless in this setup the binding can communicate the device, but you are loosing the benefits of CoIoT.\n+\n+Refer to openHAB's general documentation when running openHAB in a docker container. Enabling mDNS discovery has additional setup requirements.  \n+\n+### Re-discover when IP address has changed\n+ \n+Important: The IP address should not be changed after the device is added to openHAB.\n+\n+This can be achieved by\n+\n+- assigning a static IP address (recommended for battery powered devices) or\n+- using DHCP and setup the router to always assign the same IP address to the device\n+\n+When the IP address changes for a device you need to delete the Thing and then re-discover the device.\n+In this case channel linkage gets lost and you need to re-link the channels/items.\n+\n+## Log optimization\n+\n+The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.\n+\n+openHAB has an integrated feature to filter the event log.\n+This mechanism doesn't filter the event, but the log output (items still receive the updates).\n+\n+A configuration is added as a new section to `openhab2-userdata/etc/org.ops4j.pax.logging.cfg`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDQzNQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTM2NjAzOA==", "bodyText": "@fwolter I removed the section for now. I hadn't the time to dig into details.I'll include this in the upcoming PR", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r545366038", "createdAt": "2020-12-17T19:59:01Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users\n+\n+This section provides information for advanced use cases.\n+\n+## Additiona Resources\n+\n+There are additional resources available providing more information on Shelly devices and how to integrate those into openHAB:\n+\n+- [Shelly Homepage](https://shelly.cloud)\n+- [Shelly Support Group (English)](https://www.facebook.com/groups/ShellyIoTCommunitySupport)\n+- [Firmware Archive](http://archive.shelly-faq.de)\n+- [API Documentation](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)\n+\n+and the [openHAB Community thread specifically for the binding](https://community.openhab.org/t/shelly-binding) - any feedback welcome here.\n+You could also [report a bug or request a feature](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) for the Shelly Binding.\n+\n+## Firmware Upgrade\n+\n+The Shelly App usually displays the installed firmware and also provide the function to upgrade the device with new firmware.\n+However, if this doesn't work (sometimes there are issues) you you use the [Shelly Firmware Archi Link Generator](http://archive.shelly-faq.de), which provides download links to current, but also archived firmware files for all devices. \n+\n+|Version|Notes                                                                                             |\n+|-------|--------------------------------------------------------------------------------------------------|\n+|1.5.7  |Minimum supported version. Older versions work in general, but have impacts to functionality (e.g. no events for battery powered devices). The binding displays a WARNING in the log if the firmware is older.|\n+|1.6.x  |First stable CoIoT implementation. AutoCoIoT is enabled when firmware version >= 1.6 is detected. |\n+|1.7.x  |Add additional status update values, fixes various issues                                         |\n+|1.8.0  |Brings CoIoT version 2, which fixes a lot issues and gaps of version 1.                           |\n+|1.9.2  |Various improvements, roller favorites, CoAP fixes                                                |\n+\n+\n+There are 3 options available to perform the upgrade\n+- The Shelly App usually detects when a new version becomes available and offers to do the upgrade within the UI (Web or App)\n+- Alterco provides the [Shelly Firmware Archive Link Generator](http://archive.shelly-faq.de).\n+This can be used to generate the upgrade link, which could be easily used to perform the upgrade on the cli-level having an Internet connection on that terminal (Shelly device doesn't require an Internet acces).\n+You specify the device's IP and device model SHSW-25 and the page will generate you the link for the firmware download using the OTA of the device.\n+Then you run \"curl -s [-u user:password] &gt;generated link&gt;\" from the terminal.\n+This should show a JSON result, make sure that it shows \"status:updating\".\n+Wait 15sec and access the device's Web UI, go to Settings:Firmware Upgrade and make sure than the new version was installed successful.\n+- Manual download and installation of the firmware\n+Manually pick the download link from the [Shelly Firmware Repository](https://api.shelly.cloud/files/firmware) and get the release or beta link.\n+Once you downloaded the file you need to copy it to an http server. \n+Open the following url http://&lt;shelly ip&gt;/ota?url=http://&lt;web server&gt;/&lt;path&gt;/&lt;zip-file&gt;\n+Again, make sure that the file is downloaded and installed properly.\n+\n+## Trouble Shooting\n+\n+### Network Settings\n+\n+Shelly devices do only support IPv4. \n+This implies that the openHAB host system has IPv4 bound to the network interface.\n+The binding is only able to discover devices on the local subnet. \n+Add things manually with the given IP if you have a routed network in between or using a VPN connection.\n+\n+The binding enables CoIoT protocol by default if the device is running firmware 1.6 or newer.\n+CoIoT is based on CoAP and uses a UDP based signaling using IP Multicast (224.0.1.187, port 5683).\n+Again if the device is not on the same local IP subnet you need special router/switch configurations to utilized CoAP via IP Multicast.\n+Otherwise disable the Auto-CoIoT feature in the binding config (not the thing config), disable CoIoT events in the thing configuration and enable sensors events (http callback).\n+Nevertheless in this setup the binding can communicate the device, but you are loosing the benefits of CoIoT.\n+\n+Refer to openHAB's general documentation when running openHAB in a docker container. Enabling mDNS discovery has additional setup requirements.  \n+\n+### Re-discover when IP address has changed\n+ \n+Important: The IP address should not be changed after the device is added to openHAB.\n+\n+This can be achieved by\n+\n+- assigning a static IP address (recommended for battery powered devices) or\n+- using DHCP and setup the router to always assign the same IP address to the device\n+\n+When the IP address changes for a device you need to delete the Thing and then re-discover the device.\n+In this case channel linkage gets lost and you need to re-link the channels/items.\n+\n+## Log optimization\n+\n+The binding provides channels (e.g. heartBeat, currentWatts), which might cause a log of log output, especially when having multiple dozen Shellys.\n+\n+openHAB has an integrated feature to filter the event log.\n+This mechanism doesn't filter the event, but the log output (items still receive the updates).\n+\n+A configuration is added as a new section to `openhab2-userdata/etc/org.ops4j.pax.logging.cfg`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDQzNQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjYzMDgxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyMzo1NlrOIGitLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMzoyNVrOIG43SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDk4OA==", "bodyText": "Is this in the images directory by intention? Same for the other file.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543730988", "createdAt": "2020-12-15T22:23:56Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDAyNQ==", "bodyText": "removed, copy problem ;-)", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544094025", "createdAt": "2020-12-16T08:13:25Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/AdvancedUsers.md", "diffHunk": "@@ -0,0 +1,94 @@\n+# Advanced Users", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMDk4OA=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjYzMzE1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyNDozMlrOIGiudw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNDowNVrOIG44kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMTMxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            **How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n          \n          \n            \n            **How openHAB and Shelly 2.5 provide an enhanced experience when controlling rollers**", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543731319", "createdAt": "2020-12-15T22:24:32Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDM1Mw==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544094353", "createdAt": "2020-12-16T08:14:05Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMTMxOQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjYzNzcxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyNTo0OFrOIGixCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNTowM1rOIG46uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMTk3Nw==", "bodyText": "I think \"convince\" makes no sese here.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543731977", "createdAt": "2020-12-15T22:25:48Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NDkwNw==", "bodyText": "changed to 'comfort'", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544094907", "createdAt": "2020-12-16T08:15:03Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMTk3Nw=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY0NTg2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyNzo1MFrOIGi1jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNTo0MlrOIG48PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzEzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n          \n          \n            \n            Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you!\". Shutters not opening in the morning don't create fun :-)", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543733132", "createdAt": "2020-12-15T22:27:50Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NTI5Mw==", "bodyText": "changed ;-)", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544095293", "createdAt": "2020-12-16T08:15:42Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzEzMg=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY0Nzk2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyODozN1rOIGi2_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNjowNlrOIG49Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzUwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The implement this use case you need\n          \n          \n            \n            To implement this use case you need", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543733501", "createdAt": "2020-12-15T22:28:37Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NTU3MQ==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544095571", "createdAt": "2020-12-16T08:16:06Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzUwMQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY0OTEyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjoyODo1OFrOIGi3pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNjozM1rOIG4-YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzY3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n          \n          \n            \n            For this how-to a roller with an electrical motor is required and will be controlled using A/C and a momentary switch.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543733671", "createdAt": "2020-12-15T22:28:58Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NTg0MA==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544095840", "createdAt": "2020-12-16T08:16:33Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczMzY3MQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY1NzY1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjozMTozNlrOIGi8wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNzozMVrOIG5Aug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNDk3Nw==", "bodyText": "I don't like these schoolmaster statements, but that's only a personal thing ;)", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543734977", "createdAt": "2020-12-15T22:31:36Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NjQ0Mg==", "bodyText": "Me too, but it's kind of a disclaimer. I don't want to get feedback \"I got an electrical shock by following your instructions\"", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544096442", "createdAt": "2020-12-16T08:17:31Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNDk3Nw=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY2NjAxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjozMzo1OFrOIGjBpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNzo0OVrOIG5Bkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNjIzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            See bindings [README](../README.md) for more information how to upgrade the firmware.\n          \n          \n            \n            See binding's [README](../README.md) for more information how to upgrade the firmware.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543736230", "createdAt": "2020-12-15T22:33:58Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NjY1OQ==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544096659", "createdAt": "2020-12-16T08:17:49Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNjIzMA=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY2OTczOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjozNDo1OFrOIGjDww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxODoyMFrOIG5C3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNjc3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            There are some settings required to prepare you Shelly for this use case.\n          \n          \n            \n            There are some settings required to prepare your Shelly for this use case.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543736771", "createdAt": "2020-12-15T22:34:58Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5Njk4OA==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544096988", "createdAt": "2020-12-16T08:18:20Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNjc3MQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY3NDc4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjozNjozNFrOIGjGzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoyMjo1OFrOIG5OJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNzU1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n          \n          \n            \n            Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g. 250W - value depend on your roller motor).", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543737550", "createdAt": "2020-12-15T22:36:34Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5OTg3Ng==", "bodyText": "changed", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544099876", "createdAt": "2020-12-16T08:22:58Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczNzU1MA=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY4MDExOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjozODowMVrOIGjJvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoyMzo1NVrOIG5QSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczODMwMw==", "bodyText": "Can you express this more abstract, as PaperUI will be removed in OH3?", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543738303", "createdAt": "2020-12-15T22:38:01Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwMDQyNg==", "bodyText": "changed to \"Open the Binding Configuration in the openHAB UI\"", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544100426", "createdAt": "2020-12-16T08:23:55Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczODMwMw=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY4NjEwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjozOTo0OFrOIGjNLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxOToxMFrOIG5EuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczOTE4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Refer to the [README](README.md) for more information on CoIoT.\n          \n          \n            \n            Refer to the [README](../README.md) for more information on CoIoT.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543739182", "createdAt": "2020-12-15T22:39:48Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 178}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NzQ2NQ==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544097465", "createdAt": "2020-12-16T08:19:10Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczOTE4Mg=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY4OTk4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0MDo1M1rOIGjPaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoyNDoxNVrOIG5RNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczOTc1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n          \n          \n            \n            - you might set a auto-timer, e.g. once the roller is opened, close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543739753", "createdAt": "2020-12-15T22:40:53Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwMDY2MQ==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544100661", "createdAt": "2020-12-16T08:24:15Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzczOTc1Mw=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY5MTY5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0MToyNlrOIGjQeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoyNDo0M1rOIG5Seg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MDAyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n          \n          \n            \n            Please note that the device only provides updates after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543740025", "createdAt": "2020-12-15T22:41:26Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwMDk4Ng==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544100986", "createdAt": "2020-12-16T08:24:43Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MDAyNQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 190}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY5MzUxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0MTo1MlrOIGjRaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoyNToxNFrOIG5T2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MDI2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device\n          \n          \n            \n            - of course you could use time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543740267", "createdAt": "2020-12-15T22:41:52Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n+- of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwMTMzNw==", "bodyText": "ok", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544101337", "createdAt": "2020-12-16T08:25:14Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n+- of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MDI2Nw=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjY5ODk5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0MzozM1rOIGjUlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoyMjoxOFrOIG5Meg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MTA3OA==", "bodyText": ":)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - 2xshort: go to 25% (because disturbs enjoying your morning coffee with your wife)\n          \n          \n            \n            - 2xshort: go to 25% (because disturbs enjoying your morning coffee with your wife or husband)", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543741078", "createdAt": "2020-12-15T22:43:33Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n+- of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device\n+\n+## Extending the Use Case\n+\n+There are two valuable options, which even extend and improve the user experience.\n+\n+- Button-1\n+\n+Using the described setup you could add a Button-1 to trigger rules, e.g.\n+- 1xshort: open roller\n+- 2xshort: go to 25% (because disturbs enjoying your morning coffee with your wife)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5OTQ1MA==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544099450", "createdAt": "2020-12-16T08:22:18Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n+- of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device\n+\n+## Extending the Use Case\n+\n+There are two valuable options, which even extend and improve the user experience.\n+\n+- Button-1\n+\n+Using the described setup you could add a Button-1 to trigger rules, e.g.\n+- 1xshort: open roller\n+- 2xshort: go to 25% (because disturbs enjoying your morning coffee with your wife)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MTA3OA=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjcwMTMxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0NDoxN1rOIGjV2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoyMTozM1rOIG5KZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MTQwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            And of course you could utilize openHAB's voice integration, e.g. with Alexa, Siri or Google Home (who need's Cortana).\n          \n          \n            \n            And of course you could utilize openHAB's voice integration, e.g. with Alexa, Siri or Google Home (who needs Cortana).", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543741401", "createdAt": "2020-12-15T22:44:17Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n+- of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device\n+\n+## Extending the Use Case\n+\n+There are two valuable options, which even extend and improve the user experience.\n+\n+- Button-1\n+\n+Using the described setup you could add a Button-1 to trigger rules, e.g.\n+- 1xshort: open roller\n+- 2xshort: go to 25% (because disturbs enjoying your morning coffee with your wife)\n+- 3xshort: go to 75% (sun is disturbing while watching your TV)\n+- long   : close shutter (if not done by some automation)\n+\n+- Voice control\n+And of course you could utilize openHAB's voice integration, e.g. with Alexa, Siri or Google Home (who need's Cortana).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5ODkxOA==", "bodyText": "removed the statement", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544098918", "createdAt": "2020-12-16T08:21:33Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n+- of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device\n+\n+## Extending the Use Case\n+\n+There are two valuable options, which even extend and improve the user experience.\n+\n+- Button-1\n+\n+Using the described setup you could add a Button-1 to trigger rules, e.g.\n+- 1xshort: open roller\n+- 2xshort: go to 25% (because disturbs enjoying your morning coffee with your wife)\n+- 3xshort: go to 75% (sun is disturbing while watching your TV)\n+- long   : close shutter (if not done by some automation)\n+\n+- Voice control\n+And of course you could utilize openHAB's voice integration, e.g. with Alexa, Siri or Google Home (who need's Cortana).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MTQwMQ=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 206}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNjcwNTQ3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMjo0NToyNFrOIGjYLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoyNjo0NVrOIG5XfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MTk5OA==", "bodyText": "Can you put each in a separate line?", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r543741998", "createdAt": "2020-12-15T22:45:24Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n+- of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device\n+\n+## Extending the Use Case\n+\n+There are two valuable options, which even extend and improve the user experience.\n+\n+- Button-1\n+\n+Using the described setup you could add a Button-1 to trigger rules, e.g.\n+- 1xshort: open roller\n+- 2xshort: go to 25% (because disturbs enjoying your morning coffee with your wife)\n+- 3xshort: go to 75% (sun is disturbing while watching your TV)\n+- long   : close shutter (if not done by some automation)\n+\n+- Voice control\n+And of course you could utilize openHAB's voice integration, e.g. with Alexa, Siri or Google Home (who need's Cortana).\n+\n+- Scenes\n+There are more of less limits when integrating even more advanced roller control based on openHAB rules. \n+This allows to provide a scene to the user, which does a lot of complex stuff under the hood.\n+\n+Be welcome to contribute your ideas to the community, this is what creates the difference between openHAB/Shelly setup compared to rollers with button control.\n+\n+### Resources\n+\n+There is a bunch of ressources you could browse around openHAB, Shelly or the binding\n+- Current builds of the binding:\n+Latest **DEV** build: [2.5.11](https://github.com/markus7017/myfiles/blob/master/shelly/org.openhab.binding.shelly-2.5.11-SNAPSHOT.jar?raw=true) - [3.0.0](https://github.com/markus7017/myfiles/blob/master/shelly/org.openhab.binding.shelly-3.0.0-SNAPSHOT.jar?raw=true) - [README](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) - \u00a0[Installation](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md) - [Bugs/Features](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) - [Firmware Index](https://repo.shelly.cloud/files/firmware/?fbclid=IwAR0Kz6bjMGoq_HYU85QAdl8b-xh7E3IPa4ENKjqsvmMAYQ6QGC8ODvqPzUs) - [Firmware Archive](http://archive.shelly-faq.de) - [API Doc](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwMjI2OA==", "bodyText": "changed, I removed all links to my personal repo", "url": "https://github.com/openhab/openhab-addons/pull/9390#discussion_r544102268", "createdAt": "2020-12-16T08:26:45Z", "author": {"login": "markus7017"}, "path": "bundles/org.openhab.binding.shelly/doc/images/UseCaseSmartRoller.md", "diffHunk": "@@ -0,0 +1,225 @@\n+# Smartify Roller Shutters with openHAB and Shelly\n+\n+![](https://shelly.cloud/wp-content/uploads/2020/03/know_base.png)\n+\n+**How openHAB andShelly 2.5 provide an enhance experience when controlling rollers**\n+\n+## Use Case\n+\n+![](images/oh_image1.png)   ![](images/oh_image2.png)   ![](https://shelly.cloud/wp-content/uploads/2020/06/shelly25.jpg)\n+\n+More and more people have rollers, which are equipped with a motor and button control improving your convince when operating the shutter.\n+\n+This use case description covers the following aspects\n+- Operate the roller manual as usual - don't loose some of those features when bringing in the Shelly\n+- Use openHAB to control the roller (up/down/stop, positioning)\n+- Utilize device's position favorites\n+- Utilize safety features, which you get for free with the Shelly\n+\n+The first point is important: SmartHome is nice for us techies, but standard users should have to use the \"standard mode\", but also the \"new world\".\n+Therefore a struct requirement: make if \"compatible for my wife\" and avoid \"that sucks, I kill you\"\". Shutters not opening in the morning don't create fun :-)\n+\n+One more aspect is some kind of protection to avoid physical damage when something gets wrong. The Shellies provide some interesting features to do.\n+\n+This use case description might also apply to Venetian Blinds, but I don't have those and can't judge on that.\n+Feel free to adapt the concept and report ideas and experiences to the [community](https://community.openhab.org/t/shelly-binding/56862/1702?u=markus7017) \n+\n+## Technical pre-requisites\n+\n+The implement this use case you need\n+- Roller motor can be attached to the Shelly\n+For this how-to a roller with an electrical motor is required and will be control using A/C and a momentary switch.\n+The same solutions works with other switch types (DC/AC, 2 button switch etc.).\n+In this case you need to look into details and user a different Shelly configuration or adapt technical installation.\n+Refer to the Alterco Shelly documentation and make sure to use proper technical installation and wiring.\n+Important: Electrical installation should be performed only be people knowing what they do - failures could harm you!!\n+\n+- Shelly 2.5 to control the roller with firmware 1.9.2+\n+The Shelly 2.5 supports relay and roller operation mode.\n+To prepare this use case you need to upgrade to firmware 1.9.2 (or newer) and perform some setup steps (see below).\n+\n+- openHAB 3.0 (or 2.5) with latest version of the binding\n+openHAB is the perfect foundation to combine manual and automated control of the roller.\n+The Shelly binding is available for openHAB 3.0, but still supports version 2.5 (you should at least have 2.5.9).\n+Nevertheless you need to switch to the so called DEV build to benefit from bug fixes and improvements.\n+**This version is currently NOT part of the openHAB 3.0 distribution, a PR has been initiated\n+and it will not become part of the 2.5.x distribution, because this only receives bug fixes and the use case utilizes new features in the binding.**\n+\n+## Implementation\n+\n+### Software pre-requisites\n+\n+#### openHAB version\n+\n+It's strongly recommended to get on one of the pretty stable openHAB releases\n+- The good one: openHAB 2.5.9 or newer\n+- The new kid on the block: 3.0 will be release by end of 2020\n+- Older versions might worked, but are not covered here.\n+\n+Refer to the documentation how to upgrade to the current version and where you should watch for necessary adaptions.\n+By the way: There is a good README for the binding, RTFM if you know what I mean :-)\n+Latest version is always available [here](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) as part of the DEV build (see below).\n+\n+Ideally the upgrade could be performed on a Raspberry with\n+```\n+openhab-cli stop\n+openhab-clu clean-cache\n+apt-get update\n+apt-get upgrade\n+openhab-cli start\n+```\n+\n+and wait until openHAB has fully initialized and cache has been re-initialized.\n+That's it - pretty simple, but again you might need to do adaptions.\n+\n+#### Device firmware\n+\n+The binding supports Shelly devices for a long time, also with older firmware releases (beginning with version 1.7).\n+Nevertheless, a lot of issues has been fixed in between as well as new features became available over time.\n+It's recommended to upgrade your roller device to 1.9.2 or newer.\n+1.9 brings roller position favorites, which are used by this use case (older version works, but you can't use that feature).\n+\n+See bindings [README](../README.md) for more information how to upgrade the firmware.\n+\n+#### Shelly Binding\n+\n+The Shelly binding is in general included in the openHAB 2.5.x as well as the new 3.0 distribution.\n+However, the so called DEV build is always on a newer feature level and fixing bugs.\n+Due to the fact that we utilize some new features of the binding it also requires the DEV build.\n+Refer to the information how to install the DEV build (check section Resources to get the info where to find this [READMEbeta](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md))\n+\n+Important:\n+After installing the new binding release you should delete all Shelly things and run the discovery.\n+No worries, openHAB will restore you channel/item linkings.\n+\n+## Configuration\n+\n+### Shelly setup - General\n+\n+![](images/uiroller_1.png)   ![](images/uiroller_2.png)   ![](images/uiroller_3.png)   ![](images/uiroller_4.png)   \n+\n+There are some settings required to prepare you Shelly for this use case.\n+- Open the Web UI simply by launching 'http://&lt;shelly ip&gt; in the browser, this opens the device's UI\n+- Go to Settings:DEVICE TYPE and select Roller-Shutter\n+- POWER ON PARAMETERS: \"STOP\" will make sure that the roller doesn't start moving on a power failure recovery\n+- INPUT BUTTONS MODE: This depend on your installed button, if you only have a single one use \"One button\", if you have 2 buttons or one with 2 positions select \"One button\"\n+- POSITIONING CONTROLS: Enable them to have the controls in the App (UP/STOP/DOWN + relative positions), this helps during installation\n+\n+\n+For safety reasons you might consider:\n+- OPEN/CLOSE WORKING TIME\n+This feature makes sure that the Shelly stops the motor after a certain time even the motor doesn't stop by itself. \n+Start the roller, measure the number of seconds until the shutter stops.\n+Maybe add 2-3 seconds for safe and set the values for both directions in the UI\n+\n+![](images/uiroller_wt.png)\n+\n+- OBSTACLE DETECTION under Safety in the Web UI\n+Shelly 2.5 has an integrated detection on roller obstacles based on measuring the motor power.\n+The detection needs to be enabled, \"While Moving\" cover open and close.\n+Action Stop makes most sense, you should manually verify the problem.\n+\n+![](images/uiroller_obs1.png)   ![](images/uiroller_obs2.png)      ![](images/uiroller_obs3.png)\n+\n+and there are some more options:\n+- MAX POWER PROTECTION\n+A roller should never consume high power - in this case you could assume an electrical problem.\n+Therefore you could configure the Shelly to turn off power when exceeding a certain limit (e.g.250W - value depend on your roller motor).\n+\n+- SWAP INPUTS and REVERSE DIRECTIONS - you could flip operation mode for open/close, this could help in non-standard operations, but could also indicate a wiring problen\n+It also makes sense to give the device a name. Go to Settings:DEVICE NAME and select a symbolic name.\n+This name will also discovered by the binding and added as a suffix to the thing name in the Inbox.\n+It simplifies to identify the roller when you have a ton of Shelly things (believe me).\n+\n+### Shelly setup - Positioning Favorites\n+\n+With version 1.9 Alterco introduced an interesting feature called Favorites.\n+Those allow to store up to 4 pre-defined positions in the device, e.g. 15%, 50%, 65%, 98%.\n+Once defined you have kind of a short-cut to bring the roller to that position and those favorites are also supported by the binding (see below).\n+\n+![](images/uiroller_fav1.png)   ![](images/uiroller_fav2.png)\n+   \n+To use this feature open the device's Web UI and click on Favorites(+) button.\n+You could now specify 4 percentage values between 0% (closed) and 100% (open).\n+Enter the values and try using the button line above the roller control and main UI buttons.\n+\n+With this configuration your Shelly is ready to be integrated into openHAB.\n+\n+### Binding/Thing configuration\n+\n+Once the Shelly is configured you could start the discovery within openHAB.\n+Important: If you want to password protect your Shellys (strong recommendation) you could set a default user/password in the binding settings and avoid to specify those per thing:\n+- Open PaperUI:Configuration:Binding\n+- Set User Id and Password, save\n+- Remove all Shellys from the Inbox (if any)\n+- and restart the Discovery\n+\n+![](images/uiroller_rlogin.png) \n+\n+Now all Shellys should pop up with the correct device names and types.\n+The binding also adds some information to the Thing Name making the identification easier.\n+\n+Once you added the device from the Inbox the binding will initialize the device and dynamically create channels depending on the available device/firmware features.\n+This takes about 5-10 seconds.\n+During that time the thing is working, but you might miss channels in the UI - that's normal, try to reload the page after 10sec and boom all there.\n+Go to the channel overview and links the channels you want to use, refer to the README to get more details on channels, type and values.\n+\n+The only thing to configure are the positioning favorite ids for the roller UP and DOWN commands.\n+Edit the thing configuration and select the ids in the corresponding entry fields.\n+Value 0 means: no favorite, value 1-4 select the position as defined in the Shelly App.\n+There is also a dedicated channel (roller#rollerFav), which accepts this ids and triggers the roller moving to the position (% value) as defined for the matching favorites id.\n+\n+### Device events\n+\n+As you might know the binding supports the Alterco Shelly CoIoT protocol. \n+The device supports so called I/O URL Actions, which are kind of a callback to an application for certain events.\n+Whenever possible you should prefer CoIoT events, because they are triggered near realtime and provide way more information compared to the Action URLs.\n+The binding uses those CoIoT updates as triggers, but also to update the channel data.\n+Refer to the [README](README.md) for more information on CoIoT.\n+\n+### Automation\n+\n+Beside manual operation the binding provide various options to control the roller from within openHAB rules.\n+For example\n+- link channel roller#control and use 'sendCommand(&lt;item&gt;, UP)' to open the shutter or 'sendCommand(&lt;item&gt;, DOWN)' to close it.\n+- get status updates from roller operations by observing channel 'roller#state' and 'roller#stopReason', those report an updated status once the operation is completed\n+- select a position by sending a number value of 100..0 to channel 'roller#rollerpos'\n+- or use the defined favorites by sending favorite id to channel 'roller#rollerFav'\n+- you might set a auto-timer, e.g. one the roller is opened close it again after xx minutes by sending a value to the 'roller#autoOn' or 'roller#autoOff' channels\n+- you could also get the position of the roller from 'roller#control' (by linking a Number item) or the last status from 'roller#state'.\n+Please note that the device only provides update after the roller stops, not during movement so it's not possible to get position updates while the roller is moving.\n+- of course you could time-triggered rules, trigger the shutter depending on sunrise/sunset within openHAB, but also directly on the device\n+\n+## Extending the Use Case\n+\n+There are two valuable options, which even extend and improve the user experience.\n+\n+- Button-1\n+\n+Using the described setup you could add a Button-1 to trigger rules, e.g.\n+- 1xshort: open roller\n+- 2xshort: go to 25% (because disturbs enjoying your morning coffee with your wife)\n+- 3xshort: go to 75% (sun is disturbing while watching your TV)\n+- long   : close shutter (if not done by some automation)\n+\n+- Voice control\n+And of course you could utilize openHAB's voice integration, e.g. with Alexa, Siri or Google Home (who need's Cortana).\n+\n+- Scenes\n+There are more of less limits when integrating even more advanced roller control based on openHAB rules. \n+This allows to provide a scene to the user, which does a lot of complex stuff under the hood.\n+\n+Be welcome to contribute your ideas to the community, this is what creates the difference between openHAB/Shelly setup compared to rollers with button control.\n+\n+### Resources\n+\n+There is a bunch of ressources you could browse around openHAB, Shelly or the binding\n+- Current builds of the binding:\n+Latest **DEV** build: [2.5.11](https://github.com/markus7017/myfiles/blob/master/shelly/org.openhab.binding.shelly-2.5.11-SNAPSHOT.jar?raw=true) - [3.0.0](https://github.com/markus7017/myfiles/blob/master/shelly/org.openhab.binding.shelly-3.0.0-SNAPSHOT.jar?raw=true) - [README](https://github.com/markus7017/myfiles/blob/master/shelly/README.md) - \u00a0[Installation](https://github.com/markus7017/myfiles/blob/master/shelly/READMEbeta.md) - [Bugs/Features](https://github.com/openhab/openhab-addons/issues?q=is%3Aissue+is%3Aopen+%5Bshelly%5D) - [Firmware Index](https://repo.shelly.cloud/files/firmware/?fbclid=IwAR0Kz6bjMGoq_HYU85QAdl8b-xh7E3IPa4ENKjqsvmMAYQ6QGC8ODvqPzUs) - [Firmware Archive](http://archive.shelly-faq.de) - [API Doc](https://shelly-api-docs.shelly.cloud/?fbclid=IwAR23ukCi_3aBSTPRHYUIcpr0pLi0vcyL0fF0PnJQdFvkkc8_Zo5LkAcli_A#http-server)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc0MTk5OA=="}, "originalCommit": {"oid": "4c83297aa5b57998f604d320214add2ac0df237a"}, "originalPosition": 218}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3692, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}