{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NjQyMTY3", "number": 8865, "title": "[modbus] Modbus register array backed by bytes and other simplifications", "bodyText": "(this is equivalent to #8862 but against main branch)\nInspired by #8172 I reworked the modbus transport to use direct byte arrays to represent the data.\nThis is purely refactoring with the aim of reducing boilerplate byte manipulation/copying code in bindings. With the changes we do get boosted performance: with 45000 invocations to extractStateFromRegisters with varying inputs, the self time is dropped to 55% of original, total time to 80%. Naturally these type of performance gains are dwarfed by network I/O and other real time overheads.\nThis has many benefits:\n\nUnnecessary boxing / unboxing of ModbusRegister objects is removed all-together and one can operate directly with familiar byte[] using bitwise operations\nSome modbus bindings constructed byte[] from ModbusRegister[] (essentially array of 16-bit data blocks, registers).\n\nIn addition I brought in more general methods to work with the data:\n\nMethods such as extractXX, e.g. extractSInt8 (extract 8-bit signed integer) working directly with byte[] data. Return type is directly smallest suitable java primitive such as byte, short etc.\nValueBuffer interface that acts similar to java's ByteBuffer but having specialized methods to extract different types of value types that are encountered with modbus\n\nFinally, simplifications & harmonization was made to how registers are converted to to numbers, and how commands are converted to bytes. I find the new conversion logic more readable.\nThe PR is splitted in two parts:\n\nchanges in transport API. Mainly backwards compatible. Only exception is extractStringFromXX which now returns String, not StringType\nUpdates and simplifications to individual bindings. Tests are added, if missing, to have regression tests for data type conversions\n\nCC code owners to review at least the changes in the relevant binding\n/bundles/org.openhab.binding.modbus.e3dc/ @weymann\n/bundles/org.openhab.binding.modbus.helioseasycontrols/ @bern77\n/bundles/org.openhab.binding.modbus.stiebeleltron/ @pail23\n/bundles/org.openhab.binding.modbus.studer/ @giovannimirulla\n/bundles/org.openhab.binding.modbus.sunspec/ @mrbig\nWould be great if you could test with real devices as well", "createdAt": "2020-10-25T18:53:36Z", "url": "https://github.com/openhab/openhab-addons/pull/8865", "merged": true, "mergeCommit": {"oid": "b806ed45d0e4ffb25809a06caf35def404a2391e"}, "closed": true, "closedAt": "2020-11-26T17:07:51Z", "author": {"login": "ssalonen"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWEcmtAFqTUxNjM4NzMxOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgWGIMgFqTUzOTQ3MDg5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3MzE5", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387319", "createdAt": "2020-10-25T18:54:26Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NDoyNlrOHn7snA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NDoyNlrOHn7snA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNDU4OA==", "bodyText": "fix", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511634588", "createdAt": "2020-10-25T18:54:26Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus/pom.xml", "diffHunk": "@@ -7,7 +7,7 @@\n   <parent>\n     <groupId>org.openhab.addons.bundles</groupId>\n     <artifactId>org.openhab.addons.reactor.bundles</artifactId>\n-    <version>3.0.0-SNAPSHOT</version>\n+    <version>2.5.10-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3MzM4", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387338", "createdAt": "2020-10-25T18:54:40Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NDo0MFrOHn7ssw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NDo0MFrOHn7ssw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNDYxMQ==", "bodyText": "fix", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511634611", "createdAt": "2020-10-25T18:54:40Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/discovery/internal/ModbusDiscoveryService.java", "diffHunk": "@@ -44,7 +44,7 @@\n  * @author Nagy Attila Gabor - initial contribution\n  *\n  */\n-@Component(service = DiscoveryService.class, configurationPid = \"discovery.modbus\")\n+@Component(immediate = true, service = DiscoveryService.class, configurationPid = \"discovery.modbus\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3Mzcw", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387370", "createdAt": "2020-10-25T18:55:02Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NTowM1rOHn7s4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NTowM1rOHn7s4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNDY1OQ==", "bodyText": "fix", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511634659", "createdAt": "2020-10-25T18:55:03Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/pom.xml", "diffHunk": "@@ -7,7 +7,7 @@\n   <parent>\n     <groupId>org.openhab.addons.bundles</groupId>\n     <artifactId>org.openhab.addons.reactor.bundles</artifactId>\n-    <version>3.0.0-SNAPSHOT</version>\n+    <version>2.5.10-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3NDUw", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387450", "createdAt": "2020-10-25T18:56:10Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NjoxMFrOHn7tZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NjoxMFrOHn7tZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNDc4OQ==", "bodyText": "revert changed annotations", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511634789", "createdAt": "2020-10-25T18:56:10Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/BitUtilitiesCommandToRegistersTest.java", "diffHunk": "@@ -307,24 +325,22 @@\n     }\n \n     @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n-    @ParameterizedTest\n-    @MethodSource(\"data\")\n-    public void testCommandToRegisters(Command command, ValueType type, Object expectedResult) {\n+    @Test\n+    public void testCommandToRegisters() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3NDYy", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387462", "createdAt": "2020-10-25T18:56:16Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NjoxNlrOHn7tcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1NjoxNlrOHn7tcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNDgwMg==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511634802", "createdAt": "2020-10-25T18:56:16Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/BitUtilitiesCommandToRegistersTest.java", "diffHunk": "@@ -47,6 +64,7 @@\n         return shorts;\n     }\n \n+    @Parameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3NDkz", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387493", "createdAt": "2020-10-25T18:56:44Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1Njo0NVrOHn7toQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1Njo0NVrOHn7toQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNDg0OQ==", "bodyText": "follow example set in other tests, removing this", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511634849", "createdAt": "2020-10-25T18:56:45Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/BitUtilitiesExtractIndividualMethodsTest.java", "diffHunk": "@@ -0,0 +1,253 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.io.transport.modbus.test;\n+\n+import static org.junit.Assert.*;\n+import static org.junit.Assume.assumeTrue;\n+\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import java.util.stream.Stream.Builder;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.openhab.core.library.types.DecimalType;\n+import org.openhab.io.transport.modbus.ModbusBitUtilities;\n+import org.openhab.io.transport.modbus.ModbusConstants.ValueType;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+\n+/**\n+ * @author Sami Salonen - Initial contribution\n+ */\n+@RunWith(Parameterized.class)\n+public class BitUtilitiesExtractIndividualMethodsTest {\n+\n+    final byte[] bytes;\n+    final ValueType type;\n+    final int byteIndex;\n+    final Object expectedResult;\n+\n+    @Rule\n+    public final ExpectedException shouldThrow = ExpectedException.none();\n+\n+    public BitUtilitiesExtractIndividualMethodsTest(Object expectedResult, ValueType type, byte[] bytes,\n+            int byteIndex) {\n+        this.expectedResult = expectedResult; // Exception or DecimalType\n+        this.type = type;\n+        this.bytes = bytes;\n+        this.byteIndex = byteIndex;\n+    }\n+\n+    @Parameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3NzI0", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387724", "createdAt": "2020-10-25T18:59:35Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1OTozNlrOHn7uww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1OTozNlrOHn7uww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTEzOQ==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635139", "createdAt": "2020-10-25T18:59:36Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/IntegrationTestSupport.java", "diffHunk": "@@ -118,9 +113,14 @@\n \n     private static AtomicCounter udpServerIndex = new AtomicCounter(0);\n \n-    protected @Spy TCPSlaveConnectionFactory tcpConnectionFactory = new TCPSlaveConnectionFactoryImpl();\n-    protected @Spy UDPSlaveTerminalFactory udpTerminalFactory = new UDPSlaveTerminalFactoryImpl();\n-    protected @Spy SerialConnectionFactory serialConnectionFactory = new SerialConnectionFactoryImpl();\n+    @Spy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3NzMx", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387731", "createdAt": "2020-10-25T18:59:39Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1OTozOVrOHn7uyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1OTozOVrOHn7uyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTE0Ng==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635146", "createdAt": "2020-10-25T18:59:39Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/IntegrationTestSupport.java", "diffHunk": "@@ -65,8 +62,6 @@\n /**\n  * @author Sami Salonen - Initial contribution\n  */\n-@ExtendWith(MockitoExtension.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3NzM5", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387739", "createdAt": "2020-10-25T18:59:50Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1OTo1MFrOHn7u3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxODo1OTo1MFrOHn7u3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTE2Nw==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635167", "createdAt": "2020-10-25T18:59:50Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/IntegrationTestSupport.java", "diffHunk": "@@ -146,7 +146,7 @@ protected static InetAddress localAddress() throws UnknownHostException {\n         return InetAddress.getByName(\"127.0.0.1\");\n     }\n \n-    @BeforeEach\n+    @Before", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3NzY5", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387769", "createdAt": "2020-10-25T19:00:16Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDoxNlrOHn7vDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDoxNlrOHn7vDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTIxMg==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635212", "createdAt": "2020-10-25T19:00:16Z", "author": {"login": "ssalonen"}, "path": "itests/org.openhab.binding.modbus.tests/src/main/java/org/openhab/binding/modbus/tests/ModbusDataHandlerTest.java", "diffHunk": "@@ -88,6 +88,7 @@\n /**\n  * @author Sami Salonen - Initial contribution\n  */\n+@RunWith(MockitoJUnitRunner.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3Nzg3", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387787", "createdAt": "2020-10-25T19:00:27Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDoyN1rOHn7vIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDoyN1rOHn7vIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTIzNQ==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635235", "createdAt": "2020-10-25T19:00:27Z", "author": {"login": "ssalonen"}, "path": "itests/org.openhab.binding.modbus.tests/src/main/java/org/openhab/binding/modbus/tests/ModbusDataHandlerTest.java", "diffHunk": "@@ -113,7 +114,7 @@ public String transform(String function, String source) throws TransformationExc\n     }\n     private List<ModbusWriteRequestBlueprint> writeRequests = new ArrayList<>();\n \n-    @AfterEach", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3ODEz", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387813", "createdAt": "2020-10-25T19:00:44Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDo0NFrOHn7vQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDo0NFrOHn7vQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTI2NQ==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635265", "createdAt": "2020-10-25T19:00:44Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/WriteRequestJsonUtilitiesTest.java", "diffHunk": "@@ -84,22 +83,22 @@ public void testFC6SingleRegisterMaxTries99() {\n                         (Matcher) new RegisterMatcher(55, 5412, 99, ModbusWriteFunctionCode.WRITE_SINGLE_REGISTER, 3)));\n     }\n \n-    @Test\n+    @Test(expected = IllegalArgumentException.class)\n     public void testFC6MultipleRegisters() {\n-        assertThrows(IllegalArgumentException.class, () -> WriteRequestJsonUtilities.fromJson(55, \"[{\"//\n+        WriteRequestJsonUtilities.fromJson(55, \"[{\"//\n                 + \"\\\"functionCode\\\": 6,\"//\n                 + \"\\\"address\\\": 5412,\"//\n                 + \"\\\"value\\\": [3, 4]\"//\n-                + \"}]\"));\n+                + \"}]\");\n     }\n \n-    @Test\n+    @Test(expected = IllegalArgumentException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3ODE2", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387816", "createdAt": "2020-10-25T19:00:46Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDo0NlrOHn7vRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDo0NlrOHn7vRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTI3MA==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635270", "createdAt": "2020-10-25T19:00:46Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/WriteRequestJsonUtilitiesTest.java", "diffHunk": "@@ -84,22 +83,22 @@ public void testFC6SingleRegisterMaxTries99() {\n                         (Matcher) new RegisterMatcher(55, 5412, 99, ModbusWriteFunctionCode.WRITE_SINGLE_REGISTER, 3)));\n     }\n \n-    @Test\n+    @Test(expected = IllegalArgumentException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3ODI1", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387825", "createdAt": "2020-10-25T19:00:52Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDo1MlrOHn7vWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDo1MlrOHn7vWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTI5MQ==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635291", "createdAt": "2020-10-25T19:00:52Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/WriteRequestJsonUtilitiesTest.java", "diffHunk": "@@ -50,13 +49,13 @@ public void testEmptyArray() {\n         assertThat(WriteRequestJsonUtilities.fromJson(3, \"[]\").size(), is(equalTo(0)));\n     }\n \n-    @Test\n+    @Test(expected = IllegalArgumentException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3ODMz", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387833", "createdAt": "2020-10-25T19:00:58Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDo1OFrOHn7vZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMDo1OFrOHn7vZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTMwMQ==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635301", "createdAt": "2020-10-25T19:00:58Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/WriteRequestJsonUtilitiesTest.java", "diffHunk": "@@ -25,7 +24,7 @@\n \n import org.eclipse.jdt.annotation.NonNull;\n import org.hamcrest.Matcher;\n-import org.junit.jupiter.api.Test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mzg3ODQz", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516387843", "createdAt": "2020-10-25T19:01:05Z", "commit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMTowNVrOHn7vbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxOTowMTowNVrOHn7vbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYzNTMxMQ==", "bodyText": "revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511635311", "createdAt": "2020-10-25T19:01:05Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.io.transport.modbus/src/test/java/org/openhab/io/transport/modbus/test/WriteRequestJsonUtilitiesTest.java", "diffHunk": "@@ -13,9 +13,8 @@\n package org.openhab.io.transport.modbus.test;\n \n import static org.hamcrest.CoreMatchers.*;\n-import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.collection.ArrayMatching.arrayContaining;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "376f2a499fa3ebe72d74cb5cb3ab26c66e54f0d1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzkzNDEy", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-516393412", "createdAt": "2020-10-25T20:16:25Z", "commit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQyMDoxNjoyNVrOHn8OKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQyMDoxOTowM1rOHn8PGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0MzE3Nw==", "bodyText": "Revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511643177", "createdAt": "2020-10-25T20:16:25Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/README.md", "diffHunk": "@@ -283,58 +283,46 @@ The binding provides the following properties:\n \n ```\n Bridge modbus:tcp:modbus-gateway \"Modbus TCP/IP Gateway\" [ host=\"192.168.47.11\", port=502, id=180, enableDiscovery=true ] {\n-    Thing helios-easycontrols kwl \"KWL\"\n+    Thing helios-ventilation-easycontrols kwl \"KWL\"\n }\n ```\n \n ### Item Configuration\n \n ```\n // Manual operation\n-Number KWL_Manual                        \"Manual operation\"                          <fan>         (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#operatingMode\"}\n-Number KWL_Stage                         \"KWL fan stage\"                             <fan>         (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#fanStage\"}\n-Number:Dimensionless KWL_Stage_Percent   \"KWL fan stage [%d %unit%]\"                 <fan>         (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#percentageFanStage\"}\n+Number KWL_Manual                        \"Manual operation\"                          <fan>         (gKWL) {channel=\"modbus:helios-ventilation-easycontrols:modbus-gateway:kwl:operation#operatingMode\"}\n+Number KWL_Stage                         \"KWL fan stage\"                             <fan>         (gKWL) {channel=\"modbus:helios-ventilation-easycontrols:modbus-gateway:kwl:operation#fanStage\"}\n+Number:Dimensionless KWL_Stage_Percent   \"KWL fan stage [%d %unit%]\"                 <fan>         (gKWL) {channel=\"modbus:helios-ventilation-easycontrols:modbus-gateway:kwl:operation#percentageFanStage\"}\n \n // Party mode\n-Switch KWL_Party_Mode                    \"Party mode\"                                <parents>     (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#partyModeStatus\"}\n-Number KWL_Party_Mode_Duration           \"Party mode duration\"                       <clock>       (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#partyModeDuration\"}\n-Number KWL_Party_Mode_Stage              \"Party mode fan stage\"                      <fan>         (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#partyModeFanStage\"}\n+Switch KWL_Party_Mode                    \"Party mode\"                                <parents>     (gKWL) {channel=\"modbus:helios-ventilation-easycontrols:modbus-gateway:kwl:operation#partyModeStatus\"}\n+Number KWL_Party_Mode_Duration           \"Party mode duration\"                       <clock>       (gKWL) {channel=\"modbus:helios-ventilation-easycontrols:modbus-gateway:kwl:operation#partyModeDuration\"}\n+Number KWL_Party_Mode_Stage              \"Party mode fan stage\"                      <fan>         (gKWL) {channel=\"modbus:helios-ventilation-easycontrols:modbus-gateway:kwl:operation#partyModeFanStage\"}\n Number KWL_Party_Mode_Remaining          \"Party mode remaining time [%d min]\"        <clock>       (gKWL) {channel=\"modbus:helios-ventilation-easycontrols:modbus-gateway:kwl:operation#partyModeRemainingTime\"}\n \n // Standby mode\n-Switch KWL_Standby_Mode                  \"Standby mode\"                              <fan_off>     (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#standbyModeStatus\"}\n-Number KWL_Standby_Mode_Duration         \"Standby mode duration\"                     <clock>       (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#standbyModeDuration\"}\n-Number KWL_Standby_Mode_Stage            \"Standby mode fan stage\"                    <fan>         (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#standbyModeFanStage\"}\n-Number KWL_Standby_Mode_Remaining        \"Standby mode remaining time [%d min]\"      <clock>       (gKWL) {channel=\"modbus:helios-easycontrols:modbus-gateway:kwl:operation#standbyModeRemainingTime\"}\n+Switch KWL_Standby_Mode                  \"Standby mode\"                              <fan_off>     (gKWL) {channel=\"modbus:helios-ventilation-easycontrols:modbus-gateway:kwl:operation#standbyModeStatus\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0MzI2Ng==", "bodyText": "Revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511643266", "createdAt": "2020-10-25T20:17:11Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/src/main/java/org/openhab/binding/modbus/helioseasycontrols/internal/HeliosEasyControlsActions.java", "diffHunk": "@@ -47,60 +47,80 @@ public void setThingHandler(@Nullable ThingHandler handler) {\n \n     private void triggerSwitch(String variableName) {\n         try {\n-            if (handler != null) {\n-                handler.writeValue(variableName, \"1\");\n+            if (this.handler != null) {\n+                this.handler.writeValue(variableName, \"1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0MzI3OA==", "bodyText": "Revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511643278", "createdAt": "2020-10-25T20:17:28Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/src/main/java/org/openhab/binding/modbus/helioseasycontrols/internal/HeliosEasyControlsActions.java", "diffHunk": "@@ -47,60 +47,80 @@ public void setThingHandler(@Nullable ThingHandler handler) {\n \n     private void triggerSwitch(String variableName) {\n         try {\n-            if (handler != null) {\n-                handler.writeValue(variableName, \"1\");\n+            if (this.handler != null) {\n+                this.handler.writeValue(variableName, \"1\");\n             }\n         } catch (HeliosException e) {\n             logger.warn(\"Error executing action 'resetFilterChangeTimer': {}\", e.getMessage());\n         }\n     }\n \n-    @RuleAction(label = \"reset filter change timer\", description = \"Sets the filter change timer back to the configured interval.\")\n+    @RuleAction(label = \"Reset filter change timer\", description = \"Sets the filter change timer back to the configured interval\")\n     public void resetFilterChangeTimer() {\n-        triggerSwitch(HeliosEasyControlsBindingConstants.FILTER_CHANGE_RESET);\n+        this.triggerSwitch(HeliosEasyControlsBindingConstants.FILTER_CHANGE_RESET);\n     }\n \n-    public static void resetFilterChangeTimer(ThingActions actions) {\n-        ((HeliosEasyControlsActions) actions).resetFilterChangeTimer();\n+    public static void resetFilterChangeTimer(@Nullable ThingActions actions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0MzI4MA==", "bodyText": "Revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511643280", "createdAt": "2020-10-25T20:17:34Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/src/main/java/org/openhab/binding/modbus/helioseasycontrols/internal/HeliosEasyControlsActions.java", "diffHunk": "@@ -47,60 +47,80 @@ public void setThingHandler(@Nullable ThingHandler handler) {\n \n     private void triggerSwitch(String variableName) {\n         try {\n-            if (handler != null) {\n-                handler.writeValue(variableName, \"1\");\n+            if (this.handler != null) {\n+                this.handler.writeValue(variableName, \"1\");\n             }\n         } catch (HeliosException e) {\n             logger.warn(\"Error executing action 'resetFilterChangeTimer': {}\", e.getMessage());\n         }\n     }\n \n-    @RuleAction(label = \"reset filter change timer\", description = \"Sets the filter change timer back to the configured interval.\")\n+    @RuleAction(label = \"Reset filter change timer\", description = \"Sets the filter change timer back to the configured interval\")\n     public void resetFilterChangeTimer() {\n-        triggerSwitch(HeliosEasyControlsBindingConstants.FILTER_CHANGE_RESET);\n+        this.triggerSwitch(HeliosEasyControlsBindingConstants.FILTER_CHANGE_RESET);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0MzM1Ng==", "bodyText": "Revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511643356", "createdAt": "2020-10-25T20:18:29Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus.studer/src/main/feature/feature.xml", "diffHunk": "@@ -3,7 +3,7 @@\n \t<repository>file:${basedirRoot}/bundles/org.openhab.io.transport.modbus/target/feature/feature.xml</repository>\n \t<repository>mvn:org.openhab.core.features.karaf/org.openhab.core.features.karaf.openhab-core/${ohc.version}/xml/features</repository>\n \n-\t<feature name=\"openhab-binding-modbus-studer\" description=\"Studer Binding\" version=\"${project.version}\">\n+\t<feature name=\"openhab-bindings-modbus-studer\" description=\"Studer Binding\" version=\"${project.version}\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0MzM5Nw==", "bodyText": "Revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511643397", "createdAt": "2020-10-25T20:18:56Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus.sunspec/NOTICE", "diffHunk": "@@ -10,4 +10,4 @@ https://www.eclipse.org/legal/epl-2.0/.\n \n == Source Code\n \n-https://github.com/openhab/openhab-addons\n+https://github.com/openhab/openhab2-addons", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0MzQxNw==", "bodyText": "Revert", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r511643417", "createdAt": "2020-10-25T20:19:03Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus.sunspec/src/main/java/org/openhab/binding/modbus/sunspec/internal/discovery/SunspecDiscoveryParticipant.java", "diffHunk": "@@ -33,7 +33,7 @@\n  * @author Nagy Attila Gabor - initial contribution\n  *\n  */\n-@Component\n+@Component(immediate = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Mzg0ODA0", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-519384804", "createdAt": "2020-10-29T07:13:17Z", "commit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzoxMzoxN1rOHqOxxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzoxNDo1MVrOHqO2KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0NDM1Nw==", "bodyText": "I thought this PR should be for OH3?", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r514044357", "createdAt": "2020-10-29T07:13:17Z", "author": {"login": "bern77"}, "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/pom.xml", "diffHunk": "@@ -7,7 +7,7 @@\n   <parent>\n     <groupId>org.openhab.addons.bundles</groupId>\n     <artifactId>org.openhab.addons.reactor.bundles</artifactId>\n-    <version>3.0.0-SNAPSHOT</version>\n+    <version>2.5.10-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA0NTQ4MQ==", "bodyText": "This change as was intentional as part of the migration to OH3 and should remain.", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r514045481", "createdAt": "2020-10-29T07:14:51Z", "author": {"login": "bern77"}, "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/src/main/feature/feature.xml", "diffHunk": "@@ -2,7 +2,7 @@\n <features name=\"org.openhab.binding.modbus.helioseasycontrols-${project.version}\" xmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">\n \t<repository>file:${basedirRoot}/bundles/org.openhab.io.transport.modbus/target/feature/feature.xml</repository>\n \n-\t<feature name=\"openhab-binding-modbus-helioseasycontrols\" description=\"Modbus.HeliosEasyControls Binding\" version=\"${project.version}\">\n+\t<feature name=\"openhab-binding-modbus.helioseasycontrols\" description=\"Modbus.HeliosEasyControls Binding\" version=\"${project.version}\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "338e61d0414047d8c81a16bace25c89ddca55fcd", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/338e61d0414047d8c81a16bace25c89ddca55fcd", "committedDate": "2020-10-25T18:49:40Z", "message": "[modbus.sunspec] Simplifications\n\nNow extractStringFromRegisters returns String, not StringType\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}, "afterCommit": {"oid": "8db68bada556c2fb5619098ba8b481a420a3c459", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/8db68bada556c2fb5619098ba8b481a420a3c459", "committedDate": "2020-11-02T18:35:58Z", "message": "[modbus.sunspec] Simplifications\n\nNow extractStringFromRegisters returns String, not StringType\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8db68bada556c2fb5619098ba8b481a420a3c459", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/8db68bada556c2fb5619098ba8b481a420a3c459", "committedDate": "2020-11-02T18:35:58Z", "message": "[modbus.sunspec] Simplifications\n\nNow extractStringFromRegisters returns String, not StringType\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}, "afterCommit": {"oid": "0420f601eb059c24a1681e5d7c841d4041093b7b", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/0420f601eb059c24a1681e5d7c841d4041093b7b", "committedDate": "2020-11-02T18:49:28Z", "message": "[modbus.sunspec] Simplifications\n\nNow extractStringFromRegisters returns String, not StringType\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0420f601eb059c24a1681e5d7c841d4041093b7b", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/0420f601eb059c24a1681e5d7c841d4041093b7b", "committedDate": "2020-11-02T18:49:28Z", "message": "[modbus.sunspec] Simplifications\n\nNow extractStringFromRegisters returns String, not StringType\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}, "afterCommit": {"oid": "cb2d241b90fb65e20192956fffe275f26b5e9a79", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/cb2d241b90fb65e20192956fffe275f26b5e9a79", "committedDate": "2020-11-02T19:00:05Z", "message": "[modbus.sunspec] Simplifications\n\nNow extractStringFromRegisters returns String, not StringType\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjIzMzEy", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-523623312", "createdAt": "2020-11-04T18:22:07Z", "commit": {"oid": "9bcbf254ec059e888d97e1bd7a3466f989465074"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NjU3OTAy", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-526657902", "createdAt": "2020-11-09T21:12:09Z", "commit": {"oid": "87392b695e8de84e8ca2bb3bbcdf47d7e5068270"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMToxMjoxMFrOHwByBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMTozNDo0MlrOHwCguw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyMjg4Ng==", "bodyText": "This test not needed anymore?", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r520122886", "createdAt": "2020-11-09T21:12:10Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.modbus.e3dc/src/test/java/org/openhab/binding/modbus/e3dc/util/DataConverterTest.java", "diffHunk": "@@ -30,17 +30,58 @@\n public class DataConverterTest {\n \n     @Test\n-    public void testE3DCSwapValueNegative() {\n-        // Reg 69 value 65098 bytes [-2, 74]\n-        // Reg 70 value 65535 bytes [-1, -1]\n-        byte[] b = new byte[] { -2, -74, -1, -1 };\n-        assertEquals(-330, DataConverter.getInt32Swap(ByteBuffer.wrap(b)), \"Negative Value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87392b695e8de84e8ca2bb3bbcdf47d7e5068270"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNDE2Mg==", "bodyText": "are these throws necessary?", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r520124162", "createdAt": "2020-11-09T21:14:42Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/src/test/java/org/openhab/binding/modbus/helioseasycontrols/internal/PreparePayloadTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.openhab.binding.modbus.helioseasycontrols.internal;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+\n+/**\n+ * @author Sami Salonen - Initial contribution\n+ */\n+public class PreparePayloadTest {\n+\n+    private Method preparePayloadMethod;\n+\n+    public PreparePayloadTest() throws NoSuchMethodException, SecurityException {\n+        preparePayloadMethod = HeliosEasyControlsHandler.class.getDeclaredMethod(\"preparePayload\", String.class);\n+        preparePayloadMethod.setAccessible(true);\n+    }\n+\n+    private ModbusRegisterArray preparePayload(String payload) {\n+        try {\n+            return (ModbusRegisterArray) preparePayloadMethod.invoke(null, payload);\n+        } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n+            fail(\"Reflection failure:\" + e.getMessage());\n+            throw new RuntimeException(); // to make compiler happy\n+        }\n+    }\n+\n+    public static Collection<Object[]> data() {\n+        return Collections.unmodifiableList(Stream\n+                // Due to nul byte, full register full of nul bytes added\n+                .of(new Object[] { \"v00020=a\", new ModbusRegisterArray(0x7630, 0x3030, 0x3230, 0x3d61, 0x0000) },\n+                        new Object[] { \"v00020=aa\", new ModbusRegisterArray(0x7630, 0x3030, 0x3230, 0x3d61, 0x6100) })\n+                .collect(Collectors.toList()));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"data\")\n+    public void testPreparePayload(String payload, ModbusRegisterArray expectedRegisters)\n+            throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87392b695e8de84e8ca2bb3bbcdf47d7e5068270"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEzNDg0Mw==", "bodyText": "Are these equivalent?", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r520134843", "createdAt": "2020-11-09T21:34:42Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.modbus.e3dc/src/main/java/org/openhab/binding/modbus/e3dc/internal/modbus/Parser.java", "diffHunk": "@@ -59,17 +58,10 @@ public Parser(DataType type) {\n     }\n \n     public void handle(AsyncModbusReadResult result) {\n-        byte[] newArray = new byte[size];\n         long startTime = System.currentTimeMillis();\n         Optional<ModbusRegisterArray> opt = result.getRegisters();\n         if (opt.isPresent()) {\n-            ModbusRegisterArray registers = opt.get();\n-            int i = 0;\n-            for (ModbusRegister reg : registers) {\n-                System.arraycopy(reg.getBytes(), 0, newArray, i, 2);\n-                i += 2;\n-            }\n-            setArray(newArray);\n+            setArray(opt.get().getBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87392b695e8de84e8ca2bb3bbcdf47d7e5068270"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwOTYyNDkz", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-530962493", "createdAt": "2020-11-16T07:21:57Z", "commit": {"oid": "87392b695e8de84e8ca2bb3bbcdf47d7e5068270"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNzoyMTo1N1rOHzqlyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwNzoyMTo1N1rOHzqlyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzkzNzIyNw==", "bodyText": "The checked exceptions IllegalAccessException and InvocationTargetException are never thrown. So they could be removed. Specifying an unchecked exception like IllegalArgumentException has no effect in tests, AFAIK. So, that could be removed, too.", "url": "https://github.com/openhab/openhab-addons/pull/8865#discussion_r523937227", "createdAt": "2020-11-16T07:21:57Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.modbus.helioseasycontrols/src/test/java/org/openhab/binding/modbus/helioseasycontrols/internal/PreparePayloadTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.openhab.binding.modbus.helioseasycontrols.internal;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.openhab.io.transport.modbus.ModbusRegisterArray;\n+\n+/**\n+ * @author Sami Salonen - Initial contribution\n+ */\n+public class PreparePayloadTest {\n+\n+    private Method preparePayloadMethod;\n+\n+    public PreparePayloadTest() throws NoSuchMethodException, SecurityException {\n+        preparePayloadMethod = HeliosEasyControlsHandler.class.getDeclaredMethod(\"preparePayload\", String.class);\n+        preparePayloadMethod.setAccessible(true);\n+    }\n+\n+    private ModbusRegisterArray preparePayload(String payload) {\n+        try {\n+            return (ModbusRegisterArray) preparePayloadMethod.invoke(null, payload);\n+        } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n+            fail(\"Reflection failure:\" + e.getMessage());\n+            throw new RuntimeException(); // to make compiler happy\n+        }\n+    }\n+\n+    public static Collection<Object[]> data() {\n+        return Collections.unmodifiableList(Stream\n+                // Due to nul byte, full register full of nul bytes added\n+                .of(new Object[] { \"v00020=a\", new ModbusRegisterArray(0x7630, 0x3030, 0x3230, 0x3d61, 0x0000) },\n+                        new Object[] { \"v00020=aa\", new ModbusRegisterArray(0x7630, 0x3030, 0x3230, 0x3d61, 0x6100) })\n+                .collect(Collectors.toList()));\n+    }\n+\n+    @ParameterizedTest\n+    @MethodSource(\"data\")\n+    public void testPreparePayload(String payload, ModbusRegisterArray expectedRegisters)\n+            throws IllegalAccessException, IllegalArgumentException, InvocationTargetException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDEyNDE2Mg=="}, "originalCommit": {"oid": "87392b695e8de84e8ca2bb3bbcdf47d7e5068270"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95c3f3d6b9e1317faa247bafea40689f0bb1e1a7", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/95c3f3d6b9e1317faa247bafea40689f0bb1e1a7", "committedDate": "2020-11-24T05:50:12Z", "message": "[modbus] Back register arrays directly by bytes\n\nIn addition, bring specialized value extraction methods and\nByteBuffer-like interface to work with data\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6322480f3cdc3a264baff2ac6b278df17f2039b8", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/6322480f3cdc3a264baff2ac6b278df17f2039b8", "committedDate": "2020-11-24T05:50:12Z", "message": "[modbus.e3dc] Simplify data extraction using utilities from transport\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0fb454cf4c3007f86e4a7749bbad72cb0b2806c", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/c0fb454cf4c3007f86e4a7749bbad72cb0b2806c", "committedDate": "2020-11-24T05:50:12Z", "message": "[modbus.helioseasycontrols] Simplify data extraction using utilities\n\n...from transport\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d404484e030aeb8862da50b526c222959469b61", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/5d404484e030aeb8862da50b526c222959469b61", "committedDate": "2020-11-24T05:50:13Z", "message": "[modbus.stiebeleltron] Accomodate to new API\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec4223cdf9f82c083a10c17ca2784ad443bc0dd", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/1ec4223cdf9f82c083a10c17ca2784ad443bc0dd", "committedDate": "2020-11-24T05:50:13Z", "message": "[modbus.studer] Simplify data extraction using utilities from transport\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfe09d0d9a81a8ee8479948f1d382b2e00e2b0ef", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/cfe09d0d9a81a8ee8479948f1d382b2e00e2b0ef", "committedDate": "2020-11-24T05:50:13Z", "message": "[modbus.sunspec] Simplifications\n\nNow extractStringFromRegisters returns String, not StringType\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6fbbbdd902a2dd35d6cb0bb3127d05a555d14be", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/c6fbbbdd902a2dd35d6cb0bb3127d05a555d14be", "committedDate": "2020-11-24T05:50:13Z", "message": "[modbus] spotless:apply\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5466780dbd0fb3b70cbd46cf4e8c0dadb881235d", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/5466780dbd0fb3b70cbd46cf4e8c0dadb881235d", "committedDate": "2020-11-24T05:50:13Z", "message": "[modbus] fix import (accidentally using org.bouncycastle.util.Arrays)\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd5b895767da292e64222d9459b7e75d39d932c3", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/fd5b895767da292e64222d9459b7e75d39d932c3", "committedDate": "2020-11-24T05:50:13Z", "message": "[modbus.helioseasycontrols] Remove unnecessary throws in test method\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e43bdc610011263a92bc1b75e6284a0ad9fed580", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/e43bdc610011263a92bc1b75e6284a0ad9fed580", "committedDate": "2020-11-23T18:47:08Z", "message": "[modbus.helioseasycontrols] Remove unnecessary throws in test method\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}, "afterCommit": {"oid": "fd5b895767da292e64222d9459b7e75d39d932c3", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/fd5b895767da292e64222d9459b7e75d39d932c3", "committedDate": "2020-11-24T05:50:13Z", "message": "[modbus.helioseasycontrols] Remove unnecessary throws in test method\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dbaa39733f1913fa0551f5e684d9422c5006bb7", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/2dbaa39733f1913fa0551f5e684d9422c5006bb7", "committedDate": "2020-11-26T16:21:26Z", "message": "[modbus.e3dc] tests fixed (new JUnit assertEquals parameter order)\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a599a01a730ce064b81d97afd1bd1b0bdd0debad", "author": {"user": {"login": "ssalonen", "name": "Sami Salonen"}}, "url": "https://github.com/openhab/openhab-addons/commit/a599a01a730ce064b81d97afd1bd1b0bdd0debad", "committedDate": "2020-11-26T16:21:58Z", "message": "[modbus.helioseasycontrols] Test fixed\n\n- Copyright notice added\n- assertEquals parameter order fixed\n\nSigned-off-by: Sami Salonen <ssalonen@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NDcwODkx", "url": "https://github.com/openhab/openhab-addons/pull/8865#pullrequestreview-539470891", "createdAt": "2020-11-26T17:07:25Z", "commit": {"oid": "a599a01a730ce064b81d97afd1bd1b0bdd0debad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4390, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}