{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzYwNzc1", "number": 7692, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMToxMzoyOFrOD9mlcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo0NzoxOFrOD96ANw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTIxOTA2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/OpenWeatherMapWeatherAndForecastHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMToxMzoyOFrOGXMeBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNjoyNDowN1rOGXRd0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3NDcyNg==", "bodyText": "You should eliminate the requirement for subclasses to have to call super and then exit early. Instead you should just move all the  AbstractOpenWeatherMapHandler.initializeThing logic into AbstractOpenWeatherMapHandler.initialize, make AbstractOpenWeatherMapHandler.initializeThing abstract and only call initializeThing when bridgeHandler != null && bridgeStatus == ThingStatus.ONLINE.", "url": "https://github.com/openhab/openhab-addons/pull/7692#discussion_r426974726", "createdAt": "2020-05-19T01:13:28Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/OpenWeatherMapWeatherAndForecastHandler.java", "diffHunk": "@@ -82,8 +83,11 @@ public OpenWeatherMapWeatherAndForecastHandler(Thing thing) {\n     }\n \n     @Override\n-    public void initialize() {\n-        super.initialize();\n+    protected void initializeThing(@Nullable ThingHandler bridgeHandler, @Nullable ThingStatus bridgeStatus) {\n+        super.initializeThing(bridgeHandler, bridgeStatus);\n+        if (bridgeHandler == null || bridgeStatus != ThingStatus.ONLINE) {\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52c1f707c6e8a62e75d1d6c6e0f5aaa7aabea0fc"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA1NjU5Mw==", "bodyText": "I see what you mean and you're right. I am going to improve that.", "url": "https://github.com/openhab/openhab-addons/pull/7692#discussion_r427056593", "createdAt": "2020-05-19T06:24:07Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/OpenWeatherMapWeatherAndForecastHandler.java", "diffHunk": "@@ -82,8 +83,11 @@ public OpenWeatherMapWeatherAndForecastHandler(Thing thing) {\n     }\n \n     @Override\n-    public void initialize() {\n-        super.initialize();\n+    protected void initializeThing(@Nullable ThingHandler bridgeHandler, @Nullable ThingStatus bridgeStatus) {\n+        super.initializeThing(bridgeHandler, bridgeStatus);\n+        if (bridgeHandler == null || bridgeStatus != ThingStatus.ONLINE) {\n+            return;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk3NDcyNg=="}, "originalCommit": {"oid": "52c1f707c6e8a62e75d1d6c6e0f5aaa7aabea0fc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjQwMDU1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/AbstractOpenWeatherMapHandler.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo0NzoxOFrOGXrvgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDozMDo0NlrOGXxeWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4NzEwNg==", "bodyText": "Since bridge.getStatus() should reflect the most recently changed status. It should be possible to refactor the logic from bridgeStatusChanged and initialize into initializeThing. Of course we would have to change the name here to avoid naming conflicts with our abstract method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private void initializeThing(@Nullable ThingHandler bridgeHandler, @Nullable ThingStatus bridgeStatus) {\n          \n          \n            \n                    if (bridgeHandler != null && bridgeStatus != null) {\n          \n          \n            \n                private void initializeThingInternal() {\n          \n          \n            \n                    Bridge bridge = getBridge();\n          \n          \n            \n                    ThingHandler bridgeHandler = bridge != null ? bridge.getHandler() : null;\n          \n          \n            \n                    ThingStatus bridgeStatus = bridge != null ? bridge.getStatus() : null;\n          \n          \n            \n                    if (bridgeHandler != null && bridgeStatus != null) {", "url": "https://github.com/openhab/openhab-addons/pull/7692#discussion_r427487106", "createdAt": "2020-05-19T17:47:18Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/AbstractOpenWeatherMapHandler.java", "diffHunk": "@@ -82,29 +84,50 @@ public AbstractOpenWeatherMapHandler(Thing thing) {\n \n     @Override\n     public void initialize() {\n-        OpenWeatherMapLocationConfiguration config = getConfigAs(OpenWeatherMapLocationConfiguration.class);\n-\n-        boolean configValid = true;\n-        if (StringUtils.trimToNull(config.getLocation()) == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                    \"@text/offline.conf-error-missing-location\");\n-            configValid = false;\n+        logger.debug(\"initializing handler for thing {}\", getThing().getUID());\n+        Bridge bridge = getBridge();\n+        if (bridge == null) {\n+            initializeThing(null, null);\n+        } else {\n+            initializeThing(bridge.getHandler(), bridge.getStatus());\n         }\n+    }\n \n-        try {\n-            location = new PointType(config.getLocation());\n-        } catch (IllegalArgumentException e) {\n-            location = null;\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                    \"@text/offline.conf-error-parsing-location\");\n-            configValid = false;\n-        }\n+    private void initializeThing(@Nullable ThingHandler bridgeHandler, @Nullable ThingStatus bridgeStatus) {\n+        if (bridgeHandler != null && bridgeStatus != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1a3b5dedcc78730e44987a6f46f4d685a8957f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMDkyMA==", "bodyText": "In this case, you don't use at all the value provided as parameter toi bridgeStatusChanged.\nI don't know how big is the risk to do that.\nBut why would have been provided the bridge status as parameter if it is useless ?", "url": "https://github.com/openhab/openhab-addons/pull/7692#discussion_r427520920", "createdAt": "2020-05-19T18:42:30Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/AbstractOpenWeatherMapHandler.java", "diffHunk": "@@ -82,29 +84,50 @@ public AbstractOpenWeatherMapHandler(Thing thing) {\n \n     @Override\n     public void initialize() {\n-        OpenWeatherMapLocationConfiguration config = getConfigAs(OpenWeatherMapLocationConfiguration.class);\n-\n-        boolean configValid = true;\n-        if (StringUtils.trimToNull(config.getLocation()) == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                    \"@text/offline.conf-error-missing-location\");\n-            configValid = false;\n+        logger.debug(\"initializing handler for thing {}\", getThing().getUID());\n+        Bridge bridge = getBridge();\n+        if (bridge == null) {\n+            initializeThing(null, null);\n+        } else {\n+            initializeThing(bridge.getHandler(), bridge.getStatus());\n         }\n+    }\n \n-        try {\n-            location = new PointType(config.getLocation());\n-        } catch (IllegalArgumentException e) {\n-            location = null;\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                    \"@text/offline.conf-error-parsing-location\");\n-            configValid = false;\n-        }\n+    private void initializeThing(@Nullable ThingHandler bridgeHandler, @Nullable ThingStatus bridgeStatus) {\n+        if (bridgeHandler != null && bridgeStatus != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4NzEwNg=="}, "originalCommit": {"oid": "2a1a3b5dedcc78730e44987a6f46f4d685a8957f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3MDM2Mw==", "bodyText": "The super implementation of bridgeStatusChanged uses that bridge status param just fine. But it doesn't take into account the bridge becoming null like your new code is doing.\nAs will all event handling, sometimes the event handler doesn't care about the event that is getting handled, only that something happened. This is often the case with refresh handlers which don't care what kind of event took place and thus would ignore the event parameter in its handler method.", "url": "https://github.com/openhab/openhab-addons/pull/7692#discussion_r427570363", "createdAt": "2020-05-19T20:10:50Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/AbstractOpenWeatherMapHandler.java", "diffHunk": "@@ -82,29 +84,50 @@ public AbstractOpenWeatherMapHandler(Thing thing) {\n \n     @Override\n     public void initialize() {\n-        OpenWeatherMapLocationConfiguration config = getConfigAs(OpenWeatherMapLocationConfiguration.class);\n-\n-        boolean configValid = true;\n-        if (StringUtils.trimToNull(config.getLocation()) == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                    \"@text/offline.conf-error-missing-location\");\n-            configValid = false;\n+        logger.debug(\"initializing handler for thing {}\", getThing().getUID());\n+        Bridge bridge = getBridge();\n+        if (bridge == null) {\n+            initializeThing(null, null);\n+        } else {\n+            initializeThing(bridge.getHandler(), bridge.getStatus());\n         }\n+    }\n \n-        try {\n-            location = new PointType(config.getLocation());\n-        } catch (IllegalArgumentException e) {\n-            location = null;\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                    \"@text/offline.conf-error-parsing-location\");\n-            configValid = false;\n-        }\n+    private void initializeThing(@Nullable ThingHandler bridgeHandler, @Nullable ThingStatus bridgeStatus) {\n+        if (bridgeHandler != null && bridgeStatus != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4NzEwNg=="}, "originalCommit": {"oid": "2a1a3b5dedcc78730e44987a6f46f4d685a8957f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MTAxNg==", "bodyText": "This is not the usual pattern I have found in different bindings.\nWe could at least provide the bridgeStatus as parameter to the common internal method ?", "url": "https://github.com/openhab/openhab-addons/pull/7692#discussion_r427581016", "createdAt": "2020-05-19T20:30:46Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.openweathermap/src/main/java/org/openhab/binding/openweathermap/internal/handler/AbstractOpenWeatherMapHandler.java", "diffHunk": "@@ -82,29 +84,50 @@ public AbstractOpenWeatherMapHandler(Thing thing) {\n \n     @Override\n     public void initialize() {\n-        OpenWeatherMapLocationConfiguration config = getConfigAs(OpenWeatherMapLocationConfiguration.class);\n-\n-        boolean configValid = true;\n-        if (StringUtils.trimToNull(config.getLocation()) == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                    \"@text/offline.conf-error-missing-location\");\n-            configValid = false;\n+        logger.debug(\"initializing handler for thing {}\", getThing().getUID());\n+        Bridge bridge = getBridge();\n+        if (bridge == null) {\n+            initializeThing(null, null);\n+        } else {\n+            initializeThing(bridge.getHandler(), bridge.getStatus());\n         }\n+    }\n \n-        try {\n-            location = new PointType(config.getLocation());\n-        } catch (IllegalArgumentException e) {\n-            location = null;\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n-                    \"@text/offline.conf-error-parsing-location\");\n-            configValid = false;\n-        }\n+    private void initializeThing(@Nullable ThingHandler bridgeHandler, @Nullable ThingStatus bridgeStatus) {\n+        if (bridgeHandler != null && bridgeStatus != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4NzEwNg=="}, "originalCommit": {"oid": "2a1a3b5dedcc78730e44987a6f46f4d685a8957f"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 56, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}