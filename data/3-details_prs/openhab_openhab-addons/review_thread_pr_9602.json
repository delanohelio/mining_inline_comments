{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2OTkwOTIz", "number": 9602, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMzo0MzoyNFrOFKSZIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wNlQxMTo0ODoyMFrOFicOkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MzMxNDI0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMzo0MzoyNFrOIM-_sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxNDoyMTozOVrOIM_ajg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NTkzOQ==", "bodyText": "The email adress shouldn't be part of the athor tag.", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r550485939", "createdAt": "2020-12-31T13:43:24Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer <wouter@denayer.com> - Added to support for weekly & daily energy reading", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e6a953e5e34ff1247b50f46888acbe895a0fec"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5MjgxNA==", "bodyText": "no problem to remove, it does seem to be very frequent that email is added (cf other source files in this same binding)", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r550492814", "createdAt": "2020-12-31T14:21:39Z", "author": {"login": "gitwouter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer <wouter@denayer.com> - Added to support for weekly & daily energy reading", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NTkzOQ=="}, "originalCommit": {"oid": "c2e6a953e5e34ff1247b50f46888acbe895a0fec"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MzMxNjQ3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxMzo0NDoxNFrOIM_Asw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxNjoyMDoxNVrOINBjNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjE5NQ==", "bodyText": "Can this message be replaced by using the debugger or by increasing the framework's log level? See point 4 https://www.openhab.org/docs/developer/guidelines.html#f-logging", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r550486195", "createdAt": "2020-12-31T13:44:14Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer <wouter@denayer.com> - Added to support for weekly & daily energy reading\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();\n+\n+    private static final Logger logger = LoggerFactory.getLogger(EnergyInfoDayAndWeek.class);\n+\n+    private EnergyInfoDayAndWeek() {\n+    }\n+\n+    public static EnergyInfoDayAndWeek parse(String response) {\n+\n+        EnergyInfoDayAndWeek info = new EnergyInfoDayAndWeek();\n+\n+        logger.debug(\"Parsing string: \\\"{}\\\"\", response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2e6a953e5e34ff1247b50f46888acbe895a0fec"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ5MzE4Mg==", "bodyText": "agree, this should be trace level probably. Will change it in EnergyInfoYear as well.", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r550493182", "createdAt": "2020-12-31T14:23:24Z", "author": {"login": "gitwouter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer <wouter@denayer.com> - Added to support for weekly & daily energy reading\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();\n+\n+    private static final Logger logger = LoggerFactory.getLogger(EnergyInfoDayAndWeek.class);\n+\n+    private EnergyInfoDayAndWeek() {\n+    }\n+\n+    public static EnergyInfoDayAndWeek parse(String response) {\n+\n+        EnergyInfoDayAndWeek info = new EnergyInfoDayAndWeek();\n+\n+        logger.debug(\"Parsing string: \\\"{}\\\"\", response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjE5NQ=="}, "originalCommit": {"oid": "c2e6a953e5e34ff1247b50f46888acbe895a0fec"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDUwMDEzMw==", "bodyText": "It seems to me that this output is only needed during development. Can you use the debugger if you want to inspect it?", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r550500133", "createdAt": "2020-12-31T15:01:09Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer <wouter@denayer.com> - Added to support for weekly & daily energy reading\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();\n+\n+    private static final Logger logger = LoggerFactory.getLogger(EnergyInfoDayAndWeek.class);\n+\n+    private EnergyInfoDayAndWeek() {\n+    }\n+\n+    public static EnergyInfoDayAndWeek parse(String response) {\n+\n+        EnergyInfoDayAndWeek info = new EnergyInfoDayAndWeek();\n+\n+        logger.debug(\"Parsing string: \\\"{}\\\"\", response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjE5NQ=="}, "originalCommit": {"oid": "c2e6a953e5e34ff1247b50f46888acbe895a0fec"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDUyNzc5Nw==", "bodyText": "well.. I can't... haven't worked with the debugger. I guess it should be possible. It's only one line, so why not keep it in trace?", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r550527797", "createdAt": "2020-12-31T16:20:15Z", "author": {"login": "gitwouter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,104 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer <wouter@denayer.com> - Added to support for weekly & daily energy reading\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();\n+\n+    private static final Logger logger = LoggerFactory.getLogger(EnergyInfoDayAndWeek.class);\n+\n+    private EnergyInfoDayAndWeek() {\n+    }\n+\n+    public static EnergyInfoDayAndWeek parse(String response) {\n+\n+        EnergyInfoDayAndWeek info = new EnergyInfoDayAndWeek();\n+\n+        logger.debug(\"Parsing string: \\\"{}\\\"\", response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4NjE5NQ=="}, "originalCommit": {"oid": "c2e6a953e5e34ff1247b50f46888acbe895a0fec"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY2MDU1MDY1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQxNDo1NjowOFrOIpbjMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQxNDo1NjowOFrOIpbjMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDMxMzkwNw==", "bodyText": "This should fix the build:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright (c) 2010-2020 Contributors to the openHAB project\n          \n          \n            \n             * Copyright (c) 2010-2021 Contributors to the openHAB project", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r580313907", "createdAt": "2021-02-22T14:56:08Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81e3ad21e71ffc63679694cd304a43dae1d81408"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY2NzAyNDk3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QxOTowOTo0NlrOIqYnIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wNlQxMTo1MTozOFrOIxl8zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTMxNDMzOA==", "bodyText": "Are these public by intention?", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r581314338", "createdAt": "2021-02-23T19:09:46Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed189716510d270ce9e6bd5a11534eaa8a2e20e5"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzQ5OTczOA==", "bodyText": "it is the same in the other similar classes in this binding", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r587499738", "createdAt": "2021-03-04T14:10:19Z", "author": {"login": "gitwouter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTMxNDMzOA=="}, "originalCommit": {"oid": "ed189716510d270ce9e6bd5a11534eaa8a2e20e5"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NzY0MjcyNA==", "bodyText": "If they don't need to be public, you could make them private, too.", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r587642724", "createdAt": "2021-03-04T16:54:51Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTMxNDMzOA=="}, "originalCommit": {"oid": "ed189716510d270ce9e6bd5a11534eaa8a2e20e5"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg2Mjk2MQ==", "bodyText": "it has to be public", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r588862961", "createdAt": "2021-03-06T10:09:29Z", "author": {"login": "gitwouter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTMxNDMzOA=="}, "originalCommit": {"oid": "ed189716510d270ce9e6bd5a11534eaa8a2e20e5"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg3MjkxMA==", "bodyText": "Fields shouldn't be accessed directly by other classes. You can generate the necessary getters with Alt-Shift-S, R in eclipse.", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r588872910", "createdAt": "2021-03-06T11:51:38Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTMxNDMzOA=="}, "originalCommit": {"oid": "ed189716510d270ce9e6bd5a11534eaa8a2e20e5"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY2NzAyNzM2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QxOToxMDoxNlrOIqYofQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yM1QxOToxMDoxNlrOIqYofQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTMxNDY4NQ==", "bodyText": "As the logger is static now, the field name should be all uppercase.", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r581314685", "createdAt": "2021-02-23T19:10:16Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/api/EnergyInfoDayAndWeek.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2021 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.daikin.internal.api;\n+\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Holds information from the get_week_power_ex call.\n+ *\n+ * @author Wouter Denayer - Initial contribution\n+ *\n+ */\n+@NonNullByDefault\n+public class EnergyInfoDayAndWeek {\n+    public Optional<Double> energyHeatingToday = Optional.empty();\n+    public Optional<Double> energyHeatingThisWeek = Optional.empty();\n+    public Optional<Double> energyHeatingLastWeek = Optional.empty();\n+    public Optional<Double> energyCoolingToday = Optional.empty();\n+    public Optional<Double> energyCoolingThisWeek = Optional.empty();\n+    public Optional<Double> energyCoolingLastWeek = Optional.empty();\n+\n+    private static final Logger logger = LoggerFactory.getLogger(EnergyInfoDayAndWeek.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed189716510d270ce9e6bd5a11534eaa8a2e20e5"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzcxNjU4Mzg1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinAcUnitHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wNlQxMTo0ODoyMFrOIxl7mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wNlQxMTo0ODoyMFrOIxl7mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg3MjYwMg==", "bodyText": "As this logger is not static, it must be lower case.", "url": "https://github.com/openhab/openhab-addons/pull/9602#discussion_r588872602", "createdAt": "2021-03-06T11:48:20Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinAcUnitHandler.java", "diffHunk": "@@ -49,12 +51,14 @@\n  * Handles communicating with a Daikin air conditioning unit.\n  *\n  * @author Tim Waterhouse - Initial Contribution\n- * @author Paul Smedley <paul@smedley.id.au> - Modifications to support Airbase Controllers\n+ * @author Paul Smedley - Modifications to support Airbase Controllers\n  * @author Lukas Agethen - Added support for Energy Year reading, compressor frequency and powerful mode\n+ * @author Wouter Denayer - Added to support for weekly & daily energy reading\n+ * \n  */\n @NonNullByDefault\n public class DaikinAcUnitHandler extends DaikinBaseHandler {\n-    private final Logger logger = LoggerFactory.getLogger(DaikinAcUnitHandler.class);\n+    private final Logger LOGGER = LoggerFactory.getLogger(DaikinAcUnitHandler.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb2b8c5d8a4df9acce706b3e1004c78426d8461"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3444, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}