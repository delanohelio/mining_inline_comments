{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNDY0OTc2", "number": 7797, "title": "[Seneye] Bug fix for using Pond or Home sensors.", "bodyText": "This is a bug fix for Seneye binding when using Pond or Home Sensors.\nPreviously the binding would fail as it would try and pull readings for\nChannels that didn't exist on these sensors.\nSigned-off-by: MickUrsell  bindings@mru-photography.co.uk", "createdAt": "2020-05-26T21:09:25Z", "url": "https://github.com/openhab/openhab-addons/pull/7797", "merged": true, "mergeCommit": {"oid": "fc589c6d2c6a6edce44c26d9b97d051ccddf87f1"}, "closed": true, "closedAt": "2020-05-28T21:53:13Z", "author": {"login": "MickUrsell"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclK421AH2gAyNDIzNDY0OTc2OjU1ZmI2ZmQ0YzIzYWM1ZmFlYWYyNWQwNTU4NDJlMTAxYjQ2MTUzMmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcl1FHPAFqTQyMDUxODcxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "55fb6fd4c23ac5faeaf25d055842e101b461532a", "author": {"user": {"login": "MickUrsell", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/55fb6fd4c23ac5faeaf25d055842e101b461532a", "committedDate": "2020-05-26T20:42:26Z", "message": "[Seneye] Bug fix for using Pond or Home sensors.\n\nThis is a bug fix for Seneye binding when using Pond or Home Sensors.\nPreviously the binding would fail as it would try and pull readings for\nChannels that didn't exist on these sensors.\n\nSigned-off-by: MickUrsell  <bindings@mru-photography.co.uk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NzAxMDMx", "url": "https://github.com/openhab/openhab-addons/pull/7797#pullrequestreview-418701031", "createdAt": "2020-05-26T21:44:10Z", "commit": {"oid": "55fb6fd4c23ac5faeaf25d055842e101b461532a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo0NDoxMFrOGaxX3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo0NDoxMFrOGaxX3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyNTA4NA==", "bodyText": "Maybe log what type 1,2 or 3 actually is ? Pond/Home/Reef", "url": "https://github.com/openhab/openhab-addons/pull/7797#discussion_r430725084", "createdAt": "2020-05-26T21:44:10Z", "author": {"login": "nikotanghe"}, "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "diffHunk": "@@ -69,21 +69,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     @Override\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n-            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n-            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n-            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n-            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n-            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            if (seneyeService.seneyeType == 3) {\n+                logger.debug(\"found that sensor is type 3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55fb6fd4c23ac5faeaf25d055842e101b461532a"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93b78304bdabdf6cb6917d38bbd276cd4469cbba", "author": {"user": {"login": "MickUrsell", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/93b78304bdabdf6cb6917d38bbd276cd4469cbba", "committedDate": "2020-05-27T07:53:41Z", "message": "[Seneye] changed the log description of sensor\n\nLogs now show name of sensor type being updated, following review\n\n\nSigned-off-by: MickUrsell <bindings@mru-photography.co.uk>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTY2NzM0", "url": "https://github.com/openhab/openhab-addons/pull/7797#pullrequestreview-419166734", "createdAt": "2020-05-27T12:51:18Z", "commit": {"oid": "93b78304bdabdf6cb6917d38bbd276cd4469cbba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NjQ4MDMw", "url": "https://github.com/openhab/openhab-addons/pull/7797#pullrequestreview-419648030", "createdAt": "2020-05-27T22:16:35Z", "commit": {"oid": "93b78304bdabdf6cb6917d38bbd276cd4469cbba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoxNjozNVrOGbfFsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoxNjozNVrOGbfFsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ3NDA5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (seneyeService.seneyeType == 3) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Reef type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n          \n          \n            \n                            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n          \n          \n            \n                            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        if (seneyeService.seneyeType == 2) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Pond type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        if (seneyeService.seneyeType == 1) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Home type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        logger.debug(\"Updating readings for sensor type {}\", seneyeService.seneyeType);\n          \n          \n            \n                        switch (seneyeService.seneyeType) {\n          \n          \n            \n                            case 3: \n          \n          \n            \n                                updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n          \n          \n            \n                                updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n          \n          \n            \n                                updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n          \n          \n            \n                                updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n          \n          \n            \n                            case 2:\n          \n          \n            \n                                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            case 1:\n          \n          \n            \n                                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }", "url": "https://github.com/openhab/openhab-addons/pull/7797#discussion_r431474097", "createdAt": "2020-05-27T22:16:35Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "diffHunk": "@@ -69,21 +69,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     @Override\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n-            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n-            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n-            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n-            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n-            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            if (seneyeService.seneyeType == 3) {\n+                logger.debug(\"Updating readings for Reef type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n+                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n+                updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n+                updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }\n+            if (seneyeService.seneyeType == 2) {\n+                logger.debug(\"Updating readings for Pond type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }\n+            if (seneyeService.seneyeType == 1) {\n+                logger.debug(\"Updating readings for Home type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b78304bdabdf6cb6917d38bbd276cd4469cbba"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a21a4c038f8416115ae65f802d3c24ec3e6e7306", "author": {"user": {"login": "MickUrsell", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/a21a4c038f8416115ae65f802d3c24ec3e6e7306", "committedDate": "2020-05-28T16:32:21Z", "message": "Update bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java\n\nCo-authored-by: cpmeister <mistercpp2000@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNTE4NzE0", "url": "https://github.com/openhab/openhab-addons/pull/7797#pullrequestreview-420518714", "createdAt": "2020-05-28T21:51:50Z", "commit": {"oid": "a21a4c038f8416115ae65f802d3c24ec3e6e7306"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 447, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}