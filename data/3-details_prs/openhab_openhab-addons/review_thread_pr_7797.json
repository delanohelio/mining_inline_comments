{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNDY0OTc2", "number": 7797, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo0NDoxMFrOD_24ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoxNjozNVrOEASzzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjg2MDc1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTo0NDoxMFrOGaxX3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzo1ODo0MlrOGa9vig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyNTA4NA==", "bodyText": "Maybe log what type 1,2 or 3 actually is ? Pond/Home/Reef", "url": "https://github.com/openhab/openhab-addons/pull/7797#discussion_r430725084", "createdAt": "2020-05-26T21:44:10Z", "author": {"login": "nikotanghe"}, "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "diffHunk": "@@ -69,21 +69,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     @Override\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n-            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n-            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n-            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n-            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n-            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            if (seneyeService.seneyeType == 3) {\n+                logger.debug(\"found that sensor is type 3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55fb6fd4c23ac5faeaf25d055842e101b461532a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkyNzc1NA==", "bodyText": "Hi Niko,\nMany thanks for the feedback. I have changed the log as suggested.\nThis binding has been great for me, thanks for creating it.", "url": "https://github.com/openhab/openhab-addons/pull/7797#discussion_r430927754", "createdAt": "2020-05-27T07:58:42Z", "author": {"login": "MickUrsell"}, "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "diffHunk": "@@ -69,21 +69,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     @Override\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n-            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n-            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n-            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n-            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n-            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            if (seneyeService.seneyeType == 3) {\n+                logger.debug(\"found that sensor is type 3\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyNTA4NA=="}, "originalCommit": {"oid": "55fb6fd4c23ac5faeaf25d055842e101b461532a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzQzNjMxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoxNjozNVrOGbfFsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjoxNjozNVrOGbfFsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ3NDA5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (seneyeService.seneyeType == 3) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Reef type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n          \n          \n            \n                            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n          \n          \n            \n                            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        if (seneyeService.seneyeType == 2) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Pond type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        if (seneyeService.seneyeType == 1) {\n          \n          \n            \n                            logger.debug(\"Updating readings for Home type sensor\");\n          \n          \n            \n                            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }\n          \n          \n            \n                        logger.debug(\"Updating readings for sensor type {}\", seneyeService.seneyeType);\n          \n          \n            \n                        switch (seneyeService.seneyeType) {\n          \n          \n            \n                            case 3: \n          \n          \n            \n                                updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n          \n          \n            \n                                updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n          \n          \n            \n                                updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n          \n          \n            \n                                updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n          \n          \n            \n                            case 2:\n          \n          \n            \n                                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n          \n          \n            \n                            case 1:\n          \n          \n            \n                                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n          \n          \n            \n                                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n          \n          \n            \n                                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n          \n          \n            \n                                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n          \n          \n            \n                                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n          \n          \n            \n                                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n          \n          \n            \n                                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n          \n          \n            \n                                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n          \n          \n            \n                                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n          \n          \n            \n                        }", "url": "https://github.com/openhab/openhab-addons/pull/7797#discussion_r431474097", "createdAt": "2020-05-27T22:16:35Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.seneye/src/main/java/org/openhab/binding/seneye/internal/handler/SeneyeHandler.java", "diffHunk": "@@ -69,21 +69,50 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     @Override\n     public void newState(SeneyeDeviceReading readings) {\n         if (readings != null) {\n-            updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n-            updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n-            updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n-            updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n-            updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n-            updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n-            updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n-            updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n-            updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n-            updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n-            updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n-            updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n-            updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n-            updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            if (seneyeService.seneyeType == 3) {\n+                logger.debug(\"Updating readings for Reef type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_NH4, new DecimalType(readings.nh4.curr));\n+                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n+                updateState(CHANNEL_PAR, new DecimalType(readings.par.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LUX, new DecimalType(readings.lux.curr));\n+                updateState(CHANNEL_KELVIN, new DecimalType(readings.kelvin.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }\n+            if (seneyeService.seneyeType == 2) {\n+                logger.debug(\"Updating readings for Pond type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_O2, new DecimalType(readings.o2.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }\n+            if (seneyeService.seneyeType == 1) {\n+                logger.debug(\"Updating readings for Home type sensor\");\n+                updateState(CHANNEL_TEMPERATURE, new DecimalType(readings.temperature.curr));\n+                updateState(CHANNEL_NH3, new DecimalType(readings.nh3.curr));\n+                updateState(CHANNEL_PH, new DecimalType(readings.ph.curr));\n+                updateState(CHANNEL_LASTREADING, new DateTimeType(readings.status.getLast_experimentDate()));\n+                updateState(CHANNEL_SLIDEEXPIRES, new DateTimeType(readings.status.getSlide_expiresDate()));\n+                updateState(CHANNEL_WRONGSLIDE, new StringType(readings.status.getWrong_slideString()));\n+                updateState(CHANNEL_SLIDESERIAL, new StringType(readings.status.getSlide_serialString()));\n+                updateState(CHANNEL_OUTOFWATER, new StringType(readings.status.getOut_of_waterString()));\n+                updateState(CHANNEL_DISCONNECTED, new StringType(readings.status.getDisconnectedString()));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93b78304bdabdf6cb6917d38bbd276cd4469cbba"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4925, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}