{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTg1NDM0", "number": 7073, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjowNzoxMVrODjV5eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjowNzoxMVrODjV5eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mzg1NTI5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/java/org/openhab/binding/bluetooth/bluez/handler/BlueZBridgeHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjowNzoxMVrOFvGNNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODoyOTowMlrOFvJBXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyOTA3OQ==", "bodyText": "Why is this message parsing necessary? And I guess you need to check if the message is null before calling lastIndex()", "url": "https://github.com/openhab/openhab-addons/pull/7073#discussion_r384929079", "createdAt": "2020-02-27T06:07:11Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/java/org/openhab/binding/bluetooth/bluez/handler/BlueZBridgeHandler.java", "diffHunk": "@@ -155,33 +155,48 @@ public void removeDiscoveryListener(@Nullable BluetoothDiscoveryListener listene\n     }\n \n     private void startDiscovery() {\n+        // we need to make sure the adapter is powered first\n+        if (!adapter.getPowered()) {\n+            adapter.setPowered(true);\n+        }\n         if (!adapter.getDiscovering()) {\n             adapter.setRssiDiscoveryFilter(-96);\n             adapter.startDiscovery();\n         }\n     }\n \n     private void refreshDevices() {\n-        logger.debug(\"Refreshing Bluetooth device list...\");\n-        List<tinyb.BluetoothDevice> tinybDevices = adapter.getDevices();\n-        logger.debug(\"Found {} Bluetooth devices.\", tinybDevices.size());\n-        for (tinyb.BluetoothDevice tinybDevice : tinybDevices) {\n-            BlueZBluetoothDevice device = getDevice(new BluetoothAddress(tinybDevice.getAddress()));\n-            device.updateTinybDevice(tinybDevice);\n-            notifyDiscoveryListeners(device);\n-        }\n-        // clean up orphaned entries\n-        synchronized (devices) {\n-            for (BlueZBluetoothDevice device : devices.values()) {\n-                if (shouldRemove(device)) {\n-                    logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n-                    device.dispose();\n-                    devices.remove(device.getAddress());\n+        try {\n+            logger.debug(\"Refreshing Bluetooth device list...\");\n+            List<tinyb.BluetoothDevice> tinybDevices = adapter.getDevices();\n+            logger.debug(\"Found {} Bluetooth devices.\", tinybDevices.size());\n+            for (tinyb.BluetoothDevice tinybDevice : tinybDevices) {\n+                BlueZBluetoothDevice device = getDevice(new BluetoothAddress(tinybDevice.getAddress()));\n+                device.updateTinybDevice(tinybDevice);\n+                notifyDiscoveryListeners(device);\n+            }\n+            // clean up orphaned entries\n+            synchronized (devices) {\n+                for (BlueZBluetoothDevice device : devices.values()) {\n+                    if (shouldRemove(device)) {\n+                        logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n+                        device.dispose();\n+                        devices.remove(device.getAddress());\n+                    }\n                 }\n             }\n+            // For whatever reason, bluez will sometimes turn off scanning. So we just make sure it keeps running.\n+            startDiscovery();\n+            // everything went fine, so lets switch to online\n+            updateStatus(ThingStatus.ONLINE);\n+        } catch (BluetoothException ex) {\n+            String message = ex.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "667d9151f0ce157b7a84c89096adc2f55c872aeb"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzMDI2Ng==", "bodyText": "I chose to parse out the most user friendly part of the message since it would be displayed to the user. Otherwise it would look like tinyb.BluetoothException: GDBus.Error:org.bluez.Error.NotReady: Resource Not Ready. I'm parsing it so it just comes out to Resource Not Ready. But you are correct that I should null check so I will add that.", "url": "https://github.com/openhab/openhab-addons/pull/7073#discussion_r384930266", "createdAt": "2020-02-27T06:12:13Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/java/org/openhab/binding/bluetooth/bluez/handler/BlueZBridgeHandler.java", "diffHunk": "@@ -155,33 +155,48 @@ public void removeDiscoveryListener(@Nullable BluetoothDiscoveryListener listene\n     }\n \n     private void startDiscovery() {\n+        // we need to make sure the adapter is powered first\n+        if (!adapter.getPowered()) {\n+            adapter.setPowered(true);\n+        }\n         if (!adapter.getDiscovering()) {\n             adapter.setRssiDiscoveryFilter(-96);\n             adapter.startDiscovery();\n         }\n     }\n \n     private void refreshDevices() {\n-        logger.debug(\"Refreshing Bluetooth device list...\");\n-        List<tinyb.BluetoothDevice> tinybDevices = adapter.getDevices();\n-        logger.debug(\"Found {} Bluetooth devices.\", tinybDevices.size());\n-        for (tinyb.BluetoothDevice tinybDevice : tinybDevices) {\n-            BlueZBluetoothDevice device = getDevice(new BluetoothAddress(tinybDevice.getAddress()));\n-            device.updateTinybDevice(tinybDevice);\n-            notifyDiscoveryListeners(device);\n-        }\n-        // clean up orphaned entries\n-        synchronized (devices) {\n-            for (BlueZBluetoothDevice device : devices.values()) {\n-                if (shouldRemove(device)) {\n-                    logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n-                    device.dispose();\n-                    devices.remove(device.getAddress());\n+        try {\n+            logger.debug(\"Refreshing Bluetooth device list...\");\n+            List<tinyb.BluetoothDevice> tinybDevices = adapter.getDevices();\n+            logger.debug(\"Found {} Bluetooth devices.\", tinybDevices.size());\n+            for (tinyb.BluetoothDevice tinybDevice : tinybDevices) {\n+                BlueZBluetoothDevice device = getDevice(new BluetoothAddress(tinybDevice.getAddress()));\n+                device.updateTinybDevice(tinybDevice);\n+                notifyDiscoveryListeners(device);\n+            }\n+            // clean up orphaned entries\n+            synchronized (devices) {\n+                for (BlueZBluetoothDevice device : devices.values()) {\n+                    if (shouldRemove(device)) {\n+                        logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n+                        device.dispose();\n+                        devices.remove(device.getAddress());\n+                    }\n                 }\n             }\n+            // For whatever reason, bluez will sometimes turn off scanning. So we just make sure it keeps running.\n+            startDiscovery();\n+            // everything went fine, so lets switch to online\n+            updateStatus(ThingStatus.ONLINE);\n+        } catch (BluetoothException ex) {\n+            String message = ex.getMessage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyOTA3OQ=="}, "originalCommit": {"oid": "667d9151f0ce157b7a84c89096adc2f55c872aeb"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk3NTE5Ng==", "bodyText": "In General I dislike string parsing in front of logging as it is done Always, no matter what log level is set. In this case however it happens only very rarely, therfore I'm fine with it.", "url": "https://github.com/openhab/openhab-addons/pull/7073#discussion_r384975196", "createdAt": "2020-02-27T08:29:02Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/java/org/openhab/binding/bluetooth/bluez/handler/BlueZBridgeHandler.java", "diffHunk": "@@ -155,33 +155,48 @@ public void removeDiscoveryListener(@Nullable BluetoothDiscoveryListener listene\n     }\n \n     private void startDiscovery() {\n+        // we need to make sure the adapter is powered first\n+        if (!adapter.getPowered()) {\n+            adapter.setPowered(true);\n+        }\n         if (!adapter.getDiscovering()) {\n             adapter.setRssiDiscoveryFilter(-96);\n             adapter.startDiscovery();\n         }\n     }\n \n     private void refreshDevices() {\n-        logger.debug(\"Refreshing Bluetooth device list...\");\n-        List<tinyb.BluetoothDevice> tinybDevices = adapter.getDevices();\n-        logger.debug(\"Found {} Bluetooth devices.\", tinybDevices.size());\n-        for (tinyb.BluetoothDevice tinybDevice : tinybDevices) {\n-            BlueZBluetoothDevice device = getDevice(new BluetoothAddress(tinybDevice.getAddress()));\n-            device.updateTinybDevice(tinybDevice);\n-            notifyDiscoveryListeners(device);\n-        }\n-        // clean up orphaned entries\n-        synchronized (devices) {\n-            for (BlueZBluetoothDevice device : devices.values()) {\n-                if (shouldRemove(device)) {\n-                    logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n-                    device.dispose();\n-                    devices.remove(device.getAddress());\n+        try {\n+            logger.debug(\"Refreshing Bluetooth device list...\");\n+            List<tinyb.BluetoothDevice> tinybDevices = adapter.getDevices();\n+            logger.debug(\"Found {} Bluetooth devices.\", tinybDevices.size());\n+            for (tinyb.BluetoothDevice tinybDevice : tinybDevices) {\n+                BlueZBluetoothDevice device = getDevice(new BluetoothAddress(tinybDevice.getAddress()));\n+                device.updateTinybDevice(tinybDevice);\n+                notifyDiscoveryListeners(device);\n+            }\n+            // clean up orphaned entries\n+            synchronized (devices) {\n+                for (BlueZBluetoothDevice device : devices.values()) {\n+                    if (shouldRemove(device)) {\n+                        logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n+                        device.dispose();\n+                        devices.remove(device.getAddress());\n+                    }\n                 }\n             }\n+            // For whatever reason, bluez will sometimes turn off scanning. So we just make sure it keeps running.\n+            startDiscovery();\n+            // everything went fine, so lets switch to online\n+            updateStatus(ThingStatus.ONLINE);\n+        } catch (BluetoothException ex) {\n+            String message = ex.getMessage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkyOTA3OQ=="}, "originalCommit": {"oid": "667d9151f0ce157b7a84c89096adc2f55c872aeb"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 611, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}