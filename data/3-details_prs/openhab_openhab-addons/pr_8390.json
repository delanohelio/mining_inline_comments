{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NzMyMDQ5", "number": 8390, "title": "[mqtt][homie] Improve Homie initialization process for big devices", "bodyText": "Hi guys!\nAfter the report made by @baku104788 on #7252 (comment), I have realized that there are some bugs in Homie's initialization process for very big devices.\n\nFirst, as the AbstractMQTTThingHandler initialize function is blocking -get(timeout)- and for Homie devices that can take up to 15 seconds, I have made the call to super.initialize() run in a separate thread. That way we don't get any warning messages in the log file if the initialize() method takes more than 5 seconds. The other option is to call the bridgeStatusChanged() method in a separate thread, but I didn't want to touch the abstract class because it is used by the GenericMQTTThing and HomeAssistantMQTTThing, although I can change it if you wish.\nMore importantly, when the binding has to process very big Homie devices (hundreds of nodes and properties), the second return in the CompletableFuture of HomieThingHandler's start() can take a lot of time (10 seconds). At the same time, as MQTT messages keep coming from the topics that we already have subscribed to, HomieThingHandler's accept() method is called and, thus, the startChannel() method is called twice. If the function is called while the first call is already running, the first one doesn't complete correctly and the CompletableFuture returned by start() is not completed successfully. That makes the synchronous get(timeout) method to timeout and the Thing is marked as OFFLINE incorrectly. To avoid this scenario, I have created the startingChannels attribute in the Device class, avoiding the second call to startChannels() when the process is already running. It took me a while to find the root of the problem, although I'm not sure if you are going to like the proposed solution. As always, I'm open to other implementations, once we know what the problem really is.\nFinally, I has also increased the device timeout time to 30 seconds, just in case.\n\nPinging @jochen314, @J-N-K, @cpmeister, @fwolter and @Hilbrand for a review and looking forward to your suggestions \ud83d\ude09\nThanks for your work! \ud83d\udc4d\nSigned-off-by: Aitor Iturrioz riturrioz@gmail.com", "createdAt": "2020-09-03T15:59:32Z", "url": "https://github.com/openhab/openhab-addons/pull/8390", "merged": true, "mergeCommit": {"oid": "103182417b9abc731e174184c42f1a8099ac8c3c"}, "closed": true, "closedAt": "2020-09-20T02:45:15Z", "author": {"login": "bodiroga"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGgHf6AH2gAyNDc4NzMyMDQ5OjYyNWNiZmJmMTg1ZTMxODZmNDhmMTAyYTA1MjEwMmFmZGU3MDIyYTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKfA3kgFqTQ5MjExMDIwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "625cbfbf185e3186f48f102a052102afde7022a7", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/625cbfbf185e3186f48f102a052102afde7022a7", "committedDate": "2020-09-07T10:05:56Z", "message": "[mqtt][homie] Improve Homie initialization process for big devices\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c686234099c7b192a30098d4a96beb6c7248e2a", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/1c686234099c7b192a30098d4a96beb6c7248e2a", "committedDate": "2020-09-07T10:05:56Z", "message": "Fix tests\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af914a8348ea51e605b972ab168e1312e368cbfe", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/af914a8348ea51e605b972ab168e1312e368cbfe", "committedDate": "2020-09-07T10:05:56Z", "message": "Remove execution of initialize() in a separate thread\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "committedDate": "2020-09-07T10:05:56Z", "message": "Move started flag from Device to Property (doesn't work)\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5f52f3f355754cd812614384d013aabdaf8028c", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/e5f52f3f355754cd812614384d013aabdaf8028c", "committedDate": "2020-09-04T01:36:24Z", "message": "Move started flag from Device to Property (doesn't work)\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}, "afterCommit": {"oid": "cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/cf31eeb726ac216a2acea96a4bddf8ba4620efa3", "committedDate": "2020-09-07T10:05:56Z", "message": "Move started flag from Device to Property (doesn't work)\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "089e17c4365a20dbe2273e63c0b41cee76c56bf3", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/089e17c4365a20dbe2273e63c0b41cee76c56bf3", "committedDate": "2020-09-07T10:15:34Z", "message": "Remove newline\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMTAwNTQw", "url": "https://github.com/openhab/openhab-addons/pull/8390#pullrequestreview-482100540", "createdAt": "2020-09-03T18:29:18Z", "commit": {"oid": "82094d32c6b0e2481f285d61f02dbae60cee3632"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoyOToxOVrOHMysrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNjo0MDo1OFrOHNqiow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3NTU5Nw==", "bodyText": "I do not think, that this is a good idea.\nThe 5 second message is just a warning and the consequences are too big for me.", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r483175597", "createdAt": "2020-09-03T18:29:19Z", "author": {"login": "jochen314"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/handler/HomieThingHandler.java", "diffHunk": "@@ -104,7 +105,7 @@ public void initialize() {\n             return;\n         }\n         device.initialize(config.basetopic, config.deviceid, thing.getChannels());\n-        super.initialize();\n+        scheduler.schedule(() -> super.initialize(), 0, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82094d32c6b0e2481f285d61f02dbae60cee3632"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3NzQzMA==", "bodyText": "This is not thread safe. So it will not guarantee solving the problem.\nOne thread might still be past the test and before setting the flag when the second call happens.\nHave a look into the java.util.concurrent.atomic.Atomic* classes to avoid this problem.", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r483177430", "createdAt": "2020-09-03T18:31:42Z", "author": {"login": "jochen314"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java", "diffHunk": "@@ -64,6 +64,7 @@\n     private String topic = \"\";\n     public String deviceID = \"\";\n     private boolean initialized = false;\n+    private boolean startingChannels = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82094d32c6b0e2481f285d61f02dbae60cee3632"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE3ODgwNQ==", "bodyText": "There is CompletableFuture.completedFuture(U value)\nFor line 151: There would have been CompletableFuture.failedFuture(Throwable ex)", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r483178805", "createdAt": "2020-09-03T18:34:22Z", "author": {"login": "jochen314"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Device.java", "diffHunk": "@@ -140,14 +141,23 @@ public Device(ThingUID thingUID, DeviceCallback callback, DeviceAttributes attri\n      */\n     public CompletableFuture<@Nullable Void> startChannels(MqttBrokerConnection connection,\n             ScheduledExecutorService scheduler, int timeout, HomieThingHandler handler) {\n+        if (startingChannels) {\n+            CompletableFuture<@Nullable Void> c = new CompletableFuture<>();\n+            c.complete(null);\n+            return c;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82094d32c6b0e2481f285d61f02dbae60cee3632"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5MDUzMQ==", "bodyText": "This is not the threadsafe way to do it.\nWe still try to start the channel a second time, if the first time has not finished yet....\nWe need to set starting to true before we try start it.\nSomething like:\nif (starting.getAndSet(true)) {\n   return CompletableFuture.completedFuture(null);\n}", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r484090531", "createdAt": "2020-09-06T16:40:58Z", "author": {"login": "jochen314"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -262,6 +264,12 @@ public void createChannelFromAttribute() {\n      */\n     public CompletableFuture<@Nullable Void> startChannel(MqttBrokerConnection connection,\n             ScheduledExecutorService scheduler, int timeout) {\n+        if (started.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5f52f3f355754cd812614384d013aabdaf8028c"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbdec18c2483ed7e0e7376bb657a7d8e7c024169", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/bbdec18c2483ed7e0e7376bb657a7d8e7c024169", "committedDate": "2020-09-12T21:08:01Z", "message": "Make final implementation thread safe\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92b60cd973b51bd5f1e246cc40b521452e41403f", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/92b60cd973b51bd5f1e246cc40b521452e41403f", "committedDate": "2020-09-12T21:20:54Z", "message": "Fix formatting issues\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MzA5NTgz", "url": "https://github.com/openhab/openhab-addons/pull/8390#pullrequestreview-487309583", "createdAt": "2020-09-13T13:57:24Z", "commit": {"oid": "92b60cd973b51bd5f1e246cc40b521452e41403f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMTcyODkx", "url": "https://github.com/openhab/openhab-addons/pull/8390#pullrequestreview-491172891", "createdAt": "2020-09-18T06:04:12Z", "commit": {"oid": "92b60cd973b51bd5f1e246cc40b521452e41403f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNjowNDoxMlrOHT_N2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNjowNDoxMlrOHT_N2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyMDczMA==", "bodyText": "From what I can tell the fix should be in ChannelState.start() instead. It isn't thread safe and it is no surprise that you are seeing the issues that you are seeing.\nTry making these changes in ChannelState and see if it fixes your problem.\nprivate CompletableFuture<@Nullable Void> future = CompletableFuture.completedFuture(null);\nprivate final Object futureLock = new Object();\n\npublic CompletableFuture<@Nullable Void> start(MqttBrokerConnection connection, ScheduledExecutorService scheduler,\n            int timeout) {\n        sychronized(futureLock){\n          // if the connection is still the same, the subscription is still present, otherwise we need to renew\n          if ((hasSubscribed || !future.isDone()) && connection.equals(this.connection)) {\n              return future;\n          }\n          hasSubscribed = false;\n          \n          this.connection = connection;\n\n          if (StringUtils.isBlank(config.stateTopic)) {\n              return CompletableFuture.completedFuture(null);\n          }\n\n          this.future = new CompletableFuture<>();\n        }\n        connection.subscribe(config.stateTopic, this).thenRun(() -> {\n            hasSubscribed = true;\n            logger.debug(\"Subscribed channel {} to topic: {}\", this.channelUID, config.stateTopic);\n            if (timeout > 0 && !future.isDone()) {\n                this.scheduledFuture = scheduler.schedule(this::receivedOrTimeout, timeout, TimeUnit.MILLISECONDS);\n            } else {\n                receivedOrTimeout();\n            }\n        }).exceptionally(this::subscribeFail);\n        return future;\n    }", "url": "https://github.com/openhab/openhab-addons/pull/8390#discussion_r490720730", "createdAt": "2020-09-18T06:04:12Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt.homie/src/main/java/org/openhab/binding/mqtt/homie/internal/homie300/Property.java", "diffHunk": "@@ -280,7 +286,7 @@ public void createChannelFromAttribute() {\n         }\n         // Make sure we set the callback again which might have been nulled during an stop\n         channelState.setChannelStateUpdateListener(this.callback);\n-        return channelState.start(connection, scheduler, timeout);\n+        return channelState.start(connection, scheduler, timeout).thenRun(() -> starting.set(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92b60cd973b51bd5f1e246cc40b521452e41403f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3b076357d0238c59127fd80b0716ae7f5bbb461", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/c3b076357d0238c59127fd80b0716ae7f5bbb461", "committedDate": "2020-09-19T18:34:06Z", "message": "Address review comments\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMTEwMjAx", "url": "https://github.com/openhab/openhab-addons/pull/8390#pullrequestreview-492110201", "createdAt": "2020-09-19T19:04:29Z", "commit": {"oid": "c3b076357d0238c59127fd80b0716ae7f5bbb461"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4789, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}