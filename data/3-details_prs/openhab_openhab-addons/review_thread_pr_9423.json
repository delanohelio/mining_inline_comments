{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNzcwODI3", "number": 9423, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNjozNDo0M1rOFJcpzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowNzozNlrOFJk1Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDUwOTU3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNjozNDo0M1rOILycoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyNjoxNFrOIL5gRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIzMTc3Ng==", "bodyText": "You should make sure that days.datas isn't empty here.", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549231776", "createdAt": "2020-12-28T06:34:43Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -91,7 +91,29 @@ public LinkyHandler(Thing thing, LocaleProvider localeProvider, Gson gson, HttpC\n \n         this.cachedDailyData = new ExpiringDayCache<>(\"daily cache\", REFRESH_FIRST_HOUR_OF_DAY, () -> {\n             LocalDate today = LocalDate.now();\n-            return getConsumptionData(today.minusDays(15), today);\n+            Consumption consumption = getConsumptionData(today.minusDays(15), today);\n+            if (consumption != null) {\n+                Aggregate days = consumption.aggregats.days;\n+                Aggregate weeks = consumption.aggregats.weeks;\n+                if (logger.isDebugEnabled()) {\n+                    for (int i = 0; i < days.datas.size(); i++) {\n+                        logger.debug(\"Day {} value {}\",\n+                                days.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                                days.datas.get(i));\n+                    }\n+                    for (int i = 0; i < weeks.datas.size(); i++) {\n+                        logger.debug(\"Weeek {} {} value {}\",\n+                                weeks.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                weeks.periodes.get(i).dateFin.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                weeks.datas.get(i));\n+                    }\n+                }\n+                if (days.datas.get(days.datas.size() - 1).isNaN()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acbd751aab89f9f87c693fbf0c86b206ae2e891d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NzM5Ng==", "bodyText": "Done", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549347396", "createdAt": "2020-12-28T13:26:14Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -91,7 +91,29 @@ public LinkyHandler(Thing thing, LocaleProvider localeProvider, Gson gson, HttpC\n \n         this.cachedDailyData = new ExpiringDayCache<>(\"daily cache\", REFRESH_FIRST_HOUR_OF_DAY, () -> {\n             LocalDate today = LocalDate.now();\n-            return getConsumptionData(today.minusDays(15), today);\n+            Consumption consumption = getConsumptionData(today.minusDays(15), today);\n+            if (consumption != null) {\n+                Aggregate days = consumption.aggregats.days;\n+                Aggregate weeks = consumption.aggregats.weeks;\n+                if (logger.isDebugEnabled()) {\n+                    for (int i = 0; i < days.datas.size(); i++) {\n+                        logger.debug(\"Day {} value {}\",\n+                                days.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                                days.datas.get(i));\n+                    }\n+                    for (int i = 0; i < weeks.datas.size(); i++) {\n+                        logger.debug(\"Weeek {} {} value {}\",\n+                                weeks.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                weeks.periodes.get(i).dateFin.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                weeks.datas.get(i));\n+                    }\n+                }\n+                if (days.datas.get(days.datas.size() - 1).isNaN()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIzMTc3Ng=="}, "originalCommit": {"oid": "acbd751aab89f9f87c693fbf0c86b206ae2e891d"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDUxMDg5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNjozNTozMFrOILydRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyNjoyNlrOIL5gkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIzMTk0Mw==", "bodyText": "same here", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549231943", "createdAt": "2020-12-28T06:35:30Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -102,12 +124,50 @@ public LinkyHandler(Thing thing, LocaleProvider localeProvider, Gson gson, HttpC\n \n         this.cachedMonthlyData = new ExpiringDayCache<>(\"monthly cache\", REFRESH_FIRST_HOUR_OF_DAY, () -> {\n             LocalDate today = LocalDate.now();\n-            return getConsumptionData(today.withDayOfMonth(1).minusMonths(1), today);\n+            Consumption consumption = getConsumptionData(today.withDayOfMonth(1).minusMonths(1), today);\n+            if (consumption != null) {\n+                Aggregate days = consumption.aggregats.days;\n+                Aggregate months = consumption.aggregats.months;\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Day {} value {}\", days.periodes.get(days.periodes.size() - 1).dateDebut\n+                            .format(DateTimeFormatter.ISO_LOCAL_DATE), days.datas.get(days.datas.size() - 1));\n+                    for (int i = 0; i < months.datas.size(); i++) {\n+                        logger.debug(\"Month {} {} value {}\",\n+                                months.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                months.periodes.get(i).dateFin.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                months.datas.get(i));\n+                    }\n+                }\n+                if (days.datas.get(days.datas.size() - 1).isNaN()) {\n+                    logger.debug(\"Monthly data including yesterday are not yet available\");\n+                    consumption = null;\n+                }\n+            }\n+            return consumption;\n         });\n \n         this.cachedYearlyData = new ExpiringDayCache<>(\"yearly cache\", REFRESH_FIRST_HOUR_OF_DAY, () -> {\n             LocalDate today = LocalDate.now();\n-            return getConsumptionData(LocalDate.of(today.getYear() - 1, 1, 1), today);\n+            Consumption consumption = getConsumptionData(LocalDate.of(today.getYear() - 1, 1, 1), today);\n+            if (consumption != null) {\n+                Aggregate days = consumption.aggregats.days;\n+                Aggregate years = consumption.aggregats.years;\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Day {} value {}\", days.periodes.get(days.periodes.size() - 1).dateDebut\n+                            .format(DateTimeFormatter.ISO_LOCAL_DATE), days.datas.get(days.datas.size() - 1));\n+                    for (int i = 0; i < years.datas.size(); i++) {\n+                        logger.debug(\"Year {} {} value {}\",\n+                                years.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                years.periodes.get(i).dateFin.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                years.datas.get(i));\n+                    }\n+                }\n+                if (days.datas.get(days.datas.size() - 1).isNaN()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acbd751aab89f9f87c693fbf0c86b206ae2e891d"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NzQ3Mw==", "bodyText": "Done", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549347473", "createdAt": "2020-12-28T13:26:26Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -102,12 +124,50 @@ public LinkyHandler(Thing thing, LocaleProvider localeProvider, Gson gson, HttpC\n \n         this.cachedMonthlyData = new ExpiringDayCache<>(\"monthly cache\", REFRESH_FIRST_HOUR_OF_DAY, () -> {\n             LocalDate today = LocalDate.now();\n-            return getConsumptionData(today.withDayOfMonth(1).minusMonths(1), today);\n+            Consumption consumption = getConsumptionData(today.withDayOfMonth(1).minusMonths(1), today);\n+            if (consumption != null) {\n+                Aggregate days = consumption.aggregats.days;\n+                Aggregate months = consumption.aggregats.months;\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Day {} value {}\", days.periodes.get(days.periodes.size() - 1).dateDebut\n+                            .format(DateTimeFormatter.ISO_LOCAL_DATE), days.datas.get(days.datas.size() - 1));\n+                    for (int i = 0; i < months.datas.size(); i++) {\n+                        logger.debug(\"Month {} {} value {}\",\n+                                months.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                months.periodes.get(i).dateFin.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                months.datas.get(i));\n+                    }\n+                }\n+                if (days.datas.get(days.datas.size() - 1).isNaN()) {\n+                    logger.debug(\"Monthly data including yesterday are not yet available\");\n+                    consumption = null;\n+                }\n+            }\n+            return consumption;\n         });\n \n         this.cachedYearlyData = new ExpiringDayCache<>(\"yearly cache\", REFRESH_FIRST_HOUR_OF_DAY, () -> {\n             LocalDate today = LocalDate.now();\n-            return getConsumptionData(LocalDate.of(today.getYear() - 1, 1, 1), today);\n+            Consumption consumption = getConsumptionData(LocalDate.of(today.getYear() - 1, 1, 1), today);\n+            if (consumption != null) {\n+                Aggregate days = consumption.aggregats.days;\n+                Aggregate years = consumption.aggregats.years;\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Day {} value {}\", days.periodes.get(days.periodes.size() - 1).dateDebut\n+                            .format(DateTimeFormatter.ISO_LOCAL_DATE), days.datas.get(days.datas.size() - 1));\n+                    for (int i = 0; i < years.datas.size(); i++) {\n+                        logger.debug(\"Year {} {} value {}\",\n+                                years.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                years.periodes.get(i).dateFin.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                years.datas.get(i));\n+                    }\n+                }\n+                if (days.datas.get(days.datas.size() - 1).isNaN()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIzMTk0Mw=="}, "originalCommit": {"oid": "acbd751aab89f9f87c693fbf0c86b206ae2e891d"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NDUxMzYxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQwNjozNzowN1rOILyeog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxMzoyNjo1MFrOIL5g_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIzMjI5MA==", "bodyText": "Near identical code is used in two other places. Please consider refactoring into another method and calling that instead.", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549232290", "createdAt": "2020-12-28T06:37:07Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -102,12 +124,50 @@ public LinkyHandler(Thing thing, LocaleProvider localeProvider, Gson gson, HttpC\n \n         this.cachedMonthlyData = new ExpiringDayCache<>(\"monthly cache\", REFRESH_FIRST_HOUR_OF_DAY, () -> {\n             LocalDate today = LocalDate.now();\n-            return getConsumptionData(today.withDayOfMonth(1).minusMonths(1), today);\n+            Consumption consumption = getConsumptionData(today.withDayOfMonth(1).minusMonths(1), today);\n+            if (consumption != null) {\n+                Aggregate days = consumption.aggregats.days;\n+                Aggregate months = consumption.aggregats.months;\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Day {} value {}\", days.periodes.get(days.periodes.size() - 1).dateDebut\n+                            .format(DateTimeFormatter.ISO_LOCAL_DATE), days.datas.get(days.datas.size() - 1));\n+                    for (int i = 0; i < months.datas.size(); i++) {\n+                        logger.debug(\"Month {} {} value {}\",\n+                                months.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                months.periodes.get(i).dateFin.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                months.datas.get(i));\n+                    }\n+                }\n+                if (days.datas.get(days.datas.size() - 1).isNaN()) {\n+                    logger.debug(\"Monthly data including yesterday are not yet available\");\n+                    consumption = null;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acbd751aab89f9f87c693fbf0c86b206ae2e891d"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTM0NzU4MA==", "bodyText": "Done", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549347580", "createdAt": "2020-12-28T13:26:50Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -102,12 +124,50 @@ public LinkyHandler(Thing thing, LocaleProvider localeProvider, Gson gson, HttpC\n \n         this.cachedMonthlyData = new ExpiringDayCache<>(\"monthly cache\", REFRESH_FIRST_HOUR_OF_DAY, () -> {\n             LocalDate today = LocalDate.now();\n-            return getConsumptionData(today.withDayOfMonth(1).minusMonths(1), today);\n+            Consumption consumption = getConsumptionData(today.withDayOfMonth(1).minusMonths(1), today);\n+            if (consumption != null) {\n+                Aggregate days = consumption.aggregats.days;\n+                Aggregate months = consumption.aggregats.months;\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"Day {} value {}\", days.periodes.get(days.periodes.size() - 1).dateDebut\n+                            .format(DateTimeFormatter.ISO_LOCAL_DATE), days.datas.get(days.datas.size() - 1));\n+                    for (int i = 0; i < months.datas.size(); i++) {\n+                        logger.debug(\"Month {} {} value {}\",\n+                                months.periodes.get(i).dateDebut.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                months.periodes.get(i).dateFin.format(DateTimeFormatter.ISO_LOCAL_DATE_TIME),\n+                                months.datas.get(i));\n+                    }\n+                }\n+                if (days.datas.get(days.datas.size() - 1).isNaN()) {\n+                    logger.debug(\"Monthly data including yesterday are not yet available\");\n+                    consumption = null;\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTIzMjI5MA=="}, "originalCommit": {"oid": "acbd751aab89f9f87c693fbf0c86b206ae2e891d"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTg0OTE0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/dto/ConsumptionReport.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowNzozNlrOIL93GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMDo1MTowNlrOIMBycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxODc3Nw==", "bodyText": "Please move this logic into LinkyHandler instead.", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549418777", "createdAt": "2020-12-28T17:07:36Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/dto/ConsumptionReport.java", "diffHunk": "@@ -34,6 +41,32 @@\n         public List<String> labels;\n         public List<Period> periodes;\n         public List<Double> datas;\n+\n+        public void log(String title, boolean withDateFin, DateTimeFormatter dateTimeFormatter, boolean onlyLast) {\n+            if (LOGGER.isDebugEnabled()) {\n+                int size = (datas == null || periodes == null) ? 0\n+                        : (datas.size() <= periodes.size() ? datas.size() : periodes.size());\n+                if (onlyLast) {\n+                    if (size > 0) {\n+                        log(size - 1, title, withDateFin, dateTimeFormatter);\n+                    }\n+                } else {\n+                    for (int i = 0; i < size; i++) {\n+                        log(i, title, withDateFin, dateTimeFormatter);\n+                    }\n+                }\n+            }\n+        }\n+\n+        private void log(int index, String title, boolean withDateFin, DateTimeFormatter dateTimeFormatter) {\n+            if (withDateFin) {\n+                LOGGER.debug(\"{} {} {} value {}\", title, periodes.get(index).dateDebut.format(dateTimeFormatter),\n+                        periodes.get(index).dateFin.format(dateTimeFormatter), datas.get(index));\n+            } else {\n+                LOGGER.debug(\"{} {} value {}\", title, periodes.get(index).dateDebut.format(dateTimeFormatter),\n+                        datas.get(index));\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a02ad714b79f18252ceefab5ffa0f3a5cce902cc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzODc5NA==", "bodyText": "I will but I don't understand why...", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549438794", "createdAt": "2020-12-28T18:17:00Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/dto/ConsumptionReport.java", "diffHunk": "@@ -34,6 +41,32 @@\n         public List<String> labels;\n         public List<Period> periodes;\n         public List<Double> datas;\n+\n+        public void log(String title, boolean withDateFin, DateTimeFormatter dateTimeFormatter, boolean onlyLast) {\n+            if (LOGGER.isDebugEnabled()) {\n+                int size = (datas == null || periodes == null) ? 0\n+                        : (datas.size() <= periodes.size() ? datas.size() : periodes.size());\n+                if (onlyLast) {\n+                    if (size > 0) {\n+                        log(size - 1, title, withDateFin, dateTimeFormatter);\n+                    }\n+                } else {\n+                    for (int i = 0; i < size; i++) {\n+                        log(i, title, withDateFin, dateTimeFormatter);\n+                    }\n+                }\n+            }\n+        }\n+\n+        private void log(int index, String title, boolean withDateFin, DateTimeFormatter dateTimeFormatter) {\n+            if (withDateFin) {\n+                LOGGER.debug(\"{} {} {} value {}\", title, periodes.get(index).dateDebut.format(dateTimeFormatter),\n+                        periodes.get(index).dateFin.format(dateTimeFormatter), datas.get(index));\n+            } else {\n+                LOGGER.debug(\"{} {} value {}\", title, periodes.get(index).dateDebut.format(dateTimeFormatter),\n+                        datas.get(index));\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxODc3Nw=="}, "originalCommit": {"oid": "a02ad714b79f18252ceefab5ffa0f3a5cce902cc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0NjY3OA==", "bodyText": "Done", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549446678", "createdAt": "2020-12-28T18:33:45Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/dto/ConsumptionReport.java", "diffHunk": "@@ -34,6 +41,32 @@\n         public List<String> labels;\n         public List<Period> periodes;\n         public List<Double> datas;\n+\n+        public void log(String title, boolean withDateFin, DateTimeFormatter dateTimeFormatter, boolean onlyLast) {\n+            if (LOGGER.isDebugEnabled()) {\n+                int size = (datas == null || periodes == null) ? 0\n+                        : (datas.size() <= periodes.size() ? datas.size() : periodes.size());\n+                if (onlyLast) {\n+                    if (size > 0) {\n+                        log(size - 1, title, withDateFin, dateTimeFormatter);\n+                    }\n+                } else {\n+                    for (int i = 0; i < size; i++) {\n+                        log(i, title, withDateFin, dateTimeFormatter);\n+                    }\n+                }\n+            }\n+        }\n+\n+        private void log(int index, String title, boolean withDateFin, DateTimeFormatter dateTimeFormatter) {\n+            if (withDateFin) {\n+                LOGGER.debug(\"{} {} {} value {}\", title, periodes.get(index).dateDebut.format(dateTimeFormatter),\n+                        periodes.get(index).dateFin.format(dateTimeFormatter), datas.get(index));\n+            } else {\n+                LOGGER.debug(\"{} {} value {}\", title, periodes.get(index).dateDebut.format(dateTimeFormatter),\n+                        datas.get(index));\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxODc3Nw=="}, "originalCommit": {"oid": "a02ad714b79f18252ceefab5ffa0f3a5cce902cc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ4MzEyMA==", "bodyText": "The reason I suggested moving the logic is because you want to minimize the amount of logic you are doing in DTO classes since the null checker doesn't check dto classes.", "url": "https://github.com/openhab/openhab-addons/pull/9423#discussion_r549483120", "createdAt": "2020-12-28T20:51:06Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/dto/ConsumptionReport.java", "diffHunk": "@@ -34,6 +41,32 @@\n         public List<String> labels;\n         public List<Period> periodes;\n         public List<Double> datas;\n+\n+        public void log(String title, boolean withDateFin, DateTimeFormatter dateTimeFormatter, boolean onlyLast) {\n+            if (LOGGER.isDebugEnabled()) {\n+                int size = (datas == null || periodes == null) ? 0\n+                        : (datas.size() <= periodes.size() ? datas.size() : periodes.size());\n+                if (onlyLast) {\n+                    if (size > 0) {\n+                        log(size - 1, title, withDateFin, dateTimeFormatter);\n+                    }\n+                } else {\n+                    for (int i = 0; i < size; i++) {\n+                        log(i, title, withDateFin, dateTimeFormatter);\n+                    }\n+                }\n+            }\n+        }\n+\n+        private void log(int index, String title, boolean withDateFin, DateTimeFormatter dateTimeFormatter) {\n+            if (withDateFin) {\n+                LOGGER.debug(\"{} {} {} value {}\", title, periodes.get(index).dateDebut.format(dateTimeFormatter),\n+                        periodes.get(index).dateFin.format(dateTimeFormatter), datas.get(index));\n+            } else {\n+                LOGGER.debug(\"{} {} value {}\", title, periodes.get(index).dateDebut.format(dateTimeFormatter),\n+                        datas.get(index));\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxODc3Nw=="}, "originalCommit": {"oid": "a02ad714b79f18252ceefab5ffa0f3a5cce902cc"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3451, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}