{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4ODAzMDIz", "number": 7296, "title": "Fix SAT NoEmptyLineSeparatorCheck findings", "bodyText": "Removes unnecessary empty lines and two unnecessary default constructors.", "createdAt": "2020-04-04T22:54:29Z", "url": "https://github.com/openhab/openhab-addons/pull/7296", "merged": true, "mergeCommit": {"oid": "a985e074bf3ec38ebf933ffec7cab8567f7caa0c"}, "closed": true, "closedAt": "2020-04-05T13:22:21Z", "author": {"login": "wborn"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUdlpUAH2gAyMzk4ODAzMDIzOjk0Y2Y3NzI2M2ZkN2JjZmFmYmFkOWMyMWNlMmUxMDljOTQzNzJhNWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUk_tKAFqTM4Nzc4OTY3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a", "author": {"user": {"login": "wborn", "name": "Wouter Born"}}, "url": "https://github.com/openhab/openhab-addons/commit/94cf77263fd7bcfafbad9c21ce2e109c94372a5a", "committedDate": "2020-04-04T22:52:56Z", "message": "Fix SAT NoEmptyLineSeparatorCheck findings\n\nSigned-off-by: Wouter Born <github@maindrain.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzY1NjE5", "url": "https://github.com/openhab/openhab-addons/pull/7296#pullrequestreview-387765619", "createdAt": "2020-04-04T23:00:09Z", "commit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzowMDowOVrOGA3U4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzoxMjoxNVrOGA3oFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1OTY0OA==", "bodyText": "Is there any formatting setting that would make this look better?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403559648", "createdAt": "2020-04-04T23:00:09Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bosesoundtouch/src/main/java/org/openhab/binding/bosesoundtouch/internal/handler/BoseSoundTouchHandler.java", "diffHunk": "@@ -517,32 +520,66 @@ public void handleGroupUpdated(BoseSoundTouchConfiguration masterPlayerConfigura\n             }\r\n         }\r\n     }\r\n-    \r\n+\r\n     private List<Channel> getAllChannels() {\r\n         List<Channel> allChannels = new ArrayList<>();\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_POWER), new ChannelTypeUID(BINDING_ID, CHANNEL_POWER)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_VOLUME), new ChannelTypeUID(BINDING_ID, CHANNEL_VOLUME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_MUTE), new ChannelTypeUID(BINDING_ID, CHANNEL_MUTE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_OPERATIONMODE), new ChannelTypeUID(BINDING_ID, \"operationMode_BST_10_20_30\")).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PLAYER_CONTROL), new ChannelTypeUID(BINDING_ID, CHANNEL_PLAYER_CONTROL)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PRESET), new ChannelTypeUID(BINDING_ID, CHANNEL_PRESET)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_BASS), new ChannelTypeUID(BINDING_ID, CHANNEL_BASS)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_RATEENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_RATEENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPPREVIOUSENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPPREVIOUSENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SAVE_AS_PRESET), new ChannelTypeUID(BINDING_ID, CHANNEL_SAVE_AS_PRESET)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_KEY_CODE), new ChannelTypeUID(BINDING_ID, CHANNEL_KEY_CODE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ALBUM), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ALBUM)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTWORK), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTWORK)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTIST), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTIST)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_DESCRIPTION), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_DESCRIPTION)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_GENRE), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_GENRE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ITEMNAME), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ITEMNAME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONLOCATION), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONLOCATION)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONNAME), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONNAME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_TRACK), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_TRACK)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOTIFICATION_SOUND), new ChannelTypeUID(BINDING_ID, CHANNEL_NOTIFICATION_SOUND)).build());\r\n-        \r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_POWER),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_POWER)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_VOLUME),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_VOLUME)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_MUTE),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_MUTE)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_OPERATIONMODE),\r\n+                new ChannelTypeUID(BINDING_ID, \"operationMode_BST_10_20_30\")).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PLAYER_CONTROL),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_PLAYER_CONTROL)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PRESET),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_PRESET)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_BASS),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_BASS)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_RATEENABLED),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_RATEENABLED)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPENABLED),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPENABLED)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPPREVIOUSENABLED),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPPREVIOUSENABLED)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SAVE_AS_PRESET),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_SAVE_AS_PRESET)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_KEY_CODE),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_KEY_CODE)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ALBUM),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ALBUM)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTWORK),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTWORK)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTIST),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTIST)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_DESCRIPTION),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_DESCRIPTION)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_GENRE),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_GENRE)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ITEMNAME),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ITEMNAME)).build());\r\n+        allChannels.add(getCallback()\r\n+                .createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONLOCATION),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONLOCATION))\r\n+                .build());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MTMxMA==", "bodyText": "what's with this new indentation?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403561310", "createdAt": "2020-04-04T23:04:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactHandler.java", "diffHunk": "@@ -558,15 +557,17 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     if (command instanceof DecimalType) {\n                         transceiver.send(\n                                 \"setenergy \" + String.valueOf(\n-                                        Math.min(Math.max(0, ((DecimalType) command).intValue()*10), 999999999)), this);\n+                                        Math.min(Math.max(0, ((DecimalType) command).intValue() * 10), 999999999)),\n+                                this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MjA2Nw==", "bodyText": "why is this imported?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403562067", "createdAt": "2020-04-04T23:06:06Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -28,7 +28,7 @@\n import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n import org.eclipse.smarthome.core.types.Command;\n-\n+import org.openhab.binding.neohub.internal.NeoHubBindingConstants.NeoHubReturnResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2NDU2NQ==", "bodyText": "isn't this comment indentation fragile?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403564565", "createdAt": "2020-04-04T23:12:15Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.yamahareceiver/src/main/java/org/openhab/binding/yamahareceiver/internal/protocol/xml/XMLConnection.java", "diffHunk": "@@ -76,7 +76,8 @@ public XMLConnection(String host) {\n             connection.setRequestMethod(\"POST\");\n             connection.setRequestProperty(\"Content-Length\", Integer.toString(message.length()));\n \n-            connection.setConnectTimeout(CONNECTION_TIMEOUT_MS); // set a timeout in case the device is not reachable (went offline)\n+            connection.setConnectTimeout(CONNECTION_TIMEOUT_MS); // set a timeout in case the device is not reachable\n+                                                                 // (went offline)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac0e234979ea835d32a2e974bfae2042a93c736b", "author": {"user": {"login": "wborn", "name": "Wouter Born"}}, "url": "https://github.com/openhab/openhab-addons/commit/ac0e234979ea835d32a2e974bfae2042a93c736b", "committedDate": "2020-04-05T07:09:56Z", "message": "Fix sloppy coding and fragile comment\n\nSigned-off-by: Wouter Born <github@maindrain.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzg5MjE1", "url": "https://github.com/openhab/openhab-addons/pull/7296#pullrequestreview-387789215", "createdAt": "2020-04-05T07:24:12Z", "commit": {"oid": "ac0e234979ea835d32a2e974bfae2042a93c736b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzg5Njc4", "url": "https://github.com/openhab/openhab-addons/pull/7296#pullrequestreview-387789678", "createdAt": "2020-04-05T07:30:44Z", "commit": {"oid": "ac0e234979ea835d32a2e974bfae2042a93c736b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1016, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}