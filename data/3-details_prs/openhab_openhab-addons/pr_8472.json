{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2OTU1NTE4", "number": 8472, "title": "[gree] Minor improvements", "bodyText": "This PR adds some improvements\n\nImproved timeout handling on temporary networks issues\ncurrentTemperature is updated with NaN when no value is available (device returns -40)\nchannel swingUpDown now accepts values 0-11", "createdAt": "2020-09-15T00:13:55Z", "url": "https://github.com/openhab/openhab-addons/pull/8472", "merged": true, "mergeCommit": {"oid": "2758ab4a85da6120cd9eaff2b6ebfdf6c461a40f"}, "closed": true, "closedAt": "2020-09-15T19:27:26Z", "author": {"login": "markus7017"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI8ZufAH2gAyNDg2OTU1NTE4OjBiMjdiMTZlMjQyMDNiNjRmODdkNDI2NDFmOTA0MzVmZWIyMDQzOWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJJDxQgFqTQ4ODc3MzA4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0b27b16e24203b64f87d42641f90435feb20439d", "author": {"user": {"login": "markus7017", "name": "Markus Michels"}}, "url": "https://github.com/openhab/openhab-addons/commit/0b27b16e24203b64f87d42641f90435feb20439d", "committedDate": "2020-09-15T00:11:02Z", "message": "Adding retries for status pool and api request\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1305e1fe9435cedd0dca292bf15f508df868246d", "author": {"user": {"login": "markus7017", "name": "Markus Michels"}}, "url": "https://github.com/openhab/openhab-addons/commit/1305e1fe9435cedd0dca292bf15f508df868246d", "committedDate": "2020-09-15T00:11:02Z", "message": "README updated\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d30d347101582ef883fb4c4689425e7af6ccf199", "author": {"user": {"login": "markus7017", "name": "Markus Michels"}}, "url": "https://github.com/openhab/openhab-addons/commit/d30d347101582ef883fb4c4689425e7af6ccf199", "committedDate": "2020-09-15T00:21:56Z", "message": "Implements #8330: Swing Up/Down values 0-11\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MzY5Njkx", "url": "https://github.com/openhab/openhab-addons/pull/8472#pullrequestreview-488369691", "createdAt": "2020-09-15T06:44:13Z", "commit": {"oid": "d30d347101582ef883fb4c4689425e7af6ccf199"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjo0NDoxM1rOHRzABA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNjo1Mjo1N1rOHRzQig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyMzQyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | currentTemperature | Number:Temperature | Displays the current room temperature (if supported by unit, otherwise NaN).                                                   |\n          \n          \n            \n            | currentTemperature | Number:Temperature | Displays the current room temperature (if supported by unit, otherwise NaN).               |", "url": "https://github.com/openhab/openhab-addons/pull/8472#discussion_r488423428", "createdAt": "2020-09-15T06:44:13Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.gree/README.md", "diffHunk": "@@ -41,7 +41,7 @@ The following channels are supported for fans:\n |                    |           | Mode can be one of auto/cool/eco/dry/fan/heat or on/off                                           |\n |                    |           | Check the Air Conditioner's operating manual for supported modes.                                 |\n | temperature        | Number:Temperature | Sets the desired room temperature.                                                       |\n-| currentTemperature | Number:Temperature | Displays the current room temperature.                                                   |\n+| currentTemperature | Number:Temperature | Displays the current room temperature (if supported by unit, otherwise NaN).                                                   |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d30d347101582ef883fb4c4689425e7af6ccf199"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyNjkzMw==", "bodyText": "Just hope it will never gets 40 degrees C \ud83d\ude09", "url": "https://github.com/openhab/openhab-addons/pull/8472#discussion_r488426933", "createdAt": "2020-09-15T06:51:31Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.gree/src/main/java/org/openhab/binding/gree/internal/handler/GreeHandler.java", "diffHunk": "@@ -519,8 +545,11 @@ private void publishChannel(ChannelUID channelUID) {\n \n     private @Nullable State updateCurrentTemp() throws GreeException {\n         if (device.hasStatusValChanged(GREE_PROP_CURRENT_TEMP_SENSOR)) {\n-            return new DecimalType(device.getIntStatusVal(GREE_PROP_CURRENT_TEMP_SENSOR) + INTERNAL_TEMP_SENSOR_OFFSET\n-                    + config.currentTemperatureOffset.doubleValue());\n+            double temp = device.getIntStatusVal(GREE_PROP_CURRENT_TEMP_SENSOR);\n+            return temp != 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d30d347101582ef883fb4c4689425e7af6ccf199"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQyNzY1OA==", "bodyText": "Does it make sense to retry 3 times in a row without some wait time? (Not that add sleep would be a solution though...)", "url": "https://github.com/openhab/openhab-addons/pull/8472#discussion_r488427658", "createdAt": "2020-09-15T06:52:57Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.gree/src/main/java/org/openhab/binding/gree/internal/handler/GreeHandler.java", "diffHunk": "@@ -138,62 +140,78 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             String channelId = channelUID.getIdWithoutGroup();\n             logger.debug(\"{}: Handle command {} for channel {}, command class {}\", thingId, command, channelId,\n                     command.getClass());\n-            try {\n-                DatagramSocket socket = clientSocket.get();\n-                switch (channelId) {\n-                    case MODE_CHANNEL:\n-                        handleModeCommand(socket, command);\n-                        break;\n-                    case POWER_CHANNEL:\n-                        device.setDevicePower(socket, getOnOff(command));\n-                        break;\n-                    case TURBO_CHANNEL:\n-                        device.setDeviceTurbo(socket, getOnOff(command));\n-                        break;\n-                    case LIGHT_CHANNEL:\n-                        device.setDeviceLight(socket, getOnOff(command));\n-                        break;\n-                    case TARGET_TEMP_CHANNEL:\n-                        // Set value, read back effective one and update channel\n-                        // e.g. 22.5C will result in 22.0, because the AC doesn't support half-steps for C\n-                        device.setDeviceTempSet(socket, convertTemp(command));\n-                        break;\n-                    case SWINGUD_CHANNEL:\n-                        device.setDeviceSwingUpDown(socket, getNumber(command));\n-                        break;\n-                    case SWINGLR_CHANNEL:\n-                        device.setDeviceSwingLeftRight(socket, getNumber(command));\n-                        break;\n-                    case WINDSPEED_CHANNEL:\n-                        device.setDeviceWindspeed(socket, getNumber(command));\n-                        break;\n-                    case QUIET_CHANNEL:\n-                        handleQuietCommand(socket, command);\n-                        break;\n-                    case AIR_CHANNEL:\n-                        device.setDeviceAir(socket, getOnOff(command));\n-                        break;\n-                    case DRY_CHANNEL:\n-                        device.setDeviceDry(socket, getOnOff(command));\n-                        break;\n-                    case HEALTH_CHANNEL:\n-                        device.setDeviceHealth(socket, getOnOff(command));\n-                        break;\n-                    case PWRSAV_CHANNEL:\n-                        device.setDevicePwrSaving(socket, getOnOff(command));\n-                        break;\n+\n+            boolean retry = false;\n+            do {\n+                try {\n+                    retry = false;\n+                    sendRequest(channelId, command);\n+                    // force refresh on next status refresh cycle\n+                    forceRefresh = true;\n+                    apiRetries = 0;\n+                } catch (IllegalArgumentException e) {\n+                    logInfo(\"command.invarg\", command, channelId);\n+                } catch (GreeException e) {\n+                    apiRetries++;\n+                    if (apiRetries >= MAX_API_RETRIES) {\n+                        String message = logInfo(\n+                                messages.get(\"command.exception\", command, channelId) + \": \" + e.getMessage());\n+                        updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, message);\n+                    } else {\n+                        retry = true;\n+                        logger.debug(\"{}: Command {} failed for channel {}, retry\", thingId, command, channelId);\n+                    }\n+                } catch (RuntimeException e) {\n+                    logger.warn(\"{}: {}\", thingId, messages.get(\"command.exception\", command, channelId), e);\n                 }\n+            } while (retry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d30d347101582ef883fb4c4689425e7af6ccf199"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a875994587eaca47a55f83fc7a5b889a73464c0", "author": {"user": {"login": "markus7017", "name": "Markus Michels"}}, "url": "https://github.com/openhab/openhab-addons/commit/2a875994587eaca47a55f83fc7a5b889a73464c0", "committedDate": "2020-09-15T10:14:31Z", "message": "Missing text resources added for V-SwingUpDown 7-11\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faff853d275c965fdb5fed2db2a4c5dfc2e1e618", "author": {"user": {"login": "markus7017", "name": "Markus Michels"}}, "url": "https://github.com/openhab/openhab-addons/commit/faff853d275c965fdb5fed2db2a4c5dfc2e1e618", "committedDate": "2020-09-15T14:47:13Z", "message": "review changes\n\nSigned-off-by: Markus Michels <markus7017@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NzczMDg1", "url": "https://github.com/openhab/openhab-addons/pull/8472#pullrequestreview-488773085", "createdAt": "2020-09-15T14:55:49Z", "commit": {"oid": "faff853d275c965fdb5fed2db2a4c5dfc2e1e618"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4862, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}