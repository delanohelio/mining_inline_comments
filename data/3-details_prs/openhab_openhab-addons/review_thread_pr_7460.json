{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDYzMTgz", "number": 7460, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDo0MDowM1rOD1teQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDo0MDowM1rOD1teQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjQ2MTQ0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/api/FreeboxApiManager.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDo0MDowM1rOGLRnfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTo0Mjo1N1rOGLTu9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjE1OA==", "bodyText": "I have the feeling this will not be the same result.\nThe new call will add a space between each hexa value while the previous code did not.", "url": "https://github.com/openhab/openhab-addons/pull/7460#discussion_r414476158", "createdAt": "2020-04-24T10:40:03Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/api/FreeboxApiManager.java", "diffHunk": "@@ -493,11 +492,8 @@ private static String hmacSha1(String key, String value) throws FreeboxException\n             // Compute the hmac on input data bytes\n             byte[] rawHmac = mac.doFinal(value.getBytes());\n \n-            // Convert raw bytes to Hex\n-            byte[] hexBytes = new Hex().encode(rawHmac);\n-\n-            // Covert array of Hex bytes to a String\n-            return new String(hexBytes, StandardCharsets.UTF_8);\n+            // Convert raw bytes to a String\n+            return HexUtils.bytesToHex(rawHmac);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0cbf541c3f7e4c63f53c80501b7a0d0b1aac3c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4Mjc2NQ==", "bodyText": "It will work - check it out. I wrote a unit test for each change.\n    @Test\n    public void testFreebox() {\n        byte[] rawSubject = \"test\".getBytes(StandardCharsets.UTF_8);\n\n        byte[] hexBytes = new Hex().encode(rawSubject);\n        String subject = new String(hexBytes, StandardCharsets.UTF_8);\n\n        assertThat(subject, is(HexUtils.bytesToHex(rawSubject)));\n    }", "url": "https://github.com/openhab/openhab-addons/pull/7460#discussion_r414482765", "createdAt": "2020-04-24T10:52:03Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/api/FreeboxApiManager.java", "diffHunk": "@@ -493,11 +492,8 @@ private static String hmacSha1(String key, String value) throws FreeboxException\n             // Compute the hmac on input data bytes\n             byte[] rawHmac = mac.doFinal(value.getBytes());\n \n-            // Convert raw bytes to Hex\n-            byte[] hexBytes = new Hex().encode(rawHmac);\n-\n-            // Covert array of Hex bytes to a String\n-            return new String(hexBytes, StandardCharsets.UTF_8);\n+            // Convert raw bytes to a String\n+            return HexUtils.bytesToHex(rawHmac);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjE1OA=="}, "originalCommit": {"oid": "ec0cbf541c3f7e4c63f53c80501b7a0d0b1aac3c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4NTUxNw==", "bodyText": "Ok, if you are sure, that is fine for me.", "url": "https://github.com/openhab/openhab-addons/pull/7460#discussion_r414485517", "createdAt": "2020-04-24T10:56:58Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/api/FreeboxApiManager.java", "diffHunk": "@@ -493,11 +492,8 @@ private static String hmacSha1(String key, String value) throws FreeboxException\n             // Compute the hmac on input data bytes\n             byte[] rawHmac = mac.doFinal(value.getBytes());\n \n-            // Convert raw bytes to Hex\n-            byte[] hexBytes = new Hex().encode(rawHmac);\n-\n-            // Covert array of Hex bytes to a String\n-            return new String(hexBytes, StandardCharsets.UTF_8);\n+            // Convert raw bytes to a String\n+            return HexUtils.bytesToHex(rawHmac);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjE1OA=="}, "originalCommit": {"oid": "ec0cbf541c3f7e4c63f53c80501b7a0d0b1aac3c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5MjM5OQ==", "bodyText": "@lolodomo Then please remove your \"changes requested\" review :-)", "url": "https://github.com/openhab/openhab-addons/pull/7460#discussion_r414492399", "createdAt": "2020-04-24T11:09:51Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/api/FreeboxApiManager.java", "diffHunk": "@@ -493,11 +492,8 @@ private static String hmacSha1(String key, String value) throws FreeboxException\n             // Compute the hmac on input data bytes\n             byte[] rawHmac = mac.doFinal(value.getBytes());\n \n-            // Convert raw bytes to Hex\n-            byte[] hexBytes = new Hex().encode(rawHmac);\n-\n-            // Covert array of Hex bytes to a String\n-            return new String(hexBytes, StandardCharsets.UTF_8);\n+            // Convert raw bytes to a String\n+            return HexUtils.bytesToHex(rawHmac);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjE1OA=="}, "originalCommit": {"oid": "ec0cbf541c3f7e4c63f53c80501b7a0d0b1aac3c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMDQ1MA==", "bodyText": "I don't know how to suppress it !\nI approved it even if I check only the part relative to the Freebox binding.", "url": "https://github.com/openhab/openhab-addons/pull/7460#discussion_r414500450", "createdAt": "2020-04-24T11:24:13Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/api/FreeboxApiManager.java", "diffHunk": "@@ -493,11 +492,8 @@ private static String hmacSha1(String key, String value) throws FreeboxException\n             // Compute the hmac on input data bytes\n             byte[] rawHmac = mac.doFinal(value.getBytes());\n \n-            // Convert raw bytes to Hex\n-            byte[] hexBytes = new Hex().encode(rawHmac);\n-\n-            // Covert array of Hex bytes to a String\n-            return new String(hexBytes, StandardCharsets.UTF_8);\n+            // Convert raw bytes to a String\n+            return HexUtils.bytesToHex(rawHmac);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjE1OA=="}, "originalCommit": {"oid": "ec0cbf541c3f7e4c63f53c80501b7a0d0b1aac3c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwOTcyNQ==", "bodyText": "Seems you made it :-)", "url": "https://github.com/openhab/openhab-addons/pull/7460#discussion_r414509725", "createdAt": "2020-04-24T11:40:50Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/api/FreeboxApiManager.java", "diffHunk": "@@ -493,11 +492,8 @@ private static String hmacSha1(String key, String value) throws FreeboxException\n             // Compute the hmac on input data bytes\n             byte[] rawHmac = mac.doFinal(value.getBytes());\n \n-            // Convert raw bytes to Hex\n-            byte[] hexBytes = new Hex().encode(rawHmac);\n-\n-            // Covert array of Hex bytes to a String\n-            return new String(hexBytes, StandardCharsets.UTF_8);\n+            // Convert raw bytes to a String\n+            return HexUtils.bytesToHex(rawHmac);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjE1OA=="}, "originalCommit": {"oid": "ec0cbf541c3f7e4c63f53c80501b7a0d0b1aac3c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxMDgzOA==", "bodyText": "Yes, I approved it globally but only reviewed one part.", "url": "https://github.com/openhab/openhab-addons/pull/7460#discussion_r414510838", "createdAt": "2020-04-24T11:42:57Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.freebox/src/main/java/org/openhab/binding/freebox/internal/api/FreeboxApiManager.java", "diffHunk": "@@ -493,11 +492,8 @@ private static String hmacSha1(String key, String value) throws FreeboxException\n             // Compute the hmac on input data bytes\n             byte[] rawHmac = mac.doFinal(value.getBytes());\n \n-            // Convert raw bytes to Hex\n-            byte[] hexBytes = new Hex().encode(rawHmac);\n-\n-            // Covert array of Hex bytes to a String\n-            return new String(hexBytes, StandardCharsets.UTF_8);\n+            // Convert raw bytes to a String\n+            return HexUtils.bytesToHex(rawHmac);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjE1OA=="}, "originalCommit": {"oid": "ec0cbf541c3f7e4c63f53c80501b7a0d0b1aac3c"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 359, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}