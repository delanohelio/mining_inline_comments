{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNzQwOTAx", "number": 9228, "title": "[chromecast] Initialize connection to devices asynchronously", "bodyText": "Initialize connection to devices asynchronously to avoid slow initialization\n\n2020-12-04 08:34:25.273 [WARN ] [core.thing.internal.ThingManagerImpl] - Initializing handler for thing 'chromecast:chromecast:cc4c584bfcc8ccd3ab25986161374e62' takes more than 5000ms.\n\nSigned-off-by: Christoph Weitkamp github@christophweitkamp.de", "createdAt": "2020-12-04T19:30:44Z", "url": "https://github.com/openhab/openhab-addons/pull/9228", "merged": true, "mergeCommit": {"oid": "1822f77b076da8857da6815f2d104637778966af"}, "closed": true, "closedAt": "2021-04-09T19:55:00Z", "author": {"login": "cweitkamp"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjvPOQgFqTU0NTg1MjEwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABeLgzWGAFqTYzMjc0MzQ2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODUyMTAy", "url": "https://github.com/openhab/openhab-addons/pull/9228#pullrequestreview-545852102", "createdAt": "2020-12-07T06:06:42Z", "commit": {"oid": "980e97ec4d9c6276618a22103696bde26668088b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjowNjo0MlrOIAXT8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjowNjo0MlrOIAXT8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA==", "bodyText": "I think quickly cycling the handler (initialize->dispose->initialize) would cause multiple Coordinator instances to be created simultaneously and also lose track of one of them.", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r537252850", "createdAt": "2020-12-07T06:06:42Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java", "diffHunk": "@@ -88,26 +88,31 @@ public void initialize() {\n         ChromecastConfig config = getConfigAs(ChromecastConfig.class);\n \n         final String ipAddress = config.ipAddress;\n-        if (ipAddress == null || ipAddress.isEmpty()) {\n+        if (ipAddress == null || ipAddress.isBlank()) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.CONFIGURATION_ERROR,\n                     \"Cannot connect to Chromecast. IP address is not valid or missing.\");\n             return;\n         }\n \n-        Coordinator localCoordinator = coordinator;\n-        if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n-                || (localCoordinator.chromeCast.getPort() != config.port))) {\n-            localCoordinator.destroy();\n-            localCoordinator = coordinator = null;\n-        }\n+        updateStatus(ThingStatus.UNKNOWN);\n \n-        if (localCoordinator == null) {\n-            ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n-            localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n-                    callbackUrl);\n-            localCoordinator.initialize();\n-            coordinator = localCoordinator;\n-        }\n+        scheduler.submit(() -> {\n+            // initialize connection to devices asynchronously\n+            Coordinator localCoordinator = coordinator;\n+            if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n+                    || localCoordinator.chromeCast.getPort() != config.port)) {\n+                localCoordinator.destroy();\n+                localCoordinator = coordinator = null;\n+            }\n+\n+            if (localCoordinator == null) {\n+                ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n+                localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n+                        callbackUrl);\n+                localCoordinator.initialize();\n+                coordinator = localCoordinator;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "980e97ec4d9c6276618a22103696bde26668088b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d629b55c1d74d0b6c66a84286542fb538d87ec9f", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-addons/commit/d629b55c1d74d0b6c66a84286542fb538d87ec9f", "committedDate": "2021-04-09T10:38:17Z", "message": "Initialize connection to devices asynchronously\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "980e97ec4d9c6276618a22103696bde26668088b", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-addons/commit/980e97ec4d9c6276618a22103696bde26668088b", "committedDate": "2020-12-04T08:16:32Z", "message": "Initialize connection to devices asynchronously\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}, "afterCommit": {"oid": "d629b55c1d74d0b6c66a84286542fb538d87ec9f", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-addons/commit/d629b55c1d74d0b6c66a84286542fb538d87ec9f", "committedDate": "2021-04-09T10:38:17Z", "message": "Initialize connection to devices asynchronously\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMyNzQzNDY2", "url": "https://github.com/openhab/openhab-addons/pull/9228#pullrequestreview-632743466", "createdAt": "2021-04-09T19:54:36Z", "commit": {"oid": "d629b55c1d74d0b6c66a84286542fb538d87ec9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4002, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}