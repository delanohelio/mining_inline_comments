{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyODMwMTk2", "number": 8339, "title": "[Miio] Miio vacuum model extensions", "bodyText": "miio] Support Vacuum specific options\ncloses #6628\ncloses #6630\n\n\nCreate dynamic channels based on detected capabilities\n\n\nImprove status updates in case of missing values\n\n\nImplemented capabilities:\n\nwater_box_status\nwater_box_carriage_status\n\nWaterbox mode\nlockenabled\nMop forbidden\nroom clean", "createdAt": "2020-08-24T23:02:15Z", "url": "https://github.com/openhab/openhab-addons/pull/8339", "merged": true, "mergeCommit": {"oid": "219721ba597a787fbeb8761783d9e9ac9f8315e1"}, "closed": true, "closedAt": "2020-09-01T17:29:53Z", "author": {"login": "marcelrv"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCKCkAAH2gAyNDcyODMwMTk2OjA0MjNkOTM1ZmU0Mjc4MzU4NmY3YzQ3NTQzOGMyOTQyNzY4Mjg2OGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEq3JlgFqTQ3OTk2NzI3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0423d935fe42783586f7c475438c29427682868c", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/0423d935fe42783586f7c475438c29427682868c", "committedDate": "2020-08-24T22:06:56Z", "message": "[miio] Support Vacuum specific options\n\naddressing #6628\ncloses #6630\n\n* Create dynamic channels based on detected capabilities\n* Improve status updates in case of missing values\n\n* Implemented capabilities:\n\t- water_box_status\n\t- water_box_carriage_status\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec8de4e879e1599ffa7ae2aa9cb5d901c6b8d3e", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/1ec8de4e879e1599ffa7ae2aa9cb5d901c6b8d3e", "committedDate": "2020-08-24T22:31:22Z", "message": "[miio] add additional dynamic channels\n\n* Waterbox mode\n* lockenabled\n* Mop forbidden\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "243590c0abb7a47d46ba3dd90d9cb6ac455920df", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/243590c0abb7a47d46ba3dd90d9cb6ac455920df", "committedDate": "2020-08-24T22:52:43Z", "message": "[miio] add zone cleaning command\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2387f8be2ba9c52794d645ab645501944a5a4e0", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/c2387f8be2ba9c52794d645ab645501944a5a4e0", "committedDate": "2020-08-25T13:54:36Z", "message": "[miio] remove room # once roomclean has been initated\n\nremove room # once roomclean has been initated\nSend only valid room nrs\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "768418399a98bc080887308d39c501cda9ccbaed", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/768418399a98bc080887308d39c501cda9ccbaed", "committedDate": "2020-08-25T18:31:26Z", "message": "[miio] Update readme\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab4409e5f5a20b8995159a8b5a47cfa841448667", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/ab4409e5f5a20b8995159a8b5a47cfa841448667", "committedDate": "2020-08-26T21:53:15Z", "message": "[miio] improvements after feedback\n\nFix channel\nImprove channel description\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "120ac1ae52068f4f09cf81bf42bc9169166faa8b", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/120ac1ae52068f4f09cf81bf42bc9169166faa8b", "committedDate": "2020-08-26T22:10:29Z", "message": "[miio] fix xml format\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5MDAzNTkz", "url": "https://github.com/openhab/openhab-addons/pull/8339#pullrequestreview-479003593", "createdAt": "2020-08-31T22:21:00Z", "commit": {"oid": "120ac1ae52068f4f09cf81bf42bc9169166faa8b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjoyMTowMFrOHKLLkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMjo0MToxMVrOHKL9Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQzMDk5NA==", "bodyText": "Why are you adding a gitignore file here?", "url": "https://github.com/openhab/openhab-addons/pull/8339#discussion_r480430994", "createdAt": "2020-08-31T22:21:00Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/.gitignore", "diffHunk": "@@ -0,0 +1 @@\n+/RoboMapViewer.java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120ac1ae52068f4f09cf81bf42bc9169166faa8b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQzMzA5OQ==", "bodyText": "please put static fields above non-static fields", "url": "https://github.com/openhab/openhab-addons/pull/8339#discussion_r480433099", "createdAt": "2020-08-31T22:25:56Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java", "diffHunk": "@@ -86,11 +97,16 @@\n     private String lastHistoryId = \"\";\n     private String lastMap = \"\";\n     private CloudConnector cloudConnector;\n+    private boolean hasChannelStructure;\n+    private ConcurrentHashMap<RobotCababilities, Boolean> deviceCapabilities = new ConcurrentHashMap<>();\n+    private ChannelTypeRegistry channelTypeRegistry;\n+    private static final Gson GSON = new GsonBuilder().serializeNulls().create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120ac1ae52068f4f09cf81bf42bc9169166faa8b"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQzNjU4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            case CHARGING:\n          \n          \n            \n                                control = \"dock\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case CHARGING_ERROR:\n          \n          \n            \n                                control = \"dock\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case DOCKING:\n          \n          \n            \n                                control = \"dock\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case FULL:\n          \n          \n            \n                                control = \"dock\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case IDLE:\n          \n          \n            \n                                control = \"pause\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case PAUSED:\n          \n          \n            \n                                control = \"pause\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case RETURNING:\n          \n          \n            \n                                control = \"dock\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case SLEEPING:\n          \n          \n            \n                                control = \"pause\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case SPOTCLEAN:\n          \n          \n            \n                                control = \"spot\";\n          \n          \n            \n                                vacuum = OnOffType.ON;\n          \n          \n            \n                                break;\n          \n          \n            \n                            case CHARGING:\n          \n          \n            \n                            case CHARGING_ERROR:\n          \n          \n            \n                            case DOCKING:\n          \n          \n            \n                            case FULL:\n          \n          \n            \n                            case RETURNING:\n          \n          \n            \n                                control = \"dock\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case IDLE:\n          \n          \n            \n                            case PAUSED:\n          \n          \n            \n                            case SLEEPING:\n          \n          \n            \n                                control = \"pause\";\n          \n          \n            \n                                break;\n          \n          \n            \n                            case SPOTCLEAN:\n          \n          \n            \n                                control = \"spot\";\n          \n          \n            \n                                vacuum = OnOffType.ON;\n          \n          \n            \n                                break;", "url": "https://github.com/openhab/openhab-addons/pull/8339#discussion_r480436588", "createdAt": "2020-08-31T22:30:53Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java", "diffHunk": "@@ -226,69 +253,105 @@ private void forceStatusUpdate() {\n         status.getValue();\n     }\n \n+    private void safeUpdateState(String channelID, @Nullable Integer state) {\n+        if (state != null) {\n+            updateState(channelID, new DecimalType(state));\n+        } else {\n+            logger.debug(\"Channel {} not update. value not available.\", channelID);\n+        }\n+    }\n+\n     private boolean updateVacuumStatus(JsonObject statusData) {\n-        updateState(CHANNEL_BATTERY, new DecimalType(statusData.get(\"battery\").getAsBigDecimal()));\n-        updateState(CHANNEL_CLEAN_AREA, new DecimalType(statusData.get(\"clean_area\").getAsDouble() / 1000000.0));\n-        updateState(CHANNEL_CLEAN_TIME,\n-                new DecimalType(TimeUnit.SECONDS.toMinutes(statusData.get(\"clean_time\").getAsLong())));\n-        updateState(CHANNEL_DND_ENABLED, new DecimalType(statusData.get(\"dnd_enabled\").getAsBigDecimal()));\n-        updateState(CHANNEL_ERROR_CODE,\n-                new StringType(VacuumErrorType.getType(statusData.get(\"error_code\").getAsInt()).getDescription()));\n-        updateState(CHANNEL_ERROR_ID, new DecimalType(statusData.get(\"error_code\").getAsInt()));\n-        int fanLevel = statusData.get(\"fan_power\").getAsInt();\n-        updateState(CHANNEL_FAN_POWER, new DecimalType(fanLevel));\n-        updateState(CHANNEL_FAN_CONTROL, new DecimalType(FanModeType.getType(fanLevel).getId()));\n-        updateState(CHANNEL_IN_CLEANING, new DecimalType(statusData.get(\"in_cleaning\").getAsInt()));\n-        updateState(CHANNEL_MAP_PRESENT, new DecimalType(statusData.get(\"map_present\").getAsBigDecimal()));\n-        StatusType state = StatusType.getType(statusData.get(\"state\").getAsInt());\n-        updateState(CHANNEL_STATE, new StringType(state.getDescription()));\n-        stateId = statusData.get(\"state\").getAsInt();\n-        updateState(CHANNEL_STATE_ID, new DecimalType(stateId));\n-        State vacuum = OnOffType.OFF;\n-        String control;\n-        switch (state) {\n-            case CLEANING:\n-                control = \"vacuum\";\n-                vacuum = OnOffType.ON;\n-                break;\n-            case CHARGING:\n-                control = \"dock\";\n-                break;\n-            case CHARGING_ERROR:\n-                control = \"dock\";\n-                break;\n-            case DOCKING:\n-                control = \"dock\";\n-                break;\n-            case FULL:\n-                control = \"dock\";\n-                break;\n-            case IDLE:\n-                control = \"pause\";\n-                break;\n-            case PAUSED:\n-                control = \"pause\";\n-                break;\n-            case RETURNING:\n-                control = \"dock\";\n-                break;\n-            case SLEEPING:\n-                control = \"pause\";\n-                break;\n-            case SPOTCLEAN:\n-                control = \"spot\";\n-                vacuum = OnOffType.ON;\n-                break;\n-            default:\n-                control = \"undef\";\n-                break;\n+        StatusDTO statusInfo = GSON.fromJson(statusData, StatusDTO.class);\n+        safeUpdateState(CHANNEL_BATTERY, statusInfo.getBattery());\n+        if (statusInfo.getCleanArea() != null) {\n+            updateState(CHANNEL_CLEAN_AREA, new DecimalType(statusInfo.getCleanArea() / 1000000.0));\n         }\n-        if (control.equals(\"undef\")) {\n-            updateState(CHANNEL_CONTROL, UnDefType.UNDEF);\n-        } else {\n-            updateState(CHANNEL_CONTROL, new StringType(control));\n+        if (statusInfo.getCleanTime() != null) {\n+            updateState(CHANNEL_CLEAN_TIME, new DecimalType(TimeUnit.SECONDS.toMinutes(statusInfo.getCleanTime())));\n+        }\n+        safeUpdateState(CHANNEL_DND_ENABLED, statusInfo.getDndEnabled());\n+\n+        if (statusInfo.getErrorCode() != null) {\n+            updateState(CHANNEL_ERROR_CODE,\n+                    new StringType(VacuumErrorType.getType(statusInfo.getErrorCode()).getDescription()));\n+            safeUpdateState(CHANNEL_ERROR_ID, statusInfo.getErrorCode());\n+        }\n+\n+        if (statusInfo.getFanPower() != null) {\n+            updateState(CHANNEL_FAN_POWER, new DecimalType(statusInfo.getFanPower()));\n+            updateState(CHANNEL_FAN_CONTROL, new DecimalType(FanModeType.getType(statusInfo.getFanPower()).getId()));\n+        }\n+        safeUpdateState(CHANNEL_IN_CLEANING, statusInfo.getInCleaning());\n+        safeUpdateState(CHANNEL_MAP_PRESENT, statusInfo.getMapPresent());\n+        if (statusInfo.getState() != null) {\n+            StatusType state = StatusType.getType(statusInfo.getState());\n+            updateState(CHANNEL_STATE, new StringType(state.getDescription()));\n+            updateState(CHANNEL_STATE_ID, new DecimalType(statusInfo.getState()));\n+\n+            State vacuum = OnOffType.OFF;\n+            String control;\n+            switch (state) {\n+                case ZONE:\n+                case ROOM:\n+                case CLEANING:\n+                    control = \"vacuum\";\n+                    vacuum = OnOffType.ON;\n+                    break;\n+                case CHARGING:\n+                    control = \"dock\";\n+                    break;\n+                case CHARGING_ERROR:\n+                    control = \"dock\";\n+                    break;\n+                case DOCKING:\n+                    control = \"dock\";\n+                    break;\n+                case FULL:\n+                    control = \"dock\";\n+                    break;\n+                case IDLE:\n+                    control = \"pause\";\n+                    break;\n+                case PAUSED:\n+                    control = \"pause\";\n+                    break;\n+                case RETURNING:\n+                    control = \"dock\";\n+                    break;\n+                case SLEEPING:\n+                    control = \"pause\";\n+                    break;\n+                case SPOTCLEAN:\n+                    control = \"spot\";\n+                    vacuum = OnOffType.ON;\n+                    break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120ac1ae52068f4f09cf81bf42bc9169166faa8b"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ0MzY3OQ==", "bodyText": "One of the few times that streams improves readability.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            for (Channel ch : thing.getChannels()) {\n          \n          \n            \n                                logger.debug(\"Channel :{}, Channeltype UID: {}\", ch.getUID(), ch.getChannelTypeUID());\n          \n          \n            \n                                if (ch.getUID().getId().equalsIgnoreCase(capability.getChannel())) {\n          \n          \n            \n                                    logger.debug(\"Channel already available...skip creation of channel '{}'.\",\n          \n          \n            \n                                            capability.getChannel());\n          \n          \n            \n                                    deviceCapabilities.replace(capability, true);\n          \n          \n            \n                                    channelfound = true;\n          \n          \n            \n                                    break;\n          \n          \n            \n                                }\n          \n          \n            \n                            }\n          \n          \n            \n                            if (channelfound) {\n          \n          \n            \n                                break;\n          \n          \n            \n                            }\n          \n          \n            \n                            if(thing.getChannels().stream()\n          \n          \n            \n                                    .anyMatch(ch -> ch.getUID().getId().equalsIgnoreCase(capability.getChannel()))) {\n          \n          \n            \n                                logger.debug(\"Channel already available...skip creation of channel '{}'.\",\n          \n          \n            \n                                        capability.getChannel());\n          \n          \n            \n                                deviceCapabilities.replace(capability, true);\n          \n          \n            \n                                continue;\n          \n          \n            \n                            }\n          \n      \n    \n    \n  \n\nAlso, I think you intended to continue instead of break in your initial code.", "url": "https://github.com/openhab/openhab-addons/pull/8339#discussion_r480443679", "createdAt": "2020-08-31T22:41:11Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/handler/MiIoVacuumHandler.java", "diffHunk": "@@ -468,6 +542,62 @@ public void onMessageReceived(MiIoSendCommand response) {\n         }\n     }\n \n+    private void setCapabilities(JsonObject statusResponse) {\n+        for (RobotCababilities capability : RobotCababilities.values()) {\n+            if (statusResponse.has(capability.getStatusFieldName())) {\n+                deviceCapabilities.putIfAbsent(capability, false);\n+                logger.debug(\"Setting additional vacuum {}\", capability);\n+            }\n+        }\n+    }\n+\n+    private void createCapabilityChannels() {\n+        ThingBuilder thingBuilder = editThing();\n+        int cnt = 0;\n+\n+        for (Entry<RobotCababilities, Boolean> robotCapability : deviceCapabilities.entrySet()) {\n+            RobotCababilities capability = robotCapability.getKey();\n+            Boolean channelCreated = robotCapability.getValue();\n+            boolean channelfound = false;\n+            if (!channelCreated) {\n+                for (Channel ch : thing.getChannels()) {\n+                    logger.debug(\"Channel :{}, Channeltype UID: {}\", ch.getUID(), ch.getChannelTypeUID());\n+                    if (ch.getUID().getId().equalsIgnoreCase(capability.getChannel())) {\n+                        logger.debug(\"Channel already available...skip creation of channel '{}'.\",\n+                                capability.getChannel());\n+                        deviceCapabilities.replace(capability, true);\n+                        channelfound = true;\n+                        break;\n+                    }\n+                }\n+                if (channelfound) {\n+                    break;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "120ac1ae52068f4f09cf81bf42bc9169166faa8b"}, "originalPosition": 304}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d42c5ae5366792521625b3982ee4d6854f615ab", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/5d42c5ae5366792521625b3982ee4d6854f615ab", "committedDate": "2020-09-01T14:40:06Z", "message": "[miio] update with review suggestions\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTY3Mjcw", "url": "https://github.com/openhab/openhab-addons/pull/8339#pullrequestreview-479967270", "createdAt": "2020-09-01T17:29:11Z", "commit": {"oid": "5d42c5ae5366792521625b3982ee4d6854f615ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 56, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}