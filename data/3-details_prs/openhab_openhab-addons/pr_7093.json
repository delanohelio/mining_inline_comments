{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMzk5MDMx", "number": 7093, "title": "[valloxmv] additional channels support", "bodyText": "Added support for additional channels, as per here:\nhttps://community.openhab.org/t/new-binding-vallox-mv-ventilation-unit-series-beta/36735/102\nThis is still to do, not sure what is the best way to do it (added comment about this into code):\n\nfor timer profiles, use timer value from that profile settings instead of \u201chardcoded\u201d value in binding code\nI am thinking that these values should be asked from Vallox device before changing to Fireplace or Boost profile. In general these values have been received from full data update, but not sure if we can save values for later use - if we could, then a separate data request would not be needed.", "createdAt": "2020-03-04T08:09:23Z", "url": "https://github.com/openhab/openhab-addons/pull/7093", "merged": true, "mergeCommit": {"oid": "6a205403dea156395dd512ef960bcf3e22df65a7"}, "closed": true, "closedAt": "2020-03-29T19:27:49Z", "author": {"login": "anttiisoaho"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKR7XKgH2gAyMzgzMzk5MDMxOjI2NGQyMTBjODc0YmQzNGQ3MmM5NGEwYmQyNmZjNWRjYTZhOTMyOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSfBGvgFqTM4MzQ0NTY2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "264d210c874bd34d72c94a0bd26fc5dca6a9328a", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/264d210c874bd34d72c94a0bd26fc5dca6a9328a", "committedDate": "2020-03-04T07:38:33Z", "message": "Additional channels into ValloxMV binding: https://community.openhab.org/t/new-binding-vallox-mv-ventilation-unit-series-beta/36735/102"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MDM0MTk1", "url": "https://github.com/openhab/openhab-addons/pull/7093#pullrequestreview-369034195", "createdAt": "2020-03-04T18:52:07Z", "commit": {"oid": "264d210c874bd34d72c94a0bd26fc5dca6a9328a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODo1MjowOFrOFx5Z-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowMToyN1rOFx5t3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2NTA4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                // Convert temperature to centKelvin (= (Celsius * 100) + 27315 )\n          \n          \n            \n                                // Convert temperature to centiKelvin (= (Celsius * 100) + 27315 )", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r387865083", "createdAt": "2020-03-04T18:52:08Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVHandler.java", "diffHunk": "@@ -107,14 +107,14 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                 }\n             } else if (ValloxMVBindingConstants.WRITABLE_CHANNELS_TEMPERATURE.contains(channelUID.getId())) {\n                 if (command instanceof QuantityType) {\n-                    // Convert temperature to millidegree Kelvin\n+                    // Convert temperature to centKelvin (= (Celsius * 100) + 27315 )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264d210c874bd34d72c94a0bd26fc5dca6a9328a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2NTIzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                int centKelvin = quantity.multiply(new BigDecimal(100)).intValue();\n          \n          \n            \n                                int centiKelvin = quantity.multiply(new BigDecimal(100)).intValue();", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r387865234", "createdAt": "2020-03-04T18:52:27Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVHandler.java", "diffHunk": "@@ -107,14 +107,14 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                 }\n             } else if (ValloxMVBindingConstants.WRITABLE_CHANNELS_TEMPERATURE.contains(channelUID.getId())) {\n                 if (command instanceof QuantityType) {\n-                    // Convert temperature to millidegree Kelvin\n+                    // Convert temperature to centKelvin (= (Celsius * 100) + 27315 )\n                     QuantityType<Temperature> quantity = ((QuantityType<Temperature>) command)\n                             .toUnit(SmartHomeUnits.KELVIN);\n                     if (quantity == null) {\n                         return;\n                     }\n-                    int milliKelvin = quantity.multiply(new BigDecimal(100)).intValue();\n-                    valloxSendSocket.request(channelUID, Integer.toString(milliKelvin));\n+                    int centKelvin = quantity.multiply(new BigDecimal(100)).intValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264d210c874bd34d72c94a0bd26fc5dca6a9328a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2NTU1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                valloxSendSocket.request(channelUID, Integer.toString(centKelvin));\n          \n          \n            \n                                valloxSendSocket.request(channelUID, Integer.toString(centiKelvin));", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r387865554", "createdAt": "2020-03-04T18:53:02Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVHandler.java", "diffHunk": "@@ -107,14 +107,14 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                 }\n             } else if (ValloxMVBindingConstants.WRITABLE_CHANNELS_TEMPERATURE.contains(channelUID.getId())) {\n                 if (command instanceof QuantityType) {\n-                    // Convert temperature to millidegree Kelvin\n+                    // Convert temperature to centKelvin (= (Celsius * 100) + 27315 )\n                     QuantityType<Temperature> quantity = ((QuantityType<Temperature>) command)\n                             .toUnit(SmartHomeUnits.KELVIN);\n                     if (quantity == null) {\n                         return;\n                     }\n-                    int milliKelvin = quantity.multiply(new BigDecimal(100)).intValue();\n-                    valloxSendSocket.request(channelUID, Integer.toString(milliKelvin));\n+                    int centKelvin = quantity.multiply(new BigDecimal(100)).intValue();\n+                    valloxSendSocket.request(channelUID, Integer.toString(centKelvin));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264d210c874bd34d72c94a0bd26fc5dca6a9328a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2ODQ2NQ==", "bodyText": "Since Java7 we can switch on String. Especiually with the large number of else taht have been added with this PR it would make sense to refactor that (channelUID.getId()would only be called once then)", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r387868465", "createdAt": "2020-03-04T18:58:19Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVWebSocket.java", "diffHunk": "@@ -173,8 +181,13 @@ public ByteBuffer generateRequest() {\n             if (ValloxMVBindingConstants.CHANNEL_STATE.equals(channelUID.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264d210c874bd34d72c94a0bd26fc5dca6a9328a"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3MDE3Mw==", "bodyText": "This sounds like a perfect match for Switch. Is there any special reason why you chose to implement it as Number? (also applies for the other enable/disable channels)\nYou could use OnOffType.from(value == 1) when reading and state.as(DecimalType.class).intValue() for writing.", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r387870173", "createdAt": "2020-03-04T19:01:27Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/resources/ESH-INF/thing/thing-types.xml", "diffHunk": "@@ -246,4 +258,110 @@\n \t\t<category>Temperature</category>\n \t\t<state pattern=\"%.2f %unit%\" readOnly=\"false\" />\n \t</channel-type>\n+\n+\t<channel-type id=\"boosttime\">\n+\t\t<item-type>Number:Dimensionless</item-type>\n+\t\t<label>Boost profile timer value</label>\n+\t\t<description>Boost profile timer value in minutes</description>\n+\t\t<state readOnly=\"false\" min=\"1\" max=\"65535\" pattern=\"%d min\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"boosttimerenabled\">\n+\t\t<item-type>Number:Dimensionless</item-type>\n+\t\t<label>Boost profile timer enabled</label>\n+\t\t<description>Timer enabled setting in boost profile</description>\n+\t\t<state readOnly=\"false\">\n+\t\t\t<options>\n+\t\t\t\t<option value=\"1\">Enabled</option>\n+\t\t\t\t<option value=\"0\">Disabled</option>\n+\t\t\t</options>\n+\t\t</state>\n+\t</channel-type>\n+\n+\t<channel-type id=\"fireplaceextrfan\" advanced=\"true\">\n+\t\t<item-type>Number:Dimensionless</item-type>\n+\t\t<label>Fireplace extract fan speed</label>\n+\t\t<description>Fireplace profile extract fan speed in % (0-100)</description>\n+\t\t<state readOnly=\"false\" min=\"0\" max=\"100\" pattern=\"%d %%\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"fireplacesuppfan\" advanced=\"true\">\n+\t\t<item-type>Number:Dimensionless</item-type>\n+\t\t<label>Fireplace supply fan speed</label>\n+\t\t<description>Fireplace profile supply fan speed in % (0-100)</description>\n+\t\t<state readOnly=\"false\" min=\"0\" max=\"100\" pattern=\"%d %%\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"fireplacetime\">\n+\t\t<item-type>Number:Dimensionless</item-type>\n+\t\t<label>Fireplace profile timer value</label>\n+\t\t<description>Fireplace profile timer value in minutes</description>\n+\t\t<state readOnly=\"false\" min=\"1\" max=\"65535\" pattern=\"%d min\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"fireplacetimerenabled\">\n+\t\t<item-type>Number:Dimensionless</item-type>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264d210c874bd34d72c94a0bd26fc5dca6a9328a"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8589ac26029e4f32d4989f3eca9aca9afd1c20d", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/b8589ac26029e4f32d4989f3eca9aca9afd1c20d", "committedDate": "2020-03-05T06:21:52Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: J-N-K <J-N-K@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "709082c88c7538186680f909dc5291488db1c60e", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/709082c88c7538186680f909dc5291488db1c60e", "committedDate": "2020-03-05T09:05:16Z", "message": "Suggestions partially implemented, few channels still need to be changed to Switches\n\nSigned-off-by: aisoaho <aisoaho@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNDc3OTIy", "url": "https://github.com/openhab/openhab-addons/pull/7093#pullrequestreview-370477922", "createdAt": "2020-03-06T16:57:29Z", "commit": {"oid": "709082c88c7538186680f909dc5291488db1c60e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNjo1NzoyOVrOFzAB1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzowNDoxMlrOFzAXGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyMjE2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Integer intUpdateState = Integer.parseInt(updateState);\n          \n          \n            \n                        int intUpdateState = Integer.parseInt(updateState);", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r389022166", "createdAt": "2020-03-06T16:57:29Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVWebSocket.java", "diffHunk": "@@ -177,9 +177,11 @@ public ByteBuffer generateRequest() {\n                 // requestData (Length 3, Command to get data 246, empty set, checksum [sum of everything before])\n                 return generateCustomRequest(246, new HashMap<Integer, Integer>());\n             }\n+            String strChannelUIDid = channelUID.getId();\n+            Integer intUpdateState = Integer.parseInt(updateState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709082c88c7538186680f909dc5291488db1c60e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyMjIzMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (ValloxMVBindingConstants.CHANNEL_STATE == strChannelUIDid) {\n          \n          \n            \n                            if (intUpdateState == ValloxMVBindingConstants.STATE_FIREPLACE) {\n          \n          \n            \n                        switch (strChannelUIDid) {\n          \n          \n            \n                            case ValloxMVBindingConstants.CHANNEL_STATE:\n          \n          \n            \n                                switch (intUpdateState) {\n          \n          \n            \n                                    case ValloxMVBindingConstants.STATE_FIREPLACE:", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r389022233", "createdAt": "2020-03-06T16:57:35Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVWebSocket.java", "diffHunk": "@@ -177,9 +177,11 @@ public ByteBuffer generateRequest() {\n                 // requestData (Length 3, Command to get data 246, empty set, checksum [sum of everything before])\n                 return generateCustomRequest(246, new HashMap<Integer, Integer>());\n             }\n+            String strChannelUIDid = channelUID.getId();\n+            Integer intUpdateState = Integer.parseInt(updateState);\n             Map<Integer, Integer> request = new HashMap<>();\n-            if (ValloxMVBindingConstants.CHANNEL_STATE.equals(channelUID.getId())) {\n-                if (Integer.parseInt(updateState) == ValloxMVBindingConstants.STATE_FIREPLACE) {\n+            if (ValloxMVBindingConstants.CHANNEL_STATE == strChannelUIDid) {\n+                if (intUpdateState == ValloxMVBindingConstants.STATE_FIREPLACE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709082c88c7538186680f909dc5291488db1c60e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyNjM2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            } else if (intUpdateState == ValloxMVBindingConstants.STATE_ATHOME) {\n          \n          \n            \n                                break;\n          \n          \n            \n                            case ValloxMVBindingConstants.STATE_ATHOME:", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r389026365", "createdAt": "2020-03-06T17:01:41Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVWebSocket.java", "diffHunk": "@@ -190,19 +192,19 @@ public ByteBuffer generateRequest() {\n                     // Note: we should be able to request 2 values at a time, same if clause could be used for both\n                     request.put(4612, 0);\n                     request.put(4613, 15);\n-                } else if (Integer.parseInt(updateState) == ValloxMVBindingConstants.STATE_ATHOME) {\n+                } else if (intUpdateState == ValloxMVBindingConstants.STATE_ATHOME) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709082c88c7538186680f909dc5291488db1c60e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyNjkwNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if (ValloxMVBindingConstants.CHANNEL_ONOFF == strChannelUIDid) {\n          \n          \n            \n                            default:\n          \n          \n            \n                        }\n          \n          \n            \n                        break;\n          \n          \n            \n                        case ValloxMVBindingConstants.CHANNEL_ONOFF:", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r389026904", "createdAt": "2020-03-06T17:02:46Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVWebSocket.java", "diffHunk": "@@ -214,48 +216,48 @@ public ByteBuffer generateRequest() {\n                     request.put(4612, 30);\n                     request.put(4613, 0);\n                 }\n-            } else if (ValloxMVBindingConstants.CHANNEL_ONOFF.equals(channelUID.getId())) {\n-                request.put(4610, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTR_FAN_BALANCE_BASE.equals(channelUID.getId())) {\n-                request.put(20485, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_SUPP_FAN_BALANCE_BASE.equals(channelUID.getId())) {\n-                request.put(20486, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_HOME_SPEED_SETTING.equals(channelUID.getId())) {\n-                request.put(20507, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_AWAY_SPEED_SETTING.equals(channelUID.getId())) {\n-                request.put(20501, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_SPEED_SETTING.equals(channelUID.getId())) {\n-                request.put(20513, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_HOME_AIR_TEMP_TARGET.equals(channelUID.getId())) {\n-                request.put(20508, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_AWAY_AIR_TEMP_TARGET.equals(channelUID.getId())) {\n-                request.put(20502, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_AIR_TEMP_TARGET.equals(channelUID.getId())) {\n-                request.put(20514, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_TIME.equals(channelUID.getId())) {\n-                request.put(20544, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_TIMER_ENABLED.equals(channelUID.getId())) {\n-                request.put(21766, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_EXTR_FAN.equals(channelUID.getId())) {\n-                request.put(20487, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_SUPP_FAN.equals(channelUID.getId())) {\n-                request.put(20488, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_TIME.equals(channelUID.getId())) {\n-                request.put(20545, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_TIMER_ENABLED.equals(channelUID.getId())) {\n-                request.put(21767, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_AIR_TEMP_TARGET.equals(channelUID.getId())) {\n-                request.put(20493, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_EXTR_FAN.equals(channelUID.getId())) {\n-                request.put(20494, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_SUPP_FAN.equals(channelUID.getId())) {\n-                request.put(20495, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_TIME.equals(channelUID.getId())) {\n-                request.put(20496, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_TIMER_ENABLED.equals(channelUID.getId())) {\n-                request.put(21772, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_WEEKLY_TIMER_ENABLED.equals(channelUID.getId())) {\n-                request.put(4615, Integer.parseInt(updateState));\n+            } else if (ValloxMVBindingConstants.CHANNEL_ONOFF == strChannelUIDid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709082c88c7538186680f909dc5291488db1c60e"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTAyNzYxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if (ValloxMVBindingConstants.CHANNEL_WEEKLY_TIMER_ENABLED == strChannelUIDid) {\n          \n          \n            \n                            request.put(4615, intUpdateState);\n          \n          \n            \n                        } else {\n          \n          \n            \n                            return null;\n          \n          \n            \n                        }\n          \n          \n            \n                            case ValloxMVBindingConstants.CHANNEL_WEEKLY_TIMER_ENABLED:\n          \n          \n            \n                                request.put(4615, intUpdateState);\n          \n          \n            \n                                break;\n          \n          \n            \n                            default:\n          \n          \n            \n                                return null;\n          \n          \n            \n                        }", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r389027611", "createdAt": "2020-03-06T17:04:12Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVWebSocket.java", "diffHunk": "@@ -214,48 +216,48 @@ public ByteBuffer generateRequest() {\n                     request.put(4612, 30);\n                     request.put(4613, 0);\n                 }\n-            } else if (ValloxMVBindingConstants.CHANNEL_ONOFF.equals(channelUID.getId())) {\n-                request.put(4610, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTR_FAN_BALANCE_BASE.equals(channelUID.getId())) {\n-                request.put(20485, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_SUPP_FAN_BALANCE_BASE.equals(channelUID.getId())) {\n-                request.put(20486, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_HOME_SPEED_SETTING.equals(channelUID.getId())) {\n-                request.put(20507, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_AWAY_SPEED_SETTING.equals(channelUID.getId())) {\n-                request.put(20501, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_SPEED_SETTING.equals(channelUID.getId())) {\n-                request.put(20513, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_HOME_AIR_TEMP_TARGET.equals(channelUID.getId())) {\n-                request.put(20508, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_AWAY_AIR_TEMP_TARGET.equals(channelUID.getId())) {\n-                request.put(20502, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_AIR_TEMP_TARGET.equals(channelUID.getId())) {\n-                request.put(20514, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_TIME.equals(channelUID.getId())) {\n-                request.put(20544, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_TIMER_ENABLED.equals(channelUID.getId())) {\n-                request.put(21766, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_EXTR_FAN.equals(channelUID.getId())) {\n-                request.put(20487, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_SUPP_FAN.equals(channelUID.getId())) {\n-                request.put(20488, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_TIME.equals(channelUID.getId())) {\n-                request.put(20545, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_TIMER_ENABLED.equals(channelUID.getId())) {\n-                request.put(21767, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_AIR_TEMP_TARGET.equals(channelUID.getId())) {\n-                request.put(20493, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_EXTR_FAN.equals(channelUID.getId())) {\n-                request.put(20494, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_SUPP_FAN.equals(channelUID.getId())) {\n-                request.put(20495, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_TIME.equals(channelUID.getId())) {\n-                request.put(20496, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_TIMER_ENABLED.equals(channelUID.getId())) {\n-                request.put(21772, Integer.parseInt(updateState));\n-            } else if (ValloxMVBindingConstants.CHANNEL_WEEKLY_TIMER_ENABLED.equals(channelUID.getId())) {\n-                request.put(4615, Integer.parseInt(updateState));\n+            } else if (ValloxMVBindingConstants.CHANNEL_ONOFF == strChannelUIDid) {\n+                request.put(4610, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_EXTR_FAN_BALANCE_BASE == strChannelUIDid) {\n+                request.put(20485, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_SUPP_FAN_BALANCE_BASE == strChannelUIDid) {\n+                request.put(20486, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_HOME_SPEED_SETTING == strChannelUIDid) {\n+                request.put(20507, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_AWAY_SPEED_SETTING == strChannelUIDid) {\n+                request.put(20501, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_SPEED_SETTING == strChannelUIDid) {\n+                request.put(20513, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_HOME_AIR_TEMP_TARGET == strChannelUIDid) {\n+                request.put(20508, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_AWAY_AIR_TEMP_TARGET == strChannelUIDid) {\n+                request.put(20502, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_AIR_TEMP_TARGET == strChannelUIDid) {\n+                request.put(20514, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_TIME == strChannelUIDid) {\n+                request.put(20544, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_BOOST_TIMER_ENABLED == strChannelUIDid) {\n+                request.put(21766, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_EXTR_FAN == strChannelUIDid) {\n+                request.put(20487, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_SUPP_FAN == strChannelUIDid) {\n+                request.put(20488, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_TIME == strChannelUIDid) {\n+                request.put(20545, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_FIREPLACE_TIMER_ENABLED == strChannelUIDid) {\n+                request.put(21767, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_AIR_TEMP_TARGET == strChannelUIDid) {\n+                request.put(20493, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_EXTR_FAN == strChannelUIDid) {\n+                request.put(20494, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_SUPP_FAN == strChannelUIDid) {\n+                request.put(20495, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_TIME == strChannelUIDid) {\n+                request.put(20496, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_EXTRA_TIMER_ENABLED == strChannelUIDid) {\n+                request.put(21772, intUpdateState);\n+            } else if (ValloxMVBindingConstants.CHANNEL_WEEKLY_TIMER_ENABLED == strChannelUIDid) {\n+                request.put(4615, intUpdateState);\n             } else {\n                 return null;\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "709082c88c7538186680f909dc5291488db1c60e"}, "originalPosition": 127}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f5ab478a8b45e864b6759a0eae68b01cd0fa314", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/0f5ab478a8b45e864b6759a0eae68b01cd0fa314", "committedDate": "2020-03-08T21:39:58Z", "message": "Suggestions implemented\n\nSigned-off-by: aisoaho <aisoaho@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09898acac7ffaca0b7069b9a003e1fab731a72f5", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/09898acac7ffaca0b7069b9a003e1fab731a72f5", "committedDate": "2020-03-09T05:59:03Z", "message": "Fixed readme / on/off types\n\nSigned-off-by: aisoaho <aisoaho@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNjExMTY5", "url": "https://github.com/openhab/openhab-addons/pull/7093#pullrequestreview-371611169", "createdAt": "2020-03-10T00:26:25Z", "commit": {"oid": "09898acac7ffaca0b7069b9a003e1fab731a72f5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMDoyNjoyNVrOFz9rCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMDozMDo1NVrOFz9vXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAzMjEzOA==", "bodyText": "Any reason this couldn't be done asynchronously with a scheduler?", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r390032138", "createdAt": "2020-03-10T00:26:25Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVHandler.java", "diffHunk": "@@ -75,48 +75,60 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                 valloxSendSocket.request(null, null);\n             }\n         } else {\n+            String strUpdateValue = \"\";\n             if (ValloxMVBindingConstants.CHANNEL_STATE.equals(channelUID.getId())) {\n                 try {\n                     int cmd = Integer.parseInt(command.toString());\n                     if ((cmd == ValloxMVBindingConstants.STATE_FIREPLACE)\n                             || (cmd == ValloxMVBindingConstants.STATE_ATHOME)\n                             || (cmd == ValloxMVBindingConstants.STATE_AWAY)\n                             || (cmd == ValloxMVBindingConstants.STATE_BOOST)) {\n-                        logger.debug(\"Changing state to: {}\", command);\n-                        // Open WebSocket\n-                        valloxSendSocket.request(channelUID, command.toString());\n-                        valloxSendSocket.request(null, null);\n+                        //logger.debug(\"Changing state to: {}\", command);\n+                        strUpdateValue = command.toString();\n                     }\n                 } catch (NumberFormatException nfe) {\n                     // Other commands like refresh\n                     return;\n                 }\n-            } else if (ValloxMVBindingConstants.CHANNEL_ONOFF.equals(channelUID.getId())) {\n-                if (OnOffType.ON.equals(command)) {\n-                    valloxSendSocket.request(channelUID, \"0\");\n-                    valloxSendSocket.request(null, null);\n-                } else if (OnOffType.OFF.equals(command)) {\n-                    valloxSendSocket.request(channelUID, \"5\");\n-                    valloxSendSocket.request(null, null);\n+            } else if (ValloxMVBindingConstants.WRITABLE_CHANNELS_SWITCHES.contains(channelUID.getId())) {\n+                if (ValloxMVBindingConstants.CHANNEL_ONOFF.equals(channelUID.getId())) {\n+                    // Vallox MV MODE: Normal mode = 0, Switch off = 5\n+                    strUpdateValue = (OnOffType.ON.equals(command)) ? \"0\" : \"5\";\n+                } else {\n+                    // Switches with ON = 1, OFF = 0\n+                    strUpdateValue = (OnOffType.ON.equals(command)) ? \"1\" : \"0\";\n                 }\n             } else if (ValloxMVBindingConstants.WRITABLE_CHANNELS_DIMENSIONLESS.contains(channelUID.getId())) {\n                 if (command instanceof QuantityType) {\n                     QuantityType<Dimensionless> quantity = (QuantityType<Dimensionless>) command;\n-                    valloxSendSocket.request(channelUID, Integer.toString(quantity.intValue()));\n-                    valloxSendSocket.request(null, null);\n+                    strUpdateValue = Integer.toString(quantity.intValue());\n                 }\n             } else if (ValloxMVBindingConstants.WRITABLE_CHANNELS_TEMPERATURE.contains(channelUID.getId())) {\n                 if (command instanceof QuantityType) {\n-                    // Convert temperature to millidegree Kelvin\n+                    // Convert temperature to centiKelvin (= (Celsius * 100) + 27315 )\n                     QuantityType<Temperature> quantity = ((QuantityType<Temperature>) command)\n                             .toUnit(SmartHomeUnits.KELVIN);\n                     if (quantity == null) {\n                         return;\n                     }\n-                    int milliKelvin = quantity.multiply(new BigDecimal(100)).intValue();\n-                    valloxSendSocket.request(channelUID, Integer.toString(milliKelvin));\n-                    valloxSendSocket.request(null, null);\n+                    int centiKelvin = quantity.multiply(new BigDecimal(100)).intValue();\n+                    strUpdateValue = Integer.toString(centiKelvin);\n                 }\n+            } else {\n+                // Not writable channel\n+                return;\n+            }\n+            if (strUpdateValue != \"\") {\n+                // Open WebSocket\n+                valloxSendSocket.request(channelUID, strUpdateValue);\n+                // We should wait some time to let device process the data\n+                try {\n+                    Thread.sleep(500);\n+                } catch (InterruptedException e) {\n+                    // sleep interrupted, we will get updated values during next data update cycle\n+                    return;\n+                }\n+                valloxSendSocket.request(null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09898acac7ffaca0b7069b9a003e1fab731a72f5"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAzMzI0Nw==", "bodyText": "The first letter of every word in a label, with a couple of exceptions, should be capitalized.", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r390033247", "createdAt": "2020-03-10T00:30:55Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/resources/ESH-INF/thing/thing-types.xml", "diffHunk": "@@ -246,4 +258,86 @@\n \t\t<category>Temperature</category>\n \t\t<state pattern=\"%.2f %unit%\" readOnly=\"false\" />\n \t</channel-type>\n+\n+\t<channel-type id=\"boosttime\" advanced=\"true\">\n+\t\t<item-type>Number:Dimensionless</item-type>\n+\t\t<label>Boost profile timer value</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09898acac7ffaca0b7069b9a003e1fab731a72f5"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "190dc1229fa39bc9d48f18138809de4db6ca1168", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/190dc1229fa39bc9d48f18138809de4db6ca1168", "committedDate": "2020-03-10T22:23:41Z", "message": "First letter of every word in the items labels capilalized, some rewording. Readme aligned.\n\nSigned-off-by: Antti Isoaho <aisoaho@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDA0OTg4", "url": "https://github.com/openhab/openhab-addons/pull/7093#pullrequestreview-373004988", "createdAt": "2020-03-11T18:08:03Z", "commit": {"oid": "190dc1229fa39bc9d48f18138809de4db6ca1168"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "479ae716c94f3eaac84b730db2b8f863ea04efe8", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/479ae716c94f3eaac84b730db2b8f863ea04efe8", "committedDate": "2020-03-18T15:51:40Z", "message": "Scheduler stopped during data write, and restarted after data written, only one socket used. closeLatch.countDown added to onClose method to fix closeLatch.\n\nSigned-off-by: Antti Isoaho <aisoaho@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MzA5MTUz", "url": "https://github.com/openhab/openhab-addons/pull/7093#pullrequestreview-377309153", "createdAt": "2020-03-18T23:31:14Z", "commit": {"oid": "479ae716c94f3eaac84b730db2b8f863ea04efe8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozMToxNFrOF4absw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMzozMToxNFrOF4absw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDY5NzY1MQ==", "bodyText": "I think calling dispose right here is inappropriate. Sure, right now all it does is cancels the update tasks but dispose could eventually do far more than that, and it is misleading reading the code since it appears you are disposing the entire handler every time you process a command. Refactor the code in your dispose method into a separate method called cancelUpdateTask or disposeUpdateTask or any other name of your choosing then call that method instead.", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r394697651", "createdAt": "2020-03-18T23:31:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVHandler.java", "diffHunk": "@@ -119,16 +119,13 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                 return;\n             }\n             if (strUpdateValue != \"\") {\n-                // Open WebSocket\n-                valloxSendSocket.request(channelUID, strUpdateValue);\n-                // We should wait some time to let device process the data\n-                try {\n-                    Thread.sleep(500);\n-                } catch (InterruptedException e) {\n-                    // sleep interrupted, we will get updated values during next data update cycle\n-                    return;\n-                }\n-                valloxSendSocket.request(null, null);\n+                // Stop scheduler while sending command to device\n+                dispose();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479ae716c94f3eaac84b730db2b8f863ea04efe8"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bad42948dab407f4a017d9a5e92e3469ee83db7", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/8bad42948dab407f4a017d9a5e92e3469ee83db7", "committedDate": "2020-03-22T16:31:40Z", "message": "updateTask renamed to readDataJob. Added more logic to re-schedule readDataJob when needed - fixed the use of dispose (do not use).\n\nSigned-off-by: Antti Isoaho <aisoaho@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MDU0NTMx", "url": "https://github.com/openhab/openhab-addons/pull/7093#pullrequestreview-379054531", "createdAt": "2020-03-22T22:29:50Z", "commit": {"oid": "8bad42948dab407f4a017d9a5e92e3469ee83db7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQyMjoyOTo1MFrOF5zAMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQyMjozODozM1rOF5zGYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE0ODc4NQ==", "bodyText": "ScheduledFuture includes a method getDelay(TimeUnit) that will tell you how much time until the next execution of a periodic task. Please use that method instead of tracking it manually.", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r396148785", "createdAt": "2020-03-22T22:29:50Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVHandler.java", "diffHunk": "@@ -46,15 +46,15 @@\n public class ValloxMVHandler extends BaseThingHandler {\n \n     private final Logger logger = LoggerFactory.getLogger(ValloxMVHandler.class);\n-    private @Nullable ScheduledFuture<?> updateTasks;\n-    private @Nullable ValloxMVWebSocket valloxSendSocket;\n+    private @Nullable ScheduledFuture<?> readDataJob;\n+    private @Nullable ValloxMVWebSocket valloxSocket;\n     private @Nullable WebSocketClient webSocketClient;\n \n     /**\n      * Refresh interval in seconds.\n      */\n-    private int updateInterval;\n-    private long lastUpdate;\n+    private int readDataInterval;\n+    private long nextReadDataTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bad42948dab407f4a017d9a5e92e3469ee83db7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjE1MDM3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            OnOffType ooOnOff = (bytes[217] == 5) ? OnOffType.OFF : OnOffType.ON;\n          \n          \n            \n                            OnOffType ooOnOff = OnOffType.from(bytes[217] != 5);", "url": "https://github.com/openhab/openhab-addons/pull/7093#discussion_r396150371", "createdAt": "2020-03-22T22:38:33Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.valloxmv/src/main/java/org/openhab/binding/valloxmv/internal/ValloxMVWebSocket.java", "diffHunk": "@@ -310,14 +477,10 @@ public void onBinary(InputStream in) {\n                     bdState = new BigDecimal(ValloxMVBindingConstants.STATE_ATHOME);\n                 }\n \n-                OnOffType onoff;\n-                if (bytes[217] != 5) {\n-                    onoff = OnOffType.ON;\n-                } else {\n-                    onoff = OnOffType.OFF;\n-                }\n+                OnOffType ooOnOff = (bytes[217] == 5) ? OnOffType.OFF : OnOffType.ON;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bad42948dab407f4a017d9a5e92e3469ee83db7"}, "originalPosition": 425}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e9c6a8625e5fc9aade41cf9250aa949eca8416b", "author": {"user": {"login": "anttiisoaho", "name": "Antti Isoaho"}}, "url": "https://github.com/openhab/openhab-addons/commit/0e9c6a8625e5fc9aade41cf9250aa949eca8416b", "committedDate": "2020-03-29T18:51:27Z", "message": "Use getDelay() method of ScheduledFuture to find out delay to reading data from device. Small fix to use OnOffType.from() method similarly with all switches.\n\nSigned-off-by: Antti Isoaho <aisoaho@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDQ1NjY1", "url": "https://github.com/openhab/openhab-addons/pull/7093#pullrequestreview-383445665", "createdAt": "2020-03-29T19:24:59Z", "commit": {"oid": "0e9c6a8625e5fc9aade41cf9250aa949eca8416b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1082, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}