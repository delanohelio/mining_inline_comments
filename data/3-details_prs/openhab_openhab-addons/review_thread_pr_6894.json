{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MzIzNjU3", "number": 6894, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzowODo1M1rODaKbog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzowODo1M1rODaKbog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NzYwNDgyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/SensorThingHandler.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzowODo1M1rOFg9f5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMzo0ODo1OFrOFheKdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwNjM0MA==", "bodyText": "Not very vital, but you can also write:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                updateState(channelUID, batteryLevel <= 10 ? OnOffType.ON : OnOffType.OFF);\n          \n          \n            \n                                updateState(channelUID, OnOffType.from(batteryLevel <= 10));", "url": "https://github.com/openhab/openhab-addons/pull/6894#discussion_r370106340", "createdAt": "2020-01-23T13:08:53Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/SensorThingHandler.java", "diffHunk": "@@ -333,9 +329,30 @@ public void initialize() {\n         }\n     }\n \n-    public void valueUpdated(ChannelUID channelUID, SensorState newState, boolean initializing) {\n-        this.state = newState;\n+    public void valueUpdated(ChannelUID channelUID, SensorConfig newConfig) {\n+        Integer batteryLevel = newConfig.battery;\n+        Float temperature = newConfig.temperature;\n+\n+        switch (channelUID.getId()) {\n+            case CHANNEL_BATTERY_LEVEL:\n+                if (batteryLevel != null) {\n+                    updateState(channelUID, new DecimalType(batteryLevel.longValue()));\n+                }\n+                break;\n+            case CHANNEL_BATTERY_LOW:\n+                if (batteryLevel != null) {\n+                    updateState(channelUID, batteryLevel <= 10 ? OnOffType.ON : OnOffType.OFF);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c976a7340fb27b8723625be7c41d1857351068"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE1ODUwNA==", "bodyText": "Yes, that is possible.\ntbh Currently I am not very happy with this hard-coded comparison. I guess it is done in other bindings too. But maybe a user wants battery low warnings depending on a different threshold? A config parameter seem to be to clumsy.\nI thought about implementing a profile for this use case.", "url": "https://github.com/openhab/openhab-addons/pull/6894#discussion_r370158504", "createdAt": "2020-01-23T14:44:47Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/SensorThingHandler.java", "diffHunk": "@@ -333,9 +329,30 @@ public void initialize() {\n         }\n     }\n \n-    public void valueUpdated(ChannelUID channelUID, SensorState newState, boolean initializing) {\n-        this.state = newState;\n+    public void valueUpdated(ChannelUID channelUID, SensorConfig newConfig) {\n+        Integer batteryLevel = newConfig.battery;\n+        Float temperature = newConfig.temperature;\n+\n+        switch (channelUID.getId()) {\n+            case CHANNEL_BATTERY_LEVEL:\n+                if (batteryLevel != null) {\n+                    updateState(channelUID, new DecimalType(batteryLevel.longValue()));\n+                }\n+                break;\n+            case CHANNEL_BATTERY_LOW:\n+                if (batteryLevel != null) {\n+                    updateState(channelUID, batteryLevel <= 10 ? OnOffType.ON : OnOffType.OFF);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwNjM0MA=="}, "originalCommit": {"oid": "54c976a7340fb27b8723625be7c41d1857351068"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxODE2Mw==", "bodyText": "It can also be implemented with a simple rule. Creating a profile seems to me as the profile is 'misused' as a method to create shortcuts for simple rules. I'm not sure if that is the intention of profiles? I can see a case for being able to easily create simple rule like features. And could be something for a rule template.", "url": "https://github.com/openhab/openhab-addons/pull/6894#discussion_r370218163", "createdAt": "2020-01-23T16:20:55Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/SensorThingHandler.java", "diffHunk": "@@ -333,9 +329,30 @@ public void initialize() {\n         }\n     }\n \n-    public void valueUpdated(ChannelUID channelUID, SensorState newState, boolean initializing) {\n-        this.state = newState;\n+    public void valueUpdated(ChannelUID channelUID, SensorConfig newConfig) {\n+        Integer batteryLevel = newConfig.battery;\n+        Float temperature = newConfig.temperature;\n+\n+        switch (channelUID.getId()) {\n+            case CHANNEL_BATTERY_LEVEL:\n+                if (batteryLevel != null) {\n+                    updateState(channelUID, new DecimalType(batteryLevel.longValue()));\n+                }\n+                break;\n+            case CHANNEL_BATTERY_LOW:\n+                if (batteryLevel != null) {\n+                    updateState(channelUID, batteryLevel <= 10 ? OnOffType.ON : OnOffType.OFF);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwNjM0MA=="}, "originalCommit": {"oid": "54c976a7340fb27b8723625be7c41d1857351068"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0MTUyNw==", "bodyText": "I think you are right. A rule is sufficient.", "url": "https://github.com/openhab/openhab-addons/pull/6894#discussion_r370641527", "createdAt": "2020-01-24T13:48:58Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.deconz/src/main/java/org/openhab/binding/deconz/internal/handler/SensorThingHandler.java", "diffHunk": "@@ -333,9 +329,30 @@ public void initialize() {\n         }\n     }\n \n-    public void valueUpdated(ChannelUID channelUID, SensorState newState, boolean initializing) {\n-        this.state = newState;\n+    public void valueUpdated(ChannelUID channelUID, SensorConfig newConfig) {\n+        Integer batteryLevel = newConfig.battery;\n+        Float temperature = newConfig.temperature;\n+\n+        switch (channelUID.getId()) {\n+            case CHANNEL_BATTERY_LEVEL:\n+                if (batteryLevel != null) {\n+                    updateState(channelUID, new DecimalType(batteryLevel.longValue()));\n+                }\n+                break;\n+            case CHANNEL_BATTERY_LOW:\n+                if (batteryLevel != null) {\n+                    updateState(channelUID, batteryLevel <= 10 ? OnOffType.ON : OnOffType.OFF);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwNjM0MA=="}, "originalCommit": {"oid": "54c976a7340fb27b8723625be7c41d1857351068"}, "originalPosition": 172}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1118, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}