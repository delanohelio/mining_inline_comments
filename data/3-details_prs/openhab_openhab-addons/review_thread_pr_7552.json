{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjMwNjk5", "number": 7552, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzozMTo0M1rOD5gb3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzozMTo0M1rOD5gb3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjI2ODQ1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzozMTo0M1rOGQ0J9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTo1NDo0NFrOGRm1tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NDkxNg==", "bodyText": "So it won't return the configuration value if no default value is provided? That doesn't seem right...", "url": "https://github.com/openhab/openhab-addons/pull/7552#discussion_r420284916", "createdAt": "2020-05-05T17:31:43Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "diffHunk": "@@ -160,10 +161,14 @@ protected void unsubscribe(HomekitCharacteristicType characteristicType) {\n         return null;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     protected <T> T getAccessoryConfiguration(String key, T defaultValue) {\n         final @Nullable Map<String, Object> configuration = accessory.getConfiguration();\n-        if ((configuration != null) && (configuration.get(key) != null)) {\n-            return (T) configuration.get(key);\n+        if (configuration != null) {\n+            Object value = configuration.get(key);\n+            if (value != null && defaultValue != null && value.getClass().equals(defaultValue.getClass())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeef422be872afb5144e0f60844552fea06820bf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNTc2OA==", "bodyText": "Didn't think about that. Another way would be to check for value != null and catch ClassCastException instead of trying to check the class before.", "url": "https://github.com/openhab/openhab-addons/pull/7552#discussion_r420325768", "createdAt": "2020-05-05T18:39:20Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "diffHunk": "@@ -160,10 +161,14 @@ protected void unsubscribe(HomekitCharacteristicType characteristicType) {\n         return null;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     protected <T> T getAccessoryConfiguration(String key, T defaultValue) {\n         final @Nullable Map<String, Object> configuration = accessory.getConfiguration();\n-        if ((configuration != null) && (configuration.get(key) != null)) {\n-            return (T) configuration.get(key);\n+        if (configuration != null) {\n+            Object value = configuration.get(key);\n+            if (value != null && defaultValue != null && value.getClass().equals(defaultValue.getClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NDkxNg=="}, "originalCommit": {"oid": "aeef422be872afb5144e0f60844552fea06820bf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0MTMwNA==", "bodyText": "Well the ClassCastException wouldn't occur in this method but it would occur on the caller when it attempts to cast the return value into what it thinks it should be.", "url": "https://github.com/openhab/openhab-addons/pull/7552#discussion_r420341304", "createdAt": "2020-05-05T19:06:15Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "diffHunk": "@@ -160,10 +161,14 @@ protected void unsubscribe(HomekitCharacteristicType characteristicType) {\n         return null;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     protected <T> T getAccessoryConfiguration(String key, T defaultValue) {\n         final @Nullable Map<String, Object> configuration = accessory.getConfiguration();\n-        if ((configuration != null) && (configuration.get(key) != null)) {\n-            return (T) configuration.get(key);\n+        if (configuration != null) {\n+            Object value = configuration.get(key);\n+            if (value != null && defaultValue != null && value.getClass().equals(defaultValue.getClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NDkxNg=="}, "originalCommit": {"oid": "aeef422be872afb5144e0f60844552fea06820bf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0NDM2OQ==", "bodyText": "In fact, defaultValue could be annotated as @NonNull at least in the use-cases we have so far.", "url": "https://github.com/openhab/openhab-addons/pull/7552#discussion_r420344369", "createdAt": "2020-05-05T19:11:47Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "diffHunk": "@@ -160,10 +161,14 @@ protected void unsubscribe(HomekitCharacteristicType characteristicType) {\n         return null;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     protected <T> T getAccessoryConfiguration(String key, T defaultValue) {\n         final @Nullable Map<String, Object> configuration = accessory.getConfiguration();\n-        if ((configuration != null) && (configuration.get(key) != null)) {\n-            return (T) configuration.get(key);\n+        if (configuration != null) {\n+            Object value = configuration.get(key);\n+            if (value != null && defaultValue != null && value.getClass().equals(defaultValue.getClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NDkxNg=="}, "originalCommit": {"oid": "aeef422be872afb5144e0f60844552fea06820bf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY1MTM2NA==", "bodyText": "if defaultValue is null we dont know to which class to cast to. So,  it must be not null. we can add @NotNull.\nalternative would be to create separate methods like getAccessoryConfigurationAsString, getAccessoryConfigurationAsInteger\ncurrently we have only these 2 cases: String and Integer and cannot think of anything else.\nit is configuration from metadata - so, it will be either String \"\" or number.\nSwitch MyFan \"My Fan\" { homekit=\"Fan.v2\", alexa=\"Fan\" [ type=\"oscillating\", speedSteps=3 ] }", "url": "https://github.com/openhab/openhab-addons/pull/7552#discussion_r420651364", "createdAt": "2020-05-06T09:16:47Z", "author": {"login": "yfre"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "diffHunk": "@@ -160,10 +161,14 @@ protected void unsubscribe(HomekitCharacteristicType characteristicType) {\n         return null;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     protected <T> T getAccessoryConfiguration(String key, T defaultValue) {\n         final @Nullable Map<String, Object> configuration = accessory.getConfiguration();\n-        if ((configuration != null) && (configuration.get(key) != null)) {\n-            return (T) configuration.get(key);\n+        if (configuration != null) {\n+            Object value = configuration.get(key);\n+            if (value != null && defaultValue != null && value.getClass().equals(defaultValue.getClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NDkxNg=="}, "originalCommit": {"oid": "aeef422be872afb5144e0f60844552fea06820bf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk2MTY4MA==", "bodyText": "I think the generic version is better. is theer any reason why we can't add null-annotations to these classes`?", "url": "https://github.com/openhab/openhab-addons/pull/7552#discussion_r420961680", "createdAt": "2020-05-06T17:23:10Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "diffHunk": "@@ -160,10 +161,14 @@ protected void unsubscribe(HomekitCharacteristicType characteristicType) {\n         return null;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     protected <T> T getAccessoryConfiguration(String key, T defaultValue) {\n         final @Nullable Map<String, Object> configuration = accessory.getConfiguration();\n-        if ((configuration != null) && (configuration.get(key) != null)) {\n-            return (T) configuration.get(key);\n+        if (configuration != null) {\n+            Object value = configuration.get(key);\n+            if (value != null && defaultValue != null && value.getClass().equals(defaultValue.getClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NDkxNg=="}, "originalCommit": {"oid": "aeef422be872afb5144e0f60844552fea06820bf"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTExNTMxNw==", "bodyText": "NonNull will not hurt here. added.", "url": "https://github.com/openhab/openhab-addons/pull/7552#discussion_r421115317", "createdAt": "2020-05-06T21:54:44Z", "author": {"login": "yfre"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/AbstractHomekitAccessoryImpl.java", "diffHunk": "@@ -160,10 +161,14 @@ protected void unsubscribe(HomekitCharacteristicType characteristicType) {\n         return null;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     protected <T> T getAccessoryConfiguration(String key, T defaultValue) {\n         final @Nullable Map<String, Object> configuration = accessory.getConfiguration();\n-        if ((configuration != null) && (configuration.get(key) != null)) {\n-            return (T) configuration.get(key);\n+        if (configuration != null) {\n+            Object value = configuration.get(key);\n+            if (value != null && defaultValue != null && value.getClass().equals(defaultValue.getClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4NDkxNg=="}, "originalCommit": {"oid": "aeef422be872afb5144e0f60844552fea06820bf"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 195, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}