{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjIyMTY2", "number": 8929, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjoyMToyMFrOE0KO2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjoyMToyMFrOE0KO2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTI5MDQ4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.persistence.rrd4j/src/main/java/org/openhab/persistence/rrd4j/internal/RRD4jPersistenceService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjoyMToyMFrOHrwQkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNzowOTozNVrOHrwlmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0MTQ5MQ==", "bodyText": "Afaics, we didn't have this warning before - and I'd think that there might be legit situations for a query even if no db file is there (yet).", "url": "https://github.com/openhab/openhab-addons/pull/8929#discussion_r515641491", "createdAt": "2020-11-01T16:21:20Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.persistence.rrd4j/src/main/java/org/openhab/persistence/rrd4j/internal/RRD4jPersistenceService.java", "diffHunk": "@@ -230,73 +230,83 @@ public void store(Item item) {\n     @Override\n     public Iterable<HistoricItem> query(FilterCriteria filter) {\n         String itemName = filter.getItemName();\n+\n         RrdDb db = getDB(itemName);\n-        if (db != null) {\n-            ConsolFun consolidationFunction = getConsolidationFunction(db);\n-            long start = 0L;\n-            long end = filter.getEndDate() == null ? System.currentTimeMillis() / 1000\n-                    : filter.getEndDate().toInstant().getEpochSecond();\n+        if (db == null) {\n+            logger.warn(\"Could not find item '{}' in rrd4j database\", itemName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8ebc36848de741eb6fdb7e9af1443d0b06961d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NjE5MQ==", "bodyText": "Yes it was meant to be debug level. I'll change that.", "url": "https://github.com/openhab/openhab-addons/pull/8929#discussion_r515646191", "createdAt": "2020-11-01T17:03:08Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.persistence.rrd4j/src/main/java/org/openhab/persistence/rrd4j/internal/RRD4jPersistenceService.java", "diffHunk": "@@ -230,73 +230,83 @@ public void store(Item item) {\n     @Override\n     public Iterable<HistoricItem> query(FilterCriteria filter) {\n         String itemName = filter.getItemName();\n+\n         RrdDb db = getDB(itemName);\n-        if (db != null) {\n-            ConsolFun consolidationFunction = getConsolidationFunction(db);\n-            long start = 0L;\n-            long end = filter.getEndDate() == null ? System.currentTimeMillis() / 1000\n-                    : filter.getEndDate().toInstant().getEpochSecond();\n+        if (db == null) {\n+            logger.warn(\"Could not find item '{}' in rrd4j database\", itemName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0MTQ5MQ=="}, "originalCommit": {"oid": "0f8ebc36848de741eb6fdb7e9af1443d0b06961d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NjcwNQ==", "bodyText": "I only reduced the amount of of nesting/indentation with this quick return statement. That makes the code a bit more readable. Moving logic to other methods also helps with that.", "url": "https://github.com/openhab/openhab-addons/pull/8929#discussion_r515646705", "createdAt": "2020-11-01T17:07:52Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.persistence.rrd4j/src/main/java/org/openhab/persistence/rrd4j/internal/RRD4jPersistenceService.java", "diffHunk": "@@ -230,73 +230,83 @@ public void store(Item item) {\n     @Override\n     public Iterable<HistoricItem> query(FilterCriteria filter) {\n         String itemName = filter.getItemName();\n+\n         RrdDb db = getDB(itemName);\n-        if (db != null) {\n-            ConsolFun consolidationFunction = getConsolidationFunction(db);\n-            long start = 0L;\n-            long end = filter.getEndDate() == null ? System.currentTimeMillis() / 1000\n-                    : filter.getEndDate().toInstant().getEpochSecond();\n+        if (db == null) {\n+            logger.warn(\"Could not find item '{}' in rrd4j database\", itemName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0MTQ5MQ=="}, "originalCommit": {"oid": "0f8ebc36848de741eb6fdb7e9af1443d0b06961d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0Njg3Mg==", "bodyText": "Yes, I saw and understood that - although it made it trickier to review and see the parts that are the real change in it.", "url": "https://github.com/openhab/openhab-addons/pull/8929#discussion_r515646872", "createdAt": "2020-11-01T17:09:35Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.persistence.rrd4j/src/main/java/org/openhab/persistence/rrd4j/internal/RRD4jPersistenceService.java", "diffHunk": "@@ -230,73 +230,83 @@ public void store(Item item) {\n     @Override\n     public Iterable<HistoricItem> query(FilterCriteria filter) {\n         String itemName = filter.getItemName();\n+\n         RrdDb db = getDB(itemName);\n-        if (db != null) {\n-            ConsolFun consolidationFunction = getConsolidationFunction(db);\n-            long start = 0L;\n-            long end = filter.getEndDate() == null ? System.currentTimeMillis() / 1000\n-                    : filter.getEndDate().toInstant().getEpochSecond();\n+        if (db == null) {\n+            logger.warn(\"Could not find item '{}' in rrd4j database\", itemName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0MTQ5MQ=="}, "originalCommit": {"oid": "0f8ebc36848de741eb6fdb7e9af1443d0b06961d"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4009, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}