{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzODM3MjIy", "number": 7805, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMzowNVrOEBD-kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMTowOTo0NVrOEBEyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTQ5MjAyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPFeatures.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowMzowNVrOGcuiIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMTo1NjoyNVrOGc1iSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTcxMw==", "bodyText": "Any reason these are package private vs just private? Also please make these final and primitive.", "url": "https://github.com/openhab/openhab-addons/pull/7805#discussion_r432775713", "createdAt": "2020-05-29T23:03:05Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPFeatures.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.hpprinter.internal.api;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+\n+/**\n+ * The {@link HPScannerStatus} is responsible for handling reading of scanner status data.\n+ *\n+ * @author Stewart Cossey - Initial contribution\n+ */\n+@NonNullByDefault\n+public class HPFeatures {\n+    public static final String ENDPOINT = \"/DevMgmt/DiscoveryTree.xml\";\n+\n+    Boolean productStatus;\n+    Boolean productUsage;\n+    Boolean scannerStatus;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2344d5b41048ad92665fc824eb4cfaa6e7ff05fa"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg5MDQ0Mw==", "bodyText": "No they should be class private; ill sort those out as well as the final and primitives for all the relevant classes.", "url": "https://github.com/openhab/openhab-addons/pull/7805#discussion_r432890443", "createdAt": "2020-05-30T21:56:25Z", "author": {"login": "Cossey"}, "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPFeatures.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.hpprinter.internal.api;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.NodeList;\n+\n+/**\n+ * The {@link HPScannerStatus} is responsible for handling reading of scanner status data.\n+ *\n+ * @author Stewart Cossey - Initial contribution\n+ */\n+@NonNullByDefault\n+public class HPFeatures {\n+    public static final String ENDPOINT = \"/DevMgmt/DiscoveryTree.xml\";\n+\n+    Boolean productStatus;\n+    Boolean productUsage;\n+    Boolean scannerStatus;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NTcxMw=="}, "originalCommit": {"oid": "2344d5b41048ad92665fc824eb4cfaa6e7ff05fa"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTQ5NDE1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPProductUsageFeatures.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowNDo0OVrOGcujdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowNDo0OVrOGcujdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NjA1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (currPrinterSubUnit.getElementsByTagName(\"dd:JamEvents\").getLength() > 0) {\n          \n          \n            \n                            jamEvents = true;\n          \n          \n            \n                        }\n          \n          \n            \n                        jamEvents = currPrinterSubUnit.getElementsByTagName(\"dd:JamEvents\").getLength() > 0;\n          \n      \n    \n    \n  \n\nPlease do similar changes to the code below.", "url": "https://github.com/openhab/openhab-addons/pull/7805#discussion_r432776054", "createdAt": "2020-05-29T23:04:49Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPProductUsageFeatures.java", "diffHunk": "@@ -0,0 +1,358 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.hpprinter.internal.api;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NodeList;\n+\n+/**\n+ * The {@link HPProductUsageFeatures} is responsible for determining what type of printer usage\n+ * data the Web Interface supports including any features.\n+ *\n+ * @author Stewart Cossey - Initial contribution\n+ */\n+@NonNullByDefault\n+public class HPProductUsageFeatures {\n+    public static final String ENDPOINT = \"/DevMgmt/ProductUsageDyn.xml\";\n+\n+    private PrinterType printerType = PrinterType.UNKNOWN;\n+    private boolean jamEvents;\n+    private boolean mispickEvents;\n+    private boolean subscriptionImpressions;\n+    private boolean frontPanelCancel;\n+    private boolean cumuMarking;\n+    private boolean pagesRemaining;\n+\n+    private boolean scanAdf;\n+    private boolean scanFlatbed;\n+    private boolean scanToHost;\n+    private boolean scanToEmail;\n+    private boolean scanToFolder;\n+\n+    private boolean printApplication;\n+    private boolean printApplicationChrome;\n+\n+    private boolean scannerEngine;\n+    private boolean copyApplication;\n+\n+    private boolean cloudPrint;\n+\n+    public enum PrinterType {\n+        UNKNOWN,\n+        MONOCHROME,\n+        SINGLECOLOR,\n+        MULTICOLOR\n+    }\n+\n+    public HPProductUsageFeatures(Document document) {\n+        // Check what Ink/Toner colours are present\n+        NodeList consumableInk = document.getDocumentElement().getElementsByTagName(\"pudyn:Consumable\");\n+\n+        for (int i = 0; i < consumableInk.getLength(); i++) {\n+            Element currInk = (Element) consumableInk.item(i);\n+\n+            String inkName = currInk.getElementsByTagName(\"dd:MarkerColor\").item(0).getTextContent();\n+\n+            String consumeType = currInk.getElementsByTagName(\"dd:ConsumableTypeEnum\").item(0).getTextContent();\n+            if (consumeType.equalsIgnoreCase(\"printhead\")) {\n+                continue;\n+            }\n+\n+            if (currInk.getElementsByTagName(\"dd2:CumulativeMarkingAgentUsed\").getLength() > 0) {\n+                cumuMarking = true;\n+            }\n+\n+            switch (inkName.toLowerCase()) {\n+                case \"cyan\":\n+                case \"magenta\":\n+                case \"yellow\":\n+                    printerType = PrinterType.MULTICOLOR; // Is multicolor if it has this ink\n+                    break;\n+\n+                case \"cyanmagentayellow\":\n+                    printerType = PrinterType.SINGLECOLOR; // Is singlecolor if it has this ink\n+                    break;\n+\n+                case \"black\":\n+                    if (printerType == PrinterType.UNKNOWN) {\n+                        printerType = PrinterType.MONOCHROME; // Is Monochrome\n+                    }\n+                    break;\n+            }\n+        }\n+        \n+        if (((Element) consumableInk.item(0)).getElementsByTagName(\"dd:EstimatedPagesRemaining\").getLength() > 0) {\n+            pagesRemaining = true;\n+        }\n+\n+        NodeList printerSubUnit = document.getDocumentElement().getElementsByTagName(\"pudyn:PrinterSubunit\");\n+        if (printerSubUnit.getLength() > 0) {\n+            Element currPrinterSubUnit = (Element) printerSubUnit.item(0);\n+\n+            if (currPrinterSubUnit.getElementsByTagName(\"dd:JamEvents\").getLength() > 0) {\n+                jamEvents = true;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2344d5b41048ad92665fc824eb4cfaa6e7ff05fa"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTQ5NzQ1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPScannerStatusFeatures.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowNjo1M1rOGculXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzowNjo1M1rOGculXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3NjU0MQ==", "bodyText": "Please make these primitive", "url": "https://github.com/openhab/openhab-addons/pull/7805#discussion_r432776541", "createdAt": "2020-05-29T23:06:53Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPScannerStatusFeatures.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.hpprinter.internal.api;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.NodeList;\n+\n+/**\n+ * The {@link HPScannerStatusFeatures} is responsible for determining what type of printer scanner\n+ * status features the Web Interface supports.\n+ *\n+ * @author Stewart Cossey - Initial contribution\n+ */\n+@NonNullByDefault\n+public class HPScannerStatusFeatures {\n+    public static final String ENDPOINT = \"/eSCL/ScannerStatus\";\n+\n+    private final Boolean hasStatus;\n+    private final Boolean hasAdf;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2344d5b41048ad92665fc824eb4cfaa6e7ff05fa"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTYyNDIwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMTowOTo0NVrOGcvw5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMTowOTo0NVrOGcvw5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5NTg3OA==", "bodyText": "can you make this primitive?", "url": "https://github.com/openhab/openhab-addons/pull/7805#discussion_r432795878", "createdAt": "2020-05-30T01:09:45Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hpprinter/src/main/java/org/openhab/binding/hpprinter/internal/api/HPStatus.java", "diffHunk": "@@ -33,18 +33,24 @@\n     private static final Map<String, String> STATUS_MESSAGES = initializeStatus();\n \n     private final String printerStatus;\n+    private final Boolean trayEmptyOrOpen;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2344d5b41048ad92665fc824eb4cfaa6e7ff05fa"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4931, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}