{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MjY0MzE1", "number": 6930, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1Nzo0MFrODcqRwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTozMTowNFrODf_pXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzc5MzkzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1Nzo0MFrOFk0O-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0MTozOFrOFnmaWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0ODg1Ng==", "bodyText": "Formatting, maybe apply spotless:  mvn spotless:apply -pl :org.openhab.binding.enocean", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374148856", "createdAt": "2020-02-03T14:57:40Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.D2_14;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.eclipse.smarthome.core.thing.CommonTriggerEvents;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._VLDMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class D2_14_30 extends _VLDMessage {\n+\n+    public D2_14_30() {\n+        super();\n+    }\n+\n+    public D2_14_30(ERP1Message packet) {\n+        super(packet);\n+    }\n+\n+    @Override\n+    public State convertToStateImpl(String channelId, String channelTypeId, Function<String, State> getCurrentStateFunc, Configuration config) {\n+        switch (channelId) {\n+            case CHANNEL_SMOKEDETECTION:\n+                return getBit(bytes[0], 7) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORFAULT:\n+                return getBit(bytes[0], 6) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_MAINTENANCESTATUS:\n+                return getBit(bytes[0], 5) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORANALYSISHUMIDITYRANGE:\n+                return getBit(bytes[0], 4) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORANALYSISTEMPERATURRANGE:\n+            return getBit(bytes[0], 3) ? OnOffType.ON : OnOffType.OFF;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2ODEyMQ==", "bodyText": "Thanks for the hint \ud83d\udc4d , I seperated the changes coming from spotless in a second commit.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377068121", "createdAt": "2020-02-10T13:41:38Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.D2_14;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.eclipse.smarthome.core.thing.CommonTriggerEvents;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._VLDMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class D2_14_30 extends _VLDMessage {\n+\n+    public D2_14_30() {\n+        super();\n+    }\n+\n+    public D2_14_30(ERP1Message packet) {\n+        super(packet);\n+    }\n+\n+    @Override\n+    public State convertToStateImpl(String channelId, String channelTypeId, Function<String, State> getCurrentStateFunc, Configuration config) {\n+        switch (channelId) {\n+            case CHANNEL_SMOKEDETECTION:\n+                return getBit(bytes[0], 7) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORFAULT:\n+                return getBit(bytes[0], 6) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_MAINTENANCESTATUS:\n+                return getBit(bytes[0], 5) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORANALYSISHUMIDITYRANGE:\n+                return getBit(bytes[0], 4) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORANALYSISTEMPERATURRANGE:\n+            return getBit(bytes[0], 3) ? OnOffType.ON : OnOffType.OFF;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0ODg1Ng=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzc5NTUzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1ODowMFrOFk0P5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1ODowMFrOFk0P5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0OTA5NQ==", "bodyText": "Not needed explicitly, but you can leave it.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374149095", "createdAt": "2020-02-03T14:58:00Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.D2_14;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.eclipse.smarthome.core.thing.CommonTriggerEvents;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._VLDMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class D2_14_30 extends _VLDMessage {\n+\n+    public D2_14_30() {\n+        super();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzc5NzAxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1ODoyNFrOFk0Q3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0MTo0M1rOFnmafQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0OTM0MQ==", "bodyText": "This non-standard name is already an existing thing from the binding, IIRC?", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374149341", "createdAt": "2020-02-03T14:58:24Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.D2_14;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.eclipse.smarthome.core.thing.CommonTriggerEvents;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._VLDMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class D2_14_30 extends _VLDMessage {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2ODE1Nw==", "bodyText": "Correct. Background: EnOcean knows the following message types RPS, 1BS, 4BS, VLD. For the 1BS and 4BS messages types I had to use a underscore, so I decided to prefix all message types with it.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377068157", "createdAt": "2020-02-10T13:41:43Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.D2_14;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.eclipse.smarthome.core.thing.CommonTriggerEvents;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._VLDMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class D2_14_30 extends _VLDMessage {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0OTM0MQ=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgwMDA4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNDo1OToxMlrOFk0S0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0MTo1M1rOFnmayQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0OTg0Mw==", "bodyText": "Don't use them, rather split such a piece of code of to method, IMHO a case in a switch shouild be around max 5 lines.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374149843", "createdAt": "2020-02-03T14:59:12Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.D2_14;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.eclipse.smarthome.core.thing.CommonTriggerEvents;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._VLDMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class D2_14_30 extends _VLDMessage {\n+\n+    public D2_14_30() {\n+        super();\n+    }\n+\n+    public D2_14_30(ERP1Message packet) {\n+        super(packet);\n+    }\n+\n+    @Override\n+    public State convertToStateImpl(String channelId, String channelTypeId, Function<String, State> getCurrentStateFunc, Configuration config) {\n+        switch (channelId) {\n+            case CHANNEL_SMOKEDETECTION:\n+                return getBit(bytes[0], 7) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORFAULT:\n+                return getBit(bytes[0], 6) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_MAINTENANCESTATUS:\n+                return getBit(bytes[0], 5) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORANALYSISHUMIDITYRANGE:\n+                return getBit(bytes[0], 4) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORANALYSISTEMPERATURRANGE:\n+            return getBit(bytes[0], 3) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_TIMESINCELASTMAINTENANCE:\n+                return new DecimalType(((bytes[0] << 5) + (bytes[0] >>> 3)) & 0xFF);\n+            case CHANNEL_BATTERY_LEVEL:\n+                {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2ODIzMw==", "bodyText": "Changed it.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377068233", "createdAt": "2020-02-10T13:41:53Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/D2_14/D2_14_30.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.D2_14;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.library.unit.SmartHomeUnits;\n+import org.eclipse.smarthome.core.thing.CommonTriggerEvents;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._VLDMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class D2_14_30 extends _VLDMessage {\n+\n+    public D2_14_30() {\n+        super();\n+    }\n+\n+    public D2_14_30(ERP1Message packet) {\n+        super(packet);\n+    }\n+\n+    @Override\n+    public State convertToStateImpl(String channelId, String channelTypeId, Function<String, State> getCurrentStateFunc, Configuration config) {\n+        switch (channelId) {\n+            case CHANNEL_SMOKEDETECTION:\n+                return getBit(bytes[0], 7) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORFAULT:\n+                return getBit(bytes[0], 6) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_MAINTENANCESTATUS:\n+                return getBit(bytes[0], 5) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORANALYSISHUMIDITYRANGE:\n+                return getBit(bytes[0], 4) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_SENSORANALYSISTEMPERATURRANGE:\n+            return getBit(bytes[0], 3) ? OnOffType.ON : OnOffType.OFF;\n+            case CHANNEL_TIMESINCELASTMAINTENANCE:\n+                return new DecimalType(((bytes[0] << 5) + (bytes[0] >>> 3)) & 0xFF);\n+            case CHANNEL_BATTERY_LEVEL:\n+                {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE0OTg0Mw=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgwOTAxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowMTozMFrOFk0YRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0MjowOFrOFnmbRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MTIzOA==", "bodyText": "Can you make sure that every word from this label starts with a capital this is the default in ESH / openHAB.\nSee for the exact rules: https://capitalizemytitle.com/", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374151238", "createdAt": "2020-02-03T15:01:30Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2ODM1OQ==", "bodyText": "Fixed \ud83d\udc4d", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377068359", "createdAt": "2020-02-10T13:42:08Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MTIzOA=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgxMjU4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowMjoyNlrOFk0adg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0MzoxM1rOFnmdqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MTc5OA==", "bodyText": "Consider to keep the labels short.\nWould this make more sense to have it as a quantity unit so that people can choose to have it in days, months or whatever", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374151798", "createdAt": "2020-02-03T15:02:26Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Weeks Since Last Maintenance</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2ODk2OA==", "bodyText": "Good point, changed to QuantityType and shortend the labels as far as I could. Open for any other suggestions.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377068968", "createdAt": "2020-02-10T13:43:13Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Weeks Since Last Maintenance</label>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MTc5OA=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgxNDUzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowMjo1MlrOFk0bhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowMjo1MlrOFk0bhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1MjA2OQ==", "bodyText": "See the two comments above", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374152069", "createdAt": "2020-02-03T15:02:52Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Weeks Since Last Maintenance</label>\n+\t\t<description>Time since last maintenance was done in weeks.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"remainingPLT\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Remaining Product Life Time in Months</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgzMTc3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowNzo0OVrOFk0mTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDoxOTowM1rOFnnsaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NDgzMQ==", "bodyText": "This is only supposed to be used for String item-types, so could you make it a string and map the numeric values to some meaningful values, such as GOOD/MEDIUM etc (use an enum)\n\nSome channels might have only a limited and countable set of states. These states can be specified as options. A String item must be used as item type.\n[source]", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374154831", "createdAt": "2020-02-03T15:07:49Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Weeks Since Last Maintenance</label>\n+\t\t<description>Time since last maintenance was done in weeks.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"remainingPLT\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Remaining Product Life Time in Months</label>\n+\t\t<description>Countdown time until product end of life.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"hygroComfortIndex\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Hygrothermal Comfort Index</label>\n+\t\t<description>Comfort index based on temperature and humidity</description>\n+\t\t<state>\n+\t\t\t<options>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MDg0OA==", "bodyText": "Changed to StringType, however I did not used an enum, a simple string array is enough. Channel is readonly so int => string conversion is all I need. Opposite way is not needed.\nBTW: Number item worked without any problems, too.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377070848", "createdAt": "2020-02-10T13:46:34Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Weeks Since Last Maintenance</label>\n+\t\t<description>Time since last maintenance was done in weeks.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"remainingPLT\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Remaining Product Life Time in Months</label>\n+\t\t<description>Countdown time until product end of life.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"hygroComfortIndex\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Hygrothermal Comfort Index</label>\n+\t\t<description>Comfort index based on temperature and humidity</description>\n+\t\t<state>\n+\t\t\t<options>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NDgzMQ=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA4OTEzMQ==", "bodyText": "I meant to have to value's themselves more descriptive, now the logical mapping to String is only available in the paper UI other UI's only have a number which is not at all self-explanatory.\nHad an outdated view :-D", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377089131", "createdAt": "2020-02-10T14:19:03Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Weeks Since Last Maintenance</label>\n+\t\t<description>Time since last maintenance was done in weeks.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"remainingPLT\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Remaining Product Life Time in Months</label>\n+\t\t<description>Countdown time until product end of life.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"hygroComfortIndex\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Hygrothermal Comfort Index</label>\n+\t\t<description>Comfort index based on temperature and humidity</description>\n+\t\t<state>\n+\t\t\t<options>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NDgzMQ=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgzMjMxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowNzo1OFrOFk0mqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowNzo1OFrOFk0mqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NDkyMA==", "bodyText": "Same applies here", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374154920", "createdAt": "2020-02-03T15:07:58Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +449,86 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Weeks Since Last Maintenance</label>\n+\t\t<description>Time since last maintenance was done in weeks.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"remainingPLT\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Remaining Product Life Time in Months</label>\n+\t\t<description>Countdown time until product end of life.</description>\t\t\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"hygroComfortIndex\">\n+\t\t<item-type>Number</item-type>\n+\t\t<label>Hygrothermal Comfort Index</label>\n+\t\t<description>Comfort index based on temperature and humidity</description>\n+\t\t<state>\n+\t\t\t<options>\n+\t\t\t\t<option value=\"0\">Good</option>\n+\t\t\t\t<option value=\"1\">Medium</option>\n+\t\t\t\t<option value=\"2\">Bad</option>\n+\t\t\t\t<option value=\"3\">Error</option>\n+\t\t\t</options>\n+\t\t</state>\n+\t</channel-type>\n+\n+\t<channel-type id=\"indoorAirAnalysis\">\n+\t\t<item-type>Number</item-type>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgzNjM5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowODo1N1rOFk0pBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMDo1Njo1MVrOFoqLMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTUyNA==", "bodyText": "Is there a reason not to define the channels here?", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r374155524", "createdAt": "2020-02-03T15:08:57Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"enocean\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<thing-type id=\"multiFunctionSmokeDetector\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"bridge\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Multi Function Smoke Detector</label>\n+\t\t<description>Multi Function Sensor like a Smoke Detector (EEP: F6-05, D2-14)</description>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MzM5Mg==", "bodyText": "The channels of a thing are defined by its EEP. For example there are three smoke detecting EEPs which have all other additional channels next to the smoke detection channel. If I would add the channels directly to the thing I would have a lot of useless channels for certain kind of smoke detectors or would have to split up the smoke detector thing into three thing types (simple smoke detector, smoke detector with temp sensor, smoke detector with air quality sensor). I found both solutions not really userfriendly.\nHowever I am open for any other suggestion.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377073392", "createdAt": "2020-02-10T13:51:09Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"enocean\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<thing-type id=\"multiFunctionSmokeDetector\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"bridge\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Multi Function Smoke Detector</label>\n+\t\t<description>Multi Function Sensor like a Smoke Detector (EEP: F6-05, D2-14)</description>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTUyNA=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA4ODE0OQ==", "bodyText": "But I assume there are some shared channels? Otherwise, they should IMHO be different things. I think that we should at least define the shared channels here. Having the optional temperature or air quality sensor dynamic sounds good.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r377088149", "createdAt": "2020-02-10T14:17:22Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"enocean\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<thing-type id=\"multiFunctionSmokeDetector\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"bridge\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Multi Function Smoke Detector</label>\n+\t\t<description>Multi Function Sensor like a Smoke Detector (EEP: F6-05, D2-14)</description>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTUyNA=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE0MTg3MQ==", "bodyText": "Correct, all thing types have at least one common/shared channel. This common channel defines the thing type (rollershutter thing type => rollershutter channel etc).\nHowever dividing channels into dynamic and non dynamic ones would make the channel handling a liitle bit more complicated. For example whenever the user changes the EEP, I just remove all channels and readd them according to the selected EEP. However if there would be \"static\" channels, I had to ensure that these static channels would still be there after the update. So keeping all channels dynamic and just depended on the selected EEP (and not the thing type) simplyfies the channel handling a lot.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r378141871", "createdAt": "2020-02-12T09:50:29Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"enocean\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<thing-type id=\"multiFunctionSmokeDetector\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"bridge\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Multi Function Smoke Detector</label>\n+\t\t<description>Multi Function Sensor like a Smoke Detector (EEP: F6-05, D2-14)</description>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTUyNA=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE3ODM1Mg==", "bodyText": "Alright, personally I'm not such a fan of having it so dynamic :-)", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r378178352", "createdAt": "2020-02-12T10:56:51Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "diffHunk": "@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"enocean\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<thing-type id=\"multiFunctionSmokeDetector\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"bridge\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Multi Function Smoke Detector</label>\n+\t\t<description>Multi Function Sensor like a Smoke Detector (EEP: F6-05, D2-14)</description>\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTUyNA=="}, "originalCommit": {"oid": "4dd6fff8d107cfcde291fbfff76428086a221382"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODcyNDc2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/A5_30/A5_30_03_ELTAKO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToyMTowMFrOFqBFwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjoxMTowOVrOFtWYyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjM2OA==", "bodyText": "Does it make sense to store the result of getDB_1() in a local variable instead of calling the method twice?", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r379602368", "createdAt": "2020-02-14T19:21:00Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/A5_30/A5_30_03_ELTAKO.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.A5_30;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ * EEP used for Smoke Detectors by Eltako\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class A5_30_03_ELTAKO extends A5_30_03 {\n+\n+    protected byte ALARM_ON = 0x0F;\n+    protected byte ALARM_OFF = 0x10;\n+\n+    public A5_30_03_ELTAKO() {\n+        super();\n+\n+        this.supportsTeachInVariation3 = true;\n+    }\n+\n+    public A5_30_03_ELTAKO(ERP1Message packet) {\n+        super(packet);\n+\n+        this.supportsTeachInVariation3 = true;\n+    }\n+\n+    @Override\n+    protected State convertToStateImpl(String channelId, String channelTypeId,\n+            Function<String, State> getCurrentStateFunc, Configuration config) {\n+        switch (channelId) {\n+            case CHANNEL_SMOKEDETECTION:\n+                return getDB_1() == ALARM_ON ? OnOffType.ON", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5NzAzMg==", "bodyText": "This makes definitely sense, good point \ud83d\udc4d  fixed it", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r383097032", "createdAt": "2020-02-24T06:11:09Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/A5_30/A5_30_03_ELTAKO.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.A5_30;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ * EEP used for Smoke Detectors by Eltako\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class A5_30_03_ELTAKO extends A5_30_03 {\n+\n+    protected byte ALARM_ON = 0x0F;\n+    protected byte ALARM_OFF = 0x10;\n+\n+    public A5_30_03_ELTAKO() {\n+        super();\n+\n+        this.supportsTeachInVariation3 = true;\n+    }\n+\n+    public A5_30_03_ELTAKO(ERP1Message packet) {\n+        super(packet);\n+\n+        this.supportsTeachInVariation3 = true;\n+    }\n+\n+    @Override\n+    protected State convertToStateImpl(String channelId, String channelTypeId,\n+            Function<String, State> getCurrentStateFunc, Configuration config) {\n+        switch (channelId) {\n+            case CHANNEL_SMOKEDETECTION:\n+                return getDB_1() == ALARM_ON ? OnOffType.ON", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjM2OA=="}, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODcyNjA4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/A5_30/A5_30_03.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToyMTozMVrOFqBGig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjoxMToyN1rOFtWY8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjU3MA==", "bodyText": "Can both properties be static final?", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r379602570", "createdAt": "2020-02-14T19:21:31Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/A5_30/A5_30_03.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.A5_30;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._4BSMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class A5_30_03 extends _4BSMessage {\n+\n+    protected byte ALL_DIGITALPINS_HIGH = 0x0F;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5NzA3NA==", "bodyText": "fixed it", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r383097074", "createdAt": "2020-02-24T06:11:27Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/A5_30/A5_30_03.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.A5_30;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.eep.Base._4BSMessage;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class A5_30_03 extends _4BSMessage {\n+\n+    protected byte ALL_DIGITALPINS_HIGH = 0x0F;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjU3MA=="}, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODcyNjM5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/A5_30/A5_30_03_ELTAKO.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToyMTozOFrOFqBGwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToyMTozOFrOFqBGwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMjYyNQ==", "bodyText": "Can both properties be static final?", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r379602625", "createdAt": "2020-02-14T19:21:38Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.enocean/src/main/java/org/openhab/binding/enocean/internal/eep/A5_30/A5_30_03_ELTAKO.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.enocean.internal.eep.A5_30;\n+\n+import static org.openhab.binding.enocean.internal.EnOceanBindingConstants.*;\n+\n+import java.util.function.Function;\n+\n+import org.eclipse.smarthome.config.core.Configuration;\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+import org.openhab.binding.enocean.internal.messages.ERP1Message;\n+\n+/**\n+ * EEP used for Smoke Detectors by Eltako\n+ *\n+ * @author Daniel Weber - Initial contribution\n+ */\n+public class A5_30_03_ELTAKO extends A5_30_03 {\n+\n+    protected byte ALARM_ON = 0x0F;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODc0MTM2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOToyNzowNFrOFqBP5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjoxMTo0MlrOFtWZLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwNDk2Nw==", "bodyText": "limitToOptions = true is default. You do not need to specify it here.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r379604967", "createdAt": "2020-02-14T19:27:04Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"enocean\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<thing-type id=\"multiFunctionSmokeDetector\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"bridge\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Multi Function Smoke Detector</label>\n+\t\t<description>Multi Function Sensor like a Smoke Detector (EEP: F6-05, D2-14)</description>\n+\n+\t\t<config-description>\n+\t\t\t<parameter name=\"enoceanId\" type=\"text\">\n+\t\t\t\t<label>EnOceanId</label>\n+\t\t\t\t<description>EnOceanId of device this thing belongs to</description>\n+\t\t\t\t<required>true</required>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"receivingEEPId\" type=\"text\">\n+\t\t\t\t<label>EEP</label>\n+\t\t\t\t<description>EEP which is used by sensor</description>\n+\t\t\t\t<options>\n+\t\t\t\t\t<option value=\"F6_05_02\">F6-05-02 smoke detector</option>\n+\t\t\t\t\t<option value=\"D2_14_30\">D2-14-30 multi function sensor for smoke</option>\n+\t\t\t\t\t<option value=\"A5_30_03_ELTAKO\">A5-30-03 Eltako smoke detectors (FHMB, FRWB)</option>\n+\t\t\t\t</options>\n+\t\t\t\t<limitToOptions>true</limitToOptions>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5NzEzNQ==", "bodyText": "Fixed it.", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r383097135", "createdAt": "2020-02-24T06:11:42Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/MultiFunctionSmokeDetector.xml", "diffHunk": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<thing:thing-descriptions bindingId=\"enocean\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n+\n+\t<thing-type id=\"multiFunctionSmokeDetector\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"bridge\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Multi Function Smoke Detector</label>\n+\t\t<description>Multi Function Sensor like a Smoke Detector (EEP: F6-05, D2-14)</description>\n+\n+\t\t<config-description>\n+\t\t\t<parameter name=\"enoceanId\" type=\"text\">\n+\t\t\t\t<label>EnOceanId</label>\n+\t\t\t\t<description>EnOceanId of device this thing belongs to</description>\n+\t\t\t\t<required>true</required>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"receivingEEPId\" type=\"text\">\n+\t\t\t\t<label>EEP</label>\n+\t\t\t\t<description>EEP which is used by sensor</description>\n+\t\t\t\t<options>\n+\t\t\t\t\t<option value=\"F6_05_02\">F6-05-02 smoke detector</option>\n+\t\t\t\t\t<option value=\"D2_14_30\">D2-14-30 multi function sensor for smoke</option>\n+\t\t\t\t\t<option value=\"A5_30_03_ELTAKO\">A5-30-03 Eltako smoke detectors (FHMB, FRWB)</option>\n+\t\t\t\t</options>\n+\t\t\t\t<limitToOptions>true</limitToOptions>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwNDk2Nw=="}, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODc1MjMxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxOTozMTowNFrOFqBW_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwNjoxMjozNlrOFtWZrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwNjc4MA==", "bodyText": "Do we need a pattern for the QuantityType items?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<state readOnly=\"true\" />\n          \n          \n            \n            \t\t<state readOnly=\"true\" pattern=\"%.1f %unit%\" />", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r379606780", "createdAt": "2020-02-14T19:31:04Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +450,85 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance Neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number:Time</item-type>\n+\t\t<label>Time Since Last Maintenance</label>\n+\t\t<description>Time since last maintenance was done.</description>\n+\t\t<state readOnly=\"true\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA5NzI2Mw==", "bodyText": "Missed to add it, as it was a simple number channel in first place. Thanks for the hint \ud83d\udc4d", "url": "https://github.com/openhab/openhab-addons/pull/6930#discussion_r383097263", "createdAt": "2020-02-24T06:12:36Z", "author": {"login": "fruggy83"}, "path": "bundles/org.openhab.binding.enocean/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -449,4 +450,85 @@\n \t\t<category>thermostat</category>\n \t</channel-type>\n \n+\t<channel-type id=\"smokeDetection\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Smoke Detected</label>\n+\t\t<description>Smoke detection sensor state.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"sensorFault\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Sensor Fault Mode</label>\n+\t\t<description>Sensor activated fault mode.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"maintenanceStatus\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Maintenance Neccessary</label>\n+\t\t<description>Sensor maintenance status.</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saHumidityRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Humidity Range</label>\n+\t\t<description>Sensor analysis status: humidity out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"saTemperatureRange\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Out of Temperature Range</label>\n+\t\t<description>Sensor analysis status: temperature out of range</description>\n+\t\t<state readOnly=\"true\" />\n+\t</channel-type>\n+\n+\t<channel-type id=\"timeSinceLastMaintenance\">\n+\t\t<item-type>Number:Time</item-type>\n+\t\t<label>Time Since Last Maintenance</label>\n+\t\t<description>Time since last maintenance was done.</description>\n+\t\t<state readOnly=\"true\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwNjc4MA=="}, "originalCommit": {"oid": "6a099c8949de30a9c1e60415f9ac76e42c21616f"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 801, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}