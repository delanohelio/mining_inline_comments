{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjYyMjk0", "number": 6966, "title": "[lutron] Add support for mDNS bridge discovery", "bodyText": "This update allows Caseta Smart Bridge Pro 2 devices to be automatically discovered via mDNS through the use of a MDNSDiscoveryParticipant service.\nThe new discovery service should also be able to find other recent Lutron devices discoverable via mDNS/DNS-SD (not all of which are supported by openHAB) such as Caseta Smart Bridge 1, RA2 Select main repeaters, and the Lutron Connect Bridge (CONNECT-BDG2). Discovery of these should currently not result in the creation of a discovered thing in the inbox, but instead will cause a log message such as the following to be generated;\nLutron device with unknown DEVCLASS discovered via mDNS: XXXXXXXX. Configure device manually.\nAs users report DEVCLASS information from currently unrecognized devices, discovery support for these can be added as well.\nA test build has been available here:\nhttps://github.com/bobadair/openhab2-addons/releases/tag/mdns-beta3", "createdAt": "2020-02-06T01:15:37Z", "url": "https://github.com/openhab/openhab-addons/pull/6966", "merged": true, "mergeCommit": {"oid": "3438469666c344b608bfe3822c91d7d023c66c9e"}, "closed": true, "closedAt": "2020-03-06T21:57:14Z", "author": {"login": "bobadair"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBeMdXAH2gAyMzcxNjYyMjk0OmYxMTFmZDYyZjcwNDY5MzY4ODM4NGJkZGIzMmJmZmE4ZDgzMGYzODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLEolgAFqTM3MDU0MzgxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f111fd62f704693688384bddb32bffa8d830f384", "author": {"user": {"login": "bobadair", "name": "Bob A."}}, "url": "https://github.com/openhab/openhab-addons/commit/f111fd62f704693688384bddb32bffa8d830f384", "committedDate": "2020-02-05T22:50:46Z", "message": "[lutron] Add support for mDNS bridge discovery\n\n* Add support for mDNS bridge discovery\n* Add additional properties for all LIP bridges\n* Restrict mDNS discovery to Smart Bridge Pro 2\n\nSigned-off-by: Bob Adair <bob.github@att.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e9a47f45f6e3e31496093e648c8e6584a5b2611", "author": {"user": {"login": "bobadair", "name": "Bob A."}}, "url": "https://github.com/openhab/openhab-addons/commit/2e9a47f45f6e3e31496093e648c8e6584a5b2611", "committedDate": "2020-02-05T22:50:46Z", "message": "[lutron] Minor updates to mDNS discovery\n\nSigned-off-by: Bob Adair <bob.github@att.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5Mzk3MDY1", "url": "https://github.com/openhab/openhab-addons/pull/6966#pullrequestreview-359397065", "createdAt": "2020-02-16T11:35:07Z", "commit": {"oid": "3147ee6dafb74a56b6fc15efab7246bf12bb6e7d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMTozNTozN1rOFqTA-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMTo0NDowMFrOFqTDQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NjA1Nw==", "bodyText": "There are global constants available for some properties like this (see Thing.java).", "url": "https://github.com/openhab/openhab-addons/pull/6966#discussion_r379896057", "createdAt": "2020-02-16T11:35:37Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/LutronBindingConstants.java", "diffHunk": "@@ -73,6 +73,11 @@\n     public static final String SERIAL_NUMBER = \"serialNumber\";\n     public static final String DISCOVERY_FILE = \"discoveryFile\";\n \n+    public static final String PROPERTY_PRODFAM = \"productFamily\";\n+    public static final String PROPERTY_PRODTYP = \"productType\";\n+    public static final String PROPERTY_CODEVER = \"version\";\n+    public static final String PROPERTY_MACADDR = \"macAddress\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3147ee6dafb74a56b6fc15efab7246bf12bb6e7d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NjQ4OA==", "bodyText": "I think we can reduce logging level to DEBUG here. Otherwise it may spam log files if a user is not interested in discovery or does not have the chance to solve it.", "url": "https://github.com/openhab/openhab-addons/pull/6966#discussion_r379896488", "createdAt": "2020-02-16T11:41:50Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/discovery/LutronMdnsBridgeDiscoveryService.java", "diffHunk": "@@ -0,0 +1,184 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+\n+package org.openhab.binding.lutron.internal.discovery;\n+\n+import static org.openhab.binding.lutron.internal.LutronBindingConstants.*;\n+\n+import java.net.InetAddress;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import javax.jmdns.ServiceInfo;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.config.discovery.DiscoveryResult;\n+import org.eclipse.smarthome.config.discovery.DiscoveryResultBuilder;\n+import org.eclipse.smarthome.config.discovery.mdns.MDNSDiscoveryParticipant;\n+import org.eclipse.smarthome.core.thing.ThingTypeUID;\n+import org.eclipse.smarthome.core.thing.ThingUID;\n+import org.osgi.service.component.annotations.Component;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@link LutronMdnsBridgeDiscoveryService} discovers Lutron Caseta Smart Bridge Pro and eventually RA2 Select Main\n+ * Repeater and other Lutron devices on the network using mDNS.\n+ *\n+ * @author Bob Adair - Initial contribution\n+ */\n+@Component(immediate = true)\n+@NonNullByDefault\n+public class LutronMdnsBridgeDiscoveryService implements MDNSDiscoveryParticipant {\n+\n+    // Lutron mDNS service <app>.<protocol>.<servicedomain>\n+    private static final String LUTRON_MDNS_SERVICE_TYPE = \"_lutron._tcp.local.\";\n+\n+    private static final String PRODFAM_CASETA = \"Caseta\";\n+    private static final String PRODTYP_CASETA_SBP2 = \"Smart Bridge Pro 2\";\n+    private static final String DEVCLASS_CASETA_SBP2 = \"08050100\";\n+    private static final String DEFAULT_LABEL = \"Unknown Lutron bridge\";\n+\n+    private static final Pattern HOSTNAME_REGEX = Pattern.compile(\"lutron-([0-9a-f]+)\\\\.\"); // ex: lutron-01f1529a.local\n+\n+    private final Logger logger = LoggerFactory.getLogger(LutronMdnsBridgeDiscoveryService.class);\n+\n+    @Override\n+    public Set<ThingTypeUID> getSupportedThingTypeUIDs() {\n+        return Collections.singleton(THING_TYPE_IPBRIDGE);\n+    }\n+\n+    @Override\n+    public String getServiceType() {\n+        return LUTRON_MDNS_SERVICE_TYPE;\n+    }\n+\n+    @Override\n+    public @Nullable DiscoveryResult createResult(ServiceInfo service) {\n+        if (!service.hasData()) {\n+            return null;\n+        }\n+\n+        String nice = service.getNiceTextString();\n+        String qualifiedName = service.getQualifiedName();\n+\n+        InetAddress[] ipAddresses = service.getInetAddresses();\n+        String devclass = service.getPropertyString(\"DEVCLASS\");\n+        String codever = service.getPropertyString(\"CODEVER\");\n+        String macaddr = service.getPropertyString(\"MACADDR\");\n+\n+        logger.debug(\"Lutron mDNS bridge discovery notified of Lutron mDNS service: {}\", nice);\n+        logger.trace(\"Lutron mDNS service qualifiedName: {}\", qualifiedName);\n+        logger.trace(\"Lutron mDNS service ipAddresses: {} ({})\", ipAddresses, ipAddresses.length);\n+        logger.trace(\"Lutron mDNS service property DEVCLASS: {}\", devclass);\n+        logger.trace(\"Lutron mDNS service property CODEVER: {}\", codever);\n+        logger.trace(\"Lutron mDNS service property MACADDR: {}\", macaddr);\n+\n+        Map<String, Object> properties = new HashMap<>();\n+        String label = DEFAULT_LABEL;\n+\n+        if (ipAddresses.length < 1) {\n+            return null;\n+        }\n+        if (ipAddresses.length > 1) {\n+            logger.debug(\"Multiple addresses found for discovered Lutron device. Using only the first.\");\n+        }\n+        properties.put(HOST, ipAddresses[0].getHostAddress());\n+\n+        String bridgeHostName = ipAddresses[0].getHostName();\n+        logger.debug(\"Lutron mDNS bridge hostname: {}\", bridgeHostName);\n+\n+        if (devclass != null && devclass.equals(DEVCLASS_CASETA_SBP2)) {\n+            properties.put(PROPERTY_PRODFAM, PRODFAM_CASETA);\n+            properties.put(PROPERTY_PRODTYP, PRODTYP_CASETA_SBP2);\n+            label = PRODFAM_CASETA + \" \" + PRODTYP_CASETA_SBP2;\n+        } else {\n+            logger.info(\"Lutron device with unknown DEVCLASS discovered via mDNS: {}. Configure device manually.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3147ee6dafb74a56b6fc15efab7246bf12bb6e7d"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NjY0MA==", "bodyText": "We plan to get rid of apache.commons dependency in OH3. Are you able to replace the usage of StringUtils in this class?", "url": "https://github.com/openhab/openhab-addons/pull/6966#discussion_r379896640", "createdAt": "2020-02-16T11:44:00Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/discovery/LutronMcastBridgeDiscoveryService.java", "diffHunk": "@@ -188,15 +189,22 @@ private void createBridge(DatagramPacket packet) {\n                 properties.put(SERIAL_NUMBER, serialNumber);\n \n                 if (PRODFAM_RA2.equals(productFamily)) {\n-                    properties.put(\"productFamily\", \"RadioRA 2\");\n+                    properties.put(PROPERTY_PRODFAM, \"RadioRA 2\");\n                 } else if (PRODFAM_HWQS.equals(productFamily)) {\n-                    properties.put(\"productFamily\", \"HomeWorks QS\");\n+                    properties.put(PROPERTY_PRODFAM, \"HomeWorks QS\");\n                 } else {\n-                    properties.put(\"productFamily\", productFamily);\n+                    properties.put(PROPERTY_PRODFAM, productFamily);\n                 }\n \n-                properties.put(\"productType\", productType);\n-                properties.put(\"version\", codeVersion);\n+                if (StringUtils.isNotBlank(productType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3147ee6dafb74a56b6fc15efab7246bf12bb6e7d"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38d54e735428c4354cae83e73f1b824b95e9fd2a", "author": {"user": {"login": "bobadair", "name": "Bob A."}}, "url": "https://github.com/openhab/openhab-addons/commit/38d54e735428c4354cae83e73f1b824b95e9fd2a", "committedDate": "2020-02-19T19:53:54Z", "message": "[lutron] Address review comments\n\nSigned-off-by: Bob Adair <bob.github@att.net>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3147ee6dafb74a56b6fc15efab7246bf12bb6e7d", "author": {"user": {"login": "bobadair", "name": "Bob A."}}, "url": "https://github.com/openhab/openhab-addons/commit/3147ee6dafb74a56b6fc15efab7246bf12bb6e7d", "committedDate": "2020-01-04T22:27:15Z", "message": "[lutron] Minor updates to mDNS discovery\n\nSigned-off-by: Bob Adair <bob.github@att.net>"}, "afterCommit": {"oid": "38d54e735428c4354cae83e73f1b824b95e9fd2a", "author": {"user": {"login": "bobadair", "name": "Bob A."}}, "url": "https://github.com/openhab/openhab-addons/commit/38d54e735428c4354cae83e73f1b824b95e9fd2a", "committedDate": "2020-02-19T19:53:54Z", "message": "[lutron] Address review comments\n\nSigned-off-by: Bob Adair <bob.github@att.net>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzAyMDAw", "url": "https://github.com/openhab/openhab-addons/pull/6966#pullrequestreview-368302000", "createdAt": "2020-03-03T20:31:19Z", "commit": {"oid": "38d54e735428c4354cae83e73f1b824b95e9fd2a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTQzODE3", "url": "https://github.com/openhab/openhab-addons/pull/6966#pullrequestreview-370543817", "createdAt": "2020-03-06T18:43:12Z", "commit": {"oid": "38d54e735428c4354cae83e73f1b824b95e9fd2a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1356, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}