{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3Mzk5MDM4", "number": 7850, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozNjo1MVrOEEGgbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozNjo1MVrOEEGgbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzM2MzY0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/discovery/AstroDiscoveryService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozNjo1MVrOGhg--w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozNjo1MVrOGhg--w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NjYwMw==", "bodyText": "You need to call activate otherwise background discovery will not start.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        final @Reference LocaleProvider localeProvider, final @Reference TranslationProvider i18nProvider) {\n          \n          \n            \n                    super(new HashSet<>(Arrays.asList(new ThingTypeUID(BINDING_ID, \"-\"))), DISCOVER_TIMEOUT_SECONDS, true);\n          \n          \n            \n                    this.locationProvider = locationProvider;\n          \n          \n            \n                    this.localeProvider = localeProvider;\n          \n          \n            \n                    this.i18nProvider = i18nProvider;\n          \n          \n            \n                        final @Reference LocaleProvider localeProvider, final @Reference TranslationProvider i18nProvider,\n          \n          \n            \n                        Map<String, Object> configProperties) {\n          \n          \n            \n                    super(new HashSet<>(Arrays.asList(new ThingTypeUID(BINDING_ID, \"-\"))), DISCOVER_TIMEOUT_SECONDS, true);\n          \n          \n            \n                    this.locationProvider = locationProvider;\n          \n          \n            \n                    this.localeProvider = localeProvider;\n          \n          \n            \n                    this.i18nProvider = i18nProvider;\n          \n          \n            \n                    activate(configProperties);", "url": "https://github.com/openhab/openhab-addons/pull/7850#discussion_r437796603", "createdAt": "2020-06-10T00:36:51Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.astro/src/main/java/org/openhab/binding/astro/internal/discovery/AstroDiscoveryService.java", "diffHunk": "@@ -44,41 +43,29 @@\n  * @author Gerhard Riegler - Initial Contribution\n  * @author Stefan Triller - Use configured location\n  */\n+@NonNullByDefault\n @Component(service = DiscoveryService.class, immediate = true, configurationPid = \"discovery.astro\")\n public class AstroDiscoveryService extends AbstractDiscoveryService {\n-    private final Logger logger = LoggerFactory.getLogger(AstroDiscoveryService.class);\n     private static final int DISCOVER_TIMEOUT_SECONDS = 2;\n     private static final int LOCATION_CHANGED_CHECK_INTERVAL = 60;\n-    private LocationProvider locationProvider;\n-    private ScheduledFuture<?> astroDiscoveryJob;\n-    private PointType previousLocation;\n \n     private static final ThingUID SUN_THING = new ThingUID(THING_TYPE_SUN, LOCAL);\n     private static final ThingUID MOON_THING = new ThingUID(THING_TYPE_MOON, LOCAL);\n \n-    /**\n-     * Creates a AstroDiscoveryService with enabled autostart.\n-     */\n-    public AstroDiscoveryService() {\n-        super(new HashSet<>(Arrays.asList(new ThingTypeUID(BINDING_ID, \"-\"))), DISCOVER_TIMEOUT_SECONDS, true);\n-    }\n+    private final Logger logger = LoggerFactory.getLogger(AstroDiscoveryService.class);\n \n-    @Override\n-    @Activate\n-    protected void activate(Map<String, Object> configProperties) {\n-        super.activate(configProperties);\n-    }\n+    private final LocationProvider locationProvider;\n \n-    @Override\n-    @Modified\n-    protected void modified(Map<String, Object> configProperties) {\n-        super.modified(configProperties);\n-    }\n+    private @Nullable ScheduledFuture<?> astroDiscoveryJob;\n+    private @Nullable PointType previousLocation;\n \n-    @Override\n-    @Deactivate\n-    protected void deactivate() {\n-        super.deactivate();\n+    @Activate\n+    public AstroDiscoveryService(final @Reference LocationProvider locationProvider,\n+            final @Reference LocaleProvider localeProvider, final @Reference TranslationProvider i18nProvider) {\n+        super(new HashSet<>(Arrays.asList(new ThingTypeUID(BINDING_ID, \"-\"))), DISCOVER_TIMEOUT_SECONDS, true);\n+        this.locationProvider = locationProvider;\n+        this.localeProvider = localeProvider;\n+        this.i18nProvider = i18nProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d59c502aa65e0680525834d74daf6af1b9e587bd"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4977, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}