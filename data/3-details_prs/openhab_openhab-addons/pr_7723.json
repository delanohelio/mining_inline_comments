{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTQ5OTI1", "number": 7723, "title": "[mqtt] Correctly unsubscribe after message is received", "bodyText": "The future attribute was overwritten in the constructor and, as a consequence, the whenComplete lambda method was not called. This made it impossible to re-subscribe to the same topic from the same connection. This fix is critical for Homie users, as the extensions uses this function in the discovery process.\nA couple of typos are also fixed.\nCloses #6975\nCloses #7252\nReviewers: @jochen314, @J-N-K, @cpmeister\nSigned-off-by: Aitor Iturrioz riturrioz@gmail.com", "createdAt": "2020-05-21T19:54:59Z", "url": "https://github.com/openhab/openhab-addons/pull/7723", "merged": true, "mergeCommit": {"oid": "b88351296bd0072cf9739202829fb3a2c8030212"}, "closed": true, "closedAt": "2020-05-23T17:33:29Z", "author": {"login": "bodiroga"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjjC96gH2gAyNDIxNTQ5OTI1OjRlNDk3NTQwN2I0NWU2OWY4N2U2ZTViOTEwNThiOWE1ZDA3NjA5YjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckKYLegFqTQxNzI5NDk0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e4975407b45e69f87e6e5b91058b9a5d07609b6", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/4e4975407b45e69f87e6e5b91058b9a5d07609b6", "committedDate": "2020-05-21T19:43:21Z", "message": "Correctly unsubscribe after message is received\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NDgwMTQx", "url": "https://github.com/openhab/openhab-addons/pull/7723#pullrequestreview-416480141", "createdAt": "2020-05-21T20:47:17Z", "commit": {"oid": "4e4975407b45e69f87e6e5b91058b9a5d07609b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDo0NzozNVrOGZCT4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDo1NTowM1rOGZCigw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkwNTQ0Mw==", "bodyText": "The default charset varies from system to system so it is better to specify it yourself instead of using the default.", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r428905443", "createdAt": "2020-05-21T20:47:35Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -46,11 +46,11 @@ public WaitForTopicValue(MqttBrokerConnection connection, String topic)\n         final MqttMessageSubscriber mqttMessageSubscriber = (t, payload) -> {\n             future.complete(new String(payload));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e4975407b45e69f87e6e5b91058b9a5d07609b6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkwODY5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private CompletableFuture<String> future = new CompletableFuture<>();\n          \n          \n            \n                private final CompletableFuture<String> future = new CompletableFuture<>();", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r428908699", "createdAt": "2020-05-21T20:54:01Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -24,14 +24,14 @@\n import org.eclipse.smarthome.io.transport.mqtt.MqttMessageSubscriber;\n \n /**\n- * Waits for a topic value to appear on a MQTT topic. One-time useable only per instance.\n+ * Waits for a topic value to appear on a MQTT topic. One-time usable only per instance.\n  *\n  * @author David Graeff - Initial contribution\n  */\n @NonNullByDefault\n public class WaitForTopicValue {\n     private CompletableFuture<String> future = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e4975407b45e69f87e6e5b91058b9a5d07609b6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkwOTE4Nw==", "bodyText": "seems a bit wasteful to create a new compose future every time. Could you cache subscribeFuture.thenCompose(b -> future) in a field?", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r428909187", "createdAt": "2020-05-21T20:55:03Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -68,7 +68,7 @@ public void stop() {\n      */\n     public @Nullable String waitForTopicValue(int timeoutInMS) {\n         try {\n-            return subscripeFuture.thenCompose(b -> future).get(timeoutInMS, TimeUnit.MILLISECONDS);\n+            return subscribeFuture.thenCompose(b -> future).get(timeoutInMS, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e4975407b45e69f87e6e5b91058b9a5d07609b6"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd89d052d2db876073f7dae4b766b7209ec45d6f", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/bd89d052d2db876073f7dae4b766b7209ec45d6f", "committedDate": "2020-05-21T21:59:08Z", "message": "Address review comments\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NjIzMTQ1", "url": "https://github.com/openhab/openhab-addons/pull/7723#pullrequestreview-416623145", "createdAt": "2020-05-22T03:18:07Z", "commit": {"oid": "bd89d052d2db876073f7dae4b766b7209ec45d6f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMzoxODowN1rOGZJbuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMzozMDo0OVrOGZJmNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyMjEzNw==", "bodyText": "You probably don't need the subscribeFuture field anymore.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    subscribeFuture = connection.subscribe(topic, mqttMessageSubscriber);\n          \n          \n            \n            \n          \n          \n            \n                    composeFuture = subscribeFuture.thenCompose(b -> future);\n          \n          \n            \n                    composeFuture = connection.subscribe(topic, mqttMessageSubscriber).thenCompose(b -> future);", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429022137", "createdAt": "2020-05-22T03:18:07Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -44,13 +46,19 @@\n     public WaitForTopicValue(MqttBrokerConnection connection, String topic)\n             throws InterruptedException, ExecutionException {\n         final MqttMessageSubscriber mqttMessageSubscriber = (t, payload) -> {\n-            future.complete(new String(payload));\n+            try {\n+                future.complete(new String(payload, \"UTF-8\"));\n+            } catch (UnsupportedEncodingException e1) {\n+                future.complete(new String(payload));\n+            }\n         };\n-        future = future.whenComplete((r, e) -> {\n+        future.whenComplete((r, e) -> {\n             connection.unsubscribe(topic, mqttMessageSubscriber);\n         });\n \n-        subscripeFuture = connection.subscribe(topic, mqttMessageSubscriber);\n+        subscribeFuture = connection.subscribe(topic, mqttMessageSubscriber);\n+\n+        composeFuture = subscribeFuture.thenCompose(b -> future);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd89d052d2db876073f7dae4b766b7209ec45d6f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNDgyMw==", "bodyText": "I suspect that you should replace usages of future in this class with composeFuture.\nYour timeout  method completes the future but the result of that future isn't available until the subscribeFuture completes first so your timeout wouldn't actually cause the timeout as you would expect.\nHowever if you caused the timeout on the composeFuture everything would operate as you would expect.", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429024823", "createdAt": "2020-05-22T03:30:49Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -24,14 +25,15 @@\n import org.eclipse.smarthome.io.transport.mqtt.MqttMessageSubscriber;\n \n /**\n- * Waits for a topic value to appear on a MQTT topic. One-time useable only per instance.\n+ * Waits for a topic value to appear on a MQTT topic. One-time usable only per instance.\n  *\n  * @author David Graeff - Initial contribution\n  */\n @NonNullByDefault\n public class WaitForTopicValue {\n-    private CompletableFuture<String> future = new CompletableFuture<>();\n-    private final CompletableFuture<Boolean> subscripeFuture;\n+    private final CompletableFuture<String> future = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd89d052d2db876073f7dae4b766b7209ec45d6f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/4f6810a2024d8e60c39ffd35d4e0c8a07697c70b", "committedDate": "2020-05-23T00:13:49Z", "message": "Address more review comments\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjM5OTg2", "url": "https://github.com/openhab/openhab-addons/pull/7723#pullrequestreview-417239986", "createdAt": "2020-05-23T01:42:47Z", "commit": {"oid": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMTo0Mjo0OFrOGZmylg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QwMTo0NDozNVrOGZmzGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwMzEyNg==", "bodyText": "I don't see anywhere this would be thrown. It should be safe to remove these exceptions.", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429503126", "createdAt": "2020-05-23T01:42:48Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -44,20 +45,24 @@\n     public WaitForTopicValue(MqttBrokerConnection connection, String topic)\n             throws InterruptedException, ExecutionException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUwMzI1Ng==", "bodyText": "I don't think this needs to be a field anymore since it isn't used outside of the constructor.", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429503256", "createdAt": "2020-05-23T01:44:35Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -24,14 +25,14 @@\n import org.eclipse.smarthome.io.transport.mqtt.MqttMessageSubscriber;\n \n /**\n- * Waits for a topic value to appear on a MQTT topic. One-time useable only per instance.\n+ * Waits for a topic value to appear on a MQTT topic. One-time usable only per instance.\n  *\n  * @author David Graeff - Initial contribution\n  */\n @NonNullByDefault\n public class WaitForTopicValue {\n-    private CompletableFuture<String> future = new CompletableFuture<>();\n-    private final CompletableFuture<Boolean> subscripeFuture;\n+    private final CompletableFuture<String> future = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjczOTkz", "url": "https://github.com/openhab/openhab-addons/pull/7723#pullrequestreview-417273993", "createdAt": "2020-05-23T12:10:24Z", "commit": {"oid": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMjoxMDoyNFrOGZpEcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMjoxMDoyNFrOGZpEcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0MDQ2NQ==", "bodyText": "Is it possible to use the String(byte[] bytes, Charset charset) method with const StandardCharsets.UTF_8 to omit the UnsupportedEncodingException?", "url": "https://github.com/openhab/openhab-addons/pull/7723#discussion_r429540465", "createdAt": "2020-05-23T12:10:24Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.mqtt.generic/src/main/java/org/openhab/binding/mqtt/generic/tools/WaitForTopicValue.java", "diffHunk": "@@ -44,20 +45,24 @@\n     public WaitForTopicValue(MqttBrokerConnection connection, String topic)\n             throws InterruptedException, ExecutionException {\n         final MqttMessageSubscriber mqttMessageSubscriber = (t, payload) -> {\n-            future.complete(new String(payload));\n+            try {\n+                future.complete(new String(payload, \"UTF-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f6810a2024d8e60c39ffd35d4e0c8a07697c70b"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebcd85bb2f1cf3d7c6f9737caa8e76119255ccff", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/ebcd85bb2f1cf3d7c6f9737caa8e76119255ccff", "committedDate": "2020-05-23T12:25:31Z", "message": "Address even more review comments\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d284edd07aa2c2e33089c5527acf29fab0c198c8", "author": {"user": {"login": "bodiroga", "name": "Aitor Iturrioz"}}, "url": "https://github.com/openhab/openhab-addons/commit/d284edd07aa2c2e33089c5527acf29fab0c198c8", "committedDate": "2020-05-23T12:39:59Z", "message": "Use StandardCharset for UTF-8\n\nSigned-off-by: Aitor Iturrioz <riturrioz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjgwNDgx", "url": "https://github.com/openhab/openhab-addons/pull/7723#pullrequestreview-417280481", "createdAt": "2020-05-23T13:51:58Z", "commit": {"oid": "d284edd07aa2c2e33089c5527acf29fab0c198c8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mjk0OTQ0", "url": "https://github.com/openhab/openhab-addons/pull/7723#pullrequestreview-417294944", "createdAt": "2020-05-23T17:32:49Z", "commit": {"oid": "d284edd07aa2c2e33089c5527acf29fab0c198c8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 639, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}