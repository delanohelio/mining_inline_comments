{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyOTU0NTcz", "number": 9434, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxMjowOTowOVrOFHjyIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxMjowOTowOVrOFHjyIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDcwNjI3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxMjowOTowOVrOIJDqSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxODoyMjowMVrOILeKsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ==", "bodyText": "float and double shouldn't be compared with ==. You could use >= and <=.", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546368075", "createdAt": "2020-12-20T12:09:09Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM3Nzc3OA==", "bodyText": "I agree with you, that == is normally not a good idea for float/double. In this case I tested it with these values, but I changed the comparison to make it more safe.", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546377778", "createdAt": "2020-12-20T13:33:06Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM4MTEzMQ==", "bodyText": "Wouldn't it be better to create a new BigDecimal(dp.getMaxValue().toString()) and use compareTo(new BigDecimal(\"1.01\"))? Then the compared values would still make sense for the reader of the code.", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546381131", "createdAt": "2020-12-20T14:01:06Z", "author": {"login": "XeS0r"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM4MjgxNQ==", "bodyText": "I thought about using BigDecimal for the comparison but I wanted to avoid the overhead.", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546382815", "createdAt": "2020-12-20T14:15:10Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM4NzI2OQ==", "bodyText": "I've checked the code and maxValue from HmDataPoint() is already converted to BigDecimal() at that point. Therefore we could simply use the max variable for comparism.\nmax.compareTo(BigDecimal.valueof(\"1.0\") == 0 || max.compareTo(BigDecimal.valueof(\"1.01\") == 0\nMaybe that is a better solution. What do you think?", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546387269", "createdAt": "2020-12-20T14:53:14Z", "author": {"login": "XeS0r"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQxMjMxMQ==", "bodyText": "Hmm, I think this would be similar to my original solution with \"==\".", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546412311", "createdAt": "2020-12-20T18:30:00Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQxNTUxOA==", "bodyText": "max is BigDecimal() and therefore compareTo() would honor it's value properly instead of \"==\".", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546415518", "createdAt": "2020-12-20T19:00:45Z", "author": {"login": "XeS0r"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5MzE3MQ==", "bodyText": "How should we proceed? I would really like to see this fix in OH3 before it will be released.", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546593171", "createdAt": "2020-12-21T09:17:48Z", "author": {"login": "XeS0r"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY2MDc0NQ==", "bodyText": "I agree to @XeS0r this is even more elegeant. The final version of OH3 is probably already built. In any case there's a complete freeze. So, this will probably go into 3.1.", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546660745", "createdAt": "2020-12-21T11:43:17Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0OTU4Mg==", "bodyText": "OK, you conviced me. I have changed it to compareTo (valueOf is not available for String, instead a constructor must be used)", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r546849582", "createdAt": "2020-12-21T18:00:31Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5OTUwNQ==", "bodyText": "@fwolter I have changed the coding according to your proposal. Maybe you can find some time to review it again (and hopefully merge it).", "url": "https://github.com/openhab/openhab-addons/pull/9434#discussion_r548899505", "createdAt": "2020-12-25T18:22:01Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/type/HomematicTypeGeneratorImpl.java", "diffHunk": "@@ -279,8 +279,9 @@ public StateOption createOption(String value, String description) {\n                 BigDecimal min = MetadataUtils.createBigDecimal(dp.getMinValue());\n                 BigDecimal max = MetadataUtils.createBigDecimal(dp.getMaxValue());\n                 BigDecimal step = MetadataUtils.createBigDecimal(dp.getStep());\n-                if (ITEM_TYPE_DIMMER.equals(itemType) && dp.getMaxValue().doubleValue() == 1.01d) {\n-                    // For dimmers with a max value of 1.01 the values must be corrected\n+                if (ITEM_TYPE_DIMMER.equals(itemType)\n+                        && (dp.getMaxValue().doubleValue() == 1.01d || dp.getMaxValue().doubleValue() == 1.0d)) {\n+                    // For dimmers with a max value of 1.01 or 1.0 the values must be corrected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM2ODA3NQ=="}, "originalCommit": {"oid": "7a6aec45d0b6609a523e2750baf80b1e0a9c7537"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3458, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}