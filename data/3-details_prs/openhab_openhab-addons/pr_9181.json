{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5Mzc5NjQ0", "number": 9181, "title": "[modbus] BaseModbusThingHandler: Add ability to retrieve slave address", "bodyText": "I think all features of ModbusEndpointThingHandler are now covered by BaseModbusThingHandler. That is why I made the getter to the ModbusEndpointThingHandler private again. Do you agree @ssalonen?\nSigned-off-by: Fabian Wolter github@fabian-wolter.de", "createdAt": "2020-11-30T08:24:54Z", "url": "https://github.com/openhab/openhab-addons/pull/9181", "merged": true, "mergeCommit": {"oid": "568da33684baef4c2362dcb53846abf55d4f2816"}, "closed": true, "closedAt": "2020-12-05T05:24:56Z", "author": {"login": "fwolter"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhguKNgH2gAyNTI5Mzc5NjQ0OjEzMDFiN2RiOWM5ZmVjYjQ2ZDY5ZDcxY2RmYzBkN2FjNTI0YjY1Y2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi_edcgFqTU0NTM0MDA1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1301b7db9c9fecb46d69d71cdfc0d7ac524b65cd", "author": {"user": {"login": "fwolter", "name": "Fabian Wolter"}}, "url": "https://github.com/openhab/openhab-addons/commit/1301b7db9c9fecb46d69d71cdfc0d7ac524b65cd", "committedDate": "2020-11-30T08:04:07Z", "message": "[modbus] BaseModbusThingHandler: Add ability to retrieve slave address\n\nSigned-off-by: Fabian Wolter <github@fabian-wolter.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMTM4NDM2", "url": "https://github.com/openhab/openhab-addons/pull/9181#pullrequestreview-541138436", "createdAt": "2020-11-30T17:34:36Z", "commit": {"oid": "1301b7db9c9fecb46d69d71cdfc0d7ac524b65cd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzozNDozNlrOH8GCPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzozODoxMFrOH8GLaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3NTQ4NQ==", "bodyText": "Hmm this will now raise unchecked exception when bridge is offline e.g due to configuration error? When bridge is having configuration error, the slave id is not available.\nPerhaps the configuration error of bridge is the only situation when these methods can fail?\nShould it set thing to offline with BRIDGE_OFFLINE instead of raising unchecked exception to framework?", "url": "https://github.com/openhab/openhab-addons/pull/9181#discussion_r532775485", "createdAt": "2020-11-30T17:34:36Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/handler/BaseModbusThingHandler.java", "diffHunk": "@@ -59,9 +58,27 @@ public BaseModbusThingHandler(Thing thing) {\n     public void initialize() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1301b7db9c9fecb46d69d71cdfc0d7ac524b65cd"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3NzgzMg==", "bodyText": "Consider renaming the method as it no longer returns endpoint", "url": "https://github.com/openhab/openhab-addons/pull/9181#discussion_r532777832", "createdAt": "2020-11-30T17:38:10Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/handler/BaseModbusThingHandler.java", "diffHunk": "@@ -164,6 +172,16 @@ public ModbusSlaveEndpoint getEndpoint() {\n      * @return the {@link ModbusCommunicationInterface}\n      */\n     private ModbusCommunicationInterface getModbus() {\n+        ModbusCommunicationInterface communicationInterface = getEndpoint().getCommunicationInterface();\n+\n+        if (communicationInterface == null) {\n+            throw new IllegalStateException(\"Failed to retrieve Modbus communication interface\");\n+        } else {\n+            return communicationInterface;\n+        }\n+    }\n+\n+    private ModbusEndpointThingHandler getEndpoint() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1301b7db9c9fecb46d69d71cdfc0d7ac524b65cd"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e074518f9945d993f3af4f4acadbd9aae07ea13", "author": {"user": {"login": "fwolter", "name": "Fabian Wolter"}}, "url": "https://github.com/openhab/openhab-addons/commit/9e074518f9945d993f3af4f4acadbd9aae07ea13", "committedDate": "2020-12-01T18:34:12Z", "message": "Refactor\n\nSigned-off-by: Fabian Wolter <github@fabian-wolter.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce1efe17f635d74e64645568771e06e371c361ed", "author": {"user": {"login": "fwolter", "name": "Fabian Wolter"}}, "url": "https://github.com/openhab/openhab-addons/commit/ce1efe17f635d74e64645568771e06e371c361ed", "committedDate": "2020-12-02T16:32:36Z", "message": "Refactor #2\n\nSigned-off-by: Fabian Wolter <github@fabian-wolter.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MTYwNTM4", "url": "https://github.com/openhab/openhab-addons/pull/9181#pullrequestreview-545160538", "createdAt": "2020-12-04T17:33:44Z", "commit": {"oid": "ce1efe17f635d74e64645568771e06e371c361ed"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozMzo0NFrOH_a3HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozOToxOFrOH_bEhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2MjQyOQ==", "bodyText": "I don't think this is true?", "url": "https://github.com/openhab/openhab-addons/pull/9181#discussion_r536262429", "createdAt": "2020-12-04T17:33:44Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/handler/BaseModbusThingHandler.java", "diffHunk": "@@ -43,23 +42,53 @@\n public abstract class BaseModbusThingHandler extends BaseThingHandler {\n     private List<PollTask> periodicPollers = Collections.synchronizedList(new ArrayList<>());\n     private List<Future<?>> oneTimePollers = Collections.synchronizedList(new ArrayList<>());\n-    private volatile boolean initialized;\n \n     public BaseModbusThingHandler(Thing thing) {\n         super(thing);\n     }\n \n     /**\n-     * This method must be invoked in the base class' initialize() method before any other initialization is done.\n-     * It will throw an unchecked exception if the {@link ModbusCommunicationInterface} is not accessible (fail-fast).\n-     * This prevents any further initialization of the Thing. The framework will set the ThingStatus to\n-     * HANDLER_INITIALIZING_ERROR and display the exception's message.\n+     * This method is called when the Thing is being initialized, but only if the Modbus Bridge is configured correctly.\n+     * The code that normally goes into `BaseThingHandler.initialize()` like configuration reading and validation goes\n+     * here.\n      */\n+    public abstract void modbusInitialize();\n+\n     @Override\n-    public void initialize() {\n-        getModbus();\n+    final public void initialize() {\n+        try {\n+            // check if the Bridge is configured correctly (fail-fast)\n+            getModbus();\n+            getBridgeHandler().getSlaveId();\n+\n+            modbusInitialize();\n+        } catch (EndpointNotInitializedException | IllegalStateException e) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,\n+                    \"Modbus initialization failed: \" + e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Get Slave ID, also called as unit id, represented by the thing\n+     *\n+     * @return slave id represented by this thing handler\n+     * @throws EndpointNotInitializedException in case the initialization is not complete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce1efe17f635d74e64645568771e06e371c361ed"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2MzY0NA==", "bodyText": "BRIDGE_OFFLINE would be more correct for cases when bridge is offline? It would direct the user to look at the bridge error message.\nAre there any other reasons we expect the initialization to fail?", "url": "https://github.com/openhab/openhab-addons/pull/9181#discussion_r536263644", "createdAt": "2020-12-04T17:35:44Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/handler/BaseModbusThingHandler.java", "diffHunk": "@@ -43,23 +42,53 @@\n public abstract class BaseModbusThingHandler extends BaseThingHandler {\n     private List<PollTask> periodicPollers = Collections.synchronizedList(new ArrayList<>());\n     private List<Future<?>> oneTimePollers = Collections.synchronizedList(new ArrayList<>());\n-    private volatile boolean initialized;\n \n     public BaseModbusThingHandler(Thing thing) {\n         super(thing);\n     }\n \n     /**\n-     * This method must be invoked in the base class' initialize() method before any other initialization is done.\n-     * It will throw an unchecked exception if the {@link ModbusCommunicationInterface} is not accessible (fail-fast).\n-     * This prevents any further initialization of the Thing. The framework will set the ThingStatus to\n-     * HANDLER_INITIALIZING_ERROR and display the exception's message.\n+     * This method is called when the Thing is being initialized, but only if the Modbus Bridge is configured correctly.\n+     * The code that normally goes into `BaseThingHandler.initialize()` like configuration reading and validation goes\n+     * here.\n      */\n+    public abstract void modbusInitialize();\n+\n     @Override\n-    public void initialize() {\n-        getModbus();\n+    final public void initialize() {\n+        try {\n+            // check if the Bridge is configured correctly (fail-fast)\n+            getModbus();\n+            getBridgeHandler().getSlaveId();\n+\n+            modbusInitialize();\n+        } catch (EndpointNotInitializedException | IllegalStateException e) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce1efe17f635d74e64645568771e06e371c361ed"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2NTg2MA==", "bodyText": "According to javadoc, null communication interface is returned when initialization is incomplete == bridge is not online.\nBy failing fast (check bridge status) we can offer better error message to user?", "url": "https://github.com/openhab/openhab-addons/pull/9181#discussion_r536265860", "createdAt": "2020-12-04T17:39:18Z", "author": {"login": "ssalonen"}, "path": "bundles/org.openhab.binding.modbus/src/main/java/org/openhab/binding/modbus/handler/BaseModbusThingHandler.java", "diffHunk": "@@ -164,6 +178,16 @@ public ModbusSlaveEndpoint getEndpoint() {\n      * @return the {@link ModbusCommunicationInterface}\n      */\n     private ModbusCommunicationInterface getModbus() {\n+        ModbusCommunicationInterface communicationInterface = getBridgeHandler().getCommunicationInterface();\n+\n+        if (communicationInterface == null) {\n+            throw new IllegalStateException(\"Failed to retrieve Modbus communication interface\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce1efe17f635d74e64645568771e06e371c361ed"}, "originalPosition": 120}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "011cedca524f23de0ac70604351a3d0a61879c99", "author": {"user": {"login": "fwolter", "name": "Fabian Wolter"}}, "url": "https://github.com/openhab/openhab-addons/commit/011cedca524f23de0ac70604351a3d0a61879c99", "committedDate": "2020-12-04T18:39:37Z", "message": "Rework error handling\n\nSigned-off-by: Fabian Wolter <github@fabian-wolter.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MjA5NjU2", "url": "https://github.com/openhab/openhab-addons/pull/9181#pullrequestreview-545209656", "createdAt": "2020-12-04T18:44:18Z", "commit": {"oid": "011cedca524f23de0ac70604351a3d0a61879c99"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MzQwMDUy", "url": "https://github.com/openhab/openhab-addons/pull/9181#pullrequestreview-545340052", "createdAt": "2020-12-04T22:27:57Z", "commit": {"oid": "011cedca524f23de0ac70604351a3d0a61879c99"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3896, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}