{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3ODEzNDU3", "number": 7453, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjozMzozMlrOD126Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMTozNDowNlrOD6ycZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODAwNzM0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjozMzozMlrOGLfz_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwODozOTo0NFrOGLyi6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwODczNA==", "bodyText": "This seems to be wrong. The annotation says \"I know for sure that whenever this field is accessed, it is non-null and that is assured by the framework\". If that would be true, you don't need an Optional later on.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414708734", "createdAt": "2020-04-24T16:33:32Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java", "diffHunk": "@@ -40,14 +40,33 @@\n     public @NonNullByDefault({}) OnOffType engineRunning;\n     public @NonNullByDefault({}) String brakeFluid;\n     public @NonNullByDefault({}) String washerFluidLevel;\n-    public @Nullable WindowsStatus windows;\n-    public @Nullable DoorsStatus doors;\n-    public @Nullable TyrePressure tyrePressure;\n-    public @Nullable HvBattery hvBattery;\n-    public @Nullable Heater heater;\n-\n+    private @NonNullByDefault({}) WindowsStatus windows;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxMjE5NA==", "bodyText": "I had to do this because if I put @nullable instead, the compiler complains because the optional should be Optional<@nullable WindowsStatus> and then everything behind goes wrong. But making another test, Eclipse complains but mvn builds it :-/", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415012194", "createdAt": "2020-04-25T08:17:40Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java", "diffHunk": "@@ -40,14 +40,33 @@\n     public @NonNullByDefault({}) OnOffType engineRunning;\n     public @NonNullByDefault({}) String brakeFluid;\n     public @NonNullByDefault({}) String washerFluidLevel;\n-    public @Nullable WindowsStatus windows;\n-    public @Nullable DoorsStatus doors;\n-    public @Nullable TyrePressure tyrePressure;\n-    public @Nullable HvBattery hvBattery;\n-    public @Nullable Heater heater;\n-\n+    private @NonNullByDefault({}) WindowsStatus windows;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwODczNA=="}, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNTY1Ng==", "bodyText": "I've changed the problem severity in eclipse, still shows as a warning, but as mvn does not complain, I suppose it's fine", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415015656", "createdAt": "2020-04-25T08:39:44Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java", "diffHunk": "@@ -40,14 +40,33 @@\n     public @NonNullByDefault({}) OnOffType engineRunning;\n     public @NonNullByDefault({}) String brakeFluid;\n     public @NonNullByDefault({}) String washerFluidLevel;\n-    public @Nullable WindowsStatus windows;\n-    public @Nullable DoorsStatus doors;\n-    public @Nullable TyrePressure tyrePressure;\n-    public @Nullable HvBattery hvBattery;\n-    public @Nullable Heater heater;\n-\n+    private @NonNullByDefault({}) WindowsStatus windows;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwODczNA=="}, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODAxMzI5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjozNTowMFrOGLf3oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwODozMDoyMFrOGLydJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwOTY2NA==", "bodyText": "This will not work but throw a NoSuchElementException. You need to check for presence and return null if it is not present. But I must admit, that I don't see the benefit of this refactoring, checking isPresent is not better than checking  != null.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414709664", "createdAt": "2020-04-24T16:35:00Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java", "diffHunk": "@@ -44,20 +46,20 @@ public VolvoOnCallActions() {\n     @Override\n     public void setThingHandler(@Nullable ThingHandler handler) {\n         if (handler instanceof VehicleHandler) {\n-            this.handler = (VehicleHandler) handler;\n+            this.handler = Optional.of((VehicleHandler) handler);\n         }\n     }\n \n     @Override\n     public @Nullable ThingHandler getThingHandler() {\n-        return this.handler;\n+        return handler.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxMjY5MQ==", "bodyText": "You're right.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415012691", "createdAt": "2020-04-25T08:20:51Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java", "diffHunk": "@@ -44,20 +46,20 @@ public VolvoOnCallActions() {\n     @Override\n     public void setThingHandler(@Nullable ThingHandler handler) {\n         if (handler instanceof VehicleHandler) {\n-            this.handler = (VehicleHandler) handler;\n+            this.handler = Optional.of((VehicleHandler) handler);\n         }\n     }\n \n     @Override\n     public @Nullable ThingHandler getThingHandler() {\n-        return this.handler;\n+        return handler.get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwOTY2NA=="}, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNDE4MA==", "bodyText": "Moving changes back.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415014180", "createdAt": "2020-04-25T08:30:20Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/action/VolvoOnCallActions.java", "diffHunk": "@@ -44,20 +46,20 @@ public VolvoOnCallActions() {\n     @Override\n     public void setThingHandler(@Nullable ThingHandler handler) {\n         if (handler instanceof VehicleHandler) {\n-            this.handler = (VehicleHandler) handler;\n+            this.handler = Optional.of((VehicleHandler) handler);\n         }\n     }\n \n     @Override\n     public @Nullable ThingHandler getThingHandler() {\n-        return this.handler;\n+        return handler.get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwOTY2NA=="}, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODAxNDI3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjozNToxOFrOGLf4Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjozNToxOFrOGLf4Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwOTgzMQ==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414709831", "createdAt": "2020-04-24T16:35:18Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java", "diffHunk": "@@ -31,9 +32,9 @@\n  */\n @NonNullByDefault\n public class TripDetail {\n-    public @Nullable Integer fuelConsumption;\n-    public @Nullable Integer electricalConsumption;\n-    public @Nullable Integer electricalRegeneration;\n+    private @NonNullByDefault({}) Integer fuelConsumption;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODAxOTE1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjozNjoxNVrOGLf6_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwODo0MDowNFrOGLyjCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMDUyNA==", "bodyText": "We always use @Nullable for the jobs in all bindings. I think it would be better to stay with that.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414710524", "createdAt": "2020-04-24T16:36:15Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -143,9 +149,9 @@ public void initialize() {\n      * @param refresh : refresh frequency in minutes\n      */\n     private void startAutomaticRefresh(int refresh) {\n-        if (refreshJob == null || refreshJob.isCancelled()) {\n-            refreshJob = scheduler.scheduleWithFixedDelay(this::queryApiAndUpdateChannels, 10, refresh,\n-                    TimeUnit.MINUTES);\n+        if (!refreshJob.isPresent() || refreshJob.get().isCancelled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNTY4OA==", "bodyText": "Reverted", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415015688", "createdAt": "2020-04-25T08:40:04Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -143,9 +149,9 @@ public void initialize() {\n      * @param refresh : refresh frequency in minutes\n      */\n     private void startAutomaticRefresh(int refresh) {\n-        if (refreshJob == null || refreshJob.isCancelled()) {\n-            refreshJob = scheduler.scheduleWithFixedDelay(this::queryApiAndUpdateChannels, 10, refresh,\n-                    TimeUnit.MINUTES);\n+        if (!refreshJob.isPresent() || refreshJob.get().isCancelled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMDUyNA=="}, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODAzNDk2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo0MDoxNVrOGLgEpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwODo0MDoxNFrOGLyjHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMjk5Nw==", "bodyText": "This will throw NoSuchElementException if the Optional is empty", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r414712997", "createdAt": "2020-04-24T16:40:15Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -159,15 +165,17 @@ private void queryApiAndUpdateChannels() {\n                 getThing().getChannels().stream().map(Channel::getUID)\n                         .filter(channelUID -> isLinked(channelUID) && !LAST_TRIP_GROUP.equals(channelUID.getGroupId()))\n                         .forEach(channelUID -> {\n-                            State state = getValue(channelUID.getIdWithoutGroup(), vehicleStatus, vehiclePosition);\n+                            State state = getValue(channelUID.getGroupId(), channelUID.getIdWithoutGroup(),\n+                                    vehicleStatus, vehiclePosition);\n \n                             updateState(channelUID, state);\n                         });\n                 updateTrips(bridgeHandler);\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                refreshJob = null;\n+                refreshJob.get().cancel(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAxNTcxMA==", "bodyText": "Reverted", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r415015710", "createdAt": "2020-04-25T08:40:14Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -159,15 +165,17 @@ private void queryApiAndUpdateChannels() {\n                 getThing().getChannels().stream().map(Channel::getUID)\n                         .filter(channelUID -> isLinked(channelUID) && !LAST_TRIP_GROUP.equals(channelUID.getGroupId()))\n                         .forEach(channelUID -> {\n-                            State state = getValue(channelUID.getIdWithoutGroup(), vehicleStatus, vehiclePosition);\n+                            State state = getValue(channelUID.getGroupId(), channelUID.getIdWithoutGroup(),\n+                                    vehicleStatus, vehiclePosition);\n \n                             updateState(channelUID, state);\n                         });\n                 updateTrips(bridgeHandler);\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                refreshJob = null;\n+                refreshJob.get().cancel(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxMjk5Nw=="}, "originalCommit": {"oid": "961f81ed6251a85025cae1c73e1f0d053c4e27a3"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4ODc3NDczOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMDozNToxNVrOGM2iDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMjowMTozNlrOGNQkBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEyOTU1MQ==", "bodyText": "Wouldn't this work?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fuelConsumption != null) {\n          \n          \n            \n                        return Optional.of(fuelConsumption);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                    return Optional.ofNullable(fuelConsumption);\n          \n      \n    \n    \n  \n\nIf not, then this would work for sure, though I prefer the first option if it works.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (fuelConsumption != null) {\n          \n          \n            \n                        return Optional.of(fuelConsumption);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                    Integer fuelConsumption = this.fuelConsumption\n          \n          \n            \n                    if (fuelConsumption != null) {\n          \n          \n            \n                        return Optional.of(fuelConsumption);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r416129551", "createdAt": "2020-04-27T20:35:15Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java", "diffHunk": "@@ -75,4 +75,25 @@ public long getDurationInMinutes() {\n         return Duration.between(startTime, endTime).toMinutes();\n     }\n \n+    public Optional<Integer> getFuelConsumption() {\n+        if (fuelConsumption != null) {\n+            return Optional.of(fuelConsumption);\n+        }\n+        return Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76234835bf4e6ec17696f73656f879df92d57e07"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjU1NjAzNg==", "bodyText": "Tried your first approach without success. The second one seems good.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r416556036", "createdAt": "2020-04-28T12:01:36Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/TripDetail.java", "diffHunk": "@@ -75,4 +75,25 @@ public long getDurationInMinutes() {\n         return Duration.between(startTime, endTime).toMinutes();\n     }\n \n+    public Optional<Integer> getFuelConsumption() {\n+        if (fuelConsumption != null) {\n+            return Optional.of(fuelConsumption);\n+        }\n+        return Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEyOTU1MQ=="}, "originalCommit": {"oid": "76234835bf4e6ec17696f73656f879df92d57e07"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzA2NjgyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDowNDowMlrOGO-YHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDozNDoxOFrOGQDN_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ==", "bodyText": "You should take advantage of having optionals available:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (tripDetails.getFuelConsumption().isPresent()) {\n          \n          \n            \n                                return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n          \n          \n            \n                                        SmartHomeUnits.LITRE);\n          \n          \n            \n                            } else {\n          \n          \n            \n                                return UnDefType.UNDEF;\n          \n          \n            \n                            }\n          \n          \n            \n                            return tripDetails.getFuelConsumption().map(value -> new QuantityType<>(value.floatValue() / 100,\n          \n          \n            \n                                        SmartHomeUnits.LITRE).orElse(UnDefType.UNDEF);", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r418355231", "createdAt": "2020-05-01T00:04:02Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -230,8 +241,9 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     private State getTripValue(String channelId, TripDetail tripDetails) {\n         switch (channelId) {\n             case TRIP_CONSUMPTION:\n-                if (tripDetails.fuelConsumption != null) {\n-                    return new QuantityType<>(tripDetails.fuelConsumption.floatValue() / 100, SmartHomeUnits.LITRE);\n+                if (tripDetails.getFuelConsumption().isPresent()) {\n+                    return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n+                            SmartHomeUnits.LITRE);\n                 } else {\n                     return UnDefType.UNDEF;\n                 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "821938fea14c5b463612dbcd57bc5dbe040e00d8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU2MjcxNQ==", "bodyText": "This does not work. My usage of Optional is not extensive as it could, I must get used to it.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r418562715", "createdAt": "2020-05-01T14:22:43Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -230,8 +241,9 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     private State getTripValue(String channelId, TripDetail tripDetails) {\n         switch (channelId) {\n             case TRIP_CONSUMPTION:\n-                if (tripDetails.fuelConsumption != null) {\n-                    return new QuantityType<>(tripDetails.fuelConsumption.floatValue() / 100, SmartHomeUnits.LITRE);\n+                if (tripDetails.getFuelConsumption().isPresent()) {\n+                    return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n+                            SmartHomeUnits.LITRE);\n                 } else {\n                     return UnDefType.UNDEF;\n                 }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ=="}, "originalCommit": {"oid": "821938fea14c5b463612dbcd57bc5dbe040e00d8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIxMDQ1MA==", "bodyText": "Looks like my suggestion was missing a parenthesis.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r419210450", "createdAt": "2020-05-04T04:37:02Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -230,8 +241,9 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     private State getTripValue(String channelId, TripDetail tripDetails) {\n         switch (channelId) {\n             case TRIP_CONSUMPTION:\n-                if (tripDetails.fuelConsumption != null) {\n-                    return new QuantityType<>(tripDetails.fuelConsumption.floatValue() / 100, SmartHomeUnits.LITRE);\n+                if (tripDetails.getFuelConsumption().isPresent()) {\n+                    return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n+                            SmartHomeUnits.LITRE);\n                 } else {\n                     return UnDefType.UNDEF;\n                 }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ=="}, "originalCommit": {"oid": "821938fea14c5b463612dbcd57bc5dbe040e00d8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4MTM0MA==", "bodyText": "Still fails : The method orElse(QuantityType) in the type Optional<QuantityType> is not applicable for the arguments (UnDefType)", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r419481340", "createdAt": "2020-05-04T14:31:52Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -230,8 +241,9 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     private State getTripValue(String channelId, TripDetail tripDetails) {\n         switch (channelId) {\n             case TRIP_CONSUMPTION:\n-                if (tripDetails.fuelConsumption != null) {\n-                    return new QuantityType<>(tripDetails.fuelConsumption.floatValue() / 100, SmartHomeUnits.LITRE);\n+                if (tripDetails.getFuelConsumption().isPresent()) {\n+                    return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n+                            SmartHomeUnits.LITRE);\n                 } else {\n                     return UnDefType.UNDEF;\n                 }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ=="}, "originalCommit": {"oid": "821938fea14c5b463612dbcd57bc5dbe040e00d8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ4MzEzMw==", "bodyText": "But this seems ok :\nreturn tripDetails.getFuelConsumption()\n                        .map(value -> (State) new QuantityType<>(value.floatValue() / 100, SmartHomeUnits.LITRE))\n                        .orElse(UnDefType.UNDEF);", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r419483133", "createdAt": "2020-05-04T14:34:18Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -230,8 +241,9 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n     private State getTripValue(String channelId, TripDetail tripDetails) {\n         switch (channelId) {\n             case TRIP_CONSUMPTION:\n-                if (tripDetails.fuelConsumption != null) {\n-                    return new QuantityType<>(tripDetails.fuelConsumption.floatValue() / 100, SmartHomeUnits.LITRE);\n+                if (tripDetails.getFuelConsumption().isPresent()) {\n+                    return new QuantityType<>(tripDetails.getFuelConsumption().get().floatValue() / 100,\n+                            SmartHomeUnits.LITRE);\n                 } else {\n                     return UnDefType.UNDEF;\n                 }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM1NTIzMQ=="}, "originalCommit": {"oid": "821938fea14c5b463612dbcd57bc5dbe040e00d8"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjE5NzM1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/PositionData.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzoxMzozOFrOGQzchw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMToxMjozNVrOGQ7wpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MzI4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Optional<ZonedDateTime> getTimestamp() {\n          \n          \n            \n                    ZonedDateTime timestamp = this.timestamp;\n          \n          \n            \n                    if (timestamp != null) {\n          \n          \n            \n                        return Optional.of(timestamp);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                }\n          \n          \n            \n                public Optional<ZonedDateTime> getTimestamp() {\n          \n          \n            \n                    return Optional.ofNullable(timestamp);\n          \n          \n            \n                }", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420273287", "createdAt": "2020-05-05T17:13:38Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/PositionData.java", "diffHunk": "@@ -28,14 +29,21 @@\n public class PositionData {\n     public @Nullable Double longitude;\n     public @Nullable Double latitude;\n-    public @Nullable ZonedDateTime timestamp;\n+    private @Nullable ZonedDateTime timestamp;\n     public @Nullable String speed;\n     private @Nullable String heading;\n \n     public Boolean isHeading() {\n         return \"true\".equalsIgnoreCase(heading);\n     }\n \n+    public Optional<ZonedDateTime> getTimestamp() {\n+        ZonedDateTime timestamp = this.timestamp;\n+        if (timestamp != null) {\n+            return Optional.of(timestamp);\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ace42c92ac9be426602135c8f8b68805841a0c8d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyOTQ5NQ==", "bodyText": "I think I've suggested this before and it can't be done because then it wants you to change the return type to Optional<@Nullable ZonedDateTime>. Really wish we could get a null checker that would allow mixins or at least better support the standard libraries...", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420329495", "createdAt": "2020-05-05T18:45:35Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/PositionData.java", "diffHunk": "@@ -28,14 +29,21 @@\n public class PositionData {\n     public @Nullable Double longitude;\n     public @Nullable Double latitude;\n-    public @Nullable ZonedDateTime timestamp;\n+    private @Nullable ZonedDateTime timestamp;\n     public @Nullable String speed;\n     private @Nullable String heading;\n \n     public Boolean isHeading() {\n         return \"true\".equalsIgnoreCase(heading);\n     }\n \n+    public Optional<ZonedDateTime> getTimestamp() {\n+        ZonedDateTime timestamp = this.timestamp;\n+        if (timestamp != null) {\n+            return Optional.of(timestamp);\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MzI4Nw=="}, "originalCommit": {"oid": "ace42c92ac9be426602135c8f8b68805841a0c8d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQwOTUxMA==", "bodyText": "Yes, @cpmeister is right, I've tried this but does not work.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420409510", "createdAt": "2020-05-05T21:12:35Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/PositionData.java", "diffHunk": "@@ -28,14 +29,21 @@\n public class PositionData {\n     public @Nullable Double longitude;\n     public @Nullable Double latitude;\n-    public @Nullable ZonedDateTime timestamp;\n+    private @Nullable ZonedDateTime timestamp;\n     public @Nullable String speed;\n     private @Nullable String heading;\n \n     public Boolean isHeading() {\n         return \"true\".equalsIgnoreCase(heading);\n     }\n \n+    public Optional<ZonedDateTime> getTimestamp() {\n+        ZonedDateTime timestamp = this.timestamp;\n+        if (timestamp != null) {\n+            return Optional.of(timestamp);\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MzI4Nw=="}, "originalCommit": {"oid": "ace42c92ac9be426602135c8f8b68805841a0c8d"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjIwMDg2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzoxNDoyM1rOGQzepA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzoxNDoyM1rOGQzepA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI3MzgyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Optional<WindowsStatus> getWindows() {\n          \n          \n            \n                    WindowsStatus windows = this.windows;\n          \n          \n            \n                    if (windows != null) {\n          \n          \n            \n                        return Optional.of(windows);\n          \n          \n            \n                    }\n          \n          \n            \n                    return Optional.empty();\n          \n          \n            \n                }\n          \n          \n            \n                public Optional<WindowsStatus> getWindows() {\n          \n          \n            \n                    return Optional.ofNullable(windows);\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nalso below", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420273828", "createdAt": "2020-05-05T17:14:23Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/dto/Status.java", "diffHunk": "@@ -36,17 +37,72 @@\n     public int tripMeter1 = UNDEFINED;\n     public int tripMeter2 = UNDEFINED;\n \n-    public @NonNullByDefault({}) OnOffType carLocked;\n-    public @NonNullByDefault({}) OnOffType engineRunning;\n-    public @NonNullByDefault({}) String brakeFluid;\n-    public @NonNullByDefault({}) String washerFluidLevel;\n-    public @Nullable WindowsStatus windows;\n-    public @Nullable DoorsStatus doors;\n-    public @Nullable TyrePressure tyrePressure;\n-    public @Nullable HvBattery hvBattery;\n-    public @Nullable Heater heater;\n+    private @Nullable OnOffType carLocked;\n+    private @Nullable OnOffType engineRunning;\n+    public String brakeFluid = \"\";\n+    public String washerFluidLevel = \"\";\n+    private @Nullable WindowsStatus windows;\n+    private @Nullable DoorsStatus doors;\n+    private @Nullable TyrePressure tyrePressure;\n+    private @Nullable HvBattery hvBattery;\n+    private @Nullable Heater heater;\n+    public String serviceWarningStatus = \"\";\n+\n+    public Optional<WindowsStatus> getWindows() {\n+        WindowsStatus windows = this.windows;\n+        if (windows != null) {\n+            return Optional.of(windows);\n+        }\n+        return Optional.empty();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ace42c92ac9be426602135c8f8b68805841a0c8d"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjMyMDg3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzo0NTo0MVrOGQ0qbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzo0NTo0MVrOGQ0qbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI5MzIyOA==", "bodyText": "This is really hard to read. Since we only have JDK8 available, maybe something like this\nZonedDateTime dt = vehicle.position.getTimestamp().orElse(vehicle.calculatedPosition.getTimestamp().orElse(null));\nreturn dt != null ? new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault()) : UnDefType.NULL;", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420293228", "createdAt": "2020-05-05T17:45:41Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -81,11 +77,11 @@ public State isHeading() {\n     }\n \n     public State getTimestamp() {\n-        return vehicle.position.timestamp != null\n-                ? new DateTimeType(vehicle.position.timestamp.withZoneSameInstant(ZoneId.systemDefault()))\n-                : vehicle.calculatedPosition.timestamp != null\n-                        ? new DateTimeType(\n-                                vehicle.calculatedPosition.timestamp.withZoneSameInstant(ZoneId.systemDefault()))\n+        return vehicle.position.getTimestamp().isPresent()\n+                ? new DateTimeType(vehicle.position.getTimestamp().get().withZoneSameInstant(ZoneId.systemDefault()))\n+                : vehicle.calculatedPosition.getTimestamp().isPresent()\n+                        ? new DateTimeType(vehicle.calculatedPosition.getTimestamp().get()\n+                                .withZoneSameInstant(ZoneId.systemDefault()))\n                         : UnDefType.NULL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ace42c92ac9be426602135c8f8b68805841a0c8d"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY4NjU5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo1MjoyM1rOGRBmWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODo0MzozMFrOGRJY7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNTE3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return position.map(pos -> pos.getTimestamp()\n          \n          \n            \n                            .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n          \n          \n            \n                            .orElse(UnDefType.NULL)).orElse(UnDefType.UNDEF);\n          \n          \n            \n                    return position.flatMap(pos -> pos.getTimestamp())\n          \n          \n            \n                            .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n          \n          \n            \n                            .orElse(UnDefType.NULL);", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420505178", "createdAt": "2020-05-06T01:52:23Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -69,19 +73,16 @@ public State getPosition() {\n     }\n \n     public State isCalculated() {\n-        return vehicle.calculatedPosition.latitude != null ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> isCalculated ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State isHeading() {\n-        return (vehicle.position.isHeading() || vehicle.calculatedPosition.isHeading()) ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> pos.isHeading() ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State getTimestamp() {\n-        return vehicle.position.getTimestamp().isPresent()\n-                ? new DateTimeType(vehicle.position.getTimestamp().get().withZoneSameInstant(ZoneId.systemDefault()))\n-                : vehicle.calculatedPosition.getTimestamp().isPresent()\n-                        ? new DateTimeType(vehicle.calculatedPosition.getTimestamp().get()\n-                                .withZoneSameInstant(ZoneId.systemDefault()))\n-                        : UnDefType.NULL;\n+        return position.map(pos -> pos.getTimestamp()\n+                .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n+                .orElse(UnDefType.NULL)).orElse(UnDefType.UNDEF);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c565500ea7ea3738a325b381c6866fe00625567"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNzE2Mw==", "bodyText": "You can ignore this suggestion if it isn't the behavior you want.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420507163", "createdAt": "2020-05-06T02:00:42Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -69,19 +73,16 @@ public State getPosition() {\n     }\n \n     public State isCalculated() {\n-        return vehicle.calculatedPosition.latitude != null ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> isCalculated ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State isHeading() {\n-        return (vehicle.position.isHeading() || vehicle.calculatedPosition.isHeading()) ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> pos.isHeading() ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State getTimestamp() {\n-        return vehicle.position.getTimestamp().isPresent()\n-                ? new DateTimeType(vehicle.position.getTimestamp().get().withZoneSameInstant(ZoneId.systemDefault()))\n-                : vehicle.calculatedPosition.getTimestamp().isPresent()\n-                        ? new DateTimeType(vehicle.calculatedPosition.getTimestamp().get()\n-                                .withZoneSameInstant(ZoneId.systemDefault()))\n-                        : UnDefType.NULL;\n+        return position.map(pos -> pos.getTimestamp()\n+                .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n+                .orElse(UnDefType.NULL)).orElse(UnDefType.UNDEF);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNTE3OA=="}, "originalCommit": {"oid": "1c565500ea7ea3738a325b381c6866fe00625567"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzMjgxMg==", "bodyText": "Yes, this is obviously better.", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420632812", "createdAt": "2020-05-06T08:43:30Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -69,19 +73,16 @@ public State getPosition() {\n     }\n \n     public State isCalculated() {\n-        return vehicle.calculatedPosition.latitude != null ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> isCalculated ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State isHeading() {\n-        return (vehicle.position.isHeading() || vehicle.calculatedPosition.isHeading()) ? OnOffType.ON : OnOffType.OFF;\n+        return position.map(pos -> pos.isHeading() ? (State) OnOffType.ON : OnOffType.OFF).orElse(UnDefType.UNDEF);\n     }\n \n     public State getTimestamp() {\n-        return vehicle.position.getTimestamp().isPresent()\n-                ? new DateTimeType(vehicle.position.getTimestamp().get().withZoneSameInstant(ZoneId.systemDefault()))\n-                : vehicle.calculatedPosition.getTimestamp().isPresent()\n-                        ? new DateTimeType(vehicle.calculatedPosition.getTimestamp().get()\n-                                .withZoneSameInstant(ZoneId.systemDefault()))\n-                        : UnDefType.NULL;\n+        return position.map(pos -> pos.getTimestamp()\n+                .map(dt -> (State) new DateTimeType(dt.withZoneSameInstant(ZoneId.systemDefault())))\n+                .orElse(UnDefType.NULL)).orElse(UnDefType.UNDEF);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNTE3OA=="}, "originalCommit": {"oid": "1c565500ea7ea3738a325b381c6866fe00625567"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY5NTU5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo1NzozMVrOGRBrSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODozODo0OFrOGRJOjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNjQ0MQ==", "bodyText": "Isn't this equivalent?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (getPosition() != UnDefType.UNDEF) {\n          \n          \n            \n                   if (position.isPresent()) {", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420506441", "createdAt": "2020-05-06T01:57:31Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -46,21 +56,15 @@ private State getPositionAsState(PositionData details) {\n     }\n \n     public State getPosition() {\n-        if (vehicle.position.latitude != null) {\n-            return getPositionAsState(vehicle.position);\n-        } else if (vehicle.calculatedPosition.latitude != null) {\n-            return getPositionAsState(vehicle.calculatedPosition);\n-        }\n-        return UnDefType.NULL;\n+        return position.map(pos -> getPositionAsState(pos)).orElse(UnDefType.UNDEF);\n     }\n \n     public @Nullable String getPositionAsJSon() {\n-        PositionData details = vehicle.position;\n-        if (details != null && details.latitude != null && details.longitude != null) {\n+        if (getPosition() != UnDefType.UNDEF) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c565500ea7ea3738a325b381c6866fe00625567"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYzMDE1OA==", "bodyText": "No because it also checks the presence of underpinned elements (latitude & longitude)", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r420630158", "createdAt": "2020-05-06T08:38:48Z", "author": {"login": "clinique"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/wrapper/VehiclePositionWrapper.java", "diffHunk": "@@ -46,21 +56,15 @@ private State getPositionAsState(PositionData details) {\n     }\n \n     public State getPosition() {\n-        if (vehicle.position.latitude != null) {\n-            return getPositionAsState(vehicle.position);\n-        } else if (vehicle.calculatedPosition.latitude != null) {\n-            return getPositionAsState(vehicle.calculatedPosition);\n-        }\n-        return UnDefType.NULL;\n+        return position.map(pos -> getPositionAsState(pos)).orElse(UnDefType.UNDEF);\n     }\n \n     public @Nullable String getPositionAsJSon() {\n-        PositionData details = vehicle.position;\n-        if (details != null && details.latitude != null && details.longitude != null) {\n+        if (getPosition() != UnDefType.UNDEF) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNjQ0MQ=="}, "originalCommit": {"oid": "1c565500ea7ea3738a325b381c6866fe00625567"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjk4NzE0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoyNjozMVrOGSaopg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNjoyNjozMVrOGSaopg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTk2Mzk0Mg==", "bodyText": "This should be put into its own method so it can be called during dispose as well.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            ScheduledFuture<?> refreshJob = this.refreshJob;\n          \n          \n            \n                            if (refreshJob != null) {\n          \n          \n            \n                                refreshJob.cancel(true);\n          \n          \n            \n                                refreshJob = null;\n          \n          \n            \n                            }\n          \n          \n            \n                            ScheduledFuture<?> refreshJob = this.refreshJob;\n          \n          \n            \n                            if (refreshJob != null) {\n          \n          \n            \n                                refreshJob.cancel(true);\n          \n          \n            \n                                this.refreshJob = null;\n          \n          \n            \n                            }", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r421963942", "createdAt": "2020-05-08T06:26:31Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -153,21 +158,26 @@ private void queryApiAndUpdateChannels() {\n         VolvoOnCallBridgeHandler bridgeHandler = getBridgeHandler();\n         if (bridgeHandler != null) {\n             try {\n-                vehicleStatus = bridgeHandler.getURL(Status.class, configuration.vin);\n+                vehicleStatus = bridgeHandler.getURL(vehicle.statusURL, Status.class);\n                 vehiclePosition = new VehiclePositionWrapper(bridgeHandler.getURL(Position.class, configuration.vin));\n                 // Update all channels from the updated data\n                 getThing().getChannels().stream().map(Channel::getUID)\n                         .filter(channelUID -> isLinked(channelUID) && !LAST_TRIP_GROUP.equals(channelUID.getGroupId()))\n                         .forEach(channelUID -> {\n-                            State state = getValue(channelUID.getIdWithoutGroup(), vehicleStatus, vehiclePosition);\n+                            State state = getValue(channelUID.getGroupId(), channelUID.getIdWithoutGroup(),\n+                                    vehicleStatus, vehiclePosition);\n \n                             updateState(channelUID, state);\n                         });\n                 updateTrips(bridgeHandler);\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                refreshJob = null;\n+                ScheduledFuture<?> refreshJob = this.refreshJob;\n+                if (refreshJob != null) {\n+                    refreshJob.cancel(true);\n+                    refreshJob = null;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c137c1367c5aade9f20df548d5a22dc54567bf"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTcwNDY4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMTozNDowNlrOGS0azA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMTozNDowNlrOGS0azA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM4NjM4MA==", "bodyText": "As a general rule, super.dispose() should go last.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    super.dispose();\n          \n          \n            \n                    freeRefreshJob();\n          \n          \n            \n                    freeRefreshJob();\n          \n          \n            \n                    super.dispose();", "url": "https://github.com/openhab/openhab-addons/pull/7453#discussion_r422386380", "createdAt": "2020-05-08T21:34:06Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.volvooncall/src/main/java/org/openhab/binding/volvooncall/internal/handler/VehicleHandler.java", "diffHunk": "@@ -173,16 +173,26 @@ private void queryApiAndUpdateChannels() {\n             } catch (JsonSyntaxException | IOException e) {\n                 logger.warn(\"Exception occurred during execution: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, e.getMessage());\n-                ScheduledFuture<?> refreshJob = this.refreshJob;\n-                if (refreshJob != null) {\n-                    refreshJob.cancel(true);\n-                    refreshJob = null;\n-                }\n+                freeRefreshJob();\n                 startAutomaticRefresh(configuration.refresh);\n             }\n         }\n     }\n \n+    private void freeRefreshJob() {\n+        ScheduledFuture<?> refreshJob = this.refreshJob;\n+        if (refreshJob != null) {\n+            refreshJob.cancel(true);\n+            this.refreshJob = null;\n+        }\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        super.dispose();\n+        freeRefreshJob();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99382a9d1d880bce9ae3abbb90f2ac1d37337540"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 349, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}