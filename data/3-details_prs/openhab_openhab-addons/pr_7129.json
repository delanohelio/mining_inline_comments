{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MzE2NTMy", "number": 7129, "title": "[bluetooth] Refactor and unify BluetoothAdapter implementation logic", "bodyText": "The goal of these changes is to unify the behavior of inactive device cleanup among the different BluetoothAdapter implementations. Additional code similarities have been abstracted out as well.\nThere is a breaking change I made to the adapter configurations. I changed the one of the config param names, but since it is typically disabled by default I think the name change will cause a negligible impact.", "createdAt": "2020-03-08T21:31:16Z", "url": "https://github.com/openhab/openhab-addons/pull/7129", "merged": true, "mergeCommit": {"oid": "286f4b68f0a4190eef96db6feb217da38f6a989d"}, "closed": true, "closedAt": "2020-04-04T07:51:08Z", "author": {"login": "cpmeister"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLvxb1gH2gAyMzg1MzE2NTMyOmM3OTFhNGM4ZTMxZTRjMmFkZTQzNDhhZTFiOWNkNGYzODM4ZGVkYjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUQrzzAFqTM4NzY3Nzc3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c791a4c8e31e4c2ade4348ae1b9cd4f3838dedb0", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/c791a4c8e31e4c2ade4348ae1b9cd4f3838dedb0", "committedDate": "2020-03-08T20:58:47Z", "message": "Refactor and unify BluetoothAdapter implementation logic\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1ODMxMzkz", "url": "https://github.com/openhab/openhab-addons/pull/7129#pullrequestreview-385831393", "createdAt": "2020-04-01T18:12:40Z", "commit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoxMjo0MFrOF_MtaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODoyMzo0MVrOF_NGzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxMjg0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t<parameter name=\"inactiveDeviceCleanupIntervalSecs\" type=\"integer\" min=\"1\">\n          \n          \n            \n            \t\t\t<parameter name=\"inactiveDeviceCleanupInterval\" type=\"integer\" min=\"1\" unit=\"s\">", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401812840", "createdAt": "2020-04-01T18:12:40Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluegiga/src/main/resources/ESH-INF/thing/bluegiga.xml", "diffHunk": "@@ -14,12 +14,24 @@\n \t\t\t\t<context>serial-port</context>\n \t\t\t\t<description>Serial Port</description>\n \t\t\t</parameter>\n-\t\t\t<parameter name=\"discovery\" type=\"boolean\">\n-\t\t\t\t<label>Device Discovery</label>\n-\t\t\t\t<description>Whether this adapter actively participates in Bluetooth device discovery</description>\n+\t\t\t<parameter name=\"backgroundDiscovery\" type=\"boolean\">\n+\t\t\t\t<label>Background Discovery</label>\n+\t\t\t\t<description>Whether this adapter performs background discovery of Bluetooth devices</description>\n \t\t\t\t<advanced>true</advanced>\n \t\t\t\t<default>false</default>\n \t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupIntervalSecs\" type=\"integer\" min=\"1\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxMzAxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t<parameter name=\"inactiveDeviceCleanupThresholdSecs\" type=\"integer\" min=\"1\">\n          \n          \n            \n            \t\t\t<parameter name=\"inactiveDeviceCleanupThreshold\" type=\"integer\" min=\"1\" unit=\"s\">", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401813011", "createdAt": "2020-04-01T18:12:56Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluegiga/src/main/resources/ESH-INF/thing/bluegiga.xml", "diffHunk": "@@ -14,12 +14,24 @@\n \t\t\t\t<context>serial-port</context>\n \t\t\t\t<description>Serial Port</description>\n \t\t\t</parameter>\n-\t\t\t<parameter name=\"discovery\" type=\"boolean\">\n-\t\t\t\t<label>Device Discovery</label>\n-\t\t\t\t<description>Whether this adapter actively participates in Bluetooth device discovery</description>\n+\t\t\t<parameter name=\"backgroundDiscovery\" type=\"boolean\">\n+\t\t\t\t<label>Background Discovery</label>\n+\t\t\t\t<description>Whether this adapter performs background discovery of Bluetooth devices</description>\n \t\t\t\t<advanced>true</advanced>\n \t\t\t\t<default>false</default>\n \t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupIntervalSecs\" type=\"integer\" min=\"1\">\n+\t\t\t\t<label>Device Cleanup Interval</label>\n+\t\t\t\t<description>How often device cleanup is performed in seconds</description>\n+\t\t\t\t<advanced>true</advanced>\n+\t\t\t\t<default>60</default>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupThresholdSecs\" type=\"integer\" min=\"1\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxMzY4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t<description>The number of seconds a device can remain radio silent before it is eligible for cleanup</description>\n          \n          \n            \n            \t\t\t\t<description>Timespan a device can remain radio silent before it is eligible for cleanup</description>", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401813686", "createdAt": "2020-04-01T18:14:07Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluegiga/src/main/resources/ESH-INF/thing/bluegiga.xml", "diffHunk": "@@ -14,12 +14,24 @@\n \t\t\t\t<context>serial-port</context>\n \t\t\t\t<description>Serial Port</description>\n \t\t\t</parameter>\n-\t\t\t<parameter name=\"discovery\" type=\"boolean\">\n-\t\t\t\t<label>Device Discovery</label>\n-\t\t\t\t<description>Whether this adapter actively participates in Bluetooth device discovery</description>\n+\t\t\t<parameter name=\"backgroundDiscovery\" type=\"boolean\">\n+\t\t\t\t<label>Background Discovery</label>\n+\t\t\t\t<description>Whether this adapter performs background discovery of Bluetooth devices</description>\n \t\t\t\t<advanced>true</advanced>\n \t\t\t\t<default>false</default>\n \t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupIntervalSecs\" type=\"integer\" min=\"1\">\n+\t\t\t\t<label>Device Cleanup Interval</label>\n+\t\t\t\t<description>How often device cleanup is performed in seconds</description>\n+\t\t\t\t<advanced>true</advanced>\n+\t\t\t\t<default>60</default>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupThresholdSecs\" type=\"integer\" min=\"1\">\n+\t\t\t\t<label>Device Cleanup Threshold</label>\n+\t\t\t\t<description>The number of seconds a device can remain radio silent before it is eligible for cleanup</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxNDM5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t<description>How often device cleanup is performed in seconds</description>\n          \n          \n            \n            \t\t\t\t<description>How often device cleanup is performed</description>", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401814399", "createdAt": "2020-04-01T18:15:13Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluegiga/src/main/resources/ESH-INF/thing/bluegiga.xml", "diffHunk": "@@ -14,12 +14,24 @@\n \t\t\t\t<context>serial-port</context>\n \t\t\t\t<description>Serial Port</description>\n \t\t\t</parameter>\n-\t\t\t<parameter name=\"discovery\" type=\"boolean\">\n-\t\t\t\t<label>Device Discovery</label>\n-\t\t\t\t<description>Whether this adapter actively participates in Bluetooth device discovery</description>\n+\t\t\t<parameter name=\"backgroundDiscovery\" type=\"boolean\">\n+\t\t\t\t<label>Background Discovery</label>\n+\t\t\t\t<description>Whether this adapter performs background discovery of Bluetooth devices</description>\n \t\t\t\t<advanced>true</advanced>\n \t\t\t\t<default>false</default>\n \t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupIntervalSecs\" type=\"integer\" min=\"1\">\n+\t\t\t\t<label>Device Cleanup Interval</label>\n+\t\t\t\t<description>How often device cleanup is performed in seconds</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxNTMzNg==", "bodyText": "Nice. Didn't know about that.", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401815336", "createdAt": "2020-04-01T18:16:50Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/java/org/openhab/binding/bluetooth/bluez/handler/BlueZBridgeHandler.java", "diffHunk": "@@ -167,70 +112,36 @@ private void startDiscovery() {\n     }\n \n     private void refreshDevices() {\n-        try {\n+        refreshTry: try {\n             logger.debug(\"Refreshing Bluetooth device list...\");\n             List<tinyb.BluetoothDevice> tinybDevices = adapter.getDevices();\n             logger.debug(\"Found {} Bluetooth devices.\", tinybDevices.size());\n             for (tinyb.BluetoothDevice tinybDevice : tinybDevices) {\n                 BlueZBluetoothDevice device = getDevice(new BluetoothAddress(tinybDevice.getAddress()));\n                 device.updateTinybDevice(tinybDevice);\n-                notifyDiscoveryListeners(device);\n-            }\n-            // clean up orphaned entries\n-            synchronized (devices) {\n-                for (BlueZBluetoothDevice device : devices.values()) {\n-                    if (shouldRemove(device)) {\n-                        logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n-                        device.dispose();\n-                        devices.remove(device.getAddress());\n-                        discoveryListeners.forEach(listener -> listener.deviceRemoved(device));\n-                    }\n-                }\n+                deviceDiscovered(device);\n             }\n             // For whatever reason, bluez will sometimes turn off scanning. So we just make sure it keeps running.\n             startDiscovery();\n-            // everything went fine, so lets switch to online\n-            updateStatus(ThingStatus.ONLINE);\n         } catch (BluetoothException ex) {\n             String message = ex.getMessage();\n             if (message != null) {\n                 if (message.contains(\"Operation already in progress\")) {\n                     // we shouldn't go offline in this case\n-                    return;\n+                    break refreshTry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxNTY1OQ==", "bodyText": "I think you can omit the check and let the framework do that work.", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401815659", "createdAt": "2020-04-01T18:17:23Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/java/org/openhab/binding/bluetooth/bluez/handler/BlueZBridgeHandler.java", "diffHunk": "@@ -167,70 +112,36 @@ private void startDiscovery() {\n     }\n \n     private void refreshDevices() {\n-        try {\n+        refreshTry: try {\n             logger.debug(\"Refreshing Bluetooth device list...\");\n             List<tinyb.BluetoothDevice> tinybDevices = adapter.getDevices();\n             logger.debug(\"Found {} Bluetooth devices.\", tinybDevices.size());\n             for (tinyb.BluetoothDevice tinybDevice : tinybDevices) {\n                 BlueZBluetoothDevice device = getDevice(new BluetoothAddress(tinybDevice.getAddress()));\n                 device.updateTinybDevice(tinybDevice);\n-                notifyDiscoveryListeners(device);\n-            }\n-            // clean up orphaned entries\n-            synchronized (devices) {\n-                for (BlueZBluetoothDevice device : devices.values()) {\n-                    if (shouldRemove(device)) {\n-                        logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n-                        device.dispose();\n-                        devices.remove(device.getAddress());\n-                        discoveryListeners.forEach(listener -> listener.deviceRemoved(device));\n-                    }\n-                }\n+                deviceDiscovered(device);\n             }\n             // For whatever reason, bluez will sometimes turn off scanning. So we just make sure it keeps running.\n             startDiscovery();\n-            // everything went fine, so lets switch to online\n-            updateStatus(ThingStatus.ONLINE);\n         } catch (BluetoothException ex) {\n             String message = ex.getMessage();\n             if (message != null) {\n                 if (message.contains(\"Operation already in progress\")) {\n                     // we shouldn't go offline in this case\n-                    return;\n+                    break refreshTry;\n                 }\n                 int idx = message.lastIndexOf(':');\n                 if (idx != -1) {\n                     message = message.substring(idx).trim();\n                 }\n             }\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR, message);\n+            return;\n         }\n-    }\n-\n-    private boolean shouldRemove(BlueZBluetoothDevice device) {\n-        // we can't remove devices with listeners since that means they have a handler.\n-        if (device.hasListeners()) {\n-            return false;\n-        }\n-        // devices that are connected won't receive any scan notifications so we can't remove them for being idle\n-        if (device.getConnectionState() == ConnectionState.CONNECTED) {\n-            return false;\n+        // everything went fine, so lets switch to online if not already\n+        if (getThing().getStatus() != ThingStatus.ONLINE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxNTg5MQ==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401815891", "createdAt": "2020-04-01T18:17:42Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/resources/ESH-INF/thing/bluez.xml", "diffHunk": "@@ -14,12 +14,24 @@\n \t\t\t\t<label>Address</label>\n \t\t\t\t<description>The Bluetooth address of the adapter in format XX:XX:XX:XX:XX:XX</description>\n \t\t\t</parameter>\n-\t\t\t<parameter name=\"discovery\" type=\"boolean\">\n-\t\t\t\t<label>Device Discovery</label>\n-\t\t\t\t<description>Whether Bluetooth device discovery is always enabled for this adapter</description>\n+\t\t\t<parameter name=\"backgroundDiscovery\" type=\"boolean\">\n+\t\t\t\t<label>Background Discovery</label>\n+\t\t\t\t<description>Whether this adapter performs background discovery of Bluetooth devices</description>\n \t\t\t\t<advanced>true</advanced>\n \t\t\t\t<default>false</default>\n \t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupIntervalSecs\" type=\"integer\" min=\"1\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxNjAzNg==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401816036", "createdAt": "2020-04-01T18:17:55Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/resources/ESH-INF/thing/bluez.xml", "diffHunk": "@@ -14,12 +14,24 @@\n \t\t\t\t<label>Address</label>\n \t\t\t\t<description>The Bluetooth address of the adapter in format XX:XX:XX:XX:XX:XX</description>\n \t\t\t</parameter>\n-\t\t\t<parameter name=\"discovery\" type=\"boolean\">\n-\t\t\t\t<label>Device Discovery</label>\n-\t\t\t\t<description>Whether Bluetooth device discovery is always enabled for this adapter</description>\n+\t\t\t<parameter name=\"backgroundDiscovery\" type=\"boolean\">\n+\t\t\t\t<label>Background Discovery</label>\n+\t\t\t\t<description>Whether this adapter performs background discovery of Bluetooth devices</description>\n \t\t\t\t<advanced>true</advanced>\n \t\t\t\t<default>false</default>\n \t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupIntervalSecs\" type=\"integer\" min=\"1\">\n+\t\t\t\t<label>Device Cleanup Interval</label>\n+\t\t\t\t<description>How often device cleanup is performed in seconds</description>\n+\t\t\t\t<advanced>true</advanced>\n+\t\t\t\t<default>60</default>\n+\t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupThresholdSecs\" type=\"integer\" min=\"1\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgxOTM0MQ==", "bodyText": "why not use computeIfAbsent here? ConcurrentHashMap implements that atomically.", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r401819341", "createdAt": "2020-04-01T18:23:41Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/AbstractBluetoothBridgeHandler.java", "diffHunk": "@@ -0,0 +1,223 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.bluetooth;\n+\n+import java.time.ZonedDateTime;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.thing.Bridge;\n+import org.eclipse.smarthome.core.thing.ChannelUID;\n+import org.eclipse.smarthome.core.thing.Thing;\n+import org.eclipse.smarthome.core.thing.ThingUID;\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n+import org.eclipse.smarthome.core.types.Command;\n+import org.openhab.binding.bluetooth.BluetoothDevice.ConnectionState;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * This is a abstract superclass for BluetoothAdapter implementations. This class takes care of inactive device cleanup\n+ * as well as handling background and active discovery logic.\n+ *\n+ * Subclasses will primarily be responsible for device discovery\n+ *\n+ * @author Connor Petty - Initial contribution from refactored code\n+ */\n+@NonNullByDefault\n+public abstract class AbstractBluetoothBridgeHandler<BD extends BluetoothDevice> extends BaseBridgeHandler\n+        implements BluetoothAdapter {\n+\n+    protected final Logger logger = LoggerFactory.getLogger(getClass());\n+\n+    // Set of discovery listeners\n+    private final Set<BluetoothDiscoveryListener> discoveryListeners = new CopyOnWriteArraySet<>();\n+\n+    // Map of Bluetooth devices known to this bridge.\n+    // This contains the devices from the most recent scan\n+    private final Map<BluetoothAddress, BD> devices = new ConcurrentHashMap<>();\n+\n+    // Actual discovery status.\n+    protected volatile boolean activeScanEnabled = false;\n+\n+    private BaseBluetoothBridgeHandlerConfiguration config = new BaseBluetoothBridgeHandlerConfiguration();\n+\n+    private @Nullable ScheduledFuture<?> inactiveRemovalJob;\n+\n+    /**\n+     * Constructor\n+     *\n+     * @param bridge the bridge definition for this handler\n+     */\n+    public AbstractBluetoothBridgeHandler(Bridge bridge) {\n+        super(bridge);\n+    }\n+\n+    @Override\n+    public ThingUID getUID() {\n+        return getThing().getUID();\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        config = getConfigAs(BaseBluetoothBridgeHandlerConfiguration.class);\n+\n+        int intervalSecs = config.inactiveDeviceCleanupIntervalSecs;\n+        inactiveRemovalJob = scheduler.scheduleWithFixedDelay(this::removeInactiveDevices, intervalSecs, intervalSecs,\n+                TimeUnit.SECONDS);\n+    }\n+\n+    @Override\n+    public void dispose() {\n+        ScheduledFuture<?> inactiveRemovalJob = this.inactiveRemovalJob;\n+        if (inactiveRemovalJob != null) {\n+            inactiveRemovalJob.cancel(true);\n+        }\n+        this.inactiveRemovalJob = null;\n+\n+        synchronized (devices) {\n+            for (BD device : devices.values()) {\n+                removeDevice(device);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void handleCommand(ChannelUID channelUID, Command command) {\n+    }\n+\n+    private void removeInactiveDevices() {\n+        // clean up orphaned entries\n+        synchronized (devices) {\n+            for (BD device : devices.values()) {\n+                if (shouldRemove(device)) {\n+                    logger.debug(\"Removing device '{}' due to inactivity\", device.getAddress());\n+                    removeDevice(device);\n+                }\n+            }\n+        }\n+    }\n+\n+    protected void removeDevice(BluetoothDevice device) {\n+        device.dispose();\n+        synchronized (devices) {\n+            devices.remove(device.getAddress());\n+        }\n+        discoveryListeners.forEach(listener -> listener.deviceRemoved(device));\n+    }\n+\n+    private boolean shouldRemove(BluetoothDevice device) {\n+        // we can't remove devices with listeners since that means they have a handler.\n+        if (device.hasListeners()) {\n+            return false;\n+        }\n+        // devices that are connected won't receive any scan notifications so we can't remove them for being idle\n+        if (device.getConnectionState() == ConnectionState.CONNECTED) {\n+            return false;\n+        }\n+\n+        // we remove devices we haven't seen in a while\n+        return ZonedDateTime.now().minusSeconds(config.inactiveDeviceCleanupThresholdSecs)\n+                .isAfter(device.getLastSeenTime());\n+    }\n+\n+    @Override\n+    public void addDiscoveryListener(BluetoothDiscoveryListener listener) {\n+        discoveryListeners.add(listener);\n+    }\n+\n+    @Override\n+    public void removeDiscoveryListener(@Nullable BluetoothDiscoveryListener listener) {\n+        discoveryListeners.remove(listener);\n+    }\n+\n+    @Override\n+    public void scanStart() {\n+        // Enable scanning even while discovery is disabled in config. This allows manual starting discovery.\n+        activeScanEnabled = true;\n+        refreshDiscoveredDevices();\n+    }\n+\n+    protected void refreshDiscoveredDevices() {\n+        logger.debug(\"Refreshing Bluetooth device list...\");\n+        synchronized (devices) {\n+            devices.values().forEach(this::deviceDiscovered);\n+        }\n+    }\n+\n+    @Override\n+    public void scanStop() {\n+        // Set active discovery state back to the configured discovery state.\n+        activeScanEnabled = false;\n+        // We need to keep the adapter in discovery mode as we otherwise won't get any RSSI updates either\n+    }\n+\n+    @Override\n+    public BD getDevice(BluetoothAddress address) {\n+        synchronized (devices) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2"}, "originalPosition": 173}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05c648de62fdf832dd392624b4ad947d6372f93d", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/05c648de62fdf832dd392624b4ad947d6372f93d", "committedDate": "2020-04-01T21:19:41Z", "message": "Review changes.\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73237afebaf0531194f89464cd3ee6400573c1e5", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/73237afebaf0531194f89464cd3ee6400573c1e5", "committedDate": "2020-04-01T21:53:08Z", "message": "Merge branch '2.5.x' of https://github.com/openhab/openhab-addons into\n6919\n\n# Conflicts:\n#\tbundles/org.openhab.binding.bluetooth.bluegiga/src/main/java/org/openhab/binding/bluetooth/bluegiga/BlueGigaBluetoothDevice.java\n#\tbundles/org.openhab.binding.bluetooth.bluegiga/src/main/java/org/openhab/binding/bluetooth/bluegiga/handler/BlueGigaBridgeHandler.java\n\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "079e219b8db08132c0a80e80b0983ccba18546a2", "author": {"user": {"login": "cpmeister", "name": "Connor Petty"}}, "url": "https://github.com/openhab/openhab-addons/commit/079e219b8db08132c0a80e80b0983ccba18546a2", "committedDate": "2020-03-09T18:45:17Z", "message": "Merge branch '2.5.x' into 6919"}, "afterCommit": {"oid": "73237afebaf0531194f89464cd3ee6400573c1e5", "author": {"user": null}, "url": "https://github.com/openhab/openhab-addons/commit/73237afebaf0531194f89464cd3ee6400573c1e5", "committedDate": "2020-04-01T21:53:08Z", "message": "Merge branch '2.5.x' of https://github.com/openhab/openhab-addons into\n6919\n\n# Conflicts:\n#\tbundles/org.openhab.binding.bluetooth.bluegiga/src/main/java/org/openhab/binding/bluetooth/bluegiga/BlueGigaBluetoothDevice.java\n#\tbundles/org.openhab.binding.bluetooth.bluegiga/src/main/java/org/openhab/binding/bluetooth/bluegiga/handler/BlueGigaBridgeHandler.java\n\n\nSigned-off-by: Connor Petty <mistercpp2000+gitsignoff@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NjcxNjg3", "url": "https://github.com/openhab/openhab-addons/pull/7129#pullrequestreview-387671687", "createdAt": "2020-04-04T06:03:48Z", "commit": {"oid": "05c648de62fdf832dd392624b4ad947d6372f93d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNjowMzo0OFrOGAveEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNjowMzo0OFrOGAveEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzMDkyOQ==", "bodyText": "formatting looks wrong", "url": "https://github.com/openhab/openhab-addons/pull/7129#discussion_r403430929", "createdAt": "2020-04-04T06:03:48Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.bluetooth.bluez/src/main/resources/ESH-INF/thing/bluez.xml", "diffHunk": "@@ -20,18 +20,18 @@\n \t\t\t\t<advanced>true</advanced>\n \t\t\t\t<default>false</default>\n \t\t\t</parameter>\n-\t\t\t<parameter name=\"inactiveDeviceCleanupIntervalSecs\" type=\"integer\" min=\"1\">\n-\t\t\t\t<label>Device Cleanup Interval</label>\n-\t\t\t\t<description>How often device cleanup is performed in seconds</description>\n-\t\t\t\t<advanced>true</advanced>\n-\t\t\t\t<default>60</default>\n-\t\t\t</parameter>\n-\t\t\t<parameter name=\"inactiveDeviceCleanupThresholdSecs\" type=\"integer\" min=\"1\">\n-\t\t\t\t<label>Device Cleanup Threshold</label>\n-\t\t\t\t<description>The number of seconds a device can remain radio silent before it is eligible for cleanup</description>\n-\t\t\t\t<advanced>true</advanced>\n-\t\t\t\t<default>300</default>\n-\t\t\t</parameter>\n+\t\t\t<parameter name=\"inactiveDeviceCleanupInterval\" type=\"integer\" min=\"1\" unit=\"s\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05c648de62fdf832dd392624b4ad947d6372f93d"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Njc3Nzc2", "url": "https://github.com/openhab/openhab-addons/pull/7129#pullrequestreview-387677776", "createdAt": "2020-04-04T07:50:54Z", "commit": {"oid": "73237afebaf0531194f89464cd3ee6400573c1e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1122, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}