{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjk3NTE1", "number": 8937, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMToyODo1OFrOE0jodA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzo1NDo0M1rOE1O8CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTQ1MjA0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBinding.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMToyODo1OFrOHsWSsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzoxNToxN1rOHsZwaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NDYyNg==", "bodyText": "Now that we have EEAs there is no need for annotating the value type with @Nullable to prevent those false positives. You should only do that if you put actual null values in a map. Which usually is not the case and is also not preferable because it increases the risk of NPEs.", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516264626", "createdAt": "2020-11-02T21:28:58Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBinding.java", "diffHunk": "@@ -106,15 +106,14 @@\n  * @author Rob Nielsen - Port to openHAB 2 insteon binding\n  */\n @NonNullByDefault\n-@SuppressWarnings({ \"null\", \"unused\" })\n public class InsteonBinding {\n     private static final int DEAD_DEVICE_COUNT = 10;\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonBinding.class);\n \n     private Driver driver;\n-    private ConcurrentHashMap<InsteonAddress, InsteonDevice> devices = new ConcurrentHashMap<>();\n-    private ConcurrentHashMap<String, InsteonChannelConfiguration> bindingConfigs = new ConcurrentHashMap<>();\n+    private Map<InsteonAddress, @Nullable InsteonDevice> devices = new ConcurrentHashMap<>();\n+    private Map<String, @Nullable InsteonChannelConfiguration> bindingConfigs = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b634cad466e48b74f5de9247de9aca35e172108"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyMTM4Nw==", "bodyText": "fixed", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516321387", "createdAt": "2020-11-02T23:15:17Z", "author": {"login": "robnielsen"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/InsteonBinding.java", "diffHunk": "@@ -106,15 +106,14 @@\n  * @author Rob Nielsen - Port to openHAB 2 insteon binding\n  */\n @NonNullByDefault\n-@SuppressWarnings({ \"null\", \"unused\" })\n public class InsteonBinding {\n     private static final int DEAD_DEVICE_COUNT = 10;\n \n     private final Logger logger = LoggerFactory.getLogger(InsteonBinding.class);\n \n     private Driver driver;\n-    private ConcurrentHashMap<InsteonAddress, InsteonDevice> devices = new ConcurrentHashMap<>();\n-    private ConcurrentHashMap<String, InsteonChannelConfiguration> bindingConfigs = new ConcurrentHashMap<>();\n+    private Map<InsteonAddress, @Nullable InsteonDevice> devices = new ConcurrentHashMap<>();\n+    private Map<String, @Nullable InsteonChannelConfiguration> bindingConfigs = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI2NDYyNg=="}, "originalCommit": {"oid": "6b634cad466e48b74f5de9247de9aca35e172108"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTUzNjEzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/driver/Port.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMTo1NTo0NVrOHsXFNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNToyNTowNlrOHtdG-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng==", "bodyText": "The proper fix is here to remove @Nullable from the dbes value type. Then if you iterate over the entrySet instead of the keySet there will be no possible null reference and so you won't need the dbe != null check either. It results in less code, less NPEs and better performance. \ud83d\ude04", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516277556", "createdAt": "2020-11-02T21:55:45Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/driver/Port.java", "diffHunk": "@@ -154,7 +152,8 @@ public void clearModemDB() {\n         logger.debug(\"clearing modem db!\");\n         Map<InsteonAddress, @Nullable ModemDBEntry> dbes = getDriver().lockModemDBEntries();\n         for (InsteonAddress addr : dbes.keySet()) {\n-            if (!dbes.get(addr).isModem()) {\n+            ModemDBEntry dbe = dbes.get(addr);\n+            if (dbe != null && !dbe.isModem()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyMTg3Mw==", "bodyText": "fixed", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516321873", "createdAt": "2020-11-02T23:15:55Z", "author": {"login": "robnielsen"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/driver/Port.java", "diffHunk": "@@ -154,7 +152,8 @@ public void clearModemDB() {\n         logger.debug(\"clearing modem db!\");\n         Map<InsteonAddress, @Nullable ModemDBEntry> dbes = getDriver().lockModemDBEntries();\n         for (InsteonAddress addr : dbes.keySet()) {\n-            if (!dbes.get(addr).isModem()) {\n+            ModemDBEntry dbe = dbes.get(addr);\n+            if (dbe != null && !dbe.isModem()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng=="}, "originalCommit": {"oid": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE2OTkxNQ==", "bodyText": "The code is still iterating over the keySet instead of the entrySet causing redundant null checks. Looks like the same improvement can also be applied to other for-loops in the binding.", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517169915", "createdAt": "2020-11-04T08:28:40Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/driver/Port.java", "diffHunk": "@@ -154,7 +152,8 @@ public void clearModemDB() {\n         logger.debug(\"clearing modem db!\");\n         Map<InsteonAddress, @Nullable ModemDBEntry> dbes = getDriver().lockModemDBEntries();\n         for (InsteonAddress addr : dbes.keySet()) {\n-            if (!dbes.get(addr).isModem()) {\n+            ModemDBEntry dbe = dbes.get(addr);\n+            if (dbe != null && !dbe.isModem()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng=="}, "originalCommit": {"oid": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyNDYyOA==", "bodyText": "sorry, fixed now. I also review reviewed other for-loops and didn't find any that should be changed.", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517424628", "createdAt": "2020-11-04T15:24:47Z", "author": {"login": "robnielsen"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/driver/Port.java", "diffHunk": "@@ -154,7 +152,8 @@ public void clearModemDB() {\n         logger.debug(\"clearing modem db!\");\n         Map<InsteonAddress, @Nullable ModemDBEntry> dbes = getDriver().lockModemDBEntries();\n         for (InsteonAddress addr : dbes.keySet()) {\n-            if (!dbes.get(addr).isModem()) {\n+            ModemDBEntry dbe = dbes.get(addr);\n+            if (dbe != null && !dbe.isModem()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng=="}, "originalCommit": {"oid": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyNDg5MQ==", "bodyText": "sorry, fixed now. I also review reviewed other for-loops and didn't find any that should be changed.", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517424891", "createdAt": "2020-11-04T15:25:06Z", "author": {"login": "robnielsen"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/driver/Port.java", "diffHunk": "@@ -154,7 +152,8 @@ public void clearModemDB() {\n         logger.debug(\"clearing modem db!\");\n         Map<InsteonAddress, @Nullable ModemDBEntry> dbes = getDriver().lockModemDBEntries();\n         for (InsteonAddress addr : dbes.keySet()) {\n-            if (!dbes.get(addr).isModem()) {\n+            ModemDBEntry dbe = dbes.get(addr);\n+            if (dbe != null && !dbe.isModem()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NzU1Ng=="}, "originalCommit": {"oid": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNTU2Nzk0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/message/DataType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMjowNjozNVrOHsXYoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzoyNDozM1rOHsaJVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MjUyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static HashMap<String, @Nullable DataType> typeMap = new HashMap<>();\n          \n          \n            \n                private static Map<String, DataType> typeMap = new HashMap<>();\n          \n      \n    \n    \n  \n\nWith the current EEAs there is only proper null analysis for the Map type. I created lastnpe/eclipse-null-eea-augments#109 because I was not happy to see the analysis missing on other common types. So that should also bring proper analysis whenever someone doesn't program against interfaces such as Map (which is still preferable) but actual implementations such as HashMap, ArrayList etc.", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516282528", "createdAt": "2020-11-02T22:06:35Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/message/DataType.java", "diffHunk": "@@ -31,10 +31,10 @@\n     ADDRESS(\"address\", 3),\n     INVALID(\"INVALID\", -1);\n \n-    private static HashMap<String, DataType> typeMap = new HashMap<>();\n+    private static HashMap<String, @Nullable DataType> typeMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMyNzc2Ng==", "bodyText": "fixed", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r516327766", "createdAt": "2020-11-02T23:24:33Z", "author": {"login": "robnielsen"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/message/DataType.java", "diffHunk": "@@ -31,10 +31,10 @@\n     ADDRESS(\"address\", 3),\n     INVALID(\"INVALID\", -1);\n \n-    private static HashMap<String, DataType> typeMap = new HashMap<>();\n+    private static HashMap<String, @Nullable DataType> typeMap = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI4MjUyOA=="}, "originalCommit": {"oid": "ff35f03ddb4b27de76ed94300b3f962d9dd473cb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjU0NzI5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzo1NDo0M1rOHtZENQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo1NTo0NlrOHtegBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM1ODY0NQ==", "bodyText": "Perhaps this if condition can be added to if (conf.getFeature().contains(\"dimmer\")) { to simplify the code?", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517358645", "createdAt": "2020-11-04T13:54:43Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -114,22 +112,24 @@ protected String nm() {\n \n     protected int getMaxLightLevel(InsteonChannelConfiguration conf, int defaultLevel) {\n         Map<String, @Nullable String> params = conf.getParameters();\n-        if (conf.getFeature().contains(\"dimmer\") && params.containsKey(\"dimmermax\")) {\n-            String item = conf.getChannelName();\n+        if (conf.getFeature().contains(\"dimmer\")) {\n             String dimmerMax = params.get(\"dimmermax\");\n-            try {\n-                int i = Integer.parseInt(dimmerMax);\n-                if (i > 1 && i <= 99) {\n-                    int level = (int) Math.ceil((i * 255.0) / 100); // round up\n-                    if (level < defaultLevel) {\n-                        logger.debug(\"item {}: using dimmermax value of {}\", item, dimmerMax);\n-                        return level;\n+            if (dimmerMax != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cca364ab16bc4c0c306ab41ab0f9a21f7171ec"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0NzY4NA==", "bodyText": "Not really, getFeature() returns a string and the first if check to see it it contains the string \"dimmer\". If it does the second if checks to see if there is a parameter called \"dimmermax\".", "url": "https://github.com/openhab/openhab-addons/pull/8937#discussion_r517447684", "createdAt": "2020-11-04T15:55:46Z", "author": {"login": "robnielsen"}, "path": "bundles/org.openhab.binding.insteon/src/main/java/org/openhab/binding/insteon/internal/device/CommandHandler.java", "diffHunk": "@@ -114,22 +112,24 @@ protected String nm() {\n \n     protected int getMaxLightLevel(InsteonChannelConfiguration conf, int defaultLevel) {\n         Map<String, @Nullable String> params = conf.getParameters();\n-        if (conf.getFeature().contains(\"dimmer\") && params.containsKey(\"dimmermax\")) {\n-            String item = conf.getChannelName();\n+        if (conf.getFeature().contains(\"dimmer\")) {\n             String dimmerMax = params.get(\"dimmermax\");\n-            try {\n-                int i = Integer.parseInt(dimmerMax);\n-                if (i > 1 && i <= 99) {\n-                    int level = (int) Math.ceil((i * 255.0) / 100); // round up\n-                    if (level < defaultLevel) {\n-                        logger.debug(\"item {}: using dimmermax value of {}\", item, dimmerMax);\n-                        return level;\n+            if (dimmerMax != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM1ODY0NQ=="}, "originalCommit": {"oid": "c1cca364ab16bc4c0c306ab41ab0f9a21f7171ec"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4021, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}