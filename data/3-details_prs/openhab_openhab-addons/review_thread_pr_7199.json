{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxODE2OTI5", "number": 7199, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToxODo0M1rOEB7HyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwNjozODoxMFrOElL0qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDUyNjgxOnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.binding.bluetooth.airthings/src/main/resources/ESH-INF/thing/airthings.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToxODo0M1rOGeEU9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNToxMlrOGeEyhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MTM2NA==", "bodyText": "Does it harm to have it listed here? If Things are created manually, this has the advantage that this channel is available without any handler required to be present.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434181364", "createdAt": "2020-06-02T21:18:43Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.airthings/src/main/resources/ESH-INF/thing/airthings.xml", "diffHunk": "@@ -14,8 +15,6 @@\n \t\t<description>Indoor air quality monitor with radon detection</description>\n \n \t\t<channels>\n-\t\t\t<channel id=\"rssi\" typeId=\"rssi\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODkzNA==", "bodyText": "I didn't realize they had that use case. I'll add them back in then.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434188934", "createdAt": "2020-06-02T21:35:12Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.airthings/src/main/resources/ESH-INF/thing/airthings.xml", "diffHunk": "@@ -14,8 +15,6 @@\n \t\t<description>Indoor air quality monitor with radon detection</description>\n \n \t\t<channels>\n-\t\t\t<channel id=\"rssi\" typeId=\"rssi\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MTM2NA=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDUyOTQzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToxOTo0MFrOGeEWoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToyOToxNVrOGgtU4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MTc5Mw==", "bodyText": "This is not the right place to add it - if I get it right, \"roaming\" is a new adapter (next to BlueZ and BlueGiga) and not a BT device type (beacon or connected).", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434181793", "createdAt": "2020-06-02T21:19:40Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -19,10 +19,11 @@ This should be the best choice for any Linux-based single board computers like e\n \n Two thing types are supported by this binding:\n \n-| Thing Type ID | Description                                                                                             |\n-|---------------|---------------------------------------------------------------------------------------------------------|\n-| beacon        | A Bluetooth device that is not connected, but only broadcasts annoucements.                             |\n-| connected     | A Bluetooth device that allows a direct connection and which provides specific services when connected. |\n+| Thing Type ID | Description                                                                                                |\n+|---------------|------------------------------------------------------------------------------------------------------------|\n+| beacon        | A Bluetooth device that is not connected, but only broadcasts annoucements.                                |\n+| connected     | A Bluetooth device that allows a direct connection and which provides specific services when connected.    |\n+| roaming       | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5MDc2OQ==", "bodyText": "You are correct, \"roaming\" is a type of adapter, not a regular bluetooth device. I just put it in this table since I thought all thing types should be listed there. Should I create a separate section/table for the roaming adapter?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434190769", "createdAt": "2020-06-02T21:39:27Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -19,10 +19,11 @@ This should be the best choice for any Linux-based single board computers like e\n \n Two thing types are supported by this binding:\n \n-| Thing Type ID | Description                                                                                             |\n-|---------------|---------------------------------------------------------------------------------------------------------|\n-| beacon        | A Bluetooth device that is not connected, but only broadcasts annoucements.                             |\n-| connected     | A Bluetooth device that allows a direct connection and which provides specific services when connected. |\n+| Thing Type ID | Description                                                                                                |\n+|---------------|------------------------------------------------------------------------------------------------------------|\n+| beacon        | A Bluetooth device that is not connected, but only broadcasts annoucements.                                |\n+| connected     | A Bluetooth device that allows a direct connection and which provides specific services when connected.    |\n+| roaming       | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MTc5Mw=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1MDI0MQ==", "bodyText": "As mentioned further below, this should ideally be a separate bundle, just like the other adapters.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r436950241", "createdAt": "2020-06-08T19:29:15Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -19,10 +19,11 @@ This should be the best choice for any Linux-based single board computers like e\n \n Two thing types are supported by this binding:\n \n-| Thing Type ID | Description                                                                                             |\n-|---------------|---------------------------------------------------------------------------------------------------------|\n-| beacon        | A Bluetooth device that is not connected, but only broadcasts annoucements.                             |\n-| connected     | A Bluetooth device that allows a direct connection and which provides specific services when connected. |\n+| Thing Type ID | Description                                                                                                |\n+|---------------|------------------------------------------------------------------------------------------------------------|\n+| beacon        | A Bluetooth device that is not connected, but only broadcasts annoucements.                                |\n+| connected     | A Bluetooth device that allows a direct connection and which provides specific services when connected.    |\n+| roaming       | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MTc5Mw=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDUzNTY5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToyMTozOVrOGeEaTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyMzoyOFrOGgvBKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MjczNA==", "bodyText": "How is that related to this PR?\nI am not too keen on such channels - if we feel such information is needed, we should rather solve it for ALL bindings at the same time.\nWhat I could live with here is to keep track of it as a Thing property instead.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434182734", "createdAt": "2020-06-02T21:21:39Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -37,11 +38,12 @@ Both thing types only require a single configuration parameter `address`, which\n \n ## Channels\n \n-Every Bluetooth thing has the following channel:\n+Every Bluetooth thing has the following channels:\n \n-| Channel ID | Item Type | Description                                                                                         |\n-|------------|-----------|-----------------------------------------------------------------------------------------------------|\n-| rssi       | Number    | The \"Received Signal Strength Indicator\", the [RSSI](https://blog.bluetooth.com/proximity-and-rssi) |\n+| Channel ID    | Item Type | Description                                                                                         |\n+|---------------|-----------|-----------------------------------------------------------------------------------------------------|\n+| rssi          | Number    | The \"Received Signal Strength Indicator\", the [RSSI](https://blog.bluetooth.com/proximity-and-rssi) |\n+| last-activity | DateTime  | The last time that any radio activity was received from this device                                 |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NDYwOA==", "bodyText": "This PR is a general adaptation of the features available in the 3rd party bluetooth binding. One of the primary features of the binding was presence detection, which a last-activity channel would almost certainly be required for.\nWhile beacon bluetooth devices could be tracked by a change in their RSSI channel, such a method can't be used for connected devices which don't send out advertisement information that would trigger an RSSI channel update. (This is the case for devices tracked through Bluez adapters, but not for Bluegiga, because they are special I guess).\nThe \"last-activity\" channel would be updated on either rssi changes or on successful responses during connected communications.\nI can change this to a thing property if you wish, but I don't know if users will be able to make rules that would use it then. WDYT?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434194608", "createdAt": "2020-06-02T21:48:22Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -37,11 +38,12 @@ Both thing types only require a single configuration parameter `address`, which\n \n ## Channels\n \n-Every Bluetooth thing has the following channel:\n+Every Bluetooth thing has the following channels:\n \n-| Channel ID | Item Type | Description                                                                                         |\n-|------------|-----------|-----------------------------------------------------------------------------------------------------|\n-| rssi       | Number    | The \"Received Signal Strength Indicator\", the [RSSI](https://blog.bluetooth.com/proximity-and-rssi) |\n+| Channel ID    | Item Type | Description                                                                                         |\n+|---------------|-----------|-----------------------------------------------------------------------------------------------------|\n+| rssi          | Number    | The \"Received Signal Strength Indicator\", the [RSSI](https://blog.bluetooth.com/proximity-and-rssi) |\n+| last-activity | DateTime  | The last time that any radio activity was received from this device                                 |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MjczNA=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NDAzMw==", "bodyText": "Can you elaborate what kind of rules people write when having that channel available? Could the logic of such rules possibly be captured within the binding and be provided as a special channel?\nFor presence detection, I would possibly consider the Thing status to be the best instrument - if the Thing is OFFLINE, it means the device isn't in reach anymore. BT things could have a configuration parameter, which says after what period of inactivity the Thing should move to OFFLINE status. Would that address the requirement?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r436954033", "createdAt": "2020-06-08T19:36:24Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -37,11 +38,12 @@ Both thing types only require a single configuration parameter `address`, which\n \n ## Channels\n \n-Every Bluetooth thing has the following channel:\n+Every Bluetooth thing has the following channels:\n \n-| Channel ID | Item Type | Description                                                                                         |\n-|------------|-----------|-----------------------------------------------------------------------------------------------------|\n-| rssi       | Number    | The \"Received Signal Strength Indicator\", the [RSSI](https://blog.bluetooth.com/proximity-and-rssi) |\n+| Channel ID    | Item Type | Description                                                                                         |\n+|---------------|-----------|-----------------------------------------------------------------------------------------------------|\n+| rssi          | Number    | The \"Received Signal Strength Indicator\", the [RSSI](https://blog.bluetooth.com/proximity-and-rssi) |\n+| last-activity | DateTime  | The last time that any radio activity was received from this device                                 |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MjczNA=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3Nzk2MA==", "bodyText": "For presence detection, I would possibly consider the Thing status to be the best instrument - if the Thing is OFFLINE, it means the device isn't in reach anymore. BT things could have a configuration parameter, which says after what period of inactivity the Thing should move to OFFLINE status. Would that address the requirement?\n\nYou have a point there. I'll adjust the feature to control thing status and get rid of the last-activity channel. Thank for pointing this out.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r436977960", "createdAt": "2020-06-08T20:23:28Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -37,11 +38,12 @@ Both thing types only require a single configuration parameter `address`, which\n \n ## Channels\n \n-Every Bluetooth thing has the following channel:\n+Every Bluetooth thing has the following channels:\n \n-| Channel ID | Item Type | Description                                                                                         |\n-|------------|-----------|-----------------------------------------------------------------------------------------------------|\n-| rssi       | Number    | The \"Received Signal Strength Indicator\", the [RSSI](https://blog.bluetooth.com/proximity-and-rssi) |\n+| Channel ID    | Item Type | Description                                                                                         |\n+|---------------|-----------|-----------------------------------------------------------------------------------------------------|\n+| rssi          | Number    | The \"Received Signal Strength Indicator\", the [RSSI](https://blog.bluetooth.com/proximity-and-rssi) |\n+| last-activity | DateTime  | The last time that any radio activity was received from this device                                 |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MjczNA=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDUzOTYxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToyMzowM1rOGeEcxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyNToxNFrOGgvEvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MzM2NQ==", "bodyText": "Just like the other adapters, this one should go into its own bundle. Is there any strong reason against that?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434183365", "createdAt": "2020-06-02T21:23:03Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -50,18 +52,31 @@ Every Bluetooth thing has the following channel:\n | battery_level | Number    | The device's battery level in percent                           |\n \n \n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+\n+## Roaming Adapter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NzIyMg==", "bodyText": "I initially attempted something akin to that approach but I found that the BluetoothDiscoveryService would need to handle roaming bluetooth devices differently than other devices, and in order to do that they would need awareness of what a roaming device was. This awareness, as well as an overall increase in the complexity of the problems that would need to be resolved, made me decide to just embed the roaming adapter into the base bluetooth bundle itself.\nThis does make sense in a way, since the roaming adapter isn't any sort of concrete implementation of a Bluetooth adapter as it delegates all of its operations to a real adapter instead.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434197222", "createdAt": "2020-06-02T21:54:54Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -50,18 +52,31 @@ Every Bluetooth thing has the following channel:\n | battery_level | Number    | The device's battery level in percent                           |\n \n \n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+\n+## Roaming Adapter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MzM2NQ=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1NjEwNA==", "bodyText": "The roaming adapter is nonetheless just an optional feature, which could be left away easily and not a mandatory core part of the binding. I think wrt code cleanliness and structure, it would be nice to have it as a separate bundle.\nWrt the discovery service I'd suggest to think about a way to introduce an interface to the \"generic\" discovery service, which allows the customization of its logic by extensions. Similar to the \"UPnPDiscoveryParticipant\", which plugs into the \"UPnPDiscoveryService\".\nDo you think that would be feasible?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r436956104", "createdAt": "2020-06-08T19:40:29Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -50,18 +52,31 @@ Every Bluetooth thing has the following channel:\n | battery_level | Number    | The device's battery level in percent                           |\n \n \n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+\n+## Roaming Adapter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MzM2NQ=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3ODg3Ng==", "bodyText": "Wrt the discovery service I'd suggest to think about a way to introduce an interface to the \"generic\" discovery service, which allows the customization of its logic by extensions. Similar to the \"UPnPDiscoveryParticipant\", which plugs into the \"UPnPDiscoveryService\".\nDo you think that would be feasible?\n\nI think that should be feasible, I'll get to work on that. Thanks!", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r436978876", "createdAt": "2020-06-08T20:25:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/README.md", "diffHunk": "@@ -50,18 +52,31 @@ Every Bluetooth thing has the following channel:\n | battery_level | Number    | The device's battery level in percent                           |\n \n \n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+\n+## Roaming Adapter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4MzM2NQ=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDU1MzYwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth/src/main/resources/ESH-INF/thing/channels.xml", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToyNzo1MVrOGeElgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMToyNjozNlrOGjZeNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4NTYwMA==", "bodyText": "Are you sure? According to https://en.wikipedia.org/wiki/DBm, \"dBm\" is dimensionless.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434185600", "createdAt": "2020-06-02T21:27:51Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -5,11 +5,32 @@\n \txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n \n \t<channel-type id=\"rssi\">\n-\t\t<item-type>Number</item-type>\n+\t\t<item-type>Number:Power</item-type>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5OTExMA==", "bodyText": "I just looked up the smarthome unit that used \"dBm\" as its symbol. SmartHomeUnits.DECIBEL_MILLIWATTS uses \"Power\" as its quantity type.\nAlso I think that the wiki article states that \"dB\" is dimensionless, not \"dBm\".", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r434199110", "createdAt": "2020-06-02T21:59:54Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -5,11 +5,32 @@\n \txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n \n \t<channel-type id=\"rssi\">\n-\t\t<item-type>Number</item-type>\n+\t\t<item-type>Number:Power</item-type>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4NTYwMA=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjY2Nw==", "bodyText": "We might have to fix SmartHomeUnits then...\n\nAlso I think that the wiki article states that \"dB\" is dimensionless, not \"dBm\".\n\nI guess you are just reading the wrong sentence in it. It states:\n\"The dBm is also dimensionless but since it compares to a fixed reference value the dBm rating is an absolute one.\"", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439766667", "createdAt": "2020-06-13T20:22:10Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -5,11 +5,32 @@\n \txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n \n \t<channel-type id=\"rssi\">\n-\t\t<item-type>Number</item-type>\n+\t\t<item-type>Number:Power</item-type>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4NTYwMA=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MDM5NQ==", "bodyText": "\"The dBm is also dimensionless but since it compares to a fixed reference value the dBm rating is an absolute one.\"\n\nHuh, does this mean that I shouldn't be using SmartHomeUnits.DECIBEL_MILLIWATTS then since it is wrongly typed as a unit of Power? Should probably be fixed then.\nI'll leave rssi as a regular Number type for now then until the units get sorted out.\nSorry for the back and forth, I should have taken the time to read sentence following the one I posted.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439770395", "createdAt": "2020-06-13T21:22:01Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -5,11 +5,32 @@\n \txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n \n \t<channel-type id=\"rssi\">\n-\t\t<item-type>Number</item-type>\n+\t\t<item-type>Number:Power</item-type>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4NTYwMA=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MDY3OQ==", "bodyText": "Should probably be fixed then.\n\nWanna do a PR against openhab-core?\n\nI'll leave rssi as a regular Number type for now then until the units get sorted out.\n\nSounds like a reasonable solution for now.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439770679", "createdAt": "2020-06-13T21:26:36Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/resources/ESH-INF/thing/channels.xml", "diffHunk": "@@ -5,11 +5,32 @@\n \txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\n \n \t<channel-type id=\"rssi\">\n-\t\t<item-type>Number</item-type>\n+\t\t<item-type>Number:Power</item-type>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4NTYwMA=="}, "originalCommit": {"oid": "e57f3166ba17c36125a706842a0749ed80f76711"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTY0OTgxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMDowODowMlrOGjZKnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMToxNTowOFrOGjZaJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NTY2MQ==", "bodyText": "To me as a reader it is completely unclear what this \"Location\" string will contain. Would be nice to have some better explanation for it.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439765661", "createdAt": "2020-06-13T20:08:02Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2OTYzNg==", "bodyText": "Will do", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439769636", "createdAt": "2020-06-13T21:15:08Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NTY2MQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTY1MTE1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMDoxMTowOFrOGjZLRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMTowNTowMFrOGjZX9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NTgzMQ==", "bodyText": "Why? Discovery is meant for real stuff where it is clear that it exists. The roaming adapter is a feature that the user can decide by himself whether he wants to make use of it or not. If he does, he can simply add a roaming bridge very easily.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439765831", "createdAt": "2020-06-13T20:11:08Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2OTA3Nw==", "bodyText": "I'll remove it then since users could always create it manually if they wanted.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439769077", "createdAt": "2020-06-13T21:05:00Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NTgzMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTY1MTk5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMDoxMjo0M1rOGjZLrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMToxMTo0MFrOGjZZWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NTkzMg==", "bodyText": "If this is due to technical constraints, it smells like some unclean design. In general, it should be allowed to create any number of things/bridges of a given type.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439765932", "createdAt": "2020-06-13T20:12:43Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2OTA0Ng==", "bodyText": "Well I was worried a bit of how that particular aspect would blow over. Technically I could support more than one but since every roaming adapter monitors every other real adapter I didn't see a reason to allow supporting more than one since they would both report the same thing. So the roaming adapter limitation was more a design choice rather than a technical limitation. I can add support for it if you think that is what I should do.\nI suppose down the line multiple roaming adapters could come in handy if I added support for manually choosing which real adapters a roaming adapter would monitor. Then you could have multiple roaming adapters each responsible for a separate set of real adapters.\nBut I don't know if that is something worth pursuing at the moment since the number of bluetooth adapters available to openhab is limited to the number that can be directly connected to the device that openhab is running on (might not be the case for bluegiga adapters if you use serial->net software).\nBut once ble->mqtt support comes down the line then adding that feature would very likely need to be considered.\nWDYT?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439769046", "createdAt": "2020-06-13T21:04:23Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NTkzMg=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2OTQzNQ==", "bodyText": "If it is not so much a technical constraint, but rather a functional/logical one, then this sounds good to me. I mainly wanted to make sure that such \"logic simplifications\" do not result in shortcuts in the code, which would go against the architectural guidelines (to have things independent from each other and individually referenceable).\nNo need to make any use of the fact that there might be more than one through features in the code right now.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439769435", "createdAt": "2020-06-13T21:11:40Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NTkzMg=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTY1MjM4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMDoxMzo0NFrOGjZL4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMDoxMzo0NFrOGjZL4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NTk4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n          \n          \n            \n            The roaming bridge requires an `address` parameter which merely serves as an identifier for the virtual adapter, its value does not matter.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439765984", "createdAt": "2020-06-13T20:13:44Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTY1MzI5OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "isResolved": true, "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMDoxNToyM1rOGjZMVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwNjozNzowMVrOHUiJ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ==", "bodyText": "This sounds as if the value should be a mac address. Could it also be /(%\u00a7&@~$\") or is its syntax checked against mac structure?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439766101", "createdAt": "2020-06-13T20:15:23Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2OTU3NQ==", "bodyText": "Right now the value is required to be a mac address to create an instance of BluetoothAddress for the adapter's getAddress() method to return.\nFunnily enough, after looking through the Bluetooth binding code it seems that only place that BluetoothAdapter.getAddress() is even called is in a logging statement. So there isn't really any architectural requirement for BluetoothAdapter to even have a getAddress method.\nWould it make sense to remove that method from the BluetoothAdapter interface to allow users to create roaming thing instances without having to specify a fake bluetooth mac address?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439769575", "createdAt": "2020-06-13T21:14:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MDU4OQ==", "bodyText": "Well, this parameter is what makes the bridge unique - it is the only differentiator between two bridges. Just as you say \"it merely serves as an identifier\". But this means we cannot remove it (or if we did, we would need to add some other parameter as a replacement). So I guess we can keep it and should only specify, what the value of the address should be for roaming adapters. If it does not have to be a mac, you could come up with something yourself, like saying it has to be virtual:XX with XX a byte value or whatever. And having a small syntax check on the parameter then probably won't hurt.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439770589", "createdAt": "2020-06-13T21:25:16Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc3MTkwOA==", "bodyText": "If it does not have to be a mac, you could come up with something yourself, like saying it has to be virtual:XX with XX a byte value or whatever. And having a small syntax check on the parameter then probably won't hurt.\n\nWell right now it has to be a mac in order to be able to implement the BluetoothAdapter.getAddress() method but if that method were to be removed you are correct that the identifier could be anything we want.\nBut it might also be possible to not have any identifier for roaming bridges at all outside of their thingUID. Roaming bridges only exist as ThingHandlers and have no actual backing device; they exist as soon as a roaming thing requests a handler.\nIs the ThingUID not a sufficient bridge identifier? Or do you think a separate identifier is required?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439771908", "createdAt": "2020-06-13T21:48:47Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDgwOQ==", "bodyText": "right now it has to be a mac in order to be able to implement the BluetoothAdapter.getAddress()\n\nBut what you are saying is that this method isn't really used anywhere. So why does it have to be a mac when it just says \"address\"? My idea was to define \"address\" a bit wider than being a mac and thus use something artificial like virtual:01 as an address for the roaming bridge.\n\nIs the ThingUID not a sufficient bridge identifier?\n\nNo, as mentioned above, it would mean that it is the very same \"thing\", just being referenced with different ids. For the roaming bridge it is difficult to argue, since it is an exceptional abstract case. I somehow feel that we nonetheless should not make any exceptions for it, at least when it isn't a big deal for us.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r441124809", "createdAt": "2020-06-16T20:33:08Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE4ODU0OA==", "bodyText": "So why does it have to be a mac when it just says \"address\"?\n\nIt is meant to be reflective of the how the bluetooth protocols are meant to operate. All devices on a bluetooth network have a mac address, host and devices, through which they identify themselves as they communicate across the network. The BluetoothAdapter.getAddress method was meant to reflect an attribute of real physical bluetooth adapters which have unique mac addresses.\nAll BluetoothAdapter implementations are required to return a non-null BluetoothAddress object from their BluetoothAdapter.getAddress implementation.\nBecause the roaming adapter has to implement BluetoothAdapter then it must also be able to provide an BluetoothAddress instance to return. The BluetoothAddress enforces the mac format of the address on creation, so their is no way to not have a BluetoothAddress that isn't in the XX:XX:XX:XX:XX:XX format.\nSo if we want the roaming adapter to support non-mac addresses then we would either have to do one of the following:\n\nremove BluetoothAdapter.getAddress\nchange BluetoothAdapter.getAddress's return type to be nullable so that the roaming adapter can return null\nchange the return type to something that isn't BluetoothAddress\nmodify BluetoothAddress to allow non-mac address formats.\n\nWhich one do you think I should go with?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r441188548", "createdAt": "2020-06-16T23:00:56Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU5MDg0Nw==", "bodyText": "I just read that devices are often using random MAC addresses for privacy reasons. It therefore seems to me that it is legit to just provide ANY MAC address - so your suggestion in the readme to just define any MAC address as long as it is in the valid format might indeed be the simplest way to go?\nYou say \"a value outside of the normal bluetooth mac address range\" - can this be specified in more detail?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r448590847", "createdAt": "2020-07-01T20:10:17Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MTI3MQ==", "bodyText": "@cpmeister If you want to get it into 2.5.7, we should now finish it soon.\nWould you agree with my comment above? If so, please adapt the code, rebase it and we should be good to merge!", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r453361271", "createdAt": "2020-07-12T20:42:11Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwODE5MA==", "bodyText": "You say \"a value outside of the normal bluetooth mac address range\" - can this be specified in more detail?\n\nYou give one example now (\"FF:FF:FF:FF:FF:FF\"), but \"value outside normal range\" sounds like there should be a kind of \"reserved\" address space for local/private addresses. What values other than \"FF:FF:FF:FF:FF:FF\" would you think are ok to use?", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490008190", "createdAt": "2020-09-17T06:47:16Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDUwODE5NA==", "bodyText": "I went ahead and just removed the address from the roaming adapters entirely. It wasn't meaningfully used in the code and would only confuse users trying to configure a roaming adapter thing.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490508194", "createdAt": "2020-09-17T19:30:50Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkyNDcwOQ==", "bodyText": "Hm, it seems you forgot about all previous discussion we had here - removing the address was not really an option, see #7199 (comment).", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490924709", "createdAt": "2020-09-18T12:47:37Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI2NTY3MQ==", "bodyText": "Hm, it seems you forgot about all previous discussion we had here - removing the address was not really an option, see #7199 (comment).\n\nApparently I did forget! But since I loathe idea of a useless configuration parameter I went ahead and implemented the roaming adapter groups feature. This feature adds a groupUIDs parameter which could serve as an identifier for any roaming bridge thing. I've also eliminated the restriction of only allowing a single roaming adapter thing to be defined.\nI hope this is sufficient compromise.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r491265671", "createdAt": "2020-09-19T04:03:25Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI5MzE1MA==", "bodyText": "Ok, sounds like a decent compromise, thank you!", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r491293150", "createdAt": "2020-09-19T06:37:01Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -0,0 +1,41 @@\n+# Bluetooth Roaming Adapter\n+\n+This extension adds support for accessing Bluetooth devices from any other configured adapter via a virtual adapter.\n+\n+## Supported Things\n+\n+It defines the following bridge type:\n+\n+| Bridge Type ID | Description                                                                                                |\n+|----------------|------------------------------------------------------------------------------------------------------------|\n+| roaming        | A virtual Bluetooth adapter that interacts with Bluetooth devices through their nearest Bluetooth adapter. |\n+\n+## Channels\n+\n+Devices which use a `roaming` adapter as their bridge also gain the following channels:\n+\n+| Channel ID       | Item Type | Description                                                     |\n+|------------------|-----------|-----------------------------------------------------------------|\n+| adapter-uid      | String    | The thingUID of the adapter that is nearest to this device      |\n+| adapter-location | String    | The value of the `Location` specified for the nearest adapter    |\n+\n+## Discovery\n+\n+A default roaming adapter is discovered automatically, although you can still configure it textually if you want.\n+There can be only a single roaming adapter on a system.\n+\n+## Bridge Configuration\n+\n+The roaming bridge requires an `address` parameter which mearly servers as an identifier for the virtual adapter, its value doesn't really matter. \n+It is advised to make sure it is set to a value outside of the normal bluetooth mac address range, for example: \"FF:FF:FF:FF:FF:FF\".", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2NjEwMQ=="}, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTY1ODM1OnYy", "diffSide": "RIGHT", "path": "features/openhab-addons/src/main/resources/footer.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMDoyMzoxM1rOGjZO3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xM1QyMDoyMzoxM1rOGjZO3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTc2Njc1MA==", "bodyText": "please revert this change - the indentation was correct before", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r439766750", "createdAt": "2020-06-13T20:23:13Z", "author": {"login": "kaikreuzer"}, "path": "features/openhab-addons/src/main/resources/footer.xml", "diffHunk": "@@ -1,4 +1,4 @@\n-    <!-- aggregated features -->\n+\t<!-- aggregated features -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fcdd6bc1b7e3570026e94ad15b164a3a803e29"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNzI4ODQ5OnYy", "diffSide": "RIGHT", "path": "features/openhab-addons/src/main/resources/footer.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDozNjoxNlrOGwW8JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQyMDozNjoxNlrOGwW8JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM2MDY3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <!-- aggregated features -->\n          \n          \n            \n            <!-- aggregated features -->", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r453360677", "createdAt": "2020-07-12T20:36:16Z", "author": {"login": "kaikreuzer"}, "path": "features/openhab-addons/src/main/resources/footer.xml", "diffHunk": "@@ -1,4 +1,4 @@\n-\t<!-- aggregated features -->\n+    <!-- aggregated features -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "030dcc9884a6d003289a567b0076645bff25c3c0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTk0MDEzOnYy", "diffSide": "RIGHT", "path": "features/openhab-addons/src/main/resources/footer.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjo0OTo0MFrOHTTyfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzo1NTo1M1rOHTuwKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwOTIxMw==", "bodyText": "Here seems to be something wrong, you're duplicating all information in this file.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490009213", "createdAt": "2020-09-17T06:49:40Z", "author": {"login": "kaikreuzer"}, "path": "features/openhab-addons/src/main/resources/footer.xml", "diffHunk": "@@ -1,4 +1,113 @@\n \t<!-- aggregated features -->\n+\t<feature name=\"openhab-binding-bluetooth\" description=\"Bluetooth Binding\" version=\"${project.version}\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe237c856c09c10ea32348594e1d8e7410c6b70a"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM2MDIyOA==", "bodyText": "Something wrong indeed, I'll fix it.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490360228", "createdAt": "2020-09-17T15:51:59Z", "author": {"login": "cpmeister"}, "path": "features/openhab-addons/src/main/resources/footer.xml", "diffHunk": "@@ -1,4 +1,113 @@\n \t<!-- aggregated features -->\n+\t<feature name=\"openhab-binding-bluetooth\" description=\"Bluetooth Binding\" version=\"${project.version}\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwOTIxMw=="}, "originalCommit": {"oid": "fe237c856c09c10ea32348594e1d8e7410c6b70a"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ0OTk4NQ==", "bodyText": "Strange, I've fixed it on my branch but it doesn't show it as fixed here...", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490449985", "createdAt": "2020-09-17T17:54:13Z", "author": {"login": "cpmeister"}, "path": "features/openhab-addons/src/main/resources/footer.xml", "diffHunk": "@@ -1,4 +1,113 @@\n \t<!-- aggregated features -->\n+\t<feature name=\"openhab-binding-bluetooth\" description=\"Bluetooth Binding\" version=\"${project.version}\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwOTIxMw=="}, "originalCommit": {"oid": "fe237c856c09c10ea32348594e1d8e7410c6b70a"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ1MDk4Ng==", "bodyText": "nvm, fixed it", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490450986", "createdAt": "2020-09-17T17:55:53Z", "author": {"login": "cpmeister"}, "path": "features/openhab-addons/src/main/resources/footer.xml", "diffHunk": "@@ -1,4 +1,113 @@\n \t<!-- aggregated features -->\n+\t<feature name=\"openhab-binding-bluetooth\" description=\"Bluetooth Binding\" version=\"${project.version}\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAwOTIxMw=="}, "originalCommit": {"oid": "fe237c856c09c10ea32348594e1d8e7410c6b70a"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTk0OTEzOnYy", "diffSide": "LEFT", "path": "bundles/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNjo1MjoyOVrOHTT3lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNTo1MDozM1rOHTpJuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAxMDUxNw==", "bodyText": "Spotless complains about this file, so you should apply it here as well, I guess.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490010517", "createdAt": "2020-09-17T06:52:29Z", "author": {"login": "kaikreuzer"}, "path": "bundles/pom.xml", "diffHunk": "@@ -1,6 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe237c856c09c10ea32348594e1d8e7410c6b70a"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM1OTIyNQ==", "bodyText": "strange, spotless was the one that made that change... I'll manually edit it back", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r490359225", "createdAt": "2020-09-17T15:50:33Z", "author": {"login": "cpmeister"}, "path": "bundles/pom.xml", "diffHunk": "@@ -1,6 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAxMDUxNw=="}, "originalCommit": {"oid": "fe237c856c09c10ea32348594e1d8e7410c6b70a"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NDI2NDcyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwNjozODoxMFrOHUiK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOVQwNjozODoxMFrOHUiK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTI5MzQzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The Roaming bridge has an optional parameter `groupUIDs` that configures which Bluetooth adapters this roaming bridge will be monitored for the purpose of roaming devices. `groupUIDs` must be formatted as a comma separated list of Bluetooth adapter thing UID values. If the `groupUIDs` parameter is not specified or left empty then the Roaming adapter will track devices across all other Bluetooth adapters.\n          \n          \n            \n            \n          \n          \n            \n            The Roaming bridge has an optional parameter `groupUIDs` that configures which Bluetooth adapters this roaming bridge will be monitored for the purpose of roaming devices.\n          \n          \n            \n            `groupUIDs` must be formatted as a comma separated list of Bluetooth adapter thing UID values.\n          \n          \n            \n            If the `groupUIDs` parameter is not specified or left empty then the Roaming adapter will track devices across all other Bluetooth adapters.", "url": "https://github.com/openhab/openhab-addons/pull/7199#discussion_r491293435", "createdAt": "2020-09-19T06:38:10Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.bluetooth.roaming/README.md", "diffHunk": "@@ -22,11 +22,11 @@ Devices which use a `roaming` adapter as their bridge also gain the following ch\n ## Discovery\n \n Roaming adapters cannot be discovered, they can only be created manually.\n-There can be only a single roaming adapter on a system.\n \n ## Bridge Configuration\n+The Roaming bridge has an optional parameter `groupUIDs` that configures which Bluetooth adapters this roaming bridge will be monitored for the purpose of roaming devices. `groupUIDs` must be formatted as a comma separated list of Bluetooth adapter thing UID values. If the `groupUIDs` parameter is not specified or left empty then the Roaming adapter will track devices across all other Bluetooth adapters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dbbb3c9af8e9d3366c314b963eefd5566a7711d"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 730, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}