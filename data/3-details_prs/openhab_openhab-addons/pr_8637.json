{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTM5NjIw", "number": 8637, "title": "[miio] add new map elements", "bodyText": "Add newly found mapelements for obstacles\nSigned-off-by: Marcel Verpaalen marcel@verpaalen.com", "createdAt": "2020-10-02T21:17:10Z", "url": "https://github.com/openhab/openhab-addons/pull/8637", "merged": true, "mergeCommit": {"oid": "9c6c80d41f32814d9b9f8d52909bd227ed843191"}, "closed": true, "closedAt": "2020-10-04T16:36:00Z", "author": {"login": "marcelrv"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOso8PgH2gAyNDk3MTM5NjIwOmJiMmQ4YzgzMDgwN2FjZWE1ZmMzZDc5YzQxZDM2MTIzMDg3YWQ3OWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPR3X1AFqTUwMTYzOTEyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb2d8c830807acea5fc3d79c41d36123087ad79d", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/bb2d8c830807acea5fc3d79c41d36123087ad79d", "committedDate": "2020-10-02T21:12:43Z", "message": "[miio] add new map elements\n\nAdd newly found mapelements for obstacles\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10f101c232716bf1b30a87d1cab7d490c2c64564", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/10f101c232716bf1b30a87d1cab7d490c2c64564", "committedDate": "2020-10-02T22:45:32Z", "message": "[miio] apply spotless\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDk2OTY0", "url": "https://github.com/openhab/openhab-addons/pull/8637#pullrequestreview-501496964", "createdAt": "2020-10-02T23:43:48Z", "commit": {"oid": "10f101c232716bf1b30a87d1cab7d490c2c64564"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMzo0Mzo0OFrOHb-D-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMzo0Nzo1OVrOHb-G4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5MDQyNA==", "bodyText": "Is there a reason you are only allowing 15 colors instead of the full 16?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            g2d.setColor(ROOM_COLORS[mapId % 15]);\n          \n          \n            \n                                            g2d.setColor(ROOM_COLORS[mapId % ROOM_COLORS.length]);", "url": "https://github.com/openhab/openhab-addons/pull/8637#discussion_r499090424", "createdAt": "2020-10-02T23:43:48Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/robot/RRMapDraw.java", "diffHunk": "@@ -160,7 +165,8 @@ private void drawMap(Graphics2D g2d, float scale) {\n                                 g2d.setColor(Color.BLACK);\n                                 break;\n                             case 7:\n-                                g2d.setColor(ROOM_COLORS[Math.round(mapId / 2)]);\n+                                g2d.setColor(ROOM_COLORS[mapId % 15]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10f101c232716bf1b30a87d1cab7d490c2c64564"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5MDgwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Integer obstacleType : obstacles.keySet()) {\n          \n          \n            \n                        obstacles.get(obstacleType).forEach(obstacle -> {\n          \n          \n            \n                            final float obstacleX = toXCoord(obstacle[0]) * scale;\n          \n          \n            \n                            final float obstacleY = toYCoord(obstacle[1]) * scale;\n          \n          \n            \n                            drawCircle(g2d, obstacleX, obstacleY, radius, true);\n          \n          \n            \n                            if (scale > 1.0) {\n          \n          \n            \n                                drawCenteredImg(g2d, scale / 3, \"obstacle-\" + obstacle[2] + \".png\", obstacleX, obstacleY + 15);\n          \n          \n            \n                            }\n          \n          \n            \n                        });\n          \n          \n            \n            \n          \n          \n            \n                    }\n          \n          \n            \n                    for (ArrayList<int[]> value : obstacles.values()) {\n          \n          \n            \n                        value.forEach(obstacle -> {\n          \n          \n            \n                            final float obstacleX = toXCoord(obstacle[0]) * scale;\n          \n          \n            \n                            final float obstacleY = toYCoord(obstacle[1]) * scale;\n          \n          \n            \n                            drawCircle(g2d, obstacleX, obstacleY, radius, true);\n          \n          \n            \n                            if (scale > 1.0) {\n          \n          \n            \n                                drawCenteredImg(g2d, scale / 3, \"obstacle-\" + obstacle[2] + \".png\", obstacleX, obstacleY + 15);\n          \n          \n            \n                            }\n          \n          \n            \n                        });\n          \n          \n            \n                    }", "url": "https://github.com/openhab/openhab-addons/pull/8637#discussion_r499090805", "createdAt": "2020-10-02T23:45:53Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/robot/RRMapDraw.java", "diffHunk": "@@ -275,31 +288,58 @@ private void drawRobo(Graphics2D g2d, float scale) {\n         g2d.setColor(COLOR_CHARGER_HALO);\n         final float chargerX = toXCoord(rmfp.getChargerX()) * scale;\n         final float chargerY = toYCoord(rmfp.getChargerY()) * scale;\n-        drawCircle(g2d, chargerX, chargerY, radius);\n+        drawCircle(g2d, chargerX, chargerY, radius, false);\n         drawCenteredImg(g2d, scale / 8, \"charger.png\", chargerX, chargerY);\n         radius = 3 * scale;\n         g2d.setColor(COLOR_ROBO);\n         final float roboX = toXCoord(rmfp.getRoboX()) * scale;\n         final float roboY = toYCoord(rmfp.getRoboY()) * scale;\n-        drawCircle(g2d, roboX, roboY, radius);\n+        drawCircle(g2d, roboX, roboY, radius, false);\n         if (scale > 1.5) {\n             drawCenteredImg(g2d, scale / 15, \"robo.png\", roboX, roboY);\n         }\n     }\n \n-    private void drawCircle(Graphics2D g2d, float x, float y, float radius) {\n-        g2d.draw(new Ellipse2D.Double(x - radius, y - radius, 2.0 * radius, 2.0 * radius));\n+    private void drawObstacles(Graphics2D g2d, float scale) {\n+        float radius = 2 * scale;\n+        Stroke stroke = new BasicStroke(3 * scale);\n+        g2d.setStroke(stroke);\n+        g2d.setColor(Color.MAGENTA);\n+\n+        Map<Integer, ArrayList<int[]>> obstacles = rmfp.getObstacles();\n+        for (Integer obstacleType : obstacles.keySet()) {\n+            obstacles.get(obstacleType).forEach(obstacle -> {\n+                final float obstacleX = toXCoord(obstacle[0]) * scale;\n+                final float obstacleY = toYCoord(obstacle[1]) * scale;\n+                drawCircle(g2d, obstacleX, obstacleY, radius, true);\n+                if (scale > 1.0) {\n+                    drawCenteredImg(g2d, scale / 3, \"obstacle-\" + obstacle[2] + \".png\", obstacleX, obstacleY + 15);\n+                }\n+            });\n+\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10f101c232716bf1b30a87d1cab7d490c2c64564"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5MDg3OQ==", "bodyText": "remove blank line", "url": "https://github.com/openhab/openhab-addons/pull/8637#discussion_r499090879", "createdAt": "2020-10-02T23:46:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/robot/RRMapDraw.java", "diffHunk": "@@ -275,31 +288,58 @@ private void drawRobo(Graphics2D g2d, float scale) {\n         g2d.setColor(COLOR_CHARGER_HALO);\n         final float chargerX = toXCoord(rmfp.getChargerX()) * scale;\n         final float chargerY = toYCoord(rmfp.getChargerY()) * scale;\n-        drawCircle(g2d, chargerX, chargerY, radius);\n+        drawCircle(g2d, chargerX, chargerY, radius, false);\n         drawCenteredImg(g2d, scale / 8, \"charger.png\", chargerX, chargerY);\n         radius = 3 * scale;\n         g2d.setColor(COLOR_ROBO);\n         final float roboX = toXCoord(rmfp.getRoboX()) * scale;\n         final float roboY = toYCoord(rmfp.getRoboY()) * scale;\n-        drawCircle(g2d, roboX, roboY, radius);\n+        drawCircle(g2d, roboX, roboY, radius, false);\n         if (scale > 1.5) {\n             drawCenteredImg(g2d, scale / 15, \"robo.png\", roboX, roboY);\n         }\n     }\n \n-    private void drawCircle(Graphics2D g2d, float x, float y, float radius) {\n-        g2d.draw(new Ellipse2D.Double(x - radius, y - radius, 2.0 * radius, 2.0 * radius));\n+    private void drawObstacles(Graphics2D g2d, float scale) {\n+        float radius = 2 * scale;\n+        Stroke stroke = new BasicStroke(3 * scale);\n+        g2d.setStroke(stroke);\n+        g2d.setColor(Color.MAGENTA);\n+\n+        Map<Integer, ArrayList<int[]>> obstacles = rmfp.getObstacles();\n+        for (Integer obstacleType : obstacles.keySet()) {\n+            obstacles.get(obstacleType).forEach(obstacle -> {\n+                final float obstacleX = toXCoord(obstacle[0]) * scale;\n+                final float obstacleY = toYCoord(obstacle[1]) * scale;\n+                drawCircle(g2d, obstacleX, obstacleY, radius, true);\n+                if (scale > 1.0) {\n+                    drawCenteredImg(g2d, scale / 3, \"obstacle-\" + obstacle[2] + \".png\", obstacleX, obstacleY + 15);\n+                }\n+            });\n+\n+        }\n+    }\n+\n+    private void drawCircle(Graphics2D g2d, float x, float y, float radius, boolean fill) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10f101c232716bf1b30a87d1cab7d490c2c64564"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5MTE2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        pw.printf(\"\\tObstacle coordinates:\");\n          \n          \n            \n                        pw.print(\"\\tObstacle coordinates:\");", "url": "https://github.com/openhab/openhab-addons/pull/8637#discussion_r499091169", "createdAt": "2020-10-02T23:47:59Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/robot/RRMapFileParser.java", "diffHunk": "@@ -309,6 +368,16 @@ private void printAreaDetails(ArrayList<float[]> areas, PrintWriter pw) {\n         });\n     }\n \n+    private void printObstacleDetails(ArrayList<int[]> obstacle, PrintWriter pw) {\n+        obstacle.forEach(area -> {\n+            pw.printf(\"\\tObstacle coordinates:\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10f101c232716bf1b30a87d1cab7d490c2c64564"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7407bdd318a39b666ad8bd57b3b59cd98e668724", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/7407bdd318a39b666ad8bd57b3b59cd98e668724", "committedDate": "2020-10-03T08:06:07Z", "message": "[miio] cleanup based on feedback\n\nSigned-off-by: Marcel Verpaalen <marcel@verpaalen.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTQyODA4", "url": "https://github.com/openhab/openhab-addons/pull/8637#pullrequestreview-501542808", "createdAt": "2020-10-03T12:30:09Z", "commit": {"oid": "10f101c232716bf1b30a87d1cab7d490c2c64564"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMjozMDowOVrOHcBUzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxMjozMDowOVrOHcBUzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE0Mzg4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<Integer, ArrayList<int[]>> obstacles = rmfp.getObstacles();\n          \n          \n            \n                    for (Integer obstacleType : obstacles.keySet()) {\n          \n          \n            \n                        obstacles.get(obstacleType).forEach(obstacle -> {\n          \n          \n            \n                    Map<Integer, ArrayList<int[]>> obstacleMap = rmfp.getObstacles();\n          \n          \n            \n                    for (ArrayList<int[]> obstacles : obstacleMap.values()) {\n          \n          \n            \n                        obstacles.forEach(obstacle -> {", "url": "https://github.com/openhab/openhab-addons/pull/8637#discussion_r499143886", "createdAt": "2020-10-03T12:30:09Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/robot/RRMapDraw.java", "diffHunk": "@@ -275,31 +288,58 @@ private void drawRobo(Graphics2D g2d, float scale) {\n         g2d.setColor(COLOR_CHARGER_HALO);\n         final float chargerX = toXCoord(rmfp.getChargerX()) * scale;\n         final float chargerY = toYCoord(rmfp.getChargerY()) * scale;\n-        drawCircle(g2d, chargerX, chargerY, radius);\n+        drawCircle(g2d, chargerX, chargerY, radius, false);\n         drawCenteredImg(g2d, scale / 8, \"charger.png\", chargerX, chargerY);\n         radius = 3 * scale;\n         g2d.setColor(COLOR_ROBO);\n         final float roboX = toXCoord(rmfp.getRoboX()) * scale;\n         final float roboY = toYCoord(rmfp.getRoboY()) * scale;\n-        drawCircle(g2d, roboX, roboY, radius);\n+        drawCircle(g2d, roboX, roboY, radius, false);\n         if (scale > 1.5) {\n             drawCenteredImg(g2d, scale / 15, \"robo.png\", roboX, roboY);\n         }\n     }\n \n-    private void drawCircle(Graphics2D g2d, float x, float y, float radius) {\n-        g2d.draw(new Ellipse2D.Double(x - radius, y - radius, 2.0 * radius, 2.0 * radius));\n+    private void drawObstacles(Graphics2D g2d, float scale) {\n+        float radius = 2 * scale;\n+        Stroke stroke = new BasicStroke(3 * scale);\n+        g2d.setStroke(stroke);\n+        g2d.setColor(Color.MAGENTA);\n+\n+        Map<Integer, ArrayList<int[]>> obstacles = rmfp.getObstacles();\n+        for (Integer obstacleType : obstacles.keySet()) {\n+            obstacles.get(obstacleType).forEach(obstacle -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10f101c232716bf1b30a87d1cab7d490c2c64564"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "479c6cbdce4f6858da833786da01ad26a8f54b19", "author": {"user": {"login": "marcelrv", "name": "Marcel"}}, "url": "https://github.com/openhab/openhab-addons/commit/479c6cbdce4f6858da833786da01ad26a8f54b19", "committedDate": "2020-10-04T12:26:14Z", "message": "Update bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/robot/RRMapDraw.java\r\n\r\ncommit suggestion cpmeister\r\n\r\nSigned-off-by: Marcel Verpaalen marcel@verpaalen.com\n\nCo-authored-by: Connor Petty <mistercpp2000@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjM5MTIw", "url": "https://github.com/openhab/openhab-addons/pull/8637#pullrequestreview-501639120", "createdAt": "2020-10-04T16:34:58Z", "commit": {"oid": "479c6cbdce4f6858da833786da01ad26a8f54b19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4462, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}