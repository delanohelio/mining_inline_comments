{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NTIwMjY5", "number": 9294, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzozMzozOVrOFDMMpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzozMzozOVrOFDMMpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODg5ODkzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.nikobus/src/main/java/org/openhab/binding/nikobus/internal/handler/NikobusRollershutterModuleHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzozMzozOVrOICuXdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNzowOToyM1rOIC6THg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcyNzczMw==", "bodyText": "What runtime exceptions are you trying to catch here?", "url": "https://github.com/openhab/openhab-addons/pull/9294#discussion_r539727733", "createdAt": "2020-12-09T23:33:39Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.nikobus/src/main/java/org/openhab/binding/nikobus/internal/handler/NikobusRollershutterModuleHandler.java", "diffHunk": "@@ -28,10 +42,37 @@\n  */\n @NonNullByDefault\n public class NikobusRollershutterModuleHandler extends NikobusModuleHandler {\n+    private final Logger logger = LoggerFactory.getLogger(NikobusRollershutterModuleHandler.class);\n+    private final List<PositionEstimator> positionEstimators = new CopyOnWriteArrayList<>();\n+\n     public NikobusRollershutterModuleHandler(Thing thing) {\n         super(thing);\n     }\n \n+    @Override\n+    public void initialize() {\n+        super.initialize();\n+\n+        if (thing.getStatus() == ThingStatus.OFFLINE) {\n+            return;\n+        }\n+\n+        positionEstimators.clear();\n+\n+        try {\n+            for (Channel channel : thing.getChannels()) {\n+                PositionEstimatorConfig config = channel.getConfiguration().as(PositionEstimatorConfig.class);\n+                if (config.delay >= 0 && config.duration > 0) {\n+                    positionEstimators.add(new PositionEstimator(channel.getUID(), config));\n+                }\n+            }\n+        } catch (RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45fb0bfa96b5e94158c878ce6e5af73c662475fb"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTkyMzIzMA==", "bodyText": "You are right, removed. Also removed from NikobusPushButtonHandler", "url": "https://github.com/openhab/openhab-addons/pull/9294#discussion_r539923230", "createdAt": "2020-12-10T07:09:23Z", "author": {"login": "crnjan"}, "path": "bundles/org.openhab.binding.nikobus/src/main/java/org/openhab/binding/nikobus/internal/handler/NikobusRollershutterModuleHandler.java", "diffHunk": "@@ -28,10 +42,37 @@\n  */\n @NonNullByDefault\n public class NikobusRollershutterModuleHandler extends NikobusModuleHandler {\n+    private final Logger logger = LoggerFactory.getLogger(NikobusRollershutterModuleHandler.class);\n+    private final List<PositionEstimator> positionEstimators = new CopyOnWriteArrayList<>();\n+\n     public NikobusRollershutterModuleHandler(Thing thing) {\n         super(thing);\n     }\n \n+    @Override\n+    public void initialize() {\n+        super.initialize();\n+\n+        if (thing.getStatus() == ThingStatus.OFFLINE) {\n+            return;\n+        }\n+\n+        positionEstimators.clear();\n+\n+        try {\n+            for (Channel channel : thing.getChannels()) {\n+                PositionEstimatorConfig config = channel.getConfiguration().as(PositionEstimatorConfig.class);\n+                if (config.delay >= 0 && config.duration > 0) {\n+                    positionEstimators.add(new PositionEstimator(channel.getUID(), config));\n+                }\n+            }\n+        } catch (RuntimeException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcyNzczMw=="}, "originalCommit": {"oid": "45fb0bfa96b5e94158c878ce6e5af73c662475fb"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3587, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}