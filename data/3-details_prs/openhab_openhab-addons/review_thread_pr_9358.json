{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4OTI4ODQy", "number": 9358, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTowODozOVrOFFwnqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTowODozOVrOFFwnqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTgzNzg2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOTowODozOVrOIGbiWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTo1MjowN1rOIGhl3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzUyOA==", "bodyText": "It seems a bit unreasonable to log the stack trace when the network fails. Same for below.", "url": "https://github.com/openhab/openhab-addons/pull/9358#discussion_r543613528", "createdAt": "2020-12-15T19:08:39Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -312,37 +341,58 @@ private void updateVAChannel(String channelId, double power) {\n                 if (last.isAfter(endDay)) {\n                     last = endDay;\n                 }\n-                report.addAll(reportValues(first, last, separator));\n+                report.addAll(buildReport(first, last, separator));\n                 first = last.plusDays(1);\n             } while (!first.isAfter(endDay));\n         }\n         return report;\n     }\n \n     private @Nullable Consumption getConsumptionData(LocalDate from, LocalDate to) {\n+        logger.debug(\"getConsumptionData from {} to {}\", from.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                to.format(DateTimeFormatter.ISO_LOCAL_DATE));\n         EnedisHttpApi api = this.enedisApi;\n         if (api != null) {\n             try {\n                 return api.getEnergyData(userId, prmId, from, to);\n             } catch (LinkyException e) {\n+                logger.debug(\"getConsumptionData failed: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6074ed0e6c75ce9822ceaf8c89745989470a9881"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4MTY1MA==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/9358#discussion_r543681650", "createdAt": "2020-12-15T20:58:40Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -312,37 +341,58 @@ private void updateVAChannel(String channelId, double power) {\n                 if (last.isAfter(endDay)) {\n                     last = endDay;\n                 }\n-                report.addAll(reportValues(first, last, separator));\n+                report.addAll(buildReport(first, last, separator));\n                 first = last.plusDays(1);\n             } while (!first.isAfter(endDay));\n         }\n         return report;\n     }\n \n     private @Nullable Consumption getConsumptionData(LocalDate from, LocalDate to) {\n+        logger.debug(\"getConsumptionData from {} to {}\", from.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                to.format(DateTimeFormatter.ISO_LOCAL_DATE));\n         EnedisHttpApi api = this.enedisApi;\n         if (api != null) {\n             try {\n                 return api.getEnergyData(userId, prmId, from, to);\n             } catch (LinkyException e) {\n+                logger.debug(\"getConsumptionData failed: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzUyOA=="}, "originalCommit": {"oid": "6074ed0e6c75ce9822ceaf8c89745989470a9881"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4NjI0Mg==", "bodyText": "Now we have a redundant logging as the message in updateStatus() is also logged by the framework. You could remove your logging entirely.", "url": "https://github.com/openhab/openhab-addons/pull/9358#discussion_r543686242", "createdAt": "2020-12-15T21:06:37Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -312,37 +341,58 @@ private void updateVAChannel(String channelId, double power) {\n                 if (last.isAfter(endDay)) {\n                     last = endDay;\n                 }\n-                report.addAll(reportValues(first, last, separator));\n+                report.addAll(buildReport(first, last, separator));\n                 first = last.plusDays(1);\n             } while (!first.isAfter(endDay));\n         }\n         return report;\n     }\n \n     private @Nullable Consumption getConsumptionData(LocalDate from, LocalDate to) {\n+        logger.debug(\"getConsumptionData from {} to {}\", from.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                to.format(DateTimeFormatter.ISO_LOCAL_DATE));\n         EnedisHttpApi api = this.enedisApi;\n         if (api != null) {\n             try {\n                 return api.getEnergyData(userId, prmId, from, to);\n             } catch (LinkyException e) {\n+                logger.debug(\"getConsumptionData failed: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzUyOA=="}, "originalCommit": {"oid": "6074ed0e6c75ce9822ceaf8c89745989470a9881"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5Mjg0Ng==", "bodyText": "It requires to enable an additional DEBUG log for a particular core bundle ?\nMy intentition was to get in an easy way feedback from users encountering problems; just by providing logs from the binding.\nI even don't know myself what core bundle to enable log (without searching in the code), so imagine a standard user.\nBut the error will be available in MainUI, so we should request status from MainUI in case a user has a problem.", "url": "https://github.com/openhab/openhab-addons/pull/9358#discussion_r543692846", "createdAt": "2020-12-15T21:18:08Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -312,37 +341,58 @@ private void updateVAChannel(String channelId, double power) {\n                 if (last.isAfter(endDay)) {\n                     last = endDay;\n                 }\n-                report.addAll(reportValues(first, last, separator));\n+                report.addAll(buildReport(first, last, separator));\n                 first = last.plusDays(1);\n             } while (!first.isAfter(endDay));\n         }\n         return report;\n     }\n \n     private @Nullable Consumption getConsumptionData(LocalDate from, LocalDate to) {\n+        logger.debug(\"getConsumptionData from {} to {}\", from.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                to.format(DateTimeFormatter.ISO_LOCAL_DATE));\n         EnedisHttpApi api = this.enedisApi;\n         if (api != null) {\n             try {\n                 return api.getEnergyData(userId, prmId, from, to);\n             } catch (LinkyException e) {\n+                logger.debug(\"getConsumptionData failed: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzUyOA=="}, "originalCommit": {"oid": "6074ed0e6c75ce9822ceaf8c89745989470a9881"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY5NDY4Nw==", "bodyText": "Log removed", "url": "https://github.com/openhab/openhab-addons/pull/9358#discussion_r543694687", "createdAt": "2020-12-15T21:21:22Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -312,37 +341,58 @@ private void updateVAChannel(String channelId, double power) {\n                 if (last.isAfter(endDay)) {\n                     last = endDay;\n                 }\n-                report.addAll(reportValues(first, last, separator));\n+                report.addAll(buildReport(first, last, separator));\n                 first = last.plusDays(1);\n             } while (!first.isAfter(endDay));\n         }\n         return report;\n     }\n \n     private @Nullable Consumption getConsumptionData(LocalDate from, LocalDate to) {\n+        logger.debug(\"getConsumptionData from {} to {}\", from.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                to.format(DateTimeFormatter.ISO_LOCAL_DATE));\n         EnedisHttpApi api = this.enedisApi;\n         if (api != null) {\n             try {\n                 return api.getEnergyData(userId, prmId, from, to);\n             } catch (LinkyException e) {\n+                logger.debug(\"getConsumptionData failed: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzUyOA=="}, "originalCommit": {"oid": "6074ed0e6c75ce9822ceaf8c89745989470a9881"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcwMzE5MQ==", "bodyText": "This logging is enabled by default via this  setting. It's org.openhab.event.ThingStatusInfoChangedEvent and logged to events.log.", "url": "https://github.com/openhab/openhab-addons/pull/9358#discussion_r543703191", "createdAt": "2020-12-15T21:35:39Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -312,37 +341,58 @@ private void updateVAChannel(String channelId, double power) {\n                 if (last.isAfter(endDay)) {\n                     last = endDay;\n                 }\n-                report.addAll(reportValues(first, last, separator));\n+                report.addAll(buildReport(first, last, separator));\n                 first = last.plusDays(1);\n             } while (!first.isAfter(endDay));\n         }\n         return report;\n     }\n \n     private @Nullable Consumption getConsumptionData(LocalDate from, LocalDate to) {\n+        logger.debug(\"getConsumptionData from {} to {}\", from.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                to.format(DateTimeFormatter.ISO_LOCAL_DATE));\n         EnedisHttpApi api = this.enedisApi;\n         if (api != null) {\n             try {\n                 return api.getEnergyData(userId, prmId, from, to);\n             } catch (LinkyException e) {\n+                logger.debug(\"getConsumptionData failed: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzUyOA=="}, "originalCommit": {"oid": "6074ed0e6c75ce9822ceaf8c89745989470a9881"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzcxMjczMw==", "bodyText": "Ok thank you.", "url": "https://github.com/openhab/openhab-addons/pull/9358#discussion_r543712733", "createdAt": "2020-12-15T21:52:07Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.linky/src/main/java/org/openhab/binding/linky/internal/handler/LinkyHandler.java", "diffHunk": "@@ -312,37 +341,58 @@ private void updateVAChannel(String channelId, double power) {\n                 if (last.isAfter(endDay)) {\n                     last = endDay;\n                 }\n-                report.addAll(reportValues(first, last, separator));\n+                report.addAll(buildReport(first, last, separator));\n                 first = last.plusDays(1);\n             } while (!first.isAfter(endDay));\n         }\n         return report;\n     }\n \n     private @Nullable Consumption getConsumptionData(LocalDate from, LocalDate to) {\n+        logger.debug(\"getConsumptionData from {} to {}\", from.format(DateTimeFormatter.ISO_LOCAL_DATE),\n+                to.format(DateTimeFormatter.ISO_LOCAL_DATE));\n         EnedisHttpApi api = this.enedisApi;\n         if (api != null) {\n             try {\n                 return api.getEnergyData(userId, prmId, from, to);\n             } catch (LinkyException e) {\n+                logger.debug(\"getConsumptionData failed: {}\", e.getMessage(), e);\n                 updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.COMMUNICATION_ERROR, e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxMzUyOA=="}, "originalCommit": {"oid": "6074ed0e6c75ce9822ceaf8c89745989470a9881"}, "originalPosition": 185}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3649, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}