{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTUyODAx", "number": 8061, "title": "[hdpowerview] extensions, improvements, bug-fixes", "bodyText": "Issues Resolved and Raised\nThis PR resolves Addons Issue #4351, its closed duplicate Issue #4836, and Addons Issue #6910.\nIt also resolves issues discovered by myself, and adds new features -- as listed below.\nHowever our testing also revealed a UI bug, which has been reported as UI Issue #290.\nSummary of Additions, Improvements, Fixes\nNew: Support for dual action shades with a shade secondary position\nNew: Full rewrite of shade coordinate system to support all types of shades\nNew: Support for mDNS zero-conf auto discovery\nNew: Hub data cache hard refresh command (after remote control / manual commands)\nNew: Refresh Switch channel in hub (can be used to initiate a hard refresh)\nNew: Support for RefreshType.REFRESH command in hub and shades (initiates a hard refresh)\nNew: Support for StopMove.Stop command in shades\nNew: NonNullByDefault annotations on all classes\nNew: Added JUnit tests for JSON parsing, and online communication\nImproved: Softer handling of hub Http 423 (down for maintenance) errors\nImproved: Extended and improved clarity of logging messages\nImproved: Comprehensively updated and extended the ReadMe file\nImproved: Exception throwing and catching\nImproved: Apply spotless formatting\nImproved: Integer arithmetic, range checks, rounding\nImproved: Increased clarity in thing-types.xml\nImproved: Class, method, and argument names refactored for easier understanding\nImproved: JavaDocs on all classes plus public/protected fields and methods\nFixed: Hub does not support 'Connection: keep-alive' sockets indefinitely\nFixed: JSON class elements now comply fully with the Hunter Douglas API specification\nFixed: Netbios auto discovery supports both v1 and (new) v2 hub names\nFixed: Shades things in the binding that are not in the hub now show OFFLINE\nFixed: In auto- discovery, discovered things UID now includes the bridge Id\nFixed: Representation Property fixed in discovery\nFixed: Representation Property added to thing-types.xml\nFixed: Configuration checks for invalid hub IP addresses\nFixed: Configuration checks for invalid numeric shade IDs\nFixed: Fixed all errors (and potential errors) revealed by Null annotations\nFixed: Fixed all errors revealed by JUnit tests\nAcknowledgements\nMany thanks to @mstroeve and @berland for great support in testing and providing suggestions.", "createdAt": "2020-07-03T17:56:41Z", "url": "https://github.com/openhab/openhab-addons/pull/8061", "merged": true, "mergeCommit": {"oid": "36fb79d795383400dd0ef30990085ba82d2d62d1"}, "closed": true, "closedAt": "2020-07-29T12:06:44Z", "author": {"login": "andrewfg"}, "timelineItems": {"totalCount": 86, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxB3mCAH2gAyNDQ0MTUyODAxOjJmYjQ0YTVjNzBmNjIyMjgzODQzNGVlYTQzNzFkMzNlMzQwYzgxZmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5p3AIgFqTQ1NzQ1NTI3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2fb44a5c70f6222838434eea4371d33e340c81fd", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/2fb44a5c70f6222838434eea4371d33e340c81fd", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] connection-close (experimental)\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c17d0657e139f2cc58aa9f75f1fd0c3f4c63ba6", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/1c17d0657e139f2cc58aa9f75f1fd0c3f4c63ba6", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] support for secondary rail position\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b331dd817a3c0a16f466fdebdfc1f9359747ad5b", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/b331dd817a3c0a16f466fdebdfc1f9359747ad5b", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] second rail testing\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcddefb4ec81ef00b0ee49ec20b8c77800be3879", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/fcddefb4ec81ef00b0ee49ec20b8c77800be3879", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] cosmetics\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c630efd0e46154b4fe1fb082f7444e87561ed8a5", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/c630efd0e46154b4fe1fb082f7444e87561ed8a5", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] fix maven niggles\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59db59a2841d46c882b9f8c15b83ae5a282d3a8c", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/59db59a2841d46c882b9f8c15b83ae5a282d3a8c", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] read me updated\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baf35b42b8e74d85f82806b16312f7993bc9c888", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/baf35b42b8e74d85f82806b16312f7993bc9c888", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8a24ea3479060fe886a4853c136bea4d64b287e", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/f8a24ea3479060fe886a4853c136bea4d64b287e", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] refresh cache\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b80be83587c0a2e376f61472619cf2be49420a12", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/b80be83587c0a2e376f61472619cf2be49420a12", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] integer arithmetic and unit tests\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d9ef841aadcf74b2e6916c3bd811cc264179dbe", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/6d9ef841aadcf74b2e6916c3bd811cc264179dbe", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] integer arithmetic\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26b728eb1a793ae5862853b650df8b7dd14d4741", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/26b728eb1a793ae5862853b650df8b7dd14d4741", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] various tweaks ans tests\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddbd63654afbfee60165e87d22f0c31758943cca", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/ddbd63654afbfee60165e87d22f0c31758943cca", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] various tweaks and tests\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de4d617148f8ef2a3d37f4f1fad78b5770157ae5", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/de4d617148f8ef2a3d37f4f1fad78b5770157ae5", "committedDate": "2020-07-02T16:59:00Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b55cd07b9c8744186d4f9b820cbcef126e08f4e", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/8b55cd07b9c8744186d4f9b820cbcef126e08f4e", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] netbios discovery\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c066ff961ed636f46b42a5c07bfe943d38d4860", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/8c066ff961ed636f46b42a5c07bfe943d38d4860", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] mdns zero-conf discovery\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "702ee1d61945e4d163d8cbdb55f1b459620ec5c7", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/702ee1d61945e4d163d8cbdb55f1b459620ec5c7", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] code formatting\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ace5805a95eb35c1b85a61262ea72824a6d0713c", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/ace5805a95eb35c1b85a61262ea72824a6d0713c", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] shades with no hub data show offline\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b034364fafdc51300f68a59f1c91d183020e6d85", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/b034364fafdc51300f68a59f1c91d183020e6d85", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] netbios discovery\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e617b2d30e5d4120aecdef6ee304ca38e58e732f", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/e617b2d30e5d4120aecdef6ee304ca38e58e732f", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] code clarity, logging, exception handling\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2fe3ca3d5efa02be1c128e3a74ec2f10d78803f", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/d2fe3ca3d5efa02be1c128e3a74ec2f10d78803f", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e791d5949b83f8685e42bee2369d5cb9bb0a55b", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/5e791d5949b83f8685e42bee2369d5cb9bb0a55b", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] minor docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7eabfab82aff4a9674011c280f879444381e5c33", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/7eabfab82aff4a9674011c280f879444381e5c33", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] hub maintenance window\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb7db75ab2b25e90b2b2597c4559cace2cce5d1a", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/eb7db75ab2b25e90b2b2597c4559cace2cce5d1a", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] position co-ordinates many tweaks\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "157f2f7882b498cb822b725bb47b76a8d5d8b81e", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/157f2f7882b498cb822b725bb47b76a8d5d8b81e", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efcfeadbf90e071743eadb19fbe109d1262b61dc", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/efcfeadbf90e071743eadb19fbe109d1262b61dc", "committedDate": "2020-07-02T16:59:01Z", "message": "[hdpowerview] code prettified\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7c3ddc8314c439edc3923bfcd19067ed79f9c91", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/e7c3ddc8314c439edc3923bfcd19067ed79f9c91", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] refactoring\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "175712a6a8fb9a0e60259397ec1dcc7c35beb88a", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/175712a6a8fb9a0e60259397ec1dcc7c35beb88a", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] only send secondary move to shades with a secondary; refactoring\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3c6a63ecb2ce7cab0cc7eeda26d5ed2fa1dae20", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/b3c6a63ecb2ce7cab0cc7eeda26d5ed2fa1dae20", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] http connection close\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e8a3bee6025dcd95f77484c7c0e208d660c99ab", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/3e8a3bee6025dcd95f77484c7c0e208d660c99ab", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75eaa26c575ff87cacea3c5ab13f42cf236ee156", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/75eaa26c575ff87cacea3c5ab13f42cf236ee156", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] improvement of refresh command\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a55555ba6f09883f94eb21734d4596b1946da2d", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/7a55555ba6f09883f94eb21734d4596b1946da2d", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] null annotations\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b69c412a0637a256e25ad2b8ab051bf18191d82f", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/b69c412a0637a256e25ad2b8ab051bf18191d82f", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] shade stop command\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bce776e449c7a99106ca7239a3afcb66652b05c", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/8bce776e449c7a99106ca7239a3afcb66652b05c", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] shade stop command; logging\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "606c46b37050bb2c02348c7cea519ec3d5a34356", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/606c46b37050bb2c02348c7cea519ec3d5a34356", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] null annotations\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d87428e89d46312d44c705980f6b0bacc7d3d254", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/d87428e89d46312d44c705980f6b0bacc7d3d254", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] code docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e204e2e0f0389d52bbb72c266bcdd9b7b0939f7", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/6e204e2e0f0389d52bbb72c266bcdd9b7b0939f7", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] null annotations\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "891fee3f827ab8435af545fc3fbfa4418cf00968", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/891fee3f827ab8435af545fc3fbfa4418cf00968", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] disable live test\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "815e3f7d158c10299ff7762f52309977d1f879af", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/815e3f7d158c10299ff7762f52309977d1f879af", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] stop shade motion; null annotations\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53bc731975625f6d204aa52af51005a7ecd21eff", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/53bc731975625f6d204aa52af51005a7ecd21eff", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] exclude ipv6 addresses\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf7bfceec3650b4f4080855e25f83e7ff3c716c", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/fbf7bfceec3650b4f4080855e25f83e7ff3c716c", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "420ed55a9785a191d29c2b59239e702b09d69a4b", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/420ed55a9785a191d29c2b59239e702b09d69a4b", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] test position primary regular only\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ffb4d7d6686ed5ad0496c46a5bfec3db96beba7", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/7ffb4d7d6686ed5ad0496c46a5bfec3db96beba7", "committedDate": "2020-07-02T16:59:02Z", "message": "[hdpowerview] vane and shade max position; docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46aa4bdb93c6cd35ba5e42694cf117457838236c", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/46aa4bdb93c6cd35ba5e42694cf117457838236c", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] suppress refresh fom updating\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abaa764201a4412663151016486b7d1157a2895f", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/abaa764201a4412663151016486b7d1157a2895f", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] log uri's\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2452f5f8b1c5a2b34f13ed3a987edefd8201dc81", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/2452f5f8b1c5a2b34f13ed3a987edefd8201dc81", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] logging\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9703edfd7ae51c3b23fadac88885cb51b30bb47", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/d9703edfd7ae51c3b23fadac88885cb51b30bb47", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] range check\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad52f9b2c5832830a595f97afa1b75ec0199acfe", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/ad52f9b2c5832830a595f97afa1b75ec0199acfe", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] moveShade fix\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c59082124410323ec72998cacdf84e3e33533d1", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/5c59082124410323ec72998cacdf84e3e33533d1", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] adopted @berland suggestions\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f1312d1d95c8d63c410a31740fc928ffebcf9ea", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/7f1312d1d95c8d63c410a31740fc928ffebcf9ea", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] cleaner code\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "328dbdf2e87cd32447a914389daba77eaa0e7c27", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/328dbdf2e87cd32447a914389daba77eaa0e7c27", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] synchronization\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f230d2680d86684b8a9ec5451cbf4381b5596cf7", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/f230d2680d86684b8a9ec5451cbf4381b5596cf7", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] error message\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff95cce4009bc4d119aeb1f48ea0d5925c544b54", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/ff95cce4009bc4d119aeb1f48ea0d5925c544b54", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerpiew] refactoring, synchronization, log messages\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "340c2a990785de32e711985a1769f6703dfceb17", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/340c2a990785de32e711985a1769f6703dfceb17", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba598fb92113a25ee503bdc076fec69f1f232bc7", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/ba598fb92113a25ee503bdc076fec69f1f232bc7", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] tweak\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b91007e8a22740cb3f98089c4840b56d8a32a997", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/b91007e8a22740cb3f98089c4840b56d8a32a997", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] separate live and offline tests\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9445210bb33fadcc647b932b52270c023ea45e18", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/9445210bb33fadcc647b932b52270c023ea45e18", "committedDate": "2020-07-02T16:59:03Z", "message": "[hdpowerview] id specified as integer not string\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b299f476c71e73bfaf4b420b4d88c953ff6fd08", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/3b299f476c71e73bfaf4b420b4d88c953ff6fd08", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] request position refresh after stop command\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae4078297646515aa75ba2fbfdc2b100fa635d1", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/2ae4078297646515aa75ba2fbfdc2b100fa635d1", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] scene ids must also be integers\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31174d6e740fa11327c23f60aa8f799959569f01", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/31174d6e740fa11327c23f60aa8f799959569f01", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] getshade() without calling refresh\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e52f01142733b558003ca2d45721bcc8093dd1c", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/1e52f01142733b558003ca2d45721bcc8093dd1c", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] docu error\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba0f481e14ae8c565e6345cb85d5e4519b1fe532", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/ba0f481e14ae8c565e6345cb85d5e4519b1fe532", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] refactor class names for clarity\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9d8b571e40221717951f056454cbd693772577c", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/c9d8b571e40221717951f056454cbd693772577c", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] use refactored classes\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb08de63cfbca1cc99c619674934dc5f9d0145b", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/9eb08de63cfbca1cc99c619674934dc5f9d0145b", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] use refactored classes; fix move secondary shade\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33470dd50d8d07cc188988299a5a17dfa5034c86", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/33470dd50d8d07cc188988299a5a17dfa5034c86", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] refactoring\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81e35b85748ba47e842afd13429575dac27584bb", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/81e35b85748ba47e842afd13429575dac27584bb", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] javadoc and comments\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c4602aa38add0228b96be0eb57be0b5f7f58eb8", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/1c4602aa38add0228b96be0eb57be0b5f7f58eb8", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] normal and representation properties\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9489829df10d77a35993fd5d6e8c0557d5db6e9f", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/9489829df10d77a35993fd5d6e8c0557d5db6e9f", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] bugfix representation property\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29923267313ff7b9bb28dc0bad729f2a3f80657a", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/29923267313ff7b9bb28dc0bad729f2a3f80657a", "committedDate": "2020-07-02T16:59:04Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "068030fc518630318162a95af8cb4775ea0a30a7", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/068030fc518630318162a95af8cb4775ea0a30a7", "committedDate": "2020-07-02T16:59:05Z", "message": "hdpowerview] docu typo\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2048a482c13f558a53f8c2e3b78f77d70d9ae1e8", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/2048a482c13f558a53f8c2e3b78f77d70d9ae1e8", "committedDate": "2020-07-02T16:59:05Z", "message": "[hdpowerview] cosmetics\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5693e30ca569f93142edc2f3a5453c3993032eca", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/5693e30ca569f93142edc2f3a5453c3993032eca", "committedDate": "2020-07-02T17:23:37Z", "message": "[hdpowerview] suppress test fail if no hub present\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea64a2970cce93447c307fd68471c83d455a63b8", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/ea64a2970cce93447c307fd68471c83d455a63b8", "committedDate": "2020-07-03T16:57:21Z", "message": "[hdpowerview] javadocs\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28cbdb5058bd0e3f53cefad8e2b44b1056c68743", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/28cbdb5058bd0e3f53cefad8e2b44b1056c68743", "committedDate": "2020-07-03T16:58:00Z", "message": "[hdpowerview] delete unused method\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/264b1da9e83455baa5dd45f1f2de1d159b9d4121", "committedDate": "2020-07-03T17:41:11Z", "message": "[hdpowerview] restore noembeddependencies.profile\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Mzg5MjA3", "url": "https://github.com/openhab/openhab-addons/pull/8061#pullrequestreview-455389207", "createdAt": "2020-07-26T19:26:41Z", "commit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOToyNjo0MVrOG3OmZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMDowOToxMVrOG3O15A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDA3MA==", "bodyText": "Can you express this more abstract, as PaperUI will be removed in OH3?", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460564070", "createdAt": "2020-07-26T19:26:41Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/README.md", "diffHunk": "@@ -1,69 +1,196 @@\n-# Hunter Douglas PowerView Binding\n+# Hunter Douglas (Luxaflex) PowerView Binding\n \n-This is an openHAB binding for the [Hunter Douglas PowerView Motorized Shades](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) via the PowerView Hub.\n+This is an openHAB binding for [Hunter Douglas PowerView](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) motorized shades via their PowerView hub.\n+In some countries the PowerView system is sold under the brand name [Luxaflex](https://www.luxaflex.com/)\n \n-PowerView shades have motorization control for their vertical position, as well as vane controls on the shade's slats.\n-Make sure your Shades are visible in the dedicated PowerView app before attempting discovery.\n-This binding also supports Scenes that are defined via the PowerView app.\n-This helps to work around a limitation of the Hub - commands are executed serially with a several second delay between executions.\n-By using a Scene to control multiple shades at once, the shades will all begin moving at the same time.\n+![PowerView](doc/hdpowerview.png)\n+\n+PowerView shades have motorization control for their vertical position, and some also have vane controls to change the angle of their slats.\n+\n+This binding also supports scenes that are defined in the PowerView app.\n+This helps to work around a limitation of the hub; commands are executed serially with a several second delay between executions.\n+By using a scene to control multiple shades at once, the shades will all begin moving at the same time.\n \n ## Supported Things\n \n-| Thing           | Thing Type | Description                                                                                                                                          |\n-|-----------------|------------|------------------------------------------------------------------------------------------------------------------------------------------------------|\n-| PowerView Hub   | Bridge     | The PowerView Hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n-| PowerView Shade | Thing      | A single motorized shade                                                                                                                             |\n+| Thing           | Thing Type | Description        |\n+|-----------------|------------|--------------------|\n+| PowerView Hub   | Bridge     | The PowerView hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n+| PowerView Shade | Thing      | A motorized shade. |\n \n ## Discovery\n \n-The PowerView Hub is discovered via a NetBIOS query.\n-This is the same method used by the dedicated PowerView app.\n-After the Hub is added, Shades and Scenes will be discovered by querying the Hub.\n+Make sure your shades are visible in the PowerView app before attempting discovery.\n+\n+The binding can automatically discover the PowerView hub.\n+The discovery process can be started by pressing the refresh button in the PaperUI Inbox.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDY3MA==", "bodyText": "Can this be done periodically by the binding? Beside the usability aspect, this seems more like a ThingAction  rather a Channel. Alternatively, the user could disable and re-enable the Thing, which would trigger a REFRESH command.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460564670", "createdAt": "2020-07-26T19:33:07Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/README.md", "diffHunk": "@@ -1,69 +1,196 @@\n-# Hunter Douglas PowerView Binding\n+# Hunter Douglas (Luxaflex) PowerView Binding\n \n-This is an openHAB binding for the [Hunter Douglas PowerView Motorized Shades](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) via the PowerView Hub.\n+This is an openHAB binding for [Hunter Douglas PowerView](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) motorized shades via their PowerView hub.\n+In some countries the PowerView system is sold under the brand name [Luxaflex](https://www.luxaflex.com/)\n \n-PowerView shades have motorization control for their vertical position, as well as vane controls on the shade's slats.\n-Make sure your Shades are visible in the dedicated PowerView app before attempting discovery.\n-This binding also supports Scenes that are defined via the PowerView app.\n-This helps to work around a limitation of the Hub - commands are executed serially with a several second delay between executions.\n-By using a Scene to control multiple shades at once, the shades will all begin moving at the same time.\n+![PowerView](doc/hdpowerview.png)\n+\n+PowerView shades have motorization control for their vertical position, and some also have vane controls to change the angle of their slats.\n+\n+This binding also supports scenes that are defined in the PowerView app.\n+This helps to work around a limitation of the hub; commands are executed serially with a several second delay between executions.\n+By using a scene to control multiple shades at once, the shades will all begin moving at the same time.\n \n ## Supported Things\n \n-| Thing           | Thing Type | Description                                                                                                                                          |\n-|-----------------|------------|------------------------------------------------------------------------------------------------------------------------------------------------------|\n-| PowerView Hub   | Bridge     | The PowerView Hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n-| PowerView Shade | Thing      | A single motorized shade                                                                                                                             |\n+| Thing           | Thing Type | Description        |\n+|-----------------|------------|--------------------|\n+| PowerView Hub   | Bridge     | The PowerView hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n+| PowerView Shade | Thing      | A motorized shade. |\n \n ## Discovery\n \n-The PowerView Hub is discovered via a NetBIOS query.\n-This is the same method used by the dedicated PowerView app.\n-After the Hub is added, Shades and Scenes will be discovered by querying the Hub.\n+Make sure your shades are visible in the PowerView app before attempting discovery.\n+\n+The binding can automatically discover the PowerView hub.\n+The discovery process can be started by pressing the refresh button in the PaperUI Inbox.\n+However you can also manually create a (bridge) thing for the hub, and enter the required configuration parameters (see Thing Configuration below).\n+If the configuration parameters are all valid, the binding will then automatically attempt to connect to the hub.\n+If the connection succeeds, the hub will indicate its status as Online, otherwise it will show an error status. \n+\n+Once the hub thing has been created and successfully connected, the binding will automatically discover all shades and scenes that are in it.\n+\n+- For each shade discovered: the binding will create a new dedicated thing with its own channels.\n+- For each scene discovered: the binding will create a new channel dynamically within the hub thing.\n+\n+If in the future, you add additional shades or scenes to your system, the binding will discover them too.\n \n ## Thing Configuration\n \n-PowerView things should be configured via discovery - it would be difficult to configure manually as the IDs of the shades and scenes are not exposed via the dedicated app.\n+### Thing Configuration for PowerView Hub\n+\n+| Configuration Parameter | Description   |\n+|-------------------------|---------------|\n+| host                    | The host name or IP address of the hub on your network. |\n+| refresh                 | The number of milli-seconds between fetches of the PowerView hub's shade state (default 60'000 one minute). |\n+\n+### Thing Configuration for PowerView Shades\n+\n+PowerView shades should preferably be configured via the automatic discovery process.\n+It is quite difficult to configure manually as the `id` of the shade is not exposed in the PowerView app.\n However, the configuration parameters are described below:\n \n-<table>\n- <tr>\n-  <td><b>Thing</b></td>\n-  <td><b>Configuration Parameters</b></td>\n- </tr>\n- <tr>\n-  <td>PowerView Hub</td>\n-  <td>\n-   <table>\n-    <tr><td><b>host</b> - the hostname or IP address of the Hub on your network.</td></tr>\n-    <tr><td><b>refresh</b> - the number of milliseconds between fetches of the PowerView Hub's shade state. Defaults to 60,000 (one minute).</td></tr>\n-   </table>\n-  </td>\n- </tr>\n- <tr>\n-  <td>PowerView Shade</td>\n-  <td>\n-   <table>\n-    <tr><td><b>id</b> - the ID of the PowerView Shade on the Hub.</td></tr>\n-   </table>\n-  </td>\n- </tr>\n-</table>\n+| Configuration Parameter | Description                                                   |\n+|-------------------------|---------------------------------------------------------------|\n+| id                      | The ID of the PowerView shade in the app. Must be an integer. |\n \n ## Channels\n \n-### PowerView Shade\n+### Channels for PowerView Hub\n+\n+The hub always has one fixed channel as below:\n+\n+| Channel  | Item Type | Description |\n+|----------|-----------| ------------|\n+| refresh  | Switch    | If you switch on this channel, it will make the hub scan all shades and update its cache state -- _see \"**Refreshing the PowerView Hub Cache**\" below_. Note: include `{autoupdate=\"false\"}` in the item configuration to avoid having to reset it to off after use. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDkyOA==", "bodyText": "Since it is stateless, this would be an Action, too.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460564928", "createdAt": "2020-07-26T19:35:52Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/README.md", "diffHunk": "@@ -1,69 +1,196 @@\n-# Hunter Douglas PowerView Binding\n+# Hunter Douglas (Luxaflex) PowerView Binding\n \n-This is an openHAB binding for the [Hunter Douglas PowerView Motorized Shades](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) via the PowerView Hub.\n+This is an openHAB binding for [Hunter Douglas PowerView](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) motorized shades via their PowerView hub.\n+In some countries the PowerView system is sold under the brand name [Luxaflex](https://www.luxaflex.com/)\n \n-PowerView shades have motorization control for their vertical position, as well as vane controls on the shade's slats.\n-Make sure your Shades are visible in the dedicated PowerView app before attempting discovery.\n-This binding also supports Scenes that are defined via the PowerView app.\n-This helps to work around a limitation of the Hub - commands are executed serially with a several second delay between executions.\n-By using a Scene to control multiple shades at once, the shades will all begin moving at the same time.\n+![PowerView](doc/hdpowerview.png)\n+\n+PowerView shades have motorization control for their vertical position, and some also have vane controls to change the angle of their slats.\n+\n+This binding also supports scenes that are defined in the PowerView app.\n+This helps to work around a limitation of the hub; commands are executed serially with a several second delay between executions.\n+By using a scene to control multiple shades at once, the shades will all begin moving at the same time.\n \n ## Supported Things\n \n-| Thing           | Thing Type | Description                                                                                                                                          |\n-|-----------------|------------|------------------------------------------------------------------------------------------------------------------------------------------------------|\n-| PowerView Hub   | Bridge     | The PowerView Hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n-| PowerView Shade | Thing      | A single motorized shade                                                                                                                             |\n+| Thing           | Thing Type | Description        |\n+|-----------------|------------|--------------------|\n+| PowerView Hub   | Bridge     | The PowerView hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n+| PowerView Shade | Thing      | A motorized shade. |\n \n ## Discovery\n \n-The PowerView Hub is discovered via a NetBIOS query.\n-This is the same method used by the dedicated PowerView app.\n-After the Hub is added, Shades and Scenes will be discovered by querying the Hub.\n+Make sure your shades are visible in the PowerView app before attempting discovery.\n+\n+The binding can automatically discover the PowerView hub.\n+The discovery process can be started by pressing the refresh button in the PaperUI Inbox.\n+However you can also manually create a (bridge) thing for the hub, and enter the required configuration parameters (see Thing Configuration below).\n+If the configuration parameters are all valid, the binding will then automatically attempt to connect to the hub.\n+If the connection succeeds, the hub will indicate its status as Online, otherwise it will show an error status. \n+\n+Once the hub thing has been created and successfully connected, the binding will automatically discover all shades and scenes that are in it.\n+\n+- For each shade discovered: the binding will create a new dedicated thing with its own channels.\n+- For each scene discovered: the binding will create a new channel dynamically within the hub thing.\n+\n+If in the future, you add additional shades or scenes to your system, the binding will discover them too.\n \n ## Thing Configuration\n \n-PowerView things should be configured via discovery - it would be difficult to configure manually as the IDs of the shades and scenes are not exposed via the dedicated app.\n+### Thing Configuration for PowerView Hub\n+\n+| Configuration Parameter | Description   |\n+|-------------------------|---------------|\n+| host                    | The host name or IP address of the hub on your network. |\n+| refresh                 | The number of milli-seconds between fetches of the PowerView hub's shade state (default 60'000 one minute). |\n+\n+### Thing Configuration for PowerView Shades\n+\n+PowerView shades should preferably be configured via the automatic discovery process.\n+It is quite difficult to configure manually as the `id` of the shade is not exposed in the PowerView app.\n However, the configuration parameters are described below:\n \n-<table>\n- <tr>\n-  <td><b>Thing</b></td>\n-  <td><b>Configuration Parameters</b></td>\n- </tr>\n- <tr>\n-  <td>PowerView Hub</td>\n-  <td>\n-   <table>\n-    <tr><td><b>host</b> - the hostname or IP address of the Hub on your network.</td></tr>\n-    <tr><td><b>refresh</b> - the number of milliseconds between fetches of the PowerView Hub's shade state. Defaults to 60,000 (one minute).</td></tr>\n-   </table>\n-  </td>\n- </tr>\n- <tr>\n-  <td>PowerView Shade</td>\n-  <td>\n-   <table>\n-    <tr><td><b>id</b> - the ID of the PowerView Shade on the Hub.</td></tr>\n-   </table>\n-  </td>\n- </tr>\n-</table>\n+| Configuration Parameter | Description                                                   |\n+|-------------------------|---------------------------------------------------------------|\n+| id                      | The ID of the PowerView shade in the app. Must be an integer. |\n \n ## Channels\n \n-### PowerView Shade\n+### Channels for PowerView Hub\n+\n+The hub always has one fixed channel as below:\n+\n+| Channel  | Item Type | Description |\n+|----------|-----------| ------------|\n+| refresh  | Switch    | If you switch on this channel, it will make the hub scan all shades and update its cache state -- _see \"**Refreshing the PowerView Hub Cache**\" below_. Note: include `{autoupdate=\"false\"}` in the item configuration to avoid having to reset it to off after use. |\n+\n+In addition, scene channels will be added dynamically to the binding as they are discovered in the hub.\n+Each scene channel will have an entry in the hub as shown below, whereby different scenes have different `id` values:\n+\n+| Channel  | Item Type | Description |\n+|----------|-----------| ------------|\n+| id | Switch | Turning this to ON will activate the scene. Scenes are stateless in the PowerView hub; they have no on/off state. Note: include `{autoupdate=\"false\"}` in the item configuration to avoid having to reset it to off after use. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTYwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            However  shades can also be moved manually without the hub\u2019s knowledge.\n          \n          \n            \n            However shades can also be moved manually without the hub\u2019s knowledge.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460565603", "createdAt": "2020-07-26T19:43:10Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/README.md", "diffHunk": "@@ -1,69 +1,196 @@\n-# Hunter Douglas PowerView Binding\n+# Hunter Douglas (Luxaflex) PowerView Binding\n \n-This is an openHAB binding for the [Hunter Douglas PowerView Motorized Shades](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) via the PowerView Hub.\n+This is an openHAB binding for [Hunter Douglas PowerView](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) motorized shades via their PowerView hub.\n+In some countries the PowerView system is sold under the brand name [Luxaflex](https://www.luxaflex.com/)\n \n-PowerView shades have motorization control for their vertical position, as well as vane controls on the shade's slats.\n-Make sure your Shades are visible in the dedicated PowerView app before attempting discovery.\n-This binding also supports Scenes that are defined via the PowerView app.\n-This helps to work around a limitation of the Hub - commands are executed serially with a several second delay between executions.\n-By using a Scene to control multiple shades at once, the shades will all begin moving at the same time.\n+![PowerView](doc/hdpowerview.png)\n+\n+PowerView shades have motorization control for their vertical position, and some also have vane controls to change the angle of their slats.\n+\n+This binding also supports scenes that are defined in the PowerView app.\n+This helps to work around a limitation of the hub; commands are executed serially with a several second delay between executions.\n+By using a scene to control multiple shades at once, the shades will all begin moving at the same time.\n \n ## Supported Things\n \n-| Thing           | Thing Type | Description                                                                                                                                          |\n-|-----------------|------------|------------------------------------------------------------------------------------------------------------------------------------------------------|\n-| PowerView Hub   | Bridge     | The PowerView Hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n-| PowerView Shade | Thing      | A single motorized shade                                                                                                                             |\n+| Thing           | Thing Type | Description        |\n+|-----------------|------------|--------------------|\n+| PowerView Hub   | Bridge     | The PowerView hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n+| PowerView Shade | Thing      | A motorized shade. |\n \n ## Discovery\n \n-The PowerView Hub is discovered via a NetBIOS query.\n-This is the same method used by the dedicated PowerView app.\n-After the Hub is added, Shades and Scenes will be discovered by querying the Hub.\n+Make sure your shades are visible in the PowerView app before attempting discovery.\n+\n+The binding can automatically discover the PowerView hub.\n+The discovery process can be started by pressing the refresh button in the PaperUI Inbox.\n+However you can also manually create a (bridge) thing for the hub, and enter the required configuration parameters (see Thing Configuration below).\n+If the configuration parameters are all valid, the binding will then automatically attempt to connect to the hub.\n+If the connection succeeds, the hub will indicate its status as Online, otherwise it will show an error status. \n+\n+Once the hub thing has been created and successfully connected, the binding will automatically discover all shades and scenes that are in it.\n+\n+- For each shade discovered: the binding will create a new dedicated thing with its own channels.\n+- For each scene discovered: the binding will create a new channel dynamically within the hub thing.\n+\n+If in the future, you add additional shades or scenes to your system, the binding will discover them too.\n \n ## Thing Configuration\n \n-PowerView things should be configured via discovery - it would be difficult to configure manually as the IDs of the shades and scenes are not exposed via the dedicated app.\n+### Thing Configuration for PowerView Hub\n+\n+| Configuration Parameter | Description   |\n+|-------------------------|---------------|\n+| host                    | The host name or IP address of the hub on your network. |\n+| refresh                 | The number of milli-seconds between fetches of the PowerView hub's shade state (default 60'000 one minute). |\n+\n+### Thing Configuration for PowerView Shades\n+\n+PowerView shades should preferably be configured via the automatic discovery process.\n+It is quite difficult to configure manually as the `id` of the shade is not exposed in the PowerView app.\n However, the configuration parameters are described below:\n \n-<table>\n- <tr>\n-  <td><b>Thing</b></td>\n-  <td><b>Configuration Parameters</b></td>\n- </tr>\n- <tr>\n-  <td>PowerView Hub</td>\n-  <td>\n-   <table>\n-    <tr><td><b>host</b> - the hostname or IP address of the Hub on your network.</td></tr>\n-    <tr><td><b>refresh</b> - the number of milliseconds between fetches of the PowerView Hub's shade state. Defaults to 60,000 (one minute).</td></tr>\n-   </table>\n-  </td>\n- </tr>\n- <tr>\n-  <td>PowerView Shade</td>\n-  <td>\n-   <table>\n-    <tr><td><b>id</b> - the ID of the PowerView Shade on the Hub.</td></tr>\n-   </table>\n-  </td>\n- </tr>\n-</table>\n+| Configuration Parameter | Description                                                   |\n+|-------------------------|---------------------------------------------------------------|\n+| id                      | The ID of the PowerView shade in the app. Must be an integer. |\n \n ## Channels\n \n-### PowerView Shade\n+### Channels for PowerView Hub\n+\n+The hub always has one fixed channel as below:\n+\n+| Channel  | Item Type | Description |\n+|----------|-----------| ------------|\n+| refresh  | Switch    | If you switch on this channel, it will make the hub scan all shades and update its cache state -- _see \"**Refreshing the PowerView Hub Cache**\" below_. Note: include `{autoupdate=\"false\"}` in the item configuration to avoid having to reset it to off after use. |\n+\n+In addition, scene channels will be added dynamically to the binding as they are discovered in the hub.\n+Each scene channel will have an entry in the hub as shown below, whereby different scenes have different `id` values:\n+\n+| Channel  | Item Type | Description |\n+|----------|-----------| ------------|\n+| id | Switch | Turning this to ON will activate the scene. Scenes are stateless in the PowerView hub; they have no on/off state. Note: include `{autoupdate=\"false\"}` in the item configuration to avoid having to reset it to off after use. |\n+\n+### Channels for PowerView Shade\n+\n+A shade always implements a roller shutter channel `position` which controls the vertical position of the shade's (primary) rail.\n+If the shade has slats or rotatable vanes, there is also a dimmer channel `vane` which controls the slat / vane position.\n+If it is a dual action (top-down plus bottom-up) shade, there is also a roller shutter channel `secondary` which controls the vertical position of the secondary rail.\n+All of these channels appear in the binding, but only those which have a physical implementation in the shade, will have any physical effect.\n+\n+| Channel    | Item Type     | Description |\n+|------------|---------------|------------|\n+| position   | Rollershutter | The vertical position of the shade's rail -- _(see chapter \"**Roller Shutter Up/Down Position vs. Open/Close State**\" below)._ Up/Down commands will move the rail completely up or completely down. Percentage commands will move the rail to an intermediate position. Stop commands will halt any current movement of the rail. |\n+| secondary  | Rollershutter | The vertical position of the secondary rail (if any). Its function is basically identical to the `position` channel above -- _(but see chapter \"**Roller Shutter Up/Down Position vs. Open/Close State**\" below)._ |\n+| vane       | Dimmer        | The degree of opening of the slats or vanes. Setting this to a non-zero value will first move the shade `position` fully down, since the slats or vanes can only have a defined state if the shade is in its down position -- _(see chapter \"**Inter-dependency between Position and Vane Channels**\" below)._ |\n+| batteryLow | Switch        | Indicates ON when the battery level of the shade is low, as determined by the hub's internal rules. |\n+\n+### Roller Shutter Up/Down Position vs. Open/Close State\n+\n+The `position` and `secondary` channels are Rollershutter types.\n+For vertical shades, the binding maps the vertical position of the \"rail\" to the Rollershutter \u25b2 / \u25bc commands, and its respective percent value.\n+And for horizontal shades, it maps the horizontal position of the \"truck\" to the Rollershutter \u25b2 / \u25bc commands, and its respective percent value.\n+\n+Depending on whether the shade is a top-down, bottom-up, left-right, right-left, or dual action shade, the `OPEN` and `CLOSED` position of the shades may differ from the \u25b2 / \u25bc commands follows..\n+\n+| Type of Shade            | Channel           | Rollershutter Command | Motion direction | Shade State    | Percent |\n+|--------------------------|-------------------|-----------------------|------------------|----------------|---------|\n+| Single action bottom-up  | `position`        | \u25b2                     | Up               | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | Down             | `CLOSED`       | 100%    |\n+| Single action top-down   | `position`        | \u25b2                     | Up               | ***`CLOSED`*** | 0%      |\n+|                          |                   | \u25bc                     | Down             | ***`OPEN`***   | 100%    |\n+| Single action right-left | `position`        | \u25b2                     | ***Left***       | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | ***Right***      | `CLOSED`       | 100%    |\n+| Single action left-right | `position`        | \u25b2                     | ***Right***      | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | ***Left***       | `CLOSED`       | 100%    |\n+| Dual action (lower rail) | `position`        | \u25b2                     | Up               | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | Down             | `CLOSED`       | 100%    |\n+| Dual action (upper rail) | ***`secondary`*** | \u25b2                     | ***Down***       | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | ***Up***         | `CLOSED`       | 100%    |\n+\n+### Interdependency between Channel positions\n+\n+On some types of shades with movable vanes, the vanes cannot be moved unless the shade is down.\n+So there is an interdependency between the value of `vane` and the value of `position` as follows..\n+\n+| Case                       | State of `position` | State of `vane` |\n+|----------------------------|---------------------|-----------------|\n+| Shade up                   | 0% = `UP`           | `UNDEFINED`     |\n+| Shade 50% down             | 50%                 | `UNDEFINED`     |\n+| Shade 100% down, Vane 0%   | 100% = `DOWN`       | 0%              |\n+| Shade 100% down, Vane 50%  | 100% = `DOWN`       | 50%             |\n+| Shade 100% down, Vane 100% | 100% = `DOWN`       | 100%            |\n+\n+On dual action shades, the top rail cannot move below the position of the bottom rail.\n+So the value of `secondary` may be constrained by the value of `position`.\n+\n+## Refreshing the PowerView Hub Cache\n+\n+The hub maintains a cache of the last known state of its shades, and this binding delivers those values.\n+Usually the shades will be moved by this binding, so since the hub is always involved in the moving process, it updates this cache accordingly.\n+\n+However  shades can also be moved manually without the hub\u2019s knowledge.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NTk5Nw==", "bodyText": "To be concise in the documentation, I would only use this one and remove the import version.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460565997", "createdAt": "2020-07-26T19:47:26Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/README.md", "diffHunk": "@@ -1,69 +1,196 @@\n-# Hunter Douglas PowerView Binding\n+# Hunter Douglas (Luxaflex) PowerView Binding\n \n-This is an openHAB binding for the [Hunter Douglas PowerView Motorized Shades](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) via the PowerView Hub.\n+This is an openHAB binding for [Hunter Douglas PowerView](https://www.hunterdouglas.com/operating-systems/motorized/powerview-motorization/overview) motorized shades via their PowerView hub.\n+In some countries the PowerView system is sold under the brand name [Luxaflex](https://www.luxaflex.com/)\n \n-PowerView shades have motorization control for their vertical position, as well as vane controls on the shade's slats.\n-Make sure your Shades are visible in the dedicated PowerView app before attempting discovery.\n-This binding also supports Scenes that are defined via the PowerView app.\n-This helps to work around a limitation of the Hub - commands are executed serially with a several second delay between executions.\n-By using a Scene to control multiple shades at once, the shades will all begin moving at the same time.\n+![PowerView](doc/hdpowerview.png)\n+\n+PowerView shades have motorization control for their vertical position, and some also have vane controls to change the angle of their slats.\n+\n+This binding also supports scenes that are defined in the PowerView app.\n+This helps to work around a limitation of the hub; commands are executed serially with a several second delay between executions.\n+By using a scene to control multiple shades at once, the shades will all begin moving at the same time.\n \n ## Supported Things\n \n-| Thing           | Thing Type | Description                                                                                                                                          |\n-|-----------------|------------|------------------------------------------------------------------------------------------------------------------------------------------------------|\n-| PowerView Hub   | Bridge     | The PowerView Hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n-| PowerView Shade | Thing      | A single motorized shade                                                                                                                             |\n+| Thing           | Thing Type | Description        |\n+|-----------------|------------|--------------------|\n+| PowerView Hub   | Bridge     | The PowerView hub provides the interface between your network and the shade's radio network. It also contains channels used to interact with scenes. |\n+| PowerView Shade | Thing      | A motorized shade. |\n \n ## Discovery\n \n-The PowerView Hub is discovered via a NetBIOS query.\n-This is the same method used by the dedicated PowerView app.\n-After the Hub is added, Shades and Scenes will be discovered by querying the Hub.\n+Make sure your shades are visible in the PowerView app before attempting discovery.\n+\n+The binding can automatically discover the PowerView hub.\n+The discovery process can be started by pressing the refresh button in the PaperUI Inbox.\n+However you can also manually create a (bridge) thing for the hub, and enter the required configuration parameters (see Thing Configuration below).\n+If the configuration parameters are all valid, the binding will then automatically attempt to connect to the hub.\n+If the connection succeeds, the hub will indicate its status as Online, otherwise it will show an error status. \n+\n+Once the hub thing has been created and successfully connected, the binding will automatically discover all shades and scenes that are in it.\n+\n+- For each shade discovered: the binding will create a new dedicated thing with its own channels.\n+- For each scene discovered: the binding will create a new channel dynamically within the hub thing.\n+\n+If in the future, you add additional shades or scenes to your system, the binding will discover them too.\n \n ## Thing Configuration\n \n-PowerView things should be configured via discovery - it would be difficult to configure manually as the IDs of the shades and scenes are not exposed via the dedicated app.\n+### Thing Configuration for PowerView Hub\n+\n+| Configuration Parameter | Description   |\n+|-------------------------|---------------|\n+| host                    | The host name or IP address of the hub on your network. |\n+| refresh                 | The number of milli-seconds between fetches of the PowerView hub's shade state (default 60'000 one minute). |\n+\n+### Thing Configuration for PowerView Shades\n+\n+PowerView shades should preferably be configured via the automatic discovery process.\n+It is quite difficult to configure manually as the `id` of the shade is not exposed in the PowerView app.\n However, the configuration parameters are described below:\n \n-<table>\n- <tr>\n-  <td><b>Thing</b></td>\n-  <td><b>Configuration Parameters</b></td>\n- </tr>\n- <tr>\n-  <td>PowerView Hub</td>\n-  <td>\n-   <table>\n-    <tr><td><b>host</b> - the hostname or IP address of the Hub on your network.</td></tr>\n-    <tr><td><b>refresh</b> - the number of milliseconds between fetches of the PowerView Hub's shade state. Defaults to 60,000 (one minute).</td></tr>\n-   </table>\n-  </td>\n- </tr>\n- <tr>\n-  <td>PowerView Shade</td>\n-  <td>\n-   <table>\n-    <tr><td><b>id</b> - the ID of the PowerView Shade on the Hub.</td></tr>\n-   </table>\n-  </td>\n- </tr>\n-</table>\n+| Configuration Parameter | Description                                                   |\n+|-------------------------|---------------------------------------------------------------|\n+| id                      | The ID of the PowerView shade in the app. Must be an integer. |\n \n ## Channels\n \n-### PowerView Shade\n+### Channels for PowerView Hub\n+\n+The hub always has one fixed channel as below:\n+\n+| Channel  | Item Type | Description |\n+|----------|-----------| ------------|\n+| refresh  | Switch    | If you switch on this channel, it will make the hub scan all shades and update its cache state -- _see \"**Refreshing the PowerView Hub Cache**\" below_. Note: include `{autoupdate=\"false\"}` in the item configuration to avoid having to reset it to off after use. |\n+\n+In addition, scene channels will be added dynamically to the binding as they are discovered in the hub.\n+Each scene channel will have an entry in the hub as shown below, whereby different scenes have different `id` values:\n+\n+| Channel  | Item Type | Description |\n+|----------|-----------| ------------|\n+| id | Switch | Turning this to ON will activate the scene. Scenes are stateless in the PowerView hub; they have no on/off state. Note: include `{autoupdate=\"false\"}` in the item configuration to avoid having to reset it to off after use. |\n+\n+### Channels for PowerView Shade\n+\n+A shade always implements a roller shutter channel `position` which controls the vertical position of the shade's (primary) rail.\n+If the shade has slats or rotatable vanes, there is also a dimmer channel `vane` which controls the slat / vane position.\n+If it is a dual action (top-down plus bottom-up) shade, there is also a roller shutter channel `secondary` which controls the vertical position of the secondary rail.\n+All of these channels appear in the binding, but only those which have a physical implementation in the shade, will have any physical effect.\n+\n+| Channel    | Item Type     | Description |\n+|------------|---------------|------------|\n+| position   | Rollershutter | The vertical position of the shade's rail -- _(see chapter \"**Roller Shutter Up/Down Position vs. Open/Close State**\" below)._ Up/Down commands will move the rail completely up or completely down. Percentage commands will move the rail to an intermediate position. Stop commands will halt any current movement of the rail. |\n+| secondary  | Rollershutter | The vertical position of the secondary rail (if any). Its function is basically identical to the `position` channel above -- _(but see chapter \"**Roller Shutter Up/Down Position vs. Open/Close State**\" below)._ |\n+| vane       | Dimmer        | The degree of opening of the slats or vanes. Setting this to a non-zero value will first move the shade `position` fully down, since the slats or vanes can only have a defined state if the shade is in its down position -- _(see chapter \"**Inter-dependency between Position and Vane Channels**\" below)._ |\n+| batteryLow | Switch        | Indicates ON when the battery level of the shade is low, as determined by the hub's internal rules. |\n+\n+### Roller Shutter Up/Down Position vs. Open/Close State\n+\n+The `position` and `secondary` channels are Rollershutter types.\n+For vertical shades, the binding maps the vertical position of the \"rail\" to the Rollershutter \u25b2 / \u25bc commands, and its respective percent value.\n+And for horizontal shades, it maps the horizontal position of the \"truck\" to the Rollershutter \u25b2 / \u25bc commands, and its respective percent value.\n+\n+Depending on whether the shade is a top-down, bottom-up, left-right, right-left, or dual action shade, the `OPEN` and `CLOSED` position of the shades may differ from the \u25b2 / \u25bc commands follows..\n+\n+| Type of Shade            | Channel           | Rollershutter Command | Motion direction | Shade State    | Percent |\n+|--------------------------|-------------------|-----------------------|------------------|----------------|---------|\n+| Single action bottom-up  | `position`        | \u25b2                     | Up               | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | Down             | `CLOSED`       | 100%    |\n+| Single action top-down   | `position`        | \u25b2                     | Up               | ***`CLOSED`*** | 0%      |\n+|                          |                   | \u25bc                     | Down             | ***`OPEN`***   | 100%    |\n+| Single action right-left | `position`        | \u25b2                     | ***Left***       | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | ***Right***      | `CLOSED`       | 100%    |\n+| Single action left-right | `position`        | \u25b2                     | ***Right***      | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | ***Left***       | `CLOSED`       | 100%    |\n+| Dual action (lower rail) | `position`        | \u25b2                     | Up               | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | Down             | `CLOSED`       | 100%    |\n+| Dual action (upper rail) | ***`secondary`*** | \u25b2                     | ***Down***       | `OPEN`         | 0%      |\n+|                          |                   | \u25bc                     | ***Up***         | `CLOSED`       | 100%    |\n+\n+### Interdependency between Channel positions\n+\n+On some types of shades with movable vanes, the vanes cannot be moved unless the shade is down.\n+So there is an interdependency between the value of `vane` and the value of `position` as follows..\n+\n+| Case                       | State of `position` | State of `vane` |\n+|----------------------------|---------------------|-----------------|\n+| Shade up                   | 0% = `UP`           | `UNDEFINED`     |\n+| Shade 50% down             | 50%                 | `UNDEFINED`     |\n+| Shade 100% down, Vane 0%   | 100% = `DOWN`       | 0%              |\n+| Shade 100% down, Vane 50%  | 100% = `DOWN`       | 50%             |\n+| Shade 100% down, Vane 100% | 100% = `DOWN`       | 100%            |\n+\n+On dual action shades, the top rail cannot move below the position of the bottom rail.\n+So the value of `secondary` may be constrained by the value of `position`.\n+\n+## Refreshing the PowerView Hub Cache\n+\n+The hub maintains a cache of the last known state of its shades, and this binding delivers those values.\n+Usually the shades will be moved by this binding, so since the hub is always involved in the moving process, it updates this cache accordingly.\n+\n+However  shades can also be moved manually without the hub\u2019s knowledge.\n+A person can manually move a shade by pressing a button on the side of the shade or via a remote control.\n+In neither case will the hub be aware of the shade\u2019s new position.\n+\n+The hub implements the `refresh` Switch type channel _(see above)_ in order to overcome this issue.\n+\n+Note: You can also force the hub to refresh itself by sending a `Refresh` command in a rule to an item that is connected to a channel in the hub as follows:\n+\n+```\n+import org.eclipse.smarthome.core.types.RefreshType\n+\n+rule \"Hub Refresh (every 20 minutes)\"\n+when\n+    Time cron \"0 1/20 0 ? * * *\"\n+then\n+    sendCommand(HUB_ITEM_NAME, RefreshType.REFRESH) // refresh all shades in HUB\n+\n+    sendCommand(SHADE_ITEM_NAME, RefreshType.REFRESH) // refresh single shade that ITEM is bound to\n+end\n+```\n+\n+Alternate syntax (omitting the `org.eclipse.smarthome.core.types.RefreshType` import statement):\n+\n+```\n+sendCommand(ITEM_NAME, \"REFRESH\")\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NjQ2OQ==", "bodyText": "The annotation has no effect and can be removed.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460566469", "createdAt": "2020-07-26T19:52:15Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/HDPowerViewWebTargets.java", "diffHunk": "@@ -33,82 +37,205 @@\n import com.google.gson.JsonParseException;\n \n /**\n- * JAX-RS targets for communicating with the HD Power View Hub\n+ * JAX-RS targets for communicating with an HD PowerView hub\n  *\n  * @author Andy Lintner - Initial contribution\n+ * @author Andrew Fiddian-Green - Added support for secondary rail positions\n  */\n+@NonNullByDefault\n public class HDPowerViewWebTargets {\n \n+    private static final String PUT = \"PUT\";\n+    private static final String GET = \"GET\";\n+    private static final String SCENE_ID = \"sceneId\";\n+    private static final String ID = \"id\";\n+    private static final String REFRESH = \"refresh\";\n+    private static final String CONN_HDR = \"Connection\";\n+    private static final String CONN_VAL = \"close\"; // versus \"keep-alive\"\n+\n+    private final Logger logger = LoggerFactory.getLogger(HDPowerViewWebTargets.class);\n+\n+    /*\n+     * the hub returns a 423 error (resource locked) daily just after midnight;\n+     * which means it is temporarily undergoing maintenance; so we use \"soft\"\n+     * exception handling during the five minute maintenance period after a 423\n+     * error is received\n+     */\n+    private final int maintenancePeriod = 300;\n+    private Instant maintenanceScheduledEnd = Instant.now().minusSeconds(2 * maintenancePeriod);\n+\n     private WebTarget base;\n     private WebTarget shades;\n-    private WebTarget shadeMove;\n+    private WebTarget shade;\n     private WebTarget sceneActivate;\n     private WebTarget scenes;\n-    private final Logger logger = LoggerFactory.getLogger(HDPowerViewWebTargets.class);\n-    private final Gson gson;\n \n+    private final Gson gson = new Gson();\n+    \n+    /**\n+     * Initialize the web targets\n+     * \n+     * @param client    the Javax RS client (the binding)\n+     * @param ipAddress the IP address of the server (the hub)\n+     */\n     public HDPowerViewWebTargets(Client client, String ipAddress) {\n         base = client.target(\"http://\" + ipAddress + \"/api\");\n         shades = base.path(\"shades/\");\n-        shadeMove = base.path(\"shades/{id}\");\n+        shade = base.path(\"shades/{id}\");\n         sceneActivate = base.path(\"scenes\");\n         scenes = base.path(\"scenes/\");\n-        gson = new Gson();\n     }\n \n-    public Shades getShades() throws JsonParseException, IOException {\n-        Response response = invoke(shades.request().buildGet(), shades);\n-        if (response != null) {\n-            String result = response.readEntity(String.class);\n-            return gson.fromJson(result, Shades.class);\n-        } else {\n-            return null;\n-        }\n+    /**\n+     * Fetches a JSON package that describes all shades in the hub, and wraps it in\n+     * a Shades class instance\n+     * \n+     * @return Shades class instance\n+     * @throws JsonParseException      if there is a JSON parsing error\n+     * @throws ProcessingException     if there is any processing error\n+     * @throws HubMaintenanceException if the hub is down for maintenance\n+     */\n+    public @Nullable Shades getShades() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        String json = invoke(shades.request().header(CONN_HDR, CONN_VAL).buildGet(), shades, null);\n+        return gson.fromJson(json, Shades.class);\n     }\n \n-    public Response moveShade(String shadeIdString, ShadePosition position) throws IOException {\n-        int shadeId = Integer.parseInt(shadeIdString);\n-        WebTarget target = shadeMove.resolveTemplate(\"id\", shadeId);\n-\n-        String body = gson.toJson(new ShadeMove(shadeId, position));\n-        return invoke(target.request().buildPut(Entity.entity(body, MediaType.APPLICATION_JSON_TYPE)), shadeMove);\n+    /**\n+     * Instructs the hub to move a specific shade\n+     * \n+     * @param shadeId  id of the shade to be moved\n+     * @param position instance of ShadePosition containing the new position\n+     * @throws ProcessingException     if there is any processing error\n+     * @throws HubMaintenanceException if the hub is down for maintenance\n+     */\n+    public void moveShade(int shadeId, ShadePosition position) throws ProcessingException, HubMaintenanceException {\n+        WebTarget target = shade.resolveTemplate(ID, shadeId);\n+        String json = gson.toJson(new ShadeMove(shadeId, position));\n+        invoke(target.request().header(CONN_HDR, CONN_VAL)\n+                .buildPut(Entity.entity(json, MediaType.APPLICATION_JSON_TYPE)), target, json);\n+        return;\n     }\n \n-    public Scenes getScenes() throws JsonParseException, IOException {\n-        Response response = invoke(scenes.request().buildGet(), scenes);\n-        if (response != null) {\n-            String result = response.readEntity(String.class);\n-            return gson.fromJson(result, Scenes.class);\n-        } else {\n-            return null;\n-        }\n+    /**\n+     * Fetches a JSON package that describes all scenes in the hub, and wraps it in\n+     * a Scenes class instance\n+     * \n+     * @return Scenes class instance\n+     * @throws JsonParseException      if there is a JSON parsing error\n+     * @throws ProcessingException     if there is any processing error\n+     * @throws HubMaintenanceException if the hub is down for maintenance\n+     */\n+    public @Nullable Scenes getScenes() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        String json = invoke(scenes.request().header(CONN_HDR, CONN_VAL).buildGet(), scenes, null);\n+        return gson.fromJson(json, Scenes.class);\n     }\n \n-    public void activateScene(int sceneId) {\n-        WebTarget target = sceneActivate.queryParam(\"sceneId\", sceneId);\n-        invoke(target.request().buildGet(), sceneActivate);\n+    /**\n+     * Instructs the hub to execute a specific scene\n+     * \n+     * @param sceneId id of the scene to be executed\n+     * @throws ProcessingException     if there is any processing error\n+     * @throws HubMaintenanceException if the hub is down for maintenance\n+     */\n+    public void activateScene(int sceneId) throws ProcessingException, HubMaintenanceException {\n+        WebTarget target = sceneActivate.queryParam(SCENE_ID, sceneId);\n+        invoke(target.request().header(CONN_HDR, CONN_VAL).buildGet(), target, null);\n     }\n \n-    private Response invoke(Invocation invocation, WebTarget target) throws ProcessingException {\n+    private synchronized String invoke(Invocation invocation, WebTarget target, @Nullable String jsonCommand)\n+            throws ProcessingException, HubMaintenanceException {\n+        if (logger.isTraceEnabled()) {\n+            logger.trace(\"API command {} {}\", jsonCommand == null ? GET : PUT, target.getUri());\n+            if (jsonCommand != null) {\n+                logger.trace(\"JSON command = {}\", jsonCommand);\n+            }\n+        }\n         Response response;\n-        synchronized (this) {\n+        try {\n             response = invocation.invoke();\n+        } catch (ProcessingException e) {\n+            if (Instant.now().isBefore(maintenanceScheduledEnd)) {\n+                // throw \"softer\" exception during maintenance window\n+                logger.debug(\"Hub still undergoing maintenance\");\n+                throw new HubMaintenanceException(\"Hub still undergoing maintenance\");\n+            }\n+            throw e;\n         }\n-\n-        if (response.getStatus() == 423) {\n-            // the hub seems to return a 423 error (resource locked) once per day around midnight\n-            // this is probably some kind of regular re-initialization process, so suppress the error log\n-            logger.debug(\"Bridge returned '423' while invoking {}\", target.getUri());\n-            return null;\n-        } else if (response.getStatus() != 200) {\n-            logger.warn(\"Bridge returned '{}' while invoking {} : {}\", response.getStatus(), target.getUri(),\n-                    response.readEntity(String.class));\n-            return null;\n-        } else if (!response.hasEntity()) {\n-            logger.warn(\"Bridge returned null response while invoking {}\", target.getUri());\n-            return null;\n+        int statusCode = response.getStatus();\n+        if (statusCode == 423) {\n+            // set end of maintenance window, and throw a \"softer\" exception\n+            maintenanceScheduledEnd = Instant.now().plusSeconds(maintenancePeriod);\n+            logger.debug(\"Hub undergoing maintenance\");\n+            if (response.hasEntity()) {\n+                response.readEntity(String.class);\n+            }\n+            response.close();\n+            throw new HubMaintenanceException(\"Hub undergoing maintenance\");\n+        }\n+        if (statusCode != 200) {\n+            logger.warn(\"Hub returned HTTP error '{}'\", statusCode);\n+            if (response.hasEntity()) {\n+                response.readEntity(String.class);\n+            }\n+            response.close();\n+            throw new ProcessingException(String.format(\"HTTP %d error\", statusCode));\n+        }\n+        if (!response.hasEntity()) {\n+            logger.warn(\"Hub returned no content\");\n+            response.close();\n+            throw new ProcessingException(\"Missing response entity\");\n         }\n+        @SuppressWarnings(\"null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzQ4Nw==", "bodyText": "These have no effect an can be removed.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460567487", "createdAt": "2020-07-26T20:03:43Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewHubHandler.java", "diffHunk": "@@ -138,89 +162,147 @@ private synchronized void poll() {\n             pollScenes();\n         } catch (JsonParseException e) {\n             logger.warn(\"Bridge returned a bad JSON response: {}\", e.getMessage());\n-        } catch (ProcessingException | IOException e) {\n+        } catch (ProcessingException e) {\n             logger.warn(\"Error connecting to bridge: {}\", e.getMessage());\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.BRIDGE_OFFLINE, e.getMessage());\n+        } catch (HubMaintenanceException e) {\n+            // exceptions are logged in HDPowerViewWebTargets\n         }\n     }\n \n-    private void pollShades() throws JsonParseException, ProcessingException, IOException {\n+    private void pollShades() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        HDPowerViewWebTargets webTargets = this.webTargets;\n+        if (webTargets == null) {\n+            throw new ProcessingException(\"Web targets not initialized\");\n+        }\n+\n         Shades shades = webTargets.getShades();\n+        if (shades == null) {\n+            throw new JsonParseException(\"Missing 'shades' element\");\n+        }\n+\n+        List<ShadeData> shadesData = shades.shadeData;\n+        if (shadesData == null) {\n+            throw new JsonParseException(\"Missing 'shades.shadeData' element\");\n+        }\n+\n         updateStatus(ThingStatus.ONLINE);\n-        if (shades != null) {\n-            Map<String, Thing> things = getThingsByShadeId();\n-            logger.debug(\"Found {} shades\", things.size());\n-            for (Shade shade : shades.shadeData) {\n-                Thing thing = things.get(shade.id);\n-                if (thing != null) {\n-                    HDPowerViewShadeHandler handler = ((HDPowerViewShadeHandler) thing.getHandler());\n-                    if (handler != null) {\n-                        logger.debug(\"Handling update for shade {}\", shade.id);\n-                        handler.onReceiveUpdate(shade);\n-                    } else {\n-                        logger.debug(\"Skipping shade with no handler {}\", shade.id);\n-                    }\n-                } else {\n-                    logger.debug(\"Skipping non-bound shade {}\", shade.id);\n-                }\n-            }\n+        logger.debug(\"Received data for {} shades\", shadesData.size());\n+\n+        Map<String, ShadeData> idShadeDataMap = getIdShadeDataMap(shadesData);\n+        Map<Thing, String> thingIdMap = getThingIdMap();\n+        for (Entry<Thing, String> item : thingIdMap.entrySet()) {\n+            @SuppressWarnings(\"null\")\n+            Thing thing = item.getKey();\n+            @SuppressWarnings(\"null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 213}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzU1Mw==", "bodyText": "This is not needed, as the compiler is intelligent enough with local variables.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460567553", "createdAt": "2020-07-26T20:04:22Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewHubHandler.java", "diffHunk": "@@ -138,89 +162,147 @@ private synchronized void poll() {\n             pollScenes();\n         } catch (JsonParseException e) {\n             logger.warn(\"Bridge returned a bad JSON response: {}\", e.getMessage());\n-        } catch (ProcessingException | IOException e) {\n+        } catch (ProcessingException e) {\n             logger.warn(\"Error connecting to bridge: {}\", e.getMessage());\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.BRIDGE_OFFLINE, e.getMessage());\n+        } catch (HubMaintenanceException e) {\n+            // exceptions are logged in HDPowerViewWebTargets\n         }\n     }\n \n-    private void pollShades() throws JsonParseException, ProcessingException, IOException {\n+    private void pollShades() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        HDPowerViewWebTargets webTargets = this.webTargets;\n+        if (webTargets == null) {\n+            throw new ProcessingException(\"Web targets not initialized\");\n+        }\n+\n         Shades shades = webTargets.getShades();\n+        if (shades == null) {\n+            throw new JsonParseException(\"Missing 'shades' element\");\n+        }\n+\n+        List<ShadeData> shadesData = shades.shadeData;\n+        if (shadesData == null) {\n+            throw new JsonParseException(\"Missing 'shades.shadeData' element\");\n+        }\n+\n         updateStatus(ThingStatus.ONLINE);\n-        if (shades != null) {\n-            Map<String, Thing> things = getThingsByShadeId();\n-            logger.debug(\"Found {} shades\", things.size());\n-            for (Shade shade : shades.shadeData) {\n-                Thing thing = things.get(shade.id);\n-                if (thing != null) {\n-                    HDPowerViewShadeHandler handler = ((HDPowerViewShadeHandler) thing.getHandler());\n-                    if (handler != null) {\n-                        logger.debug(\"Handling update for shade {}\", shade.id);\n-                        handler.onReceiveUpdate(shade);\n-                    } else {\n-                        logger.debug(\"Skipping shade with no handler {}\", shade.id);\n-                    }\n-                } else {\n-                    logger.debug(\"Skipping non-bound shade {}\", shade.id);\n-                }\n-            }\n+        logger.debug(\"Received data for {} shades\", shadesData.size());\n+\n+        Map<String, ShadeData> idShadeDataMap = getIdShadeDataMap(shadesData);\n+        Map<Thing, String> thingIdMap = getThingIdMap();\n+        for (Entry<Thing, String> item : thingIdMap.entrySet()) {\n+            @SuppressWarnings(\"null\")\n+            Thing thing = item.getKey();\n+            @SuppressWarnings(\"null\")\n+            String shadeId = item.getValue();\n+            @Nullable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NzkzNA==", "bodyText": "The suppressions can be removed again.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460567934", "createdAt": "2020-07-26T20:08:02Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewHubHandler.java", "diffHunk": "@@ -138,89 +162,147 @@ private synchronized void poll() {\n             pollScenes();\n         } catch (JsonParseException e) {\n             logger.warn(\"Bridge returned a bad JSON response: {}\", e.getMessage());\n-        } catch (ProcessingException | IOException e) {\n+        } catch (ProcessingException e) {\n             logger.warn(\"Error connecting to bridge: {}\", e.getMessage());\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.BRIDGE_OFFLINE, e.getMessage());\n+        } catch (HubMaintenanceException e) {\n+            // exceptions are logged in HDPowerViewWebTargets\n         }\n     }\n \n-    private void pollShades() throws JsonParseException, ProcessingException, IOException {\n+    private void pollShades() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        HDPowerViewWebTargets webTargets = this.webTargets;\n+        if (webTargets == null) {\n+            throw new ProcessingException(\"Web targets not initialized\");\n+        }\n+\n         Shades shades = webTargets.getShades();\n+        if (shades == null) {\n+            throw new JsonParseException(\"Missing 'shades' element\");\n+        }\n+\n+        List<ShadeData> shadesData = shades.shadeData;\n+        if (shadesData == null) {\n+            throw new JsonParseException(\"Missing 'shades.shadeData' element\");\n+        }\n+\n         updateStatus(ThingStatus.ONLINE);\n-        if (shades != null) {\n-            Map<String, Thing> things = getThingsByShadeId();\n-            logger.debug(\"Found {} shades\", things.size());\n-            for (Shade shade : shades.shadeData) {\n-                Thing thing = things.get(shade.id);\n-                if (thing != null) {\n-                    HDPowerViewShadeHandler handler = ((HDPowerViewShadeHandler) thing.getHandler());\n-                    if (handler != null) {\n-                        logger.debug(\"Handling update for shade {}\", shade.id);\n-                        handler.onReceiveUpdate(shade);\n-                    } else {\n-                        logger.debug(\"Skipping shade with no handler {}\", shade.id);\n-                    }\n-                } else {\n-                    logger.debug(\"Skipping non-bound shade {}\", shade.id);\n-                }\n-            }\n+        logger.debug(\"Received data for {} shades\", shadesData.size());\n+\n+        Map<String, ShadeData> idShadeDataMap = getIdShadeDataMap(shadesData);\n+        Map<Thing, String> thingIdMap = getThingIdMap();\n+        for (Entry<Thing, String> item : thingIdMap.entrySet()) {\n+            @SuppressWarnings(\"null\")\n+            Thing thing = item.getKey();\n+            @SuppressWarnings(\"null\")\n+            String shadeId = item.getValue();\n+            @Nullable\n+            ShadeData shadeData = idShadeDataMap.get(shadeId);\n+            updateShadeThing(shadeId, thing, shadeData);\n+        }\n+    }\n+\n+    private void updateShadeThing(String shadeId, Thing thing, @Nullable ShadeData shadeData) {\n+        HDPowerViewShadeHandler thingHandler = ((HDPowerViewShadeHandler) thing.getHandler());\n+        if (thingHandler == null) {\n+            logger.debug(\"Shade '{}' handler not initialized\", shadeId);\n+            return;\n+        }\n+        if (shadeData == null) {\n+            logger.debug(\"Shade '{}' has no data in hub\", shadeId);\n         } else {\n-            logger.warn(\"No response to shade poll\");\n+            logger.debug(\"Updating shade '{}'\", shadeId);\n         }\n+        thingHandler.onReceiveUpdate(shadeData);\n     }\n \n-    private void pollScenes() throws JsonParseException, ProcessingException, IOException {\n+    private void pollScenes() throws JsonParseException, ProcessingException, HubMaintenanceException {\n+        HDPowerViewWebTargets webTargets = this.webTargets;\n+        if (webTargets == null) {\n+            throw new ProcessingException(\"Web targets not initialized\");\n+        }\n+\n         Scenes scenes = webTargets.getScenes();\n-        if (scenes != null) {\n-            logger.debug(\"Received {} scenes\", scenes.sceneIds.size());\n-            Map<Integer, Channel> channels = getSceneChannelsById();\n-            for (Scene scene : scenes.sceneData) {\n-                // Remove existing scene from the map\n-                Channel existingChannel = channels.remove(scene.id);\n-                if (existingChannel == null) {\n-                    // Create the new scene\n-                    ChannelUID channelUID = new ChannelUID(getThing().getUID(), Integer.toString(scene.id, 10));\n-                    Channel channel = ChannelBuilder.create(channelUID, \"Switch\").withType(sceneChannelTypeUID)\n-                            .withLabel(scene.getName()).withDescription(\"Activates the scene \" + scene.getName())\n-                            .build();\n-                    updateThing(editThing().withChannel(channel).build());\n-                    logger.debug(\"Created new channel for scene {}\", scene.id);\n-                } else {\n-                    logger.debug(\"Skipping existing scene {}\", scene.id);\n-                }\n-            }\n+        if (scenes == null) {\n+            throw new JsonParseException(\"Missing 'scenes' element\");\n+        }\n \n-            // Remove any previously created channels that no longer exist\n-            if (!channels.isEmpty()) {\n-                logger.debug(\"Removing {} existing scenes\", channels.size());\n-                List<Channel> allChannels = new ArrayList<>(getThing().getChannels());\n-                allChannels.removeAll(channels.values());\n-                updateThing(editThing().withChannels(allChannels).build());\n+        List<Scene> sceneData = scenes.sceneData;\n+        if (sceneData == null) {\n+            throw new JsonParseException(\"Missing 'scenes.sceneData' element\");\n+        }\n+        logger.debug(\"Received data for {} scenes\", sceneData.size());\n+\n+        Map<String, Channel> idChannelMap = getIdChannelMap();\n+        for (Scene scene : sceneData) {\n+            // remove existing scene channel from the map\n+            String sceneId = Integer.toString(scene.id);\n+            if (idChannelMap.containsKey(sceneId)) {\n+                idChannelMap.remove(sceneId);\n+                logger.debug(\"Keeping channel for existing scene '{}'\", sceneId);\n+            } else {\n+                // create a new scene channel\n+                ChannelUID channelUID = new ChannelUID(getThing().getUID(), sceneId);\n+                Channel channel = ChannelBuilder.create(channelUID, \"Switch\").withType(sceneChannelTypeUID)\n+                        .withLabel(scene.getName()).withDescription(\"Activates the scene \" + scene.getName()).build();\n+                updateThing(editThing().withChannel(channel).build());\n+                logger.debug(\"Creating new channel for scene '{}'\", sceneId);\n             }\n-        } else {\n-            logger.warn(\"No response to scene poll\");\n+        }\n+\n+        // remove any previously created channels that no longer exist\n+        if (!idChannelMap.isEmpty()) {\n+            logger.debug(\"Removing {} orphan scene channels\", idChannelMap.size());\n+            List<Channel> allChannels = new ArrayList<>(getThing().getChannels());\n+            allChannels.removeAll(idChannelMap.values());\n+            updateThing(editThing().withChannels(allChannels).build());\n         }\n     }\n \n-    private Map<String, Thing> getThingsByShadeId() {\n-        Map<String, Thing> ret = new HashMap<>();\n+    private Map<Thing, String> getThingIdMap() {\n+        Map<Thing, String> ret = new HashMap<>();\n         for (Thing thing : getThing().getThings()) {\n-            if (thing.getThingTypeUID().equals(HDPowerViewBindingConstants.THING_TYPE_SHADE)) {\n-                String id = thing.getConfiguration().as(HDPowerViewShadeConfiguration.class).id;\n-                ret.put(id, thing);\n+            String id = thing.getConfiguration().as(HDPowerViewShadeConfiguration.class).id;\n+            if (id != null && !id.isEmpty()) {\n+                ret.put(thing, id);\n             }\n         }\n         return ret;\n     }\n \n-    private Map<Integer, Channel> getSceneChannelsById() {\n-        Map<Integer, Channel> ret = new HashMap<>();\n+    private Map<String, ShadeData> getIdShadeDataMap(List<ShadeData> shadeData) {\n+        Map<String, ShadeData> ret = new HashMap<>();\n+        for (ShadeData shade : shadeData) {\n+            if (shade.id != 0) {\n+                ret.put(Integer.toString(shade.id), shade);\n+            }\n+        }\n+        return ret;\n+    }\n+\n+    private Map<String, Channel> getIdChannelMap() {\n+        Map<String, Channel> ret = new HashMap<>();\n         for (Channel channel : getThing().getChannels()) {\n-            if (channel.getChannelTypeUID().equals(sceneChannelTypeUID)) {\n-                Integer id = Integer.parseInt(channel.getUID().getId());\n-                ret.put(id, channel);\n+            if (sceneChannelTypeUID.equals(channel.getChannelTypeUID())) {\n+                ret.put(channel.getUID().getId(), channel);\n             }\n         }\n         return ret;\n     }\n+\n+    private void requestRefreshShades() {\n+        Map<Thing, String> thingIdMap = getThingIdMap();\n+        for (Entry<Thing, String> item : thingIdMap.entrySet()) {\n+            @SuppressWarnings(\"null\")\n+            Thing thing = item.getKey();\n+            ThingHandler handler = thing.getHandler();\n+            if (handler instanceof HDPowerViewShadeHandler) {\n+                ((HDPowerViewShadeHandler) handler).requestRefreshShade();\n+            } else {\n+                @SuppressWarnings(\"null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 356}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2ODAzNg==", "bodyText": "It's good practice to append the unit to the field name e.g. REFRESH_DELAY_SEC.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r460568036", "createdAt": "2020-07-26T20:09:11Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewShadeHandler.java", "diffHunk": "@@ -12,119 +12,253 @@\n  */\n package org.openhab.binding.hdpowerview.internal.handler;\n \n-import java.io.IOException;\n+import static org.openhab.binding.hdpowerview.internal.HDPowerViewBindingConstants.*;\n+import static org.openhab.binding.hdpowerview.internal.api.ActuatorClass.*;\n+import static org.openhab.binding.hdpowerview.internal.api.CoordinateSystem.*;\n \n-import javax.ws.rs.core.Response;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.TimeUnit;\n \n+import javax.ws.rs.ProcessingException;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.jdt.annotation.Nullable;\n import org.eclipse.smarthome.core.library.types.OnOffType;\n import org.eclipse.smarthome.core.library.types.PercentType;\n import org.eclipse.smarthome.core.library.types.StopMoveType;\n import org.eclipse.smarthome.core.library.types.UpDownType;\n import org.eclipse.smarthome.core.thing.ChannelUID;\n import org.eclipse.smarthome.core.thing.Thing;\n import org.eclipse.smarthome.core.thing.ThingStatus;\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\n import org.eclipse.smarthome.core.types.Command;\n+import org.eclipse.smarthome.core.types.RefreshType;\n+import org.eclipse.smarthome.core.types.State;\n import org.eclipse.smarthome.core.types.UnDefType;\n-import org.openhab.binding.hdpowerview.internal.HDPowerViewBindingConstants;\n+import org.openhab.binding.hdpowerview.internal.HDPowerViewWebTargets;\n+import org.openhab.binding.hdpowerview.internal.HubMaintenanceException;\n+import org.openhab.binding.hdpowerview.internal.api.ActuatorClass;\n+import org.openhab.binding.hdpowerview.internal.api.CoordinateSystem;\n import org.openhab.binding.hdpowerview.internal.api.ShadePosition;\n-import org.openhab.binding.hdpowerview.internal.api.responses.Shades.Shade;\n+import org.openhab.binding.hdpowerview.internal.api.responses.Shade;\n+import org.openhab.binding.hdpowerview.internal.api.responses.Shades.ShadeData;\n import org.openhab.binding.hdpowerview.internal.config.HDPowerViewShadeConfiguration;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- * Handles commands for an HD Power View shade\n+ * Handles commands for an HD PowerView Shade\n  *\n  * @author Andy Lintner - Initial contribution\n+ * @author Andrew Fiddian-Green - Added support for secondary rail positions\n  */\n+@NonNullByDefault\n public class HDPowerViewShadeHandler extends AbstractHubbedThingHandler {\n \n-    private static final int MAX_POSITION = 65535;\n-    private static final int MAX_VANE = 32767;\n-\n     private final Logger logger = LoggerFactory.getLogger(HDPowerViewShadeHandler.class);\n \n+    private static final int REFRESH_DELAY = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "264b1da9e83455baa5dd45f1f2de1d159b9d4121"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a74b808d466fcdc326e099996d7600449ccc336a", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/a74b808d466fcdc326e099996d7600449ccc336a", "committedDate": "2020-07-27T18:40:15Z", "message": "[hdpowerview] rename constant at request of @fwolter\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "216b8f192a5632f29a344c205d3174205f24ed76", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/216b8f192a5632f29a344c205d3174205f24ed76", "committedDate": "2020-07-28T18:18:48Z", "message": "[hdpowerview] delted hard refresh channel\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3ab3a6032e5c6b671cb8b61d7c86277c50e849b", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/d3ab3a6032e5c6b671cb8b61d7c86277c50e849b", "committedDate": "2020-07-28T18:23:25Z", "message": "[hdpowerview] convert hard refresh channel to auto; remove null supression\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a69dfbda006224788905ec3ddbbc5b6344894078", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/a69dfbda006224788905ec3ddbbc5b6344894078", "committedDate": "2020-07-28T18:25:04Z", "message": "[hdpowerview] docu\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c7971b8b29ac5df6b6d41d4505e43de3e6ca98d", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/0c7971b8b29ac5df6b6d41d4505e43de3e6ca98d", "committedDate": "2020-07-28T18:39:56Z", "message": "[hdpowerview] spotless\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2OTMxODg1", "url": "https://github.com/openhab/openhab-addons/pull/8061#pullrequestreview-456931885", "createdAt": "2020-07-28T19:15:04Z", "commit": {"oid": "0c7971b8b29ac5df6b6d41d4505e43de3e6ca98d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOToxNTowNFrOG4ayJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxOToyNDoxMFrOG4bISw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxMjI2Mw==", "bodyText": "For further coding: No harm in canceling an already cancelled task. The isCancelled() can be removed safely.", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461812263", "createdAt": "2020-07-28T19:15:04Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/src/main/java/org/openhab/binding/hdpowerview/internal/handler/HDPowerViewHubHandler.java", "diffHunk": "@@ -110,25 +138,37 @@ public void dispose() {\n         stopPoll();\n     }\n \n-    void pollNow() {\n-        if (isInitialized()) {\n-            schedulePoll();\n+    private void schedulePoll() {\n+        ScheduledFuture<?> future = this.pollFuture;\n+        if (future != null && !future.isCancelled()) {\n+            future.cancel(false);\n         }\n-    }\n+        logger.debug(\"Scheduling poll for 5000ms out, then every {}ms\", refreshInterval);\n+        this.pollFuture = scheduler.scheduleWithFixedDelay(this::poll, 5000, refreshInterval, TimeUnit.MILLISECONDS);\n \n-    private void schedulePoll() {\n-        if (pollFuture != null) {\n-            pollFuture.cancel(false);\n+        future = this.hardRefreshFuture;\n+        if (future != null && !future.isCancelled()) {\n+            future.cancel(false);\n+        }\n+        if (hardRefreshInterval > 0) {\n+            logger.debug(\"Scheduling hard refresh every {}minutes\", hardRefreshInterval);\n+            this.hardRefreshFuture = scheduler.scheduleWithFixedDelay(this::requestRefreshShades, 1,\n+                    hardRefreshInterval, TimeUnit.MINUTES);\n         }\n-        logger.debug(\"Scheduling poll for 500ms out, then every {} ms\", refreshInterval);\n-        pollFuture = scheduler.scheduleWithFixedDelay(this::poll, 500, refreshInterval, TimeUnit.MILLISECONDS);\n     }\n \n     private synchronized void stopPoll() {\n-        if (pollFuture != null && !pollFuture.isCancelled()) {\n-            pollFuture.cancel(true);\n-            pollFuture = null;\n+        ScheduledFuture<?> future = this.pollFuture;\n+        if (future != null && !future.isCancelled()) {\n+            future.cancel(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c7971b8b29ac5df6b6d41d4505e43de3e6ca98d"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTgxNzkzMQ==", "bodyText": "Is this the Channel you wanted to remove?", "url": "https://github.com/openhab/openhab-addons/pull/8061#discussion_r461817931", "createdAt": "2020-07-28T19:24:10Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.hdpowerview/src/main/resources/ESH-INF/thing/thing-types.xml", "diffHunk": "@@ -58,4 +82,10 @@\n \t\t<description>Activates the scene</description>\n \t</channel-type>\n \n+\t<channel-type id=\"refresh\">\n+\t\t<item-type>Switch</item-type>\n+\t\t<label>Refresh Cache</label>\n+\t\t<description>Instructs the Hub to refresh its Shade data cache</description>\n+\t</channel-type>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c7971b8b29ac5df6b6d41d4505e43de3e6ca98d"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e400b830a4fcce7b3e78b52d140de7241e272c09", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/e400b830a4fcce7b3e78b52d140de7241e272c09", "committedDate": "2020-07-29T11:58:04Z", "message": "[hdpowerview] longer hard refresh interval\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "388f19c4d848673944f2dd9bd7b1aa54b9da7180", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/388f19c4d848673944f2dd9bd7b1aa54b9da7180", "committedDate": "2020-07-29T11:59:04Z", "message": "[hdpowerview] delete isCancelled calls\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b114c8bce6460e40a4c88b287fb09671215d1ba", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/9b114c8bce6460e40a4c88b287fb09671215d1ba", "committedDate": "2020-07-29T11:59:33Z", "message": "[hdpowerview] delete refresh channel type\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d770c03ebb1c3a6b38f6ceaa06d787fa1059b757", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/d770c03ebb1c3a6b38f6ceaa06d787fa1059b757", "committedDate": "2020-07-29T12:02:51Z", "message": "[hdpowerview] typo\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NDU1Mjcy", "url": "https://github.com/openhab/openhab-addons/pull/8061#pullrequestreview-457455272", "createdAt": "2020-07-29T12:05:57Z", "commit": {"oid": "d770c03ebb1c3a6b38f6ceaa06d787fa1059b757"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 99, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}