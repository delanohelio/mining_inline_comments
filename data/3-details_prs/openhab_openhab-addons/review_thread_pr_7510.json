{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExODAyNzk2", "number": 7510, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDowODo1M1rOD4eLFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOToxODozOFrOD4r9iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTQxMjA2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubReadDcbResponse.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDowODo1M1rOGPUY2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNjozNDoxMlrOGPkcSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxNTg2NA==", "bodyText": "Please handle the case if firmwareVersion is null", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r418715864", "createdAt": "2020-05-01T20:08:53Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubReadDcbResponse.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.unit.ImperialUnits;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonSyntaxException;\n+import com.google.gson.annotations.SerializedName;\n+\n+/**\n+ * A wrapper around the JSON response to the JSON READ_DCB 100 request\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoHubReadDcbResponse {\n+\n+    private static final Gson GSON = new Gson();\n+\n+    @SerializedName(\"CORF\")\n+    private String degreesCorF;\n+    @SerializedName(\"Firmware version\")\n+    private Integer firmwareVersion;\n+\n+    public Unit<?> getTemperatureUnit() {\n+        return \"F\".equalsIgnoreCase(degreesCorF) ? ImperialUnits.FAHRENHEIT : SIUnits.CELSIUS;\n+    }\n+\n+    public String getFirmwareVersion() {\n+        return firmwareVersion.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3ea4f6b090ff8c913ffe7a33d4b0d24a9a089e6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzE2Nw==", "bodyText": "@cpmeister thanks for pointing this out; in fact firmwareVersion is never used code, so I think I will remove it entirely; I will probably remove other elements of never used code at the same time.", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r418933167", "createdAt": "2020-05-02T08:54:07Z", "author": {"login": "andrewfg"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubReadDcbResponse.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.unit.ImperialUnits;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonSyntaxException;\n+import com.google.gson.annotations.SerializedName;\n+\n+/**\n+ * A wrapper around the JSON response to the JSON READ_DCB 100 request\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoHubReadDcbResponse {\n+\n+    private static final Gson GSON = new Gson();\n+\n+    @SerializedName(\"CORF\")\n+    private String degreesCorF;\n+    @SerializedName(\"Firmware version\")\n+    private Integer firmwareVersion;\n+\n+    public Unit<?> getTemperatureUnit() {\n+        return \"F\".equalsIgnoreCase(degreesCorF) ? ImperialUnits.FAHRENHEIT : SIUnits.CELSIUS;\n+    }\n+\n+    public String getFirmwareVersion() {\n+        return firmwareVersion.toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxNTg2NA=="}, "originalCommit": {"oid": "b3ea4f6b090ff8c913ffe7a33d4b0d24a9a089e6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3ODg5MA==", "bodyText": "Done", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r418978890", "createdAt": "2020-05-02T16:34:12Z", "author": {"login": "andrewfg"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubReadDcbResponse.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.jdt.annotation.Nullable;\n+import org.eclipse.smarthome.core.library.unit.ImperialUnits;\n+import org.eclipse.smarthome.core.library.unit.SIUnits;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonSyntaxException;\n+import com.google.gson.annotations.SerializedName;\n+\n+/**\n+ * A wrapper around the JSON response to the JSON READ_DCB 100 request\n+ *\n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoHubReadDcbResponse {\n+\n+    private static final Gson GSON = new Gson();\n+\n+    @SerializedName(\"CORF\")\n+    private String degreesCorF;\n+    @SerializedName(\"Firmware version\")\n+    private Integer firmwareVersion;\n+\n+    public Unit<?> getTemperatureUnit() {\n+        return \"F\".equalsIgnoreCase(degreesCorF) ? ImperialUnits.FAHRENHEIT : SIUnits.CELSIUS;\n+    }\n+\n+    public String getFirmwareVersion() {\n+        return firmwareVersion.toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxNTg2NA=="}, "originalCommit": {"oid": "b3ea4f6b090ff8c913ffe7a33d4b0d24a9a089e6"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzY2ODU1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoTemperatureSensorHandler.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOToxNToxNFrOGPlhIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwNDoyNzo1NVrOGPyfTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NjUxMg==", "bodyText": "Please add @NonNullByDefault", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r418996512", "createdAt": "2020-05-02T19:15:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoTemperatureSensorHandler.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import static org.openhab.binding.neohub.internal.NeoHubBindingConstants.*;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.thing.Thing;\n+\n+/**\n+ * The {@link NeoTemperatureSensorHandler} is the OpenHAB Handler for NeoTemperatureSensor devices\n+ * \n+ * Note: inherits almost all the functionality of a {@link NeoBaseHandler}\n+ * \n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoTemperatureSensorHandler extends NeoBaseHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13eb2e78fde6f620fe653a4638412d48e055eae3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwMDY4NQ==", "bodyText": "I feared you might say that @cpmeister :( \u2014 I think the logical conclusion would be for me to retroactively do that to all of the classes in the binding, and not only just the new classes. Do you guys have an opinion on this?", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r419000685", "createdAt": "2020-05-02T19:55:26Z", "author": {"login": "andrewfg"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoTemperatureSensorHandler.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import static org.openhab.binding.neohub.internal.NeoHubBindingConstants.*;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.thing.Thing;\n+\n+/**\n+ * The {@link NeoTemperatureSensorHandler} is the OpenHAB Handler for NeoTemperatureSensor devices\n+ * \n+ * Note: inherits almost all the functionality of a {@link NeoBaseHandler}\n+ * \n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoTemperatureSensorHandler extends NeoBaseHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NjUxMg=="}, "originalCommit": {"oid": "13eb2e78fde6f620fe653a4638412d48e055eae3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwMTkyOQ==", "bodyText": "It is not my intent to make a PR any more complicated than it needs to be. I only want you to add @NonNullByDefault to new classes that are added to the binding, the existing classes can be considered to be grandfathered in.\nOf course, nothing is stopping you from adding them in if you wish but I would prefer if that were a separate PR. This PR already has too much going on.", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r419001929", "createdAt": "2020-05-02T20:07:24Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoTemperatureSensorHandler.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import static org.openhab.binding.neohub.internal.NeoHubBindingConstants.*;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.thing.Thing;\n+\n+/**\n+ * The {@link NeoTemperatureSensorHandler} is the OpenHAB Handler for NeoTemperatureSensor devices\n+ * \n+ * Note: inherits almost all the functionality of a {@link NeoBaseHandler}\n+ * \n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoTemperatureSensorHandler extends NeoBaseHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NjUxMg=="}, "originalCommit": {"oid": "13eb2e78fde6f620fe653a4638412d48e055eae3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA4MzIwNA==", "bodyText": "@cpmeister hmm, these two new classes are trivial inherited classes from the base handler class; so if I add @NonNullByDefault to them, it causes an mvn build error by differing from the parent class.\nTo correct the mvn build errors, I would need to add @NonNullByDefault to the parent base class. Which means I would have to do the same to the other classes derived from the base. And I suspect this would cause a full rat's tail of null analysis changes to many other classes in the binding.\nSo, in fact I would prefer to follow your prior suggestion, and defer ALL of the null annotation changes to a separate PR. => Is that OK with you?", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r419083204", "createdAt": "2020-05-03T10:34:30Z", "author": {"login": "andrewfg"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoTemperatureSensorHandler.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import static org.openhab.binding.neohub.internal.NeoHubBindingConstants.*;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.thing.Thing;\n+\n+/**\n+ * The {@link NeoTemperatureSensorHandler} is the OpenHAB Handler for NeoTemperatureSensor devices\n+ * \n+ * Note: inherits almost all the functionality of a {@link NeoBaseHandler}\n+ * \n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoTemperatureSensorHandler extends NeoBaseHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NjUxMg=="}, "originalCommit": {"oid": "13eb2e78fde6f620fe653a4638412d48e055eae3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTIwOTAzOA==", "bodyText": "That sounds fine by me, I don't want to add a ton of work to this PR.", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r419209038", "createdAt": "2020-05-04T04:27:55Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoTemperatureSensorHandler.java", "diffHunk": "@@ -0,0 +1,46 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import static org.openhab.binding.neohub.internal.NeoHubBindingConstants.*;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.library.types.QuantityType;\n+import org.eclipse.smarthome.core.thing.Thing;\n+\n+/**\n+ * The {@link NeoTemperatureSensorHandler} is the OpenHAB Handler for NeoTemperatureSensor devices\n+ * \n+ * Note: inherits almost all the functionality of a {@link NeoBaseHandler}\n+ * \n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoTemperatureSensorHandler extends NeoBaseHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5NjUxMg=="}, "originalCommit": {"oid": "13eb2e78fde6f620fe653a4638412d48e055eae3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzY3MTEzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoContactHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOToxODozOFrOGPlicg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxOTo1NTozN1rOGPlxeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5Njg1MA==", "bodyText": "Please add @NonNullByDefault", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r418996850", "createdAt": "2020-05-02T19:18:38Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoContactHandler.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import static org.openhab.binding.neohub.internal.NeoHubBindingConstants.*;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.Thing;\n+\n+/**\n+ * The {@link NeoContactHandler} is the OpenHAB Handler for NeoContact devices\n+ * \n+ * Note: inherits almost all the functionality of a {@link NeoBaseHandler}\n+ * \n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoContactHandler extends NeoBaseHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13eb2e78fde6f620fe653a4638412d48e055eae3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAwMDY5Nw==", "bodyText": "See above", "url": "https://github.com/openhab/openhab-addons/pull/7510#discussion_r419000697", "createdAt": "2020-05-02T19:55:37Z", "author": {"login": "andrewfg"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoContactHandler.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.neohub.internal;\n+\n+import static org.openhab.binding.neohub.internal.NeoHubBindingConstants.*;\n+\n+import javax.measure.Unit;\n+\n+import org.eclipse.smarthome.core.library.types.OnOffType;\n+import org.eclipse.smarthome.core.thing.Thing;\n+\n+/**\n+ * The {@link NeoContactHandler} is the OpenHAB Handler for NeoContact devices\n+ * \n+ * Note: inherits almost all the functionality of a {@link NeoBaseHandler}\n+ * \n+ * @author Andrew Fiddian-Green - Initial contribution\n+ * \n+ */\n+public class NeoContactHandler extends NeoBaseHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk5Njg1MA=="}, "originalCommit": {"oid": "13eb2e78fde6f620fe653a4638412d48e055eae3"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 121, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}