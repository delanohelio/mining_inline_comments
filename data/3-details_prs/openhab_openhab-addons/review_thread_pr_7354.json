{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNTkzODQz", "number": 7354, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0OTozOVrODxSTrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NjowN1rODxTt7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDA2NzY1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0OTozOVrOGEq3ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNTo0OTozOVrOGEq3ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU0OTc5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            channelUID, root, CoreItemFactory.NUMBER, null, \"Error message\", \"Text\", true, false,\n          \n          \n            \n                                            channelUID, root, CoreItemFactory.STRING, null, \"Error message\", \"Text\", true, false,", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407549797", "createdAt": "2020-04-13T15:49:39Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "diffHunk": "@@ -404,14 +431,17 @@ private void addChannels(KM200ServiceObject serObj, Thing thing, List<Channel> s\n \n                 case \"errorList\":\n                     if (\"nbrErrors\".equals(subKey) || \"error\".equals(subKey)) {\n-                        state = new StateDescription(null, null, null, \"%.0f \", readOnly, null);\n+                        state = StateDescriptionFragmentBuilder.create().withPattern(\"%.0f\").withReadOnly(readOnly)\n+                                .build();\n                         newChannel = createChannel(new ChannelTypeUID(thing.getUID().getAsString() + \":\" + subKey),\n-                                channelUID, root, \"Number\", null, subKey, subKey, true, false, state, unitOfMeasure);\n+                                channelUID, root, CoreItemFactory.NUMBER, null, subKey, subKey, true, false, state,\n+                                unitOfMeasure);\n                     } else if (\"errorString\".equals(subKey)) {\n-                        state = new StateDescription(null, null, null, \"%s\", readOnly, null);\n+                        state = StateDescriptionFragmentBuilder.create().withPattern(\"%s\").withReadOnly(readOnly)\n+                                .build();\n                         newChannel = createChannel(new ChannelTypeUID(thing.getUID().getAsString() + \":\" + subKey),\n-                                channelUID, root, \"String\", null, \"Error message\", \"Text\", true, false, state,\n-                                unitOfMeasure);\n+                                channelUID, root, CoreItemFactory.NUMBER, null, \"Error message\", \"Text\", true, false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4f0ef167b25b8a4f0d4fce909504f598ccb9cfb"}, "originalPosition": 210}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDI5ODcxOnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo1NjowN1rOGEtFWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOToyMzo0NlrOGEyC6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ==", "bodyText": "This class doesn't have a @NonNullByDefault so are you sure that removing @NonNull here is safe?", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407586139", "createdAt": "2020-04-13T16:56:07Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "diffHunk": "@@ -324,7 +335,7 @@ private void addChannels(KM200ServiceObject serObj, Thing thing, List<Channel> s\n             switch (subKeyType) {\n                 case \"stringValue\":\n                     /* Creating an new channel type with capabilities from service */\n-                    List<@NonNull StateOption> options = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9cc0da9fcbd4141334bd1a18600c56240c8fd72"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5NTMxNg==", "bodyText": "Yes, I am. But it should not be to hard to add it on class level if you prefer.", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407595316", "createdAt": "2020-04-13T17:13:13Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "diffHunk": "@@ -324,7 +335,7 @@ private void addChannels(KM200ServiceObject serObj, Thing thing, List<Channel> s\n             switch (subKeyType) {\n                 case \"stringValue\":\n                     /* Creating an new channel type with capabilities from service */\n-                    List<@NonNull StateOption> options = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ=="}, "originalCommit": {"oid": "f9cc0da9fcbd4141334bd1a18600c56240c8fd72"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2NzQzMw==", "bodyText": "Might as well", "url": "https://github.com/openhab/openhab-addons/pull/7354#discussion_r407667433", "createdAt": "2020-04-13T19:23:46Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.km200/src/main/java/org/openhab/binding/km200/internal/handler/KM200ThingHandler.java", "diffHunk": "@@ -324,7 +335,7 @@ private void addChannels(KM200ServiceObject serObj, Thing thing, List<Channel> s\n             switch (subKeyType) {\n                 case \"stringValue\":\n                     /* Creating an new channel type with capabilities from service */\n-                    List<@NonNull StateOption> options = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4NjEzOQ=="}, "originalCommit": {"oid": "f9cc0da9fcbd4141334bd1a18600c56240c8fd72"}, "originalPosition": 136}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 597, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}