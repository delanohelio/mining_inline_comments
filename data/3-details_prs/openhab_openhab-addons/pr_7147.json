{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODI0MzU2", "number": 7147, "title": "[bluetooth] Read device information during discovery process", "bodyText": "Signed-off-by: Pauli Anttila pauli.anttila@gmail.com", "createdAt": "2020-03-11T17:27:42Z", "url": "https://github.com/openhab/openhab-addons/pull/7147", "merged": true, "mergeCommit": {"oid": "dafcc613ae4f7a6b32607d07574f138e85b28103"}, "closed": true, "closedAt": "2020-03-12T22:59:49Z", "author": {"login": "paulianttila"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMqhcdgH2gAyMzg2ODI0MzU2OmQ1NThjNTYyNWE4MDY0OTJlNmFkMGQ5NmMwYzNkNDAwYjMzNzhjODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNCI61gH2gAyMzg2ODI0MzU2OjNlYzcwYTJiYTI0Njc4YmQ3ZmVhZWExZDZiMGZhMTI4MmZkZDc5OGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d558c5625a806492e6ad0d96c0c3d400b3378c87", "author": {"user": {"login": "paulianttila", "name": "pali"}}, "url": "https://github.com/openhab/openhab-addons/commit/d558c5625a806492e6ad0d96c0c3d400b3378c87", "committedDate": "2020-03-11T17:25:43Z", "message": "[bluetooth] Read device information during discovery process\n\nSigned-off-by: Pauli Anttila <pauli.anttila@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDY1Nzgy", "url": "https://github.com/openhab/openhab-addons/pull/7147#pullrequestreview-373065782", "createdAt": "2020-03-11T19:36:47Z", "commit": {"oid": "d558c5625a806492e6ad0d96c0c3d400b3378c87"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTozNjo0OFrOF1F2QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTo1Mzo0NlrOF1GaPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxNDY1Nw==", "bodyText": "Please don't use abbreviations for these.", "url": "https://github.com/openhab/openhab-addons/pull/7147#discussion_r391214657", "createdAt": "2020-03-11T19:36:48Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/BluetoothDevice.java", "diffHunk": "@@ -245,6 +296,51 @@ public void setName(String name) {\n         this.name = name;\n     }\n \n+    /**\n+     * Set the model of the device\n+     *\n+     * @param model a {@link String} defining the device model\n+     */\n+    public void setModel(String model) {\n+        this.model = model;\n+    }\n+\n+    /**\n+     * Set the serial number of the device\n+     *\n+     * @param model a {@link String} defining the serial number\n+     */\n+    public void setSerialNumberl(String serialNumber) {\n+        this.serialNumber = serialNumber;\n+    }\n+\n+    /**\n+     * Set the HW revision of the device\n+     *\n+     * @param model a {@link String} defining the HW revision\n+     */\n+    public void setHwRevision(String hwRevision) {\n+        this.hwRevision = hwRevision;\n+    }\n+\n+    /**\n+     * Set the FW revision of the device\n+     *\n+     * @param model a {@link String} defining the FW revision\n+     */\n+    public void setFwRevision(String fwRevision) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d558c5625a806492e6ad0d96c0c3d400b3378c87"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxNTI0NQ==", "bodyText": "Don't catch the InterruptedException", "url": "https://github.com/openhab/openhab-addons/pull/7147#discussion_r391215245", "createdAt": "2020-03-11T19:38:00Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/discovery/internal/BluetoothDiscoveryProcess.java", "diffHunk": "@@ -227,18 +245,60 @@ public void onConnectionStateChange(BluetoothConnectionStatusNotification connec\n         }\n     }\n \n-    private void tryToDiscoverNameIfMissing() throws InterruptedException {\n-        BluetoothCharacteristic characteristic = device.getCharacteristic(GattCharacteristic.DEVICE_NAME.getUUID());\n-        if (characteristic == null || device.getName() != null) {\n-            return;\n-        }\n-        if (!device.readCharacteristic(characteristic)) {\n-            logger.debug(\"Failed to aquire name for device {}\", device.getAddress());\n-            return;\n-        }\n-        if (!awaitNameDiscovery(1, TimeUnit.SECONDS)) {\n-            logger.debug(\"Name discovery for device {} timed out\", device.getAddress());\n-        }\n+    private void readDeviceInformationIfMissing() {\n+        deviceInformationUUIDs.forEach(uuid -> {\n+            BluetoothCharacteristic characteristic = device.getCharacteristic(uuid);\n+            if (characteristic == null) {\n+                logger.debug(\"Device '{}' doesn't support uuid '{}'\", device.getAddress(), uuid);\n+                return;\n+            }\n+            switch (characteristic.getGattCharacteristic()) {\n+                case DEVICE_NAME:\n+                    if (device.getName() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case MODEL_NUMBER_STRING:\n+                    if (device.getModel() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case SERIAL_NUMBER_STRING:\n+                    if (device.getSerialNumber() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case HARDWARE_REVISION_STRING:\n+                    if (device.getHwRevision() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case FIRMWARE_REVISION_STRING:\n+                    if (device.getFwRevision() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case SOFTWARE_REVISION_STRING:\n+                    if (device.getSwRevision() != null) {\n+                        return;\n+                    }\n+                    break;\n+                default:\n+                    return;\n+            }\n+            if (!device.readCharacteristic(characteristic)) {\n+                logger.debug(\"Failed to aquire uuid {} from device {}\", uuid, device.getAddress());\n+                return;\n+            }\n+            ongoingDevInfoUUID = Optional.of(uuid);\n+            try {\n+                if (!awaitInfoResponse(2, TimeUnit.SECONDS)) {\n+                    logger.debug(\"Device info (uuid {}) for device {} timed out\", uuid, device.getAddress());\n+                }\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(\"InterruptedException caught when reading device info \" + uuid, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d558c5625a806492e6ad0d96c0c3d400b3378c87"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxNzQ4Mg==", "bodyText": "Why was the timeout increased to 2 seconds? It should never take longer than a split second to communicate to a connected device. My use of 1 second was already excessive.", "url": "https://github.com/openhab/openhab-addons/pull/7147#discussion_r391217482", "createdAt": "2020-03-11T19:42:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/discovery/internal/BluetoothDiscoveryProcess.java", "diffHunk": "@@ -227,18 +245,60 @@ public void onConnectionStateChange(BluetoothConnectionStatusNotification connec\n         }\n     }\n \n-    private void tryToDiscoverNameIfMissing() throws InterruptedException {\n-        BluetoothCharacteristic characteristic = device.getCharacteristic(GattCharacteristic.DEVICE_NAME.getUUID());\n-        if (characteristic == null || device.getName() != null) {\n-            return;\n-        }\n-        if (!device.readCharacteristic(characteristic)) {\n-            logger.debug(\"Failed to aquire name for device {}\", device.getAddress());\n-            return;\n-        }\n-        if (!awaitNameDiscovery(1, TimeUnit.SECONDS)) {\n-            logger.debug(\"Name discovery for device {} timed out\", device.getAddress());\n-        }\n+    private void readDeviceInformationIfMissing() {\n+        deviceInformationUUIDs.forEach(uuid -> {\n+            BluetoothCharacteristic characteristic = device.getCharacteristic(uuid);\n+            if (characteristic == null) {\n+                logger.debug(\"Device '{}' doesn't support uuid '{}'\", device.getAddress(), uuid);\n+                return;\n+            }\n+            switch (characteristic.getGattCharacteristic()) {\n+                case DEVICE_NAME:\n+                    if (device.getName() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case MODEL_NUMBER_STRING:\n+                    if (device.getModel() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case SERIAL_NUMBER_STRING:\n+                    if (device.getSerialNumber() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case HARDWARE_REVISION_STRING:\n+                    if (device.getHwRevision() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case FIRMWARE_REVISION_STRING:\n+                    if (device.getFwRevision() != null) {\n+                        return;\n+                    }\n+                    break;\n+                case SOFTWARE_REVISION_STRING:\n+                    if (device.getSwRevision() != null) {\n+                        return;\n+                    }\n+                    break;\n+                default:\n+                    return;\n+            }\n+            if (!device.readCharacteristic(characteristic)) {\n+                logger.debug(\"Failed to aquire uuid {} from device {}\", uuid, device.getAddress());\n+                return;\n+            }\n+            ongoingDevInfoUUID = Optional.of(uuid);\n+            try {\n+                if (!awaitInfoResponse(2, TimeUnit.SECONDS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d558c5625a806492e6ad0d96c0c3d400b3378c87"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxOTg4Nw==", "bodyText": "I don't see the benefit of putting this in a list if you have to do a switch statement on each of them anyway.\nI think a better way would be to have a helper function that takes a characteristic as parameter instead and you conditionally call the helper function based on the presence or absence of the device field of interest.", "url": "https://github.com/openhab/openhab-addons/pull/7147#discussion_r391219887", "createdAt": "2020-03-11T19:47:00Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/discovery/internal/BluetoothDiscoveryProcess.java", "diffHunk": "@@ -63,14 +66,28 @@\n     private final Lock serviceDiscoveryLock = new ReentrantLock();\n     private final Condition connectionCondition = serviceDiscoveryLock.newCondition();\n     private final Condition serviceDiscoveryCondition = serviceDiscoveryLock.newCondition();\n-    private final Condition nameDiscoveryCondition = serviceDiscoveryLock.newCondition();\n+    private final Condition infoDiscoveryCondition = serviceDiscoveryLock.newCondition();\n \n     private final BluetoothDevice device;\n     private final Collection<BluetoothDiscoveryParticipant> participants;\n     private final Set<BluetoothAdapter> adapters;\n \n     private volatile boolean servicesDiscovered = false;\n \n+    /**\n+     * List of UUID's which will be fetched from the device when connection based discovery is required.\n+     */\n+    private final List<UUID> deviceInformationUUIDs = new ArrayList<UUID>(Arrays.asList(\n+            GattCharacteristic.DEVICE_NAME.getUUID(), GattCharacteristic.MODEL_NUMBER_STRING.getUUID(),\n+            GattCharacteristic.SERIAL_NUMBER_STRING.getUUID(), GattCharacteristic.HARDWARE_REVISION_STRING.getUUID(),\n+            GattCharacteristic.FIRMWARE_REVISION_STRING.getUUID(),\n+            GattCharacteristic.SOFTWARE_REVISION_STRING.getUUID()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d558c5625a806492e6ad0d96c0c3d400b3378c87"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIyMzg2OA==", "bodyText": "I wouldn't use lambdas here so that you can properly throw checked exceptions", "url": "https://github.com/openhab/openhab-addons/pull/7147#discussion_r391223868", "createdAt": "2020-03-11T19:53:46Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/discovery/internal/BluetoothDiscoveryProcess.java", "diffHunk": "@@ -227,18 +245,60 @@ public void onConnectionStateChange(BluetoothConnectionStatusNotification connec\n         }\n     }\n \n-    private void tryToDiscoverNameIfMissing() throws InterruptedException {\n-        BluetoothCharacteristic characteristic = device.getCharacteristic(GattCharacteristic.DEVICE_NAME.getUUID());\n-        if (characteristic == null || device.getName() != null) {\n-            return;\n-        }\n-        if (!device.readCharacteristic(characteristic)) {\n-            logger.debug(\"Failed to aquire name for device {}\", device.getAddress());\n-            return;\n-        }\n-        if (!awaitNameDiscovery(1, TimeUnit.SECONDS)) {\n-            logger.debug(\"Name discovery for device {} timed out\", device.getAddress());\n-        }\n+    private void readDeviceInformationIfMissing() {\n+        deviceInformationUUIDs.forEach(uuid -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d558c5625a806492e6ad0d96c0c3d400b3378c87"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2139f8dc0f0e196f9b87bc8a01298a2890b51e1f", "author": {"user": {"login": "paulianttila", "name": "pali"}}, "url": "https://github.com/openhab/openhab-addons/commit/2139f8dc0f0e196f9b87bc8a01298a2890b51e1f", "committedDate": "2020-03-11T20:51:39Z", "message": "Review fixes\n\nSigned-off-by: Pauli Anttila <pauli.anttila@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTI4NDQ1", "url": "https://github.com/openhab/openhab-addons/pull/7147#pullrequestreview-373128445", "createdAt": "2020-03-11T21:11:31Z", "commit": {"oid": "2139f8dc0f0e196f9b87bc8a01298a2890b51e1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMToxMTozMlrOF1JQcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMToxMTozMlrOF1JQcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI3MDUxNA==", "bodyText": "I think you can implement this without using Optional. Would be simpler to just use a GattCharacteristic instead of a UUID.", "url": "https://github.com/openhab/openhab-addons/pull/7147#discussion_r391270514", "createdAt": "2020-03-11T21:11:32Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/discovery/internal/BluetoothDiscoveryProcess.java", "diffHunk": "@@ -304,10 +335,38 @@ public void onServicesDiscovered() {\n     public void onCharacteristicReadComplete(BluetoothCharacteristic characteristic, BluetoothCompletionStatus status) {\n         serviceDiscoveryLock.lock();\n         try {\n-            if (characteristic.getGattCharacteristic() == GattCharacteristic.DEVICE_NAME) {\n-                device.setName(characteristic.getStringValue(0));\n-                nameDiscoveryCondition.signal();\n+            if (status == BluetoothCompletionStatus.SUCCESS) {\n+                switch (characteristic.getGattCharacteristic()) {\n+                    case DEVICE_NAME:\n+                        device.setName(characteristic.getStringValue(0));\n+                        break;\n+                    case MODEL_NUMBER_STRING:\n+                        device.setModel(characteristic.getStringValue(0));\n+                        break;\n+                    case SERIAL_NUMBER_STRING:\n+                        device.setSerialNumberl(characteristic.getStringValue(0));\n+                        break;\n+                    case HARDWARE_REVISION_STRING:\n+                        device.setHardwareRevision(characteristic.getStringValue(0));\n+                        break;\n+                    case FIRMWARE_REVISION_STRING:\n+                        device.setFirmwareRevision(characteristic.getStringValue(0));\n+                        break;\n+                    case SOFTWARE_REVISION_STRING:\n+                        device.setSoftwareRevision(characteristic.getStringValue(0));\n+                        break;\n+                    default:\n+                        break;\n+                }\n             }\n+\n+            ongoingDevInfoUUID.ifPresent(uuid -> {\n+                if (uuid == characteristic.getGattCharacteristic().getUUID()) {\n+                    ongoingDevInfoUUID = Optional.empty();\n+                    infoDiscoveryCondition.signal();\n+                }\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2139f8dc0f0e196f9b87bc8a01298a2890b51e1f"}, "originalPosition": 151}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTMxMzEy", "url": "https://github.com/openhab/openhab-addons/pull/7147#pullrequestreview-373131312", "createdAt": "2020-03-11T21:16:24Z", "commit": {"oid": "2139f8dc0f0e196f9b87bc8a01298a2890b51e1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMToxNjoyNFrOF1JZkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMToxNjoyNFrOF1JZkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI3Mjg0OA==", "bodyText": "Could you also add these fields to BluetoothDeviceSnapshot? Please? \ud83d\ude04", "url": "https://github.com/openhab/openhab-addons/pull/7147#discussion_r391272848", "createdAt": "2020-03-11T21:16:24Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/BluetoothDevice.java", "diffHunk": "@@ -102,6 +102,12 @@\n      */\n     protected String name;\n \n+    protected String model;\n+    protected String serialNumber;\n+    protected String hardwareRevision;\n+    protected String firmwareRevision;\n+    protected String softwareRevision;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2139f8dc0f0e196f9b87bc8a01298a2890b51e1f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78ced3a0c3bbb6035aa44d7d207f508156111764", "author": {"user": {"login": "paulianttila", "name": "pali"}}, "url": "https://github.com/openhab/openhab-addons/commit/78ced3a0c3bbb6035aa44d7d207f508156111764", "committedDate": "2020-03-12T17:39:33Z", "message": "Removed optional\n\nSigned-off-by: Pauli Anttila <pauli.anttila@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczODE5Mjc1", "url": "https://github.com/openhab/openhab-addons/pull/7147#pullrequestreview-373819275", "createdAt": "2020-03-12T18:53:33Z", "commit": {"oid": "78ced3a0c3bbb6035aa44d7d207f508156111764"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxODo1MzozM1rOF1rLsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxODo1MzozM1rOF1rLsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTgyNjM1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (ongoingCharacteristic != null) {\n          \n          \n            \n                            if (ongoingCharacteristic.getUuid() == characteristic.getUuid()) {\n          \n          \n            \n                                ongoingCharacteristic = null;\n          \n          \n            \n                                infoDiscoveryCondition.signal();\n          \n          \n            \n                            }\n          \n          \n            \n                        if (ongoingCharacteristic == characteristic.getGattCharacteristic()) {\n          \n          \n            \n                            ongoingCharacteristic = null;\n          \n          \n            \n                            infoDiscoveryCondition.signal();", "url": "https://github.com/openhab/openhab-addons/pull/7147#discussion_r391826352", "createdAt": "2020-03-12T18:53:33Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bluetooth/src/main/java/org/openhab/binding/bluetooth/discovery/internal/BluetoothDiscoveryProcess.java", "diffHunk": "@@ -304,9 +336,36 @@ public void onServicesDiscovered() {\n     public void onCharacteristicReadComplete(BluetoothCharacteristic characteristic, BluetoothCompletionStatus status) {\n         serviceDiscoveryLock.lock();\n         try {\n-            if (characteristic.getGattCharacteristic() == GattCharacteristic.DEVICE_NAME) {\n-                device.setName(characteristic.getStringValue(0));\n-                nameDiscoveryCondition.signal();\n+            if (status == BluetoothCompletionStatus.SUCCESS) {\n+                switch (characteristic.getGattCharacteristic()) {\n+                    case DEVICE_NAME:\n+                        device.setName(characteristic.getStringValue(0));\n+                        break;\n+                    case MODEL_NUMBER_STRING:\n+                        device.setModel(characteristic.getStringValue(0));\n+                        break;\n+                    case SERIAL_NUMBER_STRING:\n+                        device.setSerialNumberl(characteristic.getStringValue(0));\n+                        break;\n+                    case HARDWARE_REVISION_STRING:\n+                        device.setHardwareRevision(characteristic.getStringValue(0));\n+                        break;\n+                    case FIRMWARE_REVISION_STRING:\n+                        device.setFirmwareRevision(characteristic.getStringValue(0));\n+                        break;\n+                    case SOFTWARE_REVISION_STRING:\n+                        device.setSoftwareRevision(characteristic.getStringValue(0));\n+                        break;\n+                    default:\n+                        break;\n+                }\n+            }\n+\n+            if (ongoingCharacteristic != null) {\n+                if (ongoingCharacteristic.getUuid() == characteristic.getUuid()) {\n+                    ongoingCharacteristic = null;\n+                    infoDiscoveryCondition.signal();\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78ced3a0c3bbb6035aa44d7d207f508156111764"}, "originalPosition": 150}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ec70a2ba24678bd7feaea1d6b0fa1282fdd798c", "author": {"user": {"login": "paulianttila", "name": "pali"}}, "url": "https://github.com/openhab/openhab-addons/commit/3ec70a2ba24678bd7feaea1d6b0fa1282fdd798c", "committedDate": "2020-03-12T20:56:39Z", "message": "Suggested change\n\nSigned-off-by: Pauli Anttila <pauli.anttila@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1151, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}