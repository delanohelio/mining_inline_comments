{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzM5Mjk3", "number": 7940, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMToyNTo1OVrOEG9ihA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0OTowOVrOEHMcEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzM1MTcyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitCommandExtension.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMToyNTo1OVrOGmFIjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjo0NToxMFrOGmJ12Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4MzE4MA==", "bodyText": "You should be able to remove this try/catch now", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442583180", "createdAt": "2020-06-19T01:25:59Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitCommandExtension.java", "diffHunk": "@@ -127,8 +116,7 @@ public void unsetHomekit(Homekit homekit) {\n \n     private void clearHomekitPairings(Console console) {\n         try {\n-            new HomekitAuthInfoImpl(storageService, null).clear();\n-            homekit.refreshAuthInfo();\n+            homekit.clearHomekitPairings();\n             console.println(\"Cleared HomeKit pairings\");\n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MDMxMw==", "bodyText": "right. removed.", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442660313", "createdAt": "2020-06-19T06:45:10Z", "author": {"login": "yfre"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitCommandExtension.java", "diffHunk": "@@ -127,8 +116,7 @@ public void unsetHomekit(Homekit homekit) {\n \n     private void clearHomekitPairings(Console console) {\n         try {\n-            new HomekitAuthInfoImpl(storageService, null).clear();\n-            homekit.refreshAuthInfo();\n+            homekit.clearHomekitPairings();\n             console.println(\"Cleared HomeKit pairings\");\n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4MzE4MA=="}, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzM1OTYyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMTozMDo1OFrOGmFNMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0NDo1MVrOGmcwPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDM3MA==", "bodyText": "Instead of this constantly rescheduling itself why not just have it called with a fixed delay.\nThen you can have the future canceled inside of tryActionOrPostpone if it doesn't want to be called again?", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442584370", "createdAt": "2020-06-19T01:30:58Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "diffHunk": "@@ -74,7 +76,14 @@ void call() {\n         lastCallAttempt = clock.millis();\n         calls.incrementAndGet();\n         if (pending.compareAndSet(false, true)) {\n-            scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+            feature = scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2Mjk0Mw==", "bodyText": "im just afraid to touch this working logic. it must be a reason why it was done in this rather complex way.", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442662943", "createdAt": "2020-06-19T06:52:09Z", "author": {"login": "yfre"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "diffHunk": "@@ -74,7 +76,14 @@ void call() {\n         lastCallAttempt = clock.millis();\n         calls.incrementAndGet();\n         if (pending.compareAndSet(false, true)) {\n-            scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+            feature = scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDM3MA=="}, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MDE3Mw==", "bodyText": "Yeah, you are right, it is doing some funky logic. Doesn't look like it can really be changed either. After looking more closely I actually kinda like the way it was designed, so yeah, don't change it.", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442970173", "createdAt": "2020-06-19T17:44:51Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "diffHunk": "@@ -74,7 +76,14 @@ void call() {\n         lastCallAttempt = clock.millis();\n         calls.incrementAndGet();\n         if (pending.compareAndSet(false, true)) {\n-            scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+            feature = scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDM3MA=="}, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzM2Mjk0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwMTozMjo1MlrOGmFPFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzowMTozOVrOGmKO6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDg1NQ==", "bodyText": "should this also change your pending AtomicBoolean here to allow future call attempts?", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442584855", "createdAt": "2020-06-19T01:32:52Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "diffHunk": "@@ -74,7 +76,14 @@ void call() {\n         lastCallAttempt = clock.millis();\n         calls.incrementAndGet();\n         if (pending.compareAndSet(false, true)) {\n-            scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+            feature = scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+        }\n+    }\n+\n+    public void stop() {\n+        logger.trace(\"stop debouncer\");\n+        if (feature != null) {\n+            feature.cancel(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2NjcyOA==", "bodyText": "i was thinking of shutdown use cases, so that Debouncer instance will not get re-started anymore.. but probably it can be the case for bundle stop/start. so, i have added reset of pending and calls.", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442666728", "createdAt": "2020-06-19T07:01:39Z", "author": {"login": "yfre"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/Debouncer.java", "diffHunk": "@@ -74,7 +76,14 @@ void call() {\n         lastCallAttempt = clock.millis();\n         calls.incrementAndGet();\n         if (pending.compareAndSet(false, true)) {\n-            scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+            feature = scheduler.schedule(this::tryActionOrPostpone, delayMs, TimeUnit.MILLISECONDS);\n+        }\n+    }\n+\n+    public void stop() {\n+        logger.trace(\"stop debouncer\");\n+        if (feature != null) {\n+            feature.cancel(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU4NDg1NQ=="}, "originalCommit": {"oid": "1d3723180cd7fc6ba4df6df15d75a38c5b0570e4"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTc0ODQzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzozMjowOFrOGmcbjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNDozNjo0NVrOGmm2hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDg3Nw==", "bodyText": "shouldn't this have an override annotation?", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442964877", "createdAt": "2020-06-19T17:32:08Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java", "diffHunk": "@@ -203,4 +206,15 @@ public void allowUnauthenticatedRequests(boolean allow) {\n     public List<HomekitAccessory> getAccessories() {\n         return new ArrayList<HomekitAccessory>(this.changeListener.getAccessories().values());\n     }\n+\n+    public void clearHomekitPairings() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff141b3a363802c630a9be9319d68d7e146ed817"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNTYyMQ==", "bodyText": "right. done", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r443135621", "createdAt": "2020-06-20T14:36:45Z", "author": {"login": "yfre"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitImpl.java", "diffHunk": "@@ -203,4 +206,15 @@ public void allowUnauthenticatedRequests(boolean allow) {\n     public List<HomekitAccessory> getAccessories() {\n         return new ArrayList<HomekitAccessory>(this.changeListener.getAccessories().values());\n     }\n+\n+    public void clearHomekitPairings() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk2NDg3Nw=="}, "originalCommit": {"oid": "ff141b3a363802c630a9be9319d68d7e146ed817"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTc5MjgyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitAuthInfoImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNzo0OTowOVrOGmc3xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxNDo0NjozOVrOGmm5Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjEwMQ==", "bodyText": "Seems wasteful to make multiple calls to storage.get during initialization. You have no idea what kind of storage is used nor how performant that storage is. Please try to minimize interactions with storage as much as possible.", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r442972101", "createdAt": "2020-06-19T17:49:09Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitAuthInfoImpl.java", "diffHunk": "@@ -41,13 +40,13 @@\n     private final byte[] privateKey;\n     private final String pin;\n \n-    public HomekitAuthInfoImpl(StorageService storageService, String pin) throws InvalidAlgorithmParameterException {\n-        storage = storageService.getStorage(\"homekit\");\n-        initializeStorage();\n+    public HomekitAuthInfoImpl(final Storage storage, final String pin) throws InvalidAlgorithmParameterException {\n+        this.storage = storage;\n         this.pin = pin;\n-        mac = storage.get(\"mac\");\n-        salt = new BigInteger(storage.get(\"salt\"));\n-        privateKey = Base64.getDecoder().decode(storage.get(\"privateKey\"));\n+        initializeStorage();\n+        mac = this.storage.get(\"mac\");\n+        salt = new BigInteger(this.storage.get(\"salt\"));\n+        privateKey = Base64.getDecoder().decode(this.storage.get(\"privateKey\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff141b3a363802c630a9be9319d68d7e146ed817"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEzNjM1OA==", "bodyText": "i dont think we can really delay the gets and make kind of lazy loading. homekit need mac, salt and private key to start the server.\nbut i could reduce number of gets by moving them to initializeStorage. please take a look.", "url": "https://github.com/openhab/openhab-addons/pull/7940#discussion_r443136358", "createdAt": "2020-06-20T14:46:39Z", "author": {"login": "yfre"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/HomekitAuthInfoImpl.java", "diffHunk": "@@ -41,13 +40,13 @@\n     private final byte[] privateKey;\n     private final String pin;\n \n-    public HomekitAuthInfoImpl(StorageService storageService, String pin) throws InvalidAlgorithmParameterException {\n-        storage = storageService.getStorage(\"homekit\");\n-        initializeStorage();\n+    public HomekitAuthInfoImpl(final Storage storage, final String pin) throws InvalidAlgorithmParameterException {\n+        this.storage = storage;\n         this.pin = pin;\n-        mac = storage.get(\"mac\");\n-        salt = new BigInteger(storage.get(\"salt\"));\n-        privateKey = Base64.getDecoder().decode(storage.get(\"privateKey\"));\n+        initializeStorage();\n+        mac = this.storage.get(\"mac\");\n+        salt = new BigInteger(this.storage.get(\"salt\"));\n+        privateKey = Base64.getDecoder().decode(this.storage.get(\"privateKey\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk3MjEwMQ=="}, "originalCommit": {"oid": "ff141b3a363802c630a9be9319d68d7e146ed817"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4817, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}