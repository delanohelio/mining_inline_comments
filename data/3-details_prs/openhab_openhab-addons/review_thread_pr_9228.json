{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNzQwOTAx", "number": 9228, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjowNjo0MlrOFBnNQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjowNjo0MlrOFBnNQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MjM1MjY0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNjowNjo0MlrOIAXT8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wOVQxMDo0MDoxNFrOJGPkSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA==", "bodyText": "I think quickly cycling the handler (initialize->dispose->initialize) would cause multiple Coordinator instances to be created simultaneously and also lose track of one of them.", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r537252850", "createdAt": "2020-12-07T06:06:42Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java", "diffHunk": "@@ -88,26 +88,31 @@ public void initialize() {\n         ChromecastConfig config = getConfigAs(ChromecastConfig.class);\n \n         final String ipAddress = config.ipAddress;\n-        if (ipAddress == null || ipAddress.isEmpty()) {\n+        if (ipAddress == null || ipAddress.isBlank()) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.CONFIGURATION_ERROR,\n                     \"Cannot connect to Chromecast. IP address is not valid or missing.\");\n             return;\n         }\n \n-        Coordinator localCoordinator = coordinator;\n-        if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n-                || (localCoordinator.chromeCast.getPort() != config.port))) {\n-            localCoordinator.destroy();\n-            localCoordinator = coordinator = null;\n-        }\n+        updateStatus(ThingStatus.UNKNOWN);\n \n-        if (localCoordinator == null) {\n-            ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n-            localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n-                    callbackUrl);\n-            localCoordinator.initialize();\n-            coordinator = localCoordinator;\n-        }\n+        scheduler.submit(() -> {\n+            // initialize connection to devices asynchronously\n+            Coordinator localCoordinator = coordinator;\n+            if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n+                    || localCoordinator.chromeCast.getPort() != config.port)) {\n+                localCoordinator.destroy();\n+                localCoordinator = coordinator = null;\n+            }\n+\n+            if (localCoordinator == null) {\n+                ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n+                localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n+                        callbackUrl);\n+                localCoordinator.initialize();\n+                coordinator = localCoordinator;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "980e97ec4d9c6276618a22103696bde26668088b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgzNzkxMg==", "bodyText": "Okay. Calling the coordinator.initialize() method asynchronously and keep the instance creating like before should work either.", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r537837912", "createdAt": "2020-12-07T21:15:20Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java", "diffHunk": "@@ -88,26 +88,31 @@ public void initialize() {\n         ChromecastConfig config = getConfigAs(ChromecastConfig.class);\n \n         final String ipAddress = config.ipAddress;\n-        if (ipAddress == null || ipAddress.isEmpty()) {\n+        if (ipAddress == null || ipAddress.isBlank()) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.CONFIGURATION_ERROR,\n                     \"Cannot connect to Chromecast. IP address is not valid or missing.\");\n             return;\n         }\n \n-        Coordinator localCoordinator = coordinator;\n-        if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n-                || (localCoordinator.chromeCast.getPort() != config.port))) {\n-            localCoordinator.destroy();\n-            localCoordinator = coordinator = null;\n-        }\n+        updateStatus(ThingStatus.UNKNOWN);\n \n-        if (localCoordinator == null) {\n-            ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n-            localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n-                    callbackUrl);\n-            localCoordinator.initialize();\n-            coordinator = localCoordinator;\n-        }\n+        scheduler.submit(() -> {\n+            // initialize connection to devices asynchronously\n+            Coordinator localCoordinator = coordinator;\n+            if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n+                    || localCoordinator.chromeCast.getPort() != config.port)) {\n+                localCoordinator.destroy();\n+                localCoordinator = coordinator = null;\n+            }\n+\n+            if (localCoordinator == null) {\n+                ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n+                localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n+                        callbackUrl);\n+                localCoordinator.initialize();\n+                coordinator = localCoordinator;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA=="}, "originalCommit": {"oid": "980e97ec4d9c6276618a22103696bde26668088b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg2MDU0Nw==", "bodyText": "Only if coordinator.initialize() is synchronized along with coordinator.destroy() as well as adding an early exit in coordinator.initialize() if coordinator.destroy() was called first.\nI think that would make it thread safe.", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r537860547", "createdAt": "2020-12-07T21:53:33Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java", "diffHunk": "@@ -88,26 +88,31 @@ public void initialize() {\n         ChromecastConfig config = getConfigAs(ChromecastConfig.class);\n \n         final String ipAddress = config.ipAddress;\n-        if (ipAddress == null || ipAddress.isEmpty()) {\n+        if (ipAddress == null || ipAddress.isBlank()) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.CONFIGURATION_ERROR,\n                     \"Cannot connect to Chromecast. IP address is not valid or missing.\");\n             return;\n         }\n \n-        Coordinator localCoordinator = coordinator;\n-        if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n-                || (localCoordinator.chromeCast.getPort() != config.port))) {\n-            localCoordinator.destroy();\n-            localCoordinator = coordinator = null;\n-        }\n+        updateStatus(ThingStatus.UNKNOWN);\n \n-        if (localCoordinator == null) {\n-            ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n-            localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n-                    callbackUrl);\n-            localCoordinator.initialize();\n-            coordinator = localCoordinator;\n-        }\n+        scheduler.submit(() -> {\n+            // initialize connection to devices asynchronously\n+            Coordinator localCoordinator = coordinator;\n+            if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n+                    || localCoordinator.chromeCast.getPort() != config.port)) {\n+                localCoordinator.destroy();\n+                localCoordinator = coordinator = null;\n+            }\n+\n+            if (localCoordinator == null) {\n+                ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n+                localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n+                        callbackUrl);\n+                localCoordinator.initialize();\n+                coordinator = localCoordinator;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA=="}, "originalCommit": {"oid": "980e97ec4d9c6276618a22103696bde26668088b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMDA5ODc1Nw==", "bodyText": "@cweitkamp Do you have this PR still on your radar?", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r610098757", "createdAt": "2021-04-08T20:57:14Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java", "diffHunk": "@@ -88,26 +88,31 @@ public void initialize() {\n         ChromecastConfig config = getConfigAs(ChromecastConfig.class);\n \n         final String ipAddress = config.ipAddress;\n-        if (ipAddress == null || ipAddress.isEmpty()) {\n+        if (ipAddress == null || ipAddress.isBlank()) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.CONFIGURATION_ERROR,\n                     \"Cannot connect to Chromecast. IP address is not valid or missing.\");\n             return;\n         }\n \n-        Coordinator localCoordinator = coordinator;\n-        if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n-                || (localCoordinator.chromeCast.getPort() != config.port))) {\n-            localCoordinator.destroy();\n-            localCoordinator = coordinator = null;\n-        }\n+        updateStatus(ThingStatus.UNKNOWN);\n \n-        if (localCoordinator == null) {\n-            ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n-            localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n-                    callbackUrl);\n-            localCoordinator.initialize();\n-            coordinator = localCoordinator;\n-        }\n+        scheduler.submit(() -> {\n+            // initialize connection to devices asynchronously\n+            Coordinator localCoordinator = coordinator;\n+            if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n+                    || localCoordinator.chromeCast.getPort() != config.port)) {\n+                localCoordinator.destroy();\n+                localCoordinator = coordinator = null;\n+            }\n+\n+            if (localCoordinator == null) {\n+                ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n+                localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n+                        callbackUrl);\n+                localCoordinator.initialize();\n+                coordinator = localCoordinator;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA=="}, "originalCommit": {"oid": "980e97ec4d9c6276618a22103696bde26668088b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMDUyNjI4MA==", "bodyText": "@kaikreuzer Thanks for the reminder. I updated the PR with the suggested solution above.", "url": "https://github.com/openhab/openhab-addons/pull/9228#discussion_r610526280", "createdAt": "2021-04-09T10:40:14Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.chromecast/src/main/java/org/openhab/binding/chromecast/internal/handler/ChromecastHandler.java", "diffHunk": "@@ -88,26 +88,31 @@ public void initialize() {\n         ChromecastConfig config = getConfigAs(ChromecastConfig.class);\n \n         final String ipAddress = config.ipAddress;\n-        if (ipAddress == null || ipAddress.isEmpty()) {\n+        if (ipAddress == null || ipAddress.isBlank()) {\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.OFFLINE.CONFIGURATION_ERROR,\n                     \"Cannot connect to Chromecast. IP address is not valid or missing.\");\n             return;\n         }\n \n-        Coordinator localCoordinator = coordinator;\n-        if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n-                || (localCoordinator.chromeCast.getPort() != config.port))) {\n-            localCoordinator.destroy();\n-            localCoordinator = coordinator = null;\n-        }\n+        updateStatus(ThingStatus.UNKNOWN);\n \n-        if (localCoordinator == null) {\n-            ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n-            localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n-                    callbackUrl);\n-            localCoordinator.initialize();\n-            coordinator = localCoordinator;\n-        }\n+        scheduler.submit(() -> {\n+            // initialize connection to devices asynchronously\n+            Coordinator localCoordinator = coordinator;\n+            if (localCoordinator != null && (!localCoordinator.chromeCast.getAddress().equals(ipAddress)\n+                    || localCoordinator.chromeCast.getPort() != config.port)) {\n+                localCoordinator.destroy();\n+                localCoordinator = coordinator = null;\n+            }\n+\n+            if (localCoordinator == null) {\n+                ChromeCast chromecast = new ChromeCast(ipAddress, config.port);\n+                localCoordinator = new Coordinator(this, thing, chromecast, config.refreshRate, audioHTTPServer,\n+                        callbackUrl);\n+                localCoordinator.initialize();\n+                coordinator = localCoordinator;\n+            }\n+        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1Mjg1MA=="}, "originalCommit": {"oid": "980e97ec4d9c6276618a22103696bde26668088b"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3848, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}