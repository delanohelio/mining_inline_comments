{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTgyOTE1", "number": 6889, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODowMTowMlrODZ7KOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyMzoyMFrODZ8quw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTEwMjY0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.xmltv/src/main/feature/feature.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODowMTowMlrOFglodA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxODoyMjozMlrOFgmP1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxNTMxNg==", "bodyText": "Tags are preferred to be on a single line in feature files. Unfortunately spotless put the on a separate line. There is a fix for that, but not yet applied here. So could you put this features rag on a single line.", "url": "https://github.com/openhab/openhab-addons/pull/6889#discussion_r369715316", "createdAt": "2020-01-22T18:01:02Z", "author": {"login": "Hilbrand"}, "path": "bundles/org.openhab.binding.xmltv/src/main/feature/feature.xml", "diffHunk": "@@ -1,10 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<features name=\"org.openhab.binding.xmltv-${project.version}\" xmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">\n-    <repository>mvn:org.openhab.core.features.karaf/org.openhab.core.features.karaf.openhab-core/${ohc.version}/xml/features</repository>\n+<features name=\"org.openhab.binding.xmltv-${project.version}\"\n+\txmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b77d4cc1436f5384a0af8f7e3eb7d9e79a743d15"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcyNTM5Ng==", "bodyText": "Yes, sure and this indeed was caused by the spotless formatter.", "url": "https://github.com/openhab/openhab-addons/pull/6889#discussion_r369725396", "createdAt": "2020-01-22T18:22:32Z", "author": {"login": "radokristof"}, "path": "bundles/org.openhab.binding.xmltv/src/main/feature/feature.xml", "diffHunk": "@@ -1,10 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<features name=\"org.openhab.binding.xmltv-${project.version}\" xmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">\n-    <repository>mvn:org.openhab.core.features.karaf/org.openhab.core.features.karaf.openhab-core/${ohc.version}/xml/features</repository>\n+<features name=\"org.openhab.binding.xmltv-${project.version}\"\n+\txmlns=\"http://karaf.apache.org/xmlns/features/v1.4.0\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTcxNTMxNg=="}, "originalCommit": {"oid": "b77d4cc1436f5384a0af8f7e3eb7d9e79a743d15"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTM0OTcxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.xmltv/src/main/java/org/openhab/binding/xmltv/internal/handler/XmlTVHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyMzoyMFrOFgoF5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyODoyOVrOFgoQGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1NTYyMg==", "bodyText": "Is it really needed to have the encoding here? Using FileInputStream should return binary data and in my understanding this should be workling out of the box.", "url": "https://github.com/openhab/openhab-addons/pull/6889#discussion_r369755622", "createdAt": "2020-01-22T19:23:20Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.xmltv/src/main/java/org/openhab/binding/xmltv/internal/handler/XmlTVHandler.java", "diffHunk": "@@ -67,12 +69,11 @@ public void initialize() {\n         logger.debug(\"Initializing {} for input file '{}'\", getClass(), config.filePath);\n \n         reloadJob = scheduler.scheduleWithFixedDelay(() -> {\n-            final StreamSource source = new StreamSource(config.filePath);\n             currentXmlFile = null;\n             XMLStreamReader xsr = null;\n             try {\n                 // This can take some seconds depending upon weight of the XmlTV source file\n-                xsr = xif.createXMLStreamReader(source);\n+                xsr = xif.createXMLStreamReader(new FileInputStream(new File(config.filePath)), config.encoding);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9233bf0f5fd7d02acaf301855bba3c2e8816f1f5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODIzNA==", "bodyText": "Unfortunately not and I don't know why.\nTried it without encoding, for example this text should be: \"besz\u00e9d\" and I got \"besz\u0102\u0160d\".\nIf I use that approach and with UTF8 encoding, I get the correct output. But I don't know why different encodings are used in XMLTV maybe this is different in each grabber so that's why I wanted to leave it as an option. Usually I think UTF8 will be good and no modification is needed from the user...", "url": "https://github.com/openhab/openhab-addons/pull/6889#discussion_r369758234", "createdAt": "2020-01-22T19:28:29Z", "author": {"login": "radokristof"}, "path": "bundles/org.openhab.binding.xmltv/src/main/java/org/openhab/binding/xmltv/internal/handler/XmlTVHandler.java", "diffHunk": "@@ -67,12 +69,11 @@ public void initialize() {\n         logger.debug(\"Initializing {} for input file '{}'\", getClass(), config.filePath);\n \n         reloadJob = scheduler.scheduleWithFixedDelay(() -> {\n-            final StreamSource source = new StreamSource(config.filePath);\n             currentXmlFile = null;\n             XMLStreamReader xsr = null;\n             try {\n                 // This can take some seconds depending upon weight of the XmlTV source file\n-                xsr = xif.createXMLStreamReader(source);\n+                xsr = xif.createXMLStreamReader(new FileInputStream(new File(config.filePath)), config.encoding);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1NTYyMg=="}, "originalCommit": {"oid": "9233bf0f5fd7d02acaf301855bba3c2e8816f1f5"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1115, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}