{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNDU2NjQ0", "number": 7777, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDoxNDowNVrOD_PDrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDoxNDowNVrOD_PDrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjMzNTgzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/HomekitTemperatureSensorImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDoxNDowNVrOGZyLwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMTo1MToyOFrOGZy8mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4OTc5Mg==", "bodyText": "It bothers me that you have these duplicate methods for converting to and from Celsius.\nFor the sake of refactoring I'd prefer if you use this utility method to handle all your conversions and rounding.\n\n    private <T extends Quantity<T>> double convertAndRound(double value, Unit<T> from, Unit<T> to) {\n        double rawValue = from == to ? value : from.getConverterTo(to).convert(value);\n        return new BigDecimal(rawValue).setScale(1, RoundingMode.HALF_UP).doubleValue();\n    }\n\nThen you can make your methods look like this:\nprotected double convertToCelsius(double degrees){\n     return convertAndRound(degrees, getSettings().useFahrenheitTemperature ? ImperialUnits.FAHRENHEIT : SIUnits.CELSIUS, SIUnits.CELSIUS);\n}\n\nprotected double convertFromCelsius(double degrees){\n     return convertAndRound(degrees, getSettings().useFahrenheitTemperature ? SIUnits.CELSIUS : ImperialUnits.FAHRENHEIT, ImperialUnits.FAHRENHEIT);\n}\n\nAlso, I would like you to find someway to get rid of the code duplication of these methods in HomekitTemperatureSensorImpl and HomekitTermostatImpl. Either put these methods in a shared superclass or put them in a utility class.", "url": "https://github.com/openhab/openhab-addons/pull/7777#discussion_r429689792", "createdAt": "2020-05-25T00:14:05Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/HomekitTemperatureSensorImpl.java", "diffHunk": "@@ -58,17 +60,23 @@ public void unsubscribeCurrentTemperature() {\n \n     protected double convertToCelsius(double degrees) {\n         if (getSettings().useFahrenheitTemperature) {\n-            return Math.round((5d / 9d) * (degrees - 32d) * 1000d) / 1000d;\n+            double rawConvert = (5d / 9d) * (degrees - 32d);\n+            BigDecimal roundConvert = new BigDecimal(Double.toString(rawConvert)).setScale(1, RoundingMode.HALF_UP);\n+            return roundConvert.doubleValue();\n         } else {\n-            return degrees;\n+            BigDecimal roundConvert = new BigDecimal(Double.toString(degrees)).setScale(1, RoundingMode.HALF_UP);\n+            return roundConvert.doubleValue();\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d9611640aad5eb100003e98a62b07805de68b28"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcwMjI5Nw==", "bodyText": "Is that better?", "url": "https://github.com/openhab/openhab-addons/pull/7777#discussion_r429702297", "createdAt": "2020-05-25T01:51:28Z", "author": {"login": "ecdye"}, "path": "bundles/org.openhab.io.homekit/src/main/java/org/openhab/io/homekit/internal/accessories/HomekitTemperatureSensorImpl.java", "diffHunk": "@@ -58,17 +60,23 @@ public void unsubscribeCurrentTemperature() {\n \n     protected double convertToCelsius(double degrees) {\n         if (getSettings().useFahrenheitTemperature) {\n-            return Math.round((5d / 9d) * (degrees - 32d) * 1000d) / 1000d;\n+            double rawConvert = (5d / 9d) * (degrees - 32d);\n+            BigDecimal roundConvert = new BigDecimal(Double.toString(rawConvert)).setScale(1, RoundingMode.HALF_UP);\n+            return roundConvert.doubleValue();\n         } else {\n-            return degrees;\n+            BigDecimal roundConvert = new BigDecimal(Double.toString(degrees)).setScale(1, RoundingMode.HALF_UP);\n+            return roundConvert.doubleValue();\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY4OTc5Mg=="}, "originalCommit": {"oid": "7d9611640aad5eb100003e98a62b07805de68b28"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4920, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}