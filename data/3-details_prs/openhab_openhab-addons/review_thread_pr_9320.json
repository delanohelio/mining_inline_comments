{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MjAxNjUx", "number": 9320, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzozMDoxNFrOFDy9SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzozMTozNVrOFDy-aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NTI0OTM3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.remoteopenhab/src/main/java/org/openhab/binding/remoteopenhab/internal/rest/RemoteopenhabRestClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzozMDoxNFrOIDniZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNzo1NjozNlrOIDtGTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2NDQyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                while (true) {\n          \n          \n            \n                                    int read = input.read(buffer);\n          \n          \n            \n                                    if (read < 0) {\n          \n          \n            \n                                        break;\n          \n          \n            \n                                    }\n          \n          \n            \n                                    responseContent.write(buffer, 0, read);\n          \n          \n            \n                                }\n          \n          \n            \n                                input.transferTo(responseContent);", "url": "https://github.com/openhab/openhab-addons/pull/9320#discussion_r540664420", "createdAt": "2020-12-11T03:30:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.remoteopenhab/src/main/java/org/openhab/binding/remoteopenhab/internal/rest/RemoteopenhabRestClient.java", "diffHunk": "@@ -481,15 +489,39 @@ public String executeUrl(HttpMethod httpMethod, String url, String acceptHeader,\n         }\n \n         try {\n-            ContentResponse response = request.send();\n-            int statusCode = response.getStatus();\n-            if (statusCode >= HttpStatus.BAD_REQUEST_400) {\n-                String statusLine = statusCode + \" \" + response.getReason();\n-                throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+            if (asyncReading) {\n+                InputStreamResponseListener listener = new InputStreamResponseListener();\n+                request.send(listener);\n+                Response response = listener.get(5, TimeUnit.SECONDS);\n+                int statusCode = response.getStatus();\n+                if (statusCode != HttpStatus.OK_200) {\n+                    response.abort(new Exception(response.getReason()));\n+                    String statusLine = statusCode + \" \" + response.getReason();\n+                    throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+                }\n+                ByteArrayOutputStream responseContent = new ByteArrayOutputStream();\n+                byte[] buffer = new byte[256];\n+                try (InputStream input = listener.getInputStream()) {\n+                    while (true) {\n+                        int read = input.read(buffer);\n+                        if (read < 0) {\n+                            break;\n+                        }\n+                        responseContent.write(buffer, 0, read);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64b4de48c9b0a9dc645a40d815ad77a611dbc0e"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc1NTUzNA==", "bodyText": "Cool, we have a method to do that.", "url": "https://github.com/openhab/openhab-addons/pull/9320#discussion_r540755534", "createdAt": "2020-12-11T07:56:36Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.remoteopenhab/src/main/java/org/openhab/binding/remoteopenhab/internal/rest/RemoteopenhabRestClient.java", "diffHunk": "@@ -481,15 +489,39 @@ public String executeUrl(HttpMethod httpMethod, String url, String acceptHeader,\n         }\n \n         try {\n-            ContentResponse response = request.send();\n-            int statusCode = response.getStatus();\n-            if (statusCode >= HttpStatus.BAD_REQUEST_400) {\n-                String statusLine = statusCode + \" \" + response.getReason();\n-                throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+            if (asyncReading) {\n+                InputStreamResponseListener listener = new InputStreamResponseListener();\n+                request.send(listener);\n+                Response response = listener.get(5, TimeUnit.SECONDS);\n+                int statusCode = response.getStatus();\n+                if (statusCode != HttpStatus.OK_200) {\n+                    response.abort(new Exception(response.getReason()));\n+                    String statusLine = statusCode + \" \" + response.getReason();\n+                    throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+                }\n+                ByteArrayOutputStream responseContent = new ByteArrayOutputStream();\n+                byte[] buffer = new byte[256];\n+                try (InputStream input = listener.getInputStream()) {\n+                    while (true) {\n+                        int read = input.read(buffer);\n+                        if (read < 0) {\n+                            break;\n+                        }\n+                        responseContent.write(buffer, 0, read);\n+                    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2NDQyMA=="}, "originalCommit": {"oid": "d64b4de48c9b0a9dc645a40d815ad77a611dbc0e"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NTI1MjI0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.remoteopenhab/src/main/java/org/openhab/binding/remoteopenhab/internal/rest/RemoteopenhabRestClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzozMTozNVrOIDnkDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzozMTozNVrOIDnkDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY2NDg0NA==", "bodyText": "You are wrapping RemoteopenhabException in another RemoteopenhabException?", "url": "https://github.com/openhab/openhab-addons/pull/9320#discussion_r540664844", "createdAt": "2020-12-11T03:31:35Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.remoteopenhab/src/main/java/org/openhab/binding/remoteopenhab/internal/rest/RemoteopenhabRestClient.java", "diffHunk": "@@ -481,15 +489,39 @@ public String executeUrl(HttpMethod httpMethod, String url, String acceptHeader,\n         }\n \n         try {\n-            ContentResponse response = request.send();\n-            int statusCode = response.getStatus();\n-            if (statusCode >= HttpStatus.BAD_REQUEST_400) {\n-                String statusLine = statusCode + \" \" + response.getReason();\n-                throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+            if (asyncReading) {\n+                InputStreamResponseListener listener = new InputStreamResponseListener();\n+                request.send(listener);\n+                Response response = listener.get(5, TimeUnit.SECONDS);\n+                int statusCode = response.getStatus();\n+                if (statusCode != HttpStatus.OK_200) {\n+                    response.abort(new Exception(response.getReason()));\n+                    String statusLine = statusCode + \" \" + response.getReason();\n+                    throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+                }\n+                ByteArrayOutputStream responseContent = new ByteArrayOutputStream();\n+                byte[] buffer = new byte[256];\n+                try (InputStream input = listener.getInputStream()) {\n+                    while (true) {\n+                        int read = input.read(buffer);\n+                        if (read < 0) {\n+                            break;\n+                        }\n+                        responseContent.write(buffer, 0, read);\n+                    }\n+                }\n+                return new String(responseContent.toByteArray(), StandardCharsets.UTF_8.name());\n+            } else {\n+                ContentResponse response = request.send();\n+                int statusCode = response.getStatus();\n+                if (statusCode >= HttpStatus.BAD_REQUEST_400) {\n+                    String statusLine = statusCode + \" \" + response.getReason();\n+                    throw new RemoteopenhabException(\"HTTP call failed: \" + statusLine);\n+                }\n+                String encoding = response.getEncoding() != null ? response.getEncoding().replaceAll(\"\\\"\", \"\").trim()\n+                        : StandardCharsets.UTF_8.name();\n+                return new String(response.getContent(), encoding);\n             }\n-            String encoding = response.getEncoding() != null ? response.getEncoding().replaceAll(\"\\\"\", \"\").trim()\n-                    : StandardCharsets.UTF_8.name();\n-            return new String(response.getContent(), encoding);\n         } catch (Exception e) {\n             throw new RemoteopenhabException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d64b4de48c9b0a9dc645a40d815ad77a611dbc0e"}, "originalPosition": 133}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3617, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}