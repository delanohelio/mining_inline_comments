{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxODU1MDEy", "number": 8743, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMzo1ODo0NFrOEs0X5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMzo1ODo0NFrOEs0X5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDMwODg3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/README.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMzo1ODo0NFrOHgQ_YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMzozOTo0OVrOHhrNJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5NDg0OA==", "bodyText": "Can you use units here?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Number temperature \"Temperature\" (G_heater) {channel=\"miio:basic:heater:temperature\"}\n          \n          \n            \n            Number:Temperature temperature \"Temperature\" (G_heater) {channel=\"miio:basic:heater:temperature\"}", "url": "https://github.com/openhab/openhab-addons/pull/8743#discussion_r503594848", "createdAt": "2020-10-12T23:58:44Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/README.md", "diffHunk": "@@ -6116,4 +6131,21 @@ String customScene \"Set Scene\" (G_light) {channel=\"miio:basic:light:customScene\"\n Number nightlightBrightness \"Nightlight Brightness\" (G_light) {channel=\"miio:basic:light:nightlightBrightness\"}\n ```\n \n+### Zhimi Heater (zhimi.heater.za1) item file lines\n+\n+note: Autogenerated example. Replace the id (heater) in the channel with your own. Replace `basic` with `generic` in the thing UID depending on how your thing was discovered.\n+\n+```java\n+Group G_heater \"Zhimi Heater\" <status>\n+Switch power \"Power\" (G_heater) {channel=\"miio:basic:heater:power\"}\n+Number target_temperature \"Target Temperature\" (G_heater) {channel=\"miio:basic:heater:target_temperature\"}\n+Number brightness \"Brightness\" (G_heater) {channel=\"miio:basic:heater:brightness\"}\n+Switch buzzer \"Buzzer Status\" (G_heater) {channel=\"miio:basic:heater:buzzer\"}\n+Number relative_humidity \"Relative Humidity\" (G_heater) {channel=\"miio:basic:heater:relative_humidity\"}\n+Switch childlock \"Child Lock\" (G_heater) {channel=\"miio:basic:heater:childlock\"}\n+Switch HWSwitch \"HW Switch\" (G_heater) {channel=\"miio:basic:heater:HWSwitch\"}\n+Number temperature \"Temperature\" (G_heater) {channel=\"miio:basic:heater:temperature\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4c75203daad3c7283cacb86dfd33844ec0d97eb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyODEwNw==", "bodyText": "the honest answer is... I don't know.\nThe documentation https://www.openhab.org/docs/developer/bindings/thing-xml.html#channels does not have much explanation,\nI'm not too clear  anymore on the difference between the Number:Temperature  vs channel-type     <category>Temperature</category> vs   new QuantityType<>(temperature, SIUnits.CELSIUS));\nas I create all channels dynamically, is it enough to just change the datatype to Number:Temperature when the channel is created like:    Channel newChannel = ChannelBuilder.create(channelUID, datatype). .withLabel(friendlyName).build();\nAnd if I create it that way, does it require the quantity type in the update or not...\nanyway... in my wishlist #7276 I do have the wish to somehow implement this... but is not too high on my priority list...  as I don't understand it well enough, don't understand the big advantage if it is there....  and am bit afraid it breaks things...", "url": "https://github.com/openhab/openhab-addons/pull/8743#discussion_r504128107", "createdAt": "2020-10-13T17:19:13Z", "author": {"login": "marcelrv"}, "path": "bundles/org.openhab.binding.miio/README.md", "diffHunk": "@@ -6116,4 +6131,21 @@ String customScene \"Set Scene\" (G_light) {channel=\"miio:basic:light:customScene\"\n Number nightlightBrightness \"Nightlight Brightness\" (G_light) {channel=\"miio:basic:light:nightlightBrightness\"}\n ```\n \n+### Zhimi Heater (zhimi.heater.za1) item file lines\n+\n+note: Autogenerated example. Replace the id (heater) in the channel with your own. Replace `basic` with `generic` in the thing UID depending on how your thing was discovered.\n+\n+```java\n+Group G_heater \"Zhimi Heater\" <status>\n+Switch power \"Power\" (G_heater) {channel=\"miio:basic:heater:power\"}\n+Number target_temperature \"Target Temperature\" (G_heater) {channel=\"miio:basic:heater:target_temperature\"}\n+Number brightness \"Brightness\" (G_heater) {channel=\"miio:basic:heater:brightness\"}\n+Switch buzzer \"Buzzer Status\" (G_heater) {channel=\"miio:basic:heater:buzzer\"}\n+Number relative_humidity \"Relative Humidity\" (G_heater) {channel=\"miio:basic:heater:relative_humidity\"}\n+Switch childlock \"Child Lock\" (G_heater) {channel=\"miio:basic:heater:childlock\"}\n+Switch HWSwitch \"HW Switch\" (G_heater) {channel=\"miio:basic:heater:HWSwitch\"}\n+Number temperature \"Temperature\" (G_heater) {channel=\"miio:basic:heater:temperature\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5NDg0OA=="}, "originalCommit": {"oid": "a4c75203daad3c7283cacb86dfd33844ec0d97eb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3OTQxMQ==", "bodyText": "as I create all channels dynamically, is it enough to just change the datatype to Number:Temperature when the channel is created like: Channel newChannel = ChannelBuilder.create(channelUID, datatype). .withLabel(friendlyName).build();\n\nYes, that is all that would be necessary. At that point you just need to use QuantityType instead of DecimalType for those relevant channels. and also make sure to use QuantityType.toUnit() when processing the state from handleCommand.\nQuantityType allows users to use different units for their UI. For example a binding may report temperature in C but the user wants it displayed as F.\nYou don't need to make the transition just yet, but please plan for it.", "url": "https://github.com/openhab/openhab-addons/pull/8743#discussion_r504979411", "createdAt": "2020-10-14T21:21:40Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/README.md", "diffHunk": "@@ -6116,4 +6131,21 @@ String customScene \"Set Scene\" (G_light) {channel=\"miio:basic:light:customScene\"\n Number nightlightBrightness \"Nightlight Brightness\" (G_light) {channel=\"miio:basic:light:nightlightBrightness\"}\n ```\n \n+### Zhimi Heater (zhimi.heater.za1) item file lines\n+\n+note: Autogenerated example. Replace the id (heater) in the channel with your own. Replace `basic` with `generic` in the thing UID depending on how your thing was discovered.\n+\n+```java\n+Group G_heater \"Zhimi Heater\" <status>\n+Switch power \"Power\" (G_heater) {channel=\"miio:basic:heater:power\"}\n+Number target_temperature \"Target Temperature\" (G_heater) {channel=\"miio:basic:heater:target_temperature\"}\n+Number brightness \"Brightness\" (G_heater) {channel=\"miio:basic:heater:brightness\"}\n+Switch buzzer \"Buzzer Status\" (G_heater) {channel=\"miio:basic:heater:buzzer\"}\n+Number relative_humidity \"Relative Humidity\" (G_heater) {channel=\"miio:basic:heater:relative_humidity\"}\n+Switch childlock \"Child Lock\" (G_heater) {channel=\"miio:basic:heater:childlock\"}\n+Switch HWSwitch \"HW Switch\" (G_heater) {channel=\"miio:basic:heater:HWSwitch\"}\n+Number temperature \"Temperature\" (G_heater) {channel=\"miio:basic:heater:temperature\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5NDg0OA=="}, "originalCommit": {"oid": "a4c75203daad3c7283cacb86dfd33844ec0d97eb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA3MjkzNA==", "bodyText": "yes, made placeholder #8756 for it.\nTemperature updates are fine, but still need test  how to conveniently go from a unit string to a Unit\ne.g. from \"Celcius\" to  Units.CELSIUS in a generic way", "url": "https://github.com/openhab/openhab-addons/pull/8743#discussion_r505072934", "createdAt": "2020-10-14T23:39:49Z", "author": {"login": "marcelrv"}, "path": "bundles/org.openhab.binding.miio/README.md", "diffHunk": "@@ -6116,4 +6131,21 @@ String customScene \"Set Scene\" (G_light) {channel=\"miio:basic:light:customScene\"\n Number nightlightBrightness \"Nightlight Brightness\" (G_light) {channel=\"miio:basic:light:nightlightBrightness\"}\n ```\n \n+### Zhimi Heater (zhimi.heater.za1) item file lines\n+\n+note: Autogenerated example. Replace the id (heater) in the channel with your own. Replace `basic` with `generic` in the thing UID depending on how your thing was discovered.\n+\n+```java\n+Group G_heater \"Zhimi Heater\" <status>\n+Switch power \"Power\" (G_heater) {channel=\"miio:basic:heater:power\"}\n+Number target_temperature \"Target Temperature\" (G_heater) {channel=\"miio:basic:heater:target_temperature\"}\n+Number brightness \"Brightness\" (G_heater) {channel=\"miio:basic:heater:brightness\"}\n+Switch buzzer \"Buzzer Status\" (G_heater) {channel=\"miio:basic:heater:buzzer\"}\n+Number relative_humidity \"Relative Humidity\" (G_heater) {channel=\"miio:basic:heater:relative_humidity\"}\n+Switch childlock \"Child Lock\" (G_heater) {channel=\"miio:basic:heater:childlock\"}\n+Switch HWSwitch \"HW Switch\" (G_heater) {channel=\"miio:basic:heater:HWSwitch\"}\n+Number temperature \"Temperature\" (G_heater) {channel=\"miio:basic:heater:temperature\"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5NDg0OA=="}, "originalCommit": {"oid": "a4c75203daad3c7283cacb86dfd33844ec0d97eb"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4267, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}