{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjI5ODQy", "number": 9203, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDoyOTo0MVrOE_3oMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMzo0MVrOFAdaDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NDA3MTUzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDoyOTo0MVrOH9z5qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMDoyOTo0MVrOH9z5qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU3NTUyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (stringMap.containsKey(unitName.toUpperCase())) {\n          \n          \n            \n                        return stringMap.get(unitName.toUpperCase());\n          \n          \n            \n                    }\n          \n          \n            \n                    return aliasMap().get(unitName.toLowerCase());\n          \n          \n            \n                    Unit<?> unit = stringMap.get(unitName.toUpperCase());\n          \n          \n            \n                    if (unit == null) {\n          \n          \n            \n                        unit = aliasMap().get(unitName.toLowerCase());\n          \n          \n            \n                    }\n          \n          \n            \n                    return unit;", "url": "https://github.com/openhab/openhab-addons/pull/9203#discussion_r534575528", "createdAt": "2020-12-03T00:29:41Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "diffHunk": "@@ -33,31 +36,49 @@\n @NonNullByDefault\n public enum MiIoQuantiyTypes {\n \n-    CELCIUS(SIUnits.CELSIUS),\n-    FAHRENHEIT(ImperialUnits.FAHRENHEIT),\n-    SECOND(SmartHomeUnits.SECOND),\n-    MINUTE(SmartHomeUnits.MINUTE),\n-    HOUR(SmartHomeUnits.HOUR),\n-    SECONDS(SmartHomeUnits.SECOND),\n-    MINUTES(SmartHomeUnits.MINUTE),\n-    HOURS(SmartHomeUnits.HOUR),\n-    AMPERE(SmartHomeUnits.AMPERE),\n-    WATT(SmartHomeUnits.WATT);\n+    CELCIUS(SIUnits.CELSIUS, \"C\"),\n+    FAHRENHEIT(ImperialUnits.FAHRENHEIT, \"\"),\n+    SECOND(SmartHomeUnits.SECOND, \"seconds\"),\n+    MINUTE(SmartHomeUnits.MINUTE, \"minutes\"),\n+    HOUR(SmartHomeUnits.HOUR, \"hours\"),\n+    AMPERE(SmartHomeUnits.AMPERE, \"\"),\n+    WATT(SmartHomeUnits.WATT, \"\"),\n+    SQUARE_METRE(Units.SQUARE_METRE, \"square_meter,squaremeter\"),\n+    PERCENT(SmartHomeUnits.PERCENT, \"\");\n \n     private final Unit<?> unit;\n+    private final String aliasses;\n \n     private static Map<String, Unit<?>> stringMap = Arrays.stream(values())\n             .collect(Collectors.toMap(Enum::toString, MiIoQuantiyTypes::getUnit));\n \n-    private MiIoQuantiyTypes(Unit<?> unit) {\n+    private static Map<String, Unit<?>> aliasMap() {\n+        Map<String, Unit<?>> aliassesMap = new HashMap<>();\n+        for (MiIoQuantiyTypes miIoQuantiyType : values()) {\n+            for (String alias : miIoQuantiyType.getAliasses().split(\",\")) {\n+                aliassesMap.put(alias.toLowerCase(), miIoQuantiyType.getUnit());\n+            }\n+        }\n+        return aliassesMap;\n+    }\n+\n+    private MiIoQuantiyTypes(Unit<?> unit, String aliasses) {\n         this.unit = unit;\n+        this.aliasses = aliasses;\n     }\n \n     public Unit<?> getUnit() {\n         return unit;\n     }\n \n+    public String getAliasses() {\n+        return aliasses;\n+    }\n+\n     public static @Nullable Unit<?> get(String unitName) {\n-        return stringMap.get(unitName.toUpperCase());\n+        if (stringMap.containsKey(unitName.toUpperCase())) {\n+            return stringMap.get(unitName.toUpperCase());\n+        }\n+        return aliasMap().get(unitName.toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1561f120a97665ecf927bc00195d862f0036a6e9"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDI0NTg1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMToxM1rOH-w4MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMToxM1rOH-w4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NDU3Nw==", "bodyText": "I see no reason that you need to have your aliases comma separated when you can just have them as an array instead.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private MiIoQuantiyTypes(Unit<?> unit, String aliasses) {\n          \n          \n            \n                private MiIoQuantiyTypes(Unit<?> unit, String... aliasses) {", "url": "https://github.com/openhab/openhab-addons/pull/9203#discussion_r535574577", "createdAt": "2020-12-03T20:31:13Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "diffHunk": "@@ -33,31 +36,49 @@\n @NonNullByDefault\n public enum MiIoQuantiyTypes {\n \n-    CELCIUS(SIUnits.CELSIUS),\n-    FAHRENHEIT(ImperialUnits.FAHRENHEIT),\n-    SECOND(SmartHomeUnits.SECOND),\n-    MINUTE(SmartHomeUnits.MINUTE),\n-    HOUR(SmartHomeUnits.HOUR),\n-    SECONDS(SmartHomeUnits.SECOND),\n-    MINUTES(SmartHomeUnits.MINUTE),\n-    HOURS(SmartHomeUnits.HOUR),\n-    AMPERE(SmartHomeUnits.AMPERE),\n-    WATT(SmartHomeUnits.WATT);\n+    CELCIUS(SIUnits.CELSIUS, \"C\"),\n+    FAHRENHEIT(ImperialUnits.FAHRENHEIT, \"\"),\n+    SECOND(SmartHomeUnits.SECOND, \"seconds\"),\n+    MINUTE(SmartHomeUnits.MINUTE, \"minutes\"),\n+    HOUR(SmartHomeUnits.HOUR, \"hours\"),\n+    AMPERE(SmartHomeUnits.AMPERE, \"\"),\n+    WATT(SmartHomeUnits.WATT, \"\"),\n+    SQUARE_METRE(Units.SQUARE_METRE, \"square_meter,squaremeter\"),\n+    PERCENT(SmartHomeUnits.PERCENT, \"\");\n \n     private final Unit<?> unit;\n+    private final String aliasses;\n \n     private static Map<String, Unit<?>> stringMap = Arrays.stream(values())\n             .collect(Collectors.toMap(Enum::toString, MiIoQuantiyTypes::getUnit));\n \n-    private MiIoQuantiyTypes(Unit<?> unit) {\n+    private static Map<String, Unit<?>> aliasMap() {\n+        Map<String, Unit<?>> aliassesMap = new HashMap<>();\n+        for (MiIoQuantiyTypes miIoQuantiyType : values()) {\n+            for (String alias : miIoQuantiyType.getAliasses().split(\",\")) {\n+                aliassesMap.put(alias.toLowerCase(), miIoQuantiyType.getUnit());\n+            }\n+        }\n+        return aliassesMap;\n+    }\n+\n+    private MiIoQuantiyTypes(Unit<?> unit, String aliasses) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1561f120a97665ecf927bc00195d862f0036a6e9"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDI0ODYyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMTozNlrOH-w54Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMTozNlrOH-w54Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NTAwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final String aliasses;\n          \n          \n            \n                private final String[] aliasses;", "url": "https://github.com/openhab/openhab-addons/pull/9203#discussion_r535575009", "createdAt": "2020-12-03T20:31:36Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "diffHunk": "@@ -33,31 +36,49 @@\n @NonNullByDefault\n public enum MiIoQuantiyTypes {\n \n-    CELCIUS(SIUnits.CELSIUS),\n-    FAHRENHEIT(ImperialUnits.FAHRENHEIT),\n-    SECOND(SmartHomeUnits.SECOND),\n-    MINUTE(SmartHomeUnits.MINUTE),\n-    HOUR(SmartHomeUnits.HOUR),\n-    SECONDS(SmartHomeUnits.SECOND),\n-    MINUTES(SmartHomeUnits.MINUTE),\n-    HOURS(SmartHomeUnits.HOUR),\n-    AMPERE(SmartHomeUnits.AMPERE),\n-    WATT(SmartHomeUnits.WATT);\n+    CELCIUS(SIUnits.CELSIUS, \"C\"),\n+    FAHRENHEIT(ImperialUnits.FAHRENHEIT, \"\"),\n+    SECOND(SmartHomeUnits.SECOND, \"seconds\"),\n+    MINUTE(SmartHomeUnits.MINUTE, \"minutes\"),\n+    HOUR(SmartHomeUnits.HOUR, \"hours\"),\n+    AMPERE(SmartHomeUnits.AMPERE, \"\"),\n+    WATT(SmartHomeUnits.WATT, \"\"),\n+    SQUARE_METRE(Units.SQUARE_METRE, \"square_meter,squaremeter\"),\n+    PERCENT(SmartHomeUnits.PERCENT, \"\");\n \n     private final Unit<?> unit;\n+    private final String aliasses;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1561f120a97665ecf927bc00195d862f0036a6e9"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDI0OTgyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMTo0OFrOH-w6vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMTo0OFrOH-w6vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NTIzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                SQUARE_METRE(Units.SQUARE_METRE, \"square_meter,squaremeter\"),\n          \n          \n            \n                SQUARE_METRE(Units.SQUARE_METRE, \"square_meter\", \"squaremeter\"),", "url": "https://github.com/openhab/openhab-addons/pull/9203#discussion_r535575230", "createdAt": "2020-12-03T20:31:48Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "diffHunk": "@@ -33,31 +36,49 @@\n @NonNullByDefault\n public enum MiIoQuantiyTypes {\n \n-    CELCIUS(SIUnits.CELSIUS),\n-    FAHRENHEIT(ImperialUnits.FAHRENHEIT),\n-    SECOND(SmartHomeUnits.SECOND),\n-    MINUTE(SmartHomeUnits.MINUTE),\n-    HOUR(SmartHomeUnits.HOUR),\n-    SECONDS(SmartHomeUnits.SECOND),\n-    MINUTES(SmartHomeUnits.MINUTE),\n-    HOURS(SmartHomeUnits.HOUR),\n-    AMPERE(SmartHomeUnits.AMPERE),\n-    WATT(SmartHomeUnits.WATT);\n+    CELCIUS(SIUnits.CELSIUS, \"C\"),\n+    FAHRENHEIT(ImperialUnits.FAHRENHEIT, \"\"),\n+    SECOND(SmartHomeUnits.SECOND, \"seconds\"),\n+    MINUTE(SmartHomeUnits.MINUTE, \"minutes\"),\n+    HOUR(SmartHomeUnits.HOUR, \"hours\"),\n+    AMPERE(SmartHomeUnits.AMPERE, \"\"),\n+    WATT(SmartHomeUnits.WATT, \"\"),\n+    SQUARE_METRE(Units.SQUARE_METRE, \"square_meter,squaremeter\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1561f120a97665ecf927bc00195d862f0036a6e9"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDI1NDIwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMjozMFrOH-w9uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMjozMFrOH-w9uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NTk5NQ==", "bodyText": "You can remove the empty strings then. Do so for the others as well.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                AMPERE(SmartHomeUnits.AMPERE, \"\"),\n          \n          \n            \n                WATT(SmartHomeUnits.WATT, \"\"),\n          \n          \n            \n                AMPERE(SmartHomeUnits.AMPERE),\n          \n          \n            \n                WATT(SmartHomeUnits.WATT),", "url": "https://github.com/openhab/openhab-addons/pull/9203#discussion_r535575995", "createdAt": "2020-12-03T20:32:30Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "diffHunk": "@@ -33,31 +36,49 @@\n @NonNullByDefault\n public enum MiIoQuantiyTypes {\n \n-    CELCIUS(SIUnits.CELSIUS),\n-    FAHRENHEIT(ImperialUnits.FAHRENHEIT),\n-    SECOND(SmartHomeUnits.SECOND),\n-    MINUTE(SmartHomeUnits.MINUTE),\n-    HOUR(SmartHomeUnits.HOUR),\n-    SECONDS(SmartHomeUnits.SECOND),\n-    MINUTES(SmartHomeUnits.MINUTE),\n-    HOURS(SmartHomeUnits.HOUR),\n-    AMPERE(SmartHomeUnits.AMPERE),\n-    WATT(SmartHomeUnits.WATT);\n+    CELCIUS(SIUnits.CELSIUS, \"C\"),\n+    FAHRENHEIT(ImperialUnits.FAHRENHEIT, \"\"),\n+    SECOND(SmartHomeUnits.SECOND, \"seconds\"),\n+    MINUTE(SmartHomeUnits.MINUTE, \"minutes\"),\n+    HOUR(SmartHomeUnits.HOUR, \"hours\"),\n+    AMPERE(SmartHomeUnits.AMPERE, \"\"),\n+    WATT(SmartHomeUnits.WATT, \"\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1561f120a97665ecf927bc00195d862f0036a6e9"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDI2MTI0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMzo0MVrOH-xChw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDozMzo0MVrOH-xChw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU3NzIyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for (String alias : miIoQuantiyType.getAliasses().split(\",\")) {\n          \n          \n            \n                        for (String alias : miIoQuantiyType.getAliasses()) {", "url": "https://github.com/openhab/openhab-addons/pull/9203#discussion_r535577223", "createdAt": "2020-12-03T20:33:41Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.miio/src/main/java/org/openhab/binding/miio/internal/MiIoQuantiyTypes.java", "diffHunk": "@@ -33,31 +36,49 @@\n @NonNullByDefault\n public enum MiIoQuantiyTypes {\n \n-    CELCIUS(SIUnits.CELSIUS),\n-    FAHRENHEIT(ImperialUnits.FAHRENHEIT),\n-    SECOND(SmartHomeUnits.SECOND),\n-    MINUTE(SmartHomeUnits.MINUTE),\n-    HOUR(SmartHomeUnits.HOUR),\n-    SECONDS(SmartHomeUnits.SECOND),\n-    MINUTES(SmartHomeUnits.MINUTE),\n-    HOURS(SmartHomeUnits.HOUR),\n-    AMPERE(SmartHomeUnits.AMPERE),\n-    WATT(SmartHomeUnits.WATT);\n+    CELCIUS(SIUnits.CELSIUS, \"C\"),\n+    FAHRENHEIT(ImperialUnits.FAHRENHEIT, \"\"),\n+    SECOND(SmartHomeUnits.SECOND, \"seconds\"),\n+    MINUTE(SmartHomeUnits.MINUTE, \"minutes\"),\n+    HOUR(SmartHomeUnits.HOUR, \"hours\"),\n+    AMPERE(SmartHomeUnits.AMPERE, \"\"),\n+    WATT(SmartHomeUnits.WATT, \"\"),\n+    SQUARE_METRE(Units.SQUARE_METRE, \"square_meter,squaremeter\"),\n+    PERCENT(SmartHomeUnits.PERCENT, \"\");\n \n     private final Unit<?> unit;\n+    private final String aliasses;\n \n     private static Map<String, Unit<?>> stringMap = Arrays.stream(values())\n             .collect(Collectors.toMap(Enum::toString, MiIoQuantiyTypes::getUnit));\n \n-    private MiIoQuantiyTypes(Unit<?> unit) {\n+    private static Map<String, Unit<?>> aliasMap() {\n+        Map<String, Unit<?>> aliassesMap = new HashMap<>();\n+        for (MiIoQuantiyTypes miIoQuantiyType : values()) {\n+            for (String alias : miIoQuantiyType.getAliasses().split(\",\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1561f120a97665ecf927bc00195d862f0036a6e9"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3812, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}