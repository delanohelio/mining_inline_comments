{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDg3ODM0", "number": 8948, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMjoxMDoxMFrOE2lPCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzoxOTo0NFrOE23rkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjY4NjE2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMjoxMDoxMFrOHvc2ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMjoxMDoxMFrOHvc2ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNzc5Ng==", "bodyText": "Some minor simplification.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (filename == null && localHandler != null) {\n          \n          \n            \n                        localHandler.recordGif(\"ipcamera\", secondsToRecord);\n          \n          \n            \n                    } else if (localHandler != null && filename != null) {\n          \n          \n            \n                        localHandler.recordGif(filename, secondsToRecord);\n          \n          \n            \n                    }\n          \n          \n            \n                    if(localHandler != null){\n          \n          \n            \n                        localHandler.recordGif(filename != null ? filename : \"ipcamera\", secondsToRecord);\n          \n          \n            \n                    }", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519517796", "createdAt": "2020-11-09T02:10:10Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java", "diffHunk": "@@ -66,10 +67,11 @@ public void recordGIF(\n             @ActionInput(name = \"filename\", label = \"Filename\", description = \"Name that the recording will have once created, don't include the .mp4.\") @Nullable String filename,\n             @ActionInput(name = \"secondsToRecord\", label = \"Seconds to Record\", description = \"Enter a number of how many seconds to record.\") int secondsToRecord) {\n         logger.debug(\"Recording {}.gif for {} seconds.\", filename, secondsToRecord);\n-        if (filename == null && handler != null) {\n-            handler.recordGif(\"ipcamera\", secondsToRecord);\n-        } else if (handler != null && filename != null) {\n-            handler.recordGif(filename, secondsToRecord);\n+        IpCameraHandler localHandler = handler;\n+        if (filename == null && localHandler != null) {\n+            localHandler.recordGif(\"ipcamera\", secondsToRecord);\n+        } else if (localHandler != null && filename != null) {\n+            localHandler.recordGif(filename, secondsToRecord);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb3a657b58f0fc28186ab236899d0d78d45eeac"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjY4NzQ0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMjoxMTowOVrOHvc3JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzoyMTo0NVrOHvurjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNzk4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (filename == null && localHandler != null) {\n          \n          \n            \n                        localHandler.recordMp4(\"ipcamera\", secondsToRecord);\n          \n          \n            \n                    } else if (localHandler != null && filename != null) {\n          \n          \n            \n                        localHandler.recordMp4(filename, secondsToRecord);\n          \n          \n            \n                    }\n          \n          \n            \n                    if (localHandler != null) {\n          \n          \n            \n                        localHandler.recordMp4(filename != null ? filename : \"ipcamera\", secondsToRecord);\n          \n          \n            \n                    }", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519517988", "createdAt": "2020-11-09T02:11:09Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java", "diffHunk": "@@ -50,10 +50,11 @@ public void recordMP4(\n             @ActionInput(name = \"filename\", label = \"Filename\", description = \"Name that the recording will have once created, don't include the .mp4.\") @Nullable String filename,\n             @ActionInput(name = \"secondsToRecord\", label = \"Seconds to Record\", description = \"Enter a number of how many seconds to record.\") int secondsToRecord) {\n         logger.debug(\"Recording {}.mp4 for {} seconds.\", filename, secondsToRecord);\n-        if (filename == null && handler != null) {\n-            handler.recordMp4(\"ipcamera\", secondsToRecord);\n-        } else if (handler != null && filename != null) {\n-            handler.recordMp4(filename, secondsToRecord);\n+        IpCameraHandler localHandler = handler;\n+        if (filename == null && localHandler != null) {\n+            localHandler.recordMp4(\"ipcamera\", secondsToRecord);\n+        } else if (localHandler != null && filename != null) {\n+            localHandler.recordMp4(filename, secondsToRecord);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb3a657b58f0fc28186ab236899d0d78d45eeac"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgwOTkzMw==", "bodyText": "Thanks much neater.", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519809933", "createdAt": "2020-11-09T13:21:45Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/IpCameraActions.java", "diffHunk": "@@ -50,10 +50,11 @@ public void recordMP4(\n             @ActionInput(name = \"filename\", label = \"Filename\", description = \"Name that the recording will have once created, don't include the .mp4.\") @Nullable String filename,\n             @ActionInput(name = \"secondsToRecord\", label = \"Seconds to Record\", description = \"Enter a number of how many seconds to record.\") int secondsToRecord) {\n         logger.debug(\"Recording {}.mp4 for {} seconds.\", filename, secondsToRecord);\n-        if (filename == null && handler != null) {\n-            handler.recordMp4(\"ipcamera\", secondsToRecord);\n-        } else if (handler != null && filename != null) {\n-            handler.recordMp4(filename, secondsToRecord);\n+        IpCameraHandler localHandler = handler;\n+        if (filename == null && localHandler != null) {\n+            localHandler.recordMp4(\"ipcamera\", secondsToRecord);\n+        } else if (localHandler != null && filename != null) {\n+            localHandler.recordMp4(filename, secondsToRecord);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxNzk4OA=="}, "originalCommit": {"oid": "feb3a657b58f0fc28186ab236899d0d78d45eeac"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NjY4ODc5OnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/AmcrestHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwMjoxMjoxMVrOHvc35w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzowODoyM1rOHvt3qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxODE4Mw==", "bodyText": "Why are you removing this?", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519518183", "createdAt": "2020-11-09T02:12:11Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/AmcrestHandler.java", "diffHunk": "@@ -206,19 +205,6 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     ipCameraHandler.sendHttpGET(\"/cgi-bin/configManager.cgi?action=setConfig&AlarmOut[1].Mode=0\");\n                 }\n                 return;\n-            case CHANNEL_FFMPEG_MOTION_CONTROL:\n-                if (OnOffType.ON.equals(command)) {\n-                    ipCameraHandler.motionAlarmEnabled = true;\n-                } else if (OnOffType.OFF.equals(command) || DecimalType.ZERO.equals(command)) {\n-                    ipCameraHandler.motionAlarmEnabled = false;\n-                    ipCameraHandler.noMotionDetected(CHANNEL_MOTION_ALARM);\n-                } else {\n-                    ipCameraHandler.motionAlarmEnabled = true;\n-                    ipCameraHandler.motionThreshold = Double.valueOf(command.toString());\n-                    ipCameraHandler.motionThreshold = ipCameraHandler.motionThreshold / 10000;\n-                }\n-                ipCameraHandler.setupFfmpegFormat(FFmpegFormat.RTSP_ALARMS);\n-                return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "feb3a657b58f0fc28186ab236899d0d78d45eeac"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc5NjY1MA==", "bodyText": "Because it is already handled in the main class/handler as all camera things have this, so this is dead code it will never run.", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519796650", "createdAt": "2020-11-09T13:08:23Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/AmcrestHandler.java", "diffHunk": "@@ -206,19 +205,6 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     ipCameraHandler.sendHttpGET(\"/cgi-bin/configManager.cgi?action=setConfig&AlarmOut[1].Mode=0\");\n                 }\n                 return;\n-            case CHANNEL_FFMPEG_MOTION_CONTROL:\n-                if (OnOffType.ON.equals(command)) {\n-                    ipCameraHandler.motionAlarmEnabled = true;\n-                } else if (OnOffType.OFF.equals(command) || DecimalType.ZERO.equals(command)) {\n-                    ipCameraHandler.motionAlarmEnabled = false;\n-                    ipCameraHandler.noMotionDetected(CHANNEL_MOTION_ALARM);\n-                } else {\n-                    ipCameraHandler.motionAlarmEnabled = true;\n-                    ipCameraHandler.motionThreshold = Double.valueOf(command.toString());\n-                    ipCameraHandler.motionThreshold = ipCameraHandler.motionThreshold / 10000;\n-                }\n-                ipCameraHandler.setupFfmpegFormat(FFmpegFormat.RTSP_ALARMS);\n-                return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTUxODE4Mw=="}, "originalCommit": {"oid": "feb3a657b58f0fc28186ab236899d0d78d45eeac"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTcwODM0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/StreamServerHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNzoxOTo0NFrOHv5TnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzo1MToyM1rOHxCCug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk4NDAyOQ==", "bodyText": "remove commented code", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r519984029", "createdAt": "2020-11-09T17:19:44Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/StreamServerHandler.java", "diffHunk": "@@ -96,20 +96,16 @@ public void channelRead(@Nullable ChannelHandlerContext ctx, @Nullable Object ms\n                     QueryStringDecoder queryStringDecoder = new QueryStringDecoder(httpRequest.uri());\n                     switch (queryStringDecoder.path()) {\n                         case \"/ipcamera.m3u8\":\n-                            if (ipCameraHandler.ffmpegHLS != null) {\n-                                if (!ipCameraHandler.ffmpegHLS.getIsAlive()) {\n-                                    if (ipCameraHandler.ffmpegHLS != null) {\n-                                        ipCameraHandler.ffmpegHLS.startConverting();\n-                                    }\n-                                }\n-                            } else {\n+                            Ffmpeg localFfmpeg = ipCameraHandler.ffmpegHLS;\n+                            if (localFfmpeg == null) {\n                                 ipCameraHandler.setupFfmpegFormat(FFmpegFormat.HLS);\n-                            }\n-                            if (ipCameraHandler.ffmpegHLS != null) {\n-                                ipCameraHandler.ffmpegHLS.setKeepAlive(8);\n+                            } else if (!localFfmpeg.getIsAlive()) {\n+                                localFfmpeg.startConverting();\n+                            } else {\n+                                localFfmpeg.setKeepAlive(8);\n                             }\n                             sendFile(ctx, httpRequest.uri(), \"application/x-mpegurl\");\n-                            ctx.close();\n+                            // ctx.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0874ed4f87cf7041dd7690fd113b1265c6f0cdc3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE3NTczOA==", "bodyText": "DONE", "url": "https://github.com/openhab/openhab-addons/pull/8948#discussion_r521175738", "createdAt": "2020-11-11T07:51:23Z", "author": {"login": "Skinah"}, "path": "bundles/org.openhab.binding.ipcamera/src/main/java/org/openhab/binding/ipcamera/internal/StreamServerHandler.java", "diffHunk": "@@ -96,20 +96,16 @@ public void channelRead(@Nullable ChannelHandlerContext ctx, @Nullable Object ms\n                     QueryStringDecoder queryStringDecoder = new QueryStringDecoder(httpRequest.uri());\n                     switch (queryStringDecoder.path()) {\n                         case \"/ipcamera.m3u8\":\n-                            if (ipCameraHandler.ffmpegHLS != null) {\n-                                if (!ipCameraHandler.ffmpegHLS.getIsAlive()) {\n-                                    if (ipCameraHandler.ffmpegHLS != null) {\n-                                        ipCameraHandler.ffmpegHLS.startConverting();\n-                                    }\n-                                }\n-                            } else {\n+                            Ffmpeg localFfmpeg = ipCameraHandler.ffmpegHLS;\n+                            if (localFfmpeg == null) {\n                                 ipCameraHandler.setupFfmpegFormat(FFmpegFormat.HLS);\n-                            }\n-                            if (ipCameraHandler.ffmpegHLS != null) {\n-                                ipCameraHandler.ffmpegHLS.setKeepAlive(8);\n+                            } else if (!localFfmpeg.getIsAlive()) {\n+                                localFfmpeg.startConverting();\n+                            } else {\n+                                localFfmpeg.setKeepAlive(8);\n                             }\n                             sendFile(ctx, httpRequest.uri(), \"application/x-mpegurl\");\n-                            ctx.close();\n+                            // ctx.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk4NDAyOQ=="}, "originalCommit": {"oid": "0874ed4f87cf7041dd7690fd113b1265c6f0cdc3"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4027, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}