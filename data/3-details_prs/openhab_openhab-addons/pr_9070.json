{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNzgxNTUx", "number": 9070, "title": "[caddx] Fixed wrongly handled discovery, off by 1 errors", "bodyText": "This PR is against the 2.5.x branch and corresponds to the already merged PR #9030 against the main branch.\nThe classification of this PR is Bugfix.\nDiscovery process\nThe discovery process for the Zone things was based on a wrong assumption. There is no way to actually check if a zone is present or not. Therefore a new parameter has been introduced for the bridge which specifies the maximum zone number that should be instantiated.\nOff by one errors\nCorrected the logging of the zone and partition numbers. Corrected the message parsing for String values.\nRefresh handling\nChanged the way the RefreshType commands are handled. Only for the first Refresh command received is a respective command sent to the panel. For the next two seconds all other refresh commands are ignored for a thing because the panel's response updates all the channels.\nTests\nAdded message parsing unit tests.", "createdAt": "2020-11-19T08:53:16Z", "url": "https://github.com/openhab/openhab-addons/pull/9070", "merged": true, "mergeCommit": {"oid": "3160856dfbeda073469978a5f851161b93a7f866"}, "closed": true, "closedAt": "2020-11-24T18:20:39Z", "author": {"login": "jossuar"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdceQOFgH2gAyNTIzNzgxNTUxOjRhYTYzMDNhNDRhNTFlZjAyYzAwZjdlYzdkMWJiNDk3ZDk1NmZkYTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdft7_6gFqTUzNzc4MzgxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4aa6303a44a51ef02c00f7ec7d1bb497d956fda4", "author": {"user": {"login": "jossuar", "name": "Georgios Moutsos"}}, "url": "https://github.com/openhab/openhab-addons/commit/4aa6303a44a51ef02c00f7ec7d1bb497d956fda4", "committedDate": "2020-11-14T16:21:59Z", "message": "Corrected caddx discovery bug\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f269e74803fbf78c8915f69228e8f81e456a555", "author": {"user": {"login": "jossuar", "name": "Georgios Moutsos"}}, "url": "https://github.com/openhab/openhab-addons/commit/7f269e74803fbf78c8915f69228e8f81e456a555", "committedDate": "2020-11-14T16:21:59Z", "message": "Changed refresh logic for the things\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "886fa634c07354518e12955028b25583628291ef", "author": {"user": {"login": "jossuar", "name": "Georgios Moutsos"}}, "url": "https://github.com/openhab/openhab-addons/commit/886fa634c07354518e12955028b25583628291ef", "committedDate": "2020-11-14T16:21:59Z", "message": "Code cleanup\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "457ccfab80b2ba27accf26e89c9ef1f215874998", "author": {"user": {"login": "jossuar", "name": "Georgios Moutsos"}}, "url": "https://github.com/openhab/openhab-addons/commit/457ccfab80b2ba27accf26e89c9ef1f215874998", "committedDate": "2020-11-14T16:21:59Z", "message": "Corrected off by one errors\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "848ed65bd3e7d68cc6246fc7284bd0f89354282b", "author": {"user": {"login": "jossuar", "name": "Georgios Moutsos"}}, "url": "https://github.com/openhab/openhab-addons/commit/848ed65bd3e7d68cc6246fc7284bd0f89354282b", "committedDate": "2020-11-14T16:21:59Z", "message": "Added tests for the message parsing\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06c7be32f921711b7eb1db7bb9aa44782d170e2b", "author": {"user": {"login": "jossuar", "name": "Georgios Moutsos"}}, "url": "https://github.com/openhab/openhab-addons/commit/06c7be32f921711b7eb1db7bb9aa44782d170e2b", "committedDate": "2020-11-18T07:13:10Z", "message": "Changed new Date().getTime to System.currentTimeMillis()\n\nSigned-off-by: Georgios Moutsos <georgios.moutsos@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzgzODEx", "url": "https://github.com/openhab/openhab-addons/pull/9070#pullrequestreview-537783811", "createdAt": "2020-11-24T18:14:26Z", "commit": {"oid": "06c7be32f921711b7eb1db7bb9aa44782d170e2b"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoxNDoyNlrOH5PV9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoxNzozMFrOH5PdZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MjI2MA==", "bodyText": "You could've used ExpiringCache here. Next time...", "url": "https://github.com/openhab/openhab-addons/pull/9070#discussion_r529782260", "createdAt": "2020-11-24T18:14:26Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.caddx/src/main/java/org/openhab/binding/caddx/internal/handler/ThingHandlerPanel.java", "diffHunk": "@@ -77,17 +73,19 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         }\n \n         if (command instanceof RefreshType) {\n-            if (CaddxBindingConstants.PANEL_FIRMWARE_VERSION.equals(channelUID.getId())) {\n-                cmd = CaddxBindingConstants.PANEL_INTERFACE_CONFIGURATION_REQUEST;\n-                data = \"\";\n-            } else if (CaddxBindingConstants.PANEL_LOG_MESSAGE_N_0.equals(channelUID.getId())) {\n+            if (CaddxBindingConstants.PANEL_LOG_MESSAGE_N_0.equals(channelUID.getId())) {\n                 cmd = CaddxBindingConstants.PANEL_SYSTEM_STATUS_REQUEST;\n                 data = \"\";\n+            } else if (System.currentTimeMillis() - lastRefreshTime > 2000) {\n+                // Refresh only if 2 seconds have passed from the last refresh\n+                cmd = CaddxBindingConstants.PANEL_INTERFACE_CONFIGURATION_REQUEST;\n+                data = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c7be32f921711b7eb1db7bb9aa44782d170e2b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NDE2Nw==", "bodyText": "The BufferedReader and InputStreamReader should also be part of the try. Can you file a follow-up PR, as the 3.x PR is already merged?", "url": "https://github.com/openhab/openhab-addons/pull/9070#discussion_r529784167", "createdAt": "2020-11-24T18:17:30Z", "author": {"login": "fwolter"}, "path": "bundles/org.openhab.binding.caddx/src/test/java/org/openhab/binding/caddx/internal/CaddxMessageReaderUtil.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.caddx.internal;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.util.HexUtils;\n+\n+/**\n+ * Util class to read test input messages.\n+ *\n+ * @author Georgios Moutsos - Initial contribution\n+ */\n+@NonNullByDefault\n+public final class CaddxMessageReaderUtil {\n+    private static final String MESSAGE_EXT = \".msg\";\n+\n+    private CaddxMessageReaderUtil() {\n+        // Util class\n+    }\n+\n+    /**\n+     * Reads the raw bytes of the message given the file relative to this package and returns the objects.\n+     *\n+     * @param messageName name of the telegram file to read\n+     * @return The raw bytes of a telegram\n+     */\n+    public static byte[] readRawMessage(String messageName) {\n+        try (InputStream is = CaddxMessageReaderUtil.class.getResourceAsStream(messageName + MESSAGE_EXT)) {\n+            String hexString = new BufferedReader(new InputStreamReader(is)).lines().collect(Collectors.joining(\"\\n\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c7be32f921711b7eb1db7bb9aa44782d170e2b"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4122, "cost": 1, "resetAt": "2021-10-28T20:13:43Z"}}}