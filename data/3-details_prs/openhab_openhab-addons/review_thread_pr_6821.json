{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxODU1MzMw", "number": 6821, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo0MDo0OVrODXdi1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo0MTozNlrODXdjvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTI3ODkzOnYy", "diffSide": "LEFT", "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo0MDo0OVrOFcxMmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxODoyOToxN1rOFfLqmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDQ4OQ==", "bodyText": "I would really prefer to always include the braces", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r365710489", "createdAt": "2020-01-13T09:40:49Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk1NDQ4Mg==", "bodyText": "I did not want to touch existing coding, but I agree with you and will add braces around the throw.", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r365954482", "createdAt": "2020-01-13T18:20:40Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDQ4OQ=="}, "originalCommit": {"oid": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MTMwNg==", "bodyText": "done", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r368241306", "createdAt": "2020-01-18T18:29:17Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDQ4OQ=="}, "originalCommit": {"oid": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTI4MTI1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwOTo0MTozNlrOFcxN7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxODoyOTozNFrOFfLq1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDgzMQ==", "bodyText": "Can this be matched more exact than contains, what are possible values?", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r365710831", "createdAt": "2020-01-13T09:41:36Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {\n+        if (valueType == null || valueType == HmValueType.UNKNOWN)\n             throw new IOException(\"Unknown datapoint type: \" + type);\n+        else if (valueType == HmValueType.FLOAT && dp.getUnit() == null\n+                && StringUtils.contains(dp.getName(), \"TEMPERATURE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTk1ODU2MQ==", "bodyText": "There a names with TEMPERATURE at the end and also names with TEMPERATURE in the middle. All datapoints with possibly missing units have in common that they are defined as float and contain \"TEMPERATURE\". I could check the documentation whether it makes sense to limit it more.", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r365958561", "createdAt": "2020-01-13T18:29:47Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {\n+        if (valueType == null || valueType == HmValueType.UNKNOWN)\n             throw new IOException(\"Unknown datapoint type: \" + type);\n+        else if (valueType == HmValueType.FLOAT && dp.getUnit() == null\n+                && StringUtils.contains(dp.getName(), \"TEMPERATURE\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDgzMQ=="}, "originalCommit": {"oid": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA3NTUzMA==", "bodyText": "Would be appreciated :-)", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r367075530", "createdAt": "2020-01-15T19:53:42Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {\n+        if (valueType == null || valueType == HmValueType.UNKNOWN)\n             throw new IOException(\"Unknown datapoint type: \" + type);\n+        else if (valueType == HmValueType.FLOAT && dp.getUnit() == null\n+                && StringUtils.contains(dp.getName(), \"TEMPERATURE\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDgzMQ=="}, "originalCommit": {"oid": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MTM2NQ==", "bodyText": "Replaced by regex that is more restrictive :-)", "url": "https://github.com/openhab/openhab-addons/pull/6821#discussion_r368241365", "createdAt": "2020-01-18T18:29:34Z", "author": {"login": "MHerbst"}, "path": "bundles/org.openhab.binding.homematic/src/main/java/org/openhab/binding/homematic/internal/communicator/parser/CommonRpcParser.java", "diffHunk": "@@ -173,8 +173,14 @@ protected HmDatapoint assembleDatapoint(String name, String unit, String type, S\n         }\n \n         HmValueType valueType = HmValueType.parse(type);\n-        if (valueType == null || valueType == HmValueType.UNKNOWN) {\n+        if (valueType == null || valueType == HmValueType.UNKNOWN)\n             throw new IOException(\"Unknown datapoint type: \" + type);\n+        else if (valueType == HmValueType.FLOAT && dp.getUnit() == null\n+                && StringUtils.contains(dp.getName(), \"TEMPERATURE\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcxMDgzMQ=="}, "originalCommit": {"oid": "bb7bbad722aa7ecd5395e1b625ccdc8eb4d66f2f"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1066, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}