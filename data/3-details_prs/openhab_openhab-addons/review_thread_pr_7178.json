{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4NzQ3ODI4", "number": 7178, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODowMDozOFrODoIbIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDozOTowOFrODuuVxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDA3NjUxOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/api/OpenSprinklerApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODowMDozOFrOF2gVtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODowMDozOFrOF2gVtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NzI3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Returns the current voltage draw of all connected zones of the OpenSprinkler device in milliamperes. Given the\n          \n          \n            \n                 * Returns the current draw of all connected zones of the OpenSprinkler device in milliamperes. Given the", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r392697270", "createdAt": "2020-03-15T18:00:38Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/api/OpenSprinklerApi.java", "diffHunk": "@@ -90,6 +90,15 @@ public abstract void openStation(int station, BigDecimal duration)\n      */\n     public abstract boolean isRainDetected() throws CommunicationApiException;\n \n+    /**\n+     * Returns the current voltage draw of all connected zones of the OpenSprinkler device in milliamperes. Given the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2276d93cbeab41bcb08d747b5817cd42e36fdd5a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDA3NzQ0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODowMTo1OFrOF2gWMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxODowMTo1OFrOF2gWMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NzM5Mw==", "bodyText": "Primitives should be automatically boxed for you.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                updateState(channel, new QuantityType<ElectricCurrent>(new Integer(getApi().currentDraw()),\n          \n          \n            \n                                updateState(channel, new QuantityType<ElectricCurrent>(getApi().currentDraw(),", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r392697393", "createdAt": "2020-03-15T18:01:58Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -36,19 +41,24 @@ public OpenSprinklerDeviceHandler(Thing thing) {\n \n     @Override\n     protected void updateChannel(ChannelUID channel) {\n-        switch (channel.getIdWithoutGroup()) {\n-            case SENSOR_RAIN:\n-                try {\n+        try {\n+            switch (channel.getIdWithoutGroup()) {\n+                case SENSOR_RAIN:\n                     if (getApi().isRainDetected()) {\n                         updateState(channel, OnOffType.ON);\n                     } else {\n                         updateState(channel, OnOffType.OFF);\n                     }\n-                } catch (CommunicationApiException e) {\n-                    logger.debug(\"Could not update rainsensor\", e);\n-                }\n-            default:\n-                logger.debug(\"Not updating unknown channel {}\", channel);\n+                    break;\n+                case SENSOR_CURRENT_DRAW:\n+                    updateState(channel, new QuantityType<ElectricCurrent>(new Integer(getApi().currentDraw()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2276d93cbeab41bcb08d747b5817cd42e36fdd5a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDc2NjE0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.opensprinkler/README.md", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxOTo0MTo0M1rOF5rTpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNTozMjozN1rOF9KOYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMjY5Mg==", "bodyText": "Is it possible to detect if the device has the capability?", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r396022692", "createdAt": "2020-03-21T19:41:43Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.opensprinkler/README.md", "diffHunk": "@@ -61,9 +61,11 @@ When using the `nextDuration` channel, it is advised to setup persistence (e.g.\n \n The following is supported by the `device` thing, but only when connected using the http interface.\n \n-| Channel Type ID | Item Type |    | Description                                                           |\n-|-----------------|-----------|----|-----------------------------------------------------------------------|\n-| rainsensor      | Switch    | RO | This channel indicates whether rain is detected by the device or not. |\n+| Channel Type ID | Item Type              |    | Description                                                               |\n+|-----------------|------------------------|----|---------------------------------------------------------------------------|\n+| rainsensor      | Switch                 | RO | This channel indicates whether rain is detected by the device or not.     |\n+| currentDraw     | Number:ElectricCurrent | RO | Shows the current draw of the device. If the device does not have sensors |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2276d93cbeab41bcb08d747b5817cd42e36fdd5a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyMTE0NQ==", "bodyText": "Most likely, if the curr key in the API does not exist. Why, would it be possible to conditionally add the channel?", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r396621145", "createdAt": "2020-03-23T17:19:50Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.opensprinkler/README.md", "diffHunk": "@@ -61,9 +61,11 @@ When using the `nextDuration` channel, it is advised to setup persistence (e.g.\n \n The following is supported by the `device` thing, but only when connected using the http interface.\n \n-| Channel Type ID | Item Type |    | Description                                                           |\n-|-----------------|-----------|----|-----------------------------------------------------------------------|\n-| rainsensor      | Switch    | RO | This channel indicates whether rain is detected by the device or not. |\n+| Channel Type ID | Item Type              |    | Description                                                               |\n+|-----------------|------------------------|----|---------------------------------------------------------------------------|\n+| rainsensor      | Switch                 | RO | This channel indicates whether rain is detected by the device or not.     |\n+| currentDraw     | Number:ElectricCurrent | RO | Shows the current draw of the device. If the device does not have sensors |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMjY5Mg=="}, "originalCommit": {"oid": "2276d93cbeab41bcb08d747b5817cd42e36fdd5a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE1ODA1Nw==", "bodyText": "It is possible to dynamically add channels. I know it is done in the bluetooth binding ConnectedBluetoothHandler but I'm not sure it is the best example, it is just the only example I can think of ATM.\nDynamically adding channels is essentially modifying the Thing configuration in runtime.", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r398158057", "createdAt": "2020-03-25T20:46:20Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/README.md", "diffHunk": "@@ -61,9 +61,11 @@ When using the `nextDuration` channel, it is advised to setup persistence (e.g.\n \n The following is supported by the `device` thing, but only when connected using the http interface.\n \n-| Channel Type ID | Item Type |    | Description                                                           |\n-|-----------------|-----------|----|-----------------------------------------------------------------------|\n-| rainsensor      | Switch    | RO | This channel indicates whether rain is detected by the device or not. |\n+| Channel Type ID | Item Type              |    | Description                                                               |\n+|-----------------|------------------------|----|---------------------------------------------------------------------------|\n+| rainsensor      | Switch                 | RO | This channel indicates whether rain is detected by the device or not.     |\n+| currentDraw     | Number:ElectricCurrent | RO | Shows the current draw of the device. If the device does not have sensors |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMjY5Mg=="}, "originalCommit": {"oid": "2276d93cbeab41bcb08d747b5817cd42e36fdd5a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE2NTc5MQ==", "bodyText": "I think the Daikin binding has this now too", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r398165791", "createdAt": "2020-03-25T20:59:47Z", "author": {"login": "psmedley"}, "path": "bundles/org.openhab.binding.opensprinkler/README.md", "diffHunk": "@@ -61,9 +61,11 @@ When using the `nextDuration` channel, it is advised to setup persistence (e.g.\n \n The following is supported by the `device` thing, but only when connected using the http interface.\n \n-| Channel Type ID | Item Type |    | Description                                                           |\n-|-----------------|-----------|----|-----------------------------------------------------------------------|\n-| rainsensor      | Switch    | RO | This channel indicates whether rain is detected by the device or not. |\n+| Channel Type ID | Item Type              |    | Description                                                               |\n+|-----------------|------------------------|----|---------------------------------------------------------------------------|\n+| rainsensor      | Switch                 | RO | This channel indicates whether rain is detected by the device or not.     |\n+| currentDraw     | Number:ElectricCurrent | RO | Shows the current draw of the device. If the device does not have sensors |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMjY5Mg=="}, "originalCommit": {"oid": "2276d93cbeab41bcb08d747b5817cd42e36fdd5a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwNDIzMA==", "bodyText": "Exactly. Once you know you need to add a channel, you do something like\nThingBuilder thingBuilder = editThing();\nChannelBuilder channelBuilder = ChannelBuilder.create(\n    new ChannelUID(thing.getUID(), \"currentDraw\"), \"Number:ElectricCurrent\")\n    .withType(<insert type here>).withLabel(<add chabnnel label here>);\nthingBuilder.withChannel(channelBuilder.build);\nupdateThing(thingBuilder.build());\n\nor to remove a channel\nThingBuilder thingBuilder = editThing();\nif (thing.getChannel(channelId) != null) {\n    thingBuilder.withoutChannel(new ChannelUID(thing.getUID(), channelId));\n}\nupdateThing(thingBuilder.build());", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r398804230", "createdAt": "2020-03-26T18:36:28Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.opensprinkler/README.md", "diffHunk": "@@ -61,9 +61,11 @@ When using the `nextDuration` channel, it is advised to setup persistence (e.g.\n \n The following is supported by the `device` thing, but only when connected using the http interface.\n \n-| Channel Type ID | Item Type |    | Description                                                           |\n-|-----------------|-----------|----|-----------------------------------------------------------------------|\n-| rainsensor      | Switch    | RO | This channel indicates whether rain is detected by the device or not. |\n+| Channel Type ID | Item Type              |    | Description                                                               |\n+|-----------------|------------------------|----|---------------------------------------------------------------------------|\n+| rainsensor      | Switch                 | RO | This channel indicates whether rain is detected by the device or not.     |\n+| currentDraw     | Number:ElectricCurrent | RO | Shows the current draw of the device. If the device does not have sensors |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMjY5Mg=="}, "originalCommit": {"oid": "2276d93cbeab41bcb08d747b5817cd42e36fdd5a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3NDk3OQ==", "bodyText": "Ok, then let's try to add it conditionally :)", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r399674979", "createdAt": "2020-03-28T15:32:37Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.opensprinkler/README.md", "diffHunk": "@@ -61,9 +61,11 @@ When using the `nextDuration` channel, it is advised to setup persistence (e.g.\n \n The following is supported by the `device` thing, but only when connected using the http interface.\n \n-| Channel Type ID | Item Type |    | Description                                                           |\n-|-----------------|-----------|----|-----------------------------------------------------------------------|\n-| rainsensor      | Switch    | RO | This channel indicates whether rain is detected by the device or not. |\n+| Channel Type ID | Item Type              |    | Description                                                               |\n+|-----------------|------------------------|----|---------------------------------------------------------------------------|\n+| rainsensor      | Switch                 | RO | This channel indicates whether rain is detected by the device or not.     |\n+| currentDraw     | Number:ElectricCurrent | RO | Shows the current draw of the device. If the device does not have sensors |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyMjY5Mg=="}, "originalCommit": {"oid": "2276d93cbeab41bcb08d747b5817cd42e36fdd5a"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODE5Njc2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/model/NoCurrentDrawSensor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxODoyMjoxN1rOF9LVeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxODozOTozN1rOF9LceA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzE3Nw==", "bodyText": "Exceptions should have \"Exception\" as their suffix, but I also think that you could give this a more generic name, like \"MissingSensorException\".", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r399693177", "createdAt": "2020-03-28T18:22:17Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/model/NoCurrentDrawSensor.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.opensprinkler.internal.model;\n+\n+/**\n+ * Indicates, that a device is missing a sensor to measure the current draw of itself.\n+ *\n+ * @author Florian Schmidt - Initial contribution\n+ */\n+public class NoCurrentDrawSensor extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be3f002825fadf72ee71eb2bd0166c50d0a2642b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5NDA0NA==", "bodyText": "Why should it have \"Exception\" as a suffix. The name already indicates, that's something exceptional, and it extends Exception, so it's pretty clear, that it's an exception, sin't it? What else should it be? However, if you say so, I'll add exception at the end.\nWhy should the name more generic? The only usage of the exception is, when no sensor for measuring the current draw is present. If it's more generic, the exception probably doesn't transport the intention anymore, isn't it? :/", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r399694044", "createdAt": "2020-03-28T18:30:39Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/model/NoCurrentDrawSensor.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.opensprinkler.internal.model;\n+\n+/**\n+ * Indicates, that a device is missing a sensor to measure the current draw of itself.\n+ *\n+ * @author Florian Schmidt - Initial contribution\n+ */\n+public class NoCurrentDrawSensor extends Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzE3Nw=="}, "originalCommit": {"oid": "be3f002825fadf72ee71eb2bd0166c50d0a2642b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5NDczNg==", "bodyText": "Well the xxxException is the naming convention that we follow. Also I suggested that it could be more generic but NoCurrentDrawSensorException works just fine as well. I was only suggesting something more generic in case there are other sensors that may also be detected missing so that they can reuse that custom exception.\nBut once again all I want is to have the name changed to match our naming conventions.", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r399694736", "createdAt": "2020-03-28T18:37:38Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/model/NoCurrentDrawSensor.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.opensprinkler.internal.model;\n+\n+/**\n+ * Indicates, that a device is missing a sensor to measure the current draw of itself.\n+ *\n+ * @author Florian Schmidt - Initial contribution\n+ */\n+public class NoCurrentDrawSensor extends Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzE3Nw=="}, "originalCommit": {"oid": "be3f002825fadf72ee71eb2bd0166c50d0a2642b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5NDk2OA==", "bodyText": "Understood :) The Exception prefix is added with the last commit. I would change the name to a more generic exception, once we need to have a more generic one. At the moment, there is no other sensor we might miss :)", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r399694968", "createdAt": "2020-03-28T18:39:37Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/model/NoCurrentDrawSensor.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.opensprinkler.internal.model;\n+\n+/**\n+ * Indicates, that a device is missing a sensor to measure the current draw of itself.\n+ *\n+ * @author Florian Schmidt - Initial contribution\n+ */\n+public class NoCurrentDrawSensor extends Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY5MzE3Nw=="}, "originalCommit": {"oid": "be3f002825fadf72ee71eb2bd0166c50d0a2642b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzIzMjExOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOToyMToxMlrOF94suA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxMDoxNjo1OVrOGAwzZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzNjQwOA==", "bodyText": "Please move this logic to line 86, just before you would need to use it. No reason to create this variable without knowing if you need it or not.", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r400436408", "createdAt": "2020-03-30T19:21:12Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -57,4 +72,29 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         // nothing to do here\n     }\n \n+    @Override\n+    public void updateChannels() {\n+        ChannelUID currentDraw = new ChannelUID(thing.getUID(), \"currentDraw\");\n+        ThingBuilder thingBuilder = editThing();\n+        Channel currentDrawChannel = ChannelBuilder.create(currentDraw, \"Number:ElectricCurrent\")\n+                .withType(new ChannelTypeUID(BINDING_ID, SENSOR_CURRENT_DRAW)).withLabel(\"Current Draw\")\n+                .withDescription(\"Provides the current draw.\").build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc40ab2725c7412426b04d360f88ba5f41a4c56f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ1Mjc3Mw==", "bodyText": "Done.", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r403452773", "createdAt": "2020-04-04T10:16:59Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -57,4 +72,29 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         // nothing to do here\n     }\n \n+    @Override\n+    public void updateChannels() {\n+        ChannelUID currentDraw = new ChannelUID(thing.getUID(), \"currentDraw\");\n+        ThingBuilder thingBuilder = editThing();\n+        Channel currentDrawChannel = ChannelBuilder.create(currentDraw, \"Number:ElectricCurrent\")\n+                .withType(new ChannelTypeUID(BINDING_ID, SENSOR_CURRENT_DRAW)).withLabel(\"Current Draw\")\n+                .withDescription(\"Provides the current draw.\").build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzNjQwOA=="}, "originalCommit": {"oid": "dc40ab2725c7412426b04d360f88ba5f41a4c56f"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzI3MjM2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTozMjo1MFrOF95GRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxMDoxODoxMlrOGAwz4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0Mjk0OQ==", "bodyText": "Is the current sensor something that can be added or removed in realtime or is it something intrinsic to the device itself? If it can't be changed in realtime it would be better to add the channel during handler initialization so it gets executed only once rather than every time channel values are updated.", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r400442949", "createdAt": "2020-03-30T19:32:50Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -57,4 +72,29 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         // nothing to do here\n     }\n \n+    @Override\n+    public void updateChannels() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc40ab2725c7412426b04d360f88ba5f41a4c56f"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzM0MTQ1Mg==", "bodyText": "It looks like the design pattern you are using is rather common in other bindings, so disregard this change request.", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r403341452", "createdAt": "2020-04-03T21:19:30Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -57,4 +72,29 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         // nothing to do here\n     }\n \n+    @Override\n+    public void updateChannels() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0Mjk0OQ=="}, "originalCommit": {"oid": "dc40ab2725c7412426b04d360f88ba5f41a4c56f"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzMjIwMw==", "bodyText": "Where? IMO this needs to be changed. Thing updates should only be done if the thing really needs chaning. I think in this case it should be done in initialize().", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r403432203", "createdAt": "2020-04-04T06:21:05Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -57,4 +72,29 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         // nothing to do here\n     }\n \n+    @Override\n+    public void updateChannels() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0Mjk0OQ=="}, "originalCommit": {"oid": "dc40ab2725c7412426b04d360f88ba5f41a4c56f"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ1Mjg5Ng==", "bodyText": "Done", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r403452896", "createdAt": "2020-04-04T10:18:12Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -57,4 +72,29 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n         // nothing to do here\n     }\n \n+    @Override\n+    public void updateChannels() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0Mjk0OQ=="}, "originalCommit": {"oid": "dc40ab2725c7412426b04d360f88ba5f41a4c56f"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjc2NTA0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxMToyODo0OFrOGAxM_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzowODoxN1rOGAzPJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ1OTMyNg==", "bodyText": "Since you never remove the channel, you could move this to the most upper level.\nif (thing.getChannel == null) {\n   try {\n       getApi.currentDraw();\n\n       ThingBuilder thingBuilder = editThing();\n       Channel currentDrawChannel = ...\n       thingBuilder.withChannel(currentDrawChannel);\n       updateThing(thingBuilder.build());\n   } catch (...) {\n      logger.debug(...);\n   }\n}", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r403459326", "createdAt": "2020-04-04T11:28:48Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -68,21 +68,16 @@ protected void updateChannel(ChannelUID channel) {\n     }\n \n     @Override\n-    public void handleCommand(ChannelUID channelUID, Command command) {\n-        // nothing to do here\n-    }\n-\n-    @Override\n-    public void updateChannels() {\n+    public void initialize() {\n         ChannelUID currentDraw = new ChannelUID(thing.getUID(), \"currentDraw\");\n         ThingBuilder thingBuilder = editThing();\n-        Channel currentDrawChannel = ChannelBuilder.create(currentDraw, \"Number:ElectricCurrent\")\n-                .withType(new ChannelTypeUID(BINDING_ID, SENSOR_CURRENT_DRAW)).withLabel(\"Current Draw\")\n-                .withDescription(\"Provides the current draw.\").build();\n         try {\n             getApi().currentDraw();\n \n             if (thing.getChannel(currentDraw) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "393233e6895452f1666ea4eb3b3dcd4537e2db87"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MjY0NQ==", "bodyText": "Done", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r403492645", "createdAt": "2020-04-04T17:08:17Z", "author": {"login": "FlorianSW"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -68,21 +68,16 @@ protected void updateChannel(ChannelUID channel) {\n     }\n \n     @Override\n-    public void handleCommand(ChannelUID channelUID, Command command) {\n-        // nothing to do here\n-    }\n-\n-    @Override\n-    public void updateChannels() {\n+    public void initialize() {\n         ChannelUID currentDraw = new ChannelUID(thing.getUID(), \"currentDraw\");\n         ThingBuilder thingBuilder = editThing();\n-        Channel currentDrawChannel = ChannelBuilder.create(currentDraw, \"Number:ElectricCurrent\")\n-                .withType(new ChannelTypeUID(BINDING_ID, SENSOR_CURRENT_DRAW)).withLabel(\"Current Draw\")\n-                .withDescription(\"Provides the current draw.\").build();\n         try {\n             getApi().currentDraw();\n \n             if (thing.getChannel(currentDraw) == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ1OTMyNg=="}, "originalCommit": {"oid": "393233e6895452f1666ea4eb3b3dcd4537e2db87"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzIwMzI2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDozOTowOFrOGA0j9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMDozOTowOFrOGA0j9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUxNDM1Ng==", "bodyText": "No need to edit until you know you might need to.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ThingBuilder thingBuilder = editThing();\n          \n          \n            \n                    if (thing.getChannel(currentDraw) == null) {\n          \n          \n            \n                        try {\n          \n          \n            \n                    if (thing.getChannel(currentDraw) == null) {\n          \n          \n            \n                        ThingBuilder thingBuilder = editThing();\n          \n          \n            \n                        try {", "url": "https://github.com/openhab/openhab-addons/pull/7178#discussion_r403514356", "createdAt": "2020-04-04T20:39:08Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.opensprinkler/src/main/java/org/openhab/binding/opensprinkler/internal/handler/OpenSprinklerDeviceHandler.java", "diffHunk": "@@ -36,20 +46,51 @@ public OpenSprinklerDeviceHandler(Thing thing) {\n \n     @Override\n     protected void updateChannel(ChannelUID channel) {\n-        switch (channel.getIdWithoutGroup()) {\n-            case SENSOR_RAIN:\n-                try {\n+        try {\n+            switch (channel.getIdWithoutGroup()) {\n+                case SENSOR_RAIN:\n                     if (getApi().isRainDetected()) {\n                         updateState(channel, OnOffType.ON);\n                     } else {\n                         updateState(channel, OnOffType.OFF);\n                     }\n-                } catch (CommunicationApiException e) {\n-                    logger.debug(\"Could not update rainsensor\", e);\n+                    break;\n+                case SENSOR_CURRENT_DRAW:\n+                    updateState(channel,\n+                            new QuantityType<ElectricCurrent>(getApi().currentDraw(), MILLI(SmartHomeUnits.AMPERE)));\n+                    break;\n+                default:\n+                    logger.debug(\"Not updating unknown channel {}\", channel);\n+            }\n+        } catch (CommunicationApiException | NoCurrentDrawSensorException e) {\n+            logger.debug(\"Could not update {}\", channel, e);\n+        }\n+    }\n+\n+    @Override\n+    public void initialize() {\n+        ChannelUID currentDraw = new ChannelUID(thing.getUID(), \"currentDraw\");\n+        ThingBuilder thingBuilder = editThing();\n+        if (thing.getChannel(currentDraw) == null) {\n+            try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0428474430baae7f25d8e2082ba99655dc4527c"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 706, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}