{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTA3MzAy", "number": 7660, "title": "[netatmo] Add support for the Presence camera (#3059)", "bodyText": "This pull-request adds support for the Netatmo Presence camera. It is now auto-discovered and provides various channels like a live picture. Technically it uses the same API as the Welcome camera which is already supported, there were just some required adjustments to let the binding the Presence camera.\nPlease see issue 3059 for more information: #3059", "createdAt": "2020-05-17T12:37:37Z", "url": "https://github.com/openhab/openhab-addons/pull/7660", "merged": true, "mergeCommit": {"oid": "efc84f1c5ad0a09634cbb68010c501b58afd7738"}, "closed": true, "closedAt": "2020-05-22T03:41:49Z", "author": {"login": "Novanic"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciMTpvAFqTQxMzE2OTE2NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjkJZugFqTQxNjQ4ODYzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTY5MTY1", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-413169165", "createdAt": "2020-05-17T14:39:50Z", "commit": {"oid": "9e42a99796414ded0289228d92324816ea829cf4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTc5NjMz", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-413179633", "createdAt": "2020-05-17T16:51:07Z", "commit": {"oid": "9e42a99796414ded0289228d92324816ea829cf4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxNjo1MTowN1rOGWiK9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxNjo1ODoyMVrOGWiNig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI4MTcxOQ==", "bodyText": "Why NOC ???\nWhy not something like NAPresence ?", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r426281719", "createdAt": "2020-05-17T16:51:07Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/NetatmoBindingConstants.java", "diffHunk": "@@ -95,6 +95,8 @@\n     public static final ThingTypeUID WELCOME_HOME_THING_TYPE = new ThingTypeUID(BINDING_ID, \"NAWelcomeHome\");\n     public static final ThingTypeUID WELCOME_CAMERA_THING_TYPE = new ThingTypeUID(BINDING_ID, \"NACamera\");\n     public static final ThingTypeUID WELCOME_PERSON_THING_TYPE = new ThingTypeUID(BINDING_ID, \"NAWelcomePerson\");\n+    // Presence camera\n+    public static final ThingTypeUID PRESENCE_CAMERA_THING_TYPE = new ThingTypeUID(BINDING_ID, \"NOC\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e42a99796414ded0289228d92324816ea829cf4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI4MTkxMg==", "bodyText": "In case we decide to have only one configuration setting for any camera, at least its label and description has to be updated (not its name as it will break existing setup).\nBut I rather suggest to add a new configuration setting readPresence.", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r426281912", "createdAt": "2020-05-17T16:53:13Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoBridgeHandler.java", "diffHunk": "@@ -207,6 +207,8 @@ private String getApiScope() {\n         if (configuration.readWelcome) {\n             scopes.add(\"read_camera\");\n             scopes.add(\"access_camera\");\n+            scopes.add(\"read_presence\");\n+            scopes.add(\"access_presence\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e42a99796414ded0289228d92324816ea829cf4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI4MjE0Nw==", "bodyText": "Please rename the file into camera.xml for example as it now contains the description of several camera.\nWhy NOC ???", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r426282147", "createdAt": "2020-05-17T16:56:02Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.netatmo/src/main/resources/ESH-INF/thing/welcomecamera.xml", "diffHunk": "@@ -27,6 +27,29 @@\n \t\t<config-description-ref uri=\"thing-type:netatmo:nawelcomecamera\"/>\n \t</thing-type>\n \n+\t<thing-type id=\"NOC\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e42a99796414ded0289228d92324816ea829cf4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI4MjM3OA==", "bodyText": "Could be renamed into thing-type:netatmo:camera for example (in the 2 thing types).", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r426282378", "createdAt": "2020-05-17T16:58:21Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.netatmo/src/main/resources/ESH-INF/thing/welcomecamera.xml", "diffHunk": "@@ -27,6 +27,29 @@\n \t\t<config-description-ref uri=\"thing-type:netatmo:nawelcomecamera\"/>\n \t</thing-type>\n \n+\t<thing-type id=\"NOC\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"netatmoapi\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Presence Camera</label>\n+\t\t<description>This represents a presence camera at home</description>\n+\n+\t\t<channels>\n+\t\t\t<channel id=\"welcomeCameraStatus\" typeId=\"status\"></channel>\n+\t\t\t<channel id=\"welcomeCameraSdStatus\" typeId=\"sd_status\"></channel>\n+\t\t\t<channel id=\"welcomeCameraAlimStatus\" typeId=\"alim_status\"></channel>\n+\t\t\t<channel id=\"welcomeCameraIsLocal\" typeId=\"is_locale\"></channel>\n+\t\t\t<channel id=\"welcomeCameraLivePicture\" typeId=\"live_picture\"></channel>\n+\t\t\t<channel id=\"welcomeCameraLivePictureUrl\" typeId=\"live_picture_url\"></channel>\n+\t\t\t<channel id=\"welcomeCameraLiveStreamUrl\" typeId=\"live_stream_url\"></channel>\n+\t\t\t<channel id=\"welcomeHomeEvent\" typeId=\"homeEvent\"></channel>\n+\t\t</channels>\n+\n+\t\t<representation-property>id</representation-property>\n+\t\t<config-description-ref uri=\"thing-type:netatmo:nawelcomecamera\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e42a99796414ded0289228d92324816ea829cf4"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMjE3NjQ2", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-413217646", "createdAt": "2020-05-18T00:40:02Z", "commit": {"oid": "f9572ed2f4faf2a9d975fedba6f639dbeb9674d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwMDo0MDowM1rOGWkyAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwMDo0MDowM1rOGWkyAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMyNDQ4Mw==", "bodyText": "Does this change effect existing users?", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r426324483", "createdAt": "2020-05-18T00:40:03Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.netatmo/src/main/resources/ESH-INF/config/config.xml", "diffHunk": "@@ -142,7 +148,7 @@\n \t\t</parameter>\n \t</config-description>\n \n-\t<config-description uri=\"thing-type:netatmo:nawelcomecamera\">\n+\t<config-description uri=\"thing-type:netatmo:camera\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9572ed2f4faf2a9d975fedba6f639dbeb9674d8"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzA1MjA3", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-413305207", "createdAt": "2020-05-18T06:36:33Z", "commit": {"oid": "f9572ed2f4faf2a9d975fedba6f639dbeb9674d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDEzOTcw", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-413413970", "createdAt": "2020-05-18T09:17:22Z", "commit": {"oid": "f9572ed2f4faf2a9d975fedba6f639dbeb9674d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNTM3NjY0", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-413537664", "createdAt": "2020-05-18T12:18:00Z", "commit": {"oid": "f9572ed2f4faf2a9d975fedba6f639dbeb9674d8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjoxODowMFrOGW0hyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjoxODowMFrOGW0hyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4MjQ3Mw==", "bodyText": "It maybe will be a little bit confusing for users to have the \"welcome\" prefix on their channels.", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r426582473", "createdAt": "2020-05-18T12:18:00Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.netatmo/src/main/resources/ESH-INF/thing/camera.xml", "diffHunk": "@@ -24,7 +24,30 @@\n \t\t</channels>\n \n \t\t<representation-property>id</representation-property>\n-\t\t<config-description-ref uri=\"thing-type:netatmo:nawelcomecamera\"/>\n+\t\t<config-description-ref uri=\"thing-type:netatmo:camera\"/>\n+\t</thing-type>\n+\n+\t<thing-type id=\"NOC\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"netatmoapi\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Presence Camera</label>\n+\t\t<description>This represents a presence camera at home</description>\n+\n+\t\t<channels>\n+\t\t\t<channel id=\"welcomeCameraStatus\" typeId=\"status\"></channel>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9572ed2f4faf2a9d975fedba6f639dbeb9674d8"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTU4Nzgy", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-413958782", "createdAt": "2020-05-18T21:42:01Z", "commit": {"oid": "f9572ed2f4faf2a9d975fedba6f639dbeb9674d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDYwMjky", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-415060292", "createdAt": "2020-05-20T07:27:21Z", "commit": {"oid": "0f00835aee272debe253defb0db074b2813525c7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoyNzoyMVrOGX-mfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzozNjowM1rOGX-39w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NjA5NA==", "bodyText": "Can you please add few spaces in the first column to compensate the suppress of welcome ?", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r427796094", "createdAt": "2020-05-20T07:27:21Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.netatmo/README.md", "diffHunk": "@@ -483,10 +489,17 @@ All these channels are read only.\n | welcomeCameraLivePictureUrl | String    | Url of the live snapshot for this camera                 |\n | welcomeCameraLiveStreamUrl  | String    | Url of the live stream for this camera                   |\n \n-All these channels are read only.\n+**Supported channels for the Presence Camera thing:**\n \n-Warning : the URL of the live snapshot is a fixed URL so the value of the channel welcomeCameraLivePictureUrl will never be updated once first set by the binding.\n-So to get a refreshed picture, you need to use the refresh parameter in your sitemap image element.\n+| Channel ID                  | Item Type | Description                                              |\n+|-----------------------------|-----------|----------------------------------------------------------|\n+| cameraStatus         | Switch    | State of the camera                                      |\n+| cameraSdStatus       | Switch    | State of the SD card                                     |\n+| cameraAlimStatus     | Switch    | State of the power connector                             |\n+| cameraIsLocal        | Switch    | indicates whether the camera is on the same network than the openHAB Netatmo Binding |\n+| cameraLivePicture    | Image     | Camera Live Snapshot                                     |\n+| cameraLivePictureUrl | String    | Url of the live snapshot for this camera                 |\n+| cameraLiveStreamUrl  | String    | Url of the live stream for this camera                   |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f00835aee272debe253defb0db074b2813525c7"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5NzUyOQ==", "bodyText": "UnDefType.NULL should never be set. Please rather use UnDefType.UNDEF.\nCan you fix the other methods in the class please ? I see the same error at line 96 for example.", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r427797529", "createdAt": "2020-05-20T07:30:11Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/ChannelTypeUtils.java", "diffHunk": "@@ -96,6 +96,10 @@ public static State toOnOffType(@Nullable Integer value) {\n         return value != null ? (value == 1 ? OnOffType.ON : OnOffType.OFF) : UnDefType.NULL;\n     }\n \n+    public static State toOnOffType(@Nullable Boolean value) {\n+        return value != null ? (value ? OnOffType.ON : OnOffType.OFF) : UnDefType.NULL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f00835aee272debe253defb0db074b2813525c7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5OTIwMg==", "bodyText": "Just a comment, I see the scope \"write_camera\" is used for the Welcome camera. I don't remember what it is its role. But are you sure that it is not required for the Presence ?", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r427799202", "createdAt": "2020-05-20T07:33:25Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/handler/NetatmoBridgeHandler.java", "diffHunk": "@@ -210,6 +210,11 @@ private String getApiScope() {\n             scopes.add(\"write_camera\");\n         }\n \n+        if (configuration.readPresence) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f00835aee272debe253defb0db074b2813525c7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgwMDU2Nw==", "bodyText": "Do we keep this channel with this name ?", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r427800567", "createdAt": "2020-05-20T07:36:03Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.netatmo/src/main/resources/ESH-INF/thing/camera.xml", "diffHunk": "@@ -24,7 +24,30 @@\n \t\t</channels>\n \n \t\t<representation-property>id</representation-property>\n-\t\t<config-description-ref uri=\"thing-type:netatmo:nawelcomecamera\"/>\n+\t\t<config-description-ref uri=\"thing-type:netatmo:camera\"/>\n+\t</thing-type>\n+\n+\t<thing-type id=\"NOC\">\n+\t\t<supported-bridge-type-refs>\n+\t\t\t<bridge-type-ref id=\"netatmoapi\" />\n+\t\t</supported-bridge-type-refs>\n+\n+\t\t<label>Presence Camera</label>\n+\t\t<description>This represents a presence camera at home</description>\n+\n+\t\t<channels>\n+\t\t\t<channel id=\"cameraStatus\" typeId=\"status\"></channel>\n+\t\t\t<channel id=\"cameraSdStatus\" typeId=\"sd_status\"></channel>\n+\t\t\t<channel id=\"cameraAlimStatus\" typeId=\"alim_status\"></channel>\n+\t\t\t<channel id=\"cameraIsLocal\" typeId=\"is_locale\"></channel>\n+\t\t\t<channel id=\"cameraLivePicture\" typeId=\"live_picture\"></channel>\n+\t\t\t<channel id=\"cameraLivePictureUrl\" typeId=\"live_picture_url\"></channel>\n+\t\t\t<channel id=\"cameraLiveStreamUrl\" typeId=\"live_stream_url\"></channel>\n+\t\t\t<channel id=\"welcomeHomeEvent\" typeId=\"homeEvent\"></channel>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f00835aee272debe253defb0db074b2813525c7"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ff7210e820c8493d9a91e4f511d55b8c0b25f66", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/0ff7210e820c8493d9a91e4f511d55b8c0b25f66", "committedDate": "2020-05-20T19:20:06Z", "message": "Support for the Presence camera added\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7342c5fcf8fe17151c76829992caeb0ca6feb109", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/7342c5fcf8fe17151c76829992caeb0ca6feb109", "committedDate": "2020-05-20T19:20:06Z", "message": "README updated for Presence camera support\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ed5b69f65f03de3fa0f0297837b6301dfabd7ed", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/7ed5b69f65f03de3fa0f0297837b6301dfabd7ed", "committedDate": "2020-05-20T19:20:06Z", "message": "Files and thing types renamed because it handles now various camera types (not only the Welcome camera)\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a6033da58987ce0d805994f1a8a9cd83f3cc06", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/f9a6033da58987ce0d805994f1a8a9cd83f3cc06", "committedDate": "2020-05-20T19:20:06Z", "message": "Permission configurations renamed because it handles now various camera types (not only the Welcome camera)\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f7bd54d855e5875259b1dbfef480f5b3c57449f", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/1f7bd54d855e5875259b1dbfef480f5b3c57449f", "committedDate": "2020-05-20T19:20:06Z", "message": "README updated to clarify the Welcome and Presence product names\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4909e60f88085bce7b10a71ae50eaf12b4c7165", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/c4909e60f88085bce7b10a71ae50eaf12b4c7165", "committedDate": "2020-05-20T19:20:06Z", "message": "Permission configurations renamed because it handles now various camera types (not only the Welcome camera) ; Reverted. Now it is separated, so the user has explicitly to decide if he wants to grant the access to outdoor cameras.\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a79ace451eb7806137c49bc15bef8cc162375e2", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/7a79ace451eb7806137c49bc15bef8cc162375e2", "committedDate": "2020-05-20T19:20:06Z", "message": "Camera channels separated to remove \"welcome\" from the (Presence) channel names. The channels of the Welcome camera were not renamed to be downward compatible.\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8735d08ed6467133ddc80466aa2fbbf9c295cc", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/4e8735d08ed6467133ddc80466aa2fbbf9c295cc", "committedDate": "2020-05-20T19:20:06Z", "message": "Camera channels separated to remove \"welcome\" from the (Presence) channel names. The channels of the Welcome camera were not renamed to be downward compatible.\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16c7caca3963124afce054c99ef828a8b2156e54", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/16c7caca3963124afce054c99ef828a8b2156e54", "committedDate": "2020-05-20T19:20:07Z", "message": "Code optimization\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e425b3e25853326e159743c1871437f8e6b6151", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/6e425b3e25853326e159743c1871437f8e6b6151", "committedDate": "2020-05-20T19:20:07Z", "message": "README format fixed\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e52660461a21db64446100b73d1ca2c87325472c", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/e52660461a21db64446100b73d1ca2c87325472c", "committedDate": "2020-05-20T19:20:07Z", "message": "README format fixed\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee8cbe384fb656a7f0254c3cc7626e11df7d30f8", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/ee8cbe384fb656a7f0254c3cc7626e11df7d30f8", "committedDate": "2020-05-20T19:20:07Z", "message": "NULL changed to UNDEF like mentioned within the code review\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25ef71ae3e6f74110ef0ace8a09f83fe73590ad9", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/25ef71ae3e6f74110ef0ace8a09f83fe73590ad9", "committedDate": "2020-05-20T19:20:07Z", "message": "welcomeHomeEvent channel removed for the Presence camera, event handling for the Presence will get realized later\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "707124bec0658db90aaa17717b1243fd8eef8609", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/707124bec0658db90aaa17717b1243fd8eef8609", "committedDate": "2020-05-20T19:20:07Z", "message": "Code optimization\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc8e8e94089e71bd96bbda65e08c4e7827184aaf", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/bc8e8e94089e71bd96bbda65e08c4e7827184aaf", "committedDate": "2020-05-20T19:28:12Z", "message": "Code optimization\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MDg3MDk2", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-416087096", "createdAt": "2020-05-21T11:57:07Z", "commit": {"oid": "bc8e8e94089e71bd96bbda65e08c4e7827184aaf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NDUyODU3", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-416452857", "createdAt": "2020-05-21T20:05:47Z", "commit": {"oid": "bc8e8e94089e71bd96bbda65e08c4e7827184aaf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDowNTo0N1rOGZBCWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDowNjozMlrOGZBDvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg4NDU3MQ==", "bodyText": "Some of our build tools don't like EOF without a newline. So add a newline here.", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r428884571", "createdAt": "2020-05-21T20:05:47Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/welcome/NAWelcomeCameraHandler.java", "diffHunk": "@@ -12,106 +12,44 @@\n  */\n package org.openhab.binding.netatmo.internal.welcome;\n \n-import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.*;\n import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\n \n import org.eclipse.jdt.annotation.NonNull;\n-import org.eclipse.smarthome.core.library.types.OnOffType;\n-import org.eclipse.smarthome.core.library.types.StringType;\n import org.eclipse.smarthome.core.thing.Thing;\n import org.eclipse.smarthome.core.types.State;\n-import org.eclipse.smarthome.core.types.UnDefType;\n-import org.eclipse.smarthome.io.net.http.HttpUtil;\n-import org.openhab.binding.netatmo.internal.handler.NetatmoModuleHandler;\n-\n-import io.swagger.client.model.NAWelcomeCamera;\n+import org.openhab.binding.netatmo.internal.camera.CameraHandler;\n \n /**\n  * {@link NAWelcomeCameraHandler} is the class used to handle the Welcome Camera Data\n  *\n  * @author Ing. Peter Weiss - Initial contribution\n  *\n  */\n-public class NAWelcomeCameraHandler extends NetatmoModuleHandler<NAWelcomeCamera> {\n-    private static final String LIVE_PICTURE = \"/live/snapshot_720.jpg\";\n+public class NAWelcomeCameraHandler extends CameraHandler {\n \n     public NAWelcomeCameraHandler(@NonNull Thing thing) {\n         super(thing);\n     }\n \n-    @Override\n-    protected void updateProperties(NAWelcomeCamera moduleData) {\n-        updateProperties(null, moduleData.getType());\n-    }\n-\n     @SuppressWarnings(\"null\")\n     @Override\n-    protected State getNAThingProperty(String chanelId) {\n-        switch (chanelId) {\n+    protected State getNAThingProperty(String channelId) {\n+        switch (channelId) {\n             case CHANNEL_WELCOME_CAMERA_STATUS:\n-                return module != null ? toOnOffType(module.getStatus()) : UnDefType.UNDEF;\n+                return getStatusState();\n             case CHANNEL_WELCOME_CAMERA_SDSTATUS:\n-                return module != null ? toOnOffType(module.getSdStatus()) : UnDefType.UNDEF;\n+                return getSdStatusState();\n             case CHANNEL_WELCOME_CAMERA_ALIMSTATUS:\n-                return module != null ? toOnOffType(module.getAlimStatus()) : UnDefType.UNDEF;\n+                return getAlimStatusState();\n             case CHANNEL_WELCOME_CAMERA_ISLOCAL:\n-                return (module == null || module.getIsLocal() == null) ? UnDefType.UNDEF\n-                        : module.getIsLocal() ? OnOffType.ON : OnOffType.OFF;\n+                return getIsLocalState();\n             case CHANNEL_WELCOME_CAMERA_LIVEPICTURE_URL:\n-                return getLivePictureURL() == null ? UnDefType.UNDEF : toStringType(getLivePictureURL());\n+                return getLivePictureURLState();\n             case CHANNEL_WELCOME_CAMERA_LIVEPICTURE:\n-                return getLivePictureURL() == null ? UnDefType.UNDEF : HttpUtil.downloadImage(getLivePictureURL());\n+                return getLivePictureState();\n             case CHANNEL_WELCOME_CAMERA_LIVESTREAM_URL:\n-                return getLiveStreamURL() == null ? UnDefType.UNDEF : new StringType(getLiveStreamURL());\n-        }\n-        return super.getNAThingProperty(chanelId);\n-    }\n-\n-    /**\n-     * Get the url for the live snapshot\n-     *\n-     * @return Url of the live snapshot\n-     */\n-    private String getLivePictureURL() {\n-        String result = getVpnUrl();\n-        if (result != null) {\n-            result += LIVE_PICTURE;\n-        }\n-        return result;\n-    }\n-\n-    /**\n-     * Get the url for the live stream depending wether local or not\n-     *\n-     * @return Url of the live stream\n-     */\n-    private String getLiveStreamURL() {\n-        String result = getVpnUrl();\n-        if (result != null) {\n-            result += \"/live/index\";\n-            result += isLocal() ? \"_local\" : \"\";\n-            result += \".m3u8\";\n+                return getLiveStreamState();\n         }\n-        return result;\n-    }\n-\n-    @SuppressWarnings(\"null\")\n-    private String getVpnUrl() {\n-        return (module == null) ? null : module.getVpnUrl();\n-    }\n-\n-    public String getStreamURL(String videoId) {\n-        String result = getVpnUrl();\n-        if (result != null) {\n-            result += \"/vod/\" + videoId + \"/index\";\n-            result += isLocal() ? \"_local\" : \"\";\n-            result += \".m3u8\";\n-        }\n-        return result;\n-    }\n-\n-    @SuppressWarnings(\"null\")\n-    private boolean isLocal() {\n-        return (module == null || module.getIsLocal() == null) ? false : module.getIsLocal().booleanValue();\n+        return super.getNAThingProperty(channelId);\n     }\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc8e8e94089e71bd96bbda65e08c4e7827184aaf"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg4NDkyNA==", "bodyText": "Some of our build tools don't like EOF without a newline. So add a newline here.", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r428884924", "createdAt": "2020-05-21T20:06:32Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/camera/CameraHandler.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.netatmo.internal.camera;\r\n+\r\n+import io.swagger.client.model.NAWelcomeCamera;\r\n+import org.eclipse.jdt.annotation.NonNull;\r\n+import org.eclipse.smarthome.core.library.types.StringType;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.types.State;\r\n+import org.eclipse.smarthome.core.types.UnDefType;\r\n+import org.eclipse.smarthome.io.net.http.HttpUtil;\r\n+import org.openhab.binding.netatmo.internal.handler.NetatmoModuleHandler;\r\n+\r\n+import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.toOnOffType;\r\n+import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.toStringType;\r\n+import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\r\n+\r\n+/**\r\n+ * {@link CameraHandler} is the class used to handle Camera Data\r\n+ *\r\n+ * @author Sven Strohschein (partly moved code from NAWelcomeCameraHandler to introduce inheritance, see NAWelcomeCameraHandler)\r\n+ *\r\n+ */\r\n+public class CameraHandler extends NetatmoModuleHandler<NAWelcomeCamera> {\r\n+\r\n+    private static final String LIVE_PICTURE = \"/live/snapshot_720.jpg\";\r\n+\r\n+    public CameraHandler(@NonNull Thing thing) {\r\n+        super(thing);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void updateProperties(NAWelcomeCamera moduleData) {\r\n+        updateProperties(null, moduleData.getType());\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"null\")\r\n+    @Override\r\n+    protected State getNAThingProperty(String channelId) {\r\n+        switch (channelId) {\r\n+            case CHANNEL_CAMERA_STATUS:\r\n+                return getStatusState();\r\n+            case CHANNEL_CAMERA_SDSTATUS:\r\n+                return getSdStatusState();\r\n+            case CHANNEL_CAMERA_ALIMSTATUS:\r\n+                return getAlimStatusState();\r\n+            case CHANNEL_CAMERA_ISLOCAL:\r\n+                return getIsLocalState();\r\n+            case CHANNEL_CAMERA_LIVEPICTURE_URL:\r\n+                return getLivePictureURLState();\r\n+            case CHANNEL_CAMERA_LIVEPICTURE:\r\n+                return getLivePictureState();\r\n+            case CHANNEL_CAMERA_LIVESTREAM_URL:\r\n+                return getLiveStreamState();\r\n+        }\r\n+        return super.getNAThingProperty(channelId);\r\n+    }\r\n+\r\n+    protected State getStatusState() {\r\n+        return module != null ? toOnOffType(module.getStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getSdStatusState() {\r\n+        return module != null ? toOnOffType(module.getSdStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getAlimStatusState() {\r\n+        return module != null ? toOnOffType(module.getAlimStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getIsLocalState() {\r\n+        return module != null ? toOnOffType(module.getIsLocal()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getLivePictureURLState() {\r\n+        return getLivePictureURL() == null ? UnDefType.UNDEF : toStringType(getLivePictureURL());\r\n+    }\r\n+\r\n+    protected State getLivePictureState() {\r\n+        return getLivePictureURL() == null ? UnDefType.UNDEF : HttpUtil.downloadImage(getLivePictureURL());\r\n+    }\r\n+\r\n+    protected State getLiveStreamState() {\r\n+        return getLiveStreamURL() == null ? UnDefType.UNDEF : new StringType(getLiveStreamURL());\r\n+    }\r\n+\r\n+    /**\r\n+     * Get the url for the live snapshot\r\n+     *\r\n+     * @return Url of the live snapshot\r\n+     */\r\n+    private String getLivePictureURL() {\r\n+        String result = getVpnUrl();\r\n+        if (result != null) {\r\n+            result += LIVE_PICTURE;\r\n+        }\r\n+        return result;\r\n+    }\r\n+\r\n+    /**\r\n+     * Get the url for the live stream depending wether local or not\r\n+     *\r\n+     * @return Url of the live stream\r\n+     */\r\n+    private String getLiveStreamURL() {\r\n+        String result = getVpnUrl();\r\n+        if (result != null) {\r\n+            result += \"/live/index\";\r\n+            result += isLocal() ? \"_local\" : \"\";\r\n+            result += \".m3u8\";\r\n+        }\r\n+        return result;\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"null\")\r\n+    private String getVpnUrl() {\r\n+        return (module == null) ? null : module.getVpnUrl();\r\n+    }\r\n+\r\n+    public String getStreamURL(String videoId) {\r\n+        String result = getVpnUrl();\r\n+        if (result != null) {\r\n+            result += \"/vod/\" + videoId + \"/index\";\r\n+            result += isLocal() ? \"_local\" : \"\";\r\n+            result += \".m3u8\";\r\n+        }\r\n+        return result;\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"null\")\r\n+    private boolean isLocal() {\r\n+        return (module == null || module.getIsLocal() == null) ? false : module.getIsLocal().booleanValue();\r\n+    }\r\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc8e8e94089e71bd96bbda65e08c4e7827184aaf"}, "originalPosition": 144}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2609e722b91b1797d228e4075991602ce88635e0", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/2609e722b91b1797d228e4075991602ce88635e0", "committedDate": "2020-05-21T20:18:02Z", "message": "New line at the end of the file added\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NDYzMjA4", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-416463208", "createdAt": "2020-05-21T20:21:57Z", "commit": {"oid": "2609e722b91b1797d228e4075991602ce88635e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMTo1N1rOGZBhkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDoyMzoxN1rOGZBkGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MjU2MA==", "bodyText": "Please cache getLiveStreamURL() to a local variable to it doesn't get recomputed. Also do the same for  the other methods above.", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r428892560", "createdAt": "2020-05-21T20:21:57Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/camera/CameraHandler.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.netatmo.internal.camera;\r\n+\r\n+import io.swagger.client.model.NAWelcomeCamera;\r\n+import org.eclipse.jdt.annotation.NonNull;\r\n+import org.eclipse.smarthome.core.library.types.StringType;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.types.State;\r\n+import org.eclipse.smarthome.core.types.UnDefType;\r\n+import org.eclipse.smarthome.io.net.http.HttpUtil;\r\n+import org.openhab.binding.netatmo.internal.handler.NetatmoModuleHandler;\r\n+\r\n+import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.toOnOffType;\r\n+import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.toStringType;\r\n+import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\r\n+\r\n+/**\r\n+ * {@link CameraHandler} is the class used to handle Camera Data\r\n+ *\r\n+ * @author Sven Strohschein (partly moved code from NAWelcomeCameraHandler to introduce inheritance, see NAWelcomeCameraHandler)\r\n+ *\r\n+ */\r\n+public class CameraHandler extends NetatmoModuleHandler<NAWelcomeCamera> {\r\n+\r\n+    private static final String LIVE_PICTURE = \"/live/snapshot_720.jpg\";\r\n+\r\n+    public CameraHandler(@NonNull Thing thing) {\r\n+        super(thing);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void updateProperties(NAWelcomeCamera moduleData) {\r\n+        updateProperties(null, moduleData.getType());\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"null\")\r\n+    @Override\r\n+    protected State getNAThingProperty(String channelId) {\r\n+        switch (channelId) {\r\n+            case CHANNEL_CAMERA_STATUS:\r\n+                return getStatusState();\r\n+            case CHANNEL_CAMERA_SDSTATUS:\r\n+                return getSdStatusState();\r\n+            case CHANNEL_CAMERA_ALIMSTATUS:\r\n+                return getAlimStatusState();\r\n+            case CHANNEL_CAMERA_ISLOCAL:\r\n+                return getIsLocalState();\r\n+            case CHANNEL_CAMERA_LIVEPICTURE_URL:\r\n+                return getLivePictureURLState();\r\n+            case CHANNEL_CAMERA_LIVEPICTURE:\r\n+                return getLivePictureState();\r\n+            case CHANNEL_CAMERA_LIVESTREAM_URL:\r\n+                return getLiveStreamState();\r\n+        }\r\n+        return super.getNAThingProperty(channelId);\r\n+    }\r\n+\r\n+    protected State getStatusState() {\r\n+        return module != null ? toOnOffType(module.getStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getSdStatusState() {\r\n+        return module != null ? toOnOffType(module.getSdStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getAlimStatusState() {\r\n+        return module != null ? toOnOffType(module.getAlimStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getIsLocalState() {\r\n+        return module != null ? toOnOffType(module.getIsLocal()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getLivePictureURLState() {\r\n+        return getLivePictureURL() == null ? UnDefType.UNDEF : toStringType(getLivePictureURL());\r\n+    }\r\n+\r\n+    protected State getLivePictureState() {\r\n+        return getLivePictureURL() == null ? UnDefType.UNDEF : HttpUtil.downloadImage(getLivePictureURL());\r\n+    }\r\n+\r\n+    protected State getLiveStreamState() {\r\n+        return getLiveStreamURL() == null ? UnDefType.UNDEF : new StringType(getLiveStreamURL());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2609e722b91b1797d228e4075991602ce88635e0"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MzEyOQ==", "bodyText": "You should use a StringBuilder here instead of raw string concatenation.", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r428893129", "createdAt": "2020-05-21T20:23:08Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/camera/CameraHandler.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.netatmo.internal.camera;\r\n+\r\n+import io.swagger.client.model.NAWelcomeCamera;\r\n+import org.eclipse.jdt.annotation.NonNull;\r\n+import org.eclipse.smarthome.core.library.types.StringType;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.types.State;\r\n+import org.eclipse.smarthome.core.types.UnDefType;\r\n+import org.eclipse.smarthome.io.net.http.HttpUtil;\r\n+import org.openhab.binding.netatmo.internal.handler.NetatmoModuleHandler;\r\n+\r\n+import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.toOnOffType;\r\n+import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.toStringType;\r\n+import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\r\n+\r\n+/**\r\n+ * {@link CameraHandler} is the class used to handle Camera Data\r\n+ *\r\n+ * @author Sven Strohschein (partly moved code from NAWelcomeCameraHandler to introduce inheritance, see NAWelcomeCameraHandler)\r\n+ *\r\n+ */\r\n+public class CameraHandler extends NetatmoModuleHandler<NAWelcomeCamera> {\r\n+\r\n+    private static final String LIVE_PICTURE = \"/live/snapshot_720.jpg\";\r\n+\r\n+    public CameraHandler(@NonNull Thing thing) {\r\n+        super(thing);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void updateProperties(NAWelcomeCamera moduleData) {\r\n+        updateProperties(null, moduleData.getType());\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"null\")\r\n+    @Override\r\n+    protected State getNAThingProperty(String channelId) {\r\n+        switch (channelId) {\r\n+            case CHANNEL_CAMERA_STATUS:\r\n+                return getStatusState();\r\n+            case CHANNEL_CAMERA_SDSTATUS:\r\n+                return getSdStatusState();\r\n+            case CHANNEL_CAMERA_ALIMSTATUS:\r\n+                return getAlimStatusState();\r\n+            case CHANNEL_CAMERA_ISLOCAL:\r\n+                return getIsLocalState();\r\n+            case CHANNEL_CAMERA_LIVEPICTURE_URL:\r\n+                return getLivePictureURLState();\r\n+            case CHANNEL_CAMERA_LIVEPICTURE:\r\n+                return getLivePictureState();\r\n+            case CHANNEL_CAMERA_LIVESTREAM_URL:\r\n+                return getLiveStreamState();\r\n+        }\r\n+        return super.getNAThingProperty(channelId);\r\n+    }\r\n+\r\n+    protected State getStatusState() {\r\n+        return module != null ? toOnOffType(module.getStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getSdStatusState() {\r\n+        return module != null ? toOnOffType(module.getSdStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getAlimStatusState() {\r\n+        return module != null ? toOnOffType(module.getAlimStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getIsLocalState() {\r\n+        return module != null ? toOnOffType(module.getIsLocal()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getLivePictureURLState() {\r\n+        return getLivePictureURL() == null ? UnDefType.UNDEF : toStringType(getLivePictureURL());\r\n+    }\r\n+\r\n+    protected State getLivePictureState() {\r\n+        return getLivePictureURL() == null ? UnDefType.UNDEF : HttpUtil.downloadImage(getLivePictureURL());\r\n+    }\r\n+\r\n+    protected State getLiveStreamState() {\r\n+        return getLiveStreamURL() == null ? UnDefType.UNDEF : new StringType(getLiveStreamURL());\r\n+    }\r\n+\r\n+    /**\r\n+     * Get the url for the live snapshot\r\n+     *\r\n+     * @return Url of the live snapshot\r\n+     */\r\n+    private String getLivePictureURL() {\r\n+        String result = getVpnUrl();\r\n+        if (result != null) {\r\n+            result += LIVE_PICTURE;\r\n+        }\r\n+        return result;\r\n+    }\r\n+\r\n+    /**\r\n+     * Get the url for the live stream depending wether local or not\r\n+     *\r\n+     * @return Url of the live stream\r\n+     */\r\n+    private String getLiveStreamURL() {\r\n+        String result = getVpnUrl();\r\n+        if (result != null) {\r\n+            result += \"/live/index\";\r\n+            result += isLocal() ? \"_local\" : \"\";\r\n+            result += \".m3u8\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2609e722b91b1797d228e4075991602ce88635e0"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg5MzIwOQ==", "bodyText": "same here", "url": "https://github.com/openhab/openhab-addons/pull/7660#discussion_r428893209", "createdAt": "2020-05-21T20:23:17Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.netatmo/src/main/java/org/openhab/binding/netatmo/internal/camera/CameraHandler.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.netatmo.internal.camera;\r\n+\r\n+import io.swagger.client.model.NAWelcomeCamera;\r\n+import org.eclipse.jdt.annotation.NonNull;\r\n+import org.eclipse.smarthome.core.library.types.StringType;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.types.State;\r\n+import org.eclipse.smarthome.core.types.UnDefType;\r\n+import org.eclipse.smarthome.io.net.http.HttpUtil;\r\n+import org.openhab.binding.netatmo.internal.handler.NetatmoModuleHandler;\r\n+\r\n+import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.toOnOffType;\r\n+import static org.openhab.binding.netatmo.internal.ChannelTypeUtils.toStringType;\r\n+import static org.openhab.binding.netatmo.internal.NetatmoBindingConstants.*;\r\n+\r\n+/**\r\n+ * {@link CameraHandler} is the class used to handle Camera Data\r\n+ *\r\n+ * @author Sven Strohschein (partly moved code from NAWelcomeCameraHandler to introduce inheritance, see NAWelcomeCameraHandler)\r\n+ *\r\n+ */\r\n+public class CameraHandler extends NetatmoModuleHandler<NAWelcomeCamera> {\r\n+\r\n+    private static final String LIVE_PICTURE = \"/live/snapshot_720.jpg\";\r\n+\r\n+    public CameraHandler(@NonNull Thing thing) {\r\n+        super(thing);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void updateProperties(NAWelcomeCamera moduleData) {\r\n+        updateProperties(null, moduleData.getType());\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"null\")\r\n+    @Override\r\n+    protected State getNAThingProperty(String channelId) {\r\n+        switch (channelId) {\r\n+            case CHANNEL_CAMERA_STATUS:\r\n+                return getStatusState();\r\n+            case CHANNEL_CAMERA_SDSTATUS:\r\n+                return getSdStatusState();\r\n+            case CHANNEL_CAMERA_ALIMSTATUS:\r\n+                return getAlimStatusState();\r\n+            case CHANNEL_CAMERA_ISLOCAL:\r\n+                return getIsLocalState();\r\n+            case CHANNEL_CAMERA_LIVEPICTURE_URL:\r\n+                return getLivePictureURLState();\r\n+            case CHANNEL_CAMERA_LIVEPICTURE:\r\n+                return getLivePictureState();\r\n+            case CHANNEL_CAMERA_LIVESTREAM_URL:\r\n+                return getLiveStreamState();\r\n+        }\r\n+        return super.getNAThingProperty(channelId);\r\n+    }\r\n+\r\n+    protected State getStatusState() {\r\n+        return module != null ? toOnOffType(module.getStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getSdStatusState() {\r\n+        return module != null ? toOnOffType(module.getSdStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getAlimStatusState() {\r\n+        return module != null ? toOnOffType(module.getAlimStatus()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getIsLocalState() {\r\n+        return module != null ? toOnOffType(module.getIsLocal()) : UnDefType.UNDEF;\r\n+    }\r\n+\r\n+    protected State getLivePictureURLState() {\r\n+        return getLivePictureURL() == null ? UnDefType.UNDEF : toStringType(getLivePictureURL());\r\n+    }\r\n+\r\n+    protected State getLivePictureState() {\r\n+        return getLivePictureURL() == null ? UnDefType.UNDEF : HttpUtil.downloadImage(getLivePictureURL());\r\n+    }\r\n+\r\n+    protected State getLiveStreamState() {\r\n+        return getLiveStreamURL() == null ? UnDefType.UNDEF : new StringType(getLiveStreamURL());\r\n+    }\r\n+\r\n+    /**\r\n+     * Get the url for the live snapshot\r\n+     *\r\n+     * @return Url of the live snapshot\r\n+     */\r\n+    private String getLivePictureURL() {\r\n+        String result = getVpnUrl();\r\n+        if (result != null) {\r\n+            result += LIVE_PICTURE;\r\n+        }\r\n+        return result;\r\n+    }\r\n+\r\n+    /**\r\n+     * Get the url for the live stream depending wether local or not\r\n+     *\r\n+     * @return Url of the live stream\r\n+     */\r\n+    private String getLiveStreamURL() {\r\n+        String result = getVpnUrl();\r\n+        if (result != null) {\r\n+            result += \"/live/index\";\r\n+            result += isLocal() ? \"_local\" : \"\";\r\n+            result += \".m3u8\";\r\n+        }\r\n+        return result;\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"null\")\r\n+    private String getVpnUrl() {\r\n+        return (module == null) ? null : module.getVpnUrl();\r\n+    }\r\n+\r\n+    public String getStreamURL(String videoId) {\r\n+        String result = getVpnUrl();\r\n+        if (result != null) {\r\n+            result += \"/vod/\" + videoId + \"/index\";\r\n+            result += isLocal() ? \"_local\" : \"\";\r\n+            result += \".m3u8\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2609e722b91b1797d228e4075991602ce88635e0"}, "originalPosition": 135}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1912bdcbc7409002617b5f81c151abc057420851", "author": {"user": {"login": "sstrohschein", "name": null}}, "url": "https://github.com/openhab/openhab-addons/commit/1912bdcbc7409002617b5f81c151abc057420851", "committedDate": "2020-05-21T20:44:29Z", "message": "Code optimization\n\nSigned-off-by: Sven Strohschein <sven.strohschein@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NDg4NjM1", "url": "https://github.com/openhab/openhab-addons/pull/7660#pullrequestreview-416488635", "createdAt": "2020-05-21T21:00:17Z", "commit": {"oid": "1912bdcbc7409002617b5f81c151abc057420851"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 567, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}