{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjE0ODk1", "number": 7355, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyNDoxNlrODxyhbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMTo1ODo1NFrODyQkjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTM0NTc1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyNDoxNlrOGFdhQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyNDoxNlrOGFdhQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3OTcxNQ==", "bodyText": "app  is know to be updated to empty values during app switches on TV. it will lead to temporary false power channel states. users will trigger scenes incorrectly.", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r408379715", "createdAt": "2020-04-14T19:24:16Z", "author": {"login": "sprehn"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java", "diffHunk": "@@ -120,10 +120,12 @@ public void onError(@Nullable String error) {\n \n             @Override\n             public void onSuccess(@Nullable AppInfo appInfo) {\n-                if (appInfo == null) {\n+                if (appInfo == null || appInfo.getId().isEmpty()) {\n                     handler.postUpdate(channelId, UnDefType.UNDEF);\n+                    handler.getSocket().disconnecting();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fb58f56fd4cbf4d7836b70e393804efe8426d45"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTM0NjI0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyNDoyNlrOGFdhkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOTozMzoyM1rOGFxlrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3OTc5Mg==", "bodyText": "same here, we should not use this to reset to registered from a temporary empty app\nhowever...\n\nBut we need something to move from DISCONNECTING to REGISTERED when TV is switched ON again (with WOL or simply the TV remote control). I think we should consider the receiving of data on the web socket as a trigger for that.\n\nI somewhat doubt that WOL will abort the shutdown process.\nhm... it may work for remote control. if it works I am fine", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r408379792", "createdAt": "2020-04-14T19:24:26Z", "author": {"login": "sprehn"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java", "diffHunk": "@@ -120,10 +120,12 @@ public void onError(@Nullable String error) {\n \n             @Override\n             public void onSuccess(@Nullable AppInfo appInfo) {\n-                if (appInfo == null) {\n+                if (appInfo == null || appInfo.getId().isEmpty()) {\n                     handler.postUpdate(channelId, UnDefType.UNDEF);\n+                    handler.getSocket().disconnecting();\n                 } else {\n                     handler.postUpdate(channelId, new StringType(appInfo.getId()));\n+                    handler.getSocket().stopDisconnecting();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fb58f56fd4cbf4d7836b70e393804efe8426d45"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODcwODUyNg==", "bodyText": "It works for remote control. For WOL, I have to try again your version but I think I remember I received the app just after the WOL.", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r408708526", "createdAt": "2020-04-15T09:33:23Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/LauncherApplication.java", "diffHunk": "@@ -120,10 +120,12 @@ public void onError(@Nullable String error) {\n \n             @Override\n             public void onSuccess(@Nullable AppInfo appInfo) {\n-                if (appInfo == null) {\n+                if (appInfo == null || appInfo.getId().isEmpty()) {\n                     handler.postUpdate(channelId, UnDefType.UNDEF);\n+                    handler.getSocket().disconnecting();\n                 } else {\n                     handler.postUpdate(channelId, new StringType(appInfo.getId()));\n+                    handler.getSocket().stopDisconnecting();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM3OTc5Mg=="}, "originalCommit": {"oid": "8fb58f56fd4cbf4d7836b70e393804efe8426d45"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTM2MTkyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyODo1N1rOGFdrZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOToyODo1N1rOGFdrZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4MjMxMA==", "bodyText": "agree with this call here, but in LGWebOSTVSocket::powerOff should set the disconnecting state on successful response.", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r408382310", "createdAt": "2020-04-14T19:28:57Z", "author": {"login": "sprehn"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/PowerControlPower.java", "diffHunk": "@@ -51,11 +49,7 @@ public void onReceiveCommand(String channelId, LGWebOSHandler handler, Command c\n              */\n             handler.postUpdate(channelId, OnOffType.OFF);\n         } else if (OnOffType.OFF == command) {\n-            if (powerOn) {\n-                handler.getSocket().powerOff(getDefaultResponseListener());\n-            } else {\n-                logger.debug(\"Received OFF - Ignored as the TV is already off.\");\n-            }\n+            handler.getSocket().powerOff(getDefaultResponseListener());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fb58f56fd4cbf4d7836b70e393804efe8426d45"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzczNzU1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSTVSocket.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDo0OTozN1rOGF0NiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMToxODo0M1rOGF1Hng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1MTQ5Nw==", "bodyText": "Instead of handling this in onMessage. Let's do it this way to keep those concerns in one coherent in one place:\n public void powerOff(final ResponseListener<CommandConfirmation> listener) {\n        String uri = \"ssap://system/turnOff\";\n\n        ResponseListener<CommandConfirmation> interceptor = new ResponseListener<CommandConfirmation>() {\n\n            @Override\n            public void onSuccess(CommandConfirmation confirmation) {\n                if (confirmation.getReturnValue() && state == State.REGISTERED) {\n                    setState(State.DISCONNECTING);\n                }\n                listener.onSuccess(confirmation);\n            }\n\n            @Override\n            public void onError(String message) {\n                listener.onError(message);\n            }\n        };\n        ServiceCommand<CommandConfirmation> request = new ServiceCommand<>(uri, null,\n                x -> GSON.fromJson(x, CommandConfirmation.class), interceptor);\n        sendCommand(request);\n    }\n\nsame for the application listener", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r408751497", "createdAt": "2020-04-15T10:49:37Z", "author": {"login": "sprehn"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSTVSocket.java", "diffHunk": "@@ -365,7 +370,25 @@ public void onMessage(String message) {\n                     break;\n                 }\n                 try {\n-                    request.processResponse(response.getPayload().getAsJsonObject());\n+                    JsonObject jsonResponse = response.getPayload().getAsJsonObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95b867065c44ccc839a2d40412ffae687a65197c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc2NjM2Ng==", "bodyText": "Yes, that looks cleaner like this.", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r408766366", "createdAt": "2020-04-15T11:18:43Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSTVSocket.java", "diffHunk": "@@ -365,7 +370,25 @@ public void onMessage(String message) {\n                     break;\n                 }\n                 try {\n-                    request.processResponse(response.getPayload().getAsJsonObject());\n+                    JsonObject jsonResponse = response.getPayload().getAsJsonObject();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1MTQ5Nw=="}, "originalCommit": {"oid": "95b867065c44ccc839a2d40412ffae687a65197c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDI2ODk1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSTVSocket.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMTo1ODo1NFrOGGNE2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTo1ODoxN1rOGGdzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1ODg3NQ==", "bodyText": "I hate to make you do this as part of this PR but the issue is bad enough and I don't want it to get worse.\nPlease order the fields by: static final -> final -> non-final.", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r409158875", "createdAt": "2020-04-15T21:58:54Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSTVSocket.java", "diffHunk": "@@ -114,6 +118,11 @@\n     private final Logger logger = LoggerFactory.getLogger(LGWebOSTVSocket.class);\n     private int nextRequestId = 0;\n \n+    private final ScheduledExecutorService scheduler;\n+    private @Nullable ScheduledFuture<?> disconnectingJob;\n+\n+    private static final int DISCONNECTING_DELAY_SECONDS = 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55e4ac747db9bf217efd026ea4ce3f890717b7be"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQwOTQwNg==", "bodyText": "Done for the classes LGWebOSHandler and LGWebOSTVSocket.", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r409409406", "createdAt": "2020-04-16T09:21:11Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSTVSocket.java", "diffHunk": "@@ -114,6 +118,11 @@\n     private final Logger logger = LoggerFactory.getLogger(LGWebOSTVSocket.class);\n     private int nextRequestId = 0;\n \n+    private final ScheduledExecutorService scheduler;\n+    private @Nullable ScheduledFuture<?> disconnectingJob;\n+\n+    private static final int DISCONNECTING_DELAY_SECONDS = 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1ODg3NQ=="}, "originalCommit": {"oid": "55e4ac747db9bf217efd026ea4ce3f890717b7be"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzMjg4Ng==", "bodyText": "Please note that the variable logger is very often set at first, even before the static fields. I don't know why and whether it is a good practice. With your request change, this is not the case here.", "url": "https://github.com/openhab/openhab-addons/pull/7355#discussion_r409432886", "createdAt": "2020-04-16T09:58:17Z", "author": {"login": "lolodomo"}, "path": "bundles/org.openhab.binding.lgwebos/src/main/java/org/openhab/binding/lgwebos/internal/handler/LGWebOSTVSocket.java", "diffHunk": "@@ -114,6 +118,11 @@\n     private final Logger logger = LoggerFactory.getLogger(LGWebOSTVSocket.class);\n     private int nextRequestId = 0;\n \n+    private final ScheduledExecutorService scheduler;\n+    private @Nullable ScheduledFuture<?> disconnectingJob;\n+\n+    private static final int DISCONNECTING_DELAY_SECONDS = 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1ODg3NQ=="}, "originalCommit": {"oid": "55e4ac747db9bf217efd026ea4ce3f890717b7be"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 600, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}