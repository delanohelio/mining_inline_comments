{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzEwMjk3", "number": 7817, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1OTo1N1rOEAtAKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDo0NTowNlrOEBIyTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcyNzc3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/AVMFritzBaseModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1OTo1N1rOGcJiJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1OTo1N1rOGcJiJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2OTUwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected static final int HAN_FUN_DEVICE_BIT = 1; // Bit 0\n          \n          \n            \n                protected static final int HAN_FUN_BUTTON_BIT = 8; // Bit 3 - undocumented\n          \n          \n            \n                protected static final int HAN_FUN_ALARM_SENSOR_BIT = 16; // Bit 4\n          \n          \n            \n                protected static final int BUTTON_BIT = 32; // Bit 5 - undocumented\n          \n          \n            \n                protected static final int HEATING_THERMOSTAT_BIT = 64; // Bit 6\n          \n          \n            \n                protected static final int POWERMETER_BIT = 128; // Bit 7\n          \n          \n            \n                protected static final int TEMPSENSOR_BIT = 256; // Bit 8\n          \n          \n            \n                protected static final int OUTLET_BIT = 512; // Bit 9\n          \n          \n            \n                protected static final int DECT_REPEATER_BIT = 1024; // Bit 10\n          \n          \n            \n                protected static final int MICROPHONE_BIT = 2048; // Bit 11\n          \n          \n            \n                protected static final int HAN_FUN_UNIT_BIT = 8192; // Bit 13\n          \n          \n            \n                protected static final int HAN_FUN_DEVICE_BIT = 1; // Bit 0\n          \n          \n            \n                protected static final int HAN_FUN_BUTTON_BIT = 1 << 3; // Bit 3 - undocumented\n          \n          \n            \n                protected static final int HAN_FUN_ALARM_SENSOR_BIT = 1 << 4; // Bit 4\n          \n          \n            \n                protected static final int BUTTON_BIT = 1 << 5; // Bit 5 - undocumented\n          \n          \n            \n                protected static final int HEATING_THERMOSTAT_BIT = 1 << 6; // Bit 6\n          \n          \n            \n                protected static final int POWERMETER_BIT = 1 << 7; // Bit 7\n          \n          \n            \n                protected static final int TEMPSENSOR_BIT = 1 << 8; // Bit 8\n          \n          \n            \n                protected static final int OUTLET_BIT = 1 << 9; // Bit 9\n          \n          \n            \n                protected static final int DECT_REPEATER_BIT = 1 << 10; // Bit 10\n          \n          \n            \n                protected static final int MICROPHONE_BIT = 1 << 11; // Bit 11\n          \n          \n            \n                protected static final int HAN_FUN_UNIT_BIT = 1 << 13; // Bit 13", "url": "https://github.com/openhab/openhab-addons/pull/7817#discussion_r432169509", "createdAt": "2020-05-28T22:59:57Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/AVMFritzBaseModel.java", "diffHunk": "@@ -37,17 +39,18 @@\n  * @author Christoph Weitkamp - Added support for AVM FRITZ!DECT 300 and Comet DECT\n  * @author Christoph Weitkamp - Added support for groups\n  */\n-public abstract class AVMFritzBaseModel {\n-    protected static final int HAN_FUN_DEVICE_BIT = 1;\n-    protected static final int HAN_FUN_BUTTON_BIT = 8;\n-    protected static final int HAN_FUN_ALARM_SENSOR_BIT = 16;\n-    protected static final int HEATING_THERMOSTAT_BIT = 64;\n-    protected static final int POWERMETER_BIT = 128;\n-    protected static final int TEMPSENSOR_BIT = 256;\n-    protected static final int OUTLET_BIT = 512;\n-    protected static final int DECT_REPEATER_BIT = 1024;\n-    protected static final int MICROPHONE_BIT = 2048;\n-    protected static final int HAN_FUN_UNIT_BIT = 8192;\n+public abstract class AVMFritzBaseModel implements BatteryModel {\n+    protected static final int HAN_FUN_DEVICE_BIT = 1; // Bit 0\n+    protected static final int HAN_FUN_BUTTON_BIT = 8; // Bit 3 - undocumented\n+    protected static final int HAN_FUN_ALARM_SENSOR_BIT = 16; // Bit 4\n+    protected static final int BUTTON_BIT = 32; // Bit 5 - undocumented\n+    protected static final int HEATING_THERMOSTAT_BIT = 64; // Bit 6\n+    protected static final int POWERMETER_BIT = 128; // Bit 7\n+    protected static final int TEMPSENSOR_BIT = 256; // Bit 8\n+    protected static final int OUTLET_BIT = 512; // Bit 9\n+    protected static final int DECT_REPEATER_BIT = 1024; // Bit 10\n+    protected static final int MICROPHONE_BIT = 2048; // Bit 11\n+    protected static final int HAN_FUN_UNIT_BIT = 8192; // Bit 13", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70fcb20c11884ff4f7a21893e071784a86bd20ce"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTc0MjU4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/ButtonModel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzowNzoxMVrOGcJrIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDo0MTo1MVrOGc1P6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MTgwOQ==", "bodyText": "should \"id\" and \"identifier\" be included in the prop order?", "url": "https://github.com/openhab/openhab-addons/pull/7817#discussion_r432171809", "createdAt": "2020-05-28T23:07:11Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/ButtonModel.java", "diffHunk": "@@ -23,12 +25,46 @@\n  * @author Christoph Weitkamp - Initial contribution\n  */\n @XmlAccessorType(XmlAccessType.FIELD)\n-@XmlType(propOrder = { \"lastpressedtimestamp\" })\n+@XmlType(propOrder = { \"name\", \"lastpressedtimestamp\" })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70fcb20c11884ff4f7a21893e071784a86bd20ce"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgyMDM0MA==", "bodyText": "First of all no, because propOrder specifies the order for XML Schema elements when class is mapped to a XML Schema and \"id\" and \"identifier\" are attributes.\nBut that makes me wonder why I need it at all. I do not write XML. I will try to remove it.", "url": "https://github.com/openhab/openhab-addons/pull/7817#discussion_r432820340", "createdAt": "2020-05-30T07:48:17Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/ButtonModel.java", "diffHunk": "@@ -23,12 +25,46 @@\n  * @author Christoph Weitkamp - Initial contribution\n  */\n @XmlAccessorType(XmlAccessType.FIELD)\n-@XmlType(propOrder = { \"lastpressedtimestamp\" })\n+@XmlType(propOrder = { \"name\", \"lastpressedtimestamp\" })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MTgwOQ=="}, "originalCommit": {"oid": "70fcb20c11884ff4f7a21893e071784a86bd20ce"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4NTczNw==", "bodyText": "Gah, you are right. It has been too long since I used the xml annotations. \ud83d\ude04", "url": "https://github.com/openhab/openhab-addons/pull/7817#discussion_r432885737", "createdAt": "2020-05-30T20:41:51Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/ButtonModel.java", "diffHunk": "@@ -23,12 +25,46 @@\n  * @author Christoph Weitkamp - Initial contribution\n  */\n @XmlAccessorType(XmlAccessType.FIELD)\n-@XmlType(propOrder = { \"lastpressedtimestamp\" })\n+@XmlType(propOrder = { \"name\", \"lastpressedtimestamp\" })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MTgwOQ=="}, "originalCommit": {"oid": "70fcb20c11884ff4f7a21893e071784a86bd20ce"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDY2MzA4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzo0NjoxMlrOGcmY-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzo0NjoxMlrOGcmY-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0MjI5OA==", "bodyText": "I tried to make this logic more readable.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ButtonModel lastPressedButton = shortPressButton != null\n          \n          \n            \n                            ? (longPressButton != null\n          \n          \n            \n                                    ? (shortPressButton.getLastpressedtimestamp() > longPressButton.getLastpressedtimestamp()\n          \n          \n            \n                                            ? shortPressButton\n          \n          \n            \n                                            : longPressButton)\n          \n          \n            \n                                    : shortPressButton)\n          \n          \n            \n                            : longPressButton;\n          \n          \n            \n                    ButtonModel lastPressedButton = (shortPressButton != null && (longPressButton == null || shortPressButton.getLastpressedtimestamp() > longPressButton.getLastpressedtimestamp()))\n          \n          \n            \n                            ? shortPressButton\n          \n          \n            \n                            : longPressButton;", "url": "https://github.com/openhab/openhab-addons/pull/7817#discussion_r432642298", "createdAt": "2020-05-29T17:46:12Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/handler/AVMFritzBaseThingHandler.java", "diffHunk": "@@ -139,36 +141,61 @@ public void onDeviceUpdated(ThingUID thingUID, AVMFritzBaseModel device) {\n                 if (deviceModel.isTempSensor()) {\n                     updateTemperatureSensor(deviceModel.getTemperature());\n                 }\n-                if (deviceModel.isAlarmSensor()) {\n-                    updateAlarmSensor(deviceModel.getAlert());\n+                if (deviceModel.isHANFUNAlarmSensor()) {\n+                    updateHANFUNAlarmSensor(deviceModel.getAlert());\n+                }\n+                if (deviceModel.isHANFUNButton()) {\n+                    updateHANFUNButton(deviceModel.getButtons());\n                 }\n                 if (deviceModel.isButton()) {\n-                    updateButton(deviceModel.getButton());\n+                    updateShortLongPressButton(deviceModel.getButtons());\n+                    updateBattery(deviceModel);\n                 }\n             }\n         }\n     }\n \n-    private void updateButton(@Nullable ButtonModel buttonModel) {\n-        if (buttonModel != null) {\n-            int lastPressedTimestamp = buttonModel.getLastpressedtimestamp();\n-            if (lastPressedTimestamp == 0) {\n-                updateThingChannelState(CHANNEL_LAST_CHANGE, UnDefType.UNDEF);\n-            } else {\n-                ZoneId zoneId = ZoneId.systemDefault();\n-                ZonedDateTime timestamp = ZonedDateTime.ofInstant(Instant.ofEpochSecond(lastPressedTimestamp), zoneId);\n-                Instant then = timestamp.toInstant();\n-                ZonedDateTime now = ZonedDateTime.now(zoneId);\n-                Instant someSecondsEarlier = now.minusSeconds(15).toInstant();\n-                if (then.isAfter(someSecondsEarlier) && then.isBefore(now.toInstant())) {\n-                    triggerThingChannel(CHANNEL_PRESS, CommonTriggerEvents.PRESSED);\n-                }\n-                updateThingChannelState(CHANNEL_LAST_CHANGE, new DateTimeType(timestamp));\n+    private void updateShortLongPressButton(List<ButtonModel> buttons) {\n+        ButtonModel shortPressButton = buttons.size() > 0 ? buttons.get(0) : null;\n+        ButtonModel longPressButton = buttons.size() > 1 ? buttons.get(1) : null;\n+        ButtonModel lastPressedButton = shortPressButton != null\n+                ? (longPressButton != null\n+                        ? (shortPressButton.getLastpressedtimestamp() > longPressButton.getLastpressedtimestamp()\n+                                ? shortPressButton\n+                                : longPressButton)\n+                        : shortPressButton)\n+                : longPressButton;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56351c9ad7b87cc3d3dc1fa74ec38c00f8672ac9"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjI3OTgyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/ButtonModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMDo0NTowNlrOGc1Q0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwOTo1MDoyMVrOGc36OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4NTk2OA==", "bodyText": "If you override equals you need to also override hashCode as per the general contract: Any two equal objects must also have equal hashcodes.", "url": "https://github.com/openhab/openhab-addons/pull/7817#discussion_r432885968", "createdAt": "2020-05-30T20:45:06Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/ButtonModel.java", "diffHunk": "@@ -37,8 +71,24 @@ public void setLastpressedtimestamp(int lastpressedtimestamp) {\n         this.lastpressedtimestamp = lastpressedtimestamp;\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0243175d3a3459e0dc40c6cb79da173b15097c4d"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkyOTMzNg==", "bodyText": "Yes, thanks for the hint. I implemented hashCode() and improved equals().", "url": "https://github.com/openhab/openhab-addons/pull/7817#discussion_r432929336", "createdAt": "2020-05-31T09:50:21Z", "author": {"login": "cweitkamp"}, "path": "bundles/org.openhab.binding.avmfritz/src/main/java/org/openhab/binding/avmfritz/internal/dto/ButtonModel.java", "diffHunk": "@@ -37,8 +71,24 @@ public void setLastpressedtimestamp(int lastpressedtimestamp) {\n         this.lastpressedtimestamp = lastpressedtimestamp;\n     }\n \n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4NTk2OA=="}, "originalCommit": {"oid": "0243175d3a3459e0dc40c6cb79da173b15097c4d"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4951, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}