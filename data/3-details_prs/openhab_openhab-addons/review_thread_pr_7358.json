{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNzk5MTE3", "number": 7358, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODozMjo0MlrODyMaEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0ODozOFrODypp4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTU4Njc1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/dto/CoronaStatsCases.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODozMjo0MlrOGGGa0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDo0MzowNFrOGGKzPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0OTgwOA==", "bodyText": "Please remove the empty lines between the fields.", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409049808", "createdAt": "2020-04-15T18:32:42Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/dto/CoronaStatsCases.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.coronastats.internal.dto;\n+\n+import static org.openhab.binding.coronastats.internal.CoronaStatsBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+\n+/**\n+ * The {@link CoronaStatsCountry} class holds the internal data representation of each Country\n+ *\n+ * @author Johannes Ott - Initial contribution\n+ */\n+@NonNullByDefault\n+public class CoronaStatsCases {\n+    private int cases = -1;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMTU5Ng==", "bodyText": "Removed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409121596", "createdAt": "2020-04-15T20:43:04Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/dto/CoronaStatsCases.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.coronastats.internal.dto;\n+\n+import static org.openhab.binding.coronastats.internal.CoronaStatsBindingConstants.*;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.library.types.DecimalType;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+\n+/**\n+ * The {@link CoronaStatsCountry} class holds the internal data representation of each Country\n+ *\n+ * @author Johannes Ott - Initial contribution\n+ */\n+@NonNullByDefault\n+public class CoronaStatsCases {\n+    private int cases = -1;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA0OTgwOA=="}, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTU4ODI4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/dto/CoronaStatsCountry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODozMjo1OVrOGGGbtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDo0MzowN1rOGGKzVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MDAzNg==", "bodyText": "remove empty lines", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409050036", "createdAt": "2020-04-15T18:32:59Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/dto/CoronaStatsCountry.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.coronastats.internal.dto;\n+\n+import static org.openhab.binding.coronastats.internal.CoronaStatsBindingConstants.*;\n+\n+import java.time.ZoneId;\n+import java.time.ZonedDateTime;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.library.types.DateTimeType;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+\n+/**\n+ * The {@link CoronaStatsCountry} class holds the internal data representation of each Country\n+ *\n+ * @author Johannes Ott - Initial contribution\n+ */\n+@NonNullByDefault\n+public class CoronaStatsCountry extends CoronaStatsCases {\n+    private String country = \"\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMTYyMQ==", "bodyText": "Removed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409121621", "createdAt": "2020-04-15T20:43:07Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/dto/CoronaStatsCountry.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.openhab.binding.coronastats.internal.dto;\n+\n+import static org.openhab.binding.coronastats.internal.CoronaStatsBindingConstants.*;\n+\n+import java.time.ZoneId;\n+import java.time.ZonedDateTime;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.eclipse.jdt.annotation.NonNullByDefault;\n+import org.eclipse.smarthome.core.library.types.DateTimeType;\n+import org.eclipse.smarthome.core.types.State;\n+import org.eclipse.smarthome.core.types.UnDefType;\n+\n+/**\n+ * The {@link CoronaStatsCountry} class holds the internal data representation of each Country\n+ *\n+ * @author Johannes Ott - Initial contribution\n+ */\n+@NonNullByDefault\n+public class CoronaStatsCountry extends CoronaStatsCases {\n+    private String country = \"\";\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MDAzNg=="}, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTU5NDE4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/handler/CoronaStatsBridgeHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODozNDoyNVrOGGGfKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDo0MzoxOVrOGGKzzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MDkyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        updateStatus(ThingStatus.ONLINE);\n          \n          \n            \n                        updateStatus(ThingStatus.UNKNOWN);", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409050921", "createdAt": "2020-04-15T18:34:25Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/handler/CoronaStatsBridgeHandler.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.coronastats.internal.handler;\r\n+\r\n+import java.net.URI;\r\n+import java.util.Set;\r\n+import java.net.SocketTimeoutException;\r\n+import java.util.concurrent.CompletableFuture;\r\n+import java.util.concurrent.ConcurrentHashMap;\r\n+import java.util.concurrent.ScheduledFuture;\r\n+import java.util.concurrent.TimeUnit;\r\n+import java.util.concurrent.TimeoutException;\r\n+\r\n+import com.google.gson.Gson;\r\n+import com.google.gson.JsonSyntaxException;\r\n+\r\n+import org.eclipse.jdt.annotation.NonNullByDefault;\r\n+import org.eclipse.jdt.annotation.Nullable;\r\n+import org.eclipse.jetty.client.HttpClient;\r\n+import org.eclipse.jetty.client.HttpResponse;\r\n+import org.eclipse.jetty.client.api.Request;\r\n+import org.eclipse.jetty.client.api.Result;\r\n+import org.eclipse.jetty.client.util.BufferingResponseListener;\r\n+import org.eclipse.jetty.http.HttpMethod;\r\n+import org.eclipse.smarthome.core.thing.Bridge;\r\n+import org.eclipse.smarthome.core.thing.ChannelUID;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.thing.ThingStatus;\r\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\r\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\r\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\r\n+import org.eclipse.smarthome.core.types.Command;\r\n+import org.eclipse.smarthome.core.types.RefreshType;\r\n+import org.openhab.binding.coronastats.internal.CoronaStatsPollingException;\r\n+import org.openhab.binding.coronastats.internal.config.CoronaStatsBridgeConfiguration;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStats;\r\n+import org.slf4j.Logger;\r\n+import org.slf4j.LoggerFactory;\r\n+\r\n+/**\r\n+ * The {@link CoronaStatsBridgeHandler} is the handler for bridge thing\r\n+ *\r\n+ * @author Johannes Ott - Initial contribution\r\n+ */\r\n+@NonNullByDefault\r\n+public class CoronaStatsBridgeHandler extends BaseBridgeHandler {\r\n+    private static final String CORONASTATS_URL = \"https://corona-stats.online/?format=json\";\r\n+\r\n+    private final Logger logger = LoggerFactory.getLogger(CoronaStatsBridgeHandler.class);\r\n+\r\n+    private CoronaStatsBridgeConfiguration bridgeConfig = new CoronaStatsBridgeConfiguration();\r\n+    private @Nullable ScheduledFuture<?> pollingJob;\r\n+    private @Nullable CoronaStats coronaStats;\r\n+    private final Set<CoronaStatsThingHandler> listeners = ConcurrentHashMap.newKeySet();\r\n+    private final HttpClient client;\r\n+    private final Gson gson = new Gson();\r\n+\r\n+    public CoronaStatsBridgeHandler(Bridge bridge, HttpClient client) {\r\n+        super(bridge);\r\n+        this.client = client;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void handleCommand(ChannelUID channelUID, Command command) {\r\n+        if (command instanceof RefreshType) {\r\n+            final CoronaStats localCoronaStats = coronaStats;\r\n+            if (localCoronaStats != null) {\r\n+                notifyOnUpdate(localCoronaStats);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public void initialize() {\r\n+        logger.debug(\"Initializing Corona Stats bridge handler\");\r\n+        bridgeConfig = getConfigAs(CoronaStatsBridgeConfiguration.class);\r\n+\r\n+        if (bridgeConfig.isValid()) {\r\n+            startPolling();\r\n+            updateStatus(ThingStatus.ONLINE);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMTc0MQ==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409121741", "createdAt": "2020-04-15T20:43:19Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/handler/CoronaStatsBridgeHandler.java", "diffHunk": "@@ -0,0 +1,211 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.coronastats.internal.handler;\r\n+\r\n+import java.net.URI;\r\n+import java.util.Set;\r\n+import java.net.SocketTimeoutException;\r\n+import java.util.concurrent.CompletableFuture;\r\n+import java.util.concurrent.ConcurrentHashMap;\r\n+import java.util.concurrent.ScheduledFuture;\r\n+import java.util.concurrent.TimeUnit;\r\n+import java.util.concurrent.TimeoutException;\r\n+\r\n+import com.google.gson.Gson;\r\n+import com.google.gson.JsonSyntaxException;\r\n+\r\n+import org.eclipse.jdt.annotation.NonNullByDefault;\r\n+import org.eclipse.jdt.annotation.Nullable;\r\n+import org.eclipse.jetty.client.HttpClient;\r\n+import org.eclipse.jetty.client.HttpResponse;\r\n+import org.eclipse.jetty.client.api.Request;\r\n+import org.eclipse.jetty.client.api.Result;\r\n+import org.eclipse.jetty.client.util.BufferingResponseListener;\r\n+import org.eclipse.jetty.http.HttpMethod;\r\n+import org.eclipse.smarthome.core.thing.Bridge;\r\n+import org.eclipse.smarthome.core.thing.ChannelUID;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.thing.ThingStatus;\r\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\r\n+import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\r\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\r\n+import org.eclipse.smarthome.core.types.Command;\r\n+import org.eclipse.smarthome.core.types.RefreshType;\r\n+import org.openhab.binding.coronastats.internal.CoronaStatsPollingException;\r\n+import org.openhab.binding.coronastats.internal.config.CoronaStatsBridgeConfiguration;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStats;\r\n+import org.slf4j.Logger;\r\n+import org.slf4j.LoggerFactory;\r\n+\r\n+/**\r\n+ * The {@link CoronaStatsBridgeHandler} is the handler for bridge thing\r\n+ *\r\n+ * @author Johannes Ott - Initial contribution\r\n+ */\r\n+@NonNullByDefault\r\n+public class CoronaStatsBridgeHandler extends BaseBridgeHandler {\r\n+    private static final String CORONASTATS_URL = \"https://corona-stats.online/?format=json\";\r\n+\r\n+    private final Logger logger = LoggerFactory.getLogger(CoronaStatsBridgeHandler.class);\r\n+\r\n+    private CoronaStatsBridgeConfiguration bridgeConfig = new CoronaStatsBridgeConfiguration();\r\n+    private @Nullable ScheduledFuture<?> pollingJob;\r\n+    private @Nullable CoronaStats coronaStats;\r\n+    private final Set<CoronaStatsThingHandler> listeners = ConcurrentHashMap.newKeySet();\r\n+    private final HttpClient client;\r\n+    private final Gson gson = new Gson();\r\n+\r\n+    public CoronaStatsBridgeHandler(Bridge bridge, HttpClient client) {\r\n+        super(bridge);\r\n+        this.client = client;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void handleCommand(ChannelUID channelUID, Command command) {\r\n+        if (command instanceof RefreshType) {\r\n+            final CoronaStats localCoronaStats = coronaStats;\r\n+            if (localCoronaStats != null) {\r\n+                notifyOnUpdate(localCoronaStats);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public void initialize() {\r\n+        logger.debug(\"Initializing Corona Stats bridge handler\");\r\n+        bridgeConfig = getConfigAs(CoronaStatsBridgeConfiguration.class);\r\n+\r\n+        if (bridgeConfig.isValid()) {\r\n+            startPolling();\r\n+            updateStatus(ThingStatus.ONLINE);\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MDkyMQ=="}, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTYwMTg4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/bridge.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODozNjoyM1rOGGGj6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDo0NDo0N1rOGGK29w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MjEzOQ==", "bodyText": "I would suggest to remove this channel - this is nothing we usually have and there is already the updated channel on the things that should be more relevant.", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409052139", "createdAt": "2020-04-15T18:36:23Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/bridge.xml", "diffHunk": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<bridge-type id=\"bridge\">\r\n+\t\t<label>Corona Stats Online - Bridge</label>\r\n+\t\t<description>Bridge for accessing data from https://corona-stats.online/ website.</description>\r\n+\r\n+\t\t<channels>\r\n+\t\t\t<channel id=\"refreshed\" typeId=\"refreshed\"/>\r\n+\t\t</channels>\r\n+\r\n+\t\t<config-description>\r\n+\t\t\t<parameter name=\"refresh\" type=\"integer\" unit=\"min\" min=\"15\">\r\n+\t\t\t\t<default>30</default>\r\n+\t\t\t\t<label>Refresh Interval</label>\r\n+\t\t\t\t<description>Time between two API requests in minutes. Minimum 15 minutes.</description>\r\n+\t\t\t</parameter>\r\n+\t\t</config-description>\r\n+\t\t\r\n+\t</bridge-type>\r\n+\r\n+\t<channel-type id=\"refreshed\">\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMjU1MQ==", "bodyText": "Removed, but on world object of the response there is no updated information. So just country thing have this channel for now.", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409122551", "createdAt": "2020-04-15T20:44:47Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/bridge.xml", "diffHunk": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<bridge-type id=\"bridge\">\r\n+\t\t<label>Corona Stats Online - Bridge</label>\r\n+\t\t<description>Bridge for accessing data from https://corona-stats.online/ website.</description>\r\n+\r\n+\t\t<channels>\r\n+\t\t\t<channel id=\"refreshed\" typeId=\"refreshed\"/>\r\n+\t\t</channels>\r\n+\r\n+\t\t<config-description>\r\n+\t\t\t<parameter name=\"refresh\" type=\"integer\" unit=\"min\" min=\"15\">\r\n+\t\t\t\t<default>30</default>\r\n+\t\t\t\t<label>Refresh Interval</label>\r\n+\t\t\t\t<description>Time between two API requests in minutes. Minimum 15 minutes.</description>\r\n+\t\t\t</parameter>\r\n+\t\t</config-description>\r\n+\t\t\r\n+\t</bridge-type>\r\n+\r\n+\t<channel-type id=\"refreshed\">\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1MjEzOQ=="}, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTYwNTcyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/channel-type.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODozNzoyMlrOGGGmUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDo0NDo1NlrOGGK3Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1Mjc1NQ==", "bodyText": "Please create an individual channel type for each channel (and move the label texts from the thing definitions to here).", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409052755", "createdAt": "2020-04-15T18:37:22Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/channel-type.xml", "diffHunk": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<channel-type id=\"count\">\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMjY0Mg==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409122642", "createdAt": "2020-04-15T20:44:56Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/channel-type.xml", "diffHunk": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<channel-type id=\"count\">\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1Mjc1NQ=="}, "originalCommit": {"oid": "a29c3acd127bc827a7ecf9d82a821faf1b48f0bf"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDM5ODIwOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/handler/CoronaStatsCountryHandler.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMjo0Nzo1M1rOGGORlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDo1ODoxMVrOGG25Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE3ODUxNg==", "bodyText": "I don't see a reason for this to be synchronized", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409178516", "createdAt": "2020-04-15T22:47:53Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/handler/CoronaStatsCountryHandler.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.coronastats.internal.handler;\r\n+\r\n+import org.eclipse.jdt.annotation.NonNullByDefault;\r\n+import org.eclipse.jdt.annotation.Nullable;\r\n+import org.eclipse.smarthome.core.thing.Bridge;\r\n+import org.eclipse.smarthome.core.thing.ChannelUID;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.thing.ThingStatus;\r\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\r\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\r\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\r\n+import org.eclipse.smarthome.core.types.Command;\r\n+import org.eclipse.smarthome.core.types.RefreshType;\r\n+import org.openhab.binding.coronastats.internal.config.CoronaStatsCountryConfiguration;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStats;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStatsCountry;\r\n+import org.slf4j.Logger;\r\n+import org.slf4j.LoggerFactory;\r\n+\r\n+/**\r\n+ * The {@link CoronaStatsCountryHandler} is the handler for country thing\r\n+ *\r\n+ * @author Johannes Ott - Initial contribution\r\n+ */\r\n+@NonNullByDefault\r\n+public class CoronaStatsCountryHandler extends BaseThingHandler {\r\n+\r\n+    private final Logger logger = LoggerFactory.getLogger(CoronaStatsCountryHandler.class);\r\n+\r\n+    private CoronaStatsCountryConfiguration thingConfig = new CoronaStatsCountryConfiguration();\r\n+\r\n+    public CoronaStatsCountryHandler(Thing thing) {\r\n+        super(thing);\r\n+    }\r\n+\r\n+    @Override\r\n+    public void initialize() {\r\n+        thingConfig = getConfigAs(CoronaStatsCountryConfiguration.class);\r\n+        logger.debug(\"Initializing Corona Stats country handler for country code {}\", thingConfig.getCountryCode());\r\n+\r\n+        if (thingConfig.isValid()) {\r\n+            CoronaStatsWorldHandler handler = getBridgeHandler();\r\n+            if (handler == null) {\r\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"Bridge handler missing\");\r\n+            } else {\r\n+                updateStatus(ThingStatus.ONLINE);\r\n+            }\r\n+        } else {\r\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"No valid country code given.\");\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public void dispose() {\r\n+        logger.debug(\"CoronaStats country handler disposes.\");\r\n+    }\r\n+\r\n+    @Override\r\n+    public void handleCommand(ChannelUID channelUID, Command command) {\r\n+        if (command instanceof RefreshType) {\r\n+            refresh();\r\n+        }\r\n+    }\r\n+\r\n+    private void refresh() {\r\n+        CoronaStatsWorldHandler handler = getBridgeHandler();\r\n+        if (handler != null) {\r\n+            CoronaStats coronaStats = handler.getCoronaStats();\r\n+            if (coronaStats != null) {\r\n+                notifyOnUpdate(coronaStats);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private synchronized @Nullable CoronaStatsWorldHandler getBridgeHandler() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebb6770865cc4db0c4095244786d2c45cc5b3622"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgzOTc1Ng==", "bodyText": "I don't know from which binding I copied this now, but I didn't understand as well. Thought it is some framework specific thing. So if you think we can remove as well, I will do.", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409839756", "createdAt": "2020-04-16T20:49:46Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/handler/CoronaStatsCountryHandler.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.coronastats.internal.handler;\r\n+\r\n+import org.eclipse.jdt.annotation.NonNullByDefault;\r\n+import org.eclipse.jdt.annotation.Nullable;\r\n+import org.eclipse.smarthome.core.thing.Bridge;\r\n+import org.eclipse.smarthome.core.thing.ChannelUID;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.thing.ThingStatus;\r\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\r\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\r\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\r\n+import org.eclipse.smarthome.core.types.Command;\r\n+import org.eclipse.smarthome.core.types.RefreshType;\r\n+import org.openhab.binding.coronastats.internal.config.CoronaStatsCountryConfiguration;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStats;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStatsCountry;\r\n+import org.slf4j.Logger;\r\n+import org.slf4j.LoggerFactory;\r\n+\r\n+/**\r\n+ * The {@link CoronaStatsCountryHandler} is the handler for country thing\r\n+ *\r\n+ * @author Johannes Ott - Initial contribution\r\n+ */\r\n+@NonNullByDefault\r\n+public class CoronaStatsCountryHandler extends BaseThingHandler {\r\n+\r\n+    private final Logger logger = LoggerFactory.getLogger(CoronaStatsCountryHandler.class);\r\n+\r\n+    private CoronaStatsCountryConfiguration thingConfig = new CoronaStatsCountryConfiguration();\r\n+\r\n+    public CoronaStatsCountryHandler(Thing thing) {\r\n+        super(thing);\r\n+    }\r\n+\r\n+    @Override\r\n+    public void initialize() {\r\n+        thingConfig = getConfigAs(CoronaStatsCountryConfiguration.class);\r\n+        logger.debug(\"Initializing Corona Stats country handler for country code {}\", thingConfig.getCountryCode());\r\n+\r\n+        if (thingConfig.isValid()) {\r\n+            CoronaStatsWorldHandler handler = getBridgeHandler();\r\n+            if (handler == null) {\r\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"Bridge handler missing\");\r\n+            } else {\r\n+                updateStatus(ThingStatus.ONLINE);\r\n+            }\r\n+        } else {\r\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"No valid country code given.\");\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public void dispose() {\r\n+        logger.debug(\"CoronaStats country handler disposes.\");\r\n+    }\r\n+\r\n+    @Override\r\n+    public void handleCommand(ChannelUID channelUID, Command command) {\r\n+        if (command instanceof RefreshType) {\r\n+            refresh();\r\n+        }\r\n+    }\r\n+\r\n+    private void refresh() {\r\n+        CoronaStatsWorldHandler handler = getBridgeHandler();\r\n+        if (handler != null) {\r\n+            CoronaStats coronaStats = handler.getCoronaStats();\r\n+            if (coronaStats != null) {\r\n+                notifyOnUpdate(coronaStats);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private synchronized @Nullable CoronaStatsWorldHandler getBridgeHandler() {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE3ODUxNg=="}, "originalCommit": {"oid": "ebb6770865cc4db0c4095244786d2c45cc5b3622"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0MjQ5OQ==", "bodyText": "Yep, please remove synchronized", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409842499", "createdAt": "2020-04-16T20:55:06Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/handler/CoronaStatsCountryHandler.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.coronastats.internal.handler;\r\n+\r\n+import org.eclipse.jdt.annotation.NonNullByDefault;\r\n+import org.eclipse.jdt.annotation.Nullable;\r\n+import org.eclipse.smarthome.core.thing.Bridge;\r\n+import org.eclipse.smarthome.core.thing.ChannelUID;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.thing.ThingStatus;\r\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\r\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\r\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\r\n+import org.eclipse.smarthome.core.types.Command;\r\n+import org.eclipse.smarthome.core.types.RefreshType;\r\n+import org.openhab.binding.coronastats.internal.config.CoronaStatsCountryConfiguration;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStats;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStatsCountry;\r\n+import org.slf4j.Logger;\r\n+import org.slf4j.LoggerFactory;\r\n+\r\n+/**\r\n+ * The {@link CoronaStatsCountryHandler} is the handler for country thing\r\n+ *\r\n+ * @author Johannes Ott - Initial contribution\r\n+ */\r\n+@NonNullByDefault\r\n+public class CoronaStatsCountryHandler extends BaseThingHandler {\r\n+\r\n+    private final Logger logger = LoggerFactory.getLogger(CoronaStatsCountryHandler.class);\r\n+\r\n+    private CoronaStatsCountryConfiguration thingConfig = new CoronaStatsCountryConfiguration();\r\n+\r\n+    public CoronaStatsCountryHandler(Thing thing) {\r\n+        super(thing);\r\n+    }\r\n+\r\n+    @Override\r\n+    public void initialize() {\r\n+        thingConfig = getConfigAs(CoronaStatsCountryConfiguration.class);\r\n+        logger.debug(\"Initializing Corona Stats country handler for country code {}\", thingConfig.getCountryCode());\r\n+\r\n+        if (thingConfig.isValid()) {\r\n+            CoronaStatsWorldHandler handler = getBridgeHandler();\r\n+            if (handler == null) {\r\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"Bridge handler missing\");\r\n+            } else {\r\n+                updateStatus(ThingStatus.ONLINE);\r\n+            }\r\n+        } else {\r\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"No valid country code given.\");\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public void dispose() {\r\n+        logger.debug(\"CoronaStats country handler disposes.\");\r\n+    }\r\n+\r\n+    @Override\r\n+    public void handleCommand(ChannelUID channelUID, Command command) {\r\n+        if (command instanceof RefreshType) {\r\n+            refresh();\r\n+        }\r\n+    }\r\n+\r\n+    private void refresh() {\r\n+        CoronaStatsWorldHandler handler = getBridgeHandler();\r\n+        if (handler != null) {\r\n+            CoronaStats coronaStats = handler.getCoronaStats();\r\n+            if (coronaStats != null) {\r\n+                notifyOnUpdate(coronaStats);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private synchronized @Nullable CoronaStatsWorldHandler getBridgeHandler() {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE3ODUxNg=="}, "originalCommit": {"oid": "ebb6770865cc4db0c4095244786d2c45cc5b3622"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg0NDA3MA==", "bodyText": "Removed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409844070", "createdAt": "2020-04-16T20:58:11Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/handler/CoronaStatsCountryHandler.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.coronastats.internal.handler;\r\n+\r\n+import org.eclipse.jdt.annotation.NonNullByDefault;\r\n+import org.eclipse.jdt.annotation.Nullable;\r\n+import org.eclipse.smarthome.core.thing.Bridge;\r\n+import org.eclipse.smarthome.core.thing.ChannelUID;\r\n+import org.eclipse.smarthome.core.thing.Thing;\r\n+import org.eclipse.smarthome.core.thing.ThingStatus;\r\n+import org.eclipse.smarthome.core.thing.ThingStatusDetail;\r\n+import org.eclipse.smarthome.core.thing.binding.BaseThingHandler;\r\n+import org.eclipse.smarthome.core.thing.binding.ThingHandler;\r\n+import org.eclipse.smarthome.core.types.Command;\r\n+import org.eclipse.smarthome.core.types.RefreshType;\r\n+import org.openhab.binding.coronastats.internal.config.CoronaStatsCountryConfiguration;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStats;\r\n+import org.openhab.binding.coronastats.internal.dto.CoronaStatsCountry;\r\n+import org.slf4j.Logger;\r\n+import org.slf4j.LoggerFactory;\r\n+\r\n+/**\r\n+ * The {@link CoronaStatsCountryHandler} is the handler for country thing\r\n+ *\r\n+ * @author Johannes Ott - Initial contribution\r\n+ */\r\n+@NonNullByDefault\r\n+public class CoronaStatsCountryHandler extends BaseThingHandler {\r\n+\r\n+    private final Logger logger = LoggerFactory.getLogger(CoronaStatsCountryHandler.class);\r\n+\r\n+    private CoronaStatsCountryConfiguration thingConfig = new CoronaStatsCountryConfiguration();\r\n+\r\n+    public CoronaStatsCountryHandler(Thing thing) {\r\n+        super(thing);\r\n+    }\r\n+\r\n+    @Override\r\n+    public void initialize() {\r\n+        thingConfig = getConfigAs(CoronaStatsCountryConfiguration.class);\r\n+        logger.debug(\"Initializing Corona Stats country handler for country code {}\", thingConfig.getCountryCode());\r\n+\r\n+        if (thingConfig.isValid()) {\r\n+            CoronaStatsWorldHandler handler = getBridgeHandler();\r\n+            if (handler == null) {\r\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"Bridge handler missing\");\r\n+            } else {\r\n+                updateStatus(ThingStatus.ONLINE);\r\n+            }\r\n+        } else {\r\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR, \"No valid country code given.\");\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public void dispose() {\r\n+        logger.debug(\"CoronaStats country handler disposes.\");\r\n+    }\r\n+\r\n+    @Override\r\n+    public void handleCommand(ChannelUID channelUID, Command command) {\r\n+        if (command instanceof RefreshType) {\r\n+            refresh();\r\n+        }\r\n+    }\r\n+\r\n+    private void refresh() {\r\n+        CoronaStatsWorldHandler handler = getBridgeHandler();\r\n+        if (handler != null) {\r\n+            CoronaStats coronaStats = handler.getCoronaStats();\r\n+            if (coronaStats != null) {\r\n+                notifyOnUpdate(coronaStats);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private synchronized @Nullable CoronaStatsWorldHandler getBridgeHandler() {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE3ODUxNg=="}, "originalCommit": {"oid": "ebb6770865cc4db0c4095244786d2c45cc5b3622"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDM1NDExOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0MToyNlrOGG0eNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDowMjo1NlrOGG1LSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDM0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\n          \n          \n            \n            This binding adds a default `world` thing to the Inbox.\n          \n          \n            \n            This can be used as bridge for country things you may add manually.", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409804341", "createdAt": "2020-04-16T19:41:26Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/README.md", "diffHunk": "@@ -0,0 +1,126 @@\n+# CoronaStats Binding\r\n+\r\n+This binding provides the statistic about cases of COVID-19 from the website https://corona-stats.online/.\r\n+\r\n+\r\n+## Supported Things\r\n+\r\n+This binding supports a `world` thing, which polls the dataset in an adjustable interval as a bridge and provides the statistics for the whole world.\r\n+The `country` thing, representing the statistics for a specified country.\r\n+\r\n+## Discovery\r\n+\r\n+This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNTg4Mg==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409815882", "createdAt": "2020-04-16T20:02:56Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/README.md", "diffHunk": "@@ -0,0 +1,126 @@\n+# CoronaStats Binding\r\n+\r\n+This binding provides the statistic about cases of COVID-19 from the website https://corona-stats.online/.\r\n+\r\n+\r\n+## Supported Things\r\n+\r\n+This binding supports a `world` thing, which polls the dataset in an adjustable interval as a bridge and provides the statistics for the whole world.\r\n+The `country` thing, representing the statistics for a specified country.\r\n+\r\n+## Discovery\r\n+\r\n+This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDM0MQ=="}, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDM1NjAyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0MTo1N1rOGG0fag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDowMzowNlrOGG1Llw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDY1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | Property  | Default | Required | Description                                                                              |\n          \n          \n            \n            | Parameter  | Default | Required | Description                                                                              |", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409804650", "createdAt": "2020-04-16T19:41:57Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/README.md", "diffHunk": "@@ -0,0 +1,126 @@\n+# CoronaStats Binding\r\n+\r\n+This binding provides the statistic about cases of COVID-19 from the website https://corona-stats.online/.\r\n+\r\n+\r\n+## Supported Things\r\n+\r\n+This binding supports a `world` thing, which polls the dataset in an adjustable interval as a bridge and provides the statistics for the whole world.\r\n+The `country` thing, representing the statistics for a specified country.\r\n+\r\n+## Discovery\r\n+\r\n+This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\r\n+\r\n+## Thing Configuration\r\n+\r\n+### World\r\n+\r\n+| Property  | Default | Required | Description                                                                              |\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNTk1OQ==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409815959", "createdAt": "2020-04-16T20:03:06Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/README.md", "diffHunk": "@@ -0,0 +1,126 @@\n+# CoronaStats Binding\r\n+\r\n+This binding provides the statistic about cases of COVID-19 from the website https://corona-stats.online/.\r\n+\r\n+\r\n+## Supported Things\r\n+\r\n+This binding supports a `world` thing, which polls the dataset in an adjustable interval as a bridge and provides the statistics for the whole world.\r\n+The `country` thing, representing the statistics for a specified country.\r\n+\r\n+## Discovery\r\n+\r\n+This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\r\n+\r\n+## Thing Configuration\r\n+\r\n+### World\r\n+\r\n+| Property  | Default | Required | Description                                                                              |\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDY1MA=="}, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDM1NjY3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0MjowOFrOGG0fxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDowMzoxMlrOGG1Lzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDc0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | Property      | Default | Required | Description                                       |\n          \n          \n            \n            | Parameter      | Default | Required | Description                                       |", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409804741", "createdAt": "2020-04-16T19:42:08Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/README.md", "diffHunk": "@@ -0,0 +1,126 @@\n+# CoronaStats Binding\r\n+\r\n+This binding provides the statistic about cases of COVID-19 from the website https://corona-stats.online/.\r\n+\r\n+\r\n+## Supported Things\r\n+\r\n+This binding supports a `world` thing, which polls the dataset in an adjustable interval as a bridge and provides the statistics for the whole world.\r\n+The `country` thing, representing the statistics for a specified country.\r\n+\r\n+## Discovery\r\n+\r\n+This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\r\n+\r\n+## Thing Configuration\r\n+\r\n+### World\r\n+\r\n+| Property  | Default | Required | Description                                                                              |\r\n+| --------- | :-----: | :------: | ---------------------------------------------------------------------------------------- |\r\n+| `refresh` |   30    |    no    | Define the interval for polling the data from website in minutes. Minimum is 15 minutes. |\r\n+\r\n+### Country\r\n+\r\n+| Property      | Default | Required | Description                                       |\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNjAxNA==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409816014", "createdAt": "2020-04-16T20:03:12Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/README.md", "diffHunk": "@@ -0,0 +1,126 @@\n+# CoronaStats Binding\r\n+\r\n+This binding provides the statistic about cases of COVID-19 from the website https://corona-stats.online/.\r\n+\r\n+\r\n+## Supported Things\r\n+\r\n+This binding supports a `world` thing, which polls the dataset in an adjustable interval as a bridge and provides the statistics for the whole world.\r\n+The `country` thing, representing the statistics for a specified country.\r\n+\r\n+## Discovery\r\n+\r\n+This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\r\n+\r\n+## Thing Configuration\r\n+\r\n+### World\r\n+\r\n+| Property  | Default | Required | Description                                                                              |\r\n+| --------- | :-----: | :------: | ---------------------------------------------------------------------------------------- |\r\n+| `refresh` |   30    |    no    | Define the interval for polling the data from website in minutes. Minimum is 15 minutes. |\r\n+\r\n+### Country\r\n+\r\n+| Property      | Default | Required | Description                                       |\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDc0MQ=="}, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDM1NzMzOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0MjoyM1rOGG0gPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDowMzoxOFrOGG1MAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDg2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For the correct 2-letter country Code have a look at the website https://corona-stats.online/\n          \n          \n            \n            For the correct 2-letter country code have a look at the website https://corona-stats.online/", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409804863", "createdAt": "2020-04-16T19:42:23Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/README.md", "diffHunk": "@@ -0,0 +1,126 @@\n+# CoronaStats Binding\r\n+\r\n+This binding provides the statistic about cases of COVID-19 from the website https://corona-stats.online/.\r\n+\r\n+\r\n+## Supported Things\r\n+\r\n+This binding supports a `world` thing, which polls the dataset in an adjustable interval as a bridge and provides the statistics for the whole world.\r\n+The `country` thing, representing the statistics for a specified country.\r\n+\r\n+## Discovery\r\n+\r\n+This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\r\n+\r\n+## Thing Configuration\r\n+\r\n+### World\r\n+\r\n+| Property  | Default | Required | Description                                                                              |\r\n+| --------- | :-----: | :------: | ---------------------------------------------------------------------------------------- |\r\n+| `refresh` |   30    |    no    | Define the interval for polling the data from website in minutes. Minimum is 15 minutes. |\r\n+\r\n+### Country\r\n+\r\n+| Property      | Default | Required | Description                                       |\r\n+| ------------- | :-----: | :------: | ------------------------------------------------- |\r\n+| `countryCode` |    -    |   yes    | 2-letter code for the country you want to display |\r\n+\r\n+For the correct 2-letter country Code have a look at the website https://corona-stats.online/\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNjA2Nw==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409816067", "createdAt": "2020-04-16T20:03:18Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/README.md", "diffHunk": "@@ -0,0 +1,126 @@\n+# CoronaStats Binding\r\n+\r\n+This binding provides the statistic about cases of COVID-19 from the website https://corona-stats.online/.\r\n+\r\n+\r\n+## Supported Things\r\n+\r\n+This binding supports a `world` thing, which polls the dataset in an adjustable interval as a bridge and provides the statistics for the whole world.\r\n+The `country` thing, representing the statistics for a specified country.\r\n+\r\n+## Discovery\r\n+\r\n+This binding will add a default `world` thing into the Inbox. This can be used as bridge for country things you may add manually.\r\n+\r\n+## Thing Configuration\r\n+\r\n+### World\r\n+\r\n+| Property  | Default | Required | Description                                                                              |\r\n+| --------- | :-----: | :------: | ---------------------------------------------------------------------------------------- |\r\n+| `refresh` |   30    |    no    | Define the interval for polling the data from website in minutes. Minimum is 15 minutes. |\r\n+\r\n+### Country\r\n+\r\n+| Property      | Default | Required | Description                                       |\r\n+| ------------- | :-----: | :------: | ------------------------------------------------- |\r\n+| `countryCode` |    -    |   yes    | 2-letter code for the country you want to display |\r\n+\r\n+For the correct 2-letter country Code have a look at the website https://corona-stats.online/\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNDg2Mw=="}, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDM3MDI2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/CoronaStatsBindingConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0NjoxM1rOGG0oSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDowMzoyNVrOGG1MTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNjkyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String WORLD_LABEL = \"CoronaStats World\";\n          \n          \n            \n                public static final String WORLD_LABEL = \"Corona Statistics (World)\";", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409806922", "createdAt": "2020-04-16T19:46:13Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/CoronaStatsBindingConstants.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.coronastats.internal;\r\n+\r\n+import java.util.Collections;\r\n+import java.util.Set;\r\n+import java.util.stream.Collectors;\r\n+import java.util.stream.Stream;\r\n+\r\n+import org.eclipse.jdt.annotation.NonNullByDefault;\r\n+import org.eclipse.smarthome.core.thing.ThingTypeUID;\r\n+\r\n+/**\r\n+ * The {@link CoronaStatsBindingConstants} class defines common constants, which are\r\n+ * used across the whole binding.\r\n+ *\r\n+ * @author Johannes Ott - Initial contribution\r\n+ */\r\n+@NonNullByDefault\r\n+public class CoronaStatsBindingConstants {\r\n+\r\n+    public static final String BINDING_ID = \"coronastats\";\r\n+\r\n+    // World\r\n+    public static final ThingTypeUID THING_TYPE_WORLD = new ThingTypeUID(BINDING_ID, \"world\");\r\n+    public static final String STATS = \"stats\";\r\n+    public static final String WORLD_LABEL = \"CoronaStats World\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNjE0Mw==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409816143", "createdAt": "2020-04-16T20:03:25Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/java/org/openhab/binding/coronastats/internal/CoronaStatsBindingConstants.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\r\n+ * Copyright (c) 2010-2020 Contributors to the openHAB project\r\n+ *\r\n+ * See the NOTICE file(s) distributed with this work for additional\r\n+ * information.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ */\r\n+package org.openhab.binding.coronastats.internal;\r\n+\r\n+import java.util.Collections;\r\n+import java.util.Set;\r\n+import java.util.stream.Collectors;\r\n+import java.util.stream.Stream;\r\n+\r\n+import org.eclipse.jdt.annotation.NonNullByDefault;\r\n+import org.eclipse.smarthome.core.thing.ThingTypeUID;\r\n+\r\n+/**\r\n+ * The {@link CoronaStatsBindingConstants} class defines common constants, which are\r\n+ * used across the whole binding.\r\n+ *\r\n+ * @author Johannes Ott - Initial contribution\r\n+ */\r\n+@NonNullByDefault\r\n+public class CoronaStatsBindingConstants {\r\n+\r\n+    public static final String BINDING_ID = \"coronastats\";\r\n+\r\n+    // World\r\n+    public static final ThingTypeUID THING_TYPE_WORLD = new ThingTypeUID(BINDING_ID, \"world\");\r\n+    public static final String STATS = \"stats\";\r\n+    public static final String WORLD_LABEL = \"CoronaStats World\";\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNjkyMg=="}, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDM3NTU4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/country.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0ODowMFrOGG0r3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDowMzoyOVrOGG1Mdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNzgzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<label>Corona Stats Online - Country</label>\n          \n          \n            \n            \t\t<label>Corona Statistics (Country)</label>", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409807836", "createdAt": "2020-04-16T19:48:00Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/country.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<thing-type id=\"country\">\r\n+\t\t<supported-bridge-type-refs>\r\n+\t\t\t<bridge-type-ref id=\"world\" />\r\n+\t\t</supported-bridge-type-refs>\r\n+\t\t\r\n+\t\t<label>Corona Stats Online - Country</label>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNjE4Mw==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409816183", "createdAt": "2020-04-16T20:03:29Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/country.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<thing-type id=\"country\">\r\n+\t\t<supported-bridge-type-refs>\r\n+\t\t\t<bridge-type-ref id=\"world\" />\r\n+\t\t</supported-bridge-type-refs>\r\n+\t\t\r\n+\t\t<label>Corona Stats Online - Country</label>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNzgzNg=="}, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDM3Njc1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/country.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0ODoxN1rOGG0sew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDowMzozNFrOGG1Mtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNzk5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<description>Corona stats for a specific country</description>\n          \n          \n            \n            \t\t<description>Corona statistics for a specific country</description>", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409807995", "createdAt": "2020-04-16T19:48:17Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/country.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<thing-type id=\"country\">\r\n+\t\t<supported-bridge-type-refs>\r\n+\t\t\t<bridge-type-ref id=\"world\" />\r\n+\t\t</supported-bridge-type-refs>\r\n+\t\t\r\n+\t\t<label>Corona Stats Online - Country</label>\r\n+\t\t<description>Corona stats for a specific country</description>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNjI0Ng==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409816246", "createdAt": "2020-04-16T20:03:34Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/country.xml", "diffHunk": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<thing-type id=\"country\">\r\n+\t\t<supported-bridge-type-refs>\r\n+\t\t\t<bridge-type-ref id=\"world\" />\r\n+\t\t</supported-bridge-type-refs>\r\n+\t\t\r\n+\t\t<label>Corona Stats Online - Country</label>\r\n+\t\t<description>Corona stats for a specific country</description>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwNzk5NQ=="}, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDM3ODU4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/world.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxOTo0ODozOFrOGG0tdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMDowMzo0MVrOGG1M7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwODI0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t<label>Corona Stats Online - World</label>\n          \n          \n            \n            \t\t<label>Corona Statistics (World)</label>", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409808246", "createdAt": "2020-04-16T19:48:38Z", "author": {"login": "kaikreuzer"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/world.xml", "diffHunk": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<bridge-type id=\"world\">\r\n+\t\t<label>Corona Stats Online - World</label>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgxNjMwMw==", "bodyText": "Changed", "url": "https://github.com/openhab/openhab-addons/pull/7358#discussion_r409816303", "createdAt": "2020-04-16T20:03:41Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.coronastats/src/main/resources/ESH-INF/thing/world.xml", "diffHunk": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<thing:thing-descriptions bindingId=\"coronastats\"\r\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+\txmlns:thing=\"https://openhab.org/schemas/thing-description/v1.0.0\"\r\n+\txsi:schemaLocation=\"https://openhab.org/schemas/thing-description/v1.0.0 https://openhab.org/schemas/thing-description-1.0.0.xsd\">\r\n+\r\n+\t<bridge-type id=\"world\">\r\n+\t\t<label>Corona Stats Online - World</label>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTgwODI0Ng=="}, "originalCommit": {"oid": "ff21650bd147ad5f9db3f0621a65a29b82c07fcb"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 606, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}