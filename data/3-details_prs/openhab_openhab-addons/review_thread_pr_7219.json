{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjU3MDc3", "number": 7219, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTo1MDoxNVrODr2Orw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODoyODozMFrODsLqAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzAzODU1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTo1MDoxNVrOF8bydg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTowODo1M1rOF81bTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNDE2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    AlertMode alertMode1 = state1.getAlertMode();\n          \n          \n            \n                    AlertMode alertMode2 = state2.getAlertMode();\n          \n          \n            \n            \n          \n          \n            \n                    return ((alertMode1 == null && alertMode2 == null) || (alertMode1 != null && alertMode1.equals(alertMode2)))\n          \n          \n            \n                    return Objects.equals(state1.getAlertMode(), state2.getAlertMode())", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r398914166", "createdAt": "2020-03-26T21:50:15Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java", "diffHunk": "@@ -774,7 +775,11 @@ private void notifySensorStatusListeners(final FullSensor fullSensor, final Stri\n      * @return {@code true} if the available information of both states are equal.\n      */\n     private boolean isEqual(State state1, State state2) {\n-        return state1.getAlertMode().equals(state2.getAlertMode()) && state1.isOn() == state2.isOn()\n+        AlertMode alertMode1 = state1.getAlertMode();\n+        AlertMode alertMode2 = state2.getAlertMode();\n+\n+        return ((alertMode1 == null && alertMode2 == null) || (alertMode1 != null && alertMode1.equals(alertMode2)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb0493ff8320dcd243b9f7574ce60389d7e8522"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEyNTkwNQ==", "bodyText": "This is a good point. I already thought about this and in my opinion it would be more Java-Standardconform to implement an equals method inside the state class and replace the calls of this isEqual(state1, state2) by state1.equals(state2)", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399125905", "createdAt": "2020-03-27T09:13:22Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java", "diffHunk": "@@ -774,7 +775,11 @@ private void notifySensorStatusListeners(final FullSensor fullSensor, final Stri\n      * @return {@code true} if the available information of both states are equal.\n      */\n     private boolean isEqual(State state1, State state2) {\n-        return state1.getAlertMode().equals(state2.getAlertMode()) && state1.isOn() == state2.isOn()\n+        AlertMode alertMode1 = state1.getAlertMode();\n+        AlertMode alertMode2 = state2.getAlertMode();\n+\n+        return ((alertMode1 == null && alertMode2 == null) || (alertMode1 != null && alertMode1.equals(alertMode2)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNDE2Ng=="}, "originalCommit": {"oid": "7bb0493ff8320dcd243b9f7574ce60389d7e8522"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMzNDIyMQ==", "bodyText": "I have refactored the State class by adding the equals method. There is one change to previous isEqual method at HueBridgeHandler used before. The attribute float[] xy of State Class was not compared in isEqual() method and is now compared by equals method. As I think there is no affect because of this logic change, but perhaps someone of you can verify this.", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399334221", "createdAt": "2020-03-27T15:08:53Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/handler/HueBridgeHandler.java", "diffHunk": "@@ -774,7 +775,11 @@ private void notifySensorStatusListeners(final FullSensor fullSensor, final Stri\n      * @return {@code true} if the available information of both states are equal.\n      */\n     private boolean isEqual(State state1, State state2) {\n-        return state1.getAlertMode().equals(state2.getAlertMode()) && state1.isOn() == state2.isOn()\n+        AlertMode alertMode1 = state1.getAlertMode();\n+        AlertMode alertMode2 = state2.getAlertMode();\n+\n+        return ((alertMode1 == null && alertMode2 == null) || (alertMode1 != null && alertMode1.equals(alertMode2)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNDE2Ng=="}, "originalCommit": {"oid": "7bb0493ff8320dcd243b9f7574ce60389d7e8522"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjI2OTU4OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoxMDoyMFrOF86ctg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODoyODo1M1rOF89P9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxNjUwMg==", "bodyText": "This javadoc isn't adding any new information, so please remove it.", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399416502", "createdAt": "2020-03-27T17:10:20Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,51 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#equals(java.lang.Object)\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94550cb3399b21873ff78be618df683702ecef1a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MTYxNA==", "bodyText": "Removed", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399461614", "createdAt": "2020-03-27T18:27:31Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,51 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#equals(java.lang.Object)\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxNjUwMg=="}, "originalCommit": {"oid": "94550cb3399b21873ff78be618df683702ecef1a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjM4OA==", "bodyText": "Removed it", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399462388", "createdAt": "2020-03-27T18:28:53Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,51 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#equals(java.lang.Object)\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQxNjUwMg=="}, "originalCommit": {"oid": "94550cb3399b21873ff78be618df683702ecef1a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjMwNzk2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNzoyMTowMFrOF861Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODoyNTozNVrOF89I6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMjc5OA==", "bodyText": "Java has a standard contract for equals/hashcode that two equal objects must have the same hashcode. So just generate a hashcode method for this class and I think we can call this PR done.", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399422798", "createdAt": "2020-03-27T17:21:00Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,51 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#equals(java.lang.Object)\n+     */\n+\n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94550cb3399b21873ff78be618df683702ecef1a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MDU4Ng==", "bodyText": "Added hashcode and removed Javadoc", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399460586", "createdAt": "2020-03-27T18:25:35Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,51 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    /*\n+     * (non-Javadoc)\n+     * \n+     * @see java.lang.Object#equals(java.lang.Object)\n+     */\n+\n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQyMjc5OA=="}, "originalCommit": {"oid": "94550cb3399b21873ff78be618df683702ecef1a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjU0OTE0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODoyODozMFrOF89PBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODo1NDo1MlrOF8-F4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjE0OQ==", "bodyText": "One last thing, can you run this class through the formatter. It looks like the generated single-line if statements don't have brackets.", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399462149", "createdAt": "2020-03-27T18:28:30Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,62 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((alert == null) ? 0 : alert.hashCode());\n+        result = prime * result + bri;\n+        result = prime * result + ((colormode == null) ? 0 : colormode.hashCode());\n+        result = prime * result + ct;\n+        result = prime * result + ((effect == null) ? 0 : effect.hashCode());\n+        result = prime * result + hue;\n+        result = prime * result + (on ? 1231 : 1237);\n+        result = prime * result + (reachable ? 1231 : 1237);\n+        result = prime * result + sat;\n+        result = prime * result + Arrays.hashCode(xy);\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab0cba667b814ca263ba436ca2fe8a0881a6c173"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3MTY1NA==", "bodyText": "I have used the formatter settings in Visual Studio Code as described on openhab documentation. It doesn't add brackets automatically.", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399471654", "createdAt": "2020-03-27T18:46:20Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,62 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((alert == null) ? 0 : alert.hashCode());\n+        result = prime * result + bri;\n+        result = prime * result + ((colormode == null) ? 0 : colormode.hashCode());\n+        result = prime * result + ct;\n+        result = prime * result + ((effect == null) ? 0 : effect.hashCode());\n+        result = prime * result + hue;\n+        result = prime * result + (on ? 1231 : 1237);\n+        result = prime * result + (reachable ? 1231 : 1237);\n+        result = prime * result + sat;\n+        result = prime * result + Arrays.hashCode(xy);\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjE0OQ=="}, "originalCommit": {"oid": "ab0cba667b814ca263ba436ca2fe8a0881a6c173"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NTgzNw==", "bodyText": "I added the brackets manually, now.", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399475837", "createdAt": "2020-03-27T18:54:08Z", "author": {"login": "DerOetzi"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,62 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((alert == null) ? 0 : alert.hashCode());\n+        result = prime * result + bri;\n+        result = prime * result + ((colormode == null) ? 0 : colormode.hashCode());\n+        result = prime * result + ct;\n+        result = prime * result + ((effect == null) ? 0 : effect.hashCode());\n+        result = prime * result + hue;\n+        result = prime * result + (on ? 1231 : 1237);\n+        result = prime * result + (reachable ? 1231 : 1237);\n+        result = prime * result + sat;\n+        result = prime * result + Arrays.hashCode(xy);\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjE0OQ=="}, "originalCommit": {"oid": "ab0cba667b814ca263ba436ca2fe8a0881a6c173"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ3NjE5NQ==", "bodyText": "It doesn't? Strange, that means that the VSC formatter settings is different from the Eclipse one. The Eclipse one is the standard so looks like the VSC formatter needs to be changed.", "url": "https://github.com/openhab/openhab-addons/pull/7219#discussion_r399476195", "createdAt": "2020-03-27T18:54:52Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.hue/src/main/java/org/openhab/binding/hue/internal/State.java", "diffHunk": "@@ -184,4 +189,62 @@ public Effect getEffect() {\n     public boolean isReachable() {\n         return reachable;\n     }\n+\n+    @Override\n+    public int hashCode() {\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ((alert == null) ? 0 : alert.hashCode());\n+        result = prime * result + bri;\n+        result = prime * result + ((colormode == null) ? 0 : colormode.hashCode());\n+        result = prime * result + ct;\n+        result = prime * result + ((effect == null) ? 0 : effect.hashCode());\n+        result = prime * result + hue;\n+        result = prime * result + (on ? 1231 : 1237);\n+        result = prime * result + (reachable ? 1231 : 1237);\n+        result = prime * result + sat;\n+        result = prime * result + Arrays.hashCode(xy);\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ2MjE0OQ=="}, "originalCommit": {"oid": "ab0cba667b814ca263ba436ca2fe8a0881a6c173"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 744, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}