{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4ODAzMDIz", "number": 7296, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzowMDowOVrODuwwsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzoxMjoxNVrODuxB8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzU5OTg2OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.bosesoundtouch/src/main/java/org/openhab/binding/bosesoundtouch/internal/handler/BoseSoundTouchHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzowMDowOVrOGA3U4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNzoxMDoyN1rOGA9c6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1OTY0OA==", "bodyText": "Is there any formatting setting that would make this look better?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403559648", "createdAt": "2020-04-04T23:00:09Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.bosesoundtouch/src/main/java/org/openhab/binding/bosesoundtouch/internal/handler/BoseSoundTouchHandler.java", "diffHunk": "@@ -517,32 +520,66 @@ public void handleGroupUpdated(BoseSoundTouchConfiguration masterPlayerConfigura\n             }\r\n         }\r\n     }\r\n-    \r\n+\r\n     private List<Channel> getAllChannels() {\r\n         List<Channel> allChannels = new ArrayList<>();\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_POWER), new ChannelTypeUID(BINDING_ID, CHANNEL_POWER)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_VOLUME), new ChannelTypeUID(BINDING_ID, CHANNEL_VOLUME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_MUTE), new ChannelTypeUID(BINDING_ID, CHANNEL_MUTE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_OPERATIONMODE), new ChannelTypeUID(BINDING_ID, \"operationMode_BST_10_20_30\")).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PLAYER_CONTROL), new ChannelTypeUID(BINDING_ID, CHANNEL_PLAYER_CONTROL)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PRESET), new ChannelTypeUID(BINDING_ID, CHANNEL_PRESET)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_BASS), new ChannelTypeUID(BINDING_ID, CHANNEL_BASS)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_RATEENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_RATEENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPPREVIOUSENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPPREVIOUSENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SAVE_AS_PRESET), new ChannelTypeUID(BINDING_ID, CHANNEL_SAVE_AS_PRESET)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_KEY_CODE), new ChannelTypeUID(BINDING_ID, CHANNEL_KEY_CODE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ALBUM), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ALBUM)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTWORK), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTWORK)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTIST), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTIST)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_DESCRIPTION), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_DESCRIPTION)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_GENRE), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_GENRE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ITEMNAME), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ITEMNAME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONLOCATION), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONLOCATION)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONNAME), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONNAME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_TRACK), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_TRACK)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOTIFICATION_SOUND), new ChannelTypeUID(BINDING_ID, CHANNEL_NOTIFICATION_SOUND)).build());\r\n-        \r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_POWER),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_POWER)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_VOLUME),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_VOLUME)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_MUTE),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_MUTE)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_OPERATIONMODE),\r\n+                new ChannelTypeUID(BINDING_ID, \"operationMode_BST_10_20_30\")).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PLAYER_CONTROL),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_PLAYER_CONTROL)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PRESET),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_PRESET)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_BASS),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_BASS)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_RATEENABLED),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_RATEENABLED)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPENABLED),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPENABLED)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPPREVIOUSENABLED),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPPREVIOUSENABLED)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SAVE_AS_PRESET),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_SAVE_AS_PRESET)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_KEY_CODE),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_KEY_CODE)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ALBUM),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ALBUM)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTWORK),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTWORK)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTIST),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTIST)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_DESCRIPTION),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_DESCRIPTION)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_GENRE),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_GENRE)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ITEMNAME),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ITEMNAME)).build());\r\n+        allChannels.add(getCallback()\r\n+                .createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONLOCATION),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONLOCATION))\r\n+                .build());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY2MDAwOA==", "bodyText": "I've fixed the part where it's sloppy code with a lot of unnecessary duplication causing all sorts of issues.", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403660008", "createdAt": "2020-04-05T07:10:27Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.bosesoundtouch/src/main/java/org/openhab/binding/bosesoundtouch/internal/handler/BoseSoundTouchHandler.java", "diffHunk": "@@ -517,32 +520,66 @@ public void handleGroupUpdated(BoseSoundTouchConfiguration masterPlayerConfigura\n             }\r\n         }\r\n     }\r\n-    \r\n+\r\n     private List<Channel> getAllChannels() {\r\n         List<Channel> allChannels = new ArrayList<>();\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_POWER), new ChannelTypeUID(BINDING_ID, CHANNEL_POWER)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_VOLUME), new ChannelTypeUID(BINDING_ID, CHANNEL_VOLUME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_MUTE), new ChannelTypeUID(BINDING_ID, CHANNEL_MUTE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_OPERATIONMODE), new ChannelTypeUID(BINDING_ID, \"operationMode_BST_10_20_30\")).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PLAYER_CONTROL), new ChannelTypeUID(BINDING_ID, CHANNEL_PLAYER_CONTROL)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PRESET), new ChannelTypeUID(BINDING_ID, CHANNEL_PRESET)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_BASS), new ChannelTypeUID(BINDING_ID, CHANNEL_BASS)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_RATEENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_RATEENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPPREVIOUSENABLED), new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPPREVIOUSENABLED)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SAVE_AS_PRESET), new ChannelTypeUID(BINDING_ID, CHANNEL_SAVE_AS_PRESET)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_KEY_CODE), new ChannelTypeUID(BINDING_ID, CHANNEL_KEY_CODE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ALBUM), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ALBUM)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTWORK), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTWORK)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTIST), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTIST)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_DESCRIPTION), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_DESCRIPTION)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_GENRE), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_GENRE)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ITEMNAME), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ITEMNAME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONLOCATION), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONLOCATION)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONNAME), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONNAME)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_TRACK), new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_TRACK)).build());\r\n-        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOTIFICATION_SOUND), new ChannelTypeUID(BINDING_ID, CHANNEL_NOTIFICATION_SOUND)).build());\r\n-        \r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_POWER),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_POWER)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_VOLUME),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_VOLUME)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_MUTE),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_MUTE)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_OPERATIONMODE),\r\n+                new ChannelTypeUID(BINDING_ID, \"operationMode_BST_10_20_30\")).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PLAYER_CONTROL),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_PLAYER_CONTROL)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_PRESET),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_PRESET)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_BASS),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_BASS)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_RATEENABLED),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_RATEENABLED)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPENABLED),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPENABLED)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SKIPPREVIOUSENABLED),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_SKIPPREVIOUSENABLED)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_SAVE_AS_PRESET),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_SAVE_AS_PRESET)).build());\r\n+        allChannels.add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_KEY_CODE),\r\n+                new ChannelTypeUID(BINDING_ID, CHANNEL_KEY_CODE)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ALBUM),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ALBUM)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTWORK),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTWORK)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ARTIST),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ARTIST)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_DESCRIPTION),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_DESCRIPTION)).build());\r\n+        allChannels\r\n+                .add(getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_GENRE),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_GENRE)).build());\r\n+        allChannels.add(\r\n+                getCallback().createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_ITEMNAME),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_ITEMNAME)).build());\r\n+        allChannels.add(getCallback()\r\n+                .createChannelBuilder(new ChannelUID(getThing().getUID(), CHANNEL_NOWPLAYING_STATIONLOCATION),\r\n+                        new ChannelTypeUID(BINDING_ID, CHANNEL_NOWPLAYING_STATIONLOCATION))\r\n+                .build());\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU1OTY0OA=="}, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzYxNDU3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactHandler.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzowNDoxNFrOGA3bXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwODozNDoyNVrOGA9-aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MTMxMA==", "bodyText": "what's with this new indentation?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403561310", "createdAt": "2020-04-04T23:04:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactHandler.java", "diffHunk": "@@ -558,15 +557,17 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     if (command instanceof DecimalType) {\n                         transceiver.send(\n                                 \"setenergy \" + String.valueOf(\n-                                        Math.min(Math.max(0, ((DecimalType) command).intValue()*10), 999999999)), this);\n+                                        Math.min(Math.max(0, ((DecimalType) command).intValue() * 10), 999999999)),\n+                                this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1OTUxNQ==", "bodyText": "The Eclipse auto save formatting placed it on a new line. Does it also happen for you?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403659515", "createdAt": "2020-04-05T07:04:59Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactHandler.java", "diffHunk": "@@ -558,15 +557,17 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     if (command instanceof DecimalType) {\n                         transceiver.send(\n                                 \"setenergy \" + String.valueOf(\n-                                        Math.min(Math.max(0, ((DecimalType) command).intValue()*10), 999999999)), this);\n+                                        Math.min(Math.max(0, ((DecimalType) command).intValue() * 10), 999999999)),\n+                                this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MTMxMA=="}, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY2MDA0NA==", "bodyText": "I don't mind that it placed it on a new line, I just disagree on the indentation of that new line, it should be at least as indented as the previous one.", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403660044", "createdAt": "2020-04-05T07:10:53Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactHandler.java", "diffHunk": "@@ -558,15 +557,17 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     if (command instanceof DecimalType) {\n                         transceiver.send(\n                                 \"setenergy \" + String.valueOf(\n-                                        Math.min(Math.max(0, ((DecimalType) command).intValue()*10), 999999999)), this);\n+                                        Math.min(Math.max(0, ((DecimalType) command).intValue() * 10), 999999999)),\n+                                this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MTMxMA=="}, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY2MTA4OQ==", "bodyText": "I stopped fighting auto formatters a long time ago. \ud83d\ude09\nAccording to my settings the limit is set to 120:\n\nIt's a limit for a reason, sometimes it will result in less optimal formatting like in this case. It's expected to happen a lot more when all code is reformatted using spotless.", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403661089", "createdAt": "2020-04-05T07:22:12Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactHandler.java", "diffHunk": "@@ -558,15 +557,17 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     if (command instanceof DecimalType) {\n                         transceiver.send(\n                                 \"setenergy \" + String.valueOf(\n-                                        Math.min(Math.max(0, ((DecimalType) command).intValue()*10), 999999999)), this);\n+                                        Math.min(Math.max(0, ((DecimalType) command).intValue() * 10), 999999999)),\n+                                this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MTMxMA=="}, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY2ODU4NQ==", "bodyText": "The auto formatter indents it like this because it is the second parameter of transceiver.send. I think it does make all this excessively indented code more readable:", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403668585", "createdAt": "2020-04-05T08:34:25Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.keba/src/main/java/org/openhab/binding/keba/internal/handler/KeContactHandler.java", "diffHunk": "@@ -558,15 +557,17 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n                     if (command instanceof DecimalType) {\n                         transceiver.send(\n                                 \"setenergy \" + String.valueOf(\n-                                        Math.min(Math.max(0, ((DecimalType) command).intValue()*10), 999999999)), this);\n+                                        Math.min(Math.max(0, ((DecimalType) command).intValue() * 10), 999999999)),\n+                                this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MTMxMA=="}, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzYyMTYyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzowNjowNlrOGA3eUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNzowNzoyM1rOGA9byg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MjA2Nw==", "bodyText": "why is this imported?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403562067", "createdAt": "2020-04-04T23:06:06Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -28,7 +28,7 @@\n import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n import org.eclipse.smarthome.core.types.Command;\n-\n+import org.openhab.binding.neohub.internal.NeoHubBindingConstants.NeoHubReturnResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1OTcyMg==", "bodyText": "It's added by the auto save actions because it's used by fromNeoHubFetchPollingResponse on L181.", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403659722", "createdAt": "2020-04-05T07:07:23Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -28,7 +28,7 @@\n import org.eclipse.smarthome.core.thing.binding.BaseBridgeHandler;\n import org.eclipse.smarthome.core.thing.binding.ThingHandler;\n import org.eclipse.smarthome.core.types.Command;\n-\n+import org.openhab.binding.neohub.internal.NeoHubBindingConstants.NeoHubReturnResult;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2MjA2Nw=="}, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzY0NDAyOnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.yamahareceiver/src/main/java/org/openhab/binding/yamahareceiver/internal/protocol/xml/XMLConnection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMzoxMjoxNVrOGA3oFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNzoxNDozMFrOGA9eeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2NDU2NQ==", "bodyText": "isn't this comment indentation fragile?", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403564565", "createdAt": "2020-04-04T23:12:15Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.yamahareceiver/src/main/java/org/openhab/binding/yamahareceiver/internal/protocol/xml/XMLConnection.java", "diffHunk": "@@ -76,7 +76,8 @@ public XMLConnection(String host) {\n             connection.setRequestMethod(\"POST\");\n             connection.setRequestProperty(\"Content-Length\", Integer.toString(message.length()));\n \n-            connection.setConnectTimeout(CONNECTION_TIMEOUT_MS); // set a timeout in case the device is not reachable (went offline)\n+            connection.setConnectTimeout(CONNECTION_TIMEOUT_MS); // set a timeout in case the device is not reachable\n+                                                                 // (went offline)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY2MDQwOA==", "bodyText": "It should be less fragile now. \ud83c\udf88", "url": "https://github.com/openhab/openhab-addons/pull/7296#discussion_r403660408", "createdAt": "2020-04-05T07:14:30Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.yamahareceiver/src/main/java/org/openhab/binding/yamahareceiver/internal/protocol/xml/XMLConnection.java", "diffHunk": "@@ -76,7 +76,8 @@ public XMLConnection(String host) {\n             connection.setRequestMethod(\"POST\");\n             connection.setRequestProperty(\"Content-Length\", Integer.toString(message.length()));\n \n-            connection.setConnectTimeout(CONNECTION_TIMEOUT_MS); // set a timeout in case the device is not reachable (went offline)\n+            connection.setConnectTimeout(CONNECTION_TIMEOUT_MS); // set a timeout in case the device is not reachable\n+                                                                 // (went offline)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzU2NDU2NQ=="}, "originalCommit": {"oid": "94cf77263fd7bcfafbad9c21ce2e109c94372a5a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 535, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}