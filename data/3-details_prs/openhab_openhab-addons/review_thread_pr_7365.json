{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTY3MTUy", "number": 7365, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzowOTowMVrODyRp3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzowOTowMVrODyRp3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDQ0NjM3OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.mqtt/src/main/java/org/openhab/binding/mqtt/internal/MqttBrokerHandlerFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzowOTowMVrOGGOulQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNToyNDozOFrOGKXI0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4NTk0MQ==", "bodyText": "what if a broker is added later on? Shouldn't that one get a message too? The MQTTTopicDiscoveryService .subscribe method is handled this way should this one not also be handled that way?", "url": "https://github.com/openhab/openhab-addons/pull/7365#discussion_r409185941", "createdAt": "2020-04-15T23:09:01Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.mqtt/src/main/java/org/openhab/binding/mqtt/internal/MqttBrokerHandlerFactory.java", "diffHunk": "@@ -125,4 +125,13 @@ public void unsubscribe(MQTTTopicDiscoveryParticipant listener) {\n             handlers.forEach(broker -> broker.unregisterDiscoveryListener(listener, topic));\n         });\n     }\n+\n+     @Override\n+     public void publish(String topic, byte[] payload) {\n+         handlers.forEach(handler -> {\n+             handler.getConnectionAsync().thenAccept(connection -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22884fdd707cee5abe5d0c489dab8c41a650f8fa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMxNDg5NA==", "bodyText": "I didn't consider it, but now, thinking at the logic, If I subscribe as a discovery service I am expecting to receive from brokers that were later added since I don't interact with a broker, I interact with this abstraction layer on top of them. But subscription is something continuous in time.\nOn the other hand, publishing is instantaneous and happens when the user presses the scan button (or when the binding decides to do an active scan), I consider reasonable the expectation to publish only on currently connected brokers, not publish in the future when a new broker is registered", "url": "https://github.com/openhab/openhab-addons/pull/7365#discussion_r409314894", "createdAt": "2020-04-16T06:37:27Z", "author": {"login": "aisebastian"}, "path": "bundles/org.openhab.binding.mqtt/src/main/java/org/openhab/binding/mqtt/internal/MqttBrokerHandlerFactory.java", "diffHunk": "@@ -125,4 +125,13 @@ public void unsubscribe(MQTTTopicDiscoveryParticipant listener) {\n             handlers.forEach(broker -> broker.unregisterDiscoveryListener(listener, topic));\n         });\n     }\n+\n+     @Override\n+     public void publish(String topic, byte[] payload) {\n+         handlers.forEach(handler -> {\n+             handler.getConnectionAsync().thenAccept(connection -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4NTk0MQ=="}, "originalCommit": {"oid": "22884fdd707cee5abe5d0c489dab8c41a650f8fa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzExOTEyNw==", "bodyText": "If there is no background scan involved and scanning only happens when manually triggered, I think it is ok to leave it as-is. It's an absolute corner-case that a broker is added after the scan was started but before it is finished (especially when the user has to trigger the scan).\n@aisebastian, can you confirm that this is the case?", "url": "https://github.com/openhab/openhab-addons/pull/7365#discussion_r413119127", "createdAt": "2020-04-22T16:13:03Z", "author": {"login": "J-N-K"}, "path": "bundles/org.openhab.binding.mqtt/src/main/java/org/openhab/binding/mqtt/internal/MqttBrokerHandlerFactory.java", "diffHunk": "@@ -125,4 +125,13 @@ public void unsubscribe(MQTTTopicDiscoveryParticipant listener) {\n             handlers.forEach(broker -> broker.unregisterDiscoveryListener(listener, topic));\n         });\n     }\n+\n+     @Override\n+     public void publish(String topic, byte[] payload) {\n+         handlers.forEach(handler -> {\n+             handler.getConnectionAsync().thenAccept(connection -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4NTk0MQ=="}, "originalCommit": {"oid": "22884fdd707cee5abe5d0c489dab8c41a650f8fa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzUxODAzMw==", "bodyText": "To the best of my knowledge, scanning is only done on demand by the user through ... \"Thing search\", and in terms of when this \"scan publish\" occurs, it is entirely up to each binding to use it or not", "url": "https://github.com/openhab/openhab-addons/pull/7365#discussion_r413518033", "createdAt": "2020-04-23T05:24:38Z", "author": {"login": "aisebastian"}, "path": "bundles/org.openhab.binding.mqtt/src/main/java/org/openhab/binding/mqtt/internal/MqttBrokerHandlerFactory.java", "diffHunk": "@@ -125,4 +125,13 @@ public void unsubscribe(MQTTTopicDiscoveryParticipant listener) {\n             handlers.forEach(broker -> broker.unregisterDiscoveryListener(listener, topic));\n         });\n     }\n+\n+     @Override\n+     public void publish(String topic, byte[] payload) {\n+         handlers.forEach(handler -> {\n+             handler.getConnectionAsync().thenAccept(connection -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4NTk0MQ=="}, "originalCommit": {"oid": "22884fdd707cee5abe5d0c489dab8c41a650f8fa"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 236, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}