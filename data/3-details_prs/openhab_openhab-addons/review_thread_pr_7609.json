{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDM5ODgx", "number": 7609, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzowODowOFrOD7hKGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTozNTo1NFrOD7y_qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzM1ODM1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "isResolved": false, "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwNzowODowOFrOGT45iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTozNDoxNFrOGUV5_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA==", "bodyText": "I would just get the identifier and check if it is null (the code below). Recently I looked into rfc2217 connections (openhab/openhab-core#1462) and these will not be returned in this list.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423508360", "createdAt": "2020-05-12T07:08:08Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5Njg2MQ==", "bodyText": "Are you sure this bug work-around is no longer needed? If so I can remove it from two places here and one in the new alarmdecoder binding.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423796861", "createdAt": "2020-05-12T14:50:40Z", "author": {"login": "bobadair"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgyMTQ4OQ==", "bodyText": "Do you know what bug is worked around? I haven't noticed any bugs with bindings that don't use it (dsmr, plugwise). The way it's written now introduces a bug for sure because RFC2217PortProvider.getSerialPortIdentifiers() will not return any ports so if someone wants to use an rfc2217 connection it will stop because it thinks it doesn't exist.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423821489", "createdAt": "2020-05-12T15:21:52Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgzMDAwNw==", "bodyText": "A possible JVM crash, supposedly. I saw similar code in the zigbee  or zwave binding with a comment that said it was necessary to avoid a bug in the serial library.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423830007", "createdAt": "2020-05-12T15:33:05Z", "author": {"login": "bobadair"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgzMjYxNw==", "bodyText": "Another reason for not checking the getSerialPortIdentifiers() is that the transport will also add ports to the gnu.io.rxtx.SerialPorts environment variable. So that way you can use non-standard serial ports (e.g. from udev rules) that are not discovered by the nrjavaserial library (see code) without having to manually add them to gnu.io.rxtx.SerialPorts.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423832617", "createdAt": "2020-05-12T15:36:36Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg1MjM3NQ==", "bodyText": "The API docs also state that these methods only return discovered ports (which may be none at all depending on the underlying serial implementation). So I think it's best to only use them for showing available ports in UIs and logging etc.\nI think it would be better if the zwave/zigbee bindings just try to open the port to see if a  device is unplugged @cdjackson. If that throws an exception they aren't plugged in. This will also solve detection issues and make these bindings more compatible with rfc2217.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423852375", "createdAt": "2020-05-12T16:02:48Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg3MDI3Ng==", "bodyText": "I'm not quite sure why we are discussing the zwave/zigbee bindings here, but...\n\nI think it would be better if the zwave/zigbee bindings just try to open the port to see if a device is unplugged @cdjackson.\n\nThe referenced code is only from the ZWave binding. I'm not familiar with why this was added - it was added by @bodiroga as part of the serial port reconnection changes. I don't mind if someone wants to change this logic - it will be changed in future as the binding is being rewritten.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423870276", "createdAt": "2020-05-12T16:28:19Z", "author": {"login": "cdjackson"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxMjU2NQ==", "bodyText": "Thanks @cdjackson. I think we're just interested in determining whether that work-around code (or preferable some other fix in place of it) is still necessary. I don't really know the history of it. I just saw the comment \"in some rare cases we have to check whether a port really exists, because if it doesn't the call to CommPortIdentifier#open will kill the whole JVM\" in the Zigbee binding when I was looking for examples of using SerialPortManager:\nhttps://github.com/openhab/org.openhab.binding.zigbee/blob/fac0cb77e61edebf8a9b1204879314f710b1f5bb/org.openhab.binding.zigbee/src/main/java/org/openhab/binding/zigbee/handler/ZigBeeSerialPort.java#L139-L145\nI thought that a JVM crash sounded undesirable :-). The work-around seemed relatively harmless and inexpensive, so I included it in the alarmdecoder binding, and later in the lutron binding. I'm not sure if any others have done the same thing. Now that @wborn has discovered the workaround prevents RFC2217 connections from working, it seems advisable to get rid of it.  But only if the original JVM-crashing bug is gone. In the Zigbee code it looks like that commit containing it came from @triller-telekom, so maybe he knows the history of it?", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423912565", "createdAt": "2020-05-12T17:34:37Z", "author": {"login": "bobadair"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkxNzYyNw==", "bodyText": "That may be linked in some way to the USB discovery - I'm not sure. Maybe Stefan can help, although I think they have now forked the binding and are not directly using this code.  We were going to remove the USB discovery as it caused other issues with device names.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423917627", "createdAt": "2020-05-12T17:42:56Z", "author": {"login": "cdjackson"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzkyMTc3Mw==", "bodyText": "I think we can safely remove it from this binding anyways. It will result in identical behavior as the original code using gnu.io also just gets the identifier and opens the port. I couldn't find any other bindings doing this workaround (except for alarmdecoder). So if it is a big issue, it would have been reported for many other bindings by now.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423921773", "createdAt": "2020-05-12T17:49:41Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MDM1Mw==", "bodyText": "Ok. I'll go ahead and remove it now. I'd still be interested to hear about what the original problem was, though.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423940353", "createdAt": "2020-05-12T18:19:41Z", "author": {"login": "bobadair"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MjQ1Ng==", "bodyText": "Yes I'd also like to know. If it still exists we can reproduce the issue and fix the root cause. :-)", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423972456", "createdAt": "2020-05-12T19:14:42Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4MzYxMw==", "bodyText": "Also removed from the alarmdecoder binding in #7615.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423983613", "createdAt": "2020-05-12T19:34:14Z", "author": {"login": "bobadair"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +39,42 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        // Exit if no identifiers exist to work around possible library bug. May not be needed in 3.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUwODM2MA=="}, "originalCommit": {"oid": "dae1dce8d198680b26334d17759ef69ff3c1ef35"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDI3ODA1OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/hw/HwSerialBridgeHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTozNDo1OVrOGUV9Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo1ODoyMVrOGUWuEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4NDQxMA==", "bodyText": "It's now possible to assign the variable where it is declared:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    portIdentifier = serialPortManager.getIdentifier(serialPortName);\n          \n          \n            \n                    SerialPortIdentifier portIdentifier = serialPortManager.getIdentifier(serialPortName);", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423984410", "createdAt": "2020-05-12T19:34:59Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/hw/HwSerialBridgeHandler.java", "diffHunk": "@@ -99,9 +100,16 @@ public void setDiscoveryService(HwDiscoveryService discoveryService) {\n     }\n \n     private void openConnection() {\n+        SerialPortIdentifier portIdentifier;\n+\n+        portIdentifier = serialPortManager.getIdentifier(serialPortName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e168013ab4daafc5bc686f38365d3f42a49941"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5Njk0NA==", "bodyText": "Ah, yes. Missed those.", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423996944", "createdAt": "2020-05-12T19:58:21Z", "author": {"login": "bobadair"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/hw/HwSerialBridgeHandler.java", "diffHunk": "@@ -99,9 +100,16 @@ public void setDiscoveryService(HwDiscoveryService discoveryService) {\n     }\n \n     private void openConnection() {\n+        SerialPortIdentifier portIdentifier;\n+\n+        portIdentifier = serialPortManager.getIdentifier(serialPortName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4NDQxMA=="}, "originalCommit": {"oid": "d0e168013ab4daafc5bc686f38365d3f42a49941"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDI4MDc0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTozNTo1NFrOGUV-7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTozNTo1NFrOGUV-7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4NDg3Nw==", "bodyText": "It's now possible to assign the variable where it is declared:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    portIdentifier = serialPortManager.getIdentifier(portName);\n          \n          \n            \n                    SerialPortIdentifier portIdentifier = serialPortManager.getIdentifier(portName);", "url": "https://github.com/openhab/openhab-addons/pull/7609#discussion_r423984877", "createdAt": "2020-05-12T19:35:54Z", "author": {"login": "wborn"}, "path": "bundles/org.openhab.binding.lutron/src/main/java/org/openhab/binding/lutron/internal/radiora/RS232Connection.java", "diffHunk": "@@ -42,32 +38,36 @@\n \n     private final Logger logger = LoggerFactory.getLogger(RS232Connection.class);\n \n+    protected SerialPortManager serialPortManager;\n     protected SerialPort serialPort;\n \n     protected BufferedReader inputReader;\n \n     protected RadioRAFeedbackListener listener;\n     protected RS232MessageParser parser = new RS232MessageParser();\n \n+    public RS232Connection(SerialPortManager serialPortManager) {\n+        super();\n+        this.serialPortManager = serialPortManager;\n+    }\n+\n     @Override\n     public void open(String portName, int baud) throws RadioRAConnectionException {\n-        CommPortIdentifier commPort = null;\n+        SerialPortIdentifier portIdentifier;\n \n-        try {\n-            commPort = CommPortIdentifier.getPortIdentifier(portName);\n-        } catch (NoSuchPortException e) {\n-            logAvailablePorts();\n+        portIdentifier = serialPortManager.getIdentifier(portName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e168013ab4daafc5bc686f38365d3f42a49941"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 220, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}