{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTQxODQ3", "number": 7719, "title": "[kodi] Removed dependency on 'org.apache.commons.lang'", "bodyText": "Removed dependency on org.apache.commons.lang\n\nSigned-off-by: Christoph Weitkamp github@christophweitkamp.de", "createdAt": "2020-05-21T19:36:19Z", "url": "https://github.com/openhab/openhab-addons/pull/7719", "merged": true, "mergeCommit": {"oid": "e713d49f59b029e34b7c8bb9e6e22a5a77c4864e"}, "closed": true, "closedAt": "2020-05-23T19:29:13Z", "author": {"login": "cweitkamp"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcji7GAgH2gAyNDIxNTQxODQ3OjYwNmE2MzgwOTM3ZWNhYjJmZjM3ODMyZTg5MTRkODZmYTA0ZTAyZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckMCZVAFqTQxNzMwMjg3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "606a6380937ecab2ff37832e8914d86fa04e02da", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-addons/commit/606a6380937ecab2ff37832e8914d86fa04e02da", "committedDate": "2020-05-21T19:34:45Z", "message": "Removed dependency on 'org.apache.commons.*'\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NDM5NjE2", "url": "https://github.com/openhab/openhab-addons/pull/7719#pullrequestreview-416439616", "createdAt": "2020-05-21T19:45:15Z", "commit": {"oid": "606a6380937ecab2ff37832e8914d86fa04e02da"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOTo0NToxNVrOGZAZ0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOTo0ODo1MlrOGZAg7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg3NDE5Mw==", "bodyText": "That is a pretty heavy replacement, perhaps make a small utility function instead?", "url": "https://github.com/openhab/openhab-addons/pull/7719#discussion_r428874193", "createdAt": "2020-05-21T19:45:15Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.kodi/src/main/java/org/openhab/binding/kodi/internal/protocol/KodiConnection.java", "diffHunk": "@@ -862,7 +861,7 @@ private JsonArray getJsonArray(String[] values) {\n             // we have to strip ending \"/\" here because Kodi returns a not valid path and filename\n             // \"fanart\":\"image://http%3a%2f%2fthetvdb.com%2fbanners%2ffanart%2foriginal%2f263365-31.jpg/\"\n             // \"thumbnail\":\"image://http%3a%2f%2fthetvdb.com%2fbanners%2fepisodes%2f263365%2f5640869.jpg/\"\n-            String encodedURL = URLEncoder.encode(StringUtils.stripEnd(url, \"/\"), StandardCharsets.UTF_8.name());\n+            String encodedURL = URLEncoder.encode(url.replaceAll(\"/$\", \"\"), StandardCharsets.UTF_8.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "606a6380937ecab2ff37832e8914d86fa04e02da"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg3NTcxNQ==", "bodyText": "Are you sure it is safe to not ignore case?", "url": "https://github.com/openhab/openhab-addons/pull/7719#discussion_r428875715", "createdAt": "2020-05-21T19:48:16Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.kodi/src/main/java/org/openhab/binding/kodi/internal/protocol/KodiConnection.java", "diffHunk": "@@ -1214,7 +1214,8 @@ public int getPVRChannelGroupId(final String channelType, final String pvrChanne\n \n     public int getPVRChannelId(final int pvrChannelGroupId, final String pvrChannelName) {\n         for (KodiPVRChannel pvrChannel : getPVRChannels(pvrChannelGroupId)) {\n-            if (StringUtils.equalsIgnoreCase(pvrChannel.getLabel(), pvrChannelName)) {\n+            String label = pvrChannel.getLabel();\n+            if (label != null && label.equals(pvrChannelName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "606a6380937ecab2ff37832e8914d86fa04e02da"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg3NTc3MQ==", "bodyText": "here too", "url": "https://github.com/openhab/openhab-addons/pull/7719#discussion_r428875771", "createdAt": "2020-05-21T19:48:23Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.kodi/src/main/java/org/openhab/binding/kodi/internal/protocol/KodiConnection.java", "diffHunk": "@@ -1175,7 +1174,8 @@ public synchronized void playURI(String uri) {\n     public int getPVRChannelGroupId(final String channelType, final String pvrChannelGroupName) {\n         List<KodiPVRChannelGroup> pvrChannelGroups = getPVRChannelGroups(channelType);\n         for (KodiPVRChannelGroup pvrChannelGroup : pvrChannelGroups) {\n-            if (StringUtils.equalsIgnoreCase(pvrChannelGroup.getLabel(), pvrChannelGroupName)) {\n+            String label = pvrChannelGroup.getLabel();\n+            if (label != null && label.equals(pvrChannelGroupName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "606a6380937ecab2ff37832e8914d86fa04e02da"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg3NjAxNQ==", "bodyText": "here too", "url": "https://github.com/openhab/openhab-addons/pull/7719#discussion_r428876015", "createdAt": "2020-05-21T19:48:52Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.kodi/src/main/java/org/openhab/binding/kodi/internal/protocol/KodiConnection.java", "diffHunk": "@@ -379,10 +378,10 @@ public synchronized void playlistRemove(int playlistID, int position) {\n      * @param favoriteTitle the title of the favorite\n      * @return the ({@link KodiFavorite}) with the given title\n      */\n-    @Nullable\n-    public KodiFavorite getFavorite(final String favoriteTitle) {\n+    public @Nullable KodiFavorite getFavorite(final String favoriteTitle) {\n         for (KodiFavorite favorite : getFavorites()) {\n-            if (StringUtils.equalsIgnoreCase(favorite.getTitle(), favoriteTitle)) {\n+            String title = favorite.getTitle();\n+            if (title != null && title.equals(favoriteTitle)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "606a6380937ecab2ff37832e8914d86fa04e02da"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "270e004b1c12f4aa36ece5615b4953de45b84317", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-addons/commit/270e004b1c12f4aa36ece5615b4953de45b84317", "committedDate": "2020-05-21T20:24:18Z", "message": "Incorporated comments from review\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2OTExNDQ4", "url": "https://github.com/openhab/openhab-addons/pull/7719#pullrequestreview-416911448", "createdAt": "2020-05-22T13:31:37Z", "commit": {"oid": "270e004b1c12f4aa36ece5615b4953de45b84317"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzozMTozN1rOGZXKUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMzozODowOFrOGZXYZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0NzA1OQ==", "bodyText": "I would split of a method for this especially as it occurs twice", "url": "https://github.com/openhab/openhab-addons/pull/7719#discussion_r429247059", "createdAt": "2020-05-22T13:31:37Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.kodi/src/main/java/org/openhab/binding/kodi/internal/discovery/KodiUpnpDiscoveryParticipant.java", "diffHunk": "@@ -94,12 +94,11 @@ private void activateOrModifyService(ComponentContext componentContext) {\n     @Override\n     public @Nullable ThingUID getThingUID(RemoteDevice device) {\n         String manufacturer = device.getDetails().getManufacturerDetails().getManufacturer();\n-        if (StringUtils.containsIgnoreCase(manufacturer, MANUFACTURER)) {\n-            logger.debug(\"Manufacturer matched: search: {}, device value: {}.\", MANUFACTURER,\n-                    device.getDetails().getManufacturerDetails().getManufacturer());\n-            if (StringUtils.containsIgnoreCase(device.getType().getType(), UPNP_DEVICE_TYPE)) {\n-                logger.debug(\"Device type matched: search: {}, device value: {}.\", UPNP_DEVICE_TYPE,\n-                        device.getType().getType());\n+        if (manufacturer != null && manufacturer.toLowerCase().contains(MANUFACTURER.toLowerCase())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e004b1c12f4aa36ece5615b4953de45b84317"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0Nzc4OA==", "bodyText": "Looking at the annotations favoriteTitle seems to be non null, so inverting would help you to get rid of the null-check", "url": "https://github.com/openhab/openhab-addons/pull/7719#discussion_r429247788", "createdAt": "2020-05-22T13:32:58Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.kodi/src/main/java/org/openhab/binding/kodi/internal/protocol/KodiConnection.java", "diffHunk": "@@ -379,10 +378,10 @@ public synchronized void playlistRemove(int playlistID, int position) {\n      * @param favoriteTitle the title of the favorite\n      * @return the ({@link KodiFavorite}) with the given title\n      */\n-    @Nullable\n-    public KodiFavorite getFavorite(final String favoriteTitle) {\n+    public @Nullable KodiFavorite getFavorite(final String favoriteTitle) {\n         for (KodiFavorite favorite : getFavorites()) {\n-            if (StringUtils.equalsIgnoreCase(favorite.getTitle(), favoriteTitle)) {\n+            String title = favorite.getTitle();\n+            if (title != null && title.equals(favoriteTitle)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg3NjAxNQ=="}, "originalCommit": {"oid": "606a6380937ecab2ff37832e8914d86fa04e02da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI0ODQ3MQ==", "bodyText": "We only have to remove a single one so maybe we should not inline the complete implementation of stripEnd", "url": "https://github.com/openhab/openhab-addons/pull/7719#discussion_r429248471", "createdAt": "2020-05-22T13:34:14Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.kodi/src/main/java/org/openhab/binding/kodi/internal/protocol/KodiConnection.java", "diffHunk": "@@ -862,14 +861,25 @@ private JsonArray getJsonArray(String[] values) {\n             // we have to strip ending \"/\" here because Kodi returns a not valid path and filename\n             // \"fanart\":\"image://http%3a%2f%2fthetvdb.com%2fbanners%2ffanart%2foriginal%2f263365-31.jpg/\"\n             // \"thumbnail\":\"image://http%3a%2f%2fthetvdb.com%2fbanners%2fepisodes%2f263365%2f5640869.jpg/\"\n-            String encodedURL = URLEncoder.encode(StringUtils.stripEnd(url, \"/\"), StandardCharsets.UTF_8.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e004b1c12f4aa36ece5615b4953de45b84317"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTI1MDY2MQ==", "bodyText": "What about leaving out the generic part and using JDK methods:\n    private String stripEnd(String str, String suffix) {\n        if (str.endsWith(suffix)){\n            return str.substring(0, suffix.length);\n        } else {\n            return str;\n        }", "url": "https://github.com/openhab/openhab-addons/pull/7719#discussion_r429250661", "createdAt": "2020-05-22T13:38:08Z", "author": {"login": "martinvw"}, "path": "bundles/org.openhab.binding.kodi/src/main/java/org/openhab/binding/kodi/internal/protocol/KodiConnection.java", "diffHunk": "@@ -862,14 +861,25 @@ private JsonArray getJsonArray(String[] values) {\n             // we have to strip ending \"/\" here because Kodi returns a not valid path and filename\n             // \"fanart\":\"image://http%3a%2f%2fthetvdb.com%2fbanners%2ffanart%2foriginal%2f263365-31.jpg/\"\n             // \"thumbnail\":\"image://http%3a%2f%2fthetvdb.com%2fbanners%2fepisodes%2f263365%2f5640869.jpg/\"\n-            String encodedURL = URLEncoder.encode(StringUtils.stripEnd(url, \"/\"), StandardCharsets.UTF_8.name());\n+            String encodedURL = URLEncoder.encode(stripEnd(url, '/'), StandardCharsets.UTF_8.name());\n             return imageUri.resolve(encodedURL).toString();\n         } catch (UnsupportedEncodingException e) {\n             logger.debug(\"exception during encoding {}\", url, e);\n             return null;\n         }\n     }\n \n+    private String stripEnd(String str, char suffix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "270e004b1c12f4aa36ece5615b4953de45b84317"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a84298f448c1e51b3312bdaaf02acc80880902b5", "author": {"user": {"login": "cweitkamp", "name": "Christoph Weitkamp"}}, "url": "https://github.com/openhab/openhab-addons/commit/a84298f448c1e51b3312bdaaf02acc80880902b5", "committedDate": "2020-05-23T18:13:23Z", "message": "Incorporated comments from review\n\nSigned-off-by: Christoph Weitkamp <github@christophweitkamp.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzAyODcw", "url": "https://github.com/openhab/openhab-addons/pull/7719#pullrequestreview-417302870", "createdAt": "2020-05-23T19:28:50Z", "commit": {"oid": "a84298f448c1e51b3312bdaaf02acc80880902b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 636, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}