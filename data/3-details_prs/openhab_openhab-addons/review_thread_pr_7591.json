{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzIwMTM1", "number": 7591, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoxODoxOVrOD7Y7bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoxODoxOVrOD7Y7bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjAxMDA0OnYy", "diffSide": "RIGHT", "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinBaseHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoxODoxOVrOGTr0mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjo0OToxNVrOGUE7mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NDEwNA==", "bodyText": "Instead of catching here, this should be caught around the Enum.valueOf call that is throwing this.", "url": "https://github.com/openhab/openhab-addons/pull/7591#discussion_r423294104", "createdAt": "2020-05-11T20:18:19Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinBaseHandler.java", "diffHunk": "@@ -131,6 +132,8 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             }\n             logger.debug(\"Received command ({}) of wrong type for thing '{}' on channel {}\", command,\n                     thing.getUID().getAsString(), channelUID.getId());\n+        } catch (IllegalArgumentException ex) {\n+            logger.warn(\"Illegal argument for channel {}: {}. {}\", channelUID.getId(), command.toString(), ex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69cda05d7b2e4576fb9658ef66bcb4cb6317ab8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMyMDc0MQ==", "bodyText": "Catching it around Enum.valueOf would duplicate the same code across 5 different instances at the moment, and possible future additions. In my opinion that is not an elegant/clean approach. Yes, catching it here could potentially catch IllegalArgumentException thrown by things other than enum.ValueOf although I can't think of what at the moment, and that's why I included ex.getMessage() in the logging for clarifications.\nIs there any specific reasons that it should be caught around the enum.valueOf, and causing code duplication?", "url": "https://github.com/openhab/openhab-addons/pull/7591#discussion_r423320741", "createdAt": "2020-05-11T21:08:23Z", "author": {"login": "jimtng"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinBaseHandler.java", "diffHunk": "@@ -131,6 +132,8 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             }\n             logger.debug(\"Received command ({}) of wrong type for thing '{}' on channel {}\", command,\n                     thing.getUID().getAsString(), channelUID.getId());\n+        } catch (IllegalArgumentException ex) {\n+            logger.warn(\"Illegal argument for channel {}: {}. {}\", channelUID.getId(), command.toString(), ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NDEwNA=="}, "originalCommit": {"oid": "b69cda05d7b2e4576fb9658ef66bcb4cb6317ab8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM1ODQ0Mg==", "bodyText": "While I do agree that catching IllegalArgumentException is a elegant/clean approach to solve this problem I still think that it isn't the correct approach. Catching IllegalArgumentException here simply casts too wide of a net and from a code readability/maintainability standpoint it isn't apparent at all what would throw such an exception at this point in the code or if the way it is handled is even correct.\nDon't get me wrong, I do think you've implemented the correct error handling at the moment but there may be a point in the future where that is not the case.\nFor readability/maintainability you should catch the IllegalArgumentException as soon as possible so that it is easy to identify from the code what would throw it and why it would be thrown. Now if it important that a malformed enum exception gets propagated all the way to the top like this, feel free to create your own type of exception to represent this and throw that instead. IllegalArgumentException is too broad to be allowed to be propagated beyond the caller of the method that throws it without the exception itself becoming essentially unhandleable.\nIf you want to reduce possible duplicate code you can make your own version of the valueOf that takes an Enum as an argument and use that instead.", "url": "https://github.com/openhab/openhab-addons/pull/7591#discussion_r423358442", "createdAt": "2020-05-11T22:34:33Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinBaseHandler.java", "diffHunk": "@@ -131,6 +132,8 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             }\n             logger.debug(\"Received command ({}) of wrong type for thing '{}' on channel {}\", command,\n                     thing.getUID().getAsString(), channelUID.getId());\n+        } catch (IllegalArgumentException ex) {\n+            logger.warn(\"Illegal argument for channel {}: {}. {}\", channelUID.getId(), command.toString(), ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NDEwNA=="}, "originalCommit": {"oid": "b69cda05d7b2e4576fb9658ef66bcb4cb6317ab8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwNTQ5Ng==", "bodyText": "Point taken. I have moved the exception handling.", "url": "https://github.com/openhab/openhab-addons/pull/7591#discussion_r423705496", "createdAt": "2020-05-12T12:49:15Z", "author": {"login": "jimtng"}, "path": "bundles/org.openhab.binding.daikin/src/main/java/org/openhab/binding/daikin/internal/handler/DaikinBaseHandler.java", "diffHunk": "@@ -131,6 +132,8 @@ public void handleCommand(ChannelUID channelUID, Command command) {\n             }\n             logger.debug(\"Received command ({}) of wrong type for thing '{}' on channel {}\", command,\n                     thing.getUID().getAsString(), channelUID.getId());\n+        } catch (IllegalArgumentException ex) {\n+            logger.warn(\"Illegal argument for channel {}: {}. {}\", channelUID.getId(), command.toString(), ex.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NDEwNA=="}, "originalCommit": {"oid": "b69cda05d7b2e4576fb9658ef66bcb4cb6317ab8"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 206, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}