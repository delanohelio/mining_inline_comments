{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxODQ2NTY2", "number": 7201, "title": "[neohub] fix blocking bug on socket read; improved error handling & logging", "bodyText": "Bug fix and cosmetic improvements:\n\nFix blocking bug on socket read; a) using socket read timeout, and b) allowing socket calls in parallel\nImproved error handling\nImproved logger messages\n\nSigned-off-by: Andrew Fiddian-Green software@whitebear.ch", "createdAt": "2020-03-21T11:20:36Z", "url": "https://github.com/openhab/openhab-addons/pull/7201", "merged": true, "mergeCommit": {"oid": "1ea7e7a9a0b29315325a82e8930dc8084f27e807"}, "closed": true, "closedAt": "2020-03-25T14:26:31Z", "author": {"login": "andrewfg"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPzJzqgH2gAyMzkxODQ2NTY2OjFiYzFkNjY5MTc1YWMyZGUyNmYyOTdjODRjNjk3MzA5YTNlYzY0OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRIRIkgFqTM4MTE5MzI0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1bc1d669175ac2de26f297c84c697309a3ec6497", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/1bc1d669175ac2de26f297c84c697309a3ec6497", "committedDate": "2020-03-21T11:10:49Z", "message": "[neohub] prevent socket read from blocking; improved error handling and reporting\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTUwNjQy", "url": "https://github.com/openhab/openhab-addons/pull/7201#pullrequestreview-378950642", "createdAt": "2020-03-21T20:47:34Z", "commit": {"oid": "1bc1d669175ac2de26f297c84c697309a3ec6497"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMDo0NzozNVrOF5rnYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMDo0NzozNVrOF5rnYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAyNzc0Nw==", "bodyText": "Private?", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396027747", "createdAt": "2020-03-21T20:47:35Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubBindingConstants.java", "diffHunk": "@@ -116,5 +116,13 @@\n      */\n     public static final String VAL_OFF = \"Off\";\n     public static final String VAL_HEATING = \"Heating\";\n+    \n+    /*\n+     * logger message strings\n+     */\n+    private static final String PLEASE_REPORT_BUG = \"Unexpected situation - please report a bug: \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bc1d669175ac2de26f297c84c697309a3ec6497"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1651869cc96c39829d3c1db8336f071f63da32a", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/a1651869cc96c39829d3c1db8336f071f63da32a", "committedDate": "2020-03-22T11:20:43Z", "message": "[neohub] fixed typo; responded to reviewer input\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d55d0aca36fa04cbb6343ee092f67f97737de6f4", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/d55d0aca36fa04cbb6343ee092f67f97737de6f4", "committedDate": "2020-03-22T11:21:22Z", "message": "[neohub] fixed typo\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/6595713ee03edb9c5acbef99dbe7d57596f4353b", "committedDate": "2020-03-22T11:27:15Z", "message": "[neohub] socket.sendMessage() is no longer synchronized, so we must synchronize access to cachedInfoResponse\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTE5MzY2", "url": "https://github.com/openhab/openhab-addons/pull/7201#pullrequestreview-379519366", "createdAt": "2020-03-23T15:06:14Z", "commit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTowNjoxNFrOF6Js6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNToxMToxMVrOF6J7qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMDY4MQ==", "bodyText": "Synchronization serves no purpose here since assigning a variable is an atomic operation. Please remove the synchronized block. If you really want to you can make cachedInfoResponse volatile.", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396520681", "createdAt": "2020-03-23T15:06:14Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -179,25 +179,64 @@ public synchronized NeoHubReturnResult toNeoHubSendChannelValue(String commandSt\n      * \n      */\n     protected NeoHubInfoResponse fromNeoHubFetchPollingResponse() {\n-        if (socket == null || config == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE);\n+        if (socket == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+            logger.warn(MSG_HUB_COMM);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMDgxMQ==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396520811", "createdAt": "2020-03-23T15:06:26Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -179,25 +179,64 @@ public synchronized NeoHubReturnResult toNeoHubSendChannelValue(String commandSt\n      * \n      */\n     protected NeoHubInfoResponse fromNeoHubFetchPollingResponse() {\n-        if (socket == null || config == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE);\n+        if (socket == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+            logger.warn(MSG_HUB_COMM);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n+            return null;\n+        }\n+\n+        if (config == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR);\n+            logger.warn(MSG_HUB_CONFIG);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMDg3Mw==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396520873", "createdAt": "2020-03-23T15:06:32Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -179,25 +179,64 @@ public synchronized NeoHubReturnResult toNeoHubSendChannelValue(String commandSt\n      * \n      */\n     protected NeoHubInfoResponse fromNeoHubFetchPollingResponse() {\n-        if (socket == null || config == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE);\n+        if (socket == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+            logger.warn(MSG_HUB_COMM);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n+            return null;\n+        }\n+\n+        if (config == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR);\n+            logger.warn(MSG_HUB_CONFIG);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n             return null;\n         }\n \n         try {\n             @Nullable\n             String response = socket.sendMessage(CMD_CODE_INFO);\n+            \n+            NeoHubInfoResponse newInfoResponse = NeoHubInfoResponse.createInfoResponse(response);\n+\n+            if (newInfoResponse == null) {\n+                logger.warn(MSG_FMT_POLL_ERR, \"failed to create InfoResponse\");\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+                synchronized (this) {\n+                    cachedInfoResponse = null;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMTQ2Mg==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396521462", "createdAt": "2020-03-23T15:07:22Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -179,25 +179,64 @@ public synchronized NeoHubReturnResult toNeoHubSendChannelValue(String commandSt\n      * \n      */\n     protected NeoHubInfoResponse fromNeoHubFetchPollingResponse() {\n-        if (socket == null || config == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE);\n+        if (socket == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+            logger.warn(MSG_HUB_COMM);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n+            return null;\n+        }\n+\n+        if (config == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR);\n+            logger.warn(MSG_HUB_CONFIG);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n             return null;\n         }\n \n         try {\n             @Nullable\n             String response = socket.sendMessage(CMD_CODE_INFO);\n+            \n+            NeoHubInfoResponse newInfoResponse = NeoHubInfoResponse.createInfoResponse(response);\n+\n+            if (newInfoResponse == null) {\n+                logger.warn(MSG_FMT_POLL_ERR, \"failed to create InfoResponse\");\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+                synchronized (this) {\n+                    cachedInfoResponse = null;\n+                }\n+                return null;\n+            }\n \n-            lastInfoResponse = NeoHubInfoResponse.createInfoResponse(response);\n+            if (newInfoResponse.getDevices() == null) {\n+                logger.warn(MSG_FMT_POLL_ERR, \"no devices found\");\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+                synchronized (this) {\n+                    cachedInfoResponse = null;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMTU5OQ==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396521599", "createdAt": "2020-03-23T15:07:33Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -179,25 +179,64 @@ public synchronized NeoHubReturnResult toNeoHubSendChannelValue(String commandSt\n      * \n      */\n     protected NeoHubInfoResponse fromNeoHubFetchPollingResponse() {\n-        if (socket == null || config == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE);\n+        if (socket == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+            logger.warn(MSG_HUB_COMM);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n+            return null;\n+        }\n+\n+        if (config == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR);\n+            logger.warn(MSG_HUB_CONFIG);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n             return null;\n         }\n \n         try {\n             @Nullable\n             String response = socket.sendMessage(CMD_CODE_INFO);\n+            \n+            NeoHubInfoResponse newInfoResponse = NeoHubInfoResponse.createInfoResponse(response);\n+\n+            if (newInfoResponse == null) {\n+                logger.warn(MSG_FMT_POLL_ERR, \"failed to create InfoResponse\");\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+                synchronized (this) {\n+                    cachedInfoResponse = null;\n+                }\n+                return null;\n+            }\n \n-            lastInfoResponse = NeoHubInfoResponse.createInfoResponse(response);\n+            if (newInfoResponse.getDevices() == null) {\n+                logger.warn(MSG_FMT_POLL_ERR, \"no devices found\");\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+                synchronized (this) {\n+                    cachedInfoResponse = null;\n+                }\n+                return null;\n+            }\n+\n+            synchronized (this) {\n+                cachedInfoResponse = newInfoResponse; \n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMTY4Ng==", "bodyText": "see above", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396521686", "createdAt": "2020-03-23T15:07:40Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -179,25 +179,64 @@ public synchronized NeoHubReturnResult toNeoHubSendChannelValue(String commandSt\n      * \n      */\n     protected NeoHubInfoResponse fromNeoHubFetchPollingResponse() {\n-        if (socket == null || config == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE);\n+        if (socket == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+            logger.warn(MSG_HUB_COMM);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n+            return null;\n+        }\n+\n+        if (config == null) {\n+            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.CONFIGURATION_ERROR);\n+            logger.warn(MSG_HUB_CONFIG);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }\n             return null;\n         }\n \n         try {\n             @Nullable\n             String response = socket.sendMessage(CMD_CODE_INFO);\n+            \n+            NeoHubInfoResponse newInfoResponse = NeoHubInfoResponse.createInfoResponse(response);\n+\n+            if (newInfoResponse == null) {\n+                logger.warn(MSG_FMT_POLL_ERR, \"failed to create InfoResponse\");\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+                synchronized (this) {\n+                    cachedInfoResponse = null;\n+                }\n+                return null;\n+            }\n \n-            lastInfoResponse = NeoHubInfoResponse.createInfoResponse(response);\n+            if (newInfoResponse.getDevices() == null) {\n+                logger.warn(MSG_FMT_POLL_ERR, \"no devices found\");\n+                updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+                synchronized (this) {\n+                    cachedInfoResponse = null;\n+                }\n+                return null;\n+            }\n+\n+            synchronized (this) {\n+                cachedInfoResponse = newInfoResponse; \n+            }\n \n             if (getThing().getStatus() != ThingStatus.ONLINE) {\n                 updateStatus(ThingStatus.ONLINE, ThingStatusDetail.NONE);\n             }\n \n-            return lastInfoResponse;\n+            return newInfoResponse;\n+\n         } catch (Exception e) {\n-            logger.warn(\"set value error \\\"{}\\\"\", e.getMessage());\n+            logger.warn(MSG_FMT_POLL_ERR, e.getMessage());\n             updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.COMMUNICATION_ERROR);\n+            synchronized (this) {\n+                cachedInfoResponse = null;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMzAxMw==", "bodyText": "Synchronization isn't provided the thread safety here, instead it is the fact you are assigning cachedInfoResponse to a local variable that is giving you the thread safety. So please remove the synchronized block.", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396523013", "createdAt": "2020-03-23T15:09:24Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -209,15 +248,20 @@ protected NeoHubInfoResponse fromNeoHubFetchPollingResponse() {\n      */\n     private synchronized void lazyPollingSchedulerExecute() {\n         fromNeoHubFetchPollingResponse();\n+        \n+        NeoHubInfoResponse myInfoResponse; \n+        synchronized (this) {\n+            myInfoResponse = cachedInfoResponse;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyNDIxMA==", "bodyText": "What you should do here instead is assign cachedInfoResponse to a local variable THEN null check the variable. These two synchronized blocks aren't doing any good here.", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396524210", "createdAt": "2020-03-23T15:10:54Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -244,10 +288,18 @@ private void fastPollingSchedulerExecute() {\n      * \n      */\n     public boolean isConfigured(String deviceName) {\n-        if (lastInfoResponse == null) {\n+        boolean noInfoResponse;\n+        synchronized (this) {\n+            noInfoResponse = cachedInfoResponse == null;\n+        }\n+        if (noInfoResponse) {\n             fromNeoHubFetchPollingResponse();\n         }\n-        return lastInfoResponse != null && lastInfoResponse.getDeviceInfo(deviceName) != null;\n+        NeoHubInfoResponse myInfoResponse;\n+        synchronized (this) {\n+            myInfoResponse = cachedInfoResponse;\n+        }\n+        return myInfoResponse != null && myInfoResponse.getDeviceInfo(deviceName) != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyNDQ1OA==", "bodyText": "see other comment", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r396524458", "createdAt": "2020-03-23T15:11:11Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -258,7 +310,12 @@ public boolean isConfigured(String deviceName) {\n      */\n     public boolean isOnline(String deviceName) {\n         DeviceInfo deviceInfo;\n-        return isConfigured(deviceName) && (deviceInfo = lastInfoResponse.getDeviceInfo(deviceName)) != null\n+        NeoHubInfoResponse myInfoResponse; \n+        synchronized (this) {\n+            myInfoResponse = cachedInfoResponse;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6595713ee03edb9c5acbef99dbe7d57596f4353b"}, "originalPosition": 132}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2fed41b4b3b6c4684fa6c009a0f5766052544b7", "author": {"user": {"login": "andrewfg", "name": "Andrew Fiddian-Green"}}, "url": "https://github.com/openhab/openhab-addons/commit/f2fed41b4b3b6c4684fa6c009a0f5766052544b7", "committedDate": "2020-03-24T14:56:32Z", "message": "[neohub] eliminated dependency on having a cachedInfoResponse\n\nSigned-off-by: Andrew Fiddian-Green <software@whitebear.ch>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzQ3MjAz", "url": "https://github.com/openhab/openhab-addons/pull/7201#pullrequestreview-380747203", "createdAt": "2020-03-24T22:39:46Z", "commit": {"oid": "f2fed41b4b3b6c4684fa6c009a0f5766052544b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjozOTo0NlrOF7FwWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjozOTo0NlrOF7FwWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNDYwMg==", "bodyText": "why are you removing this updateStatus?", "url": "https://github.com/openhab/openhab-addons/pull/7201#discussion_r397504602", "createdAt": "2020-03-24T22:39:46Z", "author": {"login": "cpmeister"}, "path": "bundles/org.openhab.binding.neohub/src/main/java/org/openhab/binding/neohub/internal/NeoHubHandler.java", "diffHunk": "@@ -180,23 +176,36 @@ public synchronized NeoHubReturnResult toNeoHubSendChannelValue(String commandSt\n      */\n     protected NeoHubInfoResponse fromNeoHubFetchPollingResponse() {\n         if (socket == null || config == null) {\n-            updateStatus(ThingStatus.OFFLINE, ThingStatusDetail.NONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2fed41b4b3b6c4684fa6c009a0f5766052544b7"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMTkzMjQ2", "url": "https://github.com/openhab/openhab-addons/pull/7201#pullrequestreview-381193246", "createdAt": "2020-03-25T14:20:45Z", "commit": {"oid": "f2fed41b4b3b6c4684fa6c009a0f5766052544b7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1232, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}