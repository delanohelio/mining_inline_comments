{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MjY2NDYy", "number": 913, "title": "Add support for DPS for PnP samples", "bodyText": "TBD:\nChange location of samples", "createdAt": "2020-09-11T16:55:51Z", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913", "merged": true, "mergeCommit": {"oid": "7a12b5ef34d4e26956c2f400a7599daff7485c22"}, "closed": true, "closedAt": "2020-09-17T00:44:43Z", "author": {"login": "bikamani"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHqcytAH2gAyNDg1MjY2NDYyOmM0OTljNjg1ZjczNzZjOTA1NThjYTg0YzM1MDE2YTdjMDA4NGQ0NWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJlsJuAH2gAyNDg1MjY2NDYyOmI1NmFjZTAyZjU5NTk5NDM3MWFhZjcyMjQ2NDlhNGQ0MDdhNDUyMjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c499c685f7376c90558ca84c35016a7c0084d45e", "author": {"user": {"login": "bikamani", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/c499c685f7376c90558ca84c35016a7c0084d45e", "committedDate": "2020-09-11T00:42:10Z", "message": "provisioning samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2d3b223db3066975ced6307c33ab870366baa60", "author": {"user": {"login": "bikamani", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/c2d3b223db3066975ced6307c33ab870366baa60", "committedDate": "2020-09-11T16:53:07Z", "message": "add options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "074253ccb581947a5e9ffb364fad882f7f62b743", "author": {"user": {"login": "bikamani", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/074253ccb581947a5e9ffb364fad882f7f62b743", "committedDate": "2020-09-12T00:57:17Z", "message": "Merge branch 'master' into bikamani/dpsSamples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDc1MDA5", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913#pullrequestreview-489075009", "createdAt": "2020-09-15T21:07:33Z", "commit": {"oid": "074253ccb581947a5e9ffb364fad882f7f62b743"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTowNzozM1rOHSUliw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTowNzozM1rOHSUliw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3MzcwNw==", "bodyText": "No need to sleep 10 seconds each time. 1 second should be fine. Also rename this to POLLING_PERIOD or something similar", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913#discussion_r488973707", "createdAt": "2020-09-15T21:07:33Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java", "diffHunk": "@@ -98,6 +168,60 @@ public void run() {\n         }).start();\n     }\n \n+    private static void initializeAndProvisionDevice() throws ProvisioningDeviceClientException, IOException, URISyntaxException, InterruptedException {\n+        SecurityProviderSymmetricKey securityClientSymmetricKey = new SecurityProviderSymmetricKey(deviceSymmetricKey.getBytes(), registrationId);\n+        ProvisioningDeviceClient provisioningDeviceClient = null;\n+        ProvisioningStatus provisioningStatus = new ProvisioningStatus();\n+\n+        provisioningDeviceClient = ProvisioningDeviceClient.create(globalEndpoint, scopeId, provisioningProtocol, securityClientSymmetricKey);\n+\n+        AdditionalData additionalData = new AdditionalData();\n+        additionalData.setProvisioningPayload(String.format(\"{\\\"modelId\\\": \\\"%s\\\"}\", MODEL_ID));\n+\n+        provisioningDeviceClient.registerDevice(new ProvisioningDeviceClientRegistrationCallbackImpl(), provisioningStatus, additionalData);\n+\n+        while (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() != ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ASSIGNED)\n+        {\n+            if (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ERROR ||\n+                    provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_DISABLED ||\n+                    provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_FAILED)\n+            {\n+                provisioningStatus.exception.printStackTrace();\n+                System.out.println(\"Registration error, bailing out\");\n+                break;\n+            }\n+            System.out.println(\"Waiting for Provisioning Service to register\");\n+            Thread.sleep(MAX_TIME_TO_WAIT_FOR_REGISTRATION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074253ccb581947a5e9ffb364fad882f7f62b743"}, "originalPosition": 143}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDc3MTUy", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913#pullrequestreview-489077152", "createdAt": "2020-09-15T21:08:42Z", "commit": {"oid": "074253ccb581947a5e9ffb364fad882f7f62b743"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTowODo0MlrOHSUnpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTowODo0MlrOHSUnpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk3NDI0Ng==", "bodyText": "Add a log statement to the effect of \"Opening device client...\"", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913#discussion_r488974246", "createdAt": "2020-09-15T21:08:42Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-samples/pnp-device-sample/thermostat-device-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/device/Thermostat.java", "diffHunk": "@@ -98,6 +168,60 @@ public void run() {\n         }).start();\n     }\n \n+    private static void initializeAndProvisionDevice() throws ProvisioningDeviceClientException, IOException, URISyntaxException, InterruptedException {\n+        SecurityProviderSymmetricKey securityClientSymmetricKey = new SecurityProviderSymmetricKey(deviceSymmetricKey.getBytes(), registrationId);\n+        ProvisioningDeviceClient provisioningDeviceClient = null;\n+        ProvisioningStatus provisioningStatus = new ProvisioningStatus();\n+\n+        provisioningDeviceClient = ProvisioningDeviceClient.create(globalEndpoint, scopeId, provisioningProtocol, securityClientSymmetricKey);\n+\n+        AdditionalData additionalData = new AdditionalData();\n+        additionalData.setProvisioningPayload(String.format(\"{\\\"modelId\\\": \\\"%s\\\"}\", MODEL_ID));\n+\n+        provisioningDeviceClient.registerDevice(new ProvisioningDeviceClientRegistrationCallbackImpl(), provisioningStatus, additionalData);\n+\n+        while (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() != ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ASSIGNED)\n+        {\n+            if (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ERROR ||\n+                    provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_DISABLED ||\n+                    provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_FAILED)\n+            {\n+                provisioningStatus.exception.printStackTrace();\n+                System.out.println(\"Registration error, bailing out\");\n+                break;\n+            }\n+            System.out.println(\"Waiting for Provisioning Service to register\");\n+            Thread.sleep(MAX_TIME_TO_WAIT_FOR_REGISTRATION);\n+        }\n+\n+        ClientOptions options = new ClientOptions();\n+        options.setModelId(MODEL_ID);\n+\n+        if (provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getProvisioningDeviceClientStatus() == ProvisioningDeviceClientStatus.PROVISIONING_DEVICE_STATUS_ASSIGNED) {\n+            System.out.println(\"IotHUb Uri : \" + provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getIothubUri());\n+            System.out.println(\"Device ID : \" + provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getDeviceId());\n+\n+            String iotHubUri = provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getIothubUri();\n+            String deviceId = provisioningStatus.provisioningDeviceClientRegistrationInfoClient.getDeviceId();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "074253ccb581947a5e9ffb364fad882f7f62b743"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDgzODAw", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913#pullrequestreview-489083800", "createdAt": "2020-09-15T21:12:15Z", "commit": {"oid": "074253ccb581947a5e9ffb364fad882f7f62b743"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d9d6a20f5102c45c6a3579f9b4e28461b8fe416", "author": {"user": {"login": "bikamani", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0d9d6a20f5102c45c6a3579f9b4e28461b8fe416", "committedDate": "2020-09-16T17:01:41Z", "message": "Merge branch 'master' into bikamani/dpsSamples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMDU4NTgw", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/913#pullrequestreview-490058580", "createdAt": "2020-09-16T22:19:09Z", "commit": {"oid": "0d9d6a20f5102c45c6a3579f9b4e28461b8fe416"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "865790266b8d8d1a102f03903ef09c513de7211b", "author": {"user": {"login": "bikamani", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/865790266b8d8d1a102f03903ef09c513de7211b", "committedDate": "2020-09-17T00:16:27Z", "message": "solve formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b56ace02f595994371aaf7224649a4d407a45223", "author": {"user": {"login": "bikamani", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/b56ace02f595994371aaf7224649a4d407a45223", "committedDate": "2020-09-17T00:17:16Z", "message": "Merge branch 'bikamani/dpsSamples' of https://github.com/Azure/azure-iot-sdk-java into bikamani/dpsSamples"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1550, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}