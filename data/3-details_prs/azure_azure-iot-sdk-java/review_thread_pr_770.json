{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjAzMTI0", "number": 770, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjo1Nzo1NFrOD7vfrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzozODo1NlrOD73Iiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTcwNzM1OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjo1Nzo1NFrOGUQLwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODoyNTowNVrOGUTdsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4OTg1OA==", "bodyText": "Does this resend the device method subscription as well?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423889858", "createdAt": "2020-05-12T16:57:54Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -235,6 +237,10 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     closeConnectionWithException(\"Timed out waiting for worker links to open\", true);\n                 }\n+\n+                // In case this is a recovery from a prematurely closed connection, we will re-queue subscribe messages that were sent within this connection.\n+                requeueSubscribeMessages();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b99790a1faed843c1808f56218e0f9361bf1c1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg5MTU2Nw==", "bodyText": "no, only Device twin at this point.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423891567", "createdAt": "2020-05-12T17:00:27Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -235,6 +237,10 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     closeConnectionWithException(\"Timed out waiting for worker links to open\", true);\n                 }\n+\n+                // In case this is a recovery from a prematurely closed connection, we will re-queue subscribe messages that were sent within this connection.\n+                requeueSubscribeMessages();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4OTg1OA=="}, "originalCommit": {"oid": "29b99790a1faed843c1808f56218e0f9361bf1c1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg5MjI0Nw==", "bodyText": "from what I understand device methods do not require a message to be sent to subscribe to properties, they just need the link to be opened. but if in the future they require messages to be sent, we will ad them to the subscribe list and send those along with twin subscriptions", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423892247", "createdAt": "2020-05-12T17:01:27Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -235,6 +237,10 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     closeConnectionWithException(\"Timed out waiting for worker links to open\", true);\n                 }\n+\n+                // In case this is a recovery from a prematurely closed connection, we will re-queue subscribe messages that were sent within this connection.\n+                requeueSubscribeMessages();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4OTg1OA=="}, "originalCommit": {"oid": "29b99790a1faed843c1808f56218e0f9361bf1c1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MzYwMg==", "bodyText": "Right, that's true!", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423943602", "createdAt": "2020-05-12T18:25:05Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -235,6 +237,10 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     closeConnectionWithException(\"Timed out waiting for worker links to open\", true);\n                 }\n+\n+                // In case this is a recovery from a prematurely closed connection, we will re-queue subscribe messages that were sent within this connection.\n+                requeueSubscribeMessages();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg4OTg1OA=="}, "originalCommit": {"oid": "29b99790a1faed843c1808f56218e0f9361bf1c1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDEwNzQwOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo0NjozNVrOGUUOVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxODo0Njo1NlrOGUUPIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NjA1NQ==", "bodyText": "Is there any reason why we need to save the message, instead of just creating a new one each time? I'm worried about these two queues getting out of sync. I'd feel safer if we always added a new subscribe message to the messagesToSend queue instead of relying on subscribeMessages being in the right state", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423956055", "createdAt": "2020-05-12T18:46:35Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -251,6 +257,12 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n         this.log.debug(\"AMQP connection opened successfully\");\n     }\n \n+    private void requeueSubscribeMessages()\n+    {\n+        messagesToSend.addAll(subscribeMessages);\n+        subscribeMessages.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb536b77f2f8fb3aa0791821d457829e2a6703d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NjI1Ng==", "bodyText": "This layer should know how to build the message, after all", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r423956256", "createdAt": "2020-05-12T18:46:56Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -251,6 +257,12 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n         this.log.debug(\"AMQP connection opened successfully\");\n     }\n \n+    private void requeueSubscribeMessages()\n+    {\n+        messagesToSend.addAll(subscribeMessages);\n+        subscribeMessages.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk1NjA1NQ=="}, "originalCommit": {"oid": "4eb536b77f2f8fb3aa0791821d457829e2a6703d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg3NzgyOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1OToxN1rOGUb2sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNDo1NVrOGUb-Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTA3Mg==", "bodyText": "Since this is a twin only concept, you don't need an abstract method for this", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081072", "createdAt": "2020-05-12T22:59:17Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java", "diffHunk": "@@ -427,6 +427,11 @@ protected boolean onLinkRemoteOpen(String linkName)\n      */\n     abstract protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throws TransportException;\n \n+    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTY4OA==", "bodyText": "amqpsDeviceOperationMap value is an AmqpDeviceOperation, so I think I need to have it in there right?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081688", "createdAt": "2020-05-12T23:00:58Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java", "diffHunk": "@@ -427,6 +427,11 @@ protected boolean onLinkRemoteOpen(String linkName)\n      */\n     abstract protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throws TransportException;\n \n+    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTA3Mg=="}, "originalCommit": {"oid": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Mjg3MQ==", "bodyText": "That map has a mix of classes that extend AmqpDeviceOperation. You can cast the twin one as a AmqpsDeviceTwin instance so that you can access the method that is twin specific", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424082871", "createdAt": "2020-05-12T23:04:37Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java", "diffHunk": "@@ -427,6 +427,11 @@ protected boolean onLinkRemoteOpen(String linkName)\n      */\n     abstract protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throws TransportException;\n \n+    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTA3Mg=="}, "originalCommit": {"oid": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Mjk2Mw==", "bodyText": "FINE ! I will cast it :)", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424082963", "createdAt": "2020-05-12T23:04:55Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java", "diffHunk": "@@ -427,6 +427,11 @@ protected boolean onLinkRemoteOpen(String linkName)\n      */\n     abstract protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throws TransportException;\n \n+    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTA3Mg=="}, "originalCommit": {"oid": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg3OTg1OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceTwin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowMDowNFrOGUb32g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowMjo1MFrOGUb7Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTM3MA==", "bodyText": "Nice, I like this method. Can you reference this method in the iotHubMessageToProtonMessage method in the same class since it uses this logic, too?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081370", "createdAt": "2020-05-12T23:00:04Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceTwin.java", "diffHunk": "@@ -191,6 +192,30 @@ protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throw\n         }\n     }\n \n+    @Override\n+    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MjI3MA==", "bodyText": "sure", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424082270", "createdAt": "2020-05-12T23:02:50Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceTwin.java", "diffHunk": "@@ -191,6 +192,30 @@ protected AmqpsConvertToProtonReturnValue convertToProton(Message message) throw\n         }\n     }\n \n+    @Override\n+    protected MessageImpl buildSubscribeToDesiredPropertiesProtonMessage()\n+    {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTM3MA=="}, "originalCommit": {"oid": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg4MDg0OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowMDozNlrOGUb4hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowMDozNlrOGUb4hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTU0MA==", "bodyText": "\"ctrl + shift + o\"  can cleanup unused imports", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081540", "createdAt": "2020-05-12T23:00:36Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -33,6 +33,7 @@\n import java.util.Queue;\n import java.util.UUID;\n import java.util.concurrent.*;\n+import java.util.ArrayList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg4MjY5OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowMTozMFrOGUb5sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowMTozMFrOGUb5sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MTg0MA==", "bodyText": "If you make the '''buildSubscribeToDesiredPropertiesProtonMessage''' method concrete only on the twin class, you can safely cast entry.getValue() as a AmqpsDeviceTwin class to access it here", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424081840", "createdAt": "2020-05-12T23:01:30Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "diffHunk": "@@ -337,6 +337,11 @@ boolean onLinkRemoteOpen(String linkName)\n             {\n                 if (entry.getValue().onLinkRemoteOpen(linkName))\n                 {\n+                    if (entry.getKey() == MessageType.DEVICE_TWIN)\n+                    {\n+                        sendMessage(entry.getValue().buildSubscribeToDesiredPropertiesProtonMessage(), entry.getKey(), deviceClientConfig.getDeviceId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "288ab6ae0ab574abbcbbb5307f4c357f3d5f914d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDk1ODgzOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzozODo1NlrOGUcoPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzozODo1NlrOGUcoPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5Mzc1OA==", "bodyText": "actually, you do need a check here that the opened link was a sender link. If you try to send this message when only the receiver link is open, an exception will get thrown. Plus you don't want to send this subscribe message once when the sender link opens, and again once the receiver link opens", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/770#discussion_r424093758", "createdAt": "2020-05-12T23:38:56Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "diffHunk": "@@ -337,6 +337,13 @@ boolean onLinkRemoteOpen(String linkName)\n             {\n                 if (entry.getValue().onLinkRemoteOpen(linkName))\n                 {\n+                    if (entry.getKey() == MessageType.DEVICE_TWIN)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0ed4b2adcdf6ef593c5408cd5a5f33ec90b2d7c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2778, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}