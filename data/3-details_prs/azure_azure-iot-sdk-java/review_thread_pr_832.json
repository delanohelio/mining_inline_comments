{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyODg4ODU3", "number": 832, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToxNjowNlrOEKoaWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoyODo1MVrOELx4lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTgzMzIxOnYy", "diffSide": "RIGHT", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToxNjowNlrOGryUiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMjowOTo1MlrOGr27zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjQwOQ==", "bodyText": "We set a short expiry time on these fault injection messages because they often fail to be acknowledged by the service before the connection is lost. With this expiry time, our retry logic wont send this message more than a few times. At the same time though, we risk them never being sent. That's why I added some retry logic to prevent that", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r448566409", "createdAt": "2020-07-01T19:16:06Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "diffHunk": "@@ -23,6 +23,11 @@\n  */\n public class IotHubServicesCommon\n {\n+    protected static final Integer RETRY_MILLISECONDS = 100;\n+    protected static final Integer SEND_TIMEOUT_MILLISECONDS = 60000;\n+\n+    public static final int ERROR_INJECTION_MESSAGE_TIMEOUT_MILLISECONDS = 200;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e9dedf779ddc6324d114857676b94345427ed3f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2ODQ4Mw==", "bodyText": "What would cause the service to drop the connection before ack'ing the receipt of this fault injection request? Afaik, service will drop the connection on the next message that they receive (after the FI request message). So this should mean that the FI request message would always be ack'ed.\nIn java, do we not wait until message 1 is ack'ed, before sending message 2? Is that because of the way the send message queue works?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r448568483", "createdAt": "2020-07-01T19:20:43Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "diffHunk": "@@ -23,6 +23,11 @@\n  */\n public class IotHubServicesCommon\n {\n+    protected static final Integer RETRY_MILLISECONDS = 100;\n+    protected static final Integer SEND_TIMEOUT_MILLISECONDS = 60000;\n+\n+    public static final int ERROR_INJECTION_MESSAGE_TIMEOUT_MILLISECONDS = 200;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjQwOQ=="}, "originalCommit": {"oid": "7e9dedf779ddc6324d114857676b94345427ed3f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyNDgzNw==", "bodyText": "Afaik, service will drop the connection on the next message that they receive (after the FI request message)\n\nThat hasn't been my experience. The Java tests don't even send another message until after the connection is dropped. From my experience, the service may or may not ack the fault injection message before dropping the connection.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r448624837", "createdAt": "2020-07-01T21:26:29Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "diffHunk": "@@ -23,6 +23,11 @@\n  */\n public class IotHubServicesCommon\n {\n+    protected static final Integer RETRY_MILLISECONDS = 100;\n+    protected static final Integer SEND_TIMEOUT_MILLISECONDS = 60000;\n+\n+    public static final int ERROR_INJECTION_MESSAGE_TIMEOUT_MILLISECONDS = 200;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjQwOQ=="}, "originalCommit": {"oid": "7e9dedf779ddc6324d114857676b94345427ed3f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY0MTk5OA==", "bodyText": "I'll spend some time investigating if we can rely on the service ack'ing these fault injection messages before merging this in", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r448641998", "createdAt": "2020-07-01T22:09:52Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "diffHunk": "@@ -23,6 +23,11 @@\n  */\n public class IotHubServicesCommon\n {\n+    protected static final Integer RETRY_MILLISECONDS = 100;\n+    protected static final Integer SEND_TIMEOUT_MILLISECONDS = 60000;\n+\n+    public static final int ERROR_INJECTION_MESSAGE_TIMEOUT_MILLISECONDS = 200;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2NjQwOQ=="}, "originalCommit": {"oid": "7e9dedf779ddc6324d114857676b94345427ed3f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTYyMjQ4OnYy", "diffSide": "LEFT", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/ErrorInjectionHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoyNDoyMVrOGsW6IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoyNDoyMVrOGsW6IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NTg1Ng==", "bodyText": "C# SDK uses 5 here, but the service doesn't appear to respect this value. Just in case though, I want to unify with the C# SDK", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r449165856", "createdAt": "2020-07-02T17:24:21Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/ErrorInjectionHelper.java", "diffHunk": "@@ -31,7 +31,7 @@\n     public static final String FaultCloseReason_Boom = \"Boom\";\n     public static final String FaultCloseReason_Bye = \"byebye\";\n \n-    public static final int DefaultDelayInSec = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1cc3dbe8fe85b08e01c41ec42e22466718c6a46"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzg3MDkyOnYy", "diffSide": "RIGHT", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzoyODo1MVrOGtgqLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzozNDoyN1rOGtg1yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NDE5MQ==", "bodyText": "Q - why do we need these changes here, and in sendErrorInjectionMessageAndWaitForResponse both?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r450374191", "createdAt": "2020-07-06T17:28:51Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "diffHunk": "@@ -55,12 +55,16 @@ public static void sendMessages(InternalClient client,\n \n             for (int i = 0; i < messagesToSend.size(); ++i)\n             {\n-                if (isErrorInjectionMessage(messagesToSend.get(i)))\n+                if ((protocol == IotHubClientProtocol.MQTT || protocol == IotHubClientProtocol.MQTT_WS) && isErrorInjectionMessage(messagesToSend.get(i)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bedb5a0f1dc4725aa7a6a83c2719b356d4c2a5a8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NzE2MQ==", "bodyText": "I don't think there is a good reason. There's some logic here that could certainly be centralized. I'll take that in a separate PR though", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/832#discussion_r450377161", "createdAt": "2020-07-06T17:34:27Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/helpers/IotHubServicesCommon.java", "diffHunk": "@@ -55,12 +55,16 @@ public static void sendMessages(InternalClient client,\n \n             for (int i = 0; i < messagesToSend.size(); ++i)\n             {\n-                if (isErrorInjectionMessage(messagesToSend.get(i)))\n+                if ((protocol == IotHubClientProtocol.MQTT || protocol == IotHubClientProtocol.MQTT_WS) && isErrorInjectionMessage(messagesToSend.get(i)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM3NDE5MQ=="}, "originalCommit": {"oid": "bedb5a0f1dc4725aa7a6a83c2719b356d4c2a5a8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2878, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}