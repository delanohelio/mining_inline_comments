{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NjcwMzg2", "number": 662, "title": "Refactor Device client and Deps amqp layers to add better error logging", "bodyText": "Created an Error Logging Base Handler class that all amqp connections will eventually extend from. It's purpose is to log whenever a link/session/connection is closed remotely (generally considered an error case) or when a transport error occurs.\nThe deps amqp layer is used only by provisioning device client currently, but this PR makes the device client use it, too. IoT Service client will use it soon when the v2 changes come.", "createdAt": "2020-01-06T19:05:21Z", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/662", "merged": true, "mergeCommit": {"oid": "bc51a917d66ec0f99f0bb48dc85dbcf25ff1b1ee"}, "closed": true, "closedAt": "2020-01-09T05:10:25Z", "author": {"login": "timtay-microsoft"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb24B9mAH2gAyMzU5NjcwMzg2OjIyYTE1ZmY4MTY0ZTRiOTRkYjAwNGIzYWJjMTUzZjhmMzcyZmRlMGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4e1_qgFqTM0MDIyOTkwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "22a15ff8164e4b94db004b3abc153f8f372fde0d", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/22a15ff8164e4b94db004b3abc153f8f372fde0d", "committedDate": "2020-01-04T00:43:40Z", "message": "refactor(deps): Add error logging base handler for amqp connections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "220f8ee6355f9d96229f874f0a4f281d26c9aa6d", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/220f8ee6355f9d96229f874f0a4f281d26c9aa6d", "committedDate": "2020-01-04T00:43:40Z", "message": "refactor(iot-dev): Extend error logging base handler for device client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjE0MTE2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/662#pullrequestreview-340214116", "createdAt": "2020-01-08T23:38:01Z", "commit": {"oid": "220f8ee6355f9d96229f874f0a4f281d26c9aa6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzozODowMlrOFbnJug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzozODowMlrOFbnJug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5NzMzOA==", "bodyText": "Why is this check required? It would be better to check that endpoints is not null.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/662#discussion_r364497338", "createdAt": "2020-01-08T23:38:02Z", "author": {"login": "abhipsaMisra"}, "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/transport/amqp/ProtonJExceptionParser.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) Microsoft. All rights reserved.\n+ *  Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+ */\n+\n+package com.microsoft.azure.sdk.iot.deps.transport.amqp;\n+\n+import lombok.Getter;\n+import org.apache.qpid.proton.amqp.transport.ErrorCondition;\n+import org.apache.qpid.proton.engine.Endpoint;\n+import org.apache.qpid.proton.engine.Event;\n+\n+@Getter\n+public class ProtonJExceptionParser\n+{\n+    private String error;\n+    private String errorDescription;\n+\n+    private static final String DEFAULT_ERROR_DESCRIPTION = \"NoErrorDescription\";\n+\n+    public ProtonJExceptionParser(Event event)\n+    {\n+        getTransportExceptionFromProtonEndpoints(event.getSender(), event.getReceiver(), event.getConnection(), event.getTransport(), event.getSession(), event.getLink());\n+    }\n+\n+    private ErrorCondition getErrorConditionFromEndpoint(Endpoint endpoint)\n+    {\n+        return endpoint.getCondition() != null && endpoint.getCondition().getCondition() != null ? endpoint.getCondition() : endpoint.getRemoteCondition();\n+    }\n+\n+    private void getTransportExceptionFromProtonEndpoints(Endpoint... endpoints)\n+    {\n+        for (Endpoint endpoint : endpoints)\n+        {\n+            if (endpoint == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "220f8ee6355f9d96229f874f0a4f281d26c9aa6d"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjI4Njg4", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/662#pullrequestreview-340228688", "createdAt": "2020-01-09T00:26:26Z", "commit": {"oid": "220f8ee6355f9d96229f874f0a4f281d26c9aa6d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDoyNjoyNlrOFbn49Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDoyNjoyNlrOFbn49Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUwOTQyOQ==", "bodyText": "The Endpoint spread is over the inputs we get from the constructor; makes sense.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/662#discussion_r364509429", "createdAt": "2020-01-09T00:26:26Z", "author": {"login": "abhipsaMisra"}, "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/transport/amqp/ProtonJExceptionParser.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *  Copyright (c) Microsoft. All rights reserved.\n+ *  Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+ */\n+\n+package com.microsoft.azure.sdk.iot.deps.transport.amqp;\n+\n+import lombok.Getter;\n+import org.apache.qpid.proton.amqp.transport.ErrorCondition;\n+import org.apache.qpid.proton.engine.Endpoint;\n+import org.apache.qpid.proton.engine.Event;\n+\n+@Getter\n+public class ProtonJExceptionParser\n+{\n+    private String error;\n+    private String errorDescription;\n+\n+    private static final String DEFAULT_ERROR_DESCRIPTION = \"NoErrorDescription\";\n+\n+    public ProtonJExceptionParser(Event event)\n+    {\n+        getTransportExceptionFromProtonEndpoints(event.getSender(), event.getReceiver(), event.getConnection(), event.getTransport(), event.getSession(), event.getLink());\n+    }\n+\n+    private ErrorCondition getErrorConditionFromEndpoint(Endpoint endpoint)\n+    {\n+        return endpoint.getCondition() != null && endpoint.getCondition().getCondition() != null ? endpoint.getCondition() : endpoint.getRemoteCondition();\n+    }\n+\n+    private void getTransportExceptionFromProtonEndpoints(Endpoint... endpoints)\n+    {\n+        for (Endpoint endpoint : endpoints)\n+        {\n+            if (endpoint == null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ5NzMzOA=="}, "originalCommit": {"oid": "220f8ee6355f9d96229f874f0a4f281d26c9aa6d"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjI5OTAx", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/662#pullrequestreview-340229901", "createdAt": "2020-01-09T00:30:48Z", "commit": {"oid": "22a15ff8164e4b94db004b3abc153f8f372fde0d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDozMDo0OFrOFbn87g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMDozMDo0OFrOFbn87g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDUxMDQ0Ng==", "bodyText": "Do we allow multiple sessions over a single connection? If yes, then it'll be useful to log the session identifier here as well (similar to link).", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/662#discussion_r364510446", "createdAt": "2020-01-09T00:30:48Z", "author": {"login": "abhipsaMisra"}, "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/transport/amqp/ErrorLoggingBaseHandler.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ *  Copyright (c) Microsoft. All rights reserved.\n+ *  Licensed under the MIT license. See LICENSE file in the project root for full license information.\n+ */\n+\n+package com.microsoft.azure.sdk.iot.deps.transport.amqp;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.qpid.proton.engine.BaseHandler;\n+import org.apache.qpid.proton.engine.Event;\n+\n+@Slf4j\n+public class ErrorLoggingBaseHandler extends BaseHandler\n+{\n+    protected ProtonJExceptionParser protonJExceptionParser;\n+\n+    @Override\n+    public void onLinkRemoteClose(Event event)\n+    {\n+        protonJExceptionParser = new ProtonJExceptionParser(event);\n+        if (protonJExceptionParser.getError() == null)\n+        {\n+            log.debug(\"Amqp link {} was closed remotely\", event.getLink().getName());\n+        }\n+        else\n+        {\n+            if (event.getLink() != null && event.getLink().getName() != null)\n+            {\n+                log.warn(\"Amqp link {} was closed remotely with exception {} with description {}\", event.getLink().getName(), protonJExceptionParser.getError(), protonJExceptionParser.getErrorDescription());\n+            }\n+            else\n+            {\n+                log.warn(\"Unknown amqp link was closed remotely with exception {} with description {}\", protonJExceptionParser.getError(), protonJExceptionParser.getErrorDescription());\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void onSessionRemoteClose(Event event)\n+    {\n+        protonJExceptionParser = new ProtonJExceptionParser(event);\n+        if (protonJExceptionParser.getError() == null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a15ff8164e4b94db004b3abc153f8f372fde0d"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1778, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}