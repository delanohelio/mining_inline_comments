{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MjU2MzAx", "number": 889, "reviewThreads": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMzozNzoyMFrOEWpWRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMToxNDo0NlrOEXzUuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTgxNTc1OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMzozNzoyMFrOG-AlkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwMzozNzoyMFrOG-AlkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzY3NDUxMw==", "bodyText": "This constructor is internal to the iot.device package.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r467674513", "createdAt": "2020-08-10T03:37:20Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -165,6 +175,30 @@ public Message()\n         initialize();\n     }\n \n+    /**\n+     * Internal constructor to initialize a bulk message instance.\n+     * @param messages List of nested messages\n+     */\n+    Message(Set<Message> messages)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ccff1d7ef88795b885423d508c4dd72de10310f"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI2MjEzOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjo1NjozM1rOG-XRFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo0NDozN1rOG-a4cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0NjEwMA==", "bodyText": "MQTT and AMQP messages will be sent individually - protocol library restriction?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468046100", "createdAt": "2020-08-10T16:56:33Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNTMyOA==", "bodyText": "yes, service does not support MQTT batch messages, and our current AMQP library (proton) doesn't have built in batch message capabilities so we have to implement our own. That will be done separately.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468105328", "createdAt": "2020-08-10T18:44:37Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0NjEwMA=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI4MzAwOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzowMjoyN1rOG-XeRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo0NToyN1rOG-a6XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0OTQ3OQ==", "bodyText": "The ordering of the messages needs to be preserved, so maybe we should use a List instead? Or add a comment that the customer should supply an ordered implementation of Set?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468049479", "createdAt": "2020-08-10T17:02:27Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MTcyMg==", "bodyText": "Does the ordering need to be preserved? I thought the whole point was that they were all delivered simultaneously?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468061722", "createdAt": "2020-08-10T17:25:05Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0OTQ3OQ=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NzQ0MQ==", "bodyText": "yes, they would be delivered simultaneously, but still as a batch containing the individual messages in some order -> if I add them as 1->2->3 into a batch; then on service send, once I receive a batch and iterate over it, the order should still be 1->2->3.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468067441", "createdAt": "2020-08-10T17:35:19Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0OTQ3OQ=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNTgyMQ==", "bodyText": "I will make a note of that in the comments.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468105821", "createdAt": "2020-08-10T18:45:27Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA0OTQ3OQ=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI4ODU0OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzowNDowN1rOG-XhnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMTowMjo1M1rOG-kx4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDMzMg==", "bodyText": "Does this have to be a set? What about a more generic type like Collection or Iterable?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468050332", "createdAt": "2020-08-10T17:04:07Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNjYxNw==", "bodyText": "That is an excellent question. I don't think it has to necessarily be a Set, I tried to follow the other APIs we have in the internal client and used Sets. is there a drawback in using Sets here?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468106617", "createdAt": "2020-08-10T18:46:48Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDMzMg=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIwOTg3OQ==", "bodyText": "I made it into a List to maintain the orders in the collection as Abhipsa mentioned.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468209879", "createdAt": "2020-08-10T21:59:34Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDMzMg=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2NzQ4OQ==", "bodyText": "As long as they need to be ordered, then a List should be fine. In general, if the API can take a more generic collection type, then it should. That way users who like sets can pass in a set, and users who like lists can pass in a list. But that's all moot if we have to maintain order here.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468267489", "createdAt": "2020-08-11T01:02:53Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +184,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(Set<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDMzMg=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDI4OTM5OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzowNDoyMVrOG-XiHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzowNDoyMVrOG-XiHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA1MDQ2MQ==", "bodyText": "nit: add a log statement here", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468050461", "createdAt": "2020-08-10T17:04:21Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,17 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message.isBulk() && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n+        {\n+            for (Message singleMessage : message.getNestedMessages())\n+            {\n+                waitingPacketsQueue.add(new IotHubTransportPacket(message, callback, callbackContext,null, System.currentTimeMillis()));\n+            }\n+\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDM3MTY1OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzoyODowMFrOG-YU1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNTo1NDozN1rOG--biA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw==", "bodyText": "What about having a class BulkMessage that extends from this message class instead? That way in the lower layers, you can have code like\nif (message instanceof BulkMessage)\n{\n// bulk message logic\n}\nelse\n{\n//normal message logic\n}", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468063447", "createdAt": "2020-08-10T17:28:00Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -212,6 +246,15 @@ public Message(String body)\n     \n     // ----- Public Methods -----\n \n+    /**\n+     * Indicates whether or not this instance is a bulk message instance.\n+     * @return Boolean value to indicate whether or not this is a bulk message instance.\n+     */\n+    public boolean isBulk()\n+    {\n+        return this.isBulk;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MzI5MQ==", "bodyText": "That way getNestedMessages() can only be called on a bulk message", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468073291", "createdAt": "2020-08-10T17:46:07Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -212,6 +246,15 @@ public Message(String body)\n     \n     // ----- Public Methods -----\n \n+    /**\n+     * Indicates whether or not this instance is a bulk message instance.\n+     * @return Boolean value to indicate whether or not this is a bulk message instance.\n+     */\n+    public boolean isBulk()\n+    {\n+        return this.isBulk;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwODEwNA==", "bodyText": "that is the first approach I tried, If we decide to create a BulkMessage class (which I did initially) we have to expose it (which I am not a huge fan of doing).\nThe reason is that this class is used in other packages device.Transport for example. so we can't make it internal (not a public/private class). So I baked it into the same Message class.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468108104", "createdAt": "2020-08-10T18:49:48Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -212,6 +246,15 @@ public Message(String body)\n     \n     // ----- Public Methods -----\n \n+    /**\n+     * Indicates whether or not this instance is a bulk message instance.\n+     * @return Boolean value to indicate whether or not this is a bulk message instance.\n+     */\n+    public boolean isBulk()\n+    {\n+        return this.isBulk;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2Nzg5NQ==", "bodyText": "I'm not sure I follow why making a hypothetical BulkMessage class public would be bad when it extends an already public class.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468267895", "createdAt": "2020-08-11T01:04:19Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -212,6 +246,15 @@ public Message(String body)\n     \n     // ----- Public Methods -----\n \n+    /**\n+     * Indicates whether or not this instance is a bulk message instance.\n+     * @return Boolean value to indicate whether or not this is a bulk message instance.\n+     */\n+    public boolean isBulk()\n+    {\n+        return this.isBulk;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4Nzc1Mg==", "bodyText": "I made a separate class and made the constructor internal.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468687752", "createdAt": "2020-08-11T15:54:37Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -212,6 +246,15 @@ public Message(String body)\n     \n     // ----- Public Methods -----\n \n+    /**\n+     * Indicates whether or not this instance is a bulk message instance.\n+     * @return Boolean value to indicate whether or not this is a bulk message instance.\n+     */\n+    public boolean isBulk()\n+    {\n+        return this.isBulk;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2MzQ0Nw=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDM5NjQxOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzozNTowM1rOG-Yj0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzozNTowM1rOG-Yj0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NzI4MQ==", "bodyText": "You can make this catch more specific since only a IotHubSizeExceededException exception is thrown here", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468067281", "createdAt": "2020-08-10T17:35:03Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "diffHunk": "@@ -80,7 +80,29 @@ public IotHubStatusCode sendMessage(Message message) throws TransportException\n     {\n         synchronized (HTTPS_CONNECTION_LOCK)\n         {\n-            HttpsMessage httpsMessage = HttpsSingleMessage.parseHttpsMessage(message);\n+            // Here we check if it's a bulk message and serialize it.\n+            HttpsMessage httpsMessage = null;\n+\n+            if (message.isBulk())\n+            {\n+                HttpsBatchMessage batchMessage = new HttpsBatchMessage();\n+                for (Message singleMessage : message.getNestedMessages())\n+                {\n+                    try\n+                    {\n+                        batchMessage.addMessage(HttpsSingleMessage.parseHttpsMessage(singleMessage));\n+                    }\n+                    catch (Exception e)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDM5ODQ3OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzozNTozOFrOG-YlBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo1MTozNVrOG-bHPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NzU5MA==", "bodyText": "throw new TransportException(\"Failed to create http batch message\", e); to add context", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468067590", "createdAt": "2020-08-10T17:35:38Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "diffHunk": "@@ -80,7 +80,29 @@ public IotHubStatusCode sendMessage(Message message) throws TransportException\n     {\n         synchronized (HTTPS_CONNECTION_LOCK)\n         {\n-            HttpsMessage httpsMessage = HttpsSingleMessage.parseHttpsMessage(message);\n+            // Here we check if it's a bulk message and serialize it.\n+            HttpsMessage httpsMessage = null;\n+\n+            if (message.isBulk())\n+            {\n+                HttpsBatchMessage batchMessage = new HttpsBatchMessage();\n+                for (Message singleMessage : message.getNestedMessages())\n+                {\n+                    try\n+                    {\n+                        batchMessage.addMessage(HttpsSingleMessage.parseHttpsMessage(singleMessage));\n+                    }\n+                    catch (Exception e)\n+                    {\n+                        throw new TransportException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwOTExNw==", "bodyText": "the inner exception already has this message. I will add this on top of it for more clarity", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468109117", "createdAt": "2020-08-10T18:51:35Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/https/HttpsIotHubConnection.java", "diffHunk": "@@ -80,7 +80,29 @@ public IotHubStatusCode sendMessage(Message message) throws TransportException\n     {\n         synchronized (HTTPS_CONNECTION_LOCK)\n         {\n-            HttpsMessage httpsMessage = HttpsSingleMessage.parseHttpsMessage(message);\n+            // Here we check if it's a bulk message and serialize it.\n+            HttpsMessage httpsMessage = null;\n+\n+            if (message.isBulk())\n+            {\n+                HttpsBatchMessage batchMessage = new HttpsBatchMessage();\n+                for (Message singleMessage : message.getNestedMessages())\n+                {\n+                    try\n+                    {\n+                        batchMessage.addMessage(HttpsSingleMessage.parseHttpsMessage(singleMessage));\n+                    }\n+                    catch (Exception e)\n+                    {\n+                        throw new TransportException(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2NzU5MA=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDQzMTM3OnYy", "diffSide": "RIGHT", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNzo0NTowNlrOG-Y5CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMjozNjozMFrOG-iGgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MjcxMg==", "bodyText": "I think a good CI-only test to complement the above test is to try a bulk message made up of a large number of small messages. What do you think?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468072712", "createdAt": "2020-08-10T17:45:06Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java", "diffHunk": "@@ -67,6 +67,14 @@ public void sendMessages() throws Exception\n         IotHubServicesCommon.sendMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n     }\n \n+    @Test\n+    public void sendBulkMessages() throws Exception\n+    {\n+        this.testInstance.setup();\n+\n+        IotHubServicesCommon.sendBulkMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwOTUzNA==", "bodyText": "I like that. I will add a negative test as well to make sure the correct exception is thrown if the size of the message is above 255k", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468109534", "createdAt": "2020-08-10T18:52:22Z", "author": {"login": "azabbasi"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java", "diffHunk": "@@ -67,6 +67,14 @@ public void sendMessages() throws Exception\n         IotHubServicesCommon.sendMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n     }\n \n+    @Test\n+    public void sendBulkMessages() throws Exception\n+    {\n+        this.testInstance.setup();\n+\n+        IotHubServicesCommon.sendBulkMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MjcxMg=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIyMzYxOA==", "bodyText": "it turns out we already have unit tests for the BatchHTTPmessages class the failure scenario", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468223618", "createdAt": "2020-08-10T22:36:30Z", "author": {"login": "azabbasi"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java", "diffHunk": "@@ -67,6 +67,14 @@ public void sendMessages() throws Exception\n         IotHubServicesCommon.sendMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n     }\n \n+    @Test\n+    public void sendBulkMessages() throws Exception\n+    {\n+        this.testInstance.setup();\n+\n+        IotHubServicesCommon.sendBulkMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA3MjcxMg=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDY4MjI5OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo1Njo0OVrOG-bSaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODo1NzoxMVrOG-bTQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMTk3Nw==", "bodyText": "Use singleMessage when constructing the iothubtransportpacket, not message", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468111977", "createdAt": "2020-08-10T18:56:49Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,17 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message.isBulk() && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n+        {\n+            for (Message singleMessage : message.getNestedMessages())\n+            {\n+                waitingPacketsQueue.add(new IotHubTransportPacket(message, callback, callbackContext,null, System.currentTimeMillis()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMjE5Mw==", "bodyText": "Otherwise you'll just be sending the bulk message over and over, not its children.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468112193", "createdAt": "2020-08-10T18:57:11Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,17 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message.isBulk() && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n+        {\n+            for (Message singleMessage : message.getNestedMessages())\n+            {\n+                waitingPacketsQueue.add(new IotHubTransportPacket(message, callback, callbackContext,null, System.currentTimeMillis()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODExMTk3Nw=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNTQ4MTYyOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMzoxNjoyOVrOG-i5hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNTozMzo1N1rOG_mz0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjY3Nw==", "bodyText": "what do nested messages mean here?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468236677", "createdAt": "2020-08-10T23:16:29Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -35,6 +35,16 @@\n      */\n     private String messageId;\n \n+    /**\n+     * Whether or not there is a list of nested messages included in this instance.\n+     */\n+    private boolean isBulk;\n+\n+    /**\n+     * List of nested messages.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM0OTMyOA==", "bodyText": "I have moved it to batched messages. That makes the batch message a wrapper around the same object type of Message.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469349328", "createdAt": "2020-08-12T15:33:57Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -35,6 +35,16 @@\n      */\n     private String messageId;\n \n+    /**\n+     * Whether or not there is a list of nested messages included in this instance.\n+     */\n+    private boolean isBulk;\n+\n+    /**\n+     * List of nested messages.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNjY3Nw=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNTQ4NzkxOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMzoxOTozOVrOG-i9Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMzoyOTo1OFrOG-jJ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNzYyMw==", "bodyText": "so you can use lombok getter here right instead of line 194?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468237623", "createdAt": "2020-08-10T23:19:39Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -35,6 +35,16 @@\n      */\n     private String messageId;\n \n+    /**\n+     * Whether or not there is a list of nested messages included in this instance.\n+     */\n+    private boolean isBulk;\n+\n+    /**\n+     * List of nested messages.\n+     */\n+    private Set<Message> nestedMessages;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI0MDg1Ng==", "bodyText": "True, but then I will have to change all the getters in this class no?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468240856", "createdAt": "2020-08-10T23:29:58Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/Message.java", "diffHunk": "@@ -35,6 +35,16 @@\n      */\n     private String messageId;\n \n+    /**\n+     * Whether or not there is a list of nested messages included in this instance.\n+     */\n+    private boolean isBulk;\n+\n+    /**\n+     * List of nested messages.\n+     */\n+    private Set<Message> nestedMessages;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzNzYyMw=="}, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNTQ5NzI2OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMzoyNDowM1rOG-jCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMzoyNDowM1rOG-jCsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIzOTAyNg==", "bodyText": "may be add some logging here?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r468239026", "createdAt": "2020-08-10T23:24:03Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,17 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message.isBulk() && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))\n+        {\n+            for (Message singleMessage : message.getNestedMessages())\n+            {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58708a1f03a77ca9d90d44eabbc42185c490f79"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzIyNjMxOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1MjozNVrOG_sMQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1NDo1NFrOG_sRng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNzUwNA==", "bodyText": "A javadoc at the class level would be helpful. It should explain what it is, and link it to the relevant device client method by using \"{@ link <classname>#<methodName>}\"", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469437504", "createdAt": "2020-08-12T17:52:35Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import java.util.List;\n+\n+public class BatchMessages extends Message", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzODg3OA==", "bodyText": "I can't do the spacing right on that string above due to github, but autocomplete should help you out here", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469438878", "createdAt": "2020-08-12T17:54:54Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import java.util.List;\n+\n+public class BatchMessages extends Message", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzNzUwNA=="}, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzIzOTg2OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1NjoyMlrOG_sVLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1NjoyMlrOG_sVLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQzOTc4OA==", "bodyText": "\"@ param messages\" could use a description. Something like \"The messages that will be sent as a batch\"", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469439788", "createdAt": "2020-08-12T17:56:22Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/BatchMessages.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.microsoft.azure.sdk.iot.device;\n+\n+import java.util.List;\n+\n+public class BatchMessages extends Message\n+{\n+    /**\n+     * List of nested messages.\n+     */\n+    private List<Message> nestedMessages;\n+\n+    /**\n+     * Creates a batch message\n+     * This constructor is internal and can only be called within the com.microsoft.azure.sdk.iot.device package.\n+     * @param messages", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI0MjE4OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1Njo1OFrOG_sWng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1Njo1OFrOG_sWng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MDE1OA==", "bodyText": "Clarify that this callback is all-or-nothing for each batch message, so it will only be fired once", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469440158", "createdAt": "2020-08-12T17:56:58Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI0NTQxOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1Nzo1MlrOG_sYqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzo1Nzo1MlrOG_sYqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MDY4MQ==", "bodyText": "If you want to allow amqp/mqtt to use this batch API, then at least add a comment here explaining why only https doesn't split the batch message here", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469440681", "createdAt": "2020-08-12T17:57:52Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/IotHubTransport.java", "diffHunk": "@@ -401,6 +401,18 @@ public void addMessage(Message message, IotHubEventCallback callback, Object cal\n \n         //Codes_SRS_IOTHUBTRANSPORT_34_042: [This function shall build a transport packet from the provided message,\n         // callback, and context and then add that packet to the waiting queue.]\n+\n+        if (message instanceof BatchMessages && !(this.iotHubTransportConnection instanceof HttpsIotHubConnection))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI1NDg5OnYy", "diffSide": "RIGHT", "path": "device/iot-device-samples/send-batch-events/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowMDozM1rOG_setw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxNjoyMlrOG_tApg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MjIzMQ==", "bodyText": "Is this a copy-paste error? It should be \"Send Batch Events Sample\"", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469442231", "createdAt": "2020-08-12T18:00:33Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-samples/send-batch-events/README.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Send Event Sample", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NjUyNA==", "bodyText": "See below, but it looks like you edited the wrong readme file", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469446524", "createdAt": "2020-08-12T18:08:26Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-samples/send-batch-events/README.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Send Event Sample", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MjIzMQ=="}, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MDkxOA==", "bodyText": "yes it is", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469450918", "createdAt": "2020-08-12T18:16:22Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-samples/send-batch-events/README.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Send Event Sample", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MjIzMQ=="}, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI1NjQ5OnYy", "diffSide": "RIGHT", "path": "device/iot-device-samples/send-batch-events/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowMTowN1rOG_sf1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowMTowN1rOG_sf1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MjUxNg==", "bodyText": "Again, make sure you update this readme to reflect the different jar file that gets generated when building this sample", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469442516", "createdAt": "2020-08-12T18:01:07Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-samples/send-batch-events/README.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Send Event Sample\n+\n+Sample application that uses the Azure IoT Java SDK to send telemetry messages to the\n+Azure IoT Hub cloud service or to an Azure IoT Edge device. The sample demonstrates how to connect\n+and send messages using a protocol of your choices as a parameter.\n+\n+## Build the sample\n+\n+```\n+$> cd {sample root}\n+$> mvn install -DskipTests\n+```\n+\n+## Run the sample\n+\n+Listed below is the command to launch the sample along with a description of its arguments\n+\n+```\n+$> cd {sample root}/send-event\n+$> java -jar target/send-event-{version}-with-deps.jar \"{connection string}\" {number of messages to send} {protocol}  {path to trusted root ca}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI1ODc1OnYy", "diffSide": "RIGHT", "path": "device/iot-device-samples/send-batch-events/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowMTo0NVrOG_shRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoyMDozMFrOG_tJ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0Mjg4NQ==", "bodyText": "I imagine that the bulk API callback only gets fired once, so this expected output looks wrong to me", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469442885", "createdAt": "2020-08-12T18:01:45Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-samples/send-batch-events/README.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Send Event Sample\n+\n+Sample application that uses the Azure IoT Java SDK to send telemetry messages to the\n+Azure IoT Hub cloud service or to an Azure IoT Edge device. The sample demonstrates how to connect\n+and send messages using a protocol of your choices as a parameter.\n+\n+## Build the sample\n+\n+```\n+$> cd {sample root}\n+$> mvn install -DskipTests\n+```\n+\n+## Run the sample\n+\n+Listed below is the command to launch the sample along with a description of its arguments\n+\n+```\n+$> cd {sample root}/send-event\n+$> java -jar target/send-event-{version}-with-deps.jar \"{connection string}\" {number of messages to send} {protocol}  {path to trusted root ca}\n+```\n+\n+### Arguments Description\n+\n+* Connection String:\n+  * IoT Hub connection string format:\n+\n+    ```\n+    HostName=your-hub.azure-devices.net;DeviceId=yourDevice;SharedAccessKey=XXXYYYZZZ=;\n+    ```\n+\n+  * IoT Edge connection string:\n+\n+    ```\n+    HostName=your-hub.azure-devices.net;DeviceId=yourDevice;SharedAccessKey=XXXYYYZZZ=;GatewayHostName=mygateway.contoso.com\n+    ```\n+\n+* Number of messages - Expressed in decimal\n+* Protocol - Choices are \"mqtt\", \"https\", \"amqps\", \"amqps_ws\", \"mqtt_ws\"\n+* Path to trusted CA certificate: This is optional for IoT Hub since it's certificate is signed by public root CA. For the Edge Hub, if the CA is not a public root, a path tp the root CA certificate in PEM format is absolutely required. This is required even if the root certificate is installed in the trusted certificate store of the OS.\n+\n+Sample command invocation:\n+\n+```\n+$> java -jar target/send-event-1.14.0-with-deps.jar \"{connection string}\" 20 mqtt /home/user/ca_cert.pem\n+```\n+\n+## Verify output\n+\n+If everything was correctly provided via the CLI arguments, the following should be observed on stdout\n+\n+```\n+...\n+IoT Hub responded to message d630cd17-4b84-49f1-878a-901f53ac4038 with status OK_EMPTY\n+IoT Hub responded to message e45e5998-5ea1-49bd-978c-5a149e2012e8 with status OK_EMPTY\n+IoT Hub responded to message f12eb242-b314-4ded-98a6-9f2229a9c2b7 with status OK_EMPTY\n+IoT Hub responded to message 033cc1fd-b3fe-43a8-b05a-5e1e188d2b8c with status OK_EMPTY\n+IoT Hub responded to message 1695f37f-455a-4386-a46b-57fe4e4fae44 with status OK_EMPTY", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MzI5Nw==", "bodyText": "this is due to the edition of the wrong file. fixed.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469453297", "createdAt": "2020-08-12T18:20:30Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-samples/send-batch-events/README.md", "diffHunk": "@@ -0,0 +1,60 @@\n+# Send Event Sample\n+\n+Sample application that uses the Azure IoT Java SDK to send telemetry messages to the\n+Azure IoT Hub cloud service or to an Azure IoT Edge device. The sample demonstrates how to connect\n+and send messages using a protocol of your choices as a parameter.\n+\n+## Build the sample\n+\n+```\n+$> cd {sample root}\n+$> mvn install -DskipTests\n+```\n+\n+## Run the sample\n+\n+Listed below is the command to launch the sample along with a description of its arguments\n+\n+```\n+$> cd {sample root}/send-event\n+$> java -jar target/send-event-{version}-with-deps.jar \"{connection string}\" {number of messages to send} {protocol}  {path to trusted root ca}\n+```\n+\n+### Arguments Description\n+\n+* Connection String:\n+  * IoT Hub connection string format:\n+\n+    ```\n+    HostName=your-hub.azure-devices.net;DeviceId=yourDevice;SharedAccessKey=XXXYYYZZZ=;\n+    ```\n+\n+  * IoT Edge connection string:\n+\n+    ```\n+    HostName=your-hub.azure-devices.net;DeviceId=yourDevice;SharedAccessKey=XXXYYYZZZ=;GatewayHostName=mygateway.contoso.com\n+    ```\n+\n+* Number of messages - Expressed in decimal\n+* Protocol - Choices are \"mqtt\", \"https\", \"amqps\", \"amqps_ws\", \"mqtt_ws\"\n+* Path to trusted CA certificate: This is optional for IoT Hub since it's certificate is signed by public root CA. For the Edge Hub, if the CA is not a public root, a path tp the root CA certificate in PEM format is absolutely required. This is required even if the root certificate is installed in the trusted certificate store of the OS.\n+\n+Sample command invocation:\n+\n+```\n+$> java -jar target/send-event-1.14.0-with-deps.jar \"{connection string}\" 20 mqtt /home/user/ca_cert.pem\n+```\n+\n+## Verify output\n+\n+If everything was correctly provided via the CLI arguments, the following should be observed on stdout\n+\n+```\n+...\n+IoT Hub responded to message d630cd17-4b84-49f1-878a-901f53ac4038 with status OK_EMPTY\n+IoT Hub responded to message e45e5998-5ea1-49bd-978c-5a149e2012e8 with status OK_EMPTY\n+IoT Hub responded to message f12eb242-b314-4ded-98a6-9f2229a9c2b7 with status OK_EMPTY\n+IoT Hub responded to message 033cc1fd-b3fe-43a8-b05a-5e1e188d2b8c with status OK_EMPTY\n+IoT Hub responded to message 1695f37f-455a-4386-a46b-57fe4e4fae44 with status OK_EMPTY", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0Mjg4NQ=="}, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI2MzAxOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowMzowNlrOG_skHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowOTo1MFrOG_syWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MzYxNQ==", "bodyText": "By adding this to the InternalClient rather than device client, you are allowing ModuleClients to use this API, too. I don't think that is an issue, but I wanted to make sure you think about that.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469443615", "createdAt": "2020-08-12T18:03:06Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(List<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NzI1OA==", "bodyText": "The tests you wrote in SendMessagesTests automatically run the scenarios for ModuleClients and DeviceClients, so don't worry about test coverage on this one", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469447258", "createdAt": "2020-08-12T18:09:50Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(List<Message> messages, IotHubEventCallback callback, Object callbackContext)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0MzYxNQ=="}, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI2NTg5OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowMzo1OVrOG_smDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowMzo1OVrOG_smDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NDExMA==", "bodyText": "nit: The class should be \"BatchMessage\" not \"BatchMessages\" since it is ultimately just one http request", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469444110", "createdAt": "2020-08-12T18:03:59Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,33 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub\n+     * HTTPS messages will be sent in a single batch and MQTT and AMQP messages will be sent individually.\n+     * Maximum payload size for HTTPS is 255KB\n+     *\n+     * @param messages the list of message to be sent.\n+     * @param callback the callback to be invoked when a response is received.\n+     * Can be {@code null}.\n+     * @param callbackContext a context to be passed to the callback. Can be\n+     * {@code null} if no callback is provided.\n+     *\n+     * @throws IllegalArgumentException if the message provided is {@code null}.\n+     * @throws IllegalStateException if the client has not been opened yet or is\n+     * already closed.\n+     */\n+    public void sendEventBatchAsync(List<Message> messages, IotHubEventCallback callback, Object callbackContext)\n+    {\n+        for (Message message: messages)\n+        {\n+            message.setConnectionDeviceId(this.config.getDeviceId());\n+        }\n+\n+        Message message = new BatchMessages(messages);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI3MjM1OnYy", "diffSide": "RIGHT", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowNTo1NVrOG_sqDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowNTo1NVrOG_sqDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NTEzMw==", "bodyText": "I see this as a good CI test. If you'd like, you can tag it with @ContinuousIntegrationTest. That will make it only run during nightly builds and CI builds", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469445133", "createdAt": "2020-08-12T18:05:55Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/telemetry/SendMessagesTests.java", "diffHunk": "@@ -67,6 +69,28 @@ public void sendMessages() throws Exception\n         IotHubServicesCommon.sendMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n     }\n \n+    @Test\n+    public void sendBulkMessages() throws Exception\n+    {\n+        this.testInstance.setup();\n+\n+        IotHubServicesCommon.sendBulkMessages(testInstance.client, testInstance.protocol, NORMAL_MESSAGES_TO_SEND, RETRY_MILLISECONDS, SEND_TIMEOUT_MILLISECONDS, 0, null);\n+    }\n+\n+    @Test\n+    public void sendManySmallMessagesAsBatch() throws Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzI3ODI0OnYy", "diffSide": "RIGHT", "path": "device/iot-device-samples/send-event/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODowNzo0MFrOG_stzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxNzozMVrOG_tDRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NjA5NQ==", "bodyText": "It looks like you edited the wrong readme. Double check the path of this file", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469446095", "createdAt": "2020-08-12T18:07:40Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-samples/send-event/README.md", "diffHunk": "@@ -1,8 +1,8 @@\n-# Send Event Sample\n+# Send Events In Batch Sample", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MTU4OQ==", "bodyText": "yeah :)))", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469451589", "createdAt": "2020-08-12T18:17:31Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-samples/send-event/README.md", "diffHunk": "@@ -1,8 +1,8 @@\n-# Send Event Sample\n+# Send Events In Batch Sample", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ0NjA5NQ=="}, "originalCommit": {"oid": "f87bdd6d8afa9ed1332cd24bd3c7b49ebc26103b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzkzNTkzOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMToxNDo0NlrOG_zHrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMToxNDo0NlrOG_zHrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU1MTAyMA==", "bodyText": "Async not ASync", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/889#discussion_r469551020", "createdAt": "2020-08-12T21:14:46Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/InternalClient.java", "diffHunk": "@@ -184,6 +185,34 @@ public void sendEventAsync(Message message, IotHubEventCallback callback, Object\n         deviceIO.sendEventAsync(message, callback, callbackContext, this.config.getDeviceId());\n     }\n \n+    /**\n+     * ASynchronously sends a batch of messages to the IoT Hub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f58b6665c4e9c641c9f7b22af40c6c2f13b6ff"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2671, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}