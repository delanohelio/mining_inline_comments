{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDUyNjAw", "number": 773, "reviewThreads": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjowNDowNlrOD6y3Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1Njo1N1rOD7axUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTc3MzY3OnYy", "diffSide": "LEFT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjowNDowNlrOGS1DuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjowNDowNlrOGS1DuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM5Njg1Nw==", "bodyText": "Note that this would be a breaking change, but this getter/setter hasn't been in a released jar file yet, so it is still safe to change", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422396857", "createdAt": "2020-05-08T22:04:06Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +41,7 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fbc69964974f742b36e7e75a91f10d356f49d34"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTc5Mzg1OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoxNDo0MVrOGS1QCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoxNjowMlrOGS1RhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMDAxMQ==", "bodyText": "I am not sure what this means:\nOnly HTTP Proxies are supported. Authentication with the HTTP proxy is not supported.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422400011", "createdAt": "2020-05-08T22:14:41Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. Only HTTP Proxies are supported.\n+ * Authentication with the HTTP proxy is not supported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fbc69964974f742b36e7e75a91f10d356f49d34"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMDM4OQ==", "bodyText": "It means you can use HTTP proxies, but only if that HTTP proxy doesn't require authentication. I can reword this", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422400389", "createdAt": "2020-05-08T22:16:02Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. Only HTTP Proxies are supported.\n+ * Authentication with the HTTP proxy is not supported.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMDAxMQ=="}, "originalCommit": {"oid": "0fbc69964974f742b36e7e75a91f10d356f49d34"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTgwMjg3OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoxOToyMFrOGS1VSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoxOToyMFrOGS1VSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMTM1NA==", "bodyText": "text needs to be: Could not get port hostname from saved proxy", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422401354", "createdAt": "2020-05-08T22:19:20Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getHostName();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get port from saved proxy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1de1c38973ac0f049af5e722d2ef1d26d12eb577"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTk5OTYwOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDozMTowMlrOGS3Gog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzowNDo0M1rOGTlS8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMDM3MA==", "bodyText": "Is this.proxyOptions.getProxy() check required? There is only 1 public constructor for initializing the ProxyOptions class, and that takes in a Proxy object.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422430370", "createdAt": "2020-05-09T00:31:02Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -76,9 +102,15 @@ protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubSer\n         this.userName = iotHubConnectionString.getUserString();\n         this.sasToken = iotHubServiceSasToken.toString();\n         this.iotHubServiceClientProtocol = iotHubServiceClientProtocol;\n+        this.proxyOptions = proxyOptions;\n+\n+        if (this.proxyOptions != null && this.proxyOptions.getProxy() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4NzE4Nw==", "bodyText": "Good point, just checking if proxyoptions is null should be sufficient here and everywhere else", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423187187", "createdAt": "2020-05-11T17:04:43Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -76,9 +102,15 @@ protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubSer\n         this.userName = iotHubConnectionString.getUserString();\n         this.sasToken = iotHubServiceSasToken.toString();\n         this.iotHubServiceClientProtocol = iotHubServiceClientProtocol;\n+        this.proxyOptions = proxyOptions;\n+\n+        if (this.proxyOptions != null && this.proxyOptions.getProxy() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMDM3MA=="}, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTMwNzc4OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1MzoxNVrOGTk2Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODo1NjoxNlrOGTpL5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ==", "bodyText": "What is the preferable way to set transport configurations for this SDK? Do we take in any transport settings? How do we set the keep-alive time etc?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423179855", "createdAt": "2020-05-11T16:53:15Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxMjY4MQ==", "bodyText": "We currently don't have any other options beyond proxy settings. I don't see us extending other options like the C# SDK does right now. I see that as something we can address when this SDK goes track 2 instead.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423212681", "createdAt": "2020-05-11T17:47:49Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ=="}, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTU4MQ==", "bodyText": "No one has asked for any settings beyond proxy support, for reference", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423215581", "createdAt": "2020-05-11T17:53:05Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ=="}, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzMzI5Mw==", "bodyText": "I see, it's better to start off with a config file, rather than placing them in the client initializer; but I agree, now that we are this close to going track 2, we should do it there directly.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423233293", "createdAt": "2020-05-11T18:24:45Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ=="}, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MDkxOQ==", "bodyText": "Well now I am building RegistryManagerOptions and ServiceClientOptions classes as per Priyanka, in case you are still interested in this point", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423250919", "createdAt": "2020-05-11T18:56:16Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ=="}, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTUxODMyOnYy", "diffSide": "RIGHT", "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1MDo0M1rOGTm83Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODoxNToyM1rOGTnzFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ==", "bodyText": "are 8 spaces of indentation normal for Java?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423214301", "createdAt": "2020-05-11T17:50:43Z", "author": {"login": "drwill-ms"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                .withPort(testProxyPort)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDY2NA==", "bodyText": "Not quite, I can fix this", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423214664", "createdAt": "2020-05-11T17:51:25Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                .withPort(testProxyPort)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ=="}, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTQ0MQ==", "bodyText": "What is normal?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423221441", "createdAt": "2020-05-11T18:03:13Z", "author": {"login": "drwill-ms"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                .withPort(testProxyPort)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ=="}, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyODE4Mw==", "bodyText": "One tab over from the method that started the fluent chain:\nAlthough github won't let me demonstrate exactly how this looks, the latest view of this file should show you.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423228183", "createdAt": "2020-05-11T18:15:23Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                .withPort(testProxyPort)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ=="}, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTUyNTMyOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1Mjo1NlrOGTnBfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NDozOFrOGTnFIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTQ4NQ==", "bodyText": "InetSocketAddress uses a capital N in getHostName. Not sure if that is the preferred casing to stick with and match for this method.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423215485", "createdAt": "2020-05-11T17:52:56Z", "author": {"login": "drwill-ms"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNjQxNg==", "bodyText": "Ah, good catch. We do use HostName and Hostname very interchangeably in this SDK. HostName seems more appropriate considering it is a pair of words", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423216416", "createdAt": "2020-05-11T17:54:38Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTQ4NQ=="}, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTUzMTE1OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NDo0NFrOGTnFWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NDo0NFrOGTnFWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNjQ3NQ==", "bodyText": "Perhaps message should be \"Unsupported proxy type\" then", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423216475", "createdAt": "2020-05-11T17:54:44Z", "author": {"login": "drwill-ms"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getHostName();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get hostname from saved proxy\");\n+        }\n+    }\n+\n+    public int getPort()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getPort();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get port from saved proxy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTUzMzk5OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NTozMlrOGTnHOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NTozMlrOGTnHOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNjk1Mw==", "bodyText": "space before : ?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423216953", "createdAt": "2020-05-11T17:55:32Z", "author": {"login": "drwill-ms"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1604,7 +1612,7 @@ private JobProperties ProcessJobResponse(HttpResponse response) throws IotHubExc\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.proxyOptions != null ? this.proxyOptions.getProxy(): null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTU0NTA2OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1ODozMFrOGTnOUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTowNDozOFrOGTpeLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA==", "bodyText": "More of a question than PR comments: Does java support only setting proxies explicitly via the application, or does it also automatically tunnel traffic through a proxy set on the OS directly?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423218768", "createdAt": "2020-05-11T17:58:30Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "549f36a773bec137188d4dcf0c75143dd9bb348c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTE5OA==", "bodyText": "What I mean is, if I have both set, who wins?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219198", "createdAt": "2020-05-11T17:59:12Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, "originalCommit": {"oid": "549f36a773bec137188d4dcf0c75143dd9bb348c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMDAwNg==", "bodyText": "Java doesn't allow you to force a proxy like that at the OS level as far as I know. Since we use transport libraries for HTTP and AMQP, we have to set the proxy at the http/amqp client level", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423220006", "createdAt": "2020-05-11T18:00:34Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, "originalCommit": {"oid": "549f36a773bec137188d4dcf0c75143dd9bb348c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzNDM3MA==", "bodyText": "So if I understand correctly, if my OS would have some default proxy configured, that would never be honored?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423234370", "createdAt": "2020-05-11T18:26:38Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, "originalCommit": {"oid": "549f36a773bec137188d4dcf0c75143dd9bb348c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIzODkzMA==", "bodyText": "Yes, hence why customer's want proxy support on this SDK, instead of just setting it on their own devices", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423238930", "createdAt": "2020-05-11T18:35:02Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, "originalCommit": {"oid": "549f36a773bec137188d4dcf0c75143dd9bb348c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1NTU5OA==", "bodyText": "Interesting!", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423255598", "createdAt": "2020-05-11T19:04:38Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA=="}, "originalCommit": {"oid": "549f36a773bec137188d4dcf0c75143dd9bb348c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTU0NTkzOnYy", "diffSide": "RIGHT", "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1ODo0MlrOGTnO0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMToxNVrOGTnUrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODg5OA==", "bodyText": "What are the hurdles with AMQP?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423218898", "createdAt": "2020-05-11T17:58:42Z", "author": {"login": "prmathur-microsoft"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                        .withPort(testProxyPort)\n+                        .start();\n+    }\n+\n+\n+    @AfterClass\n+    public static void stopProxy()\n+    {\n+        proxyServer.stop();\n+    }\n+\n     @Test (timeout=MAX_TEST_MILLISECONDS)\n     @ConditionalIgnoreRule.ConditionalIgnore(condition = StandardTierOnlyRule.class)\n     public void cloudToDeviceTelemetry() throws Exception\n+    {\n+        cloudToDeviceTelemetry(false);\n+    }\n+\n+    @Test (timeout=MAX_TEST_MILLISECONDS)\n+    @ConditionalIgnoreRule.ConditionalIgnore(condition = StandardTierOnlyRule.class)\n+    public void cloudToDeviceTelemetryWithProxy() throws Exception\n+    {\n+        if (testInstance.protocol != IotHubServiceClientProtocol.AMQPS_WS)\n+        {\n+            //Proxy support only exists for AMQPS_WS currently\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMDM5Ng==", "bodyText": "It may be possible, but no one has asked for this yet. The customer I'm writing this for just wants AMQPS_WS to support tunneling through HTTP proxies", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423220396", "createdAt": "2020-05-11T18:01:15Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                        .withPort(testProxyPort)\n+                        .start();\n+    }\n+\n+\n+    @AfterClass\n+    public static void stopProxy()\n+    {\n+        proxyServer.stop();\n+    }\n+\n     @Test (timeout=MAX_TEST_MILLISECONDS)\n     @ConditionalIgnoreRule.ConditionalIgnore(condition = StandardTierOnlyRule.class)\n     public void cloudToDeviceTelemetry() throws Exception\n+    {\n+        cloudToDeviceTelemetry(false);\n+    }\n+\n+    @Test (timeout=MAX_TEST_MILLISECONDS)\n+    @ConditionalIgnoreRule.ConditionalIgnore(condition = StandardTierOnlyRule.class)\n+    public void cloudToDeviceTelemetryWithProxy() throws Exception\n+    {\n+        if (testInstance.protocol != IotHubServiceClientProtocol.AMQPS_WS)\n+        {\n+            //Proxy support only exists for AMQPS_WS currently\n+            return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODg5OA=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTU0OTQzOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1OTozOVrOGTnQ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowNjoyMFrOGTnfng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTQ0Ng==", "bodyText": "Why are we adding support to deprecated API?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219446", "createdAt": "2020-05-11T17:59:39Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -36,7 +36,7 @@\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      * @param deviceId The device id\n      */\n-    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)\n+    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId, ProxyOptions proxyOptions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMDcwOA==", "bodyText": "Good question, give me a sec to check", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423220708", "createdAt": "2020-05-11T18:01:50Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -36,7 +36,7 @@\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      * @param deviceId The device id\n      */\n-    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)\n+    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId, ProxyOptions proxyOptions)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTQ0Ng=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMzE5OA==", "bodyText": "I can roll back this change actually. I'll just need to throw an unsupportedOperationException if the user tries to make proxy support work with these deprecated APIs", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423223198", "createdAt": "2020-05-11T18:06:20Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -36,7 +36,7 @@\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      * @param deviceId The device id\n      */\n-    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)\n+    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId, ProxyOptions proxyOptions)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTQ0Ng=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTU1MDI5OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1OTo1NlrOGTnRkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowNzoyNFrOGTnhxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTYwMQ==", "bodyText": "Breaking change?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219601", "createdAt": "2020-05-11T17:59:56Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -74,7 +72,7 @@\n      * @param iotHubServiceClientProtocol protocol to be used\n      * \n      */\n-    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMzc0OA==", "bodyText": "Good catch, here and on the other sub-service client classes. I'll add an overload constructor that takes the proxy options instead", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423223748", "createdAt": "2020-05-11T18:07:24Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -74,7 +72,7 @@\n      * @param iotHubServiceClientProtocol protocol to be used\n      * \n      */\n-    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTYwMQ=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTU1MTgyOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMDoxOFrOGTnSfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowODo1MVrOGTnlFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTgzNw==", "bodyText": "Isn't this a breaking change?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219837", "createdAt": "2020-05-11T18:00:18Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java", "diffHunk": "@@ -28,7 +28,7 @@\n      * @param sasToken The iot hub SAS token for the given device\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      */\n-    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)\n     {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyNDU5Ng==", "bodyText": "As per above, I'll add an overload to take the proxy instead", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423224596", "createdAt": "2020-05-11T18:08:51Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java", "diffHunk": "@@ -28,7 +28,7 @@\n      * @param sasToken The iot hub SAS token for the given device\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      */\n-    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)\n     {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTgzNw=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTU1OTk5OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMjo0NlrOGTnX3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowOToxM1rOGTnl6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTIxNQ==", "bodyText": "If you have to pass null as an additional parameter, is that a breaking change?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423221215", "createdAt": "2020-05-11T18:02:46Z", "author": {"login": "drwill-ms"}, "path": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java", "diffHunk": "@@ -36,7 +37,7 @@ public void constructor_input_hostName_null() throws Exception\n         String deviceId = \"xxx\";\n         IotHubServiceClientProtocol iotHubServiceClientProtocol = IotHubServiceClientProtocol.AMQPS;\n         // Act\n-        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId);\n+        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b1563932a40bce5f9a76c53baf0368e53bbe822"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyNDgwOQ==", "bodyText": "Looks like it, yeah. I've added an overloaded constructor so that it won't break now", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423224809", "createdAt": "2020-05-11T18:09:13Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java", "diffHunk": "@@ -36,7 +37,7 @@ public void constructor_input_hostName_null() throws Exception\n         String deviceId = \"xxx\";\n         IotHubServiceClientProtocol iotHubServiceClientProtocol = IotHubServiceClientProtocol.AMQPS;\n         // Act\n-        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId);\n+        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTIxNQ=="}, "originalCommit": {"oid": "0b1563932a40bce5f9a76c53baf0368e53bbe822"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTU2MDMwOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMjo1MlrOGTnYFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTowMDo0OVrOGTpVoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ==", "bodyText": "Why not group this under connection options which has protocol, proxyOptions etc and lets you add future connection options without adding extra API's", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423221271", "createdAt": "2020-05-11T18:02:52Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyNTE5Mw==", "bodyText": "That depends on how long we plan on supporting this particular SDK. I didn't envision bringing any other options here since we will be track 2 soon. But what do you think?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423225193", "createdAt": "2020-05-11T18:09:56Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0MjQwMg==", "bodyText": "I don't forsee either (As it is hard to see for 10 years down the line). I would still prefer to group because we have to support this for 10 years even after we move to track-2 ;just to be on safer side.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423242402", "createdAt": "2020-05-11T18:41:28Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI0NTE5Ng==", "bodyText": "Do you picture a class \"ConnectionOptions\" being reused from AMQP to HTTP, though? Or do you picture an HttpConnectionOptions class for registry manager, and an AmqpConnectionOptions class for service client, where each class has just the proxy to set?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423245196", "createdAt": "2020-05-11T18:46:18Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1MzQwOA==", "bodyText": "I pushed a commit that shows one way to have a more general \"RegistryManagerOptions\" and \"ServiceClientOptions\" class structure. Can you take a look?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423253408", "createdAt": "2020-05-11T19:00:49Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ=="}, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTc5MzQzOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxMToxNFrOGTpsDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1MTowOFrOGTurVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA==", "bodyText": "Q - this is for proxy support over Amqp_ws, then why don't we use socks proxy? Is that a proton-j requirement?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423259148", "createdAt": "2020-05-11T19:11:14Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MzM4Nw==", "bodyText": "The customer who prompted all this only needs support for HTTP proxies. I don't know offhand if amqps or amqps_ws work with socks proxies, or if proton-j has support for them", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423263387", "createdAt": "2020-05-11T19:19:11Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwNTgzNQ==", "bodyText": "I see, what does our device client currently use?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423305835", "createdAt": "2020-05-11T20:40:10Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MDg4Nw==", "bodyText": "HTTP proxies work for device clients using MQTT_WS, AMQPS_WS, and HTTP. In theory, SOCKs proxies work for device clients using MQTT", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423340887", "createdAt": "2020-05-11T21:51:08Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTgwMTcwOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxMzo0NVrOGTpxLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxOToyOFrOGTp9IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MDQ2MQ==", "bodyText": "there is a whole lot happening here, can we move this to the line above:\nthis.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423260461", "createdAt": "2020-05-11T19:13:45Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1604,7 +1612,7 @@ private JobProperties ProcessJobResponse(HttpResponse response) throws IotHubExc\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MTAwNg==", "bodyText": "The way I see, registry manager options should never be null, but have some default initial value (proxy = null)", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423261006", "createdAt": "2020-05-11T19:14:46Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1604,7 +1612,7 @@ private JobProperties ProcessJobResponse(HttpResponse response) throws IotHubExc\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MDQ2MQ=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MzUyMA==", "bodyText": "Yeah, good call. This is pretty busy", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423263520", "createdAt": "2020-05-11T19:19:28Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1604,7 +1612,7 @@ private JobProperties ProcessJobResponse(HttpResponse response) throws IotHubExc\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MDQ2MQ=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTgxNTQ2OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "isResolved": true, "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxNzo0OFrOGTp56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo1MDozMVrOGTq8Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA==", "bodyText": "Why not add @AllArgsConstructor for 1 line initialization.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423262698", "createdAt": "2020-05-11T19:17:48Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NDc0MA==", "bodyText": "I don't want this to be construed as an essential option. As such, there should be a constructor that doesn't take this", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423264740", "createdAt": "2020-05-11T19:21:37Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NTAyMw==", "bodyText": "For instance, if we ever add something like HTTP readTimeout/connectTimeout, I wouldn't want customers to need a proxy here", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423265023", "createdAt": "2020-05-11T19:22:14Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NjY4Ng==", "bodyText": "yeah, good point.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423266686", "createdAt": "2020-05-11T19:25:29Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2ODc2Mg==", "bodyText": "But I still feel the options object in itself should not be null, but have a default value", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423268762", "createdAt": "2020-05-11T19:29:29Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2OTc2NA==", "bodyText": "That way, it signifies that it is a container for client configurations, and if we add a param that has a default non-null value, we don't have to remove the null checks from everywhere.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423269764", "createdAt": "2020-05-11T19:31:16Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MDg0Nw==", "bodyText": "I'm not sure I see the value in holding a non-null default proxyOptions class. Each of those null checks would just turn into checks on if the proxy is of type DIRECT (no proxy) or type HTTP.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423270847", "createdAt": "2020-05-11T19:33:28Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MTI2OQ==", "bodyText": "For AMQP in particular, it isn't just a straight pass through. We have to add a transport layer manually if there is a proxy to go through", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423271269", "createdAt": "2020-05-11T19:34:14Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3MzA2Mg==", "bodyText": "What about a builder pattern here instead? Since all of the hypothetical fields in this class are optional, and we don't know how many options there may be in the future, a builder could fit in well here", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423273062", "createdAt": "2020-05-11T19:37:38Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NDAxMw==", "bodyText": "Suppose tomorrow we add a parameter for Http connect timeout, which has a default value of 1min, but settable. So now, the RegistryManagerOptions class is always non-null (irrespective of proxy).\nSo something like this, which we have below:\noptions != null ? options.getProxyOptions() : null\nwould want to get proxy options, even though we did not set it/ want to use it.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423274013", "createdAt": "2020-05-11T19:39:44Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NTQwMQ==", "bodyText": "Yeah, a builder would work here. We can set @nonnull for required params", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423275401", "createdAt": "2020-05-11T19:42:27Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3NzcyNA==", "bodyText": "Okay, I pushed a commit that makes these two options classes builder based", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423277724", "createdAt": "2020-05-11T19:46:54Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3ODMxNA==", "bodyText": "I can make the RegistryManagerOptions and ServiceClientOptions always non-null, for simplicity, sure. The default proxyOptions will still be null, though", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423278314", "createdAt": "2020-05-11T19:48:01Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI3OTY2Mg==", "bodyText": "Yes, of course, we don't want to force/ have a default for proxy", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423279662", "createdAt": "2020-05-11T19:50:31Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA=="}, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTgzMTIxOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToyMjozNVrOGTqDlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToyMjozNVrOGTqDlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NTE3NA==", "bodyText": "same, here as well", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423265174", "createdAt": "2020-05-11T19:22:35Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -76,9 +102,15 @@ protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubSer\n         this.userName = iotHubConnectionString.getUserString();\n         this.sasToken = iotHubServiceSasToken.toString();\n         this.iotHubServiceClientProtocol = iotHubServiceClientProtocol;\n+        this.options = options;\n+\n+        if (this.options != null && this.options.getProxyOptions() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)\n+        {\n+            throw new UnsupportedOperationException(\"Proxies are only supported over AMQPS_WS\");\n+        }\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_007: [The constructor shall create a new instance of AmqpSend object]\n-        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol);\n+        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol, options != null ? options.getProxyOptions() : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTkzMzY5OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo1NDoxNVrOGTrEZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo1ODozNVrOGTrNBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MTc2Nw==", "bodyText": "this now needs to be options.getProxyOptions() != null", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423281767", "createdAt": "2020-05-11T19:54:15Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -229,6 +261,11 @@ public void send(String deviceId, String moduleId, Message message) throws IOExc\n      */\n     @Deprecated public FeedbackReceiver getFeedbackReceiver(String deviceId)\n     {\n+        if (options != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7982977ee7fcbb8714a398a69c2efe66116a245e"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4Mzk3Mw==", "bodyText": "Good catch, you are right", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423283973", "createdAt": "2020-05-11T19:58:35Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -229,6 +261,11 @@ public void send(String deviceId, String moduleId, Message message) throws IOExc\n      */\n     @Deprecated public FeedbackReceiver getFeedbackReceiver(String deviceId)\n     {\n+        if (options != null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MTc2Nw=="}, "originalCommit": {"oid": "7982977ee7fcbb8714a398a69c2efe66116a245e"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjAyMTEwOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoyMToyNlrOGTr7ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDo1NTo1M1rOGTtDxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ==", "bodyText": "what is this for? did we allow creation of registry manager without having to pass in even a connection string?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423295845", "createdAt": "2020-05-11T20:21:26Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +42,16 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;\n+    private RegistryManagerOptions options;\n+\n+    /**\n+     * As of release 1.22.0, replaced by {@link #createFromConnectionString()}\n+     */\n+    @Deprecated\n+    public RegistryManager()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NzQ0Ng==", "bodyText": "Java has a funny quirk where a class with no public constuctor automatically has a public constructor. This commit just makes that constuctor visible. I believe it was an accident that we didn't make the only constuctor protected", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423297446", "createdAt": "2020-05-11T20:24:32Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +42,16 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;\n+    private RegistryManagerOptions options;\n+\n+    /**\n+     * As of release 1.22.0, replaced by {@link #createFromConnectionString()}\n+     */\n+    @Deprecated\n+    public RegistryManager()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ=="}, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMjEyNQ==", "bodyText": "Ah, the default constructor, yeah. Can we not make it private now? Also, can we modify the comment to say that this is simply the default java constructor. The replaced text makes it seem that we did allow a no args initialization of registry manager.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423302125", "createdAt": "2020-05-11T20:33:04Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +42,16 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;\n+    private RegistryManagerOptions options;\n+\n+    /**\n+     * As of release 1.22.0, replaced by {@link #createFromConnectionString()}\n+     */\n+    @Deprecated\n+    public RegistryManager()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ=="}, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxMTUyNA==", "bodyText": "Since it was a public constructor, we can't just make it private now. That would be a breaking change. We did technically allow users to build a registry manager through that constructor. I'll add to the header here that it was once the default constructor, though", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423311524", "createdAt": "2020-05-11T20:50:57Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +42,16 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;\n+    private RegistryManagerOptions options;\n+\n+    /**\n+     * As of release 1.22.0, replaced by {@link #createFromConnectionString()}\n+     */\n+    @Deprecated\n+    public RegistryManager()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ=="}, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMxNDM3NQ==", "bodyText": "Oh, I am confused, if this worked, why are we deprecating this now? It is because it doesn't really do anything useful?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423314375", "createdAt": "2020-05-11T20:55:53Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +42,16 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;\n+    private RegistryManagerOptions options;\n+\n+    /**\n+     * As of release 1.22.0, replaced by {@link #createFromConnectionString()}\n+     */\n+    @Deprecated\n+    public RegistryManager()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ=="}, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjA2ODM4OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNTo1MlrOGTsZ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNTo1MlrOGTsZ1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMzYzOA==", "bodyText": "nit: no longer required: ctrl+shift+o :)", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423303638", "createdAt": "2020-05-11T20:35:52Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjA2OTY1OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClientOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNjoxOFrOGTsarQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNjoxOFrOGTsarQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMzg1Mw==", "bodyText": "same, no longer required", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423303853", "createdAt": "2020-05-11T20:36:18Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClientOptions.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjMxMTg3OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1Njo1N1rOGTu1EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1ODowN1rOGTu3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MzM3Nw==", "bodyText": "Does service client works on anything other than AMQP ? If I re-call it doesn't. Then what purpose does iotHubServiceClientProtocol serve?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423343377", "createdAt": "2020-05-11T21:56:57Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,18 +40,36 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, ServiceClientOptions.builder().build());\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param options The connection options to use when connecting to the service. May be null if no custom options will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options) throws IOException\n     {\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_001: [The constructor shall throw IllegalArgumentException if the input string is empty or null]\n         if (Tools.isNullOrEmpty(connectionString))\n         {\n             throw new IllegalArgumentException(connectionString);\n         }\n \n+        if (options == null)\n+        {\n+            throw new IllegalArgumentException(\"ServiceClientOptions cannot be null for this constructor\");\n+        }\n+\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_002: [The constructor shall create IotHubConnectionString object using the IotHubConnectionStringBuilder]\n         IotHubConnectionString iotHubConnectionString = IotHubConnectionStringBuilder.createConnectionString(connectionString);\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_003: [The constructor shall create a new instance of ServiceClient using the created IotHubConnectionString object and return with it]\n-        ServiceClient iotServiceClient = new ServiceClient(iotHubConnectionString, iotHubServiceClientProtocol);\n+        ServiceClient iotServiceClient = new ServiceClient(iotHubConnectionString, iotHubServiceClientProtocol, options);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b88e890f8b9585ec13c4b599015f34d9d4914b6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MzkyNw==", "bodyText": "It can be either AMQPS or AMQPS_WS", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423343927", "createdAt": "2020-05-11T21:58:07Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,18 +40,36 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, ServiceClientOptions.builder().build());\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param options The connection options to use when connecting to the service. May be null if no custom options will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options) throws IOException\n     {\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_001: [The constructor shall throw IllegalArgumentException if the input string is empty or null]\n         if (Tools.isNullOrEmpty(connectionString))\n         {\n             throw new IllegalArgumentException(connectionString);\n         }\n \n+        if (options == null)\n+        {\n+            throw new IllegalArgumentException(\"ServiceClientOptions cannot be null for this constructor\");\n+        }\n+\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_002: [The constructor shall create IotHubConnectionString object using the IotHubConnectionStringBuilder]\n         IotHubConnectionString iotHubConnectionString = IotHubConnectionStringBuilder.createConnectionString(connectionString);\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_003: [The constructor shall create a new instance of ServiceClient using the created IotHubConnectionString object and return with it]\n-        ServiceClient iotServiceClient = new ServiceClient(iotHubConnectionString, iotHubServiceClientProtocol);\n+        ServiceClient iotServiceClient = new ServiceClient(iotHubConnectionString, iotHubServiceClientProtocol, options);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MzM3Nw=="}, "originalCommit": {"oid": "6b88e890f8b9585ec13c4b599015f34d9d4914b6"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2784, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}