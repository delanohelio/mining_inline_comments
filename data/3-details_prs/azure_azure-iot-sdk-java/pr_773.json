{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDUyNjAw", "number": 773, "title": "feat(iot-service): Add proxy support for service client operations", "bodyText": "Now that registryManager has proxy support, this PR adds proxy support to the AMQP side of the service client, too.", "createdAt": "2020-05-08T22:03:19Z", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773", "merged": true, "mergeCommit": {"oid": "51185de39d86c0e0e5940658ec0f47f39a3a0904"}, "closed": true, "closedAt": "2020-05-12T01:04:24Z", "author": {"login": "timtay-microsoft"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfZRJ_AFqTQwODU1MzM5Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgXAnigFqTQwOTU2MTg3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTUzMzky", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-408553392", "createdAt": "2020-05-08T22:04:06Z", "commit": {"oid": "0fbc69964974f742b36e7e75a91f10d356f49d34"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjowNDowNlrOGS1DuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjowNDowNlrOGS1DuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM5Njg1Nw==", "bodyText": "Note that this would be a breaking change, but this getter/setter hasn't been in a released jar file yet, so it is still safe to change", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422396857", "createdAt": "2020-05-08T22:04:06Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +41,7 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fbc69964974f742b36e7e75a91f10d356f49d34"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTU3MTQz", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-408557143", "createdAt": "2020-05-08T22:14:41Z", "commit": {"oid": "0fbc69964974f742b36e7e75a91f10d356f49d34"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoxNDo0MVrOGS1QCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoxNDo0MVrOGS1QCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMDAxMQ==", "bodyText": "I am not sure what this means:\nOnly HTTP Proxies are supported. Authentication with the HTTP proxy is not supported.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422400011", "createdAt": "2020-05-08T22:14:41Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. Only HTTP Proxies are supported.\n+ * Authentication with the HTTP proxy is not supported.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fbc69964974f742b36e7e75a91f10d356f49d34"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTU4NzMz", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-408558733", "createdAt": "2020-05-08T22:19:20Z", "commit": {"oid": "1de1c38973ac0f049af5e722d2ef1d26d12eb577"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoxOToyMFrOGS1VSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoxOToyMFrOGS1VSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMTM1NA==", "bodyText": "text needs to be: Could not get port hostname from saved proxy", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422401354", "createdAt": "2020-05-08T22:19:20Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getHostName();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get port from saved proxy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1de1c38973ac0f049af5e722d2ef1d26d12eb577"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTkwOTgx", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-408590981", "createdAt": "2020-05-09T00:31:02Z", "commit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDozMTowMlrOGS3Gog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDozMTowMlrOGS3Gog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMDM3MA==", "bodyText": "Is this.proxyOptions.getProxy() check required? There is only 1 public constructor for initializing the ProxyOptions class, and that takes in a Proxy object.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r422430370", "createdAt": "2020-05-09T00:31:02Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -76,9 +102,15 @@ protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubSer\n         this.userName = iotHubConnectionString.getUserString();\n         this.sasToken = iotHubServiceSasToken.toString();\n         this.iotHubServiceClientProtocol = iotHubServiceClientProtocol;\n+        this.proxyOptions = proxyOptions;\n+\n+        if (this.proxyOptions != null && this.proxyOptions.getProxy() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzUyNTU0", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409352554", "createdAt": "2020-05-11T16:53:15Z", "commit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1MzoxNVrOGTk2Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjo1MzoxNVrOGTk2Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE3OTg1NQ==", "bodyText": "What is the preferable way to set transport configurations for this SDK? Do we take in any transport settings? How do we set the keep-alive time etc?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423179855", "createdAt": "2020-05-11T16:53:15Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3da19df66822fc4859528347c3a3218237e3ef21"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5Mzk1Nzc5", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409395779", "createdAt": "2020-05-11T17:50:43Z", "commit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1MDo0M1rOGTm83Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1MDo0M1rOGTm83Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNDMwMQ==", "bodyText": "are 8 spaces of indentation normal for Java?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423214301", "createdAt": "2020-05-11T17:50:43Z", "author": {"login": "drwill-ms"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                .withPort(testProxyPort)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5Mzk3MzI2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409397326", "createdAt": "2020-05-11T17:52:56Z", "commit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1Mjo1NlrOGTnBfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1Mjo1NlrOGTnBfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNTQ4NQ==", "bodyText": "InetSocketAddress uses a capital N in getHostName. Not sure if that is the preferred casing to stick with and match for this method.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423215485", "createdAt": "2020-05-11T17:52:56Z", "author": {"login": "drwill-ms"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5Mzk4NjYw", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409398660", "createdAt": "2020-05-11T17:54:43Z", "commit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NDo0NFrOGTnFWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NDo0NFrOGTnFWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNjQ3NQ==", "bodyText": "Perhaps message should be \"Unsupported proxy type\" then", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423216475", "createdAt": "2020-05-11T17:54:44Z", "author": {"login": "drwill-ms"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)\n+        {\n+            throw new IllegalArgumentException(\"Service proxy options only support using HTTP proxies\");\n+        }\n+\n+        this.proxy = proxy;\n+    }\n+\n+    /**\n+     * @return the saved proxy hostname\n+     */\n+    public String getHostname()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getHostName();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get hostname from saved proxy\");\n+        }\n+    }\n+\n+    public int getPort()\n+    {\n+        if (this.proxy.address() instanceof InetSocketAddress)\n+        {\n+            InetSocketAddress addr = (InetSocketAddress) this.proxy.address();\n+            return addr.getPort();\n+        }\n+        else\n+        {\n+            //Should only happen if proxy is of type DIRECT, which isn't supported\n+            throw new UnsupportedOperationException(\"Could not get port from saved proxy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5Mzk5MjY2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409399266", "createdAt": "2020-05-11T17:55:32Z", "commit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NTozMlrOGTnHOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1NTozMlrOGTnHOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxNjk1Mw==", "bodyText": "space before : ?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423216953", "createdAt": "2020-05-11T17:55:32Z", "author": {"login": "drwill-ms"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1604,7 +1612,7 @@ private JobProperties ProcessJobResponse(HttpResponse response) throws IotHubExc\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.proxyOptions != null ? this.proxyOptions.getProxy(): null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c99b755b4f3540ef3f182aa0fa5b808f32b813"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDAxNTc1", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409401575", "createdAt": "2020-05-11T17:58:30Z", "commit": {"oid": "549f36a773bec137188d4dcf0c75143dd9bb348c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1ODozMFrOGTnOUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1ODozMFrOGTnOUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODc2OA==", "bodyText": "More of a question than PR comments: Does java support only setting proxies explicitly via the application, or does it also automatically tunnel traffic through a proxy set on the OS directly?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423218768", "createdAt": "2020-05-11T17:58:30Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "549f36a773bec137188d4dcf0c75143dd9bb348c"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDAxNzI3", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409401727", "createdAt": "2020-05-11T17:58:42Z", "commit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1ODo0MlrOGTnO0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1ODo0MlrOGTnO0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxODg5OA==", "bodyText": "What are the hurdles with AMQP?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423218898", "createdAt": "2020-05-11T17:58:42Z", "author": {"login": "prmathur-microsoft"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/serviceclient/ServiceClientTests.java", "diffHunk": "@@ -75,9 +85,42 @@ public static Collection inputsCommon() throws IOException\n         return inputs;\n     }\n \n+    @BeforeClass\n+    public static void startProxy()\n+    {\n+        proxyServer = DefaultHttpProxyServer.bootstrap()\n+                        .withPort(testProxyPort)\n+                        .start();\n+    }\n+\n+\n+    @AfterClass\n+    public static void stopProxy()\n+    {\n+        proxyServer.stop();\n+    }\n+\n     @Test (timeout=MAX_TEST_MILLISECONDS)\n     @ConditionalIgnoreRule.ConditionalIgnore(condition = StandardTierOnlyRule.class)\n     public void cloudToDeviceTelemetry() throws Exception\n+    {\n+        cloudToDeviceTelemetry(false);\n+    }\n+\n+    @Test (timeout=MAX_TEST_MILLISECONDS)\n+    @ConditionalIgnoreRule.ConditionalIgnore(condition = StandardTierOnlyRule.class)\n+    public void cloudToDeviceTelemetryWithProxy() throws Exception\n+    {\n+        if (testInstance.protocol != IotHubServiceClientProtocol.AMQPS_WS)\n+        {\n+            //Proxy support only exists for AMQPS_WS currently\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDAyNDc2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409402476", "createdAt": "2020-05-11T17:59:39Z", "commit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1OTozOVrOGTnQ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1OTozOVrOGTnQ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTQ0Ng==", "bodyText": "Why are we adding support to deprecated API?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219446", "createdAt": "2020-05-11T17:59:39Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -36,7 +36,7 @@\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      * @param deviceId The device id\n      */\n-    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId)\n+    public @Deprecated FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, String deviceId, ProxyOptions proxyOptions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDAyNjgy", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409402682", "createdAt": "2020-05-11T17:59:56Z", "commit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1OTo1NlrOGTnRkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzo1OTo1NlrOGTnRkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTYwMQ==", "bodyText": "Breaking change?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219601", "createdAt": "2020-05-11T17:59:56Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FeedbackReceiver.java", "diffHunk": "@@ -74,7 +72,7 @@\n      * @param iotHubServiceClientProtocol protocol to be used\n      * \n      */\n-    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    public FeedbackReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDAyOTQy", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409402942", "createdAt": "2020-05-11T18:00:18Z", "commit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMDoxOFrOGTnSfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMDoxOFrOGTnSfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIxOTgzNw==", "bodyText": "Isn't this a breaking change?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423219837", "createdAt": "2020-05-11T18:00:18Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/FileUploadNotificationReceiver.java", "diffHunk": "@@ -28,7 +28,7 @@\n      * @param sasToken The iot hub SAS token for the given device\n      * @param iotHubServiceClientProtocol The iot hub protocol name\n      */\n-    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol)\n+    FileUploadNotificationReceiver(String hostName, String userName, String sasToken, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions)\n     {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDA0NzI0", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409404724", "createdAt": "2020-05-11T18:02:45Z", "commit": {"oid": "0b1563932a40bce5f9a76c53baf0368e53bbe822"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMjo0NlrOGTnX3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMjo0NlrOGTnX3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTIxNQ==", "bodyText": "If you have to pass null as an additional parameter, is that a breaking change?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423221215", "createdAt": "2020-05-11T18:02:46Z", "author": {"login": "drwill-ms"}, "path": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/FeedbackReceiverTest.java", "diffHunk": "@@ -36,7 +37,7 @@ public void constructor_input_hostName_null() throws Exception\n         String deviceId = \"xxx\";\n         IotHubServiceClientProtocol iotHubServiceClientProtocol = IotHubServiceClientProtocol.AMQPS;\n         // Act\n-        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId);\n+        FeedbackReceiver feedbackReceiver = new FeedbackReceiver(hostName, userName, sasToken, iotHubServiceClientProtocol, deviceId, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b1563932a40bce5f9a76c53baf0368e53bbe822"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDA0ODA0", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409404804", "createdAt": "2020-05-11T18:02:52Z", "commit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMjo1MlrOGTnYFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxODowMjo1MlrOGTnYFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIyMTI3MQ==", "bodyText": "Why not group this under connection options which has protocol, proxyOptions etc and lets you add future connection options without adding extra API's", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423221271", "createdAt": "2020-05-11T18:02:52Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,6 +40,19 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, null);\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param proxyOptions The proxy options to use when connecting to the service. May be null if no proxy will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ProxyOptions proxyOptions) throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e496b19725b28eb58c07d7cad223280f961fcdc"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b8927ba06cfe1c2282eb788a3c230426133871a", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/9b8927ba06cfe1c2282eb788a3c230426133871a", "committedDate": "2020-05-11T18:34:14Z", "message": "feat(iot-service): Add proxy support for service client\n\nrefactor the way the registry manager consumes the proxy option as well, in case we need to add authentication support later as well. The proxyOptions object will allow us to add username and password if necessary"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b1563932a40bce5f9a76c53baf0368e53bbe822", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/0b1563932a40bce5f9a76c53baf0368e53bbe822", "committedDate": "2020-05-11T17:58:22Z", "message": "more context to error message"}, "afterCommit": {"oid": "9b8927ba06cfe1c2282eb788a3c230426133871a", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/9b8927ba06cfe1c2282eb788a3c230426133871a", "committedDate": "2020-05-11T18:34:14Z", "message": "feat(iot-service): Add proxy support for service client\n\nrefactor the way the registry manager consumes the proxy option as well, in case we need to add authentication support later as well. The proxyOptions object will allow us to add username and password if necessary"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/880b4eaf04d28fb08f91bbbd6288aff9be6b3457", "committedDate": "2020-05-11T19:00:46Z", "message": "RegistryManagerOptions and ServiceClientOptions instead of ProxyOptions at top level"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDU0MTM5", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409454139", "createdAt": "2020-05-11T19:11:14Z", "commit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxMToxNFrOGTpsDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxMToxNFrOGTpsDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI1OTE0OA==", "bodyText": "Q - this is for proxy support over Amqp_ws, then why don't we use socks proxy? Is that a proton-j requirement?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423259148", "createdAt": "2020-05-11T19:11:14Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ProxyOptions.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+\n+import java.net.InetSocketAddress;\n+import java.net.Proxy;\n+\n+/**\n+ * The settings supported by this SDK when communicating to IoT Hub through a proxy. HTTP proxies are supported by this SDK,\n+ * but only if the proxy does not require authentication.\n+ */\n+public class ProxyOptions\n+{\n+    @Getter\n+    private Proxy proxy;\n+\n+    /**\n+     * Create the proxy options for connecting to a proxy\n+     * @param proxy the proxy to communicate through\n+     */\n+    public ProxyOptions(Proxy proxy)\n+    {\n+        if (proxy == null)\n+        {\n+            throw new IllegalArgumentException(\"Proxy cannot be null\");\n+        }\n+\n+        if (proxy.type() != Proxy.Type.HTTP)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDU1ODY2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409455866", "createdAt": "2020-05-11T19:13:44Z", "commit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxMzo0NVrOGTpxLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxMzo0NVrOGTpxLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MDQ2MQ==", "bodyText": "there is a whole lot happening here, can we move this to the line above:\nthis.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423260461", "createdAt": "2020-05-11T19:13:45Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -1604,7 +1612,7 @@ private JobProperties ProcessJobResponse(HttpResponse response) throws IotHubExc\n \n     private HttpRequest CreateRequest(URL url, HttpMethod method, byte[] payload, String sasToken) throws IOException\n     {\n-        HttpRequest request = new HttpRequest(url, method, payload, proxy);\n+        HttpRequest request = new HttpRequest(url, method, payload, this.options != null && this.options.getProxyOptions() != null ? this.options.getProxyOptions().getProxy() : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDU4NTg3", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409458587", "createdAt": "2020-05-11T19:17:48Z", "commit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxNzo0OFrOGTp56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToxNzo0OFrOGTp56g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2MjY5OA==", "bodyText": "Why not add @AllArgsConstructor for 1 line initialization.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423262698", "createdAt": "2020-05-11T19:17:48Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+/**\n+ * Configurable options for all registry manager operations\n+ */\n+public class RegistryManagerOptions\n+{\n+    /**\n+     * The options that specify what proxy to tunnel through. If null, no proxy will be used\n+     */\n+    @Getter\n+    @Setter\n+    private ProxyOptions proxyOptions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDYxNjg2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409461686", "createdAt": "2020-05-11T19:22:35Z", "commit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToyMjozNVrOGTqDlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOToyMjozNVrOGTqDlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI2NTE3NA==", "bodyText": "same, here as well", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423265174", "createdAt": "2020-05-11T19:22:35Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -76,9 +102,15 @@ protected ServiceClient(IotHubConnectionString iotHubConnectionString, IotHubSer\n         this.userName = iotHubConnectionString.getUserString();\n         this.sasToken = iotHubServiceSasToken.toString();\n         this.iotHubServiceClientProtocol = iotHubServiceClientProtocol;\n+        this.options = options;\n+\n+        if (this.options != null && this.options.getProxyOptions() != null && this.iotHubServiceClientProtocol != IotHubServiceClientProtocol.AMQPS_WS)\n+        {\n+            throw new UnsupportedOperationException(\"Proxies are only supported over AMQPS_WS\");\n+        }\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_007: [The constructor shall create a new instance of AmqpSend object]\n-        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol);\n+        this.amqpMessageSender = new AmqpSend(hostName, userName, sasToken, this.iotHubServiceClientProtocol, options != null ? options.getProxyOptions() : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "880b4eaf04d28fb08f91bbbd6288aff9be6b3457"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ed8405e22275bb4c3f010e8d004e3ed2787f947", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4ed8405e22275bb4c3f010e8d004e3ed2787f947", "committedDate": "2020-05-11T19:29:15Z", "message": "cr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5aa6d7af245b2b8cf63c3c5fd331075448113e2", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d5aa6d7af245b2b8cf63c3c5fd331075448113e2", "committedDate": "2020-05-11T19:43:15Z", "message": "builder pattern for options objects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7982977ee7fcbb8714a398a69c2efe66116a245e", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/7982977ee7fcbb8714a398a69c2efe66116a245e", "committedDate": "2020-05-11T19:51:50Z", "message": "clientOptions objects are now never null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NDgyNzQz", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409482743", "createdAt": "2020-05-11T19:54:15Z", "commit": {"oid": "7982977ee7fcbb8714a398a69c2efe66116a245e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo1NDoxNVrOGTrEZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxOTo1NDoxNVrOGTrEZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI4MTc2Nw==", "bodyText": "this now needs to be options.getProxyOptions() != null", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423281767", "createdAt": "2020-05-11T19:54:15Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -229,6 +261,11 @@ public void send(String deviceId, String moduleId, Message message) throws IOExc\n      */\n     @Deprecated public FeedbackReceiver getFeedbackReceiver(String deviceId)\n     {\n+        if (options != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7982977ee7fcbb8714a398a69c2efe66116a245e"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb637df5877fdc16c6bec442e6ce3d3ba1f704e4", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/fb637df5877fdc16c6bec442e6ce3d3ba1f704e4", "committedDate": "2020-05-11T19:59:23Z", "message": "cr comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4902559e370cf739ef6d0e40b5d1af7f4a25c5ac", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4902559e370cf739ef6d0e40b5d1af7f4a25c5ac", "committedDate": "2020-05-11T20:01:27Z", "message": "more fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "275b49e410482d5c2c4a047e04e107e2a72dd213", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/275b49e410482d5c2c4a047e04e107e2a72dd213", "committedDate": "2020-05-11T20:10:22Z", "message": "This once hidden constructor needs to set options to the default value, too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/32add1d2970c47cda4ba1b99a1237b24674e66d6", "committedDate": "2020-05-11T20:14:00Z", "message": "deprecate this once hidden constructor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTAwNTky", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409500592", "createdAt": "2020-05-11T20:21:26Z", "commit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoyMToyNlrOGTr7ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoyMToyNlrOGTr7ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5NTg0NQ==", "bodyText": "what is this for? did we allow creation of registry manager without having to pass in even a connection string?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423295845", "createdAt": "2020-05-11T20:21:26Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManager.java", "diffHunk": "@@ -44,9 +42,16 @@\n     private ExecutorService executor;\n     private IotHubConnectionString iotHubConnectionString;\n \n-    @Getter\n-    @Setter\n-    private Proxy proxy;\n+    private RegistryManagerOptions options;\n+\n+    /**\n+     * As of release 1.22.0, replaced by {@link #createFromConnectionString()}\n+     */\n+    @Deprecated\n+    public RegistryManager()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d73bf84abf96e45ef4e60992a8a6013957079be", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/8d73bf84abf96e45ef4e60992a8a6013957079be", "committedDate": "2020-05-11T20:33:34Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTEwNDQz", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409510443", "createdAt": "2020-05-11T20:35:52Z", "commit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNTo1MlrOGTsZ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNTo1MlrOGTsZ1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMzYzOA==", "bodyText": "nit: no longer required: ctrl+shift+o :)", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423303638", "createdAt": "2020-05-11T20:35:52Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/RegistryManagerOptions.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTEwNzE5", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409510719", "createdAt": "2020-05-11T20:36:17Z", "commit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNjoxOFrOGTsarQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDozNjoxOFrOGTsarQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMwMzg1Mw==", "bodyText": "same, no longer required", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423303853", "createdAt": "2020-05-11T20:36:18Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClientOptions.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package com.microsoft.azure.sdk.iot.service;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32add1d2970c47cda4ba1b99a1237b24674e66d6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36a937dcb392939ce4bf98a159d7830b91c8e833", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/36a937dcb392939ce4bf98a159d7830b91c8e833", "committedDate": "2020-05-11T20:36:44Z", "message": "cleanup imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTEyNTU5", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409512559", "createdAt": "2020-05-11T20:39:02Z", "commit": {"oid": "36a937dcb392939ce4bf98a159d7830b91c8e833"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8376adc0fc4a1f382b598c883dbee9d5a106018c", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/8376adc0fc4a1f382b598c883dbee9d5a106018c", "committedDate": "2020-05-11T20:52:21Z", "message": "more cr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b88e890f8b9585ec13c4b599015f34d9d4914b6", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/6b88e890f8b9585ec13c4b599015f34d9d4914b6", "committedDate": "2020-05-11T21:46:24Z", "message": "fix constructors taking options directly not checking for null options"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTYwMjUz", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409560253", "createdAt": "2020-05-11T21:56:57Z", "commit": {"oid": "6b88e890f8b9585ec13c4b599015f34d9d4914b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1Njo1N1rOGTu1EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo1Njo1N1rOGTu1EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM0MzM3Nw==", "bodyText": "Does service client works on anything other than AMQP ? If I re-call it doesn't. Then what purpose does iotHubServiceClientProtocol serve?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#discussion_r423343377", "createdAt": "2020-05-11T21:56:57Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/ServiceClient.java", "diffHunk": "@@ -38,18 +40,36 @@\n      * @throws IOException This exception is thrown if the object creation failed\n      */\n     public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol) throws IOException\n+    {\n+        return createFromConnectionString(connectionString, iotHubServiceClientProtocol, ServiceClientOptions.builder().build());\n+    }\n+\n+    /**\n+     * Create ServiceClient from the specified connection string\n+     * @param iotHubServiceClientProtocol  protocol to use\n+     * @param connectionString The connection string for the IotHub\n+     * @param options The connection options to use when connecting to the service. May be null if no custom options will be used.\n+     * @return The created ServiceClient object\n+     * @throws IOException This exception is thrown if the object creation failed\n+     */\n+    public static ServiceClient createFromConnectionString(String connectionString, IotHubServiceClientProtocol iotHubServiceClientProtocol, ServiceClientOptions options) throws IOException\n     {\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_001: [The constructor shall throw IllegalArgumentException if the input string is empty or null]\n         if (Tools.isNullOrEmpty(connectionString))\n         {\n             throw new IllegalArgumentException(connectionString);\n         }\n \n+        if (options == null)\n+        {\n+            throw new IllegalArgumentException(\"ServiceClientOptions cannot be null for this constructor\");\n+        }\n+\n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_002: [The constructor shall create IotHubConnectionString object using the IotHubConnectionStringBuilder]\n         IotHubConnectionString iotHubConnectionString = IotHubConnectionStringBuilder.createConnectionString(connectionString);\n \n         // Codes_SRS_SERVICE_SDK_JAVA_SERVICECLIENT_12_003: [The constructor shall create a new instance of ServiceClient using the created IotHubConnectionString object and return with it]\n-        ServiceClient iotServiceClient = new ServiceClient(iotHubConnectionString, iotHubServiceClientProtocol);\n+        ServiceClient iotServiceClient = new ServiceClient(iotHubConnectionString, iotHubServiceClientProtocol, options);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b88e890f8b9585ec13c4b599015f34d9d4914b6"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTYxODcz", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/773#pullrequestreview-409561873", "createdAt": "2020-05-11T22:00:09Z", "commit": {"oid": "6b88e890f8b9585ec13c4b599015f34d9d4914b6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1629, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}