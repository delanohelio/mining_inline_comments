{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMTU5NDgz", "number": 1012, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjo0ODozN1rOFAiICA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozNDoyOVrOFAjGpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTAzNDMyOnYy", "diffSide": "LEFT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjo0ODozN1rOH-4ooA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzoxMTowOFrOH-5aOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwMTY2NA==", "bodyText": "it looks like we were trying really hard to make sure the executorService gets terminated before nulling it out.\nWhat are the consequences of not waiting for these anymore?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/1012#discussion_r535701664", "createdAt": "2020-12-03T22:48:37Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -740,35 +740,13 @@ else if (this.connection.getLocalState() == EndpointState.CLOSED && this.connect\n         }\n     }\n \n-    private void executorServicesCleanup() throws TransportException\n+    private void executorServicesCleanup()\n     {\n         if (this.executorService != null)\n         {\n             log.trace(\"Shutdown of executor service has started\");\n-            this.executorService.shutdown();\n-            try\n-            {\n-                // Wait a while for existing tasks to terminate\n-                if (!this.executorService.awaitTermination(MAX_WAIT_TO_TERMINATE_EXECUTOR, TimeUnit.SECONDS))\n-                {\n-                    this.executorService.shutdownNow(); // Cancel currently executing tasks\n-                    // Wait a while for tasks to respond to being cancelled\n-                    if (!this.executorService.awaitTermination(MAX_WAIT_TO_TERMINATE_EXECUTOR, TimeUnit.SECONDS))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7fadac092f09359b7aa9d005fbf69893aa3db6b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwNzIxOQ==", "bodyText": "Nothing really. This executor was used to manage the one worker thread that we extend to proton-j to run the AMQP connection. When this function is called, we are deliberately closing everything, including this thread pool.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/1012#discussion_r535707219", "createdAt": "2020-12-03T22:56:37Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -740,35 +740,13 @@ else if (this.connection.getLocalState() == EndpointState.CLOSED && this.connect\n         }\n     }\n \n-    private void executorServicesCleanup() throws TransportException\n+    private void executorServicesCleanup()\n     {\n         if (this.executorService != null)\n         {\n             log.trace(\"Shutdown of executor service has started\");\n-            this.executorService.shutdown();\n-            try\n-            {\n-                // Wait a while for existing tasks to terminate\n-                if (!this.executorService.awaitTermination(MAX_WAIT_TO_TERMINATE_EXECUTOR, TimeUnit.SECONDS))\n-                {\n-                    this.executorService.shutdownNow(); // Cancel currently executing tasks\n-                    // Wait a while for tasks to respond to being cancelled\n-                    if (!this.executorService.awaitTermination(MAX_WAIT_TO_TERMINATE_EXECUTOR, TimeUnit.SECONDS))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwMTY2NA=="}, "originalCommit": {"oid": "e7fadac092f09359b7aa9d005fbf69893aa3db6b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcxNDM2Mg==", "bodyText": "For reference, this method is only called when opening the connection fails or when we have finished closing a successful AMQP connection. In both cases, there is nothing left that we need to be careful about cleaning up in the AMQP library.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/1012#discussion_r535714362", "createdAt": "2020-12-03T23:11:08Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -740,35 +740,13 @@ else if (this.connection.getLocalState() == EndpointState.CLOSED && this.connect\n         }\n     }\n \n-    private void executorServicesCleanup() throws TransportException\n+    private void executorServicesCleanup()\n     {\n         if (this.executorService != null)\n         {\n             log.trace(\"Shutdown of executor service has started\");\n-            this.executorService.shutdown();\n-            try\n-            {\n-                // Wait a while for existing tasks to terminate\n-                if (!this.executorService.awaitTermination(MAX_WAIT_TO_TERMINATE_EXECUTOR, TimeUnit.SECONDS))\n-                {\n-                    this.executorService.shutdownNow(); // Cancel currently executing tasks\n-                    // Wait a while for tasks to respond to being cancelled\n-                    if (!this.executorService.awaitTermination(MAX_WAIT_TO_TERMINATE_EXECUTOR, TimeUnit.SECONDS))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcwMTY2NA=="}, "originalCommit": {"oid": "e7fadac092f09359b7aa9d005fbf69893aa3db6b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTE5NDYyOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozNDoyOVrOH-6B_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwMDoyMzo0NVrOH-7P1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNDU0MA==", "bodyText": "Q - from where will this message be retried?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/1012#discussion_r535724540", "createdAt": "2020-12-03T23:34:29Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionHandler.java", "diffHunk": "@@ -355,6 +355,26 @@ else if (subscriptionType == DEVICE_OPERATION_TWIN_SUBSCRIBE_DESIRED_PROPERTIES_\n                         || senderLinkHandler instanceof AmqpsTwinSenderLinkHandler && messageType == DEVICE_TWIN\n                         || senderLinkHandler instanceof AmqpsMethodsSenderLinkHandler && messageType == DEVICE_METHODS)\n                 {\n+                    if (messageType == DEVICE_TWIN)\n+                    {\n+                        if (explicitInProgressTwinSubscriptionMessage != null)\n+                        {\n+                            // Don't send any twin messages while a twin subscription is in progress. Wait until the subscription\n+                            // has been acknowledged by the service before sending it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "500b68fdf18f5eef263c19fdc4e8f317a2ca10c1"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTc0NDQ2OQ==", "bodyText": "The function that calls this checks to see if the message send was successful. If it wasn't, it requeues the message. that's why we return false here to mimic a sending failure", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/1012#discussion_r535744469", "createdAt": "2020-12-04T00:23:45Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionHandler.java", "diffHunk": "@@ -355,6 +355,26 @@ else if (subscriptionType == DEVICE_OPERATION_TWIN_SUBSCRIBE_DESIRED_PROPERTIES_\n                         || senderLinkHandler instanceof AmqpsTwinSenderLinkHandler && messageType == DEVICE_TWIN\n                         || senderLinkHandler instanceof AmqpsMethodsSenderLinkHandler && messageType == DEVICE_METHODS)\n                 {\n+                    if (messageType == DEVICE_TWIN)\n+                    {\n+                        if (explicitInProgressTwinSubscriptionMessage != null)\n+                        {\n+                            // Don't send any twin messages while a twin subscription is in progress. Wait until the subscription\n+                            // has been acknowledged by the service before sending it.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNDU0MA=="}, "originalCommit": {"oid": "500b68fdf18f5eef263c19fdc4e8f317a2ca10c1"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2644, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}