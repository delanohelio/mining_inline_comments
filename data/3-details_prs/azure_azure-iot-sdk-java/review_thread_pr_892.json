{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDU1NzUw", "number": 892, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMDowMjozNlrOEX10EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMDowMjozNlrOEX10EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNDM0Mzg1OnYy", "diffSide": "RIGHT", "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/provisioning/setup/ProvisioningCommon.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMDowMjozN1rOG_26Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwMDowNTo1OVrOG_2-XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMzA3MQ==", "bodyText": "Doesn't this add delay of more than 4 minutes our tests where we keep querying to see if device is provisioned?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/892#discussion_r469613071", "createdAt": "2020-08-13T00:02:37Z", "author": {"login": "bikamani"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/provisioning/setup/ProvisioningCommon.java", "diffHunk": "@@ -448,11 +449,25 @@ private void assertProvisionedDeviceWorks(String iothubUri, String deviceId) thr\n         }\n     }\n \n-    protected void assertProvisionedDeviceCapabilitiesAreExpected(DeviceCapabilities expectedDeviceCapabilities, String provisionedHubConnectionString) throws IOException, IotHubException\n-    {\n+    protected void assertProvisionedDeviceCapabilitiesAreExpected(DeviceCapabilities expectedDeviceCapabilities, String provisionedHubConnectionString) throws IOException, IotHubException, InterruptedException {\n         DeviceTwin deviceTwin = DeviceTwin.createFromConnectionString(provisionedHubConnectionString);\n-        Query query = deviceTwin.queryTwin(\"SELECT * FROM devices WHERE deviceId = '\" + testInstance.provisionedDeviceId +\"'\");\n-        assertTrue(CorrelationDetailsLoggingAssert.buildExceptionMessageDpsIndividualOrGroup(\"Provisioned device \" + testInstance.provisionedDeviceId + \"not found in expected hub\", getHostName(provisioningServiceConnectionString), testInstance.groupId, testInstance.registrationId), deviceTwin.hasNextDeviceTwin(query));\n+\n+        boolean deviceFoundInCorrectHub = false;\n+        Query query = null;\n+        long startTime = System.currentTimeMillis();\n+        while (!deviceFoundInCorrectHub)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5eeb15cb746d7b50657d4e01beb7f7ce3b8deb0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxNDE3Mg==", "bodyText": "Only if the device never becomes queryable in this hub, which should never happen", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/892#discussion_r469614172", "createdAt": "2020-08-13T00:05:59Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/provisioning/setup/ProvisioningCommon.java", "diffHunk": "@@ -448,11 +449,25 @@ private void assertProvisionedDeviceWorks(String iothubUri, String deviceId) thr\n         }\n     }\n \n-    protected void assertProvisionedDeviceCapabilitiesAreExpected(DeviceCapabilities expectedDeviceCapabilities, String provisionedHubConnectionString) throws IOException, IotHubException\n-    {\n+    protected void assertProvisionedDeviceCapabilitiesAreExpected(DeviceCapabilities expectedDeviceCapabilities, String provisionedHubConnectionString) throws IOException, IotHubException, InterruptedException {\n         DeviceTwin deviceTwin = DeviceTwin.createFromConnectionString(provisionedHubConnectionString);\n-        Query query = deviceTwin.queryTwin(\"SELECT * FROM devices WHERE deviceId = '\" + testInstance.provisionedDeviceId +\"'\");\n-        assertTrue(CorrelationDetailsLoggingAssert.buildExceptionMessageDpsIndividualOrGroup(\"Provisioned device \" + testInstance.provisionedDeviceId + \"not found in expected hub\", getHostName(provisioningServiceConnectionString), testInstance.groupId, testInstance.registrationId), deviceTwin.hasNextDeviceTwin(query));\n+\n+        boolean deviceFoundInCorrectHub = false;\n+        Query query = null;\n+        long startTime = System.currentTimeMillis();\n+        while (!deviceFoundInCorrectHub)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTYxMzA3MQ=="}, "originalCommit": {"oid": "c5eeb15cb746d7b50657d4e01beb7f7ce3b8deb0"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2677, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}