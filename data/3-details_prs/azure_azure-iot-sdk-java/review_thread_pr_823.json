{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMjU3OTM5", "number": 823, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo1MDoxMlrOEI77jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo1MzoxNVrOEI7-wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODA1OTY0OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo1MDoxMlrOGpNCww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMzowODowN1rOGpOuXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1ODQ5OQ==", "bodyText": "This is a tricky constructor in practice. Right now, AMQP is the default protocol, and the modelId changes are only applicable for MQTT. ClientOptions does encapsulate the SSLContext though, which may make this constructor worthwile. Can you double check that the SSLContext is used correctly from this constructor?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/823#discussion_r445858499", "createdAt": "2020-06-25T21:50:12Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java", "diffHunk": "@@ -185,13 +185,36 @@ public static ModuleClient createFromEnvironment() throws ModuleClientException\n         return createFromEnvironment(IotHubClientProtocol.AMQPS);\n     }\n \n+    /**\n+     * Create a module client instance from your environment variables\n+     * @param clientOptions The options that allow configuration of the module client instance during initialization\n+     * @return the created module client instance\n+     * @throws ModuleClientException if the module client cannot be created\n+     */\n+    public static ModuleClient createFromEnvironment(ClientOptions clientOptions) throws ModuleClientException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adca73d57b39aaac49ccc790fe00df97d070dd4d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1OTkxNw==", "bodyText": "Especially check the case when the user provides certs in the environment variables", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/823#discussion_r445859917", "createdAt": "2020-06-25T21:53:38Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java", "diffHunk": "@@ -185,13 +185,36 @@ public static ModuleClient createFromEnvironment() throws ModuleClientException\n         return createFromEnvironment(IotHubClientProtocol.AMQPS);\n     }\n \n+    /**\n+     * Create a module client instance from your environment variables\n+     * @param clientOptions The options that allow configuration of the module client instance during initialization\n+     * @return the created module client instance\n+     * @throws ModuleClientException if the module client cannot be created\n+     */\n+    public static ModuleClient createFromEnvironment(ClientOptions clientOptions) throws ModuleClientException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1ODQ5OQ=="}, "originalCommit": {"oid": "adca73d57b39aaac49ccc790fe00df97d070dd4d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg4MzAwMg==", "bodyText": "yes right, checked, ssl context will be set correctly with this constructor by DeviceClientConfig", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/823#discussion_r445883002", "createdAt": "2020-06-25T22:58:03Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java", "diffHunk": "@@ -185,13 +185,36 @@ public static ModuleClient createFromEnvironment() throws ModuleClientException\n         return createFromEnvironment(IotHubClientProtocol.AMQPS);\n     }\n \n+    /**\n+     * Create a module client instance from your environment variables\n+     * @param clientOptions The options that allow configuration of the module client instance during initialization\n+     * @return the created module client instance\n+     * @throws ModuleClientException if the module client cannot be created\n+     */\n+    public static ModuleClient createFromEnvironment(ClientOptions clientOptions) throws ModuleClientException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1ODQ5OQ=="}, "originalCommit": {"oid": "adca73d57b39aaac49ccc790fe00df97d070dd4d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg4NjA0NQ==", "bodyText": "What happens if I pass in an SSLContext in the clientOptions and have extra trusted certs in my environment variables? Does the SSLContext take precedence? If so, you'll need to add a note in the javadoc about that", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/823#discussion_r445886045", "createdAt": "2020-06-25T23:08:07Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/ModuleClient.java", "diffHunk": "@@ -185,13 +185,36 @@ public static ModuleClient createFromEnvironment() throws ModuleClientException\n         return createFromEnvironment(IotHubClientProtocol.AMQPS);\n     }\n \n+    /**\n+     * Create a module client instance from your environment variables\n+     * @param clientOptions The options that allow configuration of the module client instance during initialization\n+     * @return the created module client instance\n+     * @throws ModuleClientException if the module client cannot be created\n+     */\n+    public static ModuleClient createFromEnvironment(ClientOptions clientOptions) throws ModuleClientException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1ODQ5OQ=="}, "originalCommit": {"oid": "adca73d57b39aaac49ccc790fe00df97d070dd4d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODA2Nzg0OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/ModuleClientTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTo1MzoxNVrOGpNHzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzozOToyOVrOGppTdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1OTc4OA==", "bodyText": "use mqtt here instead", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/823#discussion_r445859788", "createdAt": "2020-06-25T21:53:15Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/ModuleClientTest.java", "diffHunk": "@@ -135,6 +138,38 @@ public void constructorThrowsForHTTP() throws URISyntaxException, ModuleClientEx\n         new ModuleClient(connectionString, IotHubClientProtocol.HTTPS);\n     }\n \n+    @Test\n+    public void constructorWithModelIdSuccess(final @Mocked System mockedSystem) throws URISyntaxException, IOException, ModuleClientException {\n+        //arrange\n+        final IotHubClientProtocol protocol = IotHubClientProtocol.AMQPS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adca73d57b39aaac49ccc790fe00df97d070dd4d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg4MzA0Mg==", "bodyText": "will do", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/823#discussion_r445883042", "createdAt": "2020-06-25T22:58:10Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/ModuleClientTest.java", "diffHunk": "@@ -135,6 +138,38 @@ public void constructorThrowsForHTTP() throws URISyntaxException, ModuleClientEx\n         new ModuleClient(connectionString, IotHubClientProtocol.HTTPS);\n     }\n \n+    @Test\n+    public void constructorWithModelIdSuccess(final @Mocked System mockedSystem) throws URISyntaxException, IOException, ModuleClientException {\n+        //arrange\n+        final IotHubClientProtocol protocol = IotHubClientProtocol.AMQPS;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1OTc4OA=="}, "originalCommit": {"oid": "adca73d57b39aaac49ccc790fe00df97d070dd4d"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMyMTUyNw==", "bodyText": "Rethinking about this, it is actually fine to leave it as it is. Here we just want to make sure model id is set correctly with this constructor no matter which protocol", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/823#discussion_r446321527", "createdAt": "2020-06-26T17:39:29Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/device/ModuleClientTest.java", "diffHunk": "@@ -135,6 +138,38 @@ public void constructorThrowsForHTTP() throws URISyntaxException, ModuleClientEx\n         new ModuleClient(connectionString, IotHubClientProtocol.HTTPS);\n     }\n \n+    @Test\n+    public void constructorWithModelIdSuccess(final @Mocked System mockedSystem) throws URISyntaxException, IOException, ModuleClientException {\n+        //arrange\n+        final IotHubClientProtocol protocol = IotHubClientProtocol.AMQPS;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg1OTc4OA=="}, "originalCommit": {"oid": "adca73d57b39aaac49ccc790fe00df97d070dd4d"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2864, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}