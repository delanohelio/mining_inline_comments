{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNzYzNjYx", "number": 836, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjo0NDoyMVrOELEr2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzo0MDoyOFrOELFPbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDQ2NTU1OnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjo0NDoyMVrOGse8KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzoxMzoxMlrOGsfYoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NzQ0OA==", "bodyText": "Is this the name we want to use?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449297448", "createdAt": "2020-07-02T22:44:21Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NzY3MA==", "bodyText": "If it is targeting thermostat, wouldn't it be better to call it thermostat (Or the name that we used on Device)?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449297670", "createdAt": "2020-07-02T22:45:12Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NzQ0OA=="}, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5OTY1NQ==", "bodyText": "Open to suggestions here. We were planning to add NoComponent and Component samples based on sync with Eric. This name seemed to point that out so I kept it this way.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449299655", "createdAt": "2020-07-02T22:53:04Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NzQ0OA=="}, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMDY5MA==", "bodyText": "How do you differentiate Component and NoComponent? I do agree it might be nice to have the name Thermostat somewhere.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449300690", "createdAt": "2020-07-02T22:56:58Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NzQ0OA=="}, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwMDc5Mw==", "bodyText": "Or maybe we can just have one sample and call it thermostat and a switch for Component/Nocomponent?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449300793", "createdAt": "2020-07-02T22:57:23Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NzQ0OA=="}, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwNDczNg==", "bodyText": "Updated based on discussion to Thermostat", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449304736", "createdAt": "2020-07-02T23:13:12Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NzQ0OA=="}, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDQ3MTUzOnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjo0NzoyOFrOGse_Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjo1MjoyN1rOGsfEOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5ODI3NA==", "bodyText": "Can we add a readme explaining the usage of both Device and Service samples togther? And a brief explanation of both the samples?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449298274", "createdAt": "2020-07-02T22:47:28Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5OTUxMw==", "bodyText": "That is a TODO for sure. We have not discussed where to add all that info but it is something we need to do. It would be another PR though.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449299513", "createdAt": "2020-07-02T22:52:27Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5ODI3NA=="}, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDQ3MjUxOnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjo0ODowM1rOGse_7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzozMTo0N1rOGsfpWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5ODQxMg==", "bodyText": "Is this suppose to be DeviceConString or IotHub connection string?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449298412", "createdAt": "2020-07-02T22:48:03Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {\n+    private static final String propertyName = \"targetTemperature\";\n+    private static final double propertyValue = 75.5;\n+    private static final String methodName = \"reboot\";\n+    private static final Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n+    private static final Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n+\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"Starting sample...\");\n+        // get user inputs from environment variables\n+        String iotHubConnectionString = System.getenv(\"IOTHUB_DEVICE_CONNECTION_STRING\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5OTE4NQ==", "bodyText": "This is hub connection string. I will update the env variable name to be appropriate.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449299185", "createdAt": "2020-07-02T22:51:12Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {\n+    private static final String propertyName = \"targetTemperature\";\n+    private static final double propertyValue = 75.5;\n+    private static final String methodName = \"reboot\";\n+    private static final Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n+    private static final Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n+\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"Starting sample...\");\n+        // get user inputs from environment variables\n+        String iotHubConnectionString = System.getenv(\"IOTHUB_DEVICE_CONNECTION_STRING\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5ODQxMg=="}, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMwOTAxNw==", "bodyText": "env var alignment with other SDKs:\n\n\n\nDevice\nIOTHUB_DEVICE_CONNECTION_STRING\n\n\n\n\nService\nIOTHUB_CONNECTION_STRING\n\n\n\n@bikamani FYI, as well", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449309017", "createdAt": "2020-07-02T23:31:47Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/PnPNoComponentSample.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class PnPNoComponentSample {\n+    private static final String propertyName = \"targetTemperature\";\n+    private static final double propertyValue = 75.5;\n+    private static final String methodName = \"reboot\";\n+    private static final Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n+    private static final Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n+\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"Starting sample...\");\n+        // get user inputs from environment variables\n+        String iotHubConnectionString = System.getenv(\"IOTHUB_DEVICE_CONNECTION_STRING\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5ODQxMg=="}, "originalCommit": {"oid": "651aa0bb352de60f89668288aee724c3ff330ba1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDU1NjYxOnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/Thermostat.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzo0MDoyOFrOGsfxDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzo1NzoxNFrOGsgADQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxMDk4OA==", "bodyText": "It would be good to add way to create payload based on user input as you have for methodname", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449310988", "createdAt": "2020-07-02T23:40:28Z", "author": {"login": "bikamani"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/Thermostat.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class Thermostat {\n+    private static final String propertyName = \"targetTemperature\";\n+    private static final double propertyValue = 75.5;\n+    private static final String methodName = \"reboot\";\n+    private static final Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n+    private static final Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n+\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"Starting sample...\");\n+\n+        // get user inputs from environment variables\n+        String iotHubConnectionString = System.getenv(\"IOTHUB_CONNECTION_STRING\");\n+        String deviceId = System.getenv(\"DEVICE_ID\");\n+\n+        // connect to the IotHub\n+        DeviceTwin twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\n+        DeviceTwinDevice device = new DeviceTwinDevice(deviceId);\n+\n+        // get the device twin\n+        System.out.println(\"Getting the Device twin\");\n+        twinClient.getTwin(device);\n+        // display the pnp model id property of the device\n+        System.out.println(\"The pnp model id is: \" + device.getModelId());\n+\n+        // update the device twin properties\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        desiredProperties.add(new Pair(propertyName, propertyValue));\n+        device.setDesiredProperties(desiredProperties);\n+        System.out.println(\"Updating Device twin (targetTemperature, 75)\");\n+        twinClient.updateTwin(device);\n+        System.out.println(\"The targetTemperature is set to: \" + device.getDesiredProperties().iterator().next().getValue());\n+\n+        // invoke command on the device\n+        System.out.println(\"Invoking Reboot command\");\n+        DeviceMethod methodClient = DeviceMethod.createFromConnectionString(iotHubConnectionString);\n+        Map<String, Object> payload = new HashMap<String, Object>()\n+        {\n+            {\n+                put(\"delay\", 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e7a6a96c951db1e109889227d9d3f79484069b8"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxNDgyOQ==", "bodyText": "I will do this in next PR when we change the payload to match the new one.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/836#discussion_r449314829", "createdAt": "2020-07-02T23:57:14Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/Thermostat.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.TimeUnit;\n+\n+public class Thermostat {\n+    private static final String propertyName = \"targetTemperature\";\n+    private static final double propertyValue = 75.5;\n+    private static final String methodName = \"reboot\";\n+    private static final Long responseTimeout = TimeUnit.SECONDS.toSeconds(200);\n+    private static final Long connectTimeout = TimeUnit.SECONDS.toSeconds(5);\n+\n+    public static void main(String[] args) throws Exception {\n+        System.out.println(\"Starting sample...\");\n+\n+        // get user inputs from environment variables\n+        String iotHubConnectionString = System.getenv(\"IOTHUB_CONNECTION_STRING\");\n+        String deviceId = System.getenv(\"DEVICE_ID\");\n+\n+        // connect to the IotHub\n+        DeviceTwin twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\n+        DeviceTwinDevice device = new DeviceTwinDevice(deviceId);\n+\n+        // get the device twin\n+        System.out.println(\"Getting the Device twin\");\n+        twinClient.getTwin(device);\n+        // display the pnp model id property of the device\n+        System.out.println(\"The pnp model id is: \" + device.getModelId());\n+\n+        // update the device twin properties\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        desiredProperties.add(new Pair(propertyName, propertyValue));\n+        device.setDesiredProperties(desiredProperties);\n+        System.out.println(\"Updating Device twin (targetTemperature, 75)\");\n+        twinClient.updateTwin(device);\n+        System.out.println(\"The targetTemperature is set to: \" + device.getDesiredProperties().iterator().next().getValue());\n+\n+        // invoke command on the device\n+        System.out.println(\"Invoking Reboot command\");\n+        DeviceMethod methodClient = DeviceMethod.createFromConnectionString(iotHubConnectionString);\n+        Map<String, Object> payload = new HashMap<String, Object>()\n+        {\n+            {\n+                put(\"delay\", 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxMDk4OA=="}, "originalCommit": {"oid": "7e7a6a96c951db1e109889227d9d3f79484069b8"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2885, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}