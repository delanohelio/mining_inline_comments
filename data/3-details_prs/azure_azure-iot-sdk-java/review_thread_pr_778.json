{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTc1NTk5", "number": 778, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo0OTowNVrOD8NpDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyMjoxOFrOD8OT9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDY0NjU1OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo0OTowNVrOGVBDyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzoxNjozNFrOGVGv_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MDYzMw==", "bodyText": "Without the above changes, this ack handling logic would fall to the else block and log an error", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424690633", "createdAt": "2020-05-13T19:49:05Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -688,6 +689,11 @@ else if (remoteState instanceof Modified || remoteState instanceof Released || r\n                             this.listener.onMessageSent(inProgressMessages.remove(deliveryTag), transportException);\n                         }\n                     }\n+                    else if (this.inProgressSubscriptionMessages.containsKey(deliveryTag))\n+                    {\n+                        SubscriptionType subscriptionType = this.inProgressSubscriptionMessages.remove(deliveryTag);\n+                        log.debug(\"Successfully re-sent amqp subscription message of type {}\", subscriptionType);\n+                    }\n                     else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcyNTY5OQ==", "bodyText": "Why does the log say: \"re-sent amqp subscription message\"?\nI thought what we do here is -> if we receive an ack from service for the subscription message, we remove it from our internal queue, so as to not resend it. Is that not correct?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424725699", "createdAt": "2020-05-13T20:55:48Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -688,6 +689,11 @@ else if (remoteState instanceof Modified || remoteState instanceof Released || r\n                             this.listener.onMessageSent(inProgressMessages.remove(deliveryTag), transportException);\n                         }\n                     }\n+                    else if (this.inProgressSubscriptionMessages.containsKey(deliveryTag))\n+                    {\n+                        SubscriptionType subscriptionType = this.inProgressSubscriptionMessages.remove(deliveryTag);\n+                        log.debug(\"Successfully re-sent amqp subscription message of type {}\", subscriptionType);\n+                    }\n                     else", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MDYzMw=="}, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1OTc1OQ==", "bodyText": "@timtay-microsoft : A question \u270b", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424759759", "createdAt": "2020-05-13T22:09:42Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -688,6 +689,11 @@ else if (remoteState instanceof Modified || remoteState instanceof Released || r\n                             this.listener.onMessageSent(inProgressMessages.remove(deliveryTag), transportException);\n                         }\n                     }\n+                    else if (this.inProgressSubscriptionMessages.containsKey(deliveryTag))\n+                    {\n+                        SubscriptionType subscriptionType = this.inProgressSubscriptionMessages.remove(deliveryTag);\n+                        log.debug(\"Successfully re-sent amqp subscription message of type {}\", subscriptionType);\n+                    }\n                     else", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MDYzMw=="}, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc4Mzg3MQ==", "bodyText": "This log statement gets executed when we receive an ack for an outstanding subscription message that we sent. It does get removed from the queue of outstanding messages as a result. The only odd thing about this subscription message is that it is sent at the session level. That's why this new queue needed to be added for messages like it", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424783871", "createdAt": "2020-05-13T23:16:34Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -688,6 +689,11 @@ else if (remoteState instanceof Modified || remoteState instanceof Released || r\n                             this.listener.onMessageSent(inProgressMessages.remove(deliveryTag), transportException);\n                         }\n                     }\n+                    else if (this.inProgressSubscriptionMessages.containsKey(deliveryTag))\n+                    {\n+                        SubscriptionType subscriptionType = this.inProgressSubscriptionMessages.remove(deliveryTag);\n+                        log.debug(\"Successfully re-sent amqp subscription message of type {}\", subscriptionType);\n+                    }\n                     else", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MDYzMw=="}, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDY1MzA2OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo1MDo1MVrOGVBHvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo1MDo1MVrOGVBHvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MTY0NQ==", "bodyText": "This new map will track outstanding subscription messages. I couldn't re-use the inProgressMessages map because there is no transport agnostic message to add to that map since we are creating the amqp message directly. Plus, messages in that map are expected to have a matching message in the IotHubTransport layer, which isn't the case for this special amqp-specific subscription message", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424691645", "createdAt": "2020-05-13T19:50:51Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -66,6 +66,7 @@\n     private final static int MAX_MESSAGE_PAYLOAD_SIZE = 256*1024; //max IoT Hub message size is 256 kb, so amqp websocket layer should buffer at least that much space\n     private final Boolean useWebSockets;\n     private final Map<Integer, com.microsoft.azure.sdk.iot.device.Message> inProgressMessages = new ConcurrentHashMap<>();\n+    private final Map<Integer, SubscriptionType> inProgressSubscriptionMessages = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDY1NDgwOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo1MToyOFrOGVBI-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo1MToyOFrOGVBI-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5MTk2Mw==", "bodyText": "This is orthogonal to the actual PR, but this log message had one too many spots for parameters, so I got rid of it", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424691963", "createdAt": "2020-05-13T19:51:28Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsDeviceOperations.java", "diffHunk": "@@ -394,7 +394,7 @@ protected boolean onLinkRemoteOpen(String linkName)\n         if (linkName.equals(this.getSenderLinkTag()))\n         {\n             this.amqpsSendLinkState = AmqpsDeviceOperationLinkState.OPENED;\n-            this.log.debug(\"{} sender link with link correlation id {} was successfully opened {}\", getLinkInstanceType(), this.linkCorrelationId);\n+            this.log.debug(\"{} sender link with link correlation id {} was successfully opened\", getLinkInstanceType(), this.linkCorrelationId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDc1MDEwOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyMDoxOFrOGVCFkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyNDoyMFrOGVCN7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNzQ3Mg==", "bodyText": "Update constructor comments to reflect new parameter.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424707472", "createdAt": "2020-05-13T20:20:18Z", "author": {"login": "barustum"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "diffHunk": "@@ -29,14 +29,16 @@\n \n     private List<UUID> cbsCorrelationIdList = Collections.synchronizedList(new ArrayList<UUID>());\n \n+    private SubscriptionMessageRequestSentCallback subscriptionMessageRequestSentCallback;\n+\n     /**\n      * Create logical device entity to handle all operation.\n      *\n      * @param deviceClientConfig the configuration of teh device.\n      * @param amqpsDeviceAuthentication the authentication object associated with the device.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwOTYxNA==", "bodyText": "Good catch", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424709614", "createdAt": "2020-05-13T20:24:20Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionDeviceOperation.java", "diffHunk": "@@ -29,14 +29,16 @@\n \n     private List<UUID> cbsCorrelationIdList = Collections.synchronizedList(new ArrayList<UUID>());\n \n+    private SubscriptionMessageRequestSentCallback subscriptionMessageRequestSentCallback;\n+\n     /**\n      * Create logical device entity to handle all operation.\n      *\n      * @param deviceClientConfig the configuration of teh device.\n      * @param amqpsDeviceAuthentication the authentication object associated with the device.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNzQ3Mg=="}, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDc1MDQwOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/SubscriptionMessageRequestSentCallback.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyMDoyM1rOGVCFxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyNDoyOVrOGVCOLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNzUyNQ==", "bodyText": "subscriptionType instead of deviceOperationType?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424707525", "createdAt": "2020-05-13T20:20:23Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/SubscriptionMessageRequestSentCallback.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.microsoft.azure.sdk.iot.device.transport.amqps;\n+\n+import com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceOperations;\n+\n+public interface SubscriptionMessageRequestSentCallback\n+{\n+    void onSubscriptionMessageSent(int deliveryTag, SubscriptionType deviceOperationType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwOTY3OA==", "bodyText": "Good catch", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424709678", "createdAt": "2020-05-13T20:24:29Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/SubscriptionMessageRequestSentCallback.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package com.microsoft.azure.sdk.iot.device.transport.amqps;\n+\n+import com.microsoft.azure.sdk.iot.device.DeviceTwin.DeviceOperations;\n+\n+public interface SubscriptionMessageRequestSentCallback\n+{\n+    void onSubscriptionMessageSent(int deliveryTag, SubscriptionType deviceOperationType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNzUyNQ=="}, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDc1NjM4OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyMjoxOFrOGVCJlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyMjoxOFrOGVCJlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwODUwMQ==", "bodyText": "Update comment header to include new parameter", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/778#discussion_r424708501", "createdAt": "2020-05-13T20:22:18Z", "author": {"login": "barustum"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsSessionManager.java", "diffHunk": "@@ -24,14 +24,15 @@\n \n     private AmqpsDeviceAuthentication amqpsDeviceAuthentication;\n     private ArrayList<AmqpsSessionDeviceOperation> amqpsDeviceSessionList = new ArrayList<>();\n+    private SubscriptionMessageRequestSentCallback subscriptionMessageRequestSentCallback;\n \n     /**\n      * Constructor that takes a device configuration.\n      *\n      * @param deviceClientConfig the device configuration to use for \n      *                           session management.\n      */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bc666a2ec610a0ae2f832c07a45c39edddc3008"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2792, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}