{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MDU4ODU1", "number": 841, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDozNjowNlrOEL4uPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxNjoxMFrOEMqFDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODk5MTMyOnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDozNjowNlrOGtrToQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwMDozNzoxM1rOGtrUsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0ODY0MQ==", "bodyText": "I was not very clear if helper meant helper class or method. Will move it to a class if that is what it means.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r450548641", "createdAt": "2020-07-07T00:36:06Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,143 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import javax.json.Json;\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.*;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json\n+public class TemperatureController {\n+    // Get connection string and device id inputs\n+    private static final String hubConnectionString  = \"HostName=summerrelease-test-04.private.azure-devices-int.net;SharedAccessKeyName=iothubowner;SharedAccessKey=lkm4Gvm5gN9nWDgK4Cwwwgj47q/8w1qxgF5bRbi6yNM=\";\n+    private static final String deviceId = \"vinageshpnpdevice1\";\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(hubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(hubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get a Twin and retrieves model Id set by Device client\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin - Update the thermostat1 component\n+        twin.setDesiredProperties(CreatePropertyPatch());\n+        System.out.println(\"Updating Device twin property\");\n+        twinClient.updateTwin(twin);\n+\n+        twinClient.getTwin(twin);\n+        System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n+    }\n+\n+    private static Set<Pair> CreatePropertyPatch()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9238951d14854658271888e220a85cf9300f4cad"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0ODkxMg==", "bodyText": "Based on discussion, these need to be in a helper class so I will move them.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r450548912", "createdAt": "2020-07-07T00:37:13Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,143 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import javax.json.Json;\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.*;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json\n+public class TemperatureController {\n+    // Get connection string and device id inputs\n+    private static final String hubConnectionString  = \"HostName=summerrelease-test-04.private.azure-devices-int.net;SharedAccessKeyName=iothubowner;SharedAccessKey=lkm4Gvm5gN9nWDgK4Cwwwgj47q/8w1qxgF5bRbi6yNM=\";\n+    private static final String deviceId = \"vinageshpnpdevice1\";\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(hubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(hubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get a Twin and retrieves model Id set by Device client\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin - Update the thermostat1 component\n+        twin.setDesiredProperties(CreatePropertyPatch());\n+        System.out.println(\"Updating Device twin property\");\n+        twinClient.updateTwin(twin);\n+\n+        twinClient.getTwin(twin);\n+        System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n+    }\n+\n+    private static Set<Pair> CreatePropertyPatch()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDU0ODY0MQ=="}, "originalCommit": {"oid": "9238951d14854658271888e220a85cf9300f4cad"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwOTM1Njk5OnYy", "diffSide": "RIGHT", "path": "pnp-helper/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwNDozMDozOVrOGtuuWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo0NTowNVrOGuHBkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYwNDYzMg==", "bodyText": "I'm not very sure of this in java. The IDE automatically added 1.0.1. Is this the latest? All the existing flattened.pom have this value and other places I see this:\n<dependency> <groupId>com.microsoft.azure.sdk.iot</groupId> <artifactId>iot-service-client-preview</artifactId> <version>${iot-service-client-version}</version> </dependency>", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r450604632", "createdAt": "2020-07-07T04:30:39Z", "author": {"login": "vinagesh"}, "path": "pnp-helper/pom.xml", "diffHunk": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>iot-sdk-java</artifactId>\n+        <groupId>com.microsoft.azure.sdk.iot</groupId>\n+        <version>0.26.0</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>pnp-helper</artifactId>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.google.code.gson</groupId>\n+            <artifactId>gson</artifactId>\n+            <version>2.8.1</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.microsoft.azure.sdk.iot</groupId>\n+            <artifactId>iot-service-client-preview</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "050ff763f171434c4c5dcedf5cd2ddfe1525ae8e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwMjc3MA==", "bodyText": "yes, 1.0.1 is the latest: https://mvnrepository.com/artifact/com.microsoft.azure.sdk.iot/iot-service-client-preview", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451002770", "createdAt": "2020-07-07T16:45:05Z", "author": {"login": "abhipsaMisra"}, "path": "pnp-helper/pom.xml", "diffHunk": "@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>iot-sdk-java</artifactId>\n+        <groupId>com.microsoft.azure.sdk.iot</groupId>\n+        <version>0.26.0</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>pnp-helper</artifactId>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.google.code.gson</groupId>\n+            <artifactId>gson</artifactId>\n+            <version>2.8.1</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.microsoft.azure.sdk.iot</groupId>\n+            <artifactId>iot-service-client-preview</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDYwNDYzMg=="}, "originalCommit": {"oid": "050ff763f171434c4c5dcedf5cd2ddfe1525ae8e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTg2MDY3OnYy", "diffSide": "RIGHT", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo0NzoyMVrOGuHHCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzozMTowNVrOGuIraw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNDE3MQ==", "bodyText": "I have plaved the helper under the package com.microsoft.azure.sdk.iot.pnphelpers: https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java\nWhat do you think of this as the folder/ package structure?\nI would rather not have the word \"samples\" in the package and folder path.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451004171", "createdAt": "2020-07-07T16:47:21Z", "author": {"login": "abhipsaMisra"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyNjk5Nw==", "bodyText": "Don't forget to include the log4j.properties file for this new sample so that users who run it can easily get logs from the SDK. The other other samples each have a resources folder that you can copy to do that\n\nLet me take a look at that. Thanks. Will reach out if I have any questions.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451026997", "createdAt": "2020-07-07T17:26:12Z", "author": {"login": "vinagesh"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNDE3MQ=="}, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyOTg2Nw==", "bodyText": "I have plaved the helper under the package com.microsoft.azure.sdk.iot.pnphelpers: https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java\nWhat do you think of this as the folder/ package structure?\nI would rather not have the word \"samples\" in the package and folder path.\n\nI think it is a good idea to get rid of the samples as we discussed that this might be released separately. And we can use the pnp-helper for the module name. I believe your change will go in first so make those changes and I can rebase. I'll just add my helper functions to that.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451029867", "createdAt": "2020-07-07T17:31:05Z", "author": {"login": "vinagesh"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNDE3MQ=="}, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTg4MjQyOnYy", "diffSide": "RIGHT", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1MzoyOVrOGuHVGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzoxODo0N1rOGuIPNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNzc3MQ==", "bodyText": "nit: this can also be done in a single statement:\nreturn Collections.singleton(new Pair(properyName, propertyValue));", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451007771", "createdAt": "2020-07-07T16:53:29Z", "author": {"login": "abhipsaMisra"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {\n+        //    \"propertyName\": {\n+        //      \"value\": \"hello\"\n+        //  }\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        desiredProperties.add(new Pair(propertyName, propertyValue));\n+        return desiredProperties;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyMjY0Ng==", "bodyText": "Cool! Good to know :)", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451022646", "createdAt": "2020-07-07T17:18:47Z", "author": {"login": "vinagesh"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {\n+        //    \"propertyName\": {\n+        //      \"value\": \"hello\"\n+        //  }\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        desiredProperties.add(new Pair(propertyName, propertyValue));\n+        return desiredProperties;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwNzc3MQ=="}, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTg4NDQxOnYy", "diffSide": "RIGHT", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NDoxMFrOGuHWfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NDoxMFrOGuHWfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODEyNA==", "bodyText": "nice!", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451008124", "createdAt": "2020-07-07T16:54:10Z", "author": {"login": "abhipsaMisra"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTg4NjQxOnYy", "diffSide": "RIGHT", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NDo0MFrOGuHXtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1NTozMVrOGuJiAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODQzOA==", "bodyText": "I've added doc comments for these public helpers: https://github.com/Azure/azure-iot-sdk-java/blob/abmisr/thermostat/pnp/src/main/java/com/microsoft/azure/sdk/iot/pnphelpers/PnpHelper.java#L66-L76", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451008438", "createdAt": "2020-07-07T16:54:40Z", "author": {"login": "abhipsaMisra"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0Mzg0MA==", "bodyText": "I will anyway have to rebase so this is mostly a place holder.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451043840", "createdAt": "2020-07-07T17:55:31Z", "author": {"login": "vinagesh"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwODQzOA=="}, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTg5MDYyOnYy", "diffSide": "RIGHT", "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NTo0NVrOGuHaNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1NTo0NVrOGuHaNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTA3OA==", "bodyText": "nit: same, can be replaced by returning Collections.singleton().", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451009078", "createdAt": "2020-07-07T16:55:45Z", "author": {"login": "abhipsaMisra"}, "path": "pnp-helper/src/main/java/samples/com/microsoft/azure/sdk/iot/helper/PnpHelper.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package samples.com.microsoft.azure.sdk.iot.helper;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {\n+        //    \"propertyName\": {\n+        //      \"value\": \"hello\"\n+        //  }\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        desiredProperties.add(new Pair(propertyName, propertyValue));\n+        return desiredProperties;\n+    }\n+\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n+    {\n+        // The update patch for a property of a component should be in the format:\n+        // \"desired\": {\n+        //    \"componentName\": {\n+        //      \"__t\": \"c\",\n+        //      \"propertyName\": {\n+        //        \"value\": \"hello\"\n+        //      }\n+        //  }\n+        JsonObject patchJson = new JsonObject();\n+        // The following property is required to specify that the update is for a component and not root level.\n+        patchJson.addProperty(\"__t\", \"c\");\n+        patchJson.addProperty(propertyName, propertyValue);\n+\n+        Set<Pair> desiredProperties = new HashSet<Pair>();\n+        Pair desiredProperty = new Pair(\n+                componentName,\n+                patchJson);\n+        desiredProperties.add(desiredProperty);\n+\n+        return desiredProperties;\n+    }\n+\n+    public static Map<String, Object> CreateMethodPayload(String methodValue)\n+    {\n+        // The method payload should be in the following format:\n+        // \"payload\": {\n+        //   \"commandRequest\": {\n+        //   \"value\": \"hello\"\n+        //  }\n+        JsonObject commandPayload = new JsonObject();\n+        commandPayload.addProperty(\"value\", methodValue);\n+        Map<String, Object> payload = new HashMap<String, Object>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTg5NDQ5OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1Njo0MVrOGuHclQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1Njo0MVrOGuHclQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAwOTY4NQ==", "bodyText": "I like this name, I had named the module \"pnp\" in my PR, but I can take this change if your PR goes in first.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451009685", "createdAt": "2020-07-07T16:56:41Z", "author": {"login": "abhipsaMisra"}, "path": "pom.xml", "diffHunk": "@@ -20,6 +20,7 @@\n         <module>iot-e2e-tests</module>\n         <module>provisioning</module>\n         <module>digital-twin</module>\n+        <module>pnp-helper</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTkwMjA2OnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/pnp-service-sample/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjo1ODozOVrOGuHhXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzoyNDowOFrOGuIbTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMDkxMA==", "bodyText": "I see these samples as 2 separate java projects, each having their own pom file. That way, they are completely independent of each other.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451010910", "createdAt": "2020-07-07T16:58:39Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-samples/pnp-service-sample/pom.xml", "diffHunk": "@@ -10,6 +10,14 @@\n     <modelVersion>4.0.0</modelVersion>\n \n     <artifactId>pnp-service-sample</artifactId>\n+    <dependencies>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAyNTc0Mw==", "bodyText": "I'm not sure how that helps. In C# you need a csproj to set it as the project to run and it helps by having separate projects to run them independently. But here it was easy enough to just run any file. What will we gain by separating them? I feel we will have a lot of fragmented code and these belong together.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451025743", "createdAt": "2020-07-07T17:24:08Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/pom.xml", "diffHunk": "@@ -10,6 +10,14 @@\n     <modelVersion>4.0.0</modelVersion>\n \n     <artifactId>pnp-service-sample</artifactId>\n+    <dependencies>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTAxMDkxMA=="}, "originalCommit": {"oid": "e7594692868ffedc7340aceb7a986078f95c52d0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzMyNjU5OnYy", "diffSide": "RIGHT", "path": "pnp-helper/src/main/java/com/microsoft/azure/sdk/iot/PnpHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo0NTowOVrOGuVNiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxNToxN1rOGu5fjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNTIxMQ==", "bodyText": "is this code similar to line 16?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451235211", "createdAt": "2020-07-08T01:45:09Z", "author": {"login": "bikamani"}, "path": "pnp-helper/src/main/java/com/microsoft/azure/sdk/iot/PnpHelper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.microsoft.azure.sdk.iot;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.*;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {\n+        //    \"propertyName\": {\n+        //      \"value\": \"hello\"\n+        //  }\n+        return Collections.singleton(new Pair(propertyName, propertyValue));\n+    }\n+\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n+    {\n+        // The update patch for a property of a component should be in the format:\n+        // \"desired\": {\n+        //    \"componentName\": {\n+        //      \"__t\": \"c\",\n+        //      \"propertyName\": {\n+        //        \"value\": \"hello\"\n+        //      }\n+        //  }\n+        JsonObject patchJson = new JsonObject();\n+        // The following property is required to specify that the update is for a component and not root level.\n+        patchJson.addProperty(\"__t\", \"c\");\n+        patchJson.addProperty(propertyName, propertyValue);\n+\n+        Set<Pair> desiredProperties = new HashSet<Pair>()\n+        {\n+            {\n+                new Pair(componentName, patchJson);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aff97a571b15490ea3d27aff8447c5ef7d221750"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyOTY0NQ==", "bodyText": "All this has changed due to most recent changes.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451829645", "createdAt": "2020-07-08T21:15:17Z", "author": {"login": "vinagesh"}, "path": "pnp-helper/src/main/java/com/microsoft/azure/sdk/iot/PnpHelper.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package com.microsoft.azure.sdk.iot;\n+\n+import com.google.gson.JsonObject;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+\n+import java.util.*;\n+\n+public class PnpHelper {\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue)\n+    {\n+        // The update patch for a property on the root level or a device without component should be in the format:\n+        // \"desired\": {\n+        //    \"propertyName\": {\n+        //      \"value\": \"hello\"\n+        //  }\n+        return Collections.singleton(new Pair(propertyName, propertyValue));\n+    }\n+\n+    public static Set<Pair> CreatePropertyPatch(String propertyName, String propertyValue, String componentName)\n+    {\n+        // The update patch for a property of a component should be in the format:\n+        // \"desired\": {\n+        //    \"componentName\": {\n+        //      \"__t\": \"c\",\n+        //      \"propertyName\": {\n+        //        \"value\": \"hello\"\n+        //      }\n+        //  }\n+        JsonObject patchJson = new JsonObject();\n+        // The following property is required to specify that the update is for a component and not root level.\n+        patchJson.addProperty(\"__t\", \"c\");\n+        patchJson.addProperty(propertyName, propertyValue);\n+\n+        Set<Pair> desiredProperties = new HashSet<Pair>()\n+        {\n+            {\n+                new Pair(componentName, patchJson);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNTIxMQ=="}, "originalCommit": {"oid": "aff97a571b15490ea3d27aff8447c5ef7d221750"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzMzMzcwOnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo0OTozM1rOGuVRxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxOTowOVrOGu5mZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjI5NA==", "bodyText": "I was wondering if this should be on top. That's the approach I took in C#.\nDon't have a strong opinion though", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451236294", "createdAt": "2020-07-08T01:49:33Z", "author": {"login": "bikamani"}, "path": "service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.PnpHelper;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json.\n+public class TemperatureController {\n+    // Get connection string and device id inputs.\n+    private static final String iotHubConnectionString  = System.getenv(\"IOTHUB_CONNECTION_STRING\");\n+    private static final String deviceId = System.getenv(\"DEVICE_ID\");\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(iotHubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get the twin and retrieve model Id set by Device client.\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin for thermostat1 component.\n+        System.out.println(\"Updating Device twin property\");\n+        String propertyName = \"targetTemperature\";\n+        String propertyValue = \"60\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aff97a571b15490ea3d27aff8447c5ef7d221750"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzMTM5OA==", "bodyText": "I have kept it as is for now. We can see later which way to go.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451831398", "createdAt": "2020-07-08T21:19:09Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.PnpHelper;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json.\n+public class TemperatureController {\n+    // Get connection string and device id inputs.\n+    private static final String iotHubConnectionString  = System.getenv(\"IOTHUB_CONNECTION_STRING\");\n+    private static final String deviceId = System.getenv(\"DEVICE_ID\");\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(iotHubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get the twin and retrieve model Id set by Device client.\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin for thermostat1 component.\n+        System.out.println(\"Updating Device twin property\");\n+        String propertyName = \"targetTemperature\";\n+        String propertyValue = \"60\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjI5NA=="}, "originalCommit": {"oid": "aff97a571b15490ea3d27aff8447c5ef7d221750"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzMzNjE3OnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo1MTowM1rOGuVTTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxNToyNlrOGu5f1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjY4NA==", "bodyText": "This makes me think if we really need no component sample \ud83d\ude04", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451236684", "createdAt": "2020-07-08T01:51:03Z", "author": {"login": "bikamani"}, "path": "service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.PnpHelper;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json.\n+public class TemperatureController {\n+    // Get connection string and device id inputs.\n+    private static final String iotHubConnectionString  = System.getenv(\"IOTHUB_CONNECTION_STRING\");\n+    private static final String deviceId = System.getenv(\"DEVICE_ID\");\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(iotHubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get the twin and retrieve model Id set by Device client.\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin for thermostat1 component.\n+        System.out.println(\"Updating Device twin property\");\n+        String propertyName = \"targetTemperature\";\n+        String propertyValue = \"60\";\n+        String componentName = \"thermostat1\";\n+        twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n+        twinClient.updateTwin(twin);\n+\n+        // Get the updated twin properties.\n+        twinClient.getTwin(twin);\n+        System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n+    }\n+\n+    private static void InvokeMethodOnRootLevel() throws IOException, IotHubException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aff97a571b15490ea3d27aff8447c5ef7d221750"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyOTcxNw==", "bodyText": "ha ha :)", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451829717", "createdAt": "2020-07-08T21:15:26Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/pnp-service-sample/TemperatureController/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package samples.com.microsoft.azure.sdk.iot;\n+\n+import com.microsoft.azure.sdk.iot.PnpHelper;\n+import com.microsoft.azure.sdk.iot.service.devicetwin.*;\n+import com.microsoft.azure.sdk.iot.service.exceptions.IotHubException;\n+\n+import java.io.IOException;\n+import java.time.ZoneOffset;\n+import java.time.ZonedDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.util.concurrent.TimeUnit;\n+\n+// This sample uses the model - https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json.\n+public class TemperatureController {\n+    // Get connection string and device id inputs.\n+    private static final String iotHubConnectionString  = System.getenv(\"IOTHUB_CONNECTION_STRING\");\n+    private static final String deviceId = System.getenv(\"DEVICE_ID\");\n+\n+    private static DeviceTwin twinClient;\n+    private static DeviceMethod methodClient;\n+\n+    public static void main(String[] args) throws Exception {\n+        RunSample();\n+    }\n+\n+    private static void RunSample() throws IOException, IotHubException {\n+        System.out.println(\"Initialize the service client.\");\n+        InitializeServiceClient();\n+\n+        System.out.println(\"Get Twin model Id and Update Twin\");\n+        GetAndUpdateTwin();\n+\n+        System.out.println(\"Invoke a method on component\");\n+        InvokeMethodOnComponent();\n+\n+        System.out.println(\"Invoke a method on root level\");\n+        InvokeMethodOnRootLevel();\n+    }\n+\n+    private static void InitializeServiceClient() throws IOException {\n+        twinClient = DeviceTwin.createFromConnectionString(iotHubConnectionString);\n+        methodClient = DeviceMethod.createFromConnectionString(iotHubConnectionString);\n+    }\n+\n+    private static void GetAndUpdateTwin() throws IOException, IotHubException {\n+        // Get the twin and retrieve model Id set by Device client.\n+        DeviceTwinDevice twin = new DeviceTwinDevice(deviceId);\n+        twinClient.getTwin(twin);\n+        System.out.println(\"Model Id of this Twin is: \" + twin.getModelId());\n+\n+        // Update the twin for thermostat1 component.\n+        System.out.println(\"Updating Device twin property\");\n+        String propertyName = \"targetTemperature\";\n+        String propertyValue = \"60\";\n+        String componentName = \"thermostat1\";\n+        twin.setDesiredProperties(PnpHelper.CreatePropertyPatch(propertyName, propertyValue, componentName));\n+        twinClient.updateTwin(twin);\n+\n+        // Get the updated twin properties.\n+        twinClient.getTwin(twin);\n+        System.out.println(\"The updated desired properties: \" + twin.getDesiredProperties().iterator().next().getValue());\n+    }\n+\n+    private static void InvokeMethodOnRootLevel() throws IOException, IotHubException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNjY4NA=="}, "originalCommit": {"oid": "aff97a571b15490ea3d27aff8447c5ef7d221750"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMzM0MDUxOnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/readme.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo1MzoyOVrOGuVVzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMTo1MzoyOVrOGuVVzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTIzNzMyNw==", "bodyText": "\ud83c\udd92", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451237327", "createdAt": "2020-07-08T01:53:29Z", "author": {"login": "bikamani"}, "path": "service/iot-service-samples/readme.md", "diffHunk": "@@ -6,6 +6,7 @@ This folder contains simple samples showing how to use the various features of t\n \n * [Device manager sample](device-manager-sample): Shows how to work with the device ID registry of IoT Hub. \n * [Service client sample](service-client-sample): Shows how to send Cloud to Device messages through IoT Hub. \n+* [Plug and play samples](https://github.com/Azure/azure-iot-sdk-java/tree/preview/service/iot-service-samples/pnp-service-sample): Shows how to get the plug and play model ID, update properties on the twin and invoke commands. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aff97a571b15490ea3d27aff8447c5ef7d221750"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzA3NzkwOnYy", "diffSide": "RIGHT", "path": "pnp-helper/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxNjoxMFrOGu5hPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxNjoxMFrOGu5hPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzMDA3OQ==", "bodyText": "This will be gone with Abhipsa's commit", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/841#discussion_r451830079", "createdAt": "2020-07-08T21:16:10Z", "author": {"login": "vinagesh"}, "path": "pnp-helper/pom.xml", "diffHunk": "@@ -30,7 +30,7 @@\n     </scm>\n     <properties>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-        <iot-device-client-version>1.23.0</iot-device-client-version>\n+        <iot-device-client-version>1.24.0</iot-device-client-version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29b7aac75cbc8aebd0ca02e4d48ac435c10b33ca"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2892, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}