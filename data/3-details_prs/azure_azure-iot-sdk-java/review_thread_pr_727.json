{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2OTAxMDIz", "number": 727, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToyMjowNlrODqBJng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozMjo0MlrODqBSvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Mzg1NjMwOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToyMjowNlrOF5jjmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMToyNzo1N1rOF5jsSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5NTcwNg==", "bodyText": "isn't this \"else\" case basically or part of the if {} at line 129?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395895706", "createdAt": "2020-03-20T21:22:06Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -132,17 +133,21 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n                     this.iotHubUserPassword = null;\n                 }\n \n+                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13c6fd93ba9b9ff989d1736fe00e7019d322ee2e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5NzkzMA==", "bodyText": "Yeah, I can simplify this, sure", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395897930", "createdAt": "2020-03-20T21:27:57Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -132,17 +133,21 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n                     this.iotHubUserPassword = null;\n                 }\n \n+                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5NTcwNg=="}, "originalCommit": {"oid": "13c6fd93ba9b9ff989d1736fe00e7019d322ee2e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Mzg3NTM4OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozMDo0NlrOF5jv8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozODo0MVrOF5j6Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5ODg2NQ==", "bodyText": "Do we need \"this\" any more? I know it is there in legacy code but this going forward if we don't need it why use?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395898865", "createdAt": "2020-03-20T21:30:46Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -132,17 +133,21 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n                     this.iotHubUserPassword = null;\n                 }\n \n+                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)\n+                {\n+                    //X509 auth websocket should not include the iothub-no-client-cert flag\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13c6fd93ba9b9ff989d1736fe00e7019d322ee2e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMDk1NQ==", "bodyText": "C# guidelines suggest avoiding \"this.\" when possible, but Java guidelines do not", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395900955", "createdAt": "2020-03-20T21:37:05Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -132,17 +133,21 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n                     this.iotHubUserPassword = null;\n                 }\n \n+                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)\n+                {\n+                    //X509 auth websocket should not include the iothub-no-client-cert flag\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5ODg2NQ=="}, "originalCommit": {"oid": "13c6fd93ba9b9ff989d1736fe00e7019d322ee2e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMTUxNA==", "bodyText": "Sorry about that, I added this comment thinking about C#", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395901514", "createdAt": "2020-03-20T21:38:41Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -132,17 +133,21 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n                     this.iotHubUserPassword = null;\n                 }\n \n+                if (this.config.getAuthenticationType() != DeviceClientConfig.AuthType.X509_CERTIFICATE)\n+                {\n+                    //X509 auth websocket should not include the iothub-no-client-cert flag\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5ODg2NQ=="}, "originalCommit": {"oid": "13c6fd93ba9b9ff989d1736fe00e7019d322ee2e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Mzg3ODQwOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozMjowOVrOF5jx3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozNTo1MVrOF5j2wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTM1OQ==", "bodyText": "So this needs to be set to empty string? Or should there be conditional check when appending this?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395899359", "createdAt": "2020-03-20T21:32:09Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -129,17 +130,15 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     this.log.trace(\"MQTT connection will use sas token based auth\");\n                     this.iotHubUserPassword = this.config.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n+                    this.webSocketQueryString = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9e9728d30749391f9cd7e92d0c999b68d15a2c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMDYxMA==", "bodyText": "Sure, I can leave it null for SAS cases, and just check when building the string later", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395900610", "createdAt": "2020-03-20T21:35:51Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -129,17 +130,15 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     this.log.trace(\"MQTT connection will use sas token based auth\");\n                     this.iotHubUserPassword = this.config.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n+                    this.webSocketQueryString = \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTM1OQ=="}, "originalCommit": {"oid": "ba9e9728d30749391f9cd7e92d0c999b68d15a2c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Mzg3OTY2OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozMjo0MlrOF5jyqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTozNDowM1rOF5j0aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTU2MQ==", "bodyText": "Did you want to move this before line 139?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395899561", "createdAt": "2020-03-20T21:32:42Z", "author": {"login": "bikamani"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -129,17 +130,15 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     this.log.trace(\"MQTT connection will use sas token based auth\");\n                     this.iotHubUserPassword = this.config.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n+                    this.webSocketQueryString = \"\";\n+\n+                    //X509 auth over websocket should not include the iothub-no-client-cert flag", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba9e9728d30749391f9cd7e92d0c999b68d15a2c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwMDAxMQ==", "bodyText": "Whoops, yes I do", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/727#discussion_r395900011", "createdAt": "2020-03-20T21:34:03Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/mqtt/MqttIotHubConnection.java", "diffHunk": "@@ -129,17 +130,15 @@ public void open(Queue<DeviceClientConfig> deviceClientConfigs, ScheduledExecuto\n                 {\n                     this.log.trace(\"MQTT connection will use sas token based auth\");\n                     this.iotHubUserPassword = this.config.getSasTokenAuthentication().getRenewedSasToken(false, false);\n+                    this.webSocketQueryString = NO_CLIENT_CERT_QUERY_STRING;\n                 }\n                 else if (this.config.getAuthenticationType() == DeviceClientConfig.AuthType.X509_CERTIFICATE)\n                 {\n-                    if (this.config.isUseWebsocket())\n-                    {\n-                        //Codes_SRS_MQTTIOTHUBCONNECTION_34_027: [If this function is called while using websockets and x509 authentication, an UnsupportedOperationException shall be thrown.]\n-                        throw new UnsupportedOperationException(\"X509 authentication is not supported over MQTT_WS\");\n-                    }\n-\n                     this.log.trace(\"MQTT connection will use X509 certificate based auth\");\n \n+                    this.webSocketQueryString = \"\";\n+\n+                    //X509 auth over websocket should not include the iothub-no-client-cert flag", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTg5OTU2MQ=="}, "originalCommit": {"oid": "ba9e9728d30749391f9cd7e92d0c999b68d15a2c"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2976, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}