{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTc2Mjk4", "number": 822, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzo1MTo0MFrOEIkO2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODo0NDoxMFrOEKn03w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDE3NjkxOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzo1MTo0MFrOGom27w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzo1MTo0MFrOGom27w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzMjg3OQ==", "bodyText": "Unit Test to check whether this value is set correctly for Twin", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r445232879", "createdAt": "2020-06-24T23:51:40Z", "author": {"login": "bikamani"}, "path": "service/iot-service-client/src/test/java/tests/unit/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinTest.java", "diffHunk": "@@ -946,20 +946,19 @@ public void nextRetrievesCorrectlyWithoutModuleId() throws IotHubException, IOEx\n         final String connectionString = \"testString\";\n         DeviceTwin testTwin = DeviceTwin.createFromConnectionString(connectionString);\n         final String expectedString = \"testJsonAsNext\";\n+        final String modelId = \"testModelId\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "039b4f3ad0ebbffdb2d9583847f47563b9cf3d1b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjM1NTgyOnYy", "diffSide": "RIGHT", "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/RegisterManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjozNToyMFrOGrQyiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzoyNjoxNVrOGru-wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzAzMw==", "bodyText": "Is this needed now that modelid sits on device twin?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448017033", "createdAt": "2020-06-30T22:35:20Z", "author": {"login": "prmathur-microsoft"}, "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/RegisterManager.java", "diffHunk": "@@ -123,6 +125,17 @@\n     @SerializedName(CAPABILITIES_TAG)\n     protected DeviceCapabilities capabilities = null;\n \n+    /**\n+     * The Digital Twin model id of the device and module\n+     * The value will be null for a non-pnp device.\n+     * The value will be null for a pnp device until the device connects and registers with the model id.\n+     */\n+    private static final String MODEL_ID = \"digital-twin-model-id\";\n+    @Expose(serialize = true, deserialize = true)\n+    @SerializedName(MODEL_ID)\n+    @Setter\n+    @Getter\n+    protected String modelId = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxODc3Mw==", "bodyText": "+1 on this comment. This new field should only exist on twin, not identity", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448018773", "createdAt": "2020-06-30T22:40:45Z", "author": {"login": "timtay-microsoft"}, "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/RegisterManager.java", "diffHunk": "@@ -123,6 +125,17 @@\n     @SerializedName(CAPABILITIES_TAG)\n     protected DeviceCapabilities capabilities = null;\n \n+    /**\n+     * The Digital Twin model id of the device and module\n+     * The value will be null for a non-pnp device.\n+     * The value will be null for a pnp device until the device connects and registers with the model id.\n+     */\n+    private static final String MODEL_ID = \"digital-twin-model-id\";\n+    @Expose(serialize = true, deserialize = true)\n+    @SerializedName(MODEL_ID)\n+    @Setter\n+    @Getter\n+    protected String modelId = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzAzMw=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxMTY4MQ==", "bodyText": "Synced offline on this. This class is used for Twin and this field exist on twin only.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448511681", "createdAt": "2020-07-01T17:26:15Z", "author": {"login": "bikamani"}, "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/RegisterManager.java", "diffHunk": "@@ -123,6 +125,17 @@\n     @SerializedName(CAPABILITIES_TAG)\n     protected DeviceCapabilities capabilities = null;\n \n+    /**\n+     * The Digital Twin model id of the device and module\n+     * The value will be null for a non-pnp device.\n+     * The value will be null for a pnp device until the device connects and registers with the model id.\n+     */\n+    private static final String MODEL_ID = \"digital-twin-model-id\";\n+    @Expose(serialize = true, deserialize = true)\n+    @SerializedName(MODEL_ID)\n+    @Setter\n+    @Getter\n+    protected String modelId = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzAzMw=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjM2MDUyOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDevice.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjozNzoyN1rOGrQ1Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODoxMToyMVrOGrwZ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzczOQ==", "bodyText": "Why is this check needed? What would happen if a null or empty is placed on parser.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448017739", "createdAt": "2020-06-30T22:37:27Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDevice.java", "diffHunk": "@@ -536,6 +542,10 @@ public String toString()\n         {\n             thisDevice.append(\"Version: \" + this.getVersion() + \"\\n\");\n         }\n+        if(this.modelId != null && !this.modelId.isEmpty())\n+        {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyODk5Nw==", "bodyText": "This is a toString function. There's no reason to print the modelId if there is no modelId", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448528997", "createdAt": "2020-07-01T17:59:12Z", "author": {"login": "timtay-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDevice.java", "diffHunk": "@@ -536,6 +542,10 @@ public String toString()\n         {\n             thisDevice.append(\"Version: \" + this.getVersion() + \"\\n\");\n         }\n+        if(this.modelId != null && !this.modelId.isEmpty())\n+        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzczOQ=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUzNDIyMQ==", "bodyText": "I see that this pattern is followed everywhere. Looking back I would have just printed the data as is i.e. along with null to represent what has actually come on the wire from service. However now I don't think we can make that change and should follow the suit.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448534221", "createdAt": "2020-07-01T18:09:47Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDevice.java", "diffHunk": "@@ -536,6 +542,10 @@ public String toString()\n         {\n             thisDevice.append(\"Version: \" + this.getVersion() + \"\\n\");\n         }\n+        if(this.modelId != null && !this.modelId.isEmpty())\n+        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzczOQ=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUzNTAzNQ==", "bodyText": "If we want to print out null/empty values, this check is not needed. I followed the pattern similar to module id and others as it doesn't seem to provide any value printing out null/empty", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448535035", "createdAt": "2020-07-01T18:11:21Z", "author": {"login": "bikamani"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwinDevice.java", "diffHunk": "@@ -536,6 +542,10 @@ public String toString()\n         {\n             thisDevice.append(\"Version: \" + this.getVersion() + \"\\n\");\n         }\n+        if(this.modelId != null && !this.modelId.isEmpty())\n+        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxNzczOQ=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjM2Nzg2OnYy", "diffSide": "RIGHT", "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/RegisterManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjo0MDo1OVrOGrQ5qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzoyNzozN1rOGrvBxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxODg1OQ==", "bodyText": "Questions : 1. Where is this verified to be working?\n2. Will e2e be another PR? Is the task captured?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448018859", "createdAt": "2020-06-30T22:40:59Z", "author": {"login": "prmathur-microsoft"}, "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/RegisterManager.java", "diffHunk": "@@ -8,6 +8,8 @@\n import com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxMjQ1NA==", "bodyText": "Verified using a sample.\nI added e2e task for this PBI, thanks for reminding", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448512454", "createdAt": "2020-07-01T17:27:37Z", "author": {"login": "bikamani"}, "path": "deps/src/main/java/com/microsoft/azure/sdk/iot/deps/twin/RegisterManager.java", "diffHunk": "@@ -8,6 +8,8 @@\n import com.microsoft.azure.sdk.iot.deps.serializer.ConfigurationContentParser;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxODg1OQ=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjM3MzA2OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjo0MzowOFrOGrQ8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODoxOToyMlrOGrwo6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxOTYzMQ==", "bodyText": "Same comment here", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448019631", "createdAt": "2020-06-30T22:43:08Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,6 +505,11 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n \n+        if (twinState.getModelId() != null && !twinState.getModelId().isEmpty())\n+        {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNjAxNg==", "bodyText": "I would like to understand if there is a reasoning behind why should we set model id when null/empty?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448526016", "createdAt": "2020-07-01T17:53:50Z", "author": {"login": "bikamani"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,6 +505,11 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n \n+        if (twinState.getModelId() != null && !twinState.getModelId().isEmpty())\n+        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxOTYzMQ=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUzMzE5OQ==", "bodyText": "To avoid SDK's having any check. The point I was making is we should leave it to service to throw incase there is no model id and not customize it here.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448533199", "createdAt": "2020-07-01T18:07:41Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,6 +505,11 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n \n+        if (twinState.getModelId() != null && !twinState.getModelId().isEmpty())\n+        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxOTYzMQ=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUzODg1OQ==", "bodyText": "ok. done", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448538859", "createdAt": "2020-07-01T18:19:22Z", "author": {"login": "bikamani"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,6 +505,11 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n \n+        if (twinState.getModelId() != null && !twinState.getModelId().isEmpty())\n+        {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxOTYzMQ=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjM3OTEyOnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjo0NjowOVrOGrRASw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNzoyODowMlrOGrvCmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAyMDU1NQ==", "bodyText": "unrelated to this PR, but why did we name this DeviceTwinDevice? Is it to separate a device twin from a module twin? Is it public? Can we rename it?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448020555", "createdAt": "2020-06-30T22:46:09Z", "author": {"login": "abhipsaMisra"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,6 +505,11 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n \n+        if (twinState.getModelId() != null && !twinState.getModelId().isEmpty())\n+        {\n+            deviceTwinDevice.setModelId(twinState.getModelId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUxMjY2Ng==", "bodyText": "synced offline on this.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448512666", "createdAt": "2020-07-01T17:28:02Z", "author": {"login": "bikamani"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,6 +505,11 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n \n+        if (twinState.getModelId() != null && !twinState.getModelId().isEmpty())\n+        {\n+            deviceTwinDevice.setModelId(twinState.getModelId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAyMDU1NQ=="}, "originalCommit": {"oid": "8747d71ae55fdfc18f81e8f627984268aab6130f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTczNzI3OnYy", "diffSide": "LEFT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODo0NDoxMFrOGrxZEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMToyMzo1MFrOGr10HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MTE4Nw==", "bodyText": "Have you verified that this works for non PnP device before making the change?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448551187", "createdAt": "2020-07-01T18:44:10Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,11 +504,7 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setCapabilities(twinState.getCapabilities());\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c99db4361474ae17773827f48ebf863ec065e5f0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2MjAyNA==", "bodyText": "yes for non pnp this value is set to null, when printed it will look like below:\nDevice ID: some value\nETag: etag value\nModel ID:\nTags:{}\nReported Properties{}\nDesired Properties: {}", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448562024", "createdAt": "2020-07-01T19:07:02Z", "author": {"login": "bikamani"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,11 +504,7 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setCapabilities(twinState.getCapabilities());\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MTE4Nw=="}, "originalCommit": {"oid": "c99db4361474ae17773827f48ebf863ec065e5f0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyMzY0NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/822#discussion_r448623644", "createdAt": "2020-07-01T21:23:50Z", "author": {"login": "prmathur-microsoft"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/devicetwin/DeviceTwin.java", "diffHunk": "@@ -504,11 +504,7 @@ private DeviceTwinDevice jsonToDeviceTwinDevice(String json) throws IOException\n         deviceTwinDevice.setCapabilities(twinState.getCapabilities());\n         deviceTwinDevice.setConnectionState(twinState.getConnectionState());\n         deviceTwinDevice.setConfigurations(twinState.getConfigurations());\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1MTE4Nw=="}, "originalCommit": {"oid": "c99db4361474ae17773827f48ebf863ec065e5f0"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2862, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}