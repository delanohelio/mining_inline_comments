{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NzQwMTEx", "number": 954, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDowMjo0M1rOEpLymQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDoxNDozMFrOEpMAzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNjIwMjQ5OnYy", "diffSide": "RIGHT", "path": "service/iot-service-samples/digitaltwin-service-samples/temperature-controller-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDowMjo0M1rOHatUJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDowNzoxNlrOHatc7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2NzQ2MQ==", "bodyText": "\ud83d\udc4d\nFor update, don't we need something similar?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/954#discussion_r497767461", "createdAt": "2020-09-30T20:02:43Z", "author": {"login": "bikamani"}, "path": "service/iot-service-samples/digitaltwin-service-samples/temperature-controller-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -142,10 +145,23 @@ private static void InvokeMethodOnComponent() throws IOException {\n         String commandInput = ZonedDateTime.now(ZoneOffset.UTC).minusMinutes(5).format(DateTimeFormatter.ISO_DATE_TIME);\n \n         DigitalTwinInvokeCommandRequestOptions options = new DigitalTwinInvokeCommandRequestOptions();\n-        ServiceResponseWithHeaders<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders> commandResponse = client.invokeComponentCommandWithResponse(digitalTwinid, componentName, commandName, commandInput, options);\n-        System.out.println(\"Command \" + commandName + \", payload: \" + prettyString(commandResponse.body().getPayload()));\n-        System.out.println(\"Command \" + commandName + \", status: \" + commandResponse.body().getStatus());\n-        System.out.println(\"Command \" + commandName + \", requestId: \" + commandResponse.headers().getRequestId());\n+        try {\n+            ServiceResponseWithHeaders<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders> commandResponse = client.invokeComponentCommandWithResponse(digitalTwinid, componentName, commandName, commandInput, options);\n+            System.out.println(\"Command \" + commandName + \", payload: \" + prettyString(commandResponse.body().getPayload()));\n+            System.out.println(\"Command \" + commandName + \", status: \" + commandResponse.body().getStatus());\n+            System.out.println(\"Command \" + commandName + \", requestId: \" + commandResponse.headers().getRequestId());\n+        } catch (RestException ex)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78806c728290c00b236d01bf0722b71919364af6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2OTcxMA==", "bodyText": "Good call, you are right for update too. I will update sample.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/954#discussion_r497769710", "createdAt": "2020-09-30T20:07:16Z", "author": {"login": "vinagesh"}, "path": "service/iot-service-samples/digitaltwin-service-samples/temperature-controller-service-sample/src/main/java/samples/com/microsoft/azure/sdk/iot/TemperatureController.java", "diffHunk": "@@ -142,10 +145,23 @@ private static void InvokeMethodOnComponent() throws IOException {\n         String commandInput = ZonedDateTime.now(ZoneOffset.UTC).minusMinutes(5).format(DateTimeFormatter.ISO_DATE_TIME);\n \n         DigitalTwinInvokeCommandRequestOptions options = new DigitalTwinInvokeCommandRequestOptions();\n-        ServiceResponseWithHeaders<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders> commandResponse = client.invokeComponentCommandWithResponse(digitalTwinid, componentName, commandName, commandInput, options);\n-        System.out.println(\"Command \" + commandName + \", payload: \" + prettyString(commandResponse.body().getPayload()));\n-        System.out.println(\"Command \" + commandName + \", status: \" + commandResponse.body().getStatus());\n-        System.out.println(\"Command \" + commandName + \", requestId: \" + commandResponse.headers().getRequestId());\n+        try {\n+            ServiceResponseWithHeaders<DigitalTwinCommandResponse, DigitalTwinInvokeCommandHeaders> commandResponse = client.invokeComponentCommandWithResponse(digitalTwinid, componentName, commandName, commandInput, options);\n+            System.out.println(\"Command \" + commandName + \", payload: \" + prettyString(commandResponse.body().getPayload()));\n+            System.out.println(\"Command \" + commandName + \", status: \" + commandResponse.body().getStatus());\n+            System.out.println(\"Command \" + commandName + \", requestId: \" + commandResponse.headers().getRequestId());\n+        } catch (RestException ex)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc2NzQ2MQ=="}, "originalCommit": {"oid": "78806c728290c00b236d01bf0722b71919364af6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNjIzODg0OnYy", "diffSide": "RIGHT", "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/readme.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDoxNDozMFrOHatrLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDoxNDozMFrOHatrLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3MzM1Ng==", "bodyText": "I'll rearrange this one to be below src code generation", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/954#discussion_r497773356", "createdAt": "2020-09-30T20:14:30Z", "author": {"login": "bikamani"}, "path": "service/iot-service-client/src/main/java/com/microsoft/azure/sdk/iot/service/digitaltwin/readme.md", "diffHunk": "@@ -0,0 +1,52 @@\n+### Protocol layer generation:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78806c728290c00b236d01bf0722b71919364af6"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2735, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}