{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0ODY2NzQx", "number": 888, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzowMDo0OVrOEWYnCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoxMjoxM1rOEYLQJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxOTA3MzM4OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzowMDo0OVrOG9q-IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzowMDo0OVrOG9q-IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMyMDM1Mw==", "bodyText": "The exception translator above does the hard work of figuring out if the message can be retried or not", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/888#discussion_r467320353", "createdAt": "2020-08-07T23:00:49Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -468,9 +470,29 @@ public void onAuthenticationSessionOpened()\n     }\n \n     @Override\n-    public void onMessageAcknowledged(Message message)\n+    public void onMessageAcknowledged(Message message, DeliveryState deliveryState)\n     {\n-        this.listener.onMessageSent(message, null);\n+        if (deliveryState == Accepted.getInstance())\n+        {\n+            this.listener.onMessageSent(message, null);\n+        }\n+        else if (deliveryState instanceof Rejected)\n+        {\n+            // The message was not accepted by the server, and the reason why is found within the nested error\n+            TransportException ex = AmqpsExceptionTranslator.convertFromAmqpException(((Rejected) deliveryState).getError());\n+            this.listener.onMessageSent(message, ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53fec11a048202764bd17477703bafe07e89492b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzQ5MzMwOnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzowMjoyNVrOHAUZ4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNzoxMDo1NlrOHAU0Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NjM1Mg==", "bodyText": "Does the service ever send a delivery state of \"released\"? What do they expect the client to do, in this case?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/888#discussion_r470096352", "createdAt": "2020-08-13T17:02:25Z", "author": {"login": "abhipsaMisra"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -468,9 +470,29 @@ public void onAuthenticationSessionOpened()\n     }\n \n     @Override\n-    public void onMessageAcknowledged(Message message)\n+    public void onMessageAcknowledged(Message message, DeliveryState deliveryState)\n     {\n-        this.listener.onMessageSent(message, null);\n+        if (deliveryState == Accepted.getInstance())\n+        {\n+            this.listener.onMessageSent(message, null);\n+        }\n+        else if (deliveryState instanceof Rejected)\n+        {\n+            // The message was not accepted by the server, and the reason why is found within the nested error\n+            TransportException ex = AmqpsExceptionTranslator.convertFromAmqpException(((Rejected) deliveryState).getError());\n+            this.listener.onMessageSent(message, ex);\n+        }\n+        else if (deliveryState == Released.getInstance())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49f24de70b07333a84e72c4291f5877d82157e0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDEwMzA5OA==", "bodyText": "I've never seen it, but the protocol defines it as a possible delivery state. As a delivery state, it just means that the service has made the message available to be re-delivered for whatever reason. So on the client side, we just need to create a retryable exception here so that the transport layer re-sends it", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/888#discussion_r470103098", "createdAt": "2020-08-13T17:10:56Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -468,9 +470,29 @@ public void onAuthenticationSessionOpened()\n     }\n \n     @Override\n-    public void onMessageAcknowledged(Message message)\n+    public void onMessageAcknowledged(Message message, DeliveryState deliveryState)\n     {\n-        this.listener.onMessageSent(message, null);\n+        if (deliveryState == Accepted.getInstance())\n+        {\n+            this.listener.onMessageSent(message, null);\n+        }\n+        else if (deliveryState instanceof Rejected)\n+        {\n+            // The message was not accepted by the server, and the reason why is found within the nested error\n+            TransportException ex = AmqpsExceptionTranslator.convertFromAmqpException(((Rejected) deliveryState).getError());\n+            this.listener.onMessageSent(message, ex);\n+        }\n+        else if (deliveryState == Released.getInstance())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA5NjM1Mg=="}, "originalCommit": {"oid": "c49f24de70b07333a84e72c4291f5877d82157e0"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg0ODE4OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODowOTo1N1rOHAXuAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoxMTowNVrOHAXwbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MDY1OQ==", "bodyText": "why is the check for rejected look different than the other delivery states?\nShouldn't it be\ndeliveryState == Rejected.getInstance() ?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/888#discussion_r470150659", "createdAt": "2020-08-13T18:09:57Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -468,9 +470,29 @@ public void onAuthenticationSessionOpened()\n     }\n \n     @Override\n-    public void onMessageAcknowledged(Message message)\n+    public void onMessageAcknowledged(Message message, DeliveryState deliveryState)\n     {\n-        this.listener.onMessageSent(message, null);\n+        if (deliveryState == Accepted.getInstance())\n+        {\n+            this.listener.onMessageSent(message, null);\n+        }\n+        else if (deliveryState instanceof Rejected)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49f24de70b07333a84e72c4291f5877d82157e0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MTI3Nw==", "bodyText": "Rejected is the one delivery state that comes with additional information in the ack. For Accepted/Released, there is no payload telling why the message was Accepted/Released. For Rejected, there should be some error details explaining why the message was rejected", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/888#discussion_r470151277", "createdAt": "2020-08-13T18:11:05Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -468,9 +470,29 @@ public void onAuthenticationSessionOpened()\n     }\n \n     @Override\n-    public void onMessageAcknowledged(Message message)\n+    public void onMessageAcknowledged(Message message, DeliveryState deliveryState)\n     {\n-        this.listener.onMessageSent(message, null);\n+        if (deliveryState == Accepted.getInstance())\n+        {\n+            this.listener.onMessageSent(message, null);\n+        }\n+        else if (deliveryState instanceof Rejected)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MDY1OQ=="}, "originalCommit": {"oid": "c49f24de70b07333a84e72c4291f5877d82157e0"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzg1NjM3OnYy", "diffSide": "RIGHT", "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoxMjoxM1rOHAXzAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODoxNTo1N1rOHAX7Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MTkzOA==", "bodyText": "There are at least 4 more delivery state types that are defined in the transport layer that will fall into the else statement here, can you point me to the service documentation that indicates what delivery states they may return? I am just curious.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/888#discussion_r470151938", "createdAt": "2020-08-13T18:12:13Z", "author": {"login": "azabbasi"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -468,9 +470,29 @@ public void onAuthenticationSessionOpened()\n     }\n \n     @Override\n-    public void onMessageAcknowledged(Message message)\n+    public void onMessageAcknowledged(Message message, DeliveryState deliveryState)\n     {\n-        this.listener.onMessageSent(message, null);\n+        if (deliveryState == Accepted.getInstance())\n+        {\n+            this.listener.onMessageSent(message, null);\n+        }\n+        else if (deliveryState instanceof Rejected)\n+        {\n+            // The message was not accepted by the server, and the reason why is found within the nested error\n+            TransportException ex = AmqpsExceptionTranslator.convertFromAmqpException(((Rejected) deliveryState).getError());\n+            this.listener.onMessageSent(message, ex);\n+        }\n+        else if (deliveryState == Released.getInstance())\n+        {\n+            // As per AMQP spec, this state means the message should be re-delivered to the server at a later time\n+            ProtocolException protocolException = new ProtocolException(\"Message was released by the amqp server\");\n+            protocolException.setRetryable(true);\n+            this.listener.onMessageSent(message, protocolException);\n+        }\n+        else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c49f24de70b07333a84e72c4291f5877d82157e0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MzA4MQ==", "bodyText": "There isn't any documentation like that, unfortunately. For Modified/Received, I'm not sure what the SDK is supposed to do. I've never seen those delivery states returned, though", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/888#discussion_r470153081", "createdAt": "2020-08-13T18:14:18Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -468,9 +470,29 @@ public void onAuthenticationSessionOpened()\n     }\n \n     @Override\n-    public void onMessageAcknowledged(Message message)\n+    public void onMessageAcknowledged(Message message, DeliveryState deliveryState)\n     {\n-        this.listener.onMessageSent(message, null);\n+        if (deliveryState == Accepted.getInstance())\n+        {\n+            this.listener.onMessageSent(message, null);\n+        }\n+        else if (deliveryState instanceof Rejected)\n+        {\n+            // The message was not accepted by the server, and the reason why is found within the nested error\n+            TransportException ex = AmqpsExceptionTranslator.convertFromAmqpException(((Rejected) deliveryState).getError());\n+            this.listener.onMessageSent(message, ex);\n+        }\n+        else if (deliveryState == Released.getInstance())\n+        {\n+            // As per AMQP spec, this state means the message should be re-delivered to the server at a later time\n+            ProtocolException protocolException = new ProtocolException(\"Message was released by the amqp server\");\n+            protocolException.setRetryable(true);\n+            this.listener.onMessageSent(message, protocolException);\n+        }\n+        else", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MTkzOA=="}, "originalCommit": {"oid": "c49f24de70b07333a84e72c4291f5877d82157e0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1NDA0Mg==", "bodyText": "From the official AMQP spec, though:\n\u2022 accepted: indicates successful processing at the receiver.\n\u2022 rejected: indicates an invalid and unprocessable message.\n\u2022 released: indicates that the message was not (and will not be) processed.\n\u2022 modified: indicates that the message was modified, but not processed.\n\u2022 received: indicates partial message data seen by the receiver as well as the starting point for a resumed transfer.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/888#discussion_r470154042", "createdAt": "2020-08-13T18:15:57Z", "author": {"login": "timtay-microsoft"}, "path": "device/iot-device-client/src/main/java/com/microsoft/azure/sdk/iot/device/transport/amqps/AmqpsIotHubConnection.java", "diffHunk": "@@ -468,9 +470,29 @@ public void onAuthenticationSessionOpened()\n     }\n \n     @Override\n-    public void onMessageAcknowledged(Message message)\n+    public void onMessageAcknowledged(Message message, DeliveryState deliveryState)\n     {\n-        this.listener.onMessageSent(message, null);\n+        if (deliveryState == Accepted.getInstance())\n+        {\n+            this.listener.onMessageSent(message, null);\n+        }\n+        else if (deliveryState instanceof Rejected)\n+        {\n+            // The message was not accepted by the server, and the reason why is found within the nested error\n+            TransportException ex = AmqpsExceptionTranslator.convertFromAmqpException(((Rejected) deliveryState).getError());\n+            this.listener.onMessageSent(message, ex);\n+        }\n+        else if (deliveryState == Released.getInstance())\n+        {\n+            // As per AMQP spec, this state means the message should be re-delivered to the server at a later time\n+            ProtocolException protocolException = new ProtocolException(\"Message was released by the amqp server\");\n+            protocolException.setRetryable(true);\n+            this.listener.onMessageSent(message, protocolException);\n+        }\n+        else", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE1MTkzOA=="}, "originalCommit": {"oid": "c49f24de70b07333a84e72c4291f5877d82157e0"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2669, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}