{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTE4MjQ3", "number": 818, "title": "refactor(e2e): Simplify file upload tests, re-enable file upload tests on android", "bodyText": "Simplifying the data structure used to collect file upload notifications. Also removing the file upload notification listener thread. Each test can open their own amqp connection to get file upload notifications as long as they all put those notifications in the shared data structure.\nThese tests can still be run in parallel, but cannot be run at the same time in two different test processes. This is how they were before, though.", "createdAt": "2020-06-24T21:13:27Z", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818", "merged": true, "mergeCommit": {"oid": "71752db1eb475bc9c9affb55670b3c5ac688d812"}, "closed": true, "closedAt": "2020-06-24T22:45:16Z", "author": {"login": "timtay-microsoft"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcugrcogH2gAyNDM5NTE4MjQ3OjFiMWM4OGFlZDc1NmIzZDYzZDcxMmFmNGM2ZTBjYmU3NWEyMTdhZjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuh6C6AFqTQzNzA1MzI0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1b1c88aed756b3d63d712af4c6e0cbe75a217af9", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/1b1c88aed756b3d63d712af4c6e0cbe75a217af9", "committedDate": "2020-06-24T21:11:01Z", "message": "refactor(e2e): Simplify file upload tests, re-enable file upload tests on android"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDEyMzU5", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#pullrequestreview-437012359", "createdAt": "2020-06-24T21:15:51Z", "commit": {"oid": "1b1c88aed756b3d63d712af4c6e0cbe75a217af9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToxNTo1MVrOGojZ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToxNTo1MVrOGojZ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3NjI5OQ==", "bodyText": "Because our file upload notifications aren't comparable, the ConcurrentSkipListSet failed to work as a house for the received file upload notifications unless we provided a comparator in this test. The ConcurrentLinkedQueue did not require this, so I simplified our code by just using a ConcurrentLinkedQueue.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#discussion_r445176299", "createdAt": "2020-06-24T21:15:51Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java", "diffHunk": "@@ -87,46 +86,7 @@\n     protected static final String testProxyUser = \"proxyUsername\";\n     protected static final char[] testProxyPass = \"1234\".toCharArray();\n \n-    static Set<FileUploadNotification> activeFileUploadNotifications = new ConcurrentSkipListSet<>(new Comparator<FileUploadNotification>()\n-    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b1c88aed756b3d63d712af4c6e0cbe75a217af9"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDEzMjA0", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#pullrequestreview-437013204", "createdAt": "2020-06-24T21:17:15Z", "commit": {"oid": "1b1c88aed756b3d63d712af4c6e0cbe75a217af9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToxNzoxNVrOGojccw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToxNzoxNVrOGojccw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE3Njk0Nw==", "bodyText": "Instead of running a thread in parallel to all the test methods to collect file upload notifications, now each test method just collects file upload notifications in their own thread. They still pool all the received notifications in the queue above so that if test method A receives a notification that test method B needs, test method B can still get it.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#discussion_r445176947", "createdAt": "2020-06-24T21:17:15Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java", "diffHunk": "@@ -87,46 +86,7 @@\n     protected static final String testProxyUser = \"proxyUsername\";\n     protected static final char[] testProxyPass = \"1234\".toCharArray();\n \n-    static Set<FileUploadNotification> activeFileUploadNotifications = new ConcurrentSkipListSet<>(new Comparator<FileUploadNotification>()\n-    {\n-        @Override\n-        public int compare(FileUploadNotification o1, FileUploadNotification o2) {\n-            if (!o1.getDeviceId().equals(o2.getDeviceId()))\n-            {\n-                return -1;\n-            }\n-\n-            if (!o1.getBlobName().equals(o2.getBlobName()))\n-            {\n-                return -1;\n-            }\n-\n-            if (!o1.getBlobSizeInBytes().equals(o2.getBlobSizeInBytes()))\n-            {\n-                return -1;\n-            }\n-\n-            if (!o1.getBlobUri().equals(o2.getBlobUri()))\n-            {\n-                return -1;\n-            }\n-\n-            if (!o1.getEnqueuedTimeUtcDate().equals(o2.getEnqueuedTimeUtcDate()))\n-            {\n-                return -1;\n-            }\n-\n-            if (!o1.getLastUpdatedTimeDate().equals(o2.getLastUpdatedTimeDate()))\n-            {\n-                return -1;\n-            }\n-\n-            return 0;\n-        }\n-    });\n-    static Thread fileUploadNotificationListenerThread;\n-    static AtomicBoolean hasFileUploadNotificationReceiverThreadFailed = new AtomicBoolean(false);\n-    static Exception fileUploadNotificationReceiverThreadException = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b1c88aed756b3d63d712af4c6e0cbe75a217af9"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf6aca9b466fc91c4802b6a1984114d7bdef0b60", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/bf6aca9b466fc91c4802b6a1984114d7bdef0b60", "committedDate": "2020-06-24T21:31:42Z", "message": "squash"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDQ5NjA2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#pullrequestreview-437049606", "createdAt": "2020-06-24T22:28:22Z", "commit": {"oid": "bf6aca9b466fc91c4802b6a1984114d7bdef0b60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjoyODoyMlrOGolQSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjoyODoyMlrOGolQSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIwNjYwMA==", "bodyText": "has died from exception ... interesting :D", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#discussion_r445206600", "createdAt": "2020-06-24T22:28:22Z", "author": {"login": "azabbasi"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java", "diffHunk": "@@ -570,26 +467,18 @@ private FileUploadNotification getFileUploadNotificationForThisDevice(DeviceClie\n                 }\n             }\n \n-            if (System.currentTimeMillis() - startTime > MAXIMUM_TIME_TO_WAIT_FOR_IOTHUB)\n+            FileUploadNotification fileUploadNotification = testInstance.fileUploadNotificationReceiver.receive(FILE_UPLOAD_QUEUE_POLLING_INTERVAL_MILLISECONDS);\n+\n+            if (fileUploadNotification != null)\n             {\n-                Assert.fail(CorrelationDetailsLoggingAssert.buildExceptionMessage(\"Timed out waiting for file upload notification for device\", deviceClient));\n+                activeFileUploadNotifications.add(fileUploadNotification);\n             }\n \n-            //If the notification polling thread has died, the test cannot complete\n-            if (hasFileUploadNotificationReceiverThreadFailed.get())\n+            if (System.currentTimeMillis() - startTime > MAXIMUM_TIME_TO_WAIT_FOR_IOTHUB_MILLISECONDS)\n             {\n-                if (fileUploadNotificationReceiverThreadException != null)\n-                {\n-                    Assert.fail(CorrelationDetailsLoggingAssert.buildExceptionMessage(\"File upload notification listener thread has died from exception \" + Tools.getStackTraceFromThrowable(fileUploadNotificationReceiverThreadException), deviceClient));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6aca9b466fc91c4802b6a1984114d7bdef0b60"}, "originalPosition": 253}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDUwMTI4", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#pullrequestreview-437050128", "createdAt": "2020-06-24T22:29:33Z", "commit": {"oid": "bf6aca9b466fc91c4802b6a1984114d7bdef0b60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjoyOTozM1rOGolR7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjoyOTozM1rOGolR7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIwNzAyMg==", "bodyText": "() -> !! and I thought I have seen it all :D", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#discussion_r445207022", "createdAt": "2020-06-24T22:29:33Z", "author": {"login": "azabbasi"}, "path": "iot-e2e-tests/common/src/test/java/tests/integration/com/microsoft/azure/sdk/iot/iothub/FileUploadTests.java", "diffHunk": "@@ -508,19 +409,15 @@ public void uploadToBlobAsyncMultipleFilesParallel() throws URISyntaxException,\n         for (int i = 1; i < MAX_FILES_TO_UPLOAD; i++)\n         {\n             final int index = i;\n-            executor.submit(new Runnable()\n+            executor.submit(() ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf6aca9b466fc91c4802b6a1984114d7bdef0b60"}, "originalPosition": 203}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDUwMzcx", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#pullrequestreview-437050371", "createdAt": "2020-06-24T22:30:06Z", "commit": {"oid": "bf6aca9b466fc91c4802b6a1984114d7bdef0b60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDUzMjQ0", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/818#pullrequestreview-437053244", "createdAt": "2020-06-24T22:36:52Z", "commit": {"oid": "bf6aca9b466fc91c4802b6a1984114d7bdef0b60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1680, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}