{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NjM0Mjgx", "number": 809, "title": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter", "bodyText": "Consolidating all the Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner.\nIn working on this PR, I found out that file upload tests were unintentionally being skipped for android. They do seem to fail when run, albeit it appears to be a bug in the test logic, not the actual file upload code. I'll open a separate PR to fix that.\nI'm still fiddling with the test groupings to lower the build time, but it takes roughly 35 minutes for all the android tests to finish", "createdAt": "2020-06-15T16:03:14Z", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809", "merged": true, "mergeCommit": {"oid": "4cb8d565e3b331f5b1beb1e5f6a46589f0cdb7a0"}, "closed": true, "closedAt": "2020-06-16T21:56:56Z", "author": {"login": "timtay-microsoft"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcri402ABqjM0NDUxMTk2Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcr7BbVgFqTQzMTg1NDQ2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1cd715b8c5cce0c1d412e69b8170ffcbc1f17bae", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/1cd715b8c5cce0c1d412e69b8170ffcbc1f17bae", "committedDate": "2020-06-15T16:01:42Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}, "afterCommit": {"oid": "08ec0937516d9147d7f83e384bfe72868cf64810", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/08ec0937516d9147d7f83e384bfe72868cf64810", "committedDate": "2020-06-15T16:03:33Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08ec0937516d9147d7f83e384bfe72868cf64810", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/08ec0937516d9147d7f83e384bfe72868cf64810", "committedDate": "2020-06-15T16:03:33Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}, "afterCommit": {"oid": "32c883f791c7a5f6ca89efb68416b836b7a6920d", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/32c883f791c7a5f6ca89efb68416b836b7a6920d", "committedDate": "2020-06-15T16:04:29Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32c883f791c7a5f6ca89efb68416b836b7a6920d", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/32c883f791c7a5f6ca89efb68416b836b7a6920d", "committedDate": "2020-06-15T16:04:29Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}, "afterCommit": {"oid": "d5875acac86f7b3dd07b6fc51719727451f201ce", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d5875acac86f7b3dd07b6fc51719727451f201ce", "committedDate": "2020-06-15T16:06:57Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5875acac86f7b3dd07b6fc51719727451f201ce", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/d5875acac86f7b3dd07b6fc51719727451f201ce", "committedDate": "2020-06-15T16:06:57Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}, "afterCommit": {"oid": "e22b7e3f34dff2adab0423817426ba4cb47c2b32", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e22b7e3f34dff2adab0423817426ba4cb47c2b32", "committedDate": "2020-06-15T16:19:11Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e22b7e3f34dff2adab0423817426ba4cb47c2b32", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/e22b7e3f34dff2adab0423817426ba4cb47c2b32", "committedDate": "2020-06-15T16:19:11Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}, "afterCommit": {"oid": "a3bef754de428d3ba1af0e0bd4033672b2b8d6a6", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/a3bef754de428d3ba1af0e0bd4033672b2b8d6a6", "committedDate": "2020-06-15T16:58:05Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwODkxNjIx", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-430891621", "createdAt": "2020-06-15T18:29:00Z", "commit": {"oid": "a3bef754de428d3ba1af0e0bd4033672b2b8d6a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyOTowMFrOGj90Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyOTowMFrOGj90Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NjExMA==", "bodyText": "This timeout was simply too long. Any test timeout failures will be caught in the first 30 seconds", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r440366110", "createdAt": "2020-06-15T18:29:00Z", "author": {"login": "timtay-microsoft"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/setup/iothub/DeviceTwinCommon.java", "diffHunk": "@@ -48,9 +48,9 @@\n {\n     // Max time to wait to see it on Hub\n     protected static final long PERIODIC_WAIT_TIME_FOR_VERIFICATION = 1000; // 1 sec\n-    protected static final long MAX_WAIT_TIME_FOR_VERIFICATION = 180000; // 180 sec", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3bef754de428d3ba1af0e0bd4033672b2b8d6a6"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzgxNDQx", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431781441", "createdAt": "2020-06-16T18:25:09Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoyNToxMFrOGkn9Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoyNToxMFrOGkn9Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NjU3MA==", "bodyText": "Is this really a \"dummy\"? Else we might want to rename it to something else", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441056570", "createdAt": "2020-06-16T18:25:10Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/helper/DummyAndroidRunner.java", "diffHunk": "@@ -5,28 +5,13 @@\n \n package com.microsoft.azure.sdk.iot.android.helper;\n \n-import com.microsoft.appcenter.espresso.Factory;\n-import com.microsoft.appcenter.espresso.ReportHelper;\n-import com.microsoft.azure.sdk.iot.common.helpers.BasicTierOnlyRule;\n-import com.microsoft.azure.sdk.iot.common.helpers.ConditionalIgnoreRule;\n-\n-import org.junit.After;\n-import org.junit.Rule;\n import org.junit.Test;\n \n-// This class is to add a dummy test for every TestGroup.  Currently, App Center errors out\n-// when a TestGroup did not execute any actual tests.\n+// This class is to add a dummy test for every TestGroup.  Currently, android testing errors out\n+// when a TestGroup did not execute any actual tests, so this forces each test group to have at least\n+// this test\n public class DummyAndroidRunner", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzgyMjUz", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431782253", "createdAt": "2020-06-16T18:26:13Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoyNjoxM1rOGkn_vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoyNjoxM1rOGkn_vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NzIxMw==", "bodyText": "q - we need fewer test groups now because...? can we parallelize more stuff in the android emulator, or do we spin up more emulators?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441057213", "createdAt": "2020-06-16T18:26:13Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/helper/DummyAndroidRunner.java", "diffHunk": "@@ -44,30 +29,8 @@ public void labelSnapshot()\n     @TestGroup15\n     @TestGroup16\n     @TestGroup17", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzg0MTA3", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431784107", "createdAt": "2020-06-16T18:28:43Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoyODo0M1rOGkoFGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoyODo0M1rOGkoFGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1ODU4Ng==", "bodyText": "Does TestSuite annotation work better with emulators? That way we wouldn't need a fakeTest class and a lot of other overhead code.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441058586", "createdAt": "2020-06-16T18:28:43Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/helper/DummyAndroidRunner.java", "diffHunk": "@@ -5,28 +5,13 @@\n \n package com.microsoft.azure.sdk.iot.android.helper;\n \n-import com.microsoft.appcenter.espresso.Factory;\n-import com.microsoft.appcenter.espresso.ReportHelper;\n-import com.microsoft.azure.sdk.iot.common.helpers.BasicTierOnlyRule;\n-import com.microsoft.azure.sdk.iot.common.helpers.ConditionalIgnoreRule;\n-\n-import org.junit.After;\n-import org.junit.Rule;\n import org.junit.Test;\n \n-// This class is to add a dummy test for every TestGroup.  Currently, App Center errors out\n-// when a TestGroup did not execute any actual tests.\n+// This class is to add a dummy test for every TestGroup.  Currently, android testing errors out\n+// when a TestGroup did not execute any actual tests, so this forces each test group to have at least\n+// this test\n public class DummyAndroidRunner\n {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzkyMzUw", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431792350", "createdAt": "2020-06-16T18:39:56Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODozOTo1NlrOGkoeVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODozOTo1NlrOGkoeVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NTA0Ng==", "bodyText": "Q - why was this here?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441065046", "createdAt": "2020-06-16T18:39:56Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/iothub/FileUploadAndroidRunner.java", "diffHunk": "@@ -46,17 +44,4 @@ public static Collection inputsCommons() throws Exception\n         isBasicTierHub = Boolean.parseBoolean(BuildConfig.IsBasicTierHub);\n         return FileUploadTests.inputs();\n     }\n-\n-    @Ignore\n-    @Override\n-    @Test\n-    public void uploadToBlobAsyncSingleFileZeroLength()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzkzMTcy", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431793172", "createdAt": "2020-06-16T18:41:06Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0MTowNlrOGkog6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0MTowNlrOGkog6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NTcwNA==", "bodyText": "I assume this cleanup is happening elsewhere now?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441065704", "createdAt": "2020-06-16T18:41:06Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/iothub/HubTierConnectionAndroidRunner.java", "diffHunk": "@@ -51,16 +44,4 @@ public static Collection inputs() throws IOException, IotHubException, GeneralSe\n         identities = getIdentities(inputs);\n         return inputs;\n     }\n-\n-    @AfterClass\n-    public static void cleanUpResources()\n-    {\n-        tearDown(identities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzk0Nzg4", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431794788", "createdAt": "2020-06-16T18:43:23Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0MzoyM1rOGkol0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0MzoyM1rOGkol0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2Njk2Mw==", "bodyText": "Q - don't we have tests that take in the SSL context directly, or do they have a specific test class?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441066963", "createdAt": "2020-06-16T18:43:23Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/iothub/errorinjection/twin/ReportedPropertiesErrInjAndroidRunner.java", "diffHunk": "@@ -24,17 +21,14 @@\n import java.security.GeneralSecurityException;\n import java.util.Collection;\n \n-@TestGroup26\n+@TestGroup8\n @RunWith(Parameterized.class)\n-public class ReportedPropertiesDeviceAndroidRunner extends ReportedPropertiesTests\n+public class ReportedPropertiesErrInjAndroidRunner extends ReportedPropertiesErrInjTests\n {\n     @Rule\n     public Rerun count = new Rerun(3);\n \n-    @Rule\n-    public ReportHelper reportHelper = Factory.getReportHelper();\n-\n-    public ReportedPropertiesDeviceAndroidRunner(IotHubClientProtocol protocol, AuthenticationType authenticationType, ClientType clientType, String publicKeyCert, String privateKey, String x509Thumbprint)\n+    public ReportedPropertiesErrInjAndroidRunner(IotHubClientProtocol protocol, AuthenticationType authenticationType, ClientType clientType, String publicKeyCert, String privateKey, String x509Thumbprint)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzk2NzU2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431796756", "createdAt": "2020-06-16T18:46:07Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0NjowOFrOGkorlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0NjowOFrOGkorlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2ODQzNg==", "bodyText": "nit: It would help if these constructors and parameterized test methods have some comments that describe what they do. I know this has been a point of confusion for me in the past, because these tests have pretty deep inheritance, and the test class and method names are not descriptive of what they are responsible for.", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441068436", "createdAt": "2020-06-16T18:46:08Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/android/app/src/androidTest/java/com/microsoft/azure/sdk/iot/android/iothub/messaging/SendMessagesAndroidRunner.java", "diffHunk": "@@ -26,19 +23,15 @@\n import java.net.URISyntaxException;\n import java.security.GeneralSecurityException;\n import java.util.Collection;\n-import java.util.Collections;\n \n-@TestGroup33\n+@TestGroup9\n @RunWith(Parameterized.class)\n-public class SendMessagesModuleAndroidRunner extends SendMessagesTests\n+public class SendMessagesAndroidRunner extends SendMessagesTests\n {\n     @Rule\n     public Rerun count = new Rerun(3);\n \n-    @Rule\n-    public ReportHelper reportHelper = Factory.getReportHelper();\n-\n-    public SendMessagesModuleAndroidRunner(IotHubClientProtocol protocol, AuthenticationType authenticationType, ClientType clientType, String publicKeyCert, String privateKey, String x509Thumbprint, boolean useHttpProxy) throws Exception\n+    public SendMessagesAndroidRunner(IotHubClientProtocol protocol, AuthenticationType authenticationType, ClientType clientType, String publicKeyCert, String privateKey, String x509Thumbprint, boolean useHttpProxy) throws Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzk5MjMw", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431799230", "createdAt": "2020-06-16T18:49:27Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0OToyN1rOGkoy-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0OToyN1rOGkoy-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDMzMA==", "bodyText": "removed, why?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441070330", "createdAt": "2020-06-16T18:49:27Z", "author": {"login": "abhipsaMisra"}, "path": "iot-e2e-tests/common/src/main/java/com/microsoft/azure/sdk/iot/common/tests/iothub/telemetry/SendMessagesTests.java", "diffHunk": "@@ -58,12 +56,6 @@ public void sendSecurityMessages() throws Exception\n     @Test\n     public void sendMessages() throws Exception\n     {\n-        if (testInstance.protocol == MQTT_WS && (testInstance.authenticationType == SELF_SIGNED || testInstance.authenticationType == CERTIFICATE_AUTHORITY))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzk5ODI2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431799826", "createdAt": "2020-06-16T18:50:20Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1MDoyMVrOGko03Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1MDoyMVrOGko03Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MDgxMw==", "bodyText": "whoa!", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441070813", "createdAt": "2020-06-16T18:50:21Z", "author": {"login": "abhipsaMisra"}, "path": "vsts/RunTestsOnEmulator.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+\n+# -e flag to force this command to run on what should be the only emulator active on this machine\n+echo 'Installing APKs on emulator'\n+adb -e install -r iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk\n+adb -e install -r iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk\n+\n+#List instrumentation classes, for logging purposes only\n+echo 'Listing available instrumentations:'\n+adb -e shell pm list instrumentation\n+echo ''\n+\n+annotationString=\"com.microsoft.azure.sdk.iot.android.helper.${TEST_GROUP_ID}\"\n+echo 'Running android tests with annotation'\n+echo $annotationString\n+\n+#Return code from adb shell isn't returned as one would expect. Need to capture output logs and analyze them to determine if this test run was a success or not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODAwNzI2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431800726", "createdAt": "2020-06-16T18:51:36Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1MTozNlrOGko3mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1MTozNlrOGko3mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MTUxMg==", "bodyText": "Do we get test results on the AzureDevOps pane, or will we have to parse the output log file?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441071512", "createdAt": "2020-06-16T18:51:36Z", "author": {"login": "abhipsaMisra"}, "path": "vsts/RunTestsOnEmulator.sh", "diffHunk": "@@ -0,0 +1,33 @@\n+#!/usr/bin/env bash\n+\n+# -e flag to force this command to run on what should be the only emulator active on this machine\n+echo 'Installing APKs on emulator'\n+adb -e install -r iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk\n+adb -e install -r iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk\n+\n+#List instrumentation classes, for logging purposes only\n+echo 'Listing available instrumentations:'\n+adb -e shell pm list instrumentation\n+echo ''\n+\n+annotationString=\"com.microsoft.azure.sdk.iot.android.helper.${TEST_GROUP_ID}\"\n+echo 'Running android tests with annotation'\n+echo $annotationString\n+\n+#Return code from adb shell isn't returned as one would expect. Need to capture output logs and analyze them to determine if this test run was a success or not\n+TestLogs=$(adb -e shell am instrument -w -e annotation $annotationString com.iothub.azure.microsoft.com.androide2e.test/android.support.test.runner.AndroidJUnitRunner)\n+\n+echo 'Result of running tests'\n+echo \"$TestLogs\"\n+\n+#This string is always present in the output logs from android testing if a test failed. Hacky, but there is no return code\n+# to check instead.\n+FailureMessage='FAILURES!!!'\n+\n+if grep -q \"$FailureMessage\" <<< \"$TestLogs\"; then\n+    echo 'Test failures detected, exiting...'\n+    exit -1\n+fi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODAxNTMw", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431801530", "createdAt": "2020-06-16T18:52:47Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Mjo0N1rOGko6JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Mjo0N1rOGko6JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MjE2NA==", "bodyText": "are we testing against just a single android API version, or the mix and max that we claim to support?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441072164", "createdAt": "2020-06-16T18:52:47Z", "author": {"login": "abhipsaMisra"}, "path": "vsts/StartEmulator.sh", "diffHunk": "@@ -0,0 +1,32 @@\n+#!/usr/bin/env bash\n+\n+echo 'Listing available android sdks for installation'\n+$ANDROID_HOME/tools/bin/sdkmanager --list | grep system-images\n+\n+emulatorImage='system-images;android-28;google_apis;x86_64'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODAzNjE0", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431803614", "createdAt": "2020-06-16T18:55:50Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1NTo1MFrOGkpASA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1NTo1MFrOGkpASA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3MzczNg==", "bodyText": "does this file still exist?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441073736", "createdAt": "2020-06-16T18:55:50Z", "author": {"login": "abhipsaMisra"}, "path": "vsts/install_appcenter_cli.ps1", "diffHunk": "@@ -1 +0,0 @@\n-\ufeffnpm install appcenter-cli", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODA0MzEw", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431804310", "createdAt": "2020-06-16T18:56:48Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Njo0OFrOGkpCXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1Njo0OFrOGkpCXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3NDI3MQ==", "bodyText": "so few env var required here!", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441074271", "createdAt": "2020-06-16T18:56:48Z", "author": {"login": "abhipsaMisra"}, "path": "vsts/windowsLinuxAndAndroidBuildMatrixConfig.yaml", "diffHunk": "@@ -1,299 +1,249 @@\n name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)\n \n jobs:\n-### Windows ###\n-- job: Windows\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Windows\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/start_tpm_windows.ps1\n-    displayName: 'Start TPM Simulator'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+  ### Windows ###\n+  - job: Windows\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted VS2017\n+    displayName: Windows\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/start_tpm_windows.ps1\n+        displayName: 'Start TPM Simulator'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODA3MDA4", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431807008", "createdAt": "2020-06-16T19:00:33Z", "commit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTowMDozM1rOGkpKhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTowMDozM1rOGkpKhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3NjM1Ng==", "bodyText": "Note that the android environment variable values are set during build time, not runtime. The APKs that are generated from a build contain the environment variables such as iothub connection string. As such, there is no need to include them here, too", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441076356", "createdAt": "2020-06-16T19:00:33Z", "author": {"login": "timtay-microsoft"}, "path": "vsts/windowsLinuxAndAndroidBuildMatrixConfig.yaml", "diffHunk": "@@ -1,299 +1,249 @@\n name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)\n \n jobs:\n-### Windows ###\n-- job: Windows\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Windows\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/start_tpm_windows.ps1\n-    displayName: 'Start TPM Simulator'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+  ### Windows ###\n+  - job: Windows\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted VS2017\n+    displayName: Windows\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/start_tpm_windows.ps1\n+        displayName: 'Start TPM Simulator'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+        condition: always()\n \n-  - task: PublishTestResults@2\n-    displayName: 'Publish Test Results'\n-    inputs:\n-      mergeTestResults: true\n-    continueOnError: true\n-    condition: always()\n-    \n-### Linux ###\n-- job: Linux\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted Ubuntu 1604\n-  displayName: Linux\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)'\n+          Contents: |\n+            **/*.trx\n+            **/*.xml\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: Docker@1\n-    displayName: 'Start TPM Simulator'\n-    inputs:\n-      containerregistrytype: 'Container Registry'\n-      command: 'Run an image'\n-      imageName: aziotbld/testtpm\n-      containerName: 'testtpm-instance'\n-      ports: |\n-       127.0.0.1:2321:2321\n-       127.0.0.1:2322:2322\n-      restartPolicy: unlessStopped      \n-      \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+      - task: PublishBuildArtifacts@1\n+        displayName: 'Publish Artifact Staging Directory'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - task: PublishTestResults@2\n+        displayName: 'Publish Test Results'\n+        inputs:\n+          mergeTestResults: true\n+        continueOnError: true\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+  ### Linux ###\n+  - job: Linux\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted Ubuntu 1604\n+    displayName: Linux\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishTestResults@2\n-    displayName: 'Publish Test Results'\n-    inputs:\n-      mergeTestResults: true\n-    continueOnError: true\n-    condition: always()  \n-    \n- ### Android, Multi configuration build (12 different test groups to cover) ###\n-- job: AndroidBuild\n-  timeoutInMinutes: 45\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Android Build\n+      - task: Docker@1\n+        displayName: 'Start TPM Simulator'\n+        inputs:\n+          containerregistrytype: 'Container Registry'\n+          command: 'Run an image'\n+          imageName: aziotbld/testtpm\n+          containerName: 'testtpm-instance'\n+          ports: |\n+            127.0.0.1:2321:2321\n+            127.0.0.1:2322:2322\n+          restartPolicy: unlessStopped\n \n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+        condition: always()\n \n-  - powershell: ./vsts/android_java.cmd\n-    displayName: 'Android Build'\n-    env:\n-      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)\n-      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)\n-      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)\n-      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB) \n-    condition: always()\n-      \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'\n-      Contents: |\n-       *.*\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n-    \n-  - task: PublishPipelineArtifact@0\n-    inputs:\n-      artifactName: 'androidBuildFiles'\n-      targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'\n-    \n-- job: AndroidTest\n-  timeoutInMinutes: 80\n-  pool:\n-    vmImage: 'macOS-latest'\n-  strategy:\n-    maxParallel: 12\n-    matrix:\n-      TestGroup1:\n-        ANDROID_TEST_GROUP_ID: TestGroup1\n-      TestGroup2:\n-        ANDROID_TEST_GROUP_ID: TestGroup2\n-      TestGroup3:\n-        ANDROID_TEST_GROUP_ID: TestGroup3\n-      TestGroup4:\n-        ANDROID_TEST_GROUP_ID: TestGroup4\n-      TestGroup5:\n-        ANDROID_TEST_GROUP_ID: TestGroup5\n-      TestGroup6:\n-        ANDROID_TEST_GROUP_ID: TestGroup6\n-      TestGroup7:\n-        ANDROID_TEST_GROUP_ID: TestGroup7\n-      TestGroup8:\n-        ANDROID_TEST_GROUP_ID: TestGroup8\n-      TestGroup9:\n-        ANDROID_TEST_GROUP_ID: TestGroup9\n-      TestGroup10:\n-        ANDROID_TEST_GROUP_ID: TestGroup10\n-      TestGroup11:\n-        ANDROID_TEST_GROUP_ID: TestGroup11\n-      TestGroup12:\n-        ANDROID_TEST_GROUP_ID: TestGroup12\n-      TestGroup13:\n-        ANDROID_TEST_GROUP_ID: TestGroup13\n-      TestGroup14:\n-        ANDROID_TEST_GROUP_ID: TestGroup14\n-      TestGroup15:\n-        ANDROID_TEST_GROUP_ID: TestGroup15\n-      TestGroup16:\n-        ANDROID_TEST_GROUP_ID: TestGroup16\n-      TestGroup17:\n-        ANDROID_TEST_GROUP_ID: TestGroup17\n-      TestGroup18:\n-        ANDROID_TEST_GROUP_ID: TestGroup18\n-      TestGroup19:\n-        ANDROID_TEST_GROUP_ID: TestGroup19\n-      TestGroup20:\n-        ANDROID_TEST_GROUP_ID: TestGroup20\n-      TestGroup21:\n-        ANDROID_TEST_GROUP_ID: TestGroup21\n-      TestGroup22:\n-        ANDROID_TEST_GROUP_ID: TestGroup22\n-      TestGroup23:\n-        ANDROID_TEST_GROUP_ID: TestGroup23\n-      TestGroup24:\n-        ANDROID_TEST_GROUP_ID: TestGroup24\n-      TestGroup25:\n-        ANDROID_TEST_GROUP_ID: TestGroup25\n-      TestGroup26:\n-        ANDROID_TEST_GROUP_ID: TestGroup26\n-      TestGroup27:\n-        ANDROID_TEST_GROUP_ID: TestGroup27\n-      TestGroup28:\n-        ANDROID_TEST_GROUP_ID: TestGroup28\n-      TestGroup29:\n-        ANDROID_TEST_GROUP_ID: TestGroup29\n-      TestGroup30:\n-        ANDROID_TEST_GROUP_ID: TestGroup30\n-      TestGroup31:\n-        ANDROID_TEST_GROUP_ID: TestGroup31\n-      TestGroup32:\n-        ANDROID_TEST_GROUP_ID: TestGroup32\n-      TestGroup33:\n-        ANDROID_TEST_GROUP_ID: TestGroup33\n-      TestGroup34:\n-        ANDROID_TEST_GROUP_ID: TestGroup34\n-      TestGroup35:\n-        ANDROID_TEST_GROUP_ID: TestGroup35\n-      TestGroup36:\n-        ANDROID_TEST_GROUP_ID: TestGroup36\n-      TestGroup37:\n-        ANDROID_TEST_GROUP_ID: TestGroup37\n-      TestGroup38:\n-        ANDROID_TEST_GROUP_ID: TestGroup38\n-      TestGroup39:\n-        ANDROID_TEST_GROUP_ID: TestGroup39\n-      \n-  displayName: Android Test\n-  dependsOn: AndroidBuild\n-  steps:\n-  - task: PowerShell@2\n-    displayName: 'determine if testing needed'\n-    condition: always()\n-    inputs:\n-      targetType: 'filePath'\n-      filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1\n-    env:\n-      TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)'\n+          Contents: |\n+            **/*.trx\n+            **/*.xml\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: PowerShell@2\n-    displayName: 'Install app center cli'\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    inputs:\n-      targetType: 'filePath'\n-      filePath: './vsts/install_appcenter_cli.ps1'\n+      - task: PublishBuildArtifacts@1\n+        displayName: 'Publish Artifact Staging Directory'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: DownloadPipelineArtifact@0\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    inputs:\n-      artifactName: 'androidBuildFiles'\n-      targetPath: $(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk\n-  \n-  - task: AppCenterTest@1\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    displayName: 'E2E with Visual Studio App Center'\n-    inputs:\n-      appFile: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk'\n-      frameworkOption: espresso\n-      espressoBuildDirectory: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug'\n-      serverEndpoint: 'AppCenter connection aziotclb'\n-      appSlug: 'Azure-Iot-Sdk/androide2e'\n-      devices: 'Azure-Iot-Sdk/api28_2'\n-      runOptions: '--test-parameter annotation=com.microsoft.azure.sdk.iot.android.helper.$(ANDROID_TEST_GROUP_ID)'\n-      showDebugOutput: true\n\\ No newline at end of file\n+      - task: PublishTestResults@2\n+        displayName: 'Publish Test Results'\n+        inputs:\n+          mergeTestResults: true\n+        continueOnError: true\n+        condition: always()\n+\n+  ### Android, Multi configuration build (12 different test groups to cover) ###\n+  - job: AndroidBuild\n+    timeoutInMinutes: 45\n+    pool:\n+      name: Hosted VS2017\n+    displayName: Android Build\n+\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n+\n+      - powershell: ./vsts/android_java.cmd\n+        displayName: 'Android Build'\n+        env:\n+          IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)\n+          DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)\n+          IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)\n+          INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+        condition: always()\n+\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'\n+          Contents: |\n+            *.*\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n+\n+      - task: PublishPipelineArtifact@0\n+        inputs:\n+          artifactName: 'androidBuildFiles'\n+          targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'\n+\n+  - job: AndroidTest\n+    timeoutInMinutes: 80\n+    pool:\n+      vmImage: 'macOS-latest'\n+    strategy:\n+      maxParallel: 17\n+      matrix:\n+        TestGroup1:\n+          ANDROID_TEST_GROUP_ID: TestGroup1\n+        TestGroup2:\n+          ANDROID_TEST_GROUP_ID: TestGroup2\n+        TestGroup3:\n+          ANDROID_TEST_GROUP_ID: TestGroup3\n+        TestGroup4:\n+          ANDROID_TEST_GROUP_ID: TestGroup4\n+        TestGroup5:\n+          ANDROID_TEST_GROUP_ID: TestGroup5\n+        TestGroup6:\n+          ANDROID_TEST_GROUP_ID: TestGroup6\n+        TestGroup7:\n+          ANDROID_TEST_GROUP_ID: TestGroup7\n+        TestGroup8:\n+          ANDROID_TEST_GROUP_ID: TestGroup8\n+        TestGroup9:\n+          ANDROID_TEST_GROUP_ID: TestGroup9\n+        TestGroup10:\n+          ANDROID_TEST_GROUP_ID: TestGroup10\n+        TestGroup11:\n+          ANDROID_TEST_GROUP_ID: TestGroup11\n+        TestGroup12:\n+          ANDROID_TEST_GROUP_ID: TestGroup12\n+        TestGroup13:\n+          ANDROID_TEST_GROUP_ID: TestGroup13\n+        TestGroup14:\n+          ANDROID_TEST_GROUP_ID: TestGroup14\n+        TestGroup15:\n+          ANDROID_TEST_GROUP_ID: TestGroup15\n+        TestGroup16:\n+          ANDROID_TEST_GROUP_ID: TestGroup16\n+        TestGroup17:\n+          ANDROID_TEST_GROUP_ID: TestGroup17\n+\n+    displayName: Android Test\n+    dependsOn: AndroidBuild\n+    steps:\n+      - task: PowerShell@2\n+        displayName: 'determine if testing needed'\n+        condition: always()\n+        inputs:\n+          targetType: 'filePath'\n+          filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1\n+        env:\n+          TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+\n+      - task: DownloadPipelineArtifact@0\n+        condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n+        inputs:\n+          artifactName: 'androidBuildFiles'\n+          targetPath: $(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk\n+\n+      - task: Bash@3\n+        displayName: 'Start Android Emulator'\n+        inputs:\n+          targetType: 'filePath'\n+          filePath: '$(Build.SourcesDirectory)/vsts/StartEmulator.sh'\n+\n+      - task: Bash@3\n+        displayName: 'Run tests on emulator'\n+        inputs:\n+          targetType: 'filePath'\n+          filePath: '$(Build.SourcesDirectory)/vsts/RunTestsOnEmulator.sh'\n+        env:\n+          TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f7facd9cbdb16f6d47c1860499757aa143726a"}, "originalPosition": 535}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODA3MDk2", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431807096", "createdAt": "2020-06-16T19:00:39Z", "commit": {"oid": "91171627a8f001c6dcac53daa271f0686f4e9225"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4df6c35dd81bd650c3ff6a1b39849819c86ec309", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4df6c35dd81bd650c3ff6a1b39849819c86ec309", "committedDate": "2020-06-16T19:03:12Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91171627a8f001c6dcac53daa271f0686f4e9225", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/91171627a8f001c6dcac53daa271f0686f4e9225", "committedDate": "2020-06-16T18:37:07Z", "message": "Rename fake android test runner"}, "afterCommit": {"oid": "4df6c35dd81bd650c3ff6a1b39849819c86ec309", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/4df6c35dd81bd650c3ff6a1b39849819c86ec309", "committedDate": "2020-06-16T19:03:12Z", "message": "Refactor(e2e): Run Android tests on Azure Devops emulators instead of AppCenter\n\nConsolidating all th Android runners that used to be divided into ___DeviceAndroidRunner and ___ModuleAndroidRunner into just ___AndroidRunner."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0cefc505f5eca8351672576b538ff7da72bfdcb", "author": {"user": {"login": "timtay-microsoft", "name": null}}, "url": "https://github.com/Azure/azure-iot-sdk-java/commit/a0cefc505f5eca8351672576b538ff7da72bfdcb", "committedDate": "2020-06-16T19:19:53Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODU0NDY3", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#pullrequestreview-431854467", "createdAt": "2020-06-16T20:10:47Z", "commit": {"oid": "a0cefc505f5eca8351672576b538ff7da72bfdcb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoxMDo0N1rOGkrZ6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoxMDo0N1rOGkrZ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMzA2NA==", "bodyText": "The doc mentioned that: The Android Emulator is currently available only on the Hosted macOS agent.\nBut we seem to be using a win image here?", "url": "https://github.com/Azure/azure-iot-sdk-java/pull/809#discussion_r441113064", "createdAt": "2020-06-16T20:10:47Z", "author": {"login": "abhipsaMisra"}, "path": "vsts/windowsLinuxAndAndroidBuildMatrixConfig.yaml", "diffHunk": "@@ -1,299 +1,248 @@\n name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)\n \n jobs:\n-### Windows ###\n-- job: Windows\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Windows\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/start_tpm_windows.ps1\n-    displayName: 'Start TPM Simulator'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n-    \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+  ### Windows ###\n+  - job: Windows\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted VS2017\n+    displayName: Windows\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/start_tpm_windows.ps1\n+        displayName: 'Start TPM Simulator'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(WINDOWS-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(WINDOWS-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(WINDOWS-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+        condition: always()\n \n-  - task: PublishTestResults@2\n-    displayName: 'Publish Test Results'\n-    inputs:\n-      mergeTestResults: true\n-    continueOnError: true\n-    condition: always()\n-    \n-### Linux ###\n-- job: Linux\n-  timeoutInMinutes: 180\n-  pool:\n-    name: Hosted Ubuntu 1604\n-  displayName: Linux\n-  condition: succeeded()\n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)'\n+          Contents: |\n+            **/*.trx\n+            **/*.xml\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: Docker@1\n-    displayName: 'Start TPM Simulator'\n-    inputs:\n-      containerregistrytype: 'Container Registry'\n-      command: 'Run an image'\n-      imageName: aziotbld/testtpm\n-      containerName: 'testtpm-instance'\n-      ports: |\n-       127.0.0.1:2321:2321\n-       127.0.0.1:2322:2322\n-      restartPolicy: unlessStopped      \n-      \n-  - powershell: ./vsts/build_repo.ps1\n-    displayName: 'Build and Test'\n-    env:\n-      IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)\n-      IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)\n-      IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n-    condition: always()\n+      - task: PublishBuildArtifacts@1\n+        displayName: 'Publish Artifact Staging Directory'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)'\n-      Contents: |\n-       **/*.trx\n-       **/*.xml\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n+      - task: PublishTestResults@2\n+        displayName: 'Publish Test Results'\n+        inputs:\n+          mergeTestResults: true\n+        continueOnError: true\n+        condition: always()\n \n-  - task: PublishBuildArtifacts@1\n-    displayName: 'Publish Artifact Staging Directory'\n-    continueOnError: true\n-    condition: always()\n+  ### Linux ###\n+  - job: Linux\n+    timeoutInMinutes: 180\n+    pool:\n+      name: Hosted Ubuntu 1604\n+    displayName: Linux\n+    condition: succeeded()\n+    steps:\n+      - powershell: ./vsts/echo_versions.ps1\n+        displayName: 'Echo Versions'\n+        env:\n+          COMMIT_FROM: $(COMMIT_FROM)\n+        condition: always()\n \n-  - task: PublishTestResults@2\n-    displayName: 'Publish Test Results'\n-    inputs:\n-      mergeTestResults: true\n-    continueOnError: true\n-    condition: always()  \n-    \n- ### Android, Multi configuration build (12 different test groups to cover) ###\n-- job: AndroidBuild\n-  timeoutInMinutes: 45\n-  pool:\n-    name: Hosted VS2017\n-  displayName: Android Build\n+      - task: Docker@1\n+        displayName: 'Start TPM Simulator'\n+        inputs:\n+          containerregistrytype: 'Container Registry'\n+          command: 'Run an image'\n+          imageName: aziotbld/testtpm\n+          containerName: 'testtpm-instance'\n+          ports: |\n+            127.0.0.1:2321:2321\n+            127.0.0.1:2322:2322\n+          restartPolicy: unlessStopped\n \n-  steps:\n-  - powershell: ./vsts/echo_versions.ps1\n-    displayName: 'Echo Versions'\n-    env:\n-      COMMIT_FROM: $(COMMIT_FROM)\n-    condition: always()\n+      - powershell: ./vsts/build_repo.ps1\n+        displayName: 'Build and Test'\n+        env:\n+          IOT_DPS_CONNECTION_STRING: $(LINUX-IOT-DPS-CONNECTION-STRING)\n+          IOT_DPS_ID_SCOPE: $(LINUX-IOT-DPS-ID-SCOPE)\n+          IOTHUB_CONNECTION_STRING: $(LINUX-IOTHUB-CONNECTION-STRING)\n+          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n+          IOTHUB_DEVICE_CONN_STRING_INVALIDCERT: $(IOTHUB-DEVICE-CONN-STRING-INVALIDCERT)\n+          IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n+          DPS_GLOBALDEVICEENDPOINT_INVALIDCERT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n+          PROVISIONING_CONNECTION_STRING_INVALIDCERT: $(PROVISIONING-CONNECTION-STRING-INVALIDCERT)\n+          CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n+          FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n+          IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n+          TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+        condition: always()\n \n-  - powershell: ./vsts/android_java.cmd\n-    displayName: 'Android Build'\n-    env:\n-      IOTHUB_CONNECTION_STRING: $(ANDROID-IOTHUB-CONNECTION-STRING)\n-      STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)\n-      IOTHUB_CONN_STRING_INVALIDCERT: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      APPCENTER_APP_SECRET: $(APPCENTER-APP-SECRET)\n-      DEVICE_PROVISIONING_SERVICE_ID_SCOPE: $(ANDROID-IOT-DPS-ID-SCOPE)\n-      IOT_DPS_CONNECTION_STRING: $(ANDROID-IOT-DPS-CONNECTION-STRING)\n-      INVALID_DEVICE_PROVISIONING_SERVICE_GLOBAL_ENDPOINT: $(DPS-GLOBALDEVICEENDPOINT-INVALIDCERT)\n-      INVALID_DEVICE_PROVISIONING_SERVICE_CONNECTION_STRING: $(IOTHUB-CONN-STRING-INVALIDCERT)\n-      CUSTOM_ALLOCATION_POLICY_WEBHOOK: $(CUSTOM-ALLOCATION-POLICY-WEBHOOK)\n-      FAR_AWAY_IOTHUB_CONNECTION_STRING: $(FAR-AWAY-IOTHUB-CONNECTION-STRING)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB) \n-    condition: always()\n-      \n-  - task: CopyFiles@2\n-    displayName: 'Copy Test Results to Artifact Staging Directory'\n-    inputs:\n-      SourceFolder: '$(Build.SourcesDirectory)/iot-e2e-tests/android/app/build/outputs/apk'\n-      Contents: |\n-       *.*\n-      TargetFolder: '$(Build.ArtifactStagingDirectory)'\n-    continueOnError: true\n-    condition: always()\n-    \n-  - task: PublishPipelineArtifact@0\n-    inputs:\n-      artifactName: 'androidBuildFiles'\n-      targetPath: 'iot-e2e-tests/android/app/build/outputs/apk'\n-    \n-- job: AndroidTest\n-  timeoutInMinutes: 80\n-  pool:\n-    vmImage: 'macOS-latest'\n-  strategy:\n-    maxParallel: 12\n-    matrix:\n-      TestGroup1:\n-        ANDROID_TEST_GROUP_ID: TestGroup1\n-      TestGroup2:\n-        ANDROID_TEST_GROUP_ID: TestGroup2\n-      TestGroup3:\n-        ANDROID_TEST_GROUP_ID: TestGroup3\n-      TestGroup4:\n-        ANDROID_TEST_GROUP_ID: TestGroup4\n-      TestGroup5:\n-        ANDROID_TEST_GROUP_ID: TestGroup5\n-      TestGroup6:\n-        ANDROID_TEST_GROUP_ID: TestGroup6\n-      TestGroup7:\n-        ANDROID_TEST_GROUP_ID: TestGroup7\n-      TestGroup8:\n-        ANDROID_TEST_GROUP_ID: TestGroup8\n-      TestGroup9:\n-        ANDROID_TEST_GROUP_ID: TestGroup9\n-      TestGroup10:\n-        ANDROID_TEST_GROUP_ID: TestGroup10\n-      TestGroup11:\n-        ANDROID_TEST_GROUP_ID: TestGroup11\n-      TestGroup12:\n-        ANDROID_TEST_GROUP_ID: TestGroup12\n-      TestGroup13:\n-        ANDROID_TEST_GROUP_ID: TestGroup13\n-      TestGroup14:\n-        ANDROID_TEST_GROUP_ID: TestGroup14\n-      TestGroup15:\n-        ANDROID_TEST_GROUP_ID: TestGroup15\n-      TestGroup16:\n-        ANDROID_TEST_GROUP_ID: TestGroup16\n-      TestGroup17:\n-        ANDROID_TEST_GROUP_ID: TestGroup17\n-      TestGroup18:\n-        ANDROID_TEST_GROUP_ID: TestGroup18\n-      TestGroup19:\n-        ANDROID_TEST_GROUP_ID: TestGroup19\n-      TestGroup20:\n-        ANDROID_TEST_GROUP_ID: TestGroup20\n-      TestGroup21:\n-        ANDROID_TEST_GROUP_ID: TestGroup21\n-      TestGroup22:\n-        ANDROID_TEST_GROUP_ID: TestGroup22\n-      TestGroup23:\n-        ANDROID_TEST_GROUP_ID: TestGroup23\n-      TestGroup24:\n-        ANDROID_TEST_GROUP_ID: TestGroup24\n-      TestGroup25:\n-        ANDROID_TEST_GROUP_ID: TestGroup25\n-      TestGroup26:\n-        ANDROID_TEST_GROUP_ID: TestGroup26\n-      TestGroup27:\n-        ANDROID_TEST_GROUP_ID: TestGroup27\n-      TestGroup28:\n-        ANDROID_TEST_GROUP_ID: TestGroup28\n-      TestGroup29:\n-        ANDROID_TEST_GROUP_ID: TestGroup29\n-      TestGroup30:\n-        ANDROID_TEST_GROUP_ID: TestGroup30\n-      TestGroup31:\n-        ANDROID_TEST_GROUP_ID: TestGroup31\n-      TestGroup32:\n-        ANDROID_TEST_GROUP_ID: TestGroup32\n-      TestGroup33:\n-        ANDROID_TEST_GROUP_ID: TestGroup33\n-      TestGroup34:\n-        ANDROID_TEST_GROUP_ID: TestGroup34\n-      TestGroup35:\n-        ANDROID_TEST_GROUP_ID: TestGroup35\n-      TestGroup36:\n-        ANDROID_TEST_GROUP_ID: TestGroup36\n-      TestGroup37:\n-        ANDROID_TEST_GROUP_ID: TestGroup37\n-      TestGroup38:\n-        ANDROID_TEST_GROUP_ID: TestGroup38\n-      TestGroup39:\n-        ANDROID_TEST_GROUP_ID: TestGroup39\n-      \n-  displayName: Android Test\n-  dependsOn: AndroidBuild\n-  steps:\n-  - task: PowerShell@2\n-    displayName: 'determine if testing needed'\n-    condition: always()\n-    inputs:\n-      targetType: 'filePath'\n-      filePath: ./vsts/determine_if_android_test_group_needs_to_run.ps1\n-    env:\n-      TEST_GROUP_ID: $(ANDROID_TEST_GROUP_ID)\n-      IS_BASIC_TIER_HUB: $(IS-BASIC-TIER-HUB)\n-      TARGET_BRANCH: $(System.PullRequest.TargetBranch)\n+      - task: CopyFiles@2\n+        displayName: 'Copy Test Results to Artifact Staging Directory'\n+        inputs:\n+          SourceFolder: '$(Build.SourcesDirectory)'\n+          Contents: |\n+            **/*.trx\n+            **/*.xml\n+          TargetFolder: '$(Build.ArtifactStagingDirectory)'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: PowerShell@2\n-    displayName: 'Install app center cli'\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    inputs:\n-      targetType: 'filePath'\n-      filePath: './vsts/install_appcenter_cli.ps1'\n+      - task: PublishBuildArtifacts@1\n+        displayName: 'Publish Artifact Staging Directory'\n+        continueOnError: true\n+        condition: always()\n \n-  - task: DownloadPipelineArtifact@0\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    inputs:\n-      artifactName: 'androidBuildFiles'\n-      targetPath: $(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk\n-  \n-  - task: AppCenterTest@1\n-    condition: eq(variables['task.android.needToRunTestGroup'], 'yes')\n-    displayName: 'E2E with Visual Studio App Center'\n-    inputs:\n-      appFile: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/debug/app-debug.apk'\n-      frameworkOption: espresso\n-      espressoBuildDirectory: '$(Build.ArtifactStagingDirectory)/iot-e2e-tests/android/app/build/outputs/apk/androidTest/debug'\n-      serverEndpoint: 'AppCenter connection aziotclb'\n-      appSlug: 'Azure-Iot-Sdk/androide2e'\n-      devices: 'Azure-Iot-Sdk/api28_2'\n-      runOptions: '--test-parameter annotation=com.microsoft.azure.sdk.iot.android.helper.$(ANDROID_TEST_GROUP_ID)'\n-      showDebugOutput: true\n\\ No newline at end of file\n+      - task: PublishTestResults@2\n+        displayName: 'Publish Test Results'\n+        inputs:\n+          mergeTestResults: true\n+        continueOnError: true\n+        condition: always()\n+\n+  ### Android, Multi configuration build (12 different test groups to cover) ###\n+  - job: AndroidBuild\n+    timeoutInMinutes: 45\n+    pool:\n+      name: Hosted VS2017", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0cefc505f5eca8351672576b538ff7da72bfdcb"}, "originalPosition": 420}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1663, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}