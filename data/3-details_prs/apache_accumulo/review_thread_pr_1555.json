{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1Mjk5ODc0", "number": 1555, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDoxMjowOVrODmInQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0MDowOVrODm4Z7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzEzNjAyOnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDoxMjowOVrOFzYaUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwMTo1NzozMVrOFz_Cvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMTY1MQ==", "bodyText": "Not sure if it's worth it, but I think you could maybe reuse the lambda used for the Predicate, as in the following.\nAlso, I think .noneMatch(p) is probably better than .filter(p).count() != 1, since it's not really possible to have multiple files in the same directory match on the same file name anyway... so the result is always binary (present or absent).\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for (String oldFileName : fileNameMappings.keySet()) {\n          \n          \n            \n                    if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n          \n          \n            \n                      throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n          \n          \n            \n                          TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n          \n          \n            \n                          \"File referenced by exported table does not exists \" + oldFileName);\n          \n          \n            \n                    if (Arrays.stream(exportedFiles).filter(fstat ->\n          \n          \n            \n                        fstat.getPath().getName().equals(oldFileName)).count() != 1) {\n          \n          \n            \n                      if (Arrays.stream(importedFiles).filter(fstat ->\n          \n          \n            \n                          fstat.getPath().getName().equals(fileNameMappings.get(oldFileName))).count() != 1) {\n          \n          \n            \n                        throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n          \n          \n            \n                            TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n          \n          \n            \n                            \"File referenced by exported table does not exist \" + oldFileName);\n          \n          \n            \n                      }\n          \n          \n            \n                  // given a name, return a predicate that can check a FileStatus for a match against that name\n          \n          \n            \n                  Function<String,Predicate<FileStatus>> nameEq = name -> fstat -> fstat.getPath().getName().equals(name);\n          \n          \n            \n                  for (String oldFileName : fileNameMappings.keySet()) {\n          \n          \n            \n                    if (Arrays.stream(exportedFiles).noneMatch(nameEq.apply(oldFileName))) {\n          \n          \n            \n                      String newFileName = fileNameMappings.get(oldFileName);\n          \n          \n            \n                      if (Arrays.stream(importedFiles).noneMatch(nameEq.apply(newFileName))) {\n          \n          \n            \n                        throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n          \n          \n            \n                            TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n          \n          \n            \n                            \"File referenced by exported table does not exist \" + oldFileName);\n          \n          \n            \n                      }", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r389421651", "createdAt": "2020-03-09T00:12:09Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n       for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n+        if (Arrays.stream(exportedFiles).filter(fstat ->\n+            fstat.getPath().getName().equals(oldFileName)).count() != 1) {\n+          if (Arrays.stream(importedFiles).filter(fstat ->\n+              fstat.getPath().getName().equals(fileNameMappings.get(oldFileName))).count() != 1) {\n+            throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n+                TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n+                \"File referenced by exported table does not exist \" + oldFileName);\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1NDU5MA==", "bodyText": "Thank you Christopher! I did implement this and have it as a viable option - but I would like to evaluate Keith's suggestion as well before finalizing.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390054590", "createdAt": "2020-03-10T01:57:31Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n       for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n+        if (Arrays.stream(exportedFiles).filter(fstat ->\n+            fstat.getPath().getName().equals(oldFileName)).count() != 1) {\n+          if (Arrays.stream(importedFiles).filter(fstat ->\n+              fstat.getPath().getName().equals(fileNameMappings.get(oldFileName))).count() != 1) {\n+            throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n+                TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n+                \"File referenced by exported table does not exist \" + oldFileName);\n+          }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMTY1MQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTYxMDEyOnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "isResolved": true, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozMDowNVrOFzwAQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjozMToxMlrOF0jVOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ==", "bodyText": "Could possibly avoid the linear search in each loop iteration with something like the following before the loop.\nSet<String> importing = Arrays.stream(exportedFiles).map(fstat ->\n            fstat.getPath().getName()).map(fileNameMapping::get).collect(Collectors.toSet());\nSet<String> imported = Arrays.stream(importedFiles).map(fstat ->\n            fstat.getPath().getName()).collect(Collectors.toSet());\n\n//ensure Sets.union(importing, imported) equals new HashSet<>(fileNameMappings.values())", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r389808195", "createdAt": "2020-03-09T16:30:05Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA1NDg5Ng==", "bodyText": "This seems quite elegant, and I am working toward this. The only question I have at this stage is the usage of the Guava Sets class. I presume there are no concerns (both for this PR and from later porting this to 2.x) on using Sets here? I did try using CollectionUtils but it seems far easier to perform set operations with the Sets class.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390054896", "createdAt": "2020-03-10T01:58:45Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3MjAwMw==", "bodyText": "Guava Sets is definitely better over commons-collections CollectionUtils. We still use Guava in 2.x, so that should be fine. If you want a pure-Java way to do it, you could use Streams:\nStream.concat(importing.stream(),imported.stream()).collect(Collectors.toSet()).equals(Set.copyOf(fileNameMappings.values()));\nGuava's Sets.union is cleaner.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390072003", "createdAt": "2020-03-10T03:08:01Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQ1MTA1Mg==", "bodyText": "One potential problem with using Guava is the @Beta APIs.  Those should be avoided, but its so easy to use them.  I forget to check.  I am not sure if Sets or any of its methods are @Beta.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390451052", "createdAt": "2020-03-10T16:36:06Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU0MDYyNw==", "bodyText": "Thanks for the tip! I used the guava-beta-checker plugin to quickly establish if there is any new impact introduced by the usage of Sets. Thankfully, there is none, but in the process, I noticed there are many other @beta APIs used by previously existing code which are flagged by the plugin. For example, the use of Stopwatch and RateLimiter classes (and others) is flagged. I think that is a separate cleanup project on its own!", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390540627", "createdAt": "2020-03-10T18:55:26Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU2OTY1Mg==", "bodyText": "I can create a separate PR with the guava-beta-checker added and emitting WARN for such beta APIs.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390569652", "createdAt": "2020-03-10T19:48:32Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4MzI0MA==", "bodyText": "I did check. Sets is okay.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390583240", "createdAt": "2020-03-10T20:14:09Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU5OTIxMw==", "bodyText": "@arvindshmicrosoft  I found #298.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390599213", "createdAt": "2020-03-10T20:44:12Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYwMTE2Mg==", "bodyText": "Actually #340 would be the one to look at.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390601162", "createdAt": "2020-03-10T20:47:57Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYwMzAxMw==", "bodyText": "Great, so looks like we are fine for the purposes of this PR?", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390603013", "createdAt": "2020-03-10T20:51:20Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0OTE0Ng==", "bodyText": "guava-beta-checker requires errorprone. I'm not sold on the idea of dictating the compiler in the build, especially not for the default build. The spotbugs plugin would be less invasive (not sure that's the right word I mean). In any case, that can be a separate issue, if it matters.\nI'm going to make one more pass with some comments.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390649146", "createdAt": "2020-03-10T22:31:12Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ=="}, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTczNjQ1OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowMTowN1rOFzxNhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowMTowN1rOFzxNhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNzk3NQ==", "bodyText": "This is a really nice change, avoiding all of the individual namenode RPCs", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r389827975", "createdAt": "2020-03-09T17:01:07Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDU2Mjk3OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDoyNToxOFrOF0frpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTowMzozM1rOF0pVxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4OTM1MQ==", "bodyText": "Would be nice to avoid creating the concatenated string unless needed.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  log.debug(\"Files already present in imported (target) directory: {}\",\n          \n          \n            \n                    StringUtils.join(imported.toArray(), \",\"));\n          \n          \n            \n              if(log.isDebugEnabled()){\n          \n          \n            \n                  log.debug(\"Files already present in imported (target) directory: {}\",\n          \n          \n            \n                    StringUtils.join(imported.toArray(), \",\"));\n          \n          \n            \n               }", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390589351", "createdAt": "2020-03-10T20:25:18Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc0NzU5MQ==", "bodyText": "Addressed in latest commit", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390747591", "createdAt": "2020-03-11T05:03:33Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4OTM1MQ=="}, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDk0OTkxOnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjozMzoyNlrOF0jYbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTowMzoyMVrOF0pViA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0OTk2Nw==", "bodyText": "fstat -> fstat.getPath().getName() is used twice. The lines can be shortened (possibly to one line each) if that lambda was saved in a reusable Function<FileStatus,String> fileStatusName = fstat -> fstat.getPath().getName(); variable or similar.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390649967", "createdAt": "2020-03-10T22:33:26Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc0NzUyOA==", "bodyText": "Addressed in latest commit - however FYI the formatter still causes the lines to wrap.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390747528", "createdAt": "2020-03-11T05:03:21Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0OTk2Nw=="}, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDk1OTg4OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjozNzo0MFrOF0jeXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTowMjozMlrOF0pUvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MTQ4Nw==", "bodyText": "In addition to Keith's suggestion, we'll need to be careful about the use of commons-lang here when we merge to the master branch, which now uses commons-lang3. If you wanted to avoid that, you could instead use the built-in Java Joiner, as in:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    StringUtils.join(imported.toArray(), \",\"));\n          \n          \n            \n                    imported.stream().collect(Collectors.joining(\",\")));\n          \n      \n    \n    \n  \n\nIt's only slightly longer, but removes an unneeded library dependency.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390651487", "createdAt": "2020-03-10T22:37:40Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc0NzMyNg==", "bodyText": "Addressed in latest commit", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390747326", "createdAt": "2020-03-11T05:02:32Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MTQ4Nw=="}, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDk2NjIyOnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0MDowOVrOF0jiKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNTowMjoyNVrOF0pUpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MjQ1OQ==", "bodyText": "This doesn't match our formatter style. Before we merge this, make sure the code is formatted and the basic QA checks pass (mvn clean verify -DskipTests).", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390652459", "createdAt": "2020-03-10T22:40:09Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));\n \n-      for (FileStatus fileStatus : files) {\n+      Set<String> missingFiles = Sets.difference(new HashSet<String>(fileNameMappings.values()),\n+        new HashSet<String>(Sets.union(importing, imported)));\n+\n+      if (!missingFiles.isEmpty())\n+      {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY3Mjg2Nw==", "bodyText": "For small changes I only run mvn compile to format the code and let Travis CI do the basic quality checks.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390672867", "createdAt": "2020-03-10T23:41:55Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));\n \n-      for (FileStatus fileStatus : files) {\n+      Set<String> missingFiles = Sets.difference(new HashSet<String>(fileNameMappings.values()),\n+        new HashSet<String>(Sets.union(importing, imported)));\n+\n+      if (!missingFiles.isEmpty())\n+      {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MjQ1OQ=="}, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDcxNTE5MA==", "bodyText": "That's fine, too. I typically do it locally, since it doesn't take that long, and it results in fewer round trips to resolve all the issues. Also, we have limited executors on Travis that we share with the rest of the ASF, so it can take awhile before it runs in Travis.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390715190", "createdAt": "2020-03-11T02:33:02Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));\n \n-      for (FileStatus fileStatus : files) {\n+      Set<String> missingFiles = Sets.difference(new HashSet<String>(fileNameMappings.values()),\n+        new HashSet<String>(Sets.union(importing, imported)));\n+\n+      if (!missingFiles.isEmpty())\n+      {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MjQ1OQ=="}, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDczNjQ0Mw==", "bodyText": "Sorry for the overlook. I will ensure the QA checks pass before the next commit.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390736443", "createdAt": "2020-03-11T04:10:19Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));\n \n-      for (FileStatus fileStatus : files) {\n+      Set<String> missingFiles = Sets.difference(new HashSet<String>(fileNameMappings.values()),\n+        new HashSet<String>(Sets.union(importing, imported)));\n+\n+      if (!missingFiles.isEmpty())\n+      {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MjQ1OQ=="}, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc0NzMwMg==", "bodyText": "Addressed in latest commit", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390747302", "createdAt": "2020-03-11T05:02:25Z", "author": {"login": "arvindshmicrosoft"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));\n \n-      for (FileStatus fileStatus : files) {\n+      Set<String> missingFiles = Sets.difference(new HashSet<String>(fileNameMappings.values()),\n+        new HashSet<String>(Sets.union(importing, imported)));\n+\n+      if (!missingFiles.isEmpty())\n+      {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MjQ1OQ=="}, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4203, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}