{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODMwOTI4", "number": 1475, "title": "fixes #1474: Option to leave cloned tables offline", "bodyText": "Added an optional keepOffline option to TableOperations.clone\nUpdated the shell clone command with a -k option\nUpdated the CloneTestIT to test the keepOffline option", "createdAt": "2020-01-14T20:45:42Z", "url": "https://github.com/apache/accumulo/pull/1475", "merged": true, "mergeCommit": {"oid": "9cc673a4d7096207ff3ff619bc5c9f718faa225a"}, "closed": true, "closedAt": "2020-01-28T18:59:10Z", "author": {"login": "ivakegg"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6XQXrABqjI5NDg1NzQ5NDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-y4n0ABqjI5ODYwMzkwNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f01b5e396b17ae72f8cc614953fc10506f25454", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/5f01b5e396b17ae72f8cc614953fc10506f25454", "committedDate": "2020-01-14T20:42:04Z", "message": "fixes #1474: Option to leave cloned tables offline\n* Added an optional keepOffline option to TableOperations.clone\n* Updated the shell clone command with a -k option\n* Updated the CloneTestIT to test the keepOffline option"}, "afterCommit": {"oid": "bf46842032e04bbb85f87811e5bae633c3e3974b", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/bf46842032e04bbb85f87811e5bae633c3e3974b", "committedDate": "2020-01-14T20:47:31Z", "message": "fixes #1474: Option to leave cloned tables offline\n* Added an optional keepOffline option to TableOperations.clone\n* Updated the shell clone command with a -k option\n* Updated the CloneTestIT to test the keepOffline option"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODQ3MTYz", "url": "https://github.com/apache/accumulo/pull/1475#pullrequestreview-342847163", "createdAt": "2020-01-14T21:23:02Z", "commit": {"oid": "bf46842032e04bbb85f87811e5bae633c3e3974b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyMzowM1rOFdmNJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyMzowM1rOFdmNJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3ODk4MA==", "bodyText": "Probably better to name the option \"o\", to be consistent with other offline commands.  For example, that is what CreateTableCommand uses in 2.X", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r366578980", "createdAt": "2020-01-14T21:23:03Z", "author": {"login": "milleruntime"}, "path": "shell/src/main/java/org/apache/accumulo/shell/commands/CloneTableCommand.java", "diffHunk": "@@ -99,6 +105,8 @@ public Options getOptions() {\n     noFlushOption =\n         new Option(\"nf\", \"noFlush\", false, \"do not flush table data in memory before cloning.\");\n     o.addOption(noFlushOption);\n+    keepOfflineOption =\n+        new Option(\"k\", \"keepOffline\", false, \"do not bring the table online after cloning.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf46842032e04bbb85f87811e5bae633c3e3974b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyODM4OTEx", "url": "https://github.com/apache/accumulo/pull/1475#pullrequestreview-342838911", "createdAt": "2020-01-14T21:07:50Z", "commit": {"oid": "bf46842032e04bbb85f87811e5bae633c3e3974b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMTowNzo1MFrOFdl0YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyMToyNVrOFdmKkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3MjY0MQ==", "bodyText": "need a since 2.1 javadoc tag", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r366572641", "createdAt": "2020-01-14T21:07:50Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java", "diffHunk": "@@ -433,6 +433,33 @@ void clone(String srcTableName, String newTableName, boolean flush,\n       Map<String,String> propertiesToSet, Set<String> propertiesToExclude) throws AccumuloException,\n       AccumuloSecurityException, TableNotFoundException, TableExistsException;\n \n+  /**\n+   * Clone a table from an existing table. The cloned table will have the same data as the source\n+   * table it was created from. After cloning, the two tables can mutate independently. Initially\n+   * the cloned table should not use any extra space, however as the source table and cloned table\n+   * major compact extra space will be used by the clone.\n+   *\n+   * Initially the cloned table is only readable and writable by the user who created it.\n+   *\n+   * @param srcTableName\n+   *          the table to clone\n+   * @param newTableName\n+   *          the name of the clone\n+   * @param flush\n+   *          determines if memory is flushed in the source table before cloning.\n+   * @param propertiesToSet\n+   *          the sources tables properties are copied, this allows overriding of those properties\n+   * @param propertiesToExclude\n+   *          do not copy these properties from the source table, just revert to system defaults\n+   * @param keepOffline\n+   *          do not bring the table online after cloning\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf46842032e04bbb85f87811e5bae633c3e3974b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3ODMyMw==", "bodyText": "Would be nice to create a simple class for clone configuration so in the future we do not need to add more overloaded methods.  Something like the following.\n/**\n * @since 2.1.0\n */\nvoid clone(String srcTableName, String newTableName, CloneConfiguration config);\nCould possibly have the following API for CloneConfiguration.\n/**\n * @since 2.1.0\n */\npublic class CloneConfiguration {\n  Map<String,String> getPropertiesToSet();\n\n  Set<String> getPropertiesToExclude();\n\n  boolean flush();\n\n  InitialTableState getInitialState();\n\n  /**\n   * @since 2.1.0\n   */\n  public static interface Builder {\n\n    /**\n     * props to set on the clone. If not set defaults to empty map.\n     */\n    Builder setProperties(Map<String,String> props);\n\n    /**\n     * Props to exclude form the source table.  If not set defaults to empty set.\n     * \n     */\n    Builder excludeProperties(Set<String> props);\n\n    /**\n     * The initial table state for the clone. If not set defaults to ONLINE.\n     */\n    Builder setInitialTableState(InitialTableState init);\n\n    /**\n     * Determines if source tables in memory data is flushed before cloning. Unflushed data will not be in clone.  If not set defaults to true.\n     */\n    Builder setFlush(boolean flush);\n\n    // builds an immutable CloneConfiguration\n    CloneConfiguration build();\n  }\n\n  public static Builder builder() {\n    // TODO return a new builder obj that is not visible in the public API.. see ScanDirectivesImpl\n    // for an example of simple way to implement\n    return null;\n  }\n}", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r366578323", "createdAt": "2020-01-14T21:21:25Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java", "diffHunk": "@@ -433,6 +433,33 @@ void clone(String srcTableName, String newTableName, boolean flush,\n       Map<String,String> propertiesToSet, Set<String> propertiesToExclude) throws AccumuloException,\n       AccumuloSecurityException, TableNotFoundException, TableExistsException;\n \n+  /**\n+   * Clone a table from an existing table. The cloned table will have the same data as the source\n+   * table it was created from. After cloning, the two tables can mutate independently. Initially\n+   * the cloned table should not use any extra space, however as the source table and cloned table\n+   * major compact extra space will be used by the clone.\n+   *\n+   * Initially the cloned table is only readable and writable by the user who created it.\n+   *\n+   * @param srcTableName\n+   *          the table to clone\n+   * @param newTableName\n+   *          the name of the clone\n+   * @param flush\n+   *          determines if memory is flushed in the source table before cloning.\n+   * @param propertiesToSet\n+   *          the sources tables properties are copied, this allows overriding of those properties\n+   * @param propertiesToExclude\n+   *          do not copy these properties from the source table, just revert to system defaults\n+   * @param keepOffline\n+   *          do not bring the table online after cloning\n+   */\n+\n+  void clone(String srcTableName, String newTableName, boolean flush,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf46842032e04bbb85f87811e5bae633c3e3974b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNDM3NjEz", "url": "https://github.com/apache/accumulo/pull/1475#pullrequestreview-343437613", "createdAt": "2020-01-15T18:42:37Z", "commit": {"oid": "c426c3993f67da13fb723db1978be2b5d6428e30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODo0MjozN1rOFeChGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxODo0MjozN1rOFeChGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA0Mjg0Mg==", "bodyText": "keepOfflineOption wasn't added to 'o' so it won't show up on the shell command line as an option.", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r367042842", "createdAt": "2020-01-15T18:42:37Z", "author": {"login": "Manno15"}, "path": "shell/src/main/java/org/apache/accumulo/shell/commands/CloneTableCommand.java", "diffHunk": "@@ -99,6 +105,8 @@ public Options getOptions() {\n     noFlushOption =\n         new Option(\"nf\", \"noFlush\", false, \"do not flush table data in memory before cloning.\");\n     o.addOption(noFlushOption);\n+    keepOfflineOption =\n+        new Option(\"o\", \"offline\", false, \"do not bring the table online after cloning.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c426c3993f67da13fb723db1978be2b5d6428e30"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MzE1ODY5", "url": "https://github.com/apache/accumulo/pull/1475#pullrequestreview-344315869", "createdAt": "2020-01-17T01:17:06Z", "commit": {"oid": "c426c3993f67da13fb723db1978be2b5d6428e30"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMToxNzowN1rOFesY6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMToyNzowM1rOFeshcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzcyODg3Mw==", "bodyText": "Keeping the change minimal in 1.x is a nice goal, but adding an overloaded method now, that we won't need in 2.1 because the builder is added to 2.1 seems to only add unnecessary bloat. It would probably make sense to add the builder for both 1.10 and 2.1, or only add this entire feature to 2.1, so we never need to add the overloaded version of the method anywhere.", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r367728873", "createdAt": "2020-01-17T01:17:07Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/client/admin/TableOperations.java", "diffHunk": "@@ -433,6 +433,33 @@ void clone(String srcTableName, String newTableName, boolean flush,\n       Map<String,String> propertiesToSet, Set<String> propertiesToExclude) throws AccumuloException,\n       AccumuloSecurityException, TableNotFoundException, TableExistsException;\n \n+  /**\n+   * Clone a table from an existing table. The cloned table will have the same data as the source\n+   * table it was created from. After cloning, the two tables can mutate independently. Initially\n+   * the cloned table should not use any extra space, however as the source table and cloned table\n+   * major compact extra space will be used by the clone.\n+   *\n+   * Initially the cloned table is only readable and writable by the user who created it.\n+   *\n+   * @param srcTableName\n+   *          the table to clone\n+   * @param newTableName\n+   *          the name of the clone\n+   * @param flush\n+   *          determines if memory is flushed in the source table before cloning.\n+   * @param propertiesToSet\n+   *          the sources tables properties are copied, this allows overriding of those properties\n+   * @param propertiesToExclude\n+   *          do not copy these properties from the source table, just revert to system defaults\n+   * @param keepOffline\n+   *          do not bring the table online after cloning\n+   */\n+\n+  void clone(String srcTableName, String newTableName, boolean flush,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3ODMyMw=="}, "originalCommit": {"oid": "bf46842032e04bbb85f87811e5bae633c3e3974b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzczMDc2Nw==", "bodyText": "INFO-only: The standard built-in Java exception here is UnsupportedOperationException, not the commons-lang subclass. This is fine for consistency with the rest of the class, but it's a bad idea to use the commons-lang version in general (especially since it has been added and removed there, so it depends on what version of the library you're using). We replaced all these occurrences that in the 2.x branch when we switched to commons-lang3.", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r367730767", "createdAt": "2020-01-17T01:25:45Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/client/mock/MockTableOperations.java", "diffHunk": "@@ -474,6 +474,14 @@ public void clone(String srcTableName, String newTableName, boolean flush,\n     throw new NotImplementedException();\n   }\n \n+  @Override\n+  public void clone(String srcTableName, String newTableName, boolean flush,\n+      Map<String,String> propertiesToSet, Set<String> propertiesToExclude, boolean keepOffline)\n+      throws AccumuloException, AccumuloSecurityException, TableNotFoundException,\n+      TableExistsException {\n+    throw new NotImplementedException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c426c3993f67da13fb723db1978be2b5d6428e30"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzczMTA1OA==", "bodyText": "This could be tested with ShellServerIT", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r367731058", "createdAt": "2020-01-17T01:27:03Z", "author": {"login": "ctubbsii"}, "path": "shell/src/main/java/org/apache/accumulo/shell/commands/CloneTableCommand.java", "diffHunk": "@@ -99,6 +105,8 @@ public Options getOptions() {\n     noFlushOption =\n         new Option(\"nf\", \"noFlush\", false, \"do not flush table data in memory before cloning.\");\n     o.addOption(noFlushOption);\n+    keepOfflineOption =\n+        new Option(\"o\", \"offline\", false, \"do not bring the table online after cloning.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA0Mjg0Mg=="}, "originalCommit": {"oid": "c426c3993f67da13fb723db1978be2b5d6428e30"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4Njk2MTQw", "url": "https://github.com/apache/accumulo/pull/1475#pullrequestreview-348696140", "createdAt": "2020-01-27T14:21:12Z", "commit": {"oid": "fe4314d1c4531ef54185ef47770fece5ec97ddae"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoyMToxMlrOFiEROw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoyNzoyNVrOFiEfWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2NTg1MQ==", "bodyText": "The Impl class should be in the client.impl package.", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r371265851", "createdAt": "2020-01-27T14:21:12Z", "author": {"login": "milleruntime"}, "path": "core/src/main/java/org/apache/accumulo/core/client/admin/CloneConfigurationImpl.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.accumulo.core.client.admin;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4314d1c4531ef54185ef47770fece5ec97ddae"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2OTQ2NQ==", "bodyText": "This method should be in the CloneConfiguration interface so users don't need to touch the Impl class.  With Java 1.8 you can make this a default method too.", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r371269465", "createdAt": "2020-01-27T14:27:25Z", "author": {"login": "milleruntime"}, "path": "core/src/main/java/org/apache/accumulo/core/client/admin/CloneConfigurationImpl.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.accumulo.core.client.admin;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import com.google.common.base.Preconditions;\n+\n+/**\n+ * A {@link CloneConfiguration} implementation which also implements the builder thereof\n+ *\n+ * @since 1.10 and 2.1\n+ */\n+public class CloneConfigurationImpl implements CloneConfiguration, CloneConfiguration.Builder {\n+\n+  // The purpose of this is to allow building an immutable CloneConfiguration object without\n+  // creating\n+  // separate Builder and CloneConfiguration objects. This is done to reduce object creation and\n+  // copying. This could easily be changed to two objects without changing the interfaces.\n+  private boolean built = false;\n+\n+  // determines if memory is flushed in the source table before cloning.\n+  private boolean flush = true;\n+\n+  // the sources table properties are copied, this allows overriding of those properties\n+  private Map<String,String> propertiesToSet = null;\n+\n+  // do not copy these properties from the source table, just revert to system defaults\n+  private Set<String> propertiesToExclude = null;\n+\n+  // do not bring the table online after cloning\n+  private boolean keepOffline = false;\n+\n+  private CloneConfigurationImpl() {}\n+\n+  public boolean isFlush() {\n+    Preconditions.checkState(built);\n+    return flush;\n+  }\n+\n+  public Map<String,String> getPropertiesToSet() {\n+    Preconditions.checkState(built);\n+    return (propertiesToSet == null ? Collections.<String,String>emptyMap()\n+        : Collections.unmodifiableMap(propertiesToSet));\n+  }\n+\n+  public Set<String> getPropertiesToExclude() {\n+    Preconditions.checkState(built);\n+    return (propertiesToExclude == null ? Collections.<String>emptySet()\n+        : Collections.unmodifiableSet(propertiesToExclude));\n+  }\n+\n+  public boolean isKeepOffline() {\n+    Preconditions.checkState(built);\n+    return keepOffline;\n+  }\n+\n+  @Override\n+  public Builder setFlush(boolean flush) {\n+    Preconditions.checkState(!built);\n+    this.flush = flush;\n+    return this;\n+  }\n+\n+  @Override\n+  public Builder setPropertiesToSet(Map<String,String> propertiesToSet) {\n+    Preconditions.checkState(!built);\n+    this.propertiesToSet = propertiesToSet;\n+    return this;\n+  }\n+\n+  @Override\n+  public Builder setPropertiesToExclude(Set<String> propertiesToExclude) {\n+    Preconditions.checkState(!built);\n+    this.propertiesToExclude = propertiesToExclude;\n+    return this;\n+  }\n+\n+  @Override\n+  public Builder setKeepOffline(boolean keepOffline) {\n+    Preconditions.checkState(!built);\n+    this.keepOffline = keepOffline;\n+    return this;\n+  }\n+\n+  @Override\n+  public CloneConfiguration build() {\n+    Preconditions.checkState(!built);\n+    built = true;\n+    return this;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"{flush=\" + flush + \", propertiesToSet=\" + propertiesToSet + \", propertiesToExclude=\"\n+        + propertiesToExclude + \", keepOffline=\" + keepOffline + \", built=\" + built + \"}\";\n+  }\n+\n+  /**\n+   * @return a {@link CloneConfiguration} builder\n+   */\n+  public static CloneConfiguration.Builder builder() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4314d1c4531ef54185ef47770fece5ec97ddae"}, "originalPosition": 120}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b2a9cae0530ba691b788d37750f153382410e03", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/0b2a9cae0530ba691b788d37750f153382410e03", "committedDate": "2020-01-27T18:20:52Z", "message": "re #1474: Moved implementation into an impl package"}, "afterCommit": {"oid": "2d2945ef9d7a81efc8aade452e1cea4ade28b0d6", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/2d2945ef9d7a81efc8aade452e1cea4ade28b0d6", "committedDate": "2020-01-27T18:52:05Z", "message": "re #1474: Moved builder method into the interface."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDMzMjgw", "url": "https://github.com/apache/accumulo/pull/1475#pullrequestreview-349433280", "createdAt": "2020-01-28T14:49:41Z", "commit": {"oid": "678a8ce036374643af40197cd813370b6ee5b4cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDM2Mzcx", "url": "https://github.com/apache/accumulo/pull/1475#pullrequestreview-349436371", "createdAt": "2020-01-28T14:53:19Z", "commit": {"oid": "678a8ce036374643af40197cd813370b6ee5b4cc"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "678a8ce036374643af40197cd813370b6ee5b4cc", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/678a8ce036374643af40197cd813370b6ee5b4cc", "committedDate": "2020-01-28T13:53:18Z", "message": "Merge remote-tracking branch 'apache/1.9' into ACCUMULO-1474"}, "afterCommit": {"oid": "dc40d079edad6098a7c04ff0147a1bd9b4cdbf17", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/dc40d079edad6098a7c04ff0147a1bd9b4cdbf17", "committedDate": "2020-01-28T14:57:22Z", "message": "fixes #1474: Option to leave cloned tables offline\n* Added an optional keepOffline option to TableOperations.clone via a CloneConfiguration\n* Updated the shell clone command with a -o option\n* Updated the CloneTestIT to test the keepOffline option\n* Updated the ShellServerIT to test the -o option"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDUwNjU1", "url": "https://github.com/apache/accumulo/pull/1475#pullrequestreview-349450655", "createdAt": "2020-01-28T15:10:00Z", "commit": {"oid": "678a8ce036374643af40197cd813370b6ee5b4cc"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNToxMTozOFrOFiop_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNToxMTozOFrOFiop_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg2MjAxMw==", "bodyText": "Purely pedantic, so I'm sure this is ignorable - consider naming this assertTableState because it actually performs the assertion and will fail if the assertion fails.", "url": "https://github.com/apache/accumulo/pull/1475#discussion_r371862013", "createdAt": "2020-01-28T15:11:38Z", "author": {"login": "drewfarris"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/CloneTestIT.java", "diffHunk": "@@ -121,6 +125,12 @@ public void testProps() throws Exception {\n \n   }\n \n+  private void checkTableState(String table, Connector c, TableState expected) throws TException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc40d079edad6098a7c04ff0147a1bd9b4cdbf17"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f274131a994ee7941c1bac3e5806bec4275e347", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/7f274131a994ee7941c1bac3e5806bec4275e347", "committedDate": "2020-01-28T15:15:06Z", "message": "fixes #1474: Option to leave cloned tables offline\n* Added an optional keepOffline option to TableOperations.clone via a CloneConfiguration\n* Updated the shell clone command with a -o option\n* Updated the CloneTestIT to test the keepOffline option\n* Updated the ShellServerIT to test the -o option"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc40d079edad6098a7c04ff0147a1bd9b4cdbf17", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/dc40d079edad6098a7c04ff0147a1bd9b4cdbf17", "committedDate": "2020-01-28T14:57:22Z", "message": "fixes #1474: Option to leave cloned tables offline\n* Added an optional keepOffline option to TableOperations.clone via a CloneConfiguration\n* Updated the shell clone command with a -o option\n* Updated the CloneTestIT to test the keepOffline option\n* Updated the ShellServerIT to test the -o option"}, "afterCommit": {"oid": "7f274131a994ee7941c1bac3e5806bec4275e347", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/apache/accumulo/commit/7f274131a994ee7941c1bac3e5806bec4275e347", "committedDate": "2020-01-28T15:15:06Z", "message": "fixes #1474: Option to leave cloned tables offline\n* Added an optional keepOffline option to TableOperations.clone via a CloneConfiguration\n* Updated the shell clone command with a -o option\n* Updated the CloneTestIT to test the keepOffline option\n* Updated the ShellServerIT to test the -o option"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2002, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}