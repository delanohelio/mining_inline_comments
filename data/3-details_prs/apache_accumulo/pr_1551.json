{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NjE4MTEx", "number": 1551, "title": "Use sets instead of arrays for volumes", "bodyText": "Originally ACCUMULO-3376, this change replaces the use of String[]\nwith Set<String> throughout the VolumeChooser and VolumeManager code.\nThis makes the API for VolumeChooser a bit more friendly, making it\neasier to use Streams and lambdas to filter and transform volumes\nthroughout the code.\nThis change also adds some more sanity checks on the instance volumes\nconfiguration (checking for empty list and duplicates).\nThis also includes a utility to warn about planned API changes in\ninternal pluggable code (such as the VolumeChooser), but without being\ntoo spammy.\nUpdate the default VolumeChooser.choosable() to return the full set of\nvolumes, so that all are checked for flush and sync support on tserver\nstartup. This choosable mechanism is a bit dubious anyway, because\nchoosers could make different decisions over time (in response to\nconfiguration changes, for example) than they do at startup. So,\ndefaulting to checking for the maximal set seems like a better strategy\nout-of-the-box.\nMake ServerConstants.baseUris unmodifiable.", "createdAt": "2020-03-06T03:39:26Z", "url": "https://github.com/apache/accumulo/pull/1551", "merged": true, "mergeCommit": {"oid": "9af60eacc570ccc807201cb0673123c67d3e6d07"}, "closed": true, "closedAt": "2020-03-06T17:04:12Z", "author": {"login": "ctubbsii"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK3pm4gH2gAyMzg0NjE4MTExOmQ4ODZkODY5ZTYyODg3NDA1NDM3OWYyYjVlY2RhZDcwMmQ5ZTA4ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcLDGiHAH2gAyMzg0NjE4MTExOmY5ZGIwOTYzNjAzNDM5YTY0OGFmMmY4YTdhYTg5NDJmMThjMjQ3ZTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d886d869e628874054379f2b5ecdad702d9e0881", "author": {"user": {"login": "ctubbsii", "name": "Christopher Tubbs"}}, "url": "https://github.com/apache/accumulo/commit/d886d869e628874054379f2b5ecdad702d9e0881", "committedDate": "2020-03-06T03:35:33Z", "message": "Use sets instead of arrays for volumes\n\nOriginally ACCUMULO-3376, this change replaces the use of `String[]`\nwith `Set<String>` throughout the VolumeChooser and VolumeManager code.\nThis makes the API for VolumeChooser a bit more friendly, making it\neasier to use Streams and lambdas to filter and transform volumes\nthroughout the code.\n\nThis change also adds some more sanity checks on the instance volumes\nconfiguration (checking for empty list and duplicates).\n\nThis also includes a utility to warn about planned API changes in\ninternal pluggable code (such as the VolumeChooser), but without being\ntoo spammy.\n\nUpdate the default `VolumeChooser.choosable()` to return the full set of\nvolumes, so that all are checked for flush and sync support on tserver\nstartup. This choosable mechanism is a bit dubious anyway, because\nchoosers could make different decisions over time (in response to\nconfiguration changes, for example) than they do at startup. So,\ndefaulting to checking for the maximal set seems like a better strategy\nout-of-the-box.\n\nMake ServerConstants.baseUris unmodifiable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMzg3ODMz", "url": "https://github.com/apache/accumulo/pull/1551#pullrequestreview-370387833", "createdAt": "2020-03-06T15:03:25Z", "commit": {"oid": "d886d869e628874054379f2b5ecdad702d9e0881"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNTowMzoyNVrOFy72_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNToyOTozMFrOFy80mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk1Mzg1Mw==", "bodyText": "Could use sl4j parameterized log statement.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                log.info(\"Looking for matching filesystem for \" + exportDir + \" from options \" + tableDirs);\n          \n          \n            \n                log.info(\"Looking for matching filesystem for {} from options {}\", exportDir, tableDirs);", "url": "https://github.com/apache/accumulo/pull/1551#discussion_r388953853", "createdAt": "2020-03-06T15:03:25Z", "author": {"login": "milleruntime"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/tableImport/CreateImportDir.java", "diffHunk": "@@ -47,10 +47,9 @@\n     UniqueNameAllocator namer = master.getContext().getUniqueNameAllocator();\n \n     Path exportDir = new Path(tableInfo.exportDir);\n-    String[] tableDirs = ServerConstants.getTablesDirs(master.getContext());\n+    Set<String> tableDirs = ServerConstants.getTablesDirs(master.getContext());\n \n-    log.info(\"Looking for matching filesystem for \" + exportDir + \" from options \"\n-        + Arrays.toString(tableDirs));\n+    log.info(\"Looking for matching filesystem for \" + exportDir + \" from options \" + tableDirs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d886d869e628874054379f2b5ecdad702d9e0881"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk1Njg3MQ==", "bodyText": "Could make ViewFSUtils take a Set as well.  Looks like this is the only class that uses it.", "url": "https://github.com/apache/accumulo/pull/1551#discussion_r388956871", "createdAt": "2020-03-06T15:08:49Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java", "diffHunk": "@@ -385,10 +385,10 @@ public boolean isReady() throws IOException {\n   }\n \n   @Override\n-  public Path matchingFileSystem(Path source, String[] options) {\n+  public Path matchingFileSystem(Path source, Set<String> options) {\n     try {\n       if (ViewFSUtils.isViewFS(source, hadoopConf)) {\n-        return ViewFSUtils.matchingFileSystem(source, options, hadoopConf);\n+        return ViewFSUtils.matchingFileSystem(source, options.toArray(new String[0]), hadoopConf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d886d869e628874054379f2b5ecdad702d9e0881"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk2NjIzMg==", "bodyText": "This is neat.  The name is a little long though, could just call it ApiWarner or ApiNotifier.  I wonder if there are other deprecated APIs that we want to warn about?  Could be a follow on task.", "url": "https://github.com/apache/accumulo/pull/1551#discussion_r388966232", "createdAt": "2020-03-06T15:23:50Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/fs/InterfaceEvolutionWarner.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.accumulo.server.fs;\n+\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class InterfaceEvolutionWarner {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d886d869e628874054379f2b5ecdad702d9e0881"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk2OTYyNA==", "bodyText": "Can never have enough sanity checks!  Could create unit tests for these checks, one where two configured Volumes get normalized to the same Path.", "url": "https://github.com/apache/accumulo/pull/1551#discussion_r388969624", "createdAt": "2020-03-06T15:29:30Z", "author": {"login": "milleruntime"}, "path": "core/src/main/java/org/apache/accumulo/core/volume/VolumeConfiguration.java", "diffHunk": "@@ -107,29 +110,31 @@ public static String getConfiguredBaseDir(AccumuloConfiguration conf,\n \n         try {\n           // pass through URI to unescape hex encoded chars (e.g. convert %2C to \",\" char)\n-          configuredBaseDirs[i++] = new Path(new URI(namespace)).toString();\n+          configuredBaseDirs.add(new Path(new URI(namespace)).toString());\n         } catch (URISyntaxException e) {\n           throw new IllegalArgumentException(Property.INSTANCE_VOLUMES.getKey() + \" contains \"\n               + namespace + \" which has a syntax error\", e);\n         }\n       }\n     }\n \n-    return configuredBaseDirs;\n+    LinkedHashSet<String> deduplicated = new LinkedHashSet<>();\n+    deduplicated.addAll(configuredBaseDirs);\n+    if (deduplicated.isEmpty()) {\n+      throw new IllegalArgumentException(\n+          Property.INSTANCE_VOLUMES.getKey() + \" contains no volumes (\" + ns + \")\");\n+    }\n+    if (deduplicated.size() < configuredBaseDirs.size()) {\n+      throw new IllegalArgumentException(\n+          Property.INSTANCE_VOLUMES.getKey() + \" contains duplicate volumes (\" + ns + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d886d869e628874054379f2b5ecdad702d9e0881"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9db0963603439a648af2f8a7aa8942f18c247e0", "author": {"user": {"login": "ctubbsii", "name": "Christopher Tubbs"}}, "url": "https://github.com/apache/accumulo/commit/f9db0963603439a648af2f8a7aa8942f18c247e0", "committedDate": "2020-03-06T16:56:06Z", "message": "Update server/master/src/main/java/org/apache/accumulo/master/tableOps/tableImport/CreateImportDir.java\n\nCo-Authored-By: Mike Miller <mmiller@apache.org>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1875, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}