{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MTAyNjY3", "number": 1489, "title": "Fixes #1458 - ZooSession now uses nanoTime vice currentTimeMillis", "bodyText": "Updated class to use nanoTime() as the base start time for duration calculations.", "createdAt": "2020-01-30T14:25:16Z", "url": "https://github.com/apache/accumulo/pull/1489", "merged": true, "mergeCommit": {"oid": "33cf13489fca24a6a613b67edb40dd000a8334e0"}, "closed": true, "closedAt": "2020-02-11T18:45:05Z", "author": {"login": "cradal"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_bSg4gH2gAyMzY5MTAyNjY3OjQ1NTg0OTUyZTA2NmRhN2Y5YmJkNzNjODhjNjUwNDc0YjIxNDIzOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDWOhtAFqTM1Njg5OTk5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45584952e066da7f9bbd73c88c650474b2142392", "author": {"user": {"login": "cradal", "name": null}}, "url": "https://github.com/apache/accumulo/commit/45584952e066da7f9bbd73c88c650474b2142392", "committedDate": "2020-01-30T14:19:49Z", "message": "Fixes #1458 - ZooSession now uses nanoTime vice currentTimeMillis"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwOTE3NzM4", "url": "https://github.com/apache/accumulo/pull/1489#pullrequestreview-350917738", "createdAt": "2020-01-30T15:34:52Z", "commit": {"oid": "45584952e066da7f9bbd73c88c650474b2142392"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTozNDo1MlrOFjvaaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo0MzowOFrOFjvujA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyMTI4OQ==", "bodyText": "I don't think any of this is necessary to keep in the code, since it is explaining why the code was changed, and not explaining the code that is there at the end.", "url": "https://github.com/apache/accumulo/pull/1489#discussion_r373021289", "createdAt": "2020-01-30T15:34:52Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/fate/zookeeper/ZooSession.java", "diffHunk": "@@ -119,8 +119,19 @@ public static ZooKeeper connect(String host, int timeout, String scheme, byte[]\n     boolean tryAgain = true;\n     long sleepTime = 100;\n     ZooKeeper zooKeeper = null;\n-\n-    long startTime = System.currentTimeMillis();\n+    /*\n+     * Originally, startTime = System.currentTimeMillis(). Changed to System.nanoTime() to more\n+     * accurately compute durations because it is not based on system clock variations. The\n+     * ZooKeeper method signature expects an int value for 'timeout' and performs several\n+     * calculations that can result in Numeric Expression Overflow errors if large, nanosecond\n+     * values are used. For ths reason, System.nanoTime() is is converted to MS units prior to being\n+     * used in calculations. Although, the resolution of 'startTime' is still in the MS range, the\n+     * value from which it is calculated is nanoTime. Also, the MS units are preserved in the\n+     * original method code, without the need for conversion. TimeUnit.convert is not used because\n+     * \"conversions from fine to coarser granularities truncate, so lose precision\" (Oracle Java 7\n+     * API)\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45584952e066da7f9bbd73c88c650474b2142392"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyNjQ0NA==", "bodyText": "It's not a good idea to divide here, since it is the differences between two nano-times that matter, and you are losing precision here in a way that could affect the subtraction later.\nThe correct pattern to do the conversion to millis would be something like this:\nlong startTime = System.nanoTime();\n// code here...\nlong laterTime = System.nanoTime();\nlong timeDurationMillis = TimeUnit.NANOSECONDS.toMillis(laterTime - startTime);\nIt is okay to use the TimeUnit conversions here, and lose precision, because it's okay to lose the precision in the difference. It is not okay to lose precision on the values before computing the difference in times. (Also, using this method to convert is the same as dividing... they both lose precision in the same way.)", "url": "https://github.com/apache/accumulo/pull/1489#discussion_r373026444", "createdAt": "2020-01-30T15:43:08Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/fate/zookeeper/ZooSession.java", "diffHunk": "@@ -119,8 +119,19 @@ public static ZooKeeper connect(String host, int timeout, String scheme, byte[]\n     boolean tryAgain = true;\n     long sleepTime = 100;\n     ZooKeeper zooKeeper = null;\n-\n-    long startTime = System.currentTimeMillis();\n+    /*\n+     * Originally, startTime = System.currentTimeMillis(). Changed to System.nanoTime() to more\n+     * accurately compute durations because it is not based on system clock variations. The\n+     * ZooKeeper method signature expects an int value for 'timeout' and performs several\n+     * calculations that can result in Numeric Expression Overflow errors if large, nanosecond\n+     * values are used. For ths reason, System.nanoTime() is is converted to MS units prior to being\n+     * used in calculations. Although, the resolution of 'startTime' is still in the MS range, the\n+     * value from which it is calculated is nanoTime. Also, the MS units are preserved in the\n+     * original method code, without the need for conversion. TimeUnit.convert is not used because\n+     * \"conversions from fine to coarser granularities truncate, so lose precision\" (Oracle Java 7\n+     * API)\n+     */\n+    long startTime = System.nanoTime() / 1000000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45584952e066da7f9bbd73c88c650474b2142392"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e389bcb57f068045b5c9dad818a2c09181157f15", "author": {"user": {"login": "cradal", "name": null}}, "url": "https://github.com/apache/accumulo/commit/e389bcb57f068045b5c9dad818a2c09181157f15", "committedDate": "2020-01-30T19:11:29Z", "message": "Fixes #1458 - Updated solution to convert result from nano to milli vice the operands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46c3b7c9819d2475c1f60ed66bf4b68819223495", "author": {"user": {"login": "cradal", "name": null}}, "url": "https://github.com/apache/accumulo/commit/46c3b7c9819d2475c1f60ed66bf4b68819223495", "committedDate": "2020-01-31T15:11:43Z", "message": "Fixes #1458 - Statically imported TimeUnit and removed excess commentary"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53a6751107ebb133ee4e43b536518316466a6483", "author": {"user": {"login": "cradal", "name": null}}, "url": "https://github.com/apache/accumulo/commit/53a6751107ebb133ee4e43b536518316466a6483", "committedDate": "2020-01-31T15:25:01Z", "message": "Fixes #1458 - Removed import wildcard"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4012ee9a4eb16277a6d5b3de4e24ff814d4b7b65", "author": {"user": {"login": "cradal", "name": null}}, "url": "https://github.com/apache/accumulo/commit/4012ee9a4eb16277a6d5b3de4e24ff814d4b7b65", "committedDate": "2020-01-31T17:16:09Z", "message": "Fixes #1458 - Created variable for duration based on System.nanoTime. Used variable in calculations to clean up code (as suggested by ctubbsii)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0c542e1cbb2d2d008158c9a0b611e4b3a3f7426", "author": {"user": {"login": "cradal", "name": null}}, "url": "https://github.com/apache/accumulo/commit/d0c542e1cbb2d2d008158c9a0b611e4b3a3f7426", "committedDate": "2020-01-31T19:12:29Z", "message": "Fixes #1458 - Minor format change to timeout  RuntimeExc. No code changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODk5OTk4", "url": "https://github.com/apache/accumulo/pull/1489#pullrequestreview-356899998", "createdAt": "2020-02-11T18:41:38Z", "commit": {"oid": "d0c542e1cbb2d2d008158c9a0b611e4b3a3f7426"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1828, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}