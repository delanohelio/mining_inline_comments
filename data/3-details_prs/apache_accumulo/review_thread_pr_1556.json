{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MjkxNTI1", "number": 1556, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0NTo1NlrODm4fGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0Nzo0OVrODm4gvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDk3OTQ3OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0NTo1NlrOF0jqUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0NTo1NlrOF0jqUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1NDU0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                log.debug(\"It took \" + attempts + \" attempt(s) to find an open WAL\");\n          \n          \n            \n                log.debug(\"It took {} attempt(s) to find {} open WALs\", attempts, open);", "url": "https://github.com/apache/accumulo/pull/1556#discussion_r390654546", "createdAt": "2020-03-10T22:45:56Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "diffHunk": "@@ -198,16 +198,33 @@ public void testMany() throws Exception {\n   }\n \n   private void addOpenWals(ServerContext c, Set<String> allWalsSeen) throws Exception {\n-    Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n-    Set<Entry<String,WalState>> es = wals.entrySet();\n+\n     int open = 0;\n-    for (Entry<String,WalState> entry : es) {\n-      if (entry.getValue() == WalState.OPEN) {\n-        open++;\n-        allWalsSeen.add(entry.getKey());\n+    int attempts = 0;\n+    boolean foundWal = false;\n+\n+    while (open == 0) {\n+      attempts++;\n+      Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n+      Set<Entry<String,WalState>> es = wals.entrySet();\n+      for (Entry<String,WalState> entry : es) {\n+        if (entry.getValue() == WalState.OPEN) {\n+          open++;\n+          allWalsSeen.add(entry.getKey());\n+          foundWal = true;\n+        } else {\n+          log.error(\"The WalState is \" + entry.getValue());// CLOSED or UNREFERENCED\n+        }\n+      }\n+\n+      if (!foundWal) {\n+        Thread.sleep(50);\n+        if (attempts % 50 == 0)\n+          log.info(\"Has not found an open WAL in \" + attempts + \" attempts.\");\n       }\n     }\n \n+    log.debug(\"It took \" + attempts + \" attempt(s) to find an open WAL\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21c9102bfb5ead79107e6505e0649fba204f7d3"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDk4MTE4OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0Njo0MlrOF0jrbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0Njo0MlrOF0jrbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1NDgzMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      log.info(\"Has not found an open WAL in \" + attempts + \" attempts.\");\n          \n          \n            \n                      log.debug(\"No open WALs found in {} attempts.\", attempts);", "url": "https://github.com/apache/accumulo/pull/1556#discussion_r390654831", "createdAt": "2020-03-10T22:46:42Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "diffHunk": "@@ -198,16 +198,33 @@ public void testMany() throws Exception {\n   }\n \n   private void addOpenWals(ServerContext c, Set<String> allWalsSeen) throws Exception {\n-    Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n-    Set<Entry<String,WalState>> es = wals.entrySet();\n+\n     int open = 0;\n-    for (Entry<String,WalState> entry : es) {\n-      if (entry.getValue() == WalState.OPEN) {\n-        open++;\n-        allWalsSeen.add(entry.getKey());\n+    int attempts = 0;\n+    boolean foundWal = false;\n+\n+    while (open == 0) {\n+      attempts++;\n+      Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n+      Set<Entry<String,WalState>> es = wals.entrySet();\n+      for (Entry<String,WalState> entry : es) {\n+        if (entry.getValue() == WalState.OPEN) {\n+          open++;\n+          allWalsSeen.add(entry.getKey());\n+          foundWal = true;\n+        } else {\n+          log.error(\"The WalState is \" + entry.getValue());// CLOSED or UNREFERENCED\n+        }\n+      }\n+\n+      if (!foundWal) {\n+        Thread.sleep(50);\n+        if (attempts % 50 == 0)\n+          log.info(\"Has not found an open WAL in \" + attempts + \" attempts.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21c9102bfb5ead79107e6505e0649fba204f7d3"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDk4MzY1OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0Nzo0OVrOF0js5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0Nzo0OVrOF0js5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1NTIwNw==", "bodyText": "The formatter will reform that line, and possibly others. Try running mvn clean verify -DskipTests on this branch to run the code formatter, and to check for other style issues.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      log.error(\"The WalState is \" + entry.getValue());// CLOSED or UNREFERENCED\n          \n          \n            \n                      log.debug(\"The WalState for {} is {}\", entry.getKey(), entry.getValue()); // CLOSED or UNREFERENCED", "url": "https://github.com/apache/accumulo/pull/1556#discussion_r390655207", "createdAt": "2020-03-10T22:47:49Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "diffHunk": "@@ -198,16 +198,33 @@ public void testMany() throws Exception {\n   }\n \n   private void addOpenWals(ServerContext c, Set<String> allWalsSeen) throws Exception {\n-    Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n-    Set<Entry<String,WalState>> es = wals.entrySet();\n+\n     int open = 0;\n-    for (Entry<String,WalState> entry : es) {\n-      if (entry.getValue() == WalState.OPEN) {\n-        open++;\n-        allWalsSeen.add(entry.getKey());\n+    int attempts = 0;\n+    boolean foundWal = false;\n+\n+    while (open == 0) {\n+      attempts++;\n+      Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n+      Set<Entry<String,WalState>> es = wals.entrySet();\n+      for (Entry<String,WalState> entry : es) {\n+        if (entry.getValue() == WalState.OPEN) {\n+          open++;\n+          allWalsSeen.add(entry.getKey());\n+          foundWal = true;\n+        } else {\n+          log.error(\"The WalState is \" + entry.getValue());// CLOSED or UNREFERENCED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21c9102bfb5ead79107e6505e0649fba204f7d3"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4206, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}