{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNzA1MDU3", "number": 1758, "title": "Minor cleanup of ZooReaderWriter mutate", "bodyText": "Separate out the two distinct use cases for calling\nZooReaderWriter.mutate() into two separate methods, with fewer\nrequired parameters and more clear naming. This also allows for stricter\nnull checking in the parameters that are passed.", "createdAt": "2020-10-30T01:46:57Z", "url": "https://github.com/apache/accumulo/pull/1758", "merged": true, "mergeCommit": {"oid": "e929e41d031ecf61cb5d24ddd2527fdd2d822ee5"}, "closed": true, "closedAt": "2020-11-03T00:53:17Z", "author": {"login": "ctubbsii"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXcsjdAH2gAyNTEyNzA1MDU3OjVkNTczM2E2NjBmNDI5NTQ5YWMwZWExNzc0MzExZGUwMmY2ZmMyYzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYuLQqgFqTUyMjEyODM2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d5733a660f429549ac0ea1774311de02f6fc2c3", "author": {"user": {"login": "ctubbsii", "name": "Christopher Tubbs"}}, "url": "https://github.com/apache/accumulo/commit/5d5733a660f429549ac0ea1774311de02f6fc2c3", "committedDate": "2020-10-30T01:43:30Z", "message": "Minor cleanup of ZooReaderWriter mutate\n\nSeparate out the two distinct use cases for calling\n`ZooReaderWriter.mutate()` into two separate methods, with fewer\nrequired parameters and more clear naming. This also allows for stricter\nnull checking in the parameters that are passed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODI5NTk0", "url": "https://github.com/apache/accumulo/pull/1758#pullrequestreview-520829594", "createdAt": "2020-10-30T16:22:03Z", "commit": {"oid": "5d5733a660f429549ac0ea1774311de02f6fc2c3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyMjowM1rOHrWeLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoyMjowM1rOHrWeLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxODk4OQ==", "bodyText": "Should describe what this method is doing.  While this is an improvement over the previous method, it is not clear that it has anything to do with ACL's.  Perhaps mention it on one of the other methods?  I am not sure but we should describe somewhere what we are doing with the permissions on the node.", "url": "https://github.com/apache/accumulo/pull/1758#discussion_r515218989", "createdAt": "2020-10-30T16:22:03Z", "author": {"login": "milleruntime"}, "path": "core/src/main/java/org/apache/accumulo/fate/zookeeper/ZooReaderWriter.java", "diffHunk": "@@ -138,6 +128,24 @@ public void recursiveCopyPersistentOverwrite(String source, String destination)\n     }, e -> e.code() == Code.BADVERSION); // always retry if bad version\n   }\n \n+  public byte[] createPublicOrMutate(String zPath, byte[] createValue, Mutator mutator)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d5733a660f429549ac0ea1774311de02f6fc2c3"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTg4NDI2", "url": "https://github.com/apache/accumulo/pull/1758#pullrequestreview-520988426", "createdAt": "2020-10-30T19:48:04Z", "commit": {"oid": "5d5733a660f429549ac0ea1774311de02f6fc2c3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDA5Nzg4", "url": "https://github.com/apache/accumulo/pull/1758#pullrequestreview-521009788", "createdAt": "2020-10-30T20:24:56Z", "commit": {"oid": "5d5733a660f429549ac0ea1774311de02f6fc2c3"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoyNDo1NlrOHre-Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDozNDozNFrOHrfOzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1ODIxOA==", "bodyText": "Feel free to ignore this comment, its very subjective. It would be nice if both mutate methods had the same prefix, for the case when completing in IDE.  Also, if there was javadoc I would drop public from the method name and put that in javadoc.  With those two thoughts, I like the name mutateOrCreate.", "url": "https://github.com/apache/accumulo/pull/1758#discussion_r515358218", "createdAt": "2020-10-30T20:24:56Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/fate/zookeeper/ZooReaderWriter.java", "diffHunk": "@@ -138,6 +128,24 @@ public void recursiveCopyPersistentOverwrite(String source, String destination)\n     }, e -> e.code() == Code.BADVERSION); // always retry if bad version\n   }\n \n+  public byte[] createPublicOrMutate(String zPath, byte[] createValue, Mutator mutator)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d5733a660f429549ac0ea1774311de02f6fc2c3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM2MjUxMQ==", "bodyText": "Nice catch.  Yuck, this should have been using UTF8.  If the current persisted name is encoded w/ something else it likely would not matter w/ the restrictions on what characters could go into a namespace.", "url": "https://github.com/apache/accumulo/pull/1758#discussion_r515362511", "createdAt": "2020-10-30T20:34:34Z", "author": {"login": "keith-turner"}, "path": "server/manager/src/main/java/org/apache/accumulo/master/tableOps/namespace/rename/RenameNamespace.java", "diffHunk": "@@ -62,15 +64,15 @@ public RenameNamespace(NamespaceId namespaceId, String oldName, String newName)\n       final String tap = master.getZooKeeperRoot() + Constants.ZNAMESPACES + \"/\" + namespaceId\n           + Constants.ZNAMESPACE_NAME;\n \n-      zoo.mutate(tap, null, null, current -> {\n-        final String currentName = new String(current);\n+      zoo.mutateExisting(tap, current -> {\n+        final String currentName = new String(current, UTF_8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d5733a660f429549ac0ea1774311de02f6fc2c3"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa35cca3836cdc1e767f668f7beee0830ba82fbe", "author": {"user": {"login": "ctubbsii", "name": "Christopher Tubbs"}}, "url": "https://github.com/apache/accumulo/commit/fa35cca3836cdc1e767f668f7beee0830ba82fbe", "committedDate": "2020-10-30T22:42:10Z", "message": "Cleanup from code review\n\n* Add javadocs\n* Shorten mutateOrCreate method name\n* Reuse putPersistentData method in mutateOrCreate method and\n  recursiveCopy method\n* Eliminate a private method that was now only used once\n* Remove unused Stat object in getACLs method\n* Clean up test (use static imports for EasyMock for readability)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTI4MzY3", "url": "https://github.com/apache/accumulo/pull/1758#pullrequestreview-522128367", "createdAt": "2020-11-03T00:39:21Z", "commit": {"oid": "fa35cca3836cdc1e767f668f7beee0830ba82fbe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1765, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}