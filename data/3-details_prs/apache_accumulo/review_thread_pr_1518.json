{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NjM5NDgx", "number": 1518, "reviewThreads": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDo1Njo1M1rODgueAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoyMzowNVrODoAIYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjQyMzcwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDo1Njo1M1rOFrFiRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDo1Njo1M1rOFrFiRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyMzc4MA==", "bodyText": "Would be nice to place the table length in a constant and use that constant everywhere.  Could put he constant in ./core/src/main/java/org/apache/accumulo/core/Constants.java.  Maybe name it MAX_TABLE_NAME_LEN.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380723780", "createdAt": "2020-02-18T14:56:53Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -216,6 +216,7 @@ public void create(String tableName, NewTableConfiguration ntc)\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n+    checkArgument(tableName.length() < 1025, \"tableName is longer than 1024 characters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjQzMzY2OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDo1OToxNVrOFrFofw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNToyODowNFrOFrG01A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTM3NQ==", "bodyText": "If there were constant, then 1026 could be replaced with the constant + 2.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380725375", "createdAt": "2020-02-18T14:59:15Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDczNDYyMg==", "bodyText": "@keith-turner I wasn't sure if we wanted a constant that was that long. I could just add it in as a 1025 char constant, since 1024 is the limit we are going for.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380734622", "createdAt": "2020-02-18T15:13:08Z", "author": {"login": "cradal"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTM3NQ=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0NDgxMQ==", "bodyText": "@keith-turner Ignore my last comment. I was thinking about the actual test string.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380744811", "createdAt": "2020-02-18T15:27:55Z", "author": {"login": "cradal"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTM3NQ=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0NDkxNg==", "bodyText": "One nice thing about using a single constant in the code is that it makes it easier for someone to later search for all code that references that const.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380744916", "createdAt": "2020-02-18T15:28:04Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTM3NQ=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjQzNjQxOnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNDo1OTo1NVrOFrFqPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOToxNTo0MFrOFrPC1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw==", "bodyText": "Does this throw an exception?", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380725823", "createdAt": "2020-02-18T14:59:55Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDczMTUzNA==", "bodyText": "@keith-turner That method throws the following: TableExistsException, AccumuloException,\nAccumuloSecurityException, TableNotFoundException", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380731534", "createdAt": "2020-02-18T15:08:25Z", "author": {"login": "cradal"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0Mzk2OQ==", "bodyText": "When this test is run, will it throw an exception because the table name is too long?", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380743969", "createdAt": "2020-02-18T15:26:44Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgxNDEzMQ==", "bodyText": "@keith-turner Yes, it throws an IllegalArgumentExc when I run the TableOperationsIT. I'll rework it so it can test without throwing the exc.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380814131", "createdAt": "2020-02-18T17:12:15Z", "author": {"login": "cradal"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg1NjQ4NQ==", "bodyText": "You can make the test expect the exception and only pass when it is thrown.  JUnit offers two ways to do this.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380856485", "createdAt": "2020-02-18T18:31:21Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3OTU3NA==", "bodyText": "@keith-turner I incorporated the expected = exception.class feature. TableOperationsIT passed.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380879574", "createdAt": "2020-02-18T19:15:40Z", "author": {"login": "cradal"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +189,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i < 1026; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNTgyMw=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjQ0MjQ4OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTowMToxNlrOFrFt8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNTowOToyM1rOFrGC8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNjc3MA==", "bodyText": "Was this added for debugging?", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380726770", "createdAt": "2020-02-18T15:01:16Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -162,10 +162,11 @@ public void executeFateOperation(TInfo tinfo, TCredentials c, long opid, FateOpe\n               TableOperationExceptionType.OTHER,\n               \"Expected at least \" + SPLIT_OFFSET + \" arguments, saw :\" + arguments.size());\n         }\n-        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n         TimeType timeType = TimeType.valueOf(ByteBufferUtil.toString(arguments.get(1)));\n         InitialTableState initialTableState =\n             InitialTableState.valueOf(ByteBufferUtil.toString(arguments.get(2)));\n+        log.info(\"Init Table State: \" + ByteBufferUtil.toString(arguments.get(2)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDczMjE0NA==", "bodyText": "@keith-turner Yes, it was. I need to take that out.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380732144", "createdAt": "2020-02-18T15:09:23Z", "author": {"login": "cradal"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -162,10 +162,11 @@ public void executeFateOperation(TInfo tinfo, TCredentials c, long opid, FateOpe\n               TableOperationExceptionType.OTHER,\n               \"Expected at least \" + SPLIT_OFFSET + \" arguments, saw :\" + arguments.size());\n         }\n-        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n         TimeType timeType = TimeType.valueOf(ByteBufferUtil.toString(arguments.get(1)));\n         InitialTableState initialTableState =\n             InitialTableState.valueOf(ByteBufferUtil.toString(arguments.get(2)));\n+        log.info(\"Init Table State: \" + ByteBufferUtil.toString(arguments.get(2)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcyNjc3MA=="}, "originalCommit": {"oid": "22216e92ec54655f6e33ba298a9afe12a75c9b19"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Nzc1NjA0OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTowODoyOVrOFrSdXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTowODoyOVrOFrSdXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTUxNw==", "bodyText": "Could use constant in this message", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380935517", "createdAt": "2020-02-18T21:08:29Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -701,6 +702,24 @@ private TableId validateTableIdArgument(ByteBuffer tableIdArg, TableOperation op\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n+    if ((tableName != null) && (tableName.length() > MAX_TABLE_NAME_LEN)) {\n+      log.warn(\n+          \"Table names greater than 1024 characters should be renamed to conform to a 1024 character limit. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3245a1cc038ba2dcb3fdae9e26a086169e4e6e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Nzc1NzUzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTowODo1MlrOFrSeNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMTowODo1MlrOFrSeNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDkzNTczNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                checkArgument(tableName.length() < MAX_TABLE_NAME_LEN + 1, \"tableName is longer than 1024 characters\");\n          \n          \n            \n                checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN, \"tableName is longer than %s characters\", MAX_TABLE_NAME_LEN);", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r380935734", "createdAt": "2020-02-18T21:08:52Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -216,6 +217,7 @@ public void create(String tableName, NewTableConfiguration ntc)\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n+    checkArgument(tableName.length() < MAX_TABLE_NAME_LEN + 1, \"tableName is longer than 1024 characters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3245a1cc038ba2dcb3fdae9e26a086169e4e6e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTAzNjMwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMjoyMFrOFurPpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMjoyMFrOFurPpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NzMzMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Namespace is longer than 1024 characters\");\n          \n          \n            \n                    \"Namespace is longer than \"+MAX_NAMESPACE_LEN+\" characters\");", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384487332", "createdAt": "2020-02-26T13:22:20Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "diffHunk": "@@ -119,7 +121,8 @@ public boolean exists(String namespace) {\n   public void create(String namespace)\n       throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n     checkArgument(namespace != null, \"namespace is null\");\n-\n+    checkArgument(namespace.length() <= MAX_NAMESPACE_LEN,\n+        \"Namespace is longer than 1024 characters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTAzNzgyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMjo0OVrOFurQng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMjo0OVrOFurQng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NzU4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Namespace is longer than 1024 characters\");\n          \n          \n            \n                    \"Namespace is longer than \"+MAX_NAMESPACE_LEN+\" characters\");", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384487582", "createdAt": "2020-02-26T13:22:49Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "diffHunk": "@@ -163,7 +166,11 @@ public void delete(String namespace) throws AccumuloException, AccumuloSecurityE\n   public void rename(String oldNamespaceName, String newNamespaceName)\n       throws AccumuloSecurityException, NamespaceNotFoundException, AccumuloException,\n       NamespaceExistsException {\n-\n+    checkArgument(oldNamespaceName.length() <= MAX_NAMESPACE_LEN,\n+        \"Namespaces longer than 1024 characters\"\n+            + \"are no longer supported and may result in unexpected behavior\");\n+    checkArgument(newNamespaceName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Namespace is longer than 1024 characters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTAzODYxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMzowN1rOFurRIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMzowN1rOFurRIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4NzcxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Table name is longer than 1024 characters\");\n          \n          \n            \n                    \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384487714", "createdAt": "2020-02-26T13:23:07Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -217,7 +217,8 @@ public void create(String tableName, NewTableConfiguration ntc)\n       throws AccumuloException, AccumuloSecurityException, TableExistsException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(ntc != null, \"ntc is null\");\n-    checkArgument(tableName.length() < MAX_TABLE_NAME_LEN + 1, \"tableName is longer than 1024 characters\");\n+    checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table name is longer than 1024 characters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTAzOTcyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMzoyNlrOFurR1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMzoyNlrOFurR1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4Nzg5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Table name is longer than 1024 characters\");\n          \n          \n            \n                    \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384487894", "createdAt": "2020-02-26T13:23:26Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -753,6 +754,8 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n \n     checkArgument(srcTableName != null, \"srcTableName is null\");\n     checkArgument(newTableName != null, \"newTableName is null\");\n+    checkArgument(newTableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table name is longer than 1024 characters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTA0MDc3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMzo0MlrOFurSbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMzo0MlrOFurSbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4ODA0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Table name is longer than 1024 characters\");\n          \n          \n            \n                    \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384488045", "createdAt": "2020-02-26T13:23:42Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table names longer than 1024 characters\"\n+            + \"are no longer supported and may result in unexpected behavior\");\n+    checkArgument(newTableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table name is longer than 1024 characters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTA0MTM4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMzo1MVrOFurSyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyMzo1MVrOFurSyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4ODEzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"Table name is longer than 1024 characters\");\n          \n          \n            \n                    \"Table name is longer than \"+ MAX_TABLE_NAME_LEN +\" characters\");", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384488138", "createdAt": "2020-02-26T13:23:51Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -1499,6 +1506,8 @@ public void importTable(String tableName, String importDir)\n       throws TableExistsException, AccumuloException, AccumuloSecurityException {\n     checkArgument(tableName != null, \"tableName is null\");\n     checkArgument(importDir != null, \"importDir is null\");\n+    checkArgument(tableName.length() <= MAX_TABLE_NAME_LEN,\n+        \"Table name is longer than 1024 characters\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTA1MDA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyNjoyNFrOFurX9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjowNDo0NVrOFuxuSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTQ2MQ==", "bodyText": "Why does the old namespace need to be less than the len?  If the old namespace was created in an older version of Accumulo then it could be over the limit.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384489461", "createdAt": "2020-02-26T13:26:24Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "diffHunk": "@@ -163,7 +166,11 @@ public void delete(String namespace) throws AccumuloException, AccumuloSecurityE\n   public void rename(String oldNamespaceName, String newNamespaceName)\n       throws AccumuloSecurityException, NamespaceNotFoundException, AccumuloException,\n       NamespaceExistsException {\n-\n+    checkArgument(oldNamespaceName.length() <= MAX_NAMESPACE_LEN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyMjA1Mg==", "bodyText": "@keith-turner Thanks for looking things over. I might be misunderstanding ctubbsii's feedback on this one. I thought the intention in the new version was to essentially force user's to rename namespaces to something that conforms to the 1024 char limit.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384522052", "createdAt": "2020-02-26T14:22:11Z", "author": {"login": "cradal"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "diffHunk": "@@ -163,7 +166,11 @@ public void delete(String namespace) throws AccumuloException, AccumuloSecurityE\n   public void rename(String oldNamespaceName, String newNamespaceName)\n       throws AccumuloSecurityException, NamespaceNotFoundException, AccumuloException,\n       NamespaceExistsException {\n-\n+    checkArgument(oldNamespaceName.length() <= MAX_NAMESPACE_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTQ2MQ=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU5MzQ4Mg==", "bodyText": "@cradal No. Sorry for the confusion. The intention was:\n\nprevent the creation of new objects over the limit, and\nlog a warning when we discover any object over the limit (with the understanding that this would only be possible for objects created before the limit was imposed)", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384593482", "createdAt": "2020-02-26T16:04:45Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/NamespaceOperationsImpl.java", "diffHunk": "@@ -163,7 +166,11 @@ public void delete(String namespace) throws AccumuloException, AccumuloSecurityE\n   public void rename(String oldNamespaceName, String newNamespaceName)\n       throws AccumuloSecurityException, NamespaceNotFoundException, AccumuloException,\n       NamespaceExistsException {\n-\n+    checkArgument(oldNamespaceName.length() <= MAX_NAMESPACE_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTQ2MQ=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTA1MzI2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "isResolved": true, "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyNzoyMVrOFurZ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODo0MDo0NVrOFwqtoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw==", "bodyText": "Why does the old table need to be below limit?", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384489963", "createdAt": "2020-02-26T13:27:21Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyMjE0NA==", "bodyText": "@keith-turner Again, I might be misunderstanding ctubbsii's feedback on this one. I thought the intention in the new version was to essentially force user's to rename tables to something that conforms to the 1024 char limit.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384522144", "createdAt": "2020-02-26T14:22:19Z", "author": {"login": "cradal"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MjEwMg==", "bodyText": "It seems like if the user had created a table name of len 1234 in ver 2.0.0 that with this check they would never be able to rename that table in version 2.1.0.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384572102", "createdAt": "2020-02-26T15:35:04Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4ODE1Ng==", "bodyText": "@keith-turner Ok. I feel foolish now. You are correct. My goal was to generate a warning message to the user. In doing so, I am preventing the operation from even occuring! I will remove the old name check for renaming namespaces and tables. Also, I will generate the warning message without using checkArgument.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384588156", "createdAt": "2020-02-26T15:57:34Z", "author": {"login": "cradal"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYwMzM1MQ==", "bodyText": "I will generate the warning message without using checkArgument\n\nAre you thinking of a warning for the case where the old name is too long?  Personally I would skip that.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384603351", "createdAt": "2020-02-26T16:18:45Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYwNTU3NA==", "bodyText": "Are you thinking of a warning for the case where the old name is too long? Personally I would skip that.\n\nFor rename, I agree. There's no point in warning when the user is currently performing an action that makes the problem go away.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384605574", "createdAt": "2020-02-26T16:21:54Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYyMDMwMg==", "bodyText": "@keith-turner @ctubbsii Thanks for being patient with me, guys. I think I have addressed the current issues with my latest commits.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384620302", "createdAt": "2020-02-26T16:43:37Z", "author": {"login": "cradal"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc5ODI5NA==", "bodyText": "No problem! I'll try to take a look soon.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384798294", "createdAt": "2020-02-26T22:10:53Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyNjc4NA==", "bodyText": "@cradal did you see the suggestions I made to replace 1024 with constants in some error message strings?", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385926784", "createdAt": "2020-02-28T21:18:59Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM5OTg3NA==", "bodyText": "@keith-turner Yessir. I rolled them into my commits.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r386399874", "createdAt": "2020-03-02T13:44:56Z", "author": {"login": "cradal"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ5NDU4NA==", "bodyText": "@cradal  when I look at the diffs on github I still see some error messages with 1024 in them.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r386494584", "createdAt": "2020-03-02T16:17:30Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3NTc3Nw==", "bodyText": "@keith-turner Apologies. I thought we caught them all with the peer review and commits last week. I went through the relevant classes and did a string search for 1024. I think we finally got them all with my latest commit.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r386575777", "createdAt": "2020-03-02T18:40:45Z", "author": {"login": "cradal"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java", "diffHunk": "@@ -788,7 +791,11 @@ public void clone(String srcTableName, String newTableName, CloneConfiguration c\n   @Override\n   public void rename(String oldTableName, String newTableName) throws AccumuloSecurityException,\n       TableNotFoundException, AccumuloException, TableExistsException {\n-\n+    checkArgument(oldTableName.length() <= MAX_TABLE_NAME_LEN,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4OTk2Mw=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTA1ODIxOnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoyODozM1rOFurcww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjowNzoxOVrOFux1cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDY5MQ==", "bodyText": "This operation is not creating a new table, so it should not do this check.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384490691", "createdAt": "2020-02-26T13:28:33Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -434,7 +435,7 @@ public String invalidMessage(String argument) {\n       case TABLE_BULK_IMPORT: {\n         TableOperation tableOp = TableOperation.BULK_IMPORT;\n         validateArgumentCount(arguments, tableOp, 4);\n-        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDUyODI4Mw==", "bodyText": "@keith-turner Is the same case for TABLE_IMPORT? Again, in this case, I thought that ctubbsii wanted the limit check applied during imports, as well.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384528283", "createdAt": "2020-02-26T14:31:56Z", "author": {"login": "cradal"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -434,7 +435,7 @@ public String invalidMessage(String argument) {\n       case TABLE_BULK_IMPORT: {\n         TableOperation tableOp = TableOperation.BULK_IMPORT;\n         validateArgumentCount(arguments, tableOp, 4);\n-        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDY5MQ=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MTA5NA==", "bodyText": "table import is creating a new table in the system.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384571094", "createdAt": "2020-02-26T15:33:37Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -434,7 +435,7 @@ public String invalidMessage(String argument) {\n       case TABLE_BULK_IMPORT: {\n         TableOperation tableOp = TableOperation.BULK_IMPORT;\n         validateArgumentCount(arguments, tableOp, 4);\n-        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDY5MQ=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU5NTMxMw==", "bodyText": "@cradal Although similarly named \"bulk import\" (aka \"import directory\") is when a new RFile is added to an existing table, whereas \"import table\" creates a new table from a previously exported table.\nSorry for the misunderstanding.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r384595313", "createdAt": "2020-02-26T16:07:19Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -434,7 +435,7 @@ public String invalidMessage(String argument) {\n       case TABLE_BULK_IMPORT: {\n         TableOperation tableOp = TableOperation.BULK_IMPORT;\n         validateArgumentCount(arguments, tableOp, 4);\n-        String tableName = validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n+        String tableName = validateNewTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ5MDY5MQ=="}, "originalCommit": {"oid": "58535cf287106e14209fbf2597fcf92e89c9fca6"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjQwNDA4OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTozNjowNlrOFvei7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTozNjowNlrOFvei7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyNzg1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      + \" characters should be renamed to conform to a 1024 character limit. \"\n          \n          \n            \n                      + \" characters should be renamed to conform to a \"+MAX_TABLE_NAME_LEN+\" character limit. \"", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385327853", "createdAt": "2020-02-27T19:36:06Z", "author": {"login": "lbschanno"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -697,10 +699,28 @@ private TableId validateTableIdArgument(ByteBuffer tableIdArg, TableOperation op\n     }\n   }\n \n-  // Verify table name arguments are valid, and match any additional restrictions\n+  // Verify older table name arguments are valid, and match any additional restrictions\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n+    if ((tableName != null) && (tableName.length() > MAX_TABLE_NAME_LEN)) {\n+      log.warn(\"Table names greater than \" + MAX_TABLE_NAME_LEN\n+          + \" characters should be renamed to conform to a 1024 character limit. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad03a083b5802946490c6826581c96ee3a55f5"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjQwNjkyOnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTozNjo1M1rOFvekrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTozNjo1M1rOFvekrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyODMwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      + \" characters should be renamed to conform to a 1024 character limit. \"\n          \n          \n            \n                      + \" characters should be renamed to conform to a \"+MAX_NAMESPACE_LEN+\" character limit. \"", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385328300", "createdAt": "2020-02-27T19:36:53Z", "author": {"login": "lbschanno"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -716,6 +736,24 @@ private void validateArgumentCount(List<ByteBuffer> arguments, TableOperation op\n   private String validateNamespaceArgument(ByteBuffer namespaceArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n+    if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n+      log.warn(\"Namespaces greater than \" + MAX_NAMESPACE_LEN\n+          + \" characters should be renamed to conform to a 1024 character limit. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad03a083b5802946490c6826581c96ee3a55f5"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjQxNDIxOnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/NamespacesIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTozOToxOVrOFvepeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTozOToxOVrOFvepeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyOTUzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertTrue(!c.namespaceOperations().exists(namespace));\n          \n          \n            \n                assertFalse(c.namespaceOperations().exists(namespace));", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385329530", "createdAt": "2020-02-27T19:39:19Z", "author": {"login": "lbschanno"}, "path": "test/src/main/java/org/apache/accumulo/test/NamespacesIT.java", "diffHunk": "@@ -191,6 +192,18 @@ public void createTableInMissingNamespace() throws Exception {\n     }\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createNamespaceWithNamespaceLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n+    StringBuilder namespaceBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_NAMESPACE_LEN; i++) {\n+      namespaceBuilder.append('a');\n+    }\n+    String namespace = namespaceBuilder.toString();\n+    c.namespaceOperations().create(namespace);\n+    assertTrue(!c.namespaceOperations().exists(namespace));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad03a083b5802946490c6826581c96ee3a55f5"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjQxNTA5OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTozOTozN1rOFveqFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxOTozOTozN1rOFveqFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMyOTY4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertTrue(!accumuloClient.tableOperations().exists(tableName));\n          \n          \n            \n                assertFalse(accumuloClient.tableOperations().exists(tableName));", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r385329687", "createdAt": "2020-02-27T19:39:37Z", "author": {"login": "lbschanno"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +190,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_TABLE_NAME_LEN; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);\n+    assertTrue(!accumuloClient.tableOperations().exists(tableName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ad03a083b5802946490c6826581c96ee3a55f5"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjQ4OTQxOnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/NamespacesIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjo0MTo1NVrOFx09NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjo0ODoyNFrOFySOOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5MjE4MQ==", "bodyText": "This code will never execute when the previous line throws an exception.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r387792181", "createdAt": "2020-03-04T16:41:55Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/NamespacesIT.java", "diffHunk": "@@ -191,6 +192,18 @@ public void createTableInMissingNamespace() throws Exception {\n     }\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createNamespaceWithNamespaceLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n+    StringBuilder namespaceBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_NAMESPACE_LEN; i++) {\n+      namespaceBuilder.append('a');\n+    }\n+    String namespace = namespaceBuilder.toString();\n+    c.namespaceOperations().create(namespace);\n+    assertTrue(!c.namespaceOperations().exists(namespace));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4ed306cce38372a0fd885423cdae32e3e8a335c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3MTY3NA==", "bodyText": "The assertion line is not needed if we depend on the throw/not thrown status of the expected exception for testing. However, that does not really test for the existence of a table with an invalid name. So...I removed the expected notation and put the assertion in a try-catch block in the newest commit.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r388271674", "createdAt": "2020-03-05T12:48:24Z", "author": {"login": "cradal"}, "path": "test/src/main/java/org/apache/accumulo/test/NamespacesIT.java", "diffHunk": "@@ -191,6 +192,18 @@ public void createTableInMissingNamespace() throws Exception {\n     }\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createNamespaceWithNamespaceLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, NamespaceExistsException {\n+    StringBuilder namespaceBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_NAMESPACE_LEN; i++) {\n+      namespaceBuilder.append('a');\n+    }\n+    String namespace = namespaceBuilder.toString();\n+    c.namespaceOperations().create(namespace);\n+    assertTrue(!c.namespaceOperations().exists(namespace));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5MjE4MQ=="}, "originalCommit": {"oid": "c4ed306cce38372a0fd885423cdae32e3e8a335c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjQ5MjYyOnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjo0Mjo1MFrOFx0_aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMjo0ODoyOFrOFySOZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5Mjc0NQ==", "bodyText": "When the previous line throws an exception, this line will not execute.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r387792745", "createdAt": "2020-03-04T16:42:50Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +190,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_TABLE_NAME_LEN; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);\n+    assertTrue(!accumuloClient.tableOperations().exists(tableName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4ed306cce38372a0fd885423cdae32e3e8a335c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI3MTcxNg==", "bodyText": "Please see NamespacesIT comment.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r388271716", "createdAt": "2020-03-05T12:48:28Z", "author": {"login": "cradal"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +190,18 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test(expected = IllegalArgumentException.class)\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_TABLE_NAME_LEN; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    accumuloClient.tableOperations().create(tableName);\n+    assertTrue(!accumuloClient.tableOperations().exists(tableName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5Mjc0NQ=="}, "originalCommit": {"oid": "c4ed306cce38372a0fd885423cdae32e3e8a335c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjY5MTU4OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjowODoxM1rOF2UyHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjowODoxM1rOF2UyHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwNzkzNQ==", "bodyText": "These can be simplified like:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                try {\n          \n          \n            \n                  accumuloClient.tableOperations().create(tableName);\n          \n          \n            \n                  fail(\"IllegalArgumentException was not thrown\");\n          \n          \n            \n                } catch (IllegalArgumentException exc) {\n          \n          \n            \n                  assertTrue(!accumuloClient.tableOperations().exists(tableName));\n          \n          \n            \n                }\n          \n          \n            \n                assertThrows(IllegalArgumentException.class, () -> accumuloClient.tableOperations().create(tableName));\n          \n          \n            \n                assertFalse(accumuloClient.tableOperations().exists(tableName));\n          \n      \n    \n    \n  \n\nThe Assert.assertThrows also returns the exception, so you can do additional checks to check the exception's getMessage() and, if you wish, the getCause().\nYou can also create the name using commons-lang3's String tableName = StringUtils.repeat('a', MAX_TABLE_NAME_LEN);\nYou can also verify the length of the string in an assert statement. Additional checks would include max length plus and minus one.\nThese comments also apply to the namespace checks.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392507935", "createdAt": "2020-03-13T22:08:13Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/TableOperationsIT.java", "diffHunk": "@@ -189,6 +190,22 @@ public void createTable() throws TableExistsException, AccumuloException,\n     accumuloClient.tableOperations().delete(tableName);\n   }\n \n+  @Test\n+  public void createTableWithTableNameLengthLimit()\n+      throws AccumuloException, AccumuloSecurityException, TableExistsException {\n+    StringBuilder tableNameBuilder = new StringBuilder();\n+    for (int i = 0; i <= MAX_TABLE_NAME_LEN; i++) {\n+      tableNameBuilder.append('a');\n+    }\n+    String tableName = tableNameBuilder.toString();\n+    try {\n+      accumuloClient.tableOperations().create(tableName);\n+      fail(\"IllegalArgumentException was not thrown\");\n+    } catch (IllegalArgumentException exc) {\n+      assertTrue(!accumuloClient.tableOperations().exists(tableName));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01c6b4458d3fbac0eadf98cb3777b61b02224a14"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjcwMzU1OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoxNToyOVrOF2U5pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNDo1MzowN1rOF3N7fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwOTg2MA==", "bodyText": "There is an INVALID_NAME type you can use instead of OTHER. (Same for the NAMESPACE validation method).", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392509860", "createdAt": "2020-03-13T22:15:29Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -716,6 +738,25 @@ private void validateArgumentCount(List<ByteBuffer> arguments, TableOperation op\n   private String validateNamespaceArgument(ByteBuffer namespaceArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n+    if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n+      log.warn(\"Namespaces greater than \" + MAX_NAMESPACE_LEN\n+          + \" characters should be renamed to conform to a \" + MAX_NAMESPACE_LEN\n+          + \" character limit. \"\n+          + \"Longer namespaces are no longer supported and may result in unexpected behavior.\");\n+    }\n+    return _validateArgument(namespace, op, Namespaces.VALID_NAME.and(userValidator));\n+  }\n+\n+  // Verify namespace arguments are valid, and match any additional restrictions\n+  private String validateNewNamespaceArgument(ByteBuffer namespaceArg, TableOperation op,\n+      Validator<String> userValidator) throws ThriftTableOperationException {\n+    String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n+    if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n+      throw new ThriftTableOperationException(null, namespace, op,\n+          TableOperationExceptionType.OTHER,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01c6b4458d3fbac0eadf98cb3777b61b02224a14"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ0NDIyMg==", "bodyText": "I added a commit to take care of this.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r393444222", "createdAt": "2020-03-17T04:53:07Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -716,6 +738,25 @@ private void validateArgumentCount(List<ByteBuffer> arguments, TableOperation op\n   private String validateNamespaceArgument(ByteBuffer namespaceArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n+    if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n+      log.warn(\"Namespaces greater than \" + MAX_NAMESPACE_LEN\n+          + \" characters should be renamed to conform to a \" + MAX_NAMESPACE_LEN\n+          + \" character limit. \"\n+          + \"Longer namespaces are no longer supported and may result in unexpected behavior.\");\n+    }\n+    return _validateArgument(namespace, op, Namespaces.VALID_NAME.and(userValidator));\n+  }\n+\n+  // Verify namespace arguments are valid, and match any additional restrictions\n+  private String validateNewNamespaceArgument(ByteBuffer namespaceArg, TableOperation op,\n+      Validator<String> userValidator) throws ThriftTableOperationException {\n+    String namespace = namespaceArg == null ? null : ByteBufferUtil.toString(namespaceArg);\n+    if ((namespace != null) && (namespace.length() > MAX_NAMESPACE_LEN)) {\n+      throw new ThriftTableOperationException(null, namespace, op,\n+          TableOperationExceptionType.OTHER,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUwOTg2MA=="}, "originalCommit": {"oid": "01c6b4458d3fbac0eadf98cb3777b61b02224a14"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjcwODYwOnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoxODowOFrOF2U8kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoxODowOFrOF2U8kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMDYwOQ==", "bodyText": "As follow-on, it might be useful to create a cache of recent warnings, so tables which aren't immediately renamed, but are relatively active, don't spam the logs too much.", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392510609", "createdAt": "2020-03-13T22:18:08Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -697,10 +700,29 @@ private TableId validateTableIdArgument(ByteBuffer tableIdArg, TableOperation op\n     }\n   }\n \n-  // Verify table name arguments are valid, and match any additional restrictions\n+  // Verify older table name arguments are valid, and match any additional restrictions\n   private String validateTableNameArgument(ByteBuffer tableNameArg, TableOperation op,\n       Validator<String> userValidator) throws ThriftTableOperationException {\n     String tableName = tableNameArg == null ? null : ByteBufferUtil.toString(tableNameArg);\n+    if ((tableName != null) && (tableName.length() > MAX_TABLE_NAME_LEN)) {\n+      log.warn(\"Table names greater than \" + MAX_TABLE_NAME_LEN\n+          + \" characters should be renamed to conform to a \" + MAX_TABLE_NAME_LEN\n+          + \" character limit. Longer table names are no longer supported and may result in \"\n+          + \" unexpected behavior.\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01c6b4458d3fbac0eadf98cb3777b61b02224a14"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjcxMDc0OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoxOToyMVrOF2U94A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoxOToyMVrOF2U94A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMDk0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        validateNewTableNameArgument(arguments.get(1), tableOp, new Validator<String>() {\n          \n          \n            \n                        validateNewTableNameArgument(arguments.get(1), tableOp, new Validator<>() {", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392510944", "createdAt": "2020-03-13T22:19:21Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -206,7 +208,8 @@ public void executeFateOperation(TInfo tinfo, TCredentials c, long opid, FateOpe\n         final String oldTableName =\n             validateTableNameArgument(arguments.get(0), tableOp, NOT_SYSTEM);\n         String newTableName =\n-            validateTableNameArgument(arguments.get(1), tableOp, new Validator<>() {\n+\n+            validateNewTableNameArgument(arguments.get(1), tableOp, new Validator<String>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01c6b4458d3fbac0eadf98cb3777b61b02224a14"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjcxNzc3OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoyMzowNVrOF2VB7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMjoyMzowNVrOF2VB7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUxMTk4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              // Verify older table name arguments are valid, and match any additional restrictions\n          \n          \n            \n              // Verify existing table's name argument is valid, and match any additional restrictions", "url": "https://github.com/apache/accumulo/pull/1518#discussion_r392511980", "createdAt": "2020-03-13T22:23:05Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/FateServiceHandler.java", "diffHunk": "@@ -697,10 +700,29 @@ private TableId validateTableIdArgument(ByteBuffer tableIdArg, TableOperation op\n     }\n   }\n \n-  // Verify table name arguments are valid, and match any additional restrictions\n+  // Verify older table name arguments are valid, and match any additional restrictions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01c6b4458d3fbac0eadf98cb3777b61b02224a14"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4156, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}