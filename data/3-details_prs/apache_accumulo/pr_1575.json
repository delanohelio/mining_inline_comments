{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MTYzNDA3", "number": 1575, "title": "Skip restricted ports in TServer port search", "bodyText": "Fixes #1573. Includes debug logging for ports being skipped. This has been tested by running 4 TableServer instances on a single node using Uno. Debug logs added in this PR are below, clearly showing the reserved ports being skipped:\n2020-03-28T15:04:31,877 [rpc.TServerUtils] WARN : Error attempting to create server at 0.0.0.0:9997. Error: Could not create ServerSocket on address /0.0.0.0:9997.\n2020-03-28T15:04:31,883 [rpc.TServerUtils] DEBUG: Adding port 9999 to list of restricted ports\n2020-03-28T15:04:31,884 [rpc.TServerUtils] DEBUG: Adding port 10001 to list of restricted ports\n2020-03-28T15:04:31,884 [rpc.TServerUtils] DEBUG: Adding port 9997 to list of restricted ports\n2020-03-28T15:04:31,884 [rpc.TServerUtils] DEBUG: Adding port 9998 to list of restricted ports\n2020-03-28T15:04:31,884 [rpc.TServerUtils] DEBUG: Adding port 9995 to list of restricted ports\n2020-03-28T15:04:31,884 [rpc.TServerUtils] DEBUG: Adding port 12234 to list of restricted ports\n2020-03-28T15:04:31,886 [rpc.TServerUtils] DEBUG: Adding port 0 to list of restricted ports\n2020-03-28T15:04:31,886 [rpc.TServerUtils] DEBUG: During port search, skipping port 9998 as it is reserved for another service\n2020-03-28T15:04:31,886 [rpc.TServerUtils] DEBUG: During port search, skipping port 9999 as it is reserved for another service\n2020-03-28T15:04:31,886 [rpc.TServerUtils] DEBUG: Instantiating unsecure custom half-async Thrift server\n2020-03-28T15:04:31,887 [rpc.TServerUtils] WARN : Error attempting to create server at 0.0.0.0:10000. Error: Could not create ServerSocket on address /0.0.0.0:10000.\n2020-03-28T15:04:31,887 [rpc.TServerUtils] INFO : Unable to use port 10000, retrying. (Thread Name = Thrift Client Server)\n2020-03-28T15:04:31,887 [rpc.TServerUtils] DEBUG: During port search, skipping port 10001 as it is reserved for another service\n2020-03-28T15:04:31,887 [rpc.TServerUtils] DEBUG: Instantiating unsecure custom half-async Thrift server\n2020-03-28T15:04:31,887 [rpc.TServerUtils] WARN : Error attempting to create server at 0.0.0.0:10002. Error: Could not create ServerSocket on address /0.0.0.0:10002.\n2020-03-28T15:04:31,887 [rpc.TServerUtils] INFO : Unable to use port 10002, retrying. (Thread Name = Thrift Client Server)\n2020-03-28T15:04:31,887 [rpc.TServerUtils] DEBUG: Instantiating unsecure custom half-async Thrift server\n2020-03-28T15:04:31,909 [tserver.TabletServer] INFO : address = ubdev:10003", "createdAt": "2020-03-28T22:22:44Z", "url": "https://github.com/apache/accumulo/pull/1575", "merged": true, "mergeCommit": {"oid": "72e27947829d5d29b513902a1391a1b9eeb77c9a"}, "closed": true, "closedAt": "2020-04-02T15:53:18Z", "author": {"login": "arvindshmicrosoft"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSM6XkAH2gAyMzk1MTYzNDA3OjM4MTc3MThiMDg5ZTYzOTYyNjQ3NzRmOWQ5ZjZjZGJkNDI3ZGE2MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTtcTQgFqTM4NjQ5NDE0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3817718b089e6396264774f9d9f6cdbd427da602", "author": {"user": {"login": "arvindshmicrosoft", "name": "Arvind Shyamsundar"}}, "url": "https://github.com/apache/accumulo/commit/3817718b089e6396264774f9d9f6cdbd427da602", "committedDate": "2020-03-28T22:19:20Z", "message": "Skip restricted ports in TServer port search\n\nFixes #1573. Includes debug logging for ports being skipped."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzY5MDIz", "url": "https://github.com/apache/accumulo/pull/1575#pullrequestreview-383369023", "createdAt": "2020-03-29T03:23:25Z", "commit": {"oid": "3817718b089e6396264774f9d9f6cdbd427da602"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMzoyMzoyNVrOF9OHkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMzo0MTozMFrOF9OMVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczODc3MQ==", "bodyText": "enum comparisons in Java should always use == and not .equals(Object)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      if (p.getType().equals(PropertyType.PORT)) {\n          \n          \n            \n                      if (p.getType() == PropertyType.PORT) {", "url": "https://github.com/apache/accumulo/pull/1575#discussion_r399738771", "createdAt": "2020-03-29T03:23:25Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "diffHunk": "@@ -168,10 +171,33 @@ public static ServerAddress startServer(MetricsSystem metricsSystem, ServerConte\n           addresses);\n     } catch (TTransportException e) {\n       if (portSearch) {\n+        // Build a list of reserved ports - as identified by properties of type PropertyType.PORT\n+        ArrayList<Integer> restrictedPorts = new ArrayList<Integer>();\n+        for (Property p : Property.values()) {\n+          if (p.getType().equals(PropertyType.PORT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3817718b089e6396264774f9d9f6cdbd427da602"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczOTUzNw==", "bodyText": "Also, you might be able to do something shorter with streams. Something like:\nList<Integer> restrictedPorts = EnumSet.allOf(Property.class).stream()\n        .filter(p -> p.getType() == HttpMethod.TRACE)\n        .map(config::getPort).collect(Collectors.toList());", "url": "https://github.com/apache/accumulo/pull/1575#discussion_r399739537", "createdAt": "2020-03-29T03:34:07Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "diffHunk": "@@ -168,10 +171,33 @@ public static ServerAddress startServer(MetricsSystem metricsSystem, ServerConte\n           addresses);\n     } catch (TTransportException e) {\n       if (portSearch) {\n+        // Build a list of reserved ports - as identified by properties of type PropertyType.PORT\n+        ArrayList<Integer> restrictedPorts = new ArrayList<Integer>();\n+        for (Property p : Property.values()) {\n+          if (p.getType().equals(PropertyType.PORT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczODc3MQ=="}, "originalCommit": {"oid": "3817718b089e6396264774f9d9f6cdbd427da602"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczOTYyOA==", "bodyText": "I don't think we need this debug statement here, but if there's an easy way to unit test the code with a mock configuration, that might be nice. Might need to move some of this port search logic into a separate method to make that easier.", "url": "https://github.com/apache/accumulo/pull/1575#discussion_r399739628", "createdAt": "2020-03-29T03:35:57Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "diffHunk": "@@ -168,10 +171,33 @@ public static ServerAddress startServer(MetricsSystem metricsSystem, ServerConte\n           addresses);\n     } catch (TTransportException e) {\n       if (portSearch) {\n+        // Build a list of reserved ports - as identified by properties of type PropertyType.PORT\n+        ArrayList<Integer> restrictedPorts = new ArrayList<Integer>();\n+        for (Property p : Property.values()) {\n+          if (p.getType().equals(PropertyType.PORT)) {\n+            for (int element : config.getPort(p)) {\n+              restrictedPorts.add(element);\n+              if (log.isDebugEnabled()) {\n+                log.debug(\"Adding port {} to list of restricted ports\", element);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3817718b089e6396264774f9d9f6cdbd427da602"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczOTcyMg==", "bodyText": "If we \"remember\" which config proper where we found each integer (by collecting as Map<Integer,Property>, perhaps), then we could also have more informative debug log messages when ports are skipped.", "url": "https://github.com/apache/accumulo/pull/1575#discussion_r399739722", "createdAt": "2020-03-29T03:37:44Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "diffHunk": "@@ -168,10 +171,33 @@ public static ServerAddress startServer(MetricsSystem metricsSystem, ServerConte\n           addresses);\n     } catch (TTransportException e) {\n       if (portSearch) {\n+        // Build a list of reserved ports - as identified by properties of type PropertyType.PORT\n+        ArrayList<Integer> restrictedPorts = new ArrayList<Integer>();\n+        for (Property p : Property.values()) {\n+          if (p.getType().equals(PropertyType.PORT)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczODc3MQ=="}, "originalCommit": {"oid": "3817718b089e6396264774f9d9f6cdbd427da602"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczOTk4OQ==", "bodyText": "There is no need to guard log messages with .isLEVELEnabled() calls when merely printing a log statement, since the logging framework already does this itself (it's also why we use the format string instead of using String.format or string concatenation ourselves). We only need to do that if we're doing extra work to prepare the log messages.\nSee previous comment on suggestion to improve this log message with the specific service that has reserved it. Could print Property.getKey() here.", "url": "https://github.com/apache/accumulo/pull/1575#discussion_r399739989", "createdAt": "2020-03-29T03:41:30Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "diffHunk": "@@ -168,10 +171,33 @@ public static ServerAddress startServer(MetricsSystem metricsSystem, ServerConte\n           addresses);\n     } catch (TTransportException e) {\n       if (portSearch) {\n+        // Build a list of reserved ports - as identified by properties of type PropertyType.PORT\n+        ArrayList<Integer> restrictedPorts = new ArrayList<Integer>();\n+        for (Property p : Property.values()) {\n+          if (p.getType().equals(PropertyType.PORT)) {\n+            for (int element : config.getPort(p)) {\n+              restrictedPorts.add(element);\n+              if (log.isDebugEnabled()) {\n+                log.debug(\"Adding port {} to list of restricted ports\", element);\n+              }\n+            }\n+          }\n+        }\n+\n         HostAndPort last = addresses[addresses.length - 1];\n         // Attempt to allocate a port outside of the specified port property\n         // Search sequentially over the next 1000 ports\n         for (int port = last.getPort() + 1; port < last.getPort() + 1001; port++) {\n+          if (restrictedPorts.contains(port)) {\n+            if (log.isDebugEnabled()) {\n+              log.debug(\n+                  \"During port search, skipping port {} as it is reserved for another service\",\n+                  port);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3817718b089e6396264774f9d9f6cdbd427da602"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df3f67c52b8cc7dc671f634470837edb2e0be7e9", "author": {"user": {"login": "arvindshmicrosoft", "name": "Arvind Shyamsundar"}}, "url": "https://github.com/apache/accumulo/commit/df3f67c52b8cc7dc671f634470837edb2e0be7e9", "committedDate": "2020-03-30T17:19:52Z", "message": "Use Java Streams and add Unit Test\n\n* Using streams to make the reserved port enumeration code more declarative\n* Added a comprehensive unit test to check that reserved ports are\n  skipped during TServer startup as part of port search"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "52d7e409b8bf962d025c52f2a80e417c38fa5f22", "author": {"user": {"login": "arvindshmicrosoft", "name": "Arvind Shyamsundar"}}, "url": "https://github.com/apache/accumulo/commit/52d7e409b8bf962d025c52f2a80e417c38fa5f22", "committedDate": "2020-03-30T16:10:57Z", "message": "Use Java Streams and add Unit Test\n\n* Using streams to make the reserved port enumeration code more declarative\n* Added a comprehensive unit test to check that reserved ports are\n  skipped during TServer startup as part of port search"}, "afterCommit": {"oid": "df3f67c52b8cc7dc671f634470837edb2e0be7e9", "author": {"user": {"login": "arvindshmicrosoft", "name": "Arvind Shyamsundar"}}, "url": "https://github.com/apache/accumulo/commit/df3f67c52b8cc7dc671f634470837edb2e0be7e9", "committedDate": "2020-03-30T17:19:52Z", "message": "Use Java Streams and add Unit Test\n\n* Using streams to make the reserved port enumeration code more declarative\n* Added a comprehensive unit test to check that reserved ports are\n  skipped during TServer startup as part of port search"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MzYyOTkx", "url": "https://github.com/apache/accumulo/pull/1575#pullrequestreview-384362991", "createdAt": "2020-03-31T02:34:19Z", "commit": {"oid": "df3f67c52b8cc7dc671f634470837edb2e0be7e9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjozNDoyMFrOF-DH5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMjozNDoyMFrOF-DH5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwNzIwNA==", "bodyText": "I think I have an idea to simplify the unit testing logic for the port search behavior by putting all the port search logic into a single method that accepts a starting port and a config, and returns a selected port, but I can experiment with that idea after we merge in the functionality you've added.", "url": "https://github.com/apache/accumulo/pull/1575#discussion_r400607204", "createdAt": "2020-03-31T02:34:20Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/test/java/org/apache/accumulo/server/util/TServerUtilsTest.java", "diffHunk": "@@ -233,6 +234,72 @@ public void testStartServerUsedPortWithSearch() throws Exception {\n     }\n   }\n \n+  @SuppressFBWarnings(value = \"UNENCRYPTED_SERVER_SOCKET\", justification = \"socket for testing\")\n+  @Test\n+  public void testStartServerNonDefaultPorts() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df3f67c52b8cc7dc671f634470837edb2e0be7e9"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDk0MTQw", "url": "https://github.com/apache/accumulo/pull/1575#pullrequestreview-386494140", "createdAt": "2020-04-02T14:40:15Z", "commit": {"oid": "df3f67c52b8cc7dc671f634470837edb2e0be7e9"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDo0MDoxNVrOF_ufpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDo0NzoxMVrOF_u15Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM2NjM3Mw==", "bodyText": "May be able to do the following.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      if (reservedPorts.keySet().contains(port)) {\n          \n          \n            \n                      if (reservedPorts.containsKey(port)) {", "url": "https://github.com/apache/accumulo/pull/1575#discussion_r402366373", "createdAt": "2020-04-02T14:40:15Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "diffHunk": "@@ -168,10 +189,20 @@ public static ServerAddress startServer(MetricsSystem metricsSystem, ServerConte\n           addresses);\n     } catch (TTransportException e) {\n       if (portSearch) {\n+        // Build a list of reserved ports - as identified by properties of type PropertyType.PORT\n+        Map<Integer,Property> reservedPorts = getReservedPorts(config);\n+\n         HostAndPort last = addresses[addresses.length - 1];\n         // Attempt to allocate a port outside of the specified port property\n         // Search sequentially over the next 1000 ports\n         for (int port = last.getPort() + 1; port < last.getPort() + 1001; port++) {\n+          if (reservedPorts.keySet().contains(port)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df3f67c52b8cc7dc671f634470837edb2e0be7e9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM3MjA2OQ==", "bodyText": "It would be nice to rework this entire unit test to use less static stuff and pass more, but that would be follow on work.  Not something for this PR.", "url": "https://github.com/apache/accumulo/pull/1575#discussion_r402372069", "createdAt": "2020-04-02T14:47:11Z", "author": {"login": "keith-turner"}, "path": "server/base/src/test/java/org/apache/accumulo/server/util/TServerUtilsTest.java", "diffHunk": "@@ -233,6 +234,72 @@ public void testStartServerUsedPortWithSearch() throws Exception {\n     }\n   }\n \n+  @SuppressFBWarnings(value = \"UNENCRYPTED_SERVER_SOCKET\", justification = \"socket for testing\")\n+  @Test\n+  public void testStartServerNonDefaultPorts() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwNzIwNA=="}, "originalCommit": {"oid": "df3f67c52b8cc7dc671f634470837edb2e0be7e9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1913, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}