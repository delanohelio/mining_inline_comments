{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxOTc3ODA2", "number": 1501, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowNzowM1rODdwuUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTozMDoyNFrODdzczg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTMzNTg2OnYy", "diffSide": "RIGHT", "path": "server/base/src/main/java/org/apache/accumulo/server/fs/VolumeUtil.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowNzowNFrOFmjE_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjowMToyNFrOFn3Lcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2NDkyNA==", "bodyText": "When I looked at this code I found myself wondering if any follow on code relies on the metadata entry for the TabletFile created here.  If so that could result in a silent bug (where we try to delete something in the metadata table that does not exists).  This makes me think it would be nice to be able to construct a TabletFile w/o a metadata entry and anything trying to get the metadata path would get an exception.  This would cause things to fail fast.\nCould possibly have a TabletFile constructor that only takes a path and when this constructor is used to create a the object, attempts to get the metadata entry result in an exception.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r375964924", "createdAt": "2020-02-06T17:07:04Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/fs/VolumeUtil.java", "diffHunk": "@@ -159,14 +160,14 @@ public static TabletFiles updateTabletVolumes(ServerContext context, ZooLock zoo\n       }\n     }\n \n-    for (Entry<FileRef,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n-      String metaPath = entry.getKey().meta().toString();\n+    for (Entry<TabletFile,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n+      String metaPath = entry.getKey().getNormalizedPath();\n       Path switchedPath = switchVolume(metaPath, FileType.TABLE, replacements);\n       if (switchedPath != null) {\n         filesToRemove.add(entry.getKey());\n-        FileRef switchedRef = new FileRef(switchedPath.toString(), switchedPath);\n-        filesToAdd.put(switchedRef, entry.getValue());\n-        ret.datafiles.put(switchedRef, entry.getValue());\n+        TabletFile switchedFile = new TabletFile(switchedPath, switchedPath.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0Njk0Ng==", "bodyText": "That is a good point.  The volume replacement code (which is where this is used) will delete the original file but I don't see where it will write out the new path.  Is this done during compaction?  If so, then we will have problems if we throw an exception since the string won't ever exist in the metadata.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376046946", "createdAt": "2020-02-06T19:50:17Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/fs/VolumeUtil.java", "diffHunk": "@@ -159,14 +160,14 @@ public static TabletFiles updateTabletVolumes(ServerContext context, ZooLock zoo\n       }\n     }\n \n-    for (Entry<FileRef,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n-      String metaPath = entry.getKey().meta().toString();\n+    for (Entry<TabletFile,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n+      String metaPath = entry.getKey().getNormalizedPath();\n       Path switchedPath = switchVolume(metaPath, FileType.TABLE, replacements);\n       if (switchedPath != null) {\n         filesToRemove.add(entry.getKey());\n-        FileRef switchedRef = new FileRef(switchedPath.toString(), switchedPath);\n-        filesToAdd.put(switchedRef, entry.getValue());\n-        ret.datafiles.put(switchedRef, entry.getValue());\n+        TabletFile switchedFile = new TabletFile(switchedPath, switchedPath.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2NDkyNA=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1NDg1OQ==", "bodyText": "but I don't see where it will write out the new path. Is this done during compaction?\n\nI am not sure, was there a specific class you were looking at?  I can take a look.\n\nIf so, then we will have problems if we throw an exception since the string won't ever exist in the metadata.\n\nIt would be annoying if making TabletFile more strict causes code that is working for the wrong reasons to break, but it would be nice to cause code that is not working but failing silently to break.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376054859", "createdAt": "2020-02-06T20:06:51Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/fs/VolumeUtil.java", "diffHunk": "@@ -159,14 +160,14 @@ public static TabletFiles updateTabletVolumes(ServerContext context, ZooLock zoo\n       }\n     }\n \n-    for (Entry<FileRef,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n-      String metaPath = entry.getKey().meta().toString();\n+    for (Entry<TabletFile,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n+      String metaPath = entry.getKey().getNormalizedPath();\n       Path switchedPath = switchVolume(metaPath, FileType.TABLE, replacements);\n       if (switchedPath != null) {\n         filesToRemove.add(entry.getKey());\n-        FileRef switchedRef = new FileRef(switchedPath.toString(), switchedPath);\n-        filesToAdd.put(switchedRef, entry.getValue());\n-        ret.datafiles.put(switchedRef, entry.getValue());\n+        TabletFile switchedFile = new TabletFile(switchedPath, switchedPath.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2NDkyNA=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1Njk2Nw==", "bodyText": "but I don't see where it will write out the new path. Is this done during compaction?\n\nI am not sure, was there a specific class you were looking at? I can take a look.\n\nJust this method, VolumeUtil.updateTabletVolumes() and the only place its called, Tablet.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376056967", "createdAt": "2020-02-06T20:11:46Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/fs/VolumeUtil.java", "diffHunk": "@@ -159,14 +160,14 @@ public static TabletFiles updateTabletVolumes(ServerContext context, ZooLock zoo\n       }\n     }\n \n-    for (Entry<FileRef,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n-      String metaPath = entry.getKey().meta().toString();\n+    for (Entry<TabletFile,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n+      String metaPath = entry.getKey().getNormalizedPath();\n       Path switchedPath = switchVolume(metaPath, FileType.TABLE, replacements);\n       if (switchedPath != null) {\n         filesToRemove.add(entry.getKey());\n-        FileRef switchedRef = new FileRef(switchedPath.toString(), switchedPath);\n-        filesToAdd.put(switchedRef, entry.getValue());\n-        ret.datafiles.put(switchedRef, entry.getValue());\n+        TabletFile switchedFile = new TabletFile(switchedPath, switchedPath.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2NDkyNA=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM0MjgzNQ==", "bodyText": "I was looking at the code and it seems like there may be an existing bug.  I opened #1501", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r377342835", "createdAt": "2020-02-10T22:01:24Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/fs/VolumeUtil.java", "diffHunk": "@@ -159,14 +160,14 @@ public static TabletFiles updateTabletVolumes(ServerContext context, ZooLock zoo\n       }\n     }\n \n-    for (Entry<FileRef,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n-      String metaPath = entry.getKey().meta().toString();\n+    for (Entry<TabletFile,DataFileValue> entry : tabletFiles.datafiles.entrySet()) {\n+      String metaPath = entry.getKey().getNormalizedPath();\n       Path switchedPath = switchVolume(metaPath, FileType.TABLE, replacements);\n       if (switchedPath != null) {\n         filesToRemove.add(entry.getKey());\n-        FileRef switchedRef = new FileRef(switchedPath.toString(), switchedPath);\n-        filesToAdd.put(switchedRef, entry.getValue());\n-        ret.datafiles.put(switchedRef, entry.getValue());\n+        TabletFile switchedFile = new TabletFile(switchedPath, switchedPath.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2NDkyNA=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTM2NjA3OnYy", "diffSide": "RIGHT", "path": "server/base/src/main/java/org/apache/accumulo/server/util/MetadataTableUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoxNTo1M1rOFmjX7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMDoxMTo1OVrOFmos6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2OTc3Mw==", "bodyText": "Why did this end up Set<String>?", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r375969773", "createdAt": "2020-02-06T17:15:53Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/util/MetadataTableUtil.java", "diffHunk": "@@ -247,44 +247,48 @@ public static void splitTablet(KeyExtent extent, Text oldPrevEndRow, double spli\n     update(context, zooLock, m, extent);\n   }\n \n-  public static void finishSplit(Text metadataEntry, Map<FileRef,DataFileValue> datafileSizes,\n-      List<FileRef> highDatafilesToRemove, final ServerContext context, ZooLock zooLock) {\n+  public static void finishSplit(Text metadataEntry, Map<TabletFile,DataFileValue> datafileSizes,\n+      List<TabletFile> highDatafilesToRemove, final ServerContext context, ZooLock zooLock) {\n     Mutation m = new Mutation(metadataEntry);\n     TabletsSection.TabletColumnFamily.SPLIT_RATIO_COLUMN.putDelete(m);\n     TabletsSection.TabletColumnFamily.OLD_PREV_ROW_COLUMN.putDelete(m);\n     ChoppedColumnFamily.CHOPPED_COLUMN.putDelete(m);\n \n-    for (Entry<FileRef,DataFileValue> entry : datafileSizes.entrySet()) {\n-      m.put(DataFileColumnFamily.NAME, entry.getKey().meta(), new Value(entry.getValue().encode()));\n+    for (Entry<TabletFile,DataFileValue> entry : datafileSizes.entrySet()) {\n+      m.put(DataFileColumnFamily.NAME, entry.getKey().getMetadataText(),\n+          new Value(entry.getValue().encode()));\n     }\n \n-    for (FileRef pathToRemove : highDatafilesToRemove) {\n-      m.putDelete(DataFileColumnFamily.NAME, pathToRemove.meta());\n+    for (TabletFile pathToRemove : highDatafilesToRemove) {\n+      m.putDelete(DataFileColumnFamily.NAME, pathToRemove.getMetadataText());\n     }\n \n     update(context, zooLock, m, new KeyExtent(metadataEntry, (Text) null));\n   }\n \n-  public static void finishSplit(KeyExtent extent, Map<FileRef,DataFileValue> datafileSizes,\n-      List<FileRef> highDatafilesToRemove, ServerContext context, ZooLock zooLock) {\n+  public static void finishSplit(KeyExtent extent, Map<TabletFile,DataFileValue> datafileSizes,\n+      List<TabletFile> highDatafilesToRemove, ServerContext context, ZooLock zooLock) {\n     finishSplit(extent.getMetadataEntry(), datafileSizes, highDatafilesToRemove, context, zooLock);\n   }\n \n-  public static void addDeleteEntries(KeyExtent extent, Set<FileRef> datafilesToDelete,\n+  /**\n+   * datafilesToDelete are strings because they can be a TabletFile or directory\n+   */\n+  public static void addDeleteEntries(KeyExtent extent, Set<String> datafilesToDelete,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0OTYxOQ==", "bodyText": "This method was bumping into the GC code that uses tabletDirs.  One possible code path for a file to be added to those datafilesToDelete comes from GcVolumeUtil.getDeleteTabletOnAllVolumesUri()  Here", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376049619", "createdAt": "2020-02-06T19:55:59Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/util/MetadataTableUtil.java", "diffHunk": "@@ -247,44 +247,48 @@ public static void splitTablet(KeyExtent extent, Text oldPrevEndRow, double spli\n     update(context, zooLock, m, extent);\n   }\n \n-  public static void finishSplit(Text metadataEntry, Map<FileRef,DataFileValue> datafileSizes,\n-      List<FileRef> highDatafilesToRemove, final ServerContext context, ZooLock zooLock) {\n+  public static void finishSplit(Text metadataEntry, Map<TabletFile,DataFileValue> datafileSizes,\n+      List<TabletFile> highDatafilesToRemove, final ServerContext context, ZooLock zooLock) {\n     Mutation m = new Mutation(metadataEntry);\n     TabletsSection.TabletColumnFamily.SPLIT_RATIO_COLUMN.putDelete(m);\n     TabletsSection.TabletColumnFamily.OLD_PREV_ROW_COLUMN.putDelete(m);\n     ChoppedColumnFamily.CHOPPED_COLUMN.putDelete(m);\n \n-    for (Entry<FileRef,DataFileValue> entry : datafileSizes.entrySet()) {\n-      m.put(DataFileColumnFamily.NAME, entry.getKey().meta(), new Value(entry.getValue().encode()));\n+    for (Entry<TabletFile,DataFileValue> entry : datafileSizes.entrySet()) {\n+      m.put(DataFileColumnFamily.NAME, entry.getKey().getMetadataText(),\n+          new Value(entry.getValue().encode()));\n     }\n \n-    for (FileRef pathToRemove : highDatafilesToRemove) {\n-      m.putDelete(DataFileColumnFamily.NAME, pathToRemove.meta());\n+    for (TabletFile pathToRemove : highDatafilesToRemove) {\n+      m.putDelete(DataFileColumnFamily.NAME, pathToRemove.getMetadataText());\n     }\n \n     update(context, zooLock, m, new KeyExtent(metadataEntry, (Text) null));\n   }\n \n-  public static void finishSplit(KeyExtent extent, Map<FileRef,DataFileValue> datafileSizes,\n-      List<FileRef> highDatafilesToRemove, ServerContext context, ZooLock zooLock) {\n+  public static void finishSplit(KeyExtent extent, Map<TabletFile,DataFileValue> datafileSizes,\n+      List<TabletFile> highDatafilesToRemove, ServerContext context, ZooLock zooLock) {\n     finishSplit(extent.getMetadataEntry(), datafileSizes, highDatafilesToRemove, context, zooLock);\n   }\n \n-  public static void addDeleteEntries(KeyExtent extent, Set<FileRef> datafilesToDelete,\n+  /**\n+   * datafilesToDelete are strings because they can be a TabletFile or directory\n+   */\n+  public static void addDeleteEntries(KeyExtent extent, Set<String> datafilesToDelete,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2OTc3Mw=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1NzA2NQ==", "bodyText": "Thanks for the pointer.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376057065", "createdAt": "2020-02-06T20:11:59Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/util/MetadataTableUtil.java", "diffHunk": "@@ -247,44 +247,48 @@ public static void splitTablet(KeyExtent extent, Text oldPrevEndRow, double spli\n     update(context, zooLock, m, extent);\n   }\n \n-  public static void finishSplit(Text metadataEntry, Map<FileRef,DataFileValue> datafileSizes,\n-      List<FileRef> highDatafilesToRemove, final ServerContext context, ZooLock zooLock) {\n+  public static void finishSplit(Text metadataEntry, Map<TabletFile,DataFileValue> datafileSizes,\n+      List<TabletFile> highDatafilesToRemove, final ServerContext context, ZooLock zooLock) {\n     Mutation m = new Mutation(metadataEntry);\n     TabletsSection.TabletColumnFamily.SPLIT_RATIO_COLUMN.putDelete(m);\n     TabletsSection.TabletColumnFamily.OLD_PREV_ROW_COLUMN.putDelete(m);\n     ChoppedColumnFamily.CHOPPED_COLUMN.putDelete(m);\n \n-    for (Entry<FileRef,DataFileValue> entry : datafileSizes.entrySet()) {\n-      m.put(DataFileColumnFamily.NAME, entry.getKey().meta(), new Value(entry.getValue().encode()));\n+    for (Entry<TabletFile,DataFileValue> entry : datafileSizes.entrySet()) {\n+      m.put(DataFileColumnFamily.NAME, entry.getKey().getMetadataText(),\n+          new Value(entry.getValue().encode()));\n     }\n \n-    for (FileRef pathToRemove : highDatafilesToRemove) {\n-      m.putDelete(DataFileColumnFamily.NAME, pathToRemove.meta());\n+    for (TabletFile pathToRemove : highDatafilesToRemove) {\n+      m.putDelete(DataFileColumnFamily.NAME, pathToRemove.getMetadataText());\n     }\n \n     update(context, zooLock, m, new KeyExtent(metadataEntry, (Text) null));\n   }\n \n-  public static void finishSplit(KeyExtent extent, Map<FileRef,DataFileValue> datafileSizes,\n-      List<FileRef> highDatafilesToRemove, ServerContext context, ZooLock zooLock) {\n+  public static void finishSplit(KeyExtent extent, Map<TabletFile,DataFileValue> datafileSizes,\n+      List<TabletFile> highDatafilesToRemove, ServerContext context, ZooLock zooLock) {\n     finishSplit(extent.getMetadataEntry(), datafileSizes, highDatafilesToRemove, context, zooLock);\n   }\n \n-  public static void addDeleteEntries(KeyExtent extent, Set<FileRef> datafilesToDelete,\n+  /**\n+   * datafilesToDelete are strings because they can be a TabletFile or directory\n+   */\n+  public static void addDeleteEntries(KeyExtent extent, Set<String> datafilesToDelete,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2OTc3Mw=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTM2OTk2OnYy", "diffSide": "RIGHT", "path": "server/base/src/main/java/org/apache/accumulo/server/util/MetadataTableUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoxNzowNVrOFmjaWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoxNzowNVrOFmjaWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3MDM5NA==", "bodyText": "That is kinda of a neat that sizes::put can be done now.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r375970394", "createdAt": "2020-02-06T17:17:05Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/util/MetadataTableUtil.java", "diffHunk": "@@ -414,7 +420,7 @@ public static void deleteTable(TableId tableId, boolean insertDeletes, ServerCon\n \n     result.addAll(tablet.getLogs());\n \n-    tablet.getFilesMap().forEach((tf, v) -> sizes.put(new FileRef(tf.getMetadataEntry()), v));\n+    tablet.getFilesMap().forEach(sizes::put);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTM4NTg2OnYy", "diffSide": "RIGHT", "path": "server/base/src/test/java/org/apache/accumulo/server/util/FileUtilTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoyMTo1MlrOFmjkTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMDowODo0MlrOFmondQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3Mjk0MA==", "bodyText": "This test seems suspicious.  I am wondering if this test is still needed.  I will look into this later.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r375972940", "createdAt": "2020-02-06T17:21:52Z", "author": {"login": "keith-turner"}, "path": "server/base/src/test/java/org/apache/accumulo/server/util/FileUtilTest.java", "diffHunk": "@@ -66,13 +66,13 @@ public void createTmpDir() throws IOException {\n \n   @Test\n   public void testToPathStrings() {\n-    Collection<FileRef> c = new java.util.ArrayList<>();\n-    FileRef r1 = createMock(FileRef.class);\n-    expect(r1.path()).andReturn(new Path(\"/foo\"));\n+    Collection<TabletFile> c = new java.util.ArrayList<>();\n+    TabletFile r1 = createMock(TabletFile.class);\n+    expect(r1.getNormalizedPath()).andReturn(\"/foo\");\n     replay(r1);\n     c.add(r1);\n-    FileRef r2 = createMock(FileRef.class);\n-    expect(r2.path()).andReturn(new Path(\"/bar\"));\n+    TabletFile r2 = createMock(TabletFile.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1NTY2OQ==", "bodyText": "I think this test is ok, its just making sure that a method in FileUtil calls a very specific method on TabletFile.  I think the method it is testing could be replaced with a one line stream operation.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376055669", "createdAt": "2020-02-06T20:08:42Z", "author": {"login": "keith-turner"}, "path": "server/base/src/test/java/org/apache/accumulo/server/util/FileUtilTest.java", "diffHunk": "@@ -66,13 +66,13 @@ public void createTmpDir() throws IOException {\n \n   @Test\n   public void testToPathStrings() {\n-    Collection<FileRef> c = new java.util.ArrayList<>();\n-    FileRef r1 = createMock(FileRef.class);\n-    expect(r1.path()).andReturn(new Path(\"/foo\"));\n+    Collection<TabletFile> c = new java.util.ArrayList<>();\n+    TabletFile r1 = createMock(TabletFile.class);\n+    expect(r1.getNormalizedPath()).andReturn(\"/foo\");\n     replay(r1);\n     c.add(r1);\n-    FileRef r2 = createMock(FileRef.class);\n-    expect(r2.path()).andReturn(new Path(\"/bar\"));\n+    TabletFile r2 = createMock(TabletFile.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3Mjk0MA=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTM5Mjc3OnYy", "diffSide": "RIGHT", "path": "server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzoyMzo1NVrOFmjoow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMTozNjozMFrOFmrC7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NDA1MQ==", "bodyText": "Why drop validation here?", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r375974051", "createdAt": "2020-02-06T17:23:55Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java", "diffHunk": "@@ -611,12 +609,11 @@ private void deleteTablets(MergeInfo info) throws AccumuloException {\n       TabletsSection.ServerColumnFamily.TIME_COLUMN.fetch(scanner);\n       scanner.fetchColumnFamily(DataFileColumnFamily.NAME);\n       scanner.fetchColumnFamily(TabletsSection.CurrentLocationColumnFamily.NAME);\n-      Set<FileRef> datafiles = new TreeSet<>();\n+      Set<String> datafiles = new TreeSet<>();\n       for (Entry<Key,Value> entry : scanner) {\n         Key key = entry.getKey();\n         if (key.compareColumnFamily(DataFileColumnFamily.NAME) == 0) {\n-          datafiles\n-              .add(new FileRef(TabletFileUtil.validate(key.getColumnQualifierData().toString())));\n+          datafiles.add(key.getColumnQualifierData().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA1MDc0MQ==", "bodyText": "Hmm this might have been a mistake.  I had this code using TabletFile at one point but then had to revert to Strings because of the GC code, per my other comment.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376050741", "createdAt": "2020-02-06T19:58:19Z", "author": {"login": "milleruntime"}, "path": "server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java", "diffHunk": "@@ -611,12 +609,11 @@ private void deleteTablets(MergeInfo info) throws AccumuloException {\n       TabletsSection.ServerColumnFamily.TIME_COLUMN.fetch(scanner);\n       scanner.fetchColumnFamily(DataFileColumnFamily.NAME);\n       scanner.fetchColumnFamily(TabletsSection.CurrentLocationColumnFamily.NAME);\n-      Set<FileRef> datafiles = new TreeSet<>();\n+      Set<String> datafiles = new TreeSet<>();\n       for (Entry<Key,Value> entry : scanner) {\n         Key key = entry.getKey();\n         if (key.compareColumnFamily(DataFileColumnFamily.NAME) == 0) {\n-          datafiles\n-              .add(new FileRef(TabletFileUtil.validate(key.getColumnQualifierData().toString())));\n+          datafiles.add(key.getColumnQualifierData().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NDA1MQ=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA5NTQ2OQ==", "bodyText": "Fixed in 3aacfe6", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376095469", "createdAt": "2020-02-06T21:36:30Z", "author": {"login": "milleruntime"}, "path": "server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java", "diffHunk": "@@ -611,12 +609,11 @@ private void deleteTablets(MergeInfo info) throws AccumuloException {\n       TabletsSection.ServerColumnFamily.TIME_COLUMN.fetch(scanner);\n       scanner.fetchColumnFamily(DataFileColumnFamily.NAME);\n       scanner.fetchColumnFamily(TabletsSection.CurrentLocationColumnFamily.NAME);\n-      Set<FileRef> datafiles = new TreeSet<>();\n+      Set<String> datafiles = new TreeSet<>();\n       for (Entry<Key,Value> entry : scanner) {\n         Key key = entry.getKey();\n         if (key.compareColumnFamily(DataFileColumnFamily.NAME) == 0) {\n-          datafiles\n-              .add(new FileRef(TabletFileUtil.validate(key.getColumnQualifierData().toString())));\n+          datafiles.add(key.getColumnQualifierData().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk3NDA1MQ=="}, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTc4MjU0OnYy", "diffSide": "RIGHT", "path": "server/tserver/src/main/java/org/apache/accumulo/tserver/compaction/MajorCompactionRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTozMDoyNFrOFmne-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTozMDoyNFrOFmne-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzNzExMw==", "bodyText": "This class is used by CompactionStrategy which is a pluggable component.  So this changes could break existing compaction strategy plugins.\nI think this change is ok because with these types being outside of SPI, its hard to analyze in a rigorous way.   It would not surprise me if there were already other breaking changes.", "url": "https://github.com/apache/accumulo/pull/1501#discussion_r376037113", "createdAt": "2020-02-06T19:30:24Z", "author": {"login": "keith-turner"}, "path": "server/tserver/src/main/java/org/apache/accumulo/tserver/compaction/MajorCompactionRequest.java", "diffHunk": "@@ -105,7 +105,7 @@ public MajorCompactionReason getReason() {\n     return reason;\n   }\n \n-  public Map<FileRef,DataFileValue> getFiles() {\n+  public Map<TabletFile,DataFileValue> getFiles() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea08f8ef59cd199ec23d414d8dbc89be7eb1667"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4147, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}