{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NTA4Mjc2", "number": 1479, "title": "Clean up relative path code", "bodyText": "Drop methods in VolumeManager\nCreate TabletFileUtil to do path validation", "createdAt": "2020-01-21T20:57:57Z", "url": "https://github.com/apache/accumulo/pull/1479", "merged": true, "mergeCommit": {"oid": "87ad69931f79c0755ac967d74ad3c9ca3868fa40"}, "closed": true, "closedAt": "2020-01-24T17:20:37Z", "author": {"login": "milleruntime"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8oCVKAFqTM0NjE5MDU1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9h0JUABqjI5Nzc4OTY0MDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MTkwNTU5", "url": "https://github.com/apache/accumulo/pull/1479#pullrequestreview-346190559", "createdAt": "2020-01-21T21:05:41Z", "commit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMTowNTo0MlrOFgIxkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMToyOTowMFrOFgJYgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI0MjUxMw==", "bodyText": "Did we want to have this normalize the path also by returning the normalized version from Path?", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369242513", "createdAt": "2020-01-21T21:05:42Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/metadata/TabletFileUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.accumulo.core.metadata;\n+\n+import org.apache.hadoop.fs.Path;\n+\n+/**\n+ * Utility class for validation of metadata tablet files.\n+ */\n+public class TabletFileUtil {\n+\n+  /**\n+   * Validate if string is a valid path. Return same string or throw exception if not valid. This\n+   * was added to facilitate more use of TabletFile over String but this puts the validation in one\n+   * location in the case where TabletFile can't be used.\n+   */\n+  public static String validate(String path) {\n+    Path p = new Path(path);\n+    if (p.toUri().getScheme() == null) {\n+      throw new IllegalArgumentException(\"Invalid path provided, no scheme in \" + path);\n+    }\n+    return path;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI0NDAzNQ==", "bodyText": "The old code did a kind of normalization here against the volume manager's filesystem. I would hope that by the time it gets here, all callers would be providing a normalized string, but care should be taken if the parameter is provided from user input, that we normalize it first. I didn't track down all the callers to check this.", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369244035", "createdAt": "2020-01-21T21:09:18Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/metadata/ServerAmpleImpl.java", "diffHunk": "@@ -192,10 +192,9 @@ private BatchWriter createWriter(TableId tableId) {\n     }\n   }\n \n-  public static Mutation createDeleteMutation(ServerContext context, TableId tableId,\n-      String pathToRemove) {\n-    Path path = context.getVolumeManager().getFullPath(tableId, pathToRemove);\n-    Mutation delFlag = new Mutation(new Text(DeletesSection.encodeRow(path.toString())));\n+  public static Mutation createDeleteMutation(String pathToRemove) {\n+    String path = TabletFileUtil.validate(pathToRemove);\n+    Mutation delFlag = new Mutation(new Text(DeletesSection.encodeRow(path)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI0NDc4Ng==", "bodyText": "This would be more readable if the validate call wrapped the right-hand-side of the assignment to tabletFilePath rather than being embedded into a constructor inside a parameter to the put method call.", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369244786", "createdAt": "2020-01-21T21:11:06Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/util/MasterMetadataUtil.java", "diffHunk": "@@ -149,7 +150,8 @@ private static KeyExtent fixSplit(ServerContext context, TableId tableId, Text m\n \n           for (Entry<Key,Value> entry : scanner3) {\n             if (entry.getKey().compareColumnFamily(DataFileColumnFamily.NAME) == 0) {\n-              origDatafileSizes.put(new FileRef(context.getVolumeManager(), entry.getKey()),\n+              String tabletFilePath = entry.getKey().getColumnQualifierData().toString();\n+              origDatafileSizes.put(new FileRef(TabletFileUtil.validate(tabletFilePath)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI0NTIxNg==", "bodyText": "An impl method could take the more precise type, rather than the toString() version, without affecting the API.", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369245216", "createdAt": "2020-01-21T21:12:04Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/util/MetadataTableUtil.java", "diffHunk": "@@ -278,15 +278,12 @@ public static void addDeleteEntries(KeyExtent extent, Set<FileRef> datafilesToDe\n     // TODO could use batch writer,would need to handle failure and retry like update does -\n     // ACCUMULO-1294\n     for (FileRef pathToRemove : datafilesToDelete) {\n-      update(context,\n-          ServerAmpleImpl.createDeleteMutation(context, tableId, pathToRemove.path().toString()),\n-          extent);\n+      update(context, ServerAmpleImpl.createDeleteMutation(pathToRemove.path().toString()), extent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI1MjQ4MQ==", "bodyText": "Also, there's a lot of calls to toString() on the path to validate. This is the only method that calls validate without calling toString() first. However, many of this method's own callers call toString() first on the parameter. I think some of this could be simplified if everybody stopped calling toString(), and we kept the more concrete type, and only call toString() inside the validate method, if necessary. It simplifies a lot of the calling code.", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369252481", "createdAt": "2020-01-21T21:29:00Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/metadata/ServerAmpleImpl.java", "diffHunk": "@@ -192,10 +192,9 @@ private BatchWriter createWriter(TableId tableId) {\n     }\n   }\n \n-  public static Mutation createDeleteMutation(ServerContext context, TableId tableId,\n-      String pathToRemove) {\n-    Path path = context.getVolumeManager().getFullPath(tableId, pathToRemove);\n-    Mutation delFlag = new Mutation(new Text(DeletesSection.encodeRow(path.toString())));\n+  public static Mutation createDeleteMutation(String pathToRemove) {\n+    String path = TabletFileUtil.validate(pathToRemove);\n+    Mutation delFlag = new Mutation(new Text(DeletesSection.encodeRow(path)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI0NDAzNQ=="}, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjM3MTY2", "url": "https://github.com/apache/accumulo/pull/1479#pullrequestreview-346637166", "createdAt": "2020-01-22T14:40:04Z", "commit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDo0MDowNFrOFgeeXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNDo1NDozMVrOFgfBVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU5ODA0Nw==", "bodyText": "There is another method in this class named getVolumeByPath that has relative path handling code.  Would that be something to address in this PR?  Or should that be another PR?", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369598047", "createdAt": "2020-01-22T14:40:04Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/fs/VolumeManagerImpl.java", "diffHunk": "@@ -419,66 +407,6 @@ public Path matchingFileSystem(Path source, String[] options) {\n     return null;\n   }\n \n-  @Override\n-  public Path getFullPath(TableId tableId, String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwMzA3Ng==", "bodyText": "Should these be validated?", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369603076", "createdAt": "2020-01-22T14:48:11Z", "author": {"login": "keith-turner"}, "path": "server/gc/src/main/java/org/apache/accumulo/gc/SimpleGarbageCollector.java", "diffHunk": "@@ -319,9 +319,9 @@ public void delete(SortedMap<String,String> confirmedDeletes) throws TableNotFou\n               // of deleting something that should not be deleted. Must not change value of delete\n               // variable because thats whats stored in metadata table.\n               log.debug(\"Volume replaced {} -> {}\", delete, switchedDelete);\n-              fullPath = fs.getFullPath(FileType.TABLE, switchedDelete);\n+              fullPath = new Path(switchedDelete);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwNjQ1OQ==", "bodyText": "Would probably be useful to have a FileRef constructor that takes a TabletFile type.  This way its always converted easily and consistently.", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369606459", "createdAt": "2020-01-22T14:53:36Z", "author": {"login": "keith-turner"}, "path": "server/tserver/src/main/java/org/apache/accumulo/tserver/tablet/TabletData.java", "diffHunk": "@@ -58,19 +58,18 @@ public TabletData(KeyExtent extent, VolumeManager fs, TabletMetadata meta) {\n     this.flushID = meta.getFlushId().orElse(-1);\n     this.directoryName = meta.getDirName();\n     this.logEntries.addAll(meta.getLogs());\n-    meta.getScans().forEach(tabletFile -> scanFiles\n-        .add(new FileRef(fs, tabletFile.getMetadataEntry(), meta.getTableId())));\n+    meta.getScans()\n+        .forEach(tabletFile -> scanFiles.add(new FileRef(tabletFile.getMetadataEntry())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYwNjk5Nw==", "bodyText": "Should this be validated?", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369606997", "createdAt": "2020-01-22T14:54:31Z", "author": {"login": "keith-turner"}, "path": "server/tserver/src/main/java/org/apache/accumulo/tserver/TabletServer.java", "diffHunk": "@@ -3217,7 +3216,7 @@ public void recover(VolumeManager fs, KeyExtent extent, List<LogEntry> logEntrie\n     Collections.sort(sorted, (e1, e2) -> (int) (e1.timestamp - e2.timestamp));\n     for (LogEntry entry : sorted) {\n       Path recovery = null;\n-      Path finished = RecoveryPath.getRecoveryPath(fs.getFullPath(FileType.WAL, entry.filename));\n+      Path finished = RecoveryPath.getRecoveryPath(new Path(entry.filename));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NjU2Mjky", "url": "https://github.com/apache/accumulo/pull/1479#pullrequestreview-346656292", "createdAt": "2020-01-22T15:03:43Z", "commit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTowMzo0NFrOFgfYNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTowMzo0NFrOFgfYNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMjg1NA==", "bodyText": "With a method like the following, could possibly do datafiles.add(new FileRef(TabletFile.from(key)));.  Not completely sure about this, its just something I thought of while looking at this code.\nclass TableFile {\n public static TableFile from(Key k){\n   switch(k.getColumnFamilyData().toString()) {\n     case SCAN:\n     case DATA:\n         return new TableFile(k.getColumnQualifierData().toString());\n   }\n }\n}", "url": "https://github.com/apache/accumulo/pull/1479#discussion_r369612854", "createdAt": "2020-01-22T15:03:44Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/TabletGroupWatcher.java", "diffHunk": "@@ -614,7 +615,8 @@ private void deleteTablets(MergeInfo info) throws AccumuloException {\n       for (Entry<Key,Value> entry : scanner) {\n         Key key = entry.getKey();\n         if (key.compareColumnFamily(DataFileColumnFamily.NAME) == 0) {\n-          datafiles.add(new FileRef(this.master.fs, key));\n+          datafiles\n+              .add(new FileRef(TabletFileUtil.validate(key.getColumnQualifierData().toString())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3276e788e8fa7ebf9c5f1fa4f37f49bad4eaeb3a"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aac35fe4f07db8b1f7e668aa2b754ec0c23467b9", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/aac35fe4f07db8b1f7e668aa2b754ec0c23467b9", "committedDate": "2020-01-24T14:48:13Z", "message": "Clean up relative path code\n\n* Drop methods in VolumeManager\n* Create TabletFileUtil to do path validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f07b42dd5fbe9c425fc43f6081fbdd1d0bfcd3eb", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/f07b42dd5fbe9c425fc43f6081fbdd1d0bfcd3eb", "committedDate": "2020-01-24T14:48:13Z", "message": "PR updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c60b6cd625699252b57a8503401bdea4c1542b49", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/c60b6cd625699252b57a8503401bdea4c1542b49", "committedDate": "2020-01-24T14:48:13Z", "message": "Move validate to better spot"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0414830134dfb750ec09a127bf71c00e45e363fe", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/0414830134dfb750ec09a127bf71c00e45e363fe", "committedDate": "2020-01-22T21:02:48Z", "message": "Move validate to better spot"}, "afterCommit": {"oid": "c60b6cd625699252b57a8503401bdea4c1542b49", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/c60b6cd625699252b57a8503401bdea4c1542b49", "committedDate": "2020-01-24T14:48:13Z", "message": "Move validate to better spot"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2007, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}