{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NDc3ODk1", "number": 1564, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo1NzoyNVrODojrzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoxMDoyN1rODojzYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODU0Mjg0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo1NzoyNVrOF3Lb7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo1NzoyNVrOF3Lb7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwMzM3Mw==", "bodyText": "If there aren't any checked exceptions, you can probably do e.getSecurityErrorCodes().forEach(...) instead of a loop over the entry set.", "url": "https://github.com/apache/accumulo/pull/1564#discussion_r393403373", "createdAt": "2020-03-17T01:57:25Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java", "diffHunk": "@@ -552,13 +550,9 @@ public void close(Reporter reporter) throws IOException {\n       } catch (MutationsRejectedException e) {\n         if (!e.getSecurityErrorCodes().isEmpty()) {\n           HashMap<String,Set<SecurityErrorCode>> tables = new HashMap<>();\n-          for (Entry<TabletId,Set<SecurityErrorCode>> ke : e.getSecurityErrorCodes().entrySet()) {\n+          for (var ke : e.getSecurityErrorCodes().entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d07e1ce8f300a45c04c6c873cbaa221ea0ac34"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODU0OTQ1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjowMjowMFrOF3LgBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjowMjowMFrOF3LgBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwNDQyMw==", "bodyText": "One of the great things about .computeIfAbsent() is that you don't need to assign it to a variable... you could just immediately use it on the next line:\ntables.computeIfAbsent(tableId, k -> new HashSet<>()).addAll(ke.getValue());", "url": "https://github.com/apache/accumulo/pull/1564#discussion_r393404423", "createdAt": "2020-03-17T02:02:00Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/client/mapred/AccumuloOutputFormat.java", "diffHunk": "@@ -552,13 +550,9 @@ public void close(Reporter reporter) throws IOException {\n       } catch (MutationsRejectedException e) {\n         if (!e.getSecurityErrorCodes().isEmpty()) {\n           HashMap<String,Set<SecurityErrorCode>> tables = new HashMap<>();\n-          for (Entry<TabletId,Set<SecurityErrorCode>> ke : e.getSecurityErrorCodes().entrySet()) {\n+          for (var ke : e.getSecurityErrorCodes().entrySet()) {\n             String tableId = ke.getKey().getTableId().toString();\n-            Set<SecurityErrorCode> secCodes = tables.get(tableId);\n-            if (secCodes == null) {\n-              secCodes = new HashSet<>();\n-              tables.put(tableId, secCodes);\n-            }\n+            Set<SecurityErrorCode> secCodes = tables.computeIfAbsent(tableId, k -> new HashSet<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d07e1ce8f300a45c04c6c873cbaa221ea0ac34"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODU1NzIwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TabletLocatorImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjowNzoxNVrOF3Lkzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjowNzoxNVrOF3Lkzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwNTY0Nw==", "bodyText": "These look like they can simplify to:\nbinnedRanges.computeIfAbsent(location, k -> new HashMap<>())\n  .computeIfAbsent(ke, k -> new ArrayList<>())\n  .add(range);", "url": "https://github.com/apache/accumulo/pull/1564#discussion_r393405647", "createdAt": "2020-03-17T02:07:15Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/TabletLocatorImpl.java", "diffHunk": "@@ -730,17 +730,10 @@ private void processInvalidated(ClientContext context, LockCheckerSession lcSess\n \n   protected static void addRange(Map<String,Map<KeyExtent,List<Range>>> binnedRanges,\n       String location, KeyExtent ke, Range range) {\n-    Map<KeyExtent,List<Range>> tablets = binnedRanges.get(location);\n-    if (tablets == null) {\n-      tablets = new HashMap<>();\n-      binnedRanges.put(location, tablets);\n-    }\n+    Map<KeyExtent,List<Range>> tablets =\n+        binnedRanges.computeIfAbsent(location, k -> new HashMap<>());\n \n-    List<Range> tabletsRanges = tablets.get(ke);\n-    if (tabletsRanges == null) {\n-      tabletsRanges = new ArrayList<>();\n-      tablets.put(ke, tabletsRanges);\n-    }\n+    List<Range> tabletsRanges = tablets.computeIfAbsent(ke, k -> new ArrayList<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d07e1ce8f300a45c04c6c873cbaa221ea0ac34"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODU2MjI1OnYy", "diffSide": "RIGHT", "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMjoxMDoyN1rOF3Ln2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNDoxODo1NlrOF3NfIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwNjQyNA==", "bodyText": "This seems unrelated. If having trouble with the formatter, could just remove that comment at the end of the line, or put it above the log statement.", "url": "https://github.com/apache/accumulo/pull/1564#discussion_r393406424", "createdAt": "2020-03-17T02:10:27Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "diffHunk": "@@ -213,7 +213,8 @@ private void addOpenWals(ServerContext c, Set<String> allWalsSeen) throws Except\n           allWalsSeen.add(entry.getKey());\n           foundWal = true;\n         } else {\n-          log.debug(\"The WalState for {} is {}\", entry.getKey(), entry.getValue()); // CLOSED or UNREFERENCED\n+          log.debug(\"The WalState for {} is {}\", entry.getKey(), entry.getValue()); // CLOSED or\n+                                                                                    // UNREFERENCED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d07e1ce8f300a45c04c6c873cbaa221ea0ac34"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQzNjk2Mg==", "bodyText": "Disregard this one. I fixed the formatting in the master branch.", "url": "https://github.com/apache/accumulo/pull/1564#discussion_r393436962", "createdAt": "2020-03-17T04:18:56Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "diffHunk": "@@ -213,7 +213,8 @@ private void addOpenWals(ServerContext c, Set<String> allWalsSeen) throws Except\n           allWalsSeen.add(entry.getKey());\n           foundWal = true;\n         } else {\n-          log.debug(\"The WalState for {} is {}\", entry.getKey(), entry.getValue()); // CLOSED or UNREFERENCED\n+          log.debug(\"The WalState for {} is {}\", entry.getKey(), entry.getValue()); // CLOSED or\n+                                                                                    // UNREFERENCED", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwNjQyNA=="}, "originalCommit": {"oid": "08d07e1ce8f300a45c04c6c873cbaa221ea0ac34"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4212, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}