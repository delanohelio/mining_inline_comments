{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NTg4NzYz", "number": 1595, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo0ODowN1rOD1z9iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzo1NDowOFrOD1435A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzUyNDU5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/data/Key.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo0ODowN1rOGLbSmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1MDowMVrOGLbYQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNDY0OQ==", "bodyText": "I'm not sure this keeps the same behaviour. The == will test if the passed arrays are the same reference.  Replacing with Arrays.equals is also going to check if the contents are the same.  This would make the rest of the test redundant - and from the code comments is trying to optimize the comparison.", "url": "https://github.com/apache/accumulo/pull/1595#discussion_r414634649", "createdAt": "2020-04-24T14:48:07Z", "author": {"login": "EdColeman"}, "path": "core/src/main/java/org/apache/accumulo/core/data/Key.java", "diffHunk": "@@ -1159,7 +1159,7 @@ public int getSize() {\n   }\n \n   private static boolean isEqual(byte[] a1, byte[] a2) {\n-    if (a1 == a2)\n+    if (Arrays.equals(a1, a2))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdda97aa0b8c0553c2986e13b42309ae950b570c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNjA5OA==", "bodyText": "Thanks for the catch Ed! I will revert that change. It didn't really go with the rest of the changes anyway.", "url": "https://github.com/apache/accumulo/pull/1595#discussion_r414636098", "createdAt": "2020-04-24T14:50:01Z", "author": {"login": "jmark99"}, "path": "core/src/main/java/org/apache/accumulo/core/data/Key.java", "diffHunk": "@@ -1159,7 +1159,7 @@ public int getSize() {\n   }\n \n   private static boolean isEqual(byte[] a1, byte[] a2) {\n-    if (a1 == a2)\n+    if (Arrays.equals(a1, a2))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzNDY0OQ=="}, "originalCommit": {"oid": "cdda97aa0b8c0553c2986e13b42309ae950b570c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODMyOTMyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/mapreduce/lib/InputConfigurator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzo1NDowOFrOGLi1Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzo1NDowOFrOGLi1Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc1ODE3NQ==", "bodyText": "This is a handy method, I didn't know it existed.", "url": "https://github.com/apache/accumulo/pull/1595#discussion_r414758175", "createdAt": "2020-04-24T17:54:08Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/mapreduce/lib/InputConfigurator.java", "diffHunk": "@@ -360,9 +361,7 @@ public static void fetchColumns(Class<?> implementingClass, Configuration conf,\n     List<String> serialized = new ArrayList<>();\n     if (confValue != null) {\n       // Split and include any trailing empty strings to allow empty column families\n-      for (String val : confValue.split(\",\", -1)) {\n-        serialized.add(val);\n-      }\n+      Collections.addAll(serialized, confValue.split(\",\", -1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54da03d2f1d3404634a155d474ca428588f002fe"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4249, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}