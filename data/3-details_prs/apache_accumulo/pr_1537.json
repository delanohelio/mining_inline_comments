{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTQ0NTA0", "number": 1537, "title": "Add PrintInfo options to dump full keys, apply formatter", "bodyText": "", "createdAt": "2020-02-28T00:44:05Z", "url": "https://github.com/apache/accumulo/pull/1537", "merged": true, "mergeCommit": {"oid": "d4542efa675554306c5e3842c4ad519d359dbb0f"}, "closed": true, "closedAt": "2020-03-13T19:51:35Z", "author": {"login": "drewfarris"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcImRRWAFqTM2NjEyMzI2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMVReYAFqTM3MjEyODk5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTIzMjY2", "url": "https://github.com/apache/accumulo/pull/1537#pullrequestreview-366123266", "createdAt": "2020-02-28T02:12:44Z", "commit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjoxMjo0NFrOFvnhzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjoxMjo0NFrOFvnhzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3NTAyMA==", "bodyText": "This is a general question - would this reflection code need to change for jdk-11+ (for when this is merged forward)? Specifically, is this still the standard way to use reflection, or has the \"standard\" changed?  From what I've read it looks okay, but thought it warranted checking.", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385475020", "createdAt": "2020-02-28T02:12:44Z", "author": {"login": "EdColeman"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -119,6 +182,18 @@ public String keyword() {\n     return \"rfile-info\";\n   }\n \n+  protected Class<? extends Formatter> getFormater(String formatterClazz) {\n+    try {\n+      if (formatterClazz != null) {\n+        return this.getClass().getClassLoader().loadClass(formatterClazz)\n+            .asSubclass(Formatter.class);\n+      }\n+    } catch (ClassNotFoundException e) {\n+      System.err.println(\"Could not find formatter class: \" + formatterClazz);\n+    }\n+    return null;\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTIzODY4", "url": "https://github.com/apache/accumulo/pull/1537#pullrequestreview-366123868", "createdAt": "2020-02-28T02:14:58Z", "commit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjgwODE3", "url": "https://github.com/apache/accumulo/pull/1537#pullrequestreview-366680817", "createdAt": "2020-02-28T20:57:45Z", "commit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDo1Nzo0NVrOFwCnOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMTowODo1NVrOFwC3nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxODc3OA==", "bodyText": "The formatter class is a bit of a mess.  What do you think about accepting any class that implements BiFunction<Key, Value, String>?  If you have a strong need specifically for the formatter, please ignore the comments related to BiFunction", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385918778", "createdAt": "2020-02-28T20:57:45Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -49,6 +59,12 @@\n   static class Opts extends Help {\n     @Parameter(names = {\"-d\", \"--dump\"}, description = \"dump the key/value pairs\")\n     boolean dump = false;\n+    @Parameter(names = {\"--fullKeys\"},\n+        description = \"dump full keys regardless of length, do no truncate, implies --dump\")\n+    boolean fullKeys = false;\n+    @Parameter(names = {\"--formatter\"},\n+        description = \"specify a formatter class to apply to rfile contents, implies --dump\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMTU4Ng==", "bodyText": "If using BiFunction could possibly do\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Formatter formatter = null;\n          \n          \n            \n                    if (opts.formatterClazz != null) {\n          \n          \n            \n                      final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n          \n          \n            \n                      FormatterConfig config = new FormatterConfig();\n          \n          \n            \n                      config.setPrintTimestamps(true);\n          \n          \n            \n                      formatter =\n          \n          \n            \n                          FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n          \n          \n            \n                    }\n          \n          \n            \n                    BiFunction<Key,Value,String> formatter = null;\n          \n          \n            \n                    if (opts.formatterClazz != null) {\n          \n          \n            \n                      final Class<? extends BiFunction<Key,Value,String>> formatterClass = getFormater(opts.formatterClazz);\n          \n          \n            \n                      formatter = formatterClass.newInstance();\n          \n          \n            \n                    } else if (opts.fullKeys) {\n          \n          \n            \n                      formatter = (key, value) - > {key.toStringNoTruncate() + \" -> \" + value};\n          \n          \n            \n                    } else if(opts.dump){\n          \n          \n            \n                       formatter = (key, value) - > {key + \" -> \" + value};\n          \n          \n            \n                    }", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385921586", "createdAt": "2020-02-28T21:05:06Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -192,23 +268,43 @@ public void execute(final String[] args) throws Exception {\n           }\n         }\n \n+        Formatter formatter = null;\n+        if (opts.formatterClazz != null) {\n+          final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n+          FormatterConfig config = new FormatterConfig();\n+          config.setPrintTimestamps(true);\n+          formatter =\n+              FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMTgwMg==", "bodyText": "If using BiFunction this could go away.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        while (formatter.hasNext()) {\n          \n          \n            \n                          System.out.print(formatter.next());\n          \n          \n            \n                          if (System.out.checkError()) {\n          \n          \n            \n                            return;\n          \n          \n            \n                          }\n          \n          \n            \n                        }", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385921802", "createdAt": "2020-02-28T21:05:41Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -192,23 +268,43 @@ public void execute(final String[] args) throws Exception {\n           }\n         }\n \n+        Formatter formatter = null;\n+        if (opts.formatterClazz != null) {\n+          final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n+          FormatterConfig config = new FormatterConfig();\n+          config.setPrintTimestamps(true);\n+          formatter =\n+              FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n+        }\n+\n         for (String lgName : localityGroupCF.keySet()) {\n           LocalityGroupUtil.seek(dataIter, new Range(), lgName, localityGroupCF);\n-          while (dataIter.hasTop()) {\n-            Key key = dataIter.getTopKey();\n-            Value value = dataIter.getTopValue();\n-            if (opts.dump) {\n-              System.out.println(key + \" -> \" + value);\n-              if (System.out.checkError())\n+\n+          if (formatter != null) {\n+            while (formatter.hasNext()) {\n+              System.out.print(formatter.next());\n+              if (System.out.checkError()) {\n                 return;\n+              }\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMjI4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          if (opts.dump || opts.fullKeys) {\n          \n          \n            \n                            System.out\n          \n          \n            \n                                .println((opts.fullKeys ? key.toStringNoTruncate() : key) + \" -> \" + value);\n          \n          \n            \n                          if (formatter != null) {\n          \n          \n            \n                            System.out\n          \n          \n            \n                                .println(formatter.apply(key,value));", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385922287", "createdAt": "2020-02-28T21:06:53Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -192,23 +268,43 @@ public void execute(final String[] args) throws Exception {\n           }\n         }\n \n+        Formatter formatter = null;\n+        if (opts.formatterClazz != null) {\n+          final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n+          FormatterConfig config = new FormatterConfig();\n+          config.setPrintTimestamps(true);\n+          formatter =\n+              FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n+        }\n+\n         for (String lgName : localityGroupCF.keySet()) {\n           LocalityGroupUtil.seek(dataIter, new Range(), lgName, localityGroupCF);\n-          while (dataIter.hasTop()) {\n-            Key key = dataIter.getTopKey();\n-            Value value = dataIter.getTopValue();\n-            if (opts.dump) {\n-              System.out.println(key + \" -> \" + value);\n-              if (System.out.checkError())\n+\n+          if (formatter != null) {\n+            while (formatter.hasNext()) {\n+              System.out.print(formatter.next());\n+              if (System.out.checkError()) {\n                 return;\n+              }\n             }\n-            if (opts.histogram) {\n-              kvHistogram.add(key.getSize() + value.getSize());\n-            }\n-            if (opts.keyStats) {\n-              dataKeyStats.add(key);\n+          } else {\n+            while (dataIter.hasTop()) {\n+              Key key = dataIter.getTopKey();\n+              Value value = dataIter.getTopValue();\n+              if (opts.dump || opts.fullKeys) {\n+                System.out\n+                    .println((opts.fullKeys ? key.toStringNoTruncate() : key) + \" -> \" + value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMjU4Nw==", "bodyText": "If using BiFunction, would not need this class.", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385922587", "createdAt": "2020-02-28T21:07:45Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -110,6 +126,53 @@ public void print(String indent) {\n     }\n   }\n \n+  static class FormatterAdapter implements Iterable<Entry<Key,Value>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMjk3NQ==", "bodyText": "This seems a bit dicey.  The underlying iterator is reset under the formatter for each locality group.  If formatter were stateful with hasNext() this may cause problems.", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385922975", "createdAt": "2020-02-28T21:08:55Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -192,23 +268,43 @@ public void execute(final String[] args) throws Exception {\n           }\n         }\n \n+        Formatter formatter = null;\n+        if (opts.formatterClazz != null) {\n+          final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n+          FormatterConfig config = new FormatterConfig();\n+          config.setPrintTimestamps(true);\n+          formatter =\n+              FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n+        }\n+\n         for (String lgName : localityGroupCF.keySet()) {\n           LocalityGroupUtil.seek(dataIter, new Range(), lgName, localityGroupCF);\n-          while (dataIter.hasTop()) {\n-            Key key = dataIter.getTopKey();\n-            Value value = dataIter.getTopValue();\n-            if (opts.dump) {\n-              System.out.println(key + \" -> \" + value);\n-              if (System.out.checkError())\n+\n+          if (formatter != null) {\n+            while (formatter.hasNext()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403dfe12dc2b953b06f909094c60cd536b79d3bb"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "author": {"user": {"login": "drewfarris", "name": "Drew Farris"}}, "url": "https://github.com/apache/accumulo/commit/5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "committedDate": "2020-03-06T22:22:41Z", "message": "Add PrintInfo options to dump full keys, apply formatter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b7a3b95c9d9a70d223970bd48cc23f9dcd1e594", "author": {"user": {"login": "drewfarris", "name": "Drew Farris"}}, "url": "https://github.com/apache/accumulo/commit/5b7a3b95c9d9a70d223970bd48cc23f9dcd1e594", "committedDate": "2020-03-06T22:11:27Z", "message": "Merge branch 'printinfo-formatter' of github.com:drewfarris/accumulo into printinfo-formatter"}, "afterCommit": {"oid": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "author": {"user": {"login": "drewfarris", "name": "Drew Farris"}}, "url": "https://github.com/apache/accumulo/commit/5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "committedDate": "2020-03-06T22:22:41Z", "message": "Add PrintInfo options to dump full keys, apply formatter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjgzNDYy", "url": "https://github.com/apache/accumulo/pull/1537#pullrequestreview-370683462", "createdAt": "2020-03-06T23:20:18Z", "commit": {"oid": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjgxODk3", "url": "https://github.com/apache/accumulo/pull/1537#pullrequestreview-370681897", "createdAt": "2020-03-06T23:15:12Z", "commit": {"oid": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzoxNjowM1rOFzKNlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMzoxNzoxM1rOFzKOng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4OTAxNA==", "bodyText": "If you assign the unchecked code to a variable, you can add this suppression on just that assignment, so it doesn't mask other (fixable, avoidable) problems in the method.", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r389189014", "createdAt": "2020-03-06T23:16:03Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -138,6 +146,19 @@ public String description() {\n     return \"Prints rfile info\";\n   }\n \n+  @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4OTI3OA==", "bodyText": "If the user's command-line cannot be satisfied (probably a typo in their class name), we should probably hard-fail by letting this exception fall through, rather than returning null and by effetively wasting time dumping a file in a format the user doesn't want.", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r389189278", "createdAt": "2020-03-06T23:17:13Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -138,6 +146,19 @@ public String description() {\n     return \"Prints rfile info\";\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  protected Class<? extends BiFunction<Key,Value,String>> getFormatter(String formatterClazz) {\n+    try {\n+      if (formatterClazz != null) {\n+        return (Class<? extends BiFunction<Key,Value,String>>) this.getClass().getClassLoader()\n+            .loadClass(formatterClazz).asSubclass(BiFunction.class);\n+      }\n+    } catch (ClassNotFoundException e) {\n+      System.err.println(\"Could not find formatter class: \" + formatterClazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ede311a3ea5b85a1952457c25d8b619be3b3a73", "author": {"user": {"login": "drewfarris", "name": "Drew Farris"}}, "url": "https://github.com/apache/accumulo/commit/0ede311a3ea5b85a1952457c25d8b619be3b3a73", "committedDate": "2020-03-10T13:02:22Z", "message": "Updates per code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDQxNzc2", "url": "https://github.com/apache/accumulo/pull/1537#pullrequestreview-372041776", "createdAt": "2020-03-10T15:06:51Z", "commit": {"oid": "0ede311a3ea5b85a1952457c25d8b619be3b3a73"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTI4OTkx", "url": "https://github.com/apache/accumulo/pull/1537#pullrequestreview-372128991", "createdAt": "2020-03-10T16:40:16Z", "commit": {"oid": "0ede311a3ea5b85a1952457c25d8b619be3b3a73"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1861, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}