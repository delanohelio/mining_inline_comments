{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NTgxMjU2", "number": 1834, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozMTowM1rOFFIXMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozMzoyN1rOFFIdOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwOTI0MjExOnYy", "diffSide": "RIGHT", "path": "server/base/src/main/java/org/apache/accumulo/server/security/SystemCredentials.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozMTowNFrOIFevGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDowMzowOVrOIFk_JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxNzM2OA==", "bodyText": "It looks like this is required by the Crypt library?  Would be nice to mention where these values for the salt string are coming from.", "url": "https://github.com/apache/accumulo/pull/1834#discussion_r542617368", "createdAt": "2020-12-14T18:31:04Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/security/SystemCredentials.java", "diffHunk": "@@ -83,10 +82,19 @@ public TCredentials toThrift(String instanceID) {\n   public static final class SystemToken extends PasswordToken {\n \n     /**\n-     * Accumulo servers will only communicate with each other when this is the same. Bumped for 2.0\n-     * to prevent 1.9 and 2.0 servers from communicating.\n+     * Accumulo servers will only communicate with each other when this is the same.\n+     *\n+     * <ul>\n+     * <li>Initial version 2 for 1.5 to support rolling upgrades for bugfix releases (ACCUMULO-751)\n+     * <li>Bumped to 3 for 1.6 for additional namespace RPC changes (ACCUMULO-802)\n+     * <li>Bumped to 4 for 2.0 to prevent 1.9 and 2.0 servers from communicating (#1139)\n+     * <li>Bumped to 5 for 2.1 because of system credential hash incompatibility (#1798 / #1810)\n+     * </ul>\n      */\n-    private static final Integer INTERNAL_WIRE_VERSION = 4;\n+    static final int INTERNAL_WIRE_VERSION = 5;\n+\n+    static final String SALT_PREFIX = \"$6$\"; // SHA-512", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "babb1d9e559a78577fbe763181043715e572bfa5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYyOTU5OQ==", "bodyText": "Actually couldn't we use their constant in Sha2Crypt ?\nhttps://commons.apache.org/proper/commons-codec/jacoco/org.apache.commons.codec.digest/Sha2Crypt.java.html", "url": "https://github.com/apache/accumulo/pull/1834#discussion_r542629599", "createdAt": "2020-12-14T18:42:17Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/security/SystemCredentials.java", "diffHunk": "@@ -83,10 +82,19 @@ public TCredentials toThrift(String instanceID) {\n   public static final class SystemToken extends PasswordToken {\n \n     /**\n-     * Accumulo servers will only communicate with each other when this is the same. Bumped for 2.0\n-     * to prevent 1.9 and 2.0 servers from communicating.\n+     * Accumulo servers will only communicate with each other when this is the same.\n+     *\n+     * <ul>\n+     * <li>Initial version 2 for 1.5 to support rolling upgrades for bugfix releases (ACCUMULO-751)\n+     * <li>Bumped to 3 for 1.6 for additional namespace RPC changes (ACCUMULO-802)\n+     * <li>Bumped to 4 for 2.0 to prevent 1.9 and 2.0 servers from communicating (#1139)\n+     * <li>Bumped to 5 for 2.1 because of system credential hash incompatibility (#1798 / #1810)\n+     * </ul>\n      */\n-    private static final Integer INTERNAL_WIRE_VERSION = 4;\n+    static final int INTERNAL_WIRE_VERSION = 5;\n+\n+    static final String SALT_PREFIX = \"$6$\"; // SHA-512", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxNzM2OA=="}, "originalCommit": {"oid": "babb1d9e559a78577fbe763181043715e572bfa5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYzNDI5NQ==", "bodyText": "This is the well-known scheme for crypt(3) formatted strings (which is also a POSIX standard). So, I think it's self-explanatory, since we're specifically using it with the Crypt API (which has good javadocs) and because crypt(3) is well-known. See the man page at https://www.man7.org/linux/man-pages/man3/crypt.3.html", "url": "https://github.com/apache/accumulo/pull/1834#discussion_r542634295", "createdAt": "2020-12-14T18:46:43Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/security/SystemCredentials.java", "diffHunk": "@@ -83,10 +82,19 @@ public TCredentials toThrift(String instanceID) {\n   public static final class SystemToken extends PasswordToken {\n \n     /**\n-     * Accumulo servers will only communicate with each other when this is the same. Bumped for 2.0\n-     * to prevent 1.9 and 2.0 servers from communicating.\n+     * Accumulo servers will only communicate with each other when this is the same.\n+     *\n+     * <ul>\n+     * <li>Initial version 2 for 1.5 to support rolling upgrades for bugfix releases (ACCUMULO-751)\n+     * <li>Bumped to 3 for 1.6 for additional namespace RPC changes (ACCUMULO-802)\n+     * <li>Bumped to 4 for 2.0 to prevent 1.9 and 2.0 servers from communicating (#1139)\n+     * <li>Bumped to 5 for 2.1 because of system credential hash incompatibility (#1798 / #1810)\n+     * </ul>\n      */\n-    private static final Integer INTERNAL_WIRE_VERSION = 4;\n+    static final int INTERNAL_WIRE_VERSION = 5;\n+\n+    static final String SALT_PREFIX = \"$6$\"; // SHA-512", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxNzM2OA=="}, "originalCommit": {"oid": "babb1d9e559a78577fbe763181043715e572bfa5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY3NTczMg==", "bodyText": "While it is more obvious, once you read 3/4 of the man page, most people don't read entire man pages or won't know that this library is based off of the linux standard.  It is generally good practice to avoid hard coding values when you can.", "url": "https://github.com/apache/accumulo/pull/1834#discussion_r542675732", "createdAt": "2020-12-14T19:22:46Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/security/SystemCredentials.java", "diffHunk": "@@ -83,10 +82,19 @@ public TCredentials toThrift(String instanceID) {\n   public static final class SystemToken extends PasswordToken {\n \n     /**\n-     * Accumulo servers will only communicate with each other when this is the same. Bumped for 2.0\n-     * to prevent 1.9 and 2.0 servers from communicating.\n+     * Accumulo servers will only communicate with each other when this is the same.\n+     *\n+     * <ul>\n+     * <li>Initial version 2 for 1.5 to support rolling upgrades for bugfix releases (ACCUMULO-751)\n+     * <li>Bumped to 3 for 1.6 for additional namespace RPC changes (ACCUMULO-802)\n+     * <li>Bumped to 4 for 2.0 to prevent 1.9 and 2.0 servers from communicating (#1139)\n+     * <li>Bumped to 5 for 2.1 because of system credential hash incompatibility (#1798 / #1810)\n+     * </ul>\n      */\n-    private static final Integer INTERNAL_WIRE_VERSION = 4;\n+    static final int INTERNAL_WIRE_VERSION = 5;\n+\n+    static final String SALT_PREFIX = \"$6$\"; // SHA-512", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxNzM2OA=="}, "originalCommit": {"oid": "babb1d9e559a78577fbe763181043715e572bfa5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY4MzE0OQ==", "bodyText": "Nevermind, the constant is package private so can't be used outside the package anyway.", "url": "https://github.com/apache/accumulo/pull/1834#discussion_r542683149", "createdAt": "2020-12-14T19:29:11Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/security/SystemCredentials.java", "diffHunk": "@@ -83,10 +82,19 @@ public TCredentials toThrift(String instanceID) {\n   public static final class SystemToken extends PasswordToken {\n \n     /**\n-     * Accumulo servers will only communicate with each other when this is the same. Bumped for 2.0\n-     * to prevent 1.9 and 2.0 servers from communicating.\n+     * Accumulo servers will only communicate with each other when this is the same.\n+     *\n+     * <ul>\n+     * <li>Initial version 2 for 1.5 to support rolling upgrades for bugfix releases (ACCUMULO-751)\n+     * <li>Bumped to 3 for 1.6 for additional namespace RPC changes (ACCUMULO-802)\n+     * <li>Bumped to 4 for 2.0 to prevent 1.9 and 2.0 servers from communicating (#1139)\n+     * <li>Bumped to 5 for 2.1 because of system credential hash incompatibility (#1798 / #1810)\n+     * </ul>\n      */\n-    private static final Integer INTERNAL_WIRE_VERSION = 4;\n+    static final int INTERNAL_WIRE_VERSION = 5;\n+\n+    static final String SALT_PREFIX = \"$6$\"; // SHA-512", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxNzM2OA=="}, "originalCommit": {"oid": "babb1d9e559a78577fbe763181043715e572bfa5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjcwOTgyMg==", "bodyText": "Actually couldn't we use their constant in Sha2Crypt ?\n\nThat's what I had originally wanted to do. :/\n\nWhile it is more obvious, once you read 3/4 of the man page,\n\nI should be more clear: I didn't mean it is obvious that the library is based on the crypt(3) POSIX standard, or that it was obvious what the constant was for. Rather, I meant to say that the only comment I could think to add would have been self-explanatory, as my best attempt looked like \"see Crypt.crypt()\". If there's some more helpful comment to add, I'm okay with adding it... I just couldn't think of anything at the time (or now) that would actually be useful and not self-explanatory.\nAnd, I'm not necessarily relying on people knowing anything about the library being based on the crypt(3) POSIX standard. I'm just expecting people to know how to look at Crypt's own javadoc for details on how its parameters are used.", "url": "https://github.com/apache/accumulo/pull/1834#discussion_r542709822", "createdAt": "2020-12-14T19:54:03Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/security/SystemCredentials.java", "diffHunk": "@@ -83,10 +82,19 @@ public TCredentials toThrift(String instanceID) {\n   public static final class SystemToken extends PasswordToken {\n \n     /**\n-     * Accumulo servers will only communicate with each other when this is the same. Bumped for 2.0\n-     * to prevent 1.9 and 2.0 servers from communicating.\n+     * Accumulo servers will only communicate with each other when this is the same.\n+     *\n+     * <ul>\n+     * <li>Initial version 2 for 1.5 to support rolling upgrades for bugfix releases (ACCUMULO-751)\n+     * <li>Bumped to 3 for 1.6 for additional namespace RPC changes (ACCUMULO-802)\n+     * <li>Bumped to 4 for 2.0 to prevent 1.9 and 2.0 servers from communicating (#1139)\n+     * <li>Bumped to 5 for 2.1 because of system credential hash incompatibility (#1798 / #1810)\n+     * </ul>\n      */\n-    private static final Integer INTERNAL_WIRE_VERSION = 4;\n+    static final int INTERNAL_WIRE_VERSION = 5;\n+\n+    static final String SALT_PREFIX = \"$6$\"; // SHA-512", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxNzM2OA=="}, "originalCommit": {"oid": "babb1d9e559a78577fbe763181043715e572bfa5"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjcxOTc4MA==", "bodyText": "That's fine, the commons Crypt javadoc has enough information.  I would just liked to have used their constant.  Oh well.", "url": "https://github.com/apache/accumulo/pull/1834#discussion_r542719780", "createdAt": "2020-12-14T20:03:09Z", "author": {"login": "milleruntime"}, "path": "server/base/src/main/java/org/apache/accumulo/server/security/SystemCredentials.java", "diffHunk": "@@ -83,10 +82,19 @@ public TCredentials toThrift(String instanceID) {\n   public static final class SystemToken extends PasswordToken {\n \n     /**\n-     * Accumulo servers will only communicate with each other when this is the same. Bumped for 2.0\n-     * to prevent 1.9 and 2.0 servers from communicating.\n+     * Accumulo servers will only communicate with each other when this is the same.\n+     *\n+     * <ul>\n+     * <li>Initial version 2 for 1.5 to support rolling upgrades for bugfix releases (ACCUMULO-751)\n+     * <li>Bumped to 3 for 1.6 for additional namespace RPC changes (ACCUMULO-802)\n+     * <li>Bumped to 4 for 2.0 to prevent 1.9 and 2.0 servers from communicating (#1139)\n+     * <li>Bumped to 5 for 2.1 because of system credential hash incompatibility (#1798 / #1810)\n+     * </ul>\n      */\n-    private static final Integer INTERNAL_WIRE_VERSION = 4;\n+    static final int INTERNAL_WIRE_VERSION = 5;\n+\n+    static final String SALT_PREFIX = \"$6$\"; // SHA-512", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxNzM2OA=="}, "originalCommit": {"oid": "babb1d9e559a78577fbe763181043715e572bfa5"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwOTI1NzUzOnYy", "diffSide": "RIGHT", "path": "server/base/src/test/java/org/apache/accumulo/server/security/SystemCredentialsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozMzoyN1rOIFe4zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxODozMzoyN1rOIFe4zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYxOTg1Mg==", "bodyText": "This is a great test.  I wish we had more tests like this with dependencies so the test will simply fail if defaults change on an update.", "url": "https://github.com/apache/accumulo/pull/1834#discussion_r542619852", "createdAt": "2020-12-14T18:33:27Z", "author": {"login": "milleruntime"}, "path": "server/base/src/test/java/org/apache/accumulo/server/security/SystemCredentialsTest.java", "diffHunk": "@@ -67,6 +68,27 @@ public static void setUp() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void testWireVersion() {\n+    // sanity check to make sure it's a positive number\n+    assertTrue(SystemToken.INTERNAL_WIRE_VERSION > 0);\n+    // this is a sanity check that our wire version isn't crazy long, because\n+    // it must be less than or equal to 16 chars to be used as the SALT for SHA-512\n+    // when using Crypt.crypt()\n+    assertTrue(Integer.toString(SystemToken.INTERNAL_WIRE_VERSION).length() <= 16);\n+  }\n+\n+  @Test\n+  public void testCryptDefaults() {\n+    // this is a sanity check that the default hash algorithm for commons-codec's\n+    // Crypt.crypt() method is still SHA-512 and the format hasn't changed\n+    // if that changes, we need to consider whether the new default is acceptable, and\n+    // whether or not we want to bump the wire version\n+    String hash = Crypt.crypt(new byte[0]);\n+    assertEquals(3, hash.chars().filter(ch -> ch == '$').count());\n+    assertTrue(hash.startsWith(SystemToken.SALT_PREFIX));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "babb1d9e559a78577fbe763181043715e572bfa5"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4018, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}