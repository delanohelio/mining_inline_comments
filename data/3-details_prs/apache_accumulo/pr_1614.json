{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzAzMzM2", "number": 1614, "title": "Create max tablets property in new bulk import", "bodyText": "Creates the master.bulk.max.tablets property to allow restricting the\nnumber of tablets in a single bulk import", "createdAt": "2020-05-19T18:54:44Z", "url": "https://github.com/apache/accumulo/pull/1614", "merged": true, "mergeCommit": {"oid": "b1e67f7ced838037965436fc1d1f255d139a4045"}, "closed": true, "closedAt": "2020-06-06T00:58:51Z", "author": {"login": "milleruntime"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci5Ip8gH2gAyNDIwMzAzMzM2OmFiOTJmNjBkMDY4N2FhOWUzYmU4YjA2MzcyNDBjMDg4NzM5YjcxZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoci2yAFqTQyNTY5ODcxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ab92f60d0687aa9e3be8b0637240c088739b71fa", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/ab92f60d0687aa9e3be8b0637240c088739b71fa", "committedDate": "2020-05-19T18:53:33Z", "message": "Add max tablets property to new bulk import\n\n* Creates the master.bulk.max.tablets property to allow restricting the\nnumber of tablets in a single bulk import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzY2MDIy", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-415366022", "createdAt": "2020-05-20T14:00:11Z", "commit": {"oid": "ab92f60d0687aa9e3be8b0637240c088739b71fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowMDoxMVrOGYNN1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowMDoxMVrOGYNN1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNTU0MQ==", "bodyText": "Maybe just a style comment - but I don't think this needs to be in a finally block.  If exception is not thrown, it will fail - otherwise catch (and ignore the exception) and then just continue.", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r428035541", "createdAt": "2020-05-20T14:00:11Z", "author": {"login": "EdColeman"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/BulkNewIT.java", "diffHunk": "@@ -183,6 +184,23 @@ public void testSingleTabletSingleFileOffline() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testMaxTablets() throws Exception {\n+    String maxTablets = \"0\";\n+    try (AccumuloClient client = Accumulo.newClient().from(getClientProps()).build()) {\n+      maxTablets = client.instanceOperations().getSystemConfiguration()\n+          .get(Property.MASTER_BULK_MAX_TABLETS.getKey());\n+      client.instanceOperations().setProperty(Property.MASTER_BULK_MAX_TABLETS.getKey(), \"1\");\n+      testBulkFile(false, false);\n+      fail(\"Expected IllegalArgumentException for \" + Property.MASTER_BULK_MAX_TABLETS);\n+    } catch (IllegalArgumentException e) {} finally {\n+      try (AccumuloClient client = Accumulo.newClient().from(getClientProps()).build()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab92f60d0687aa9e3be8b0637240c088739b71fa"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Mzc1MzA1", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-415375305", "createdAt": "2020-05-20T14:09:06Z", "commit": {"oid": "ab92f60d0687aa9e3be8b0637240c088739b71fa"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Mzk2MTUw", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-415396150", "createdAt": "2020-05-20T14:29:04Z", "commit": {"oid": "ab92f60d0687aa9e3be8b0637240c088739b71fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoyOTowNFrOGYOosg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoyOTowNFrOGYOosg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA1ODgwMg==", "bodyText": "This check is different than the one in #1560, which ensured a single file did not go to too many tablets.  This is checking that all files do not go to too many tablets.", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r428058802", "createdAt": "2020-05-20T14:29:04Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/bulk/BulkImport.java", "diffHunk": "@@ -149,6 +150,11 @@ public void load()\n       if (mappings.isEmpty())\n         throw new IllegalArgumentException(\"Attempted to import zero files from \" + srcPath);\n \n+      long tabletMaxSize = conf.getCount(Property.MASTER_BULK_MAX_TABLETS);\n+      if (tabletMaxSize > 0 && mappings.keySet().size() > tabletMaxSize)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab92f60d0687aa9e3be8b0637240c088739b71fa"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NDA0NDkx", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-415404491", "createdAt": "2020-05-20T14:37:27Z", "commit": {"oid": "ab92f60d0687aa9e3be8b0637240c088739b71fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDozNzoyN1rOGYPB1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDozNzoyN1rOGYPB1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA2NTIzNw==", "bodyText": "I am not completely sure, but these two lines may not work as expected sometimes.  What I think may be able to happen is that the property is set on tserver A by the first line and then the second line reads props from tserver B.  If server B does not clear zoocache, then it could return a stale copy w/o the prop set on the first line.  I am not sure if the client side code to get props forces a prop cache clear.", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r428065237", "createdAt": "2020-05-20T14:37:27Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/BulkNewIT.java", "diffHunk": "@@ -183,6 +184,23 @@ public void testSingleTabletSingleFileOffline() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testMaxTablets() throws Exception {\n+    String maxTablets = \"0\";\n+    try (AccumuloClient client = Accumulo.newClient().from(getClientProps()).build()) {\n+      maxTablets = client.instanceOperations().getSystemConfiguration()\n+          .get(Property.MASTER_BULK_MAX_TABLETS.getKey());\n+      client.instanceOperations().setProperty(Property.MASTER_BULK_MAX_TABLETS.getKey(), \"1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab92f60d0687aa9e3be8b0637240c088739b71fa"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/2d7f5049dd0c35b9bea9099d68264018a69ffc16", "committedDate": "2020-05-21T18:40:28Z", "message": "Changed to table property and moved check into both computeMapping methods\n\n* Cleaned up future exception so it just sends IllegalArgument back to client\n* Also fixed spelling of a method name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NDA4NDgx", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-416408481", "createdAt": "2020-05-21T18:57:26Z", "commit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODo1NzoyNlrOGY-7dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODo1NzoyNlrOGY-7dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg1MDAzNw==", "bodyText": "I couldn't find a cleaner way to get a single table property from the client side...", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r428850037", "createdAt": "2020-05-21T18:57:26Z", "author": {"login": "milleruntime"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/bulk/BulkImport.java", "diffHunk": "@@ -133,6 +134,14 @@ public void load()\n \n     SortedMap<KeyExtent,Bulk.Files> mappings;\n     TableOperationsImpl tableOps = new TableOperationsImpl(context);\n+\n+    int maxTablets = 0;\n+    for (var prop : tableOps.getProperties(tableName)) {\n+      if (prop.getKey().equals(Property.TABLE_BULK_MAX_TABLETS.getKey())) {\n+        maxTablets = Integer.parseInt(prop.getValue());\n+        break;\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NDEwNTYz", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-416410563", "createdAt": "2020-05-21T19:00:34Z", "commit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOTowMDozNFrOGY_B-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOTowMDozNFrOGY_B-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg1MTcwNg==", "bodyText": "I thought it was cleaner for the user to just drop the ExecutionException coming out of the future since that is just implementation specific.", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r428851706", "createdAt": "2020-05-21T19:00:34Z", "author": {"login": "milleruntime"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/bulk/BulkImport.java", "diffHunk": "@@ -576,7 +587,12 @@ private Text toText(byte[] row) {\n         Thread.currentThread().interrupt();\n         throw new RuntimeException(e);\n       } catch (ExecutionException e) {\n-        throw new RuntimeException(e);\n+        // clean up exception for user\n+        Throwable t = e.getCause();\n+        if (t instanceof IllegalArgumentException) {\n+          throw (IllegalArgumentException) t;\n+        } else\n+          throw new RuntimeException(t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16"}, "originalPosition": 133}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NTE0NzAx", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-416514701", "createdAt": "2020-05-21T21:43:45Z", "commit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0Mzo0NlrOGZD_bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo0Mzo0NlrOGZD_bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzMjk3NQ==", "bodyText": "I would wrap e so that stack traces are not lost and anyone getting the exceptions can trace the full code path from their code to the background thread.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Throwable t = e.getCause();\n          \n          \n            \n                    if (t instanceof IllegalArgumentException) {\n          \n          \n            \n                      throw (IllegalArgumentException) t;\n          \n          \n            \n                    } else\n          \n          \n            \n                      throw new RuntimeException(t);\n          \n          \n            \n                  }\n          \n          \n            \n                    Throwable t = e.getCause();\n          \n          \n            \n                    if (t instanceof IllegalArgumentException) {\n          \n          \n            \n                      throw new IllegalArgumentException(e);\n          \n          \n            \n                    } else\n          \n          \n            \n                      throw new RuntimeException(e);\n          \n          \n            \n                  }", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r428932975", "createdAt": "2020-05-21T21:43:46Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/clientImpl/bulk/BulkImport.java", "diffHunk": "@@ -576,7 +587,12 @@ private Text toText(byte[] row) {\n         Thread.currentThread().interrupt();\n         throw new RuntimeException(e);\n       } catch (ExecutionException e) {\n-        throw new RuntimeException(e);\n+        // clean up exception for user\n+        Throwable t = e.getCause();\n+        if (t instanceof IllegalArgumentException) {\n+          throw (IllegalArgumentException) t;\n+        } else\n+          throw new RuntimeException(t);\n       }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16"}, "originalPosition": 134}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NTIyMDY0", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-416522064", "createdAt": "2020-05-21T21:58:08Z", "commit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1ODowOFrOGZEWKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMTo1ODowOFrOGZEWKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODkzODc5NQ==", "bodyText": "I recently learned about this new feature in Junit.  It also returns the expected exception if you want to check the message.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                try {\n          \n          \n            \n                  testBulkFile(false, true);\n          \n          \n            \n                  fail(\"Expected IllegalArgumentException for \" + Property.TABLE_BULK_MAX_TABLETS);\n          \n          \n            \n                } catch (IllegalArgumentException e) {\n          \n          \n            \n                  // expected\n          \n          \n            \n                }\n          \n          \n            \n               Assert.assertThrows(IllegalArgumentException.class, () -> testBulkFile(false, true));", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r428938795", "createdAt": "2020-05-21T21:58:08Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/BulkNewIT.java", "diffHunk": "@@ -186,18 +186,26 @@ public void testSingleTabletSingleFileOffline() throws Exception {\n \n   @Test\n   public void testMaxTablets() throws Exception {\n-    String maxTablets = \"0\";\n+    // test max tablets hit while inspecting bulk files\n     try (AccumuloClient client = Accumulo.newClient().from(getClientProps()).build()) {\n-      maxTablets = client.instanceOperations().getSystemConfiguration()\n-          .get(Property.MASTER_BULK_MAX_TABLETS.getKey());\n-      client.instanceOperations().setProperty(Property.MASTER_BULK_MAX_TABLETS.getKey(), \"1\");\n+      tableName = \"testMaxTablets_table1\";\n+      NewTableConfiguration newTableConf = new NewTableConfiguration();\n+      // set logical time type so we can set time on bulk import\n+      Map<String,String> props = new HashMap<>();\n+      props.put(Property.TABLE_BULK_MAX_TABLETS.getKey(), \"1\");\n+      newTableConf.setProperties(props);\n+      client.tableOperations().create(tableName, newTableConf);\n       testBulkFile(false, false);\n-      fail(\"Expected IllegalArgumentException for \" + Property.MASTER_BULK_MAX_TABLETS);\n-    } catch (IllegalArgumentException e) {} finally {\n-      try (AccumuloClient client = Accumulo.newClient().from(getClientProps()).build()) {\n-        client.instanceOperations().setProperty(Property.MASTER_BULK_MAX_TABLETS.getKey(),\n-            maxTablets);\n-      }\n+      fail(\"Expected IllegalArgumentException for \" + Property.TABLE_BULK_MAX_TABLETS);\n+    } catch (IllegalArgumentException e) {\n+      // expected\n+    }\n+    // test max tablets hit using load plan\n+    try {\n+      testBulkFile(false, true);\n+      fail(\"Expected IllegalArgumentException for \" + Property.TABLE_BULK_MAX_TABLETS);\n+    } catch (IllegalArgumentException e) {\n+      // expected\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7f5049dd0c35b9bea9099d68264018a69ffc16"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3951d98aeffc20fa4318d14d03ef3f0c8be56876", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/3951d98aeffc20fa4318d14d03ef3f0c8be56876", "committedDate": "2020-05-22T16:51:29Z", "message": "Revert exception handling change and clean up BulkNewIT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMjYxODgx", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-420261881", "createdAt": "2020-05-28T15:59:51Z", "commit": {"oid": "3951d98aeffc20fa4318d14d03ef3f0c8be56876"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTo1OTo1MVrOGb8DOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjowNzoyNFrOGb8WaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk0ODYwMA==", "bodyText": "Could mention that this property is only enforced when using the new bulk import API.", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r431948600", "createdAt": "2020-05-28T15:59:51Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -715,6 +715,8 @@\n           + \" perform specialized parsing of the key. \"),\n   TABLE_BLOOM_HASHTYPE(\"table.bloom.hash.type\", \"murmur\", PropertyType.STRING,\n       \"The bloom filter hash type\"),\n+  TABLE_BULK_MAX_TABLETS(\"table.bulk.max.tablets\", \"0\", PropertyType.COUNT,\n+      \"The maximum number of tablets allowed for one bulk import file. Value of 0 is Unlimited\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3951d98aeffc20fa4318d14d03ef3f0c8be56876"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1MDk4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Map<String,String> props = new HashMap<>();\n          \n          \n            \n                  props.put(Property.TABLE_BULK_MAX_TABLETS.getKey(), \"1\");\n          \n          \n            \n                 var props = Map.of(Property.TABLE_BULK_MAX_TABLETS.getKey(), \"1\");", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r431950983", "createdAt": "2020-05-28T16:03:20Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/BulkNewIT.java", "diffHunk": "@@ -183,6 +186,29 @@ public void testSingleTabletSingleFileOffline() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testMaxTablets() throws Exception {\n+    try (AccumuloClient client = Accumulo.newClient().from(getClientProps()).build()) {\n+      tableName = \"testMaxTablets_table1\";\n+      NewTableConfiguration newTableConf = new NewTableConfiguration();\n+      // set logical time type so we can set time on bulk import\n+      Map<String,String> props = new HashMap<>();\n+      props.put(Property.TABLE_BULK_MAX_TABLETS.getKey(), \"1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3951d98aeffc20fa4318d14d03ef3f0c8be56876"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk1MzUxMg==", "bodyText": "Not sure if this is possible, but it would be really nice to confirm that exception message contains the offending file name.  Whenever someone runs into this error message, knowing which file caused the problem will be extremely helpful to them.\nIf the test does not do this, I would also recommend creating multiple files.  One that exceeds the limit and few that do not.  Want to ensure in this case the troublesome file is listed in the message.", "url": "https://github.com/apache/accumulo/pull/1614#discussion_r431953512", "createdAt": "2020-05-28T16:07:24Z", "author": {"login": "keith-turner"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/BulkNewIT.java", "diffHunk": "@@ -183,6 +186,29 @@ public void testSingleTabletSingleFileOffline() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testMaxTablets() throws Exception {\n+    try (AccumuloClient client = Accumulo.newClient().from(getClientProps()).build()) {\n+      tableName = \"testMaxTablets_table1\";\n+      NewTableConfiguration newTableConf = new NewTableConfiguration();\n+      // set logical time type so we can set time on bulk import\n+      Map<String,String> props = new HashMap<>();\n+      props.put(Property.TABLE_BULK_MAX_TABLETS.getKey(), \"1\");\n+      newTableConf.setProperties(props);\n+      client.tableOperations().create(tableName, newTableConf);\n+\n+      // test max tablets hit while inspecting bulk files\n+      var thrown = assertThrows(RuntimeException.class, () -> testBulkFile(false, false));\n+      var c = thrown.getCause();\n+      assertTrue(\"Wrong exception: \" + c, c instanceof ExecutionException);\n+      assertTrue(\"Wrong exception: \" + c.getCause(),\n+          c.getCause() instanceof IllegalArgumentException);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3951d98aeffc20fa4318d14d03ef3f0c8be56876"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f71a2d1ba175dbb74a8f9e26151b778c270eaa2c", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/f71a2d1ba175dbb74a8f9e26151b778c270eaa2c", "committedDate": "2020-06-01T12:51:37Z", "message": "Update test/src/main/java/org/apache/accumulo/test/functional/BulkNewIT.java\n\nCo-authored-by: Keith Turner <kturner@apache.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ff589ac91ac668b433e78fdb3f6a735d5da7091", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/3ff589ac91ac668b433e78fdb3f6a735d5da7091", "committedDate": "2020-06-02T15:41:46Z", "message": "Added new data for max tablet test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13ad1b33bc3e92669db8a523e1e3a87025326d7a", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/13ad1b33bc3e92669db8a523e1e3a87025326d7a", "committedDate": "2020-06-04T19:09:11Z", "message": "Add server side check for max tablets\n\n* Update PrepBulkImport to use LoadMappingIterator and check overlapping\ntablet counts against table.bulk.max.tablets\n* Update PrepBulkImportTest to use a LoadMappingIterator object\n\nCo-authored-by: Keith Turner <kturner@apache.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6319d9e408350cd15570eb9a93de613e5d4e730e", "author": {"user": {"login": "milleruntime", "name": "Mike Miller"}}, "url": "https://github.com/apache/accumulo/commit/6319d9e408350cd15570eb9a93de613e5d4e730e", "committedDate": "2020-06-04T19:21:37Z", "message": "Update max tablets propety comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Njk4NzE5", "url": "https://github.com/apache/accumulo/pull/1614#pullrequestreview-425698719", "createdAt": "2020-06-06T00:58:28Z", "commit": {"oid": "6319d9e408350cd15570eb9a93de613e5d4e730e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1965, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}