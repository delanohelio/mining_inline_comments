{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1Mjk5ODc0", "number": 1555, "title": "Fix idempotency bug in importtable", "bodyText": "The previous implementation would fail when an interrupted importtable\noperation was retried by FATE, as it would not find (already moved)\nfiles in the exported directory. Additionally, this commit also removes\na chatty fs.exists() check.", "createdAt": "2020-03-08T18:52:40Z", "url": "https://github.com/apache/accumulo/pull/1555", "merged": true, "mergeCommit": {"oid": "3b9dadce9d62d3432fabd995892568f63816420f"}, "closed": true, "closedAt": "2020-03-12T18:02:46Z", "author": {"login": "arvindshmicrosoft"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLt8XpgH2gAyMzg1Mjk5ODc0OmIzZGM1ZjYyOWI1OWQ1MWQwNTgwYTVkZjcxMGY2NzQzZDUxOGIzMDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMpibQgFqTM3MjkxNDQ2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308", "author": {"user": {"login": "arvindshmicrosoft", "name": "Arvind Shyamsundar"}}, "url": "https://github.com/apache/accumulo/commit/b3dc5f629b59d51d0580a5df710f6743d518b308", "committedDate": "2020-03-08T18:50:55Z", "message": "Fix idempotency bug in importtable\nThe previous implementation would fail when an interrupted importtable\noperation was retried by FATE, as it would not find (already moved)\nfiles in the exported directory. Additionally, this commit also removes\na chatty fs.exists() check."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwODcwMjQ4", "url": "https://github.com/apache/accumulo/pull/1555#pullrequestreview-370870248", "createdAt": "2020-03-09T00:12:09Z", "commit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDoxMjowOVrOFzYaUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMDoxMjowOVrOFzYaUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyMTY1MQ==", "bodyText": "Not sure if it's worth it, but I think you could maybe reuse the lambda used for the Predicate, as in the following.\nAlso, I think .noneMatch(p) is probably better than .filter(p).count() != 1, since it's not really possible to have multiple files in the same directory match on the same file name anyway... so the result is always binary (present or absent).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  for (String oldFileName : fileNameMappings.keySet()) {\n          \n          \n            \n                    if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n          \n          \n            \n                      throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n          \n          \n            \n                          TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n          \n          \n            \n                          \"File referenced by exported table does not exists \" + oldFileName);\n          \n          \n            \n                    if (Arrays.stream(exportedFiles).filter(fstat ->\n          \n          \n            \n                        fstat.getPath().getName().equals(oldFileName)).count() != 1) {\n          \n          \n            \n                      if (Arrays.stream(importedFiles).filter(fstat ->\n          \n          \n            \n                          fstat.getPath().getName().equals(fileNameMappings.get(oldFileName))).count() != 1) {\n          \n          \n            \n                        throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n          \n          \n            \n                            TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n          \n          \n            \n                            \"File referenced by exported table does not exist \" + oldFileName);\n          \n          \n            \n                      }\n          \n          \n            \n                  // given a name, return a predicate that can check a FileStatus for a match against that name\n          \n          \n            \n                  Function<String,Predicate<FileStatus>> nameEq = name -> fstat -> fstat.getPath().getName().equals(name);\n          \n          \n            \n                  for (String oldFileName : fileNameMappings.keySet()) {\n          \n          \n            \n                    if (Arrays.stream(exportedFiles).noneMatch(nameEq.apply(oldFileName))) {\n          \n          \n            \n                      String newFileName = fileNameMappings.get(oldFileName);\n          \n          \n            \n                      if (Arrays.stream(importedFiles).noneMatch(nameEq.apply(newFileName))) {\n          \n          \n            \n                        throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n          \n          \n            \n                            TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n          \n          \n            \n                            \"File referenced by exported table does not exist \" + oldFileName);\n          \n          \n            \n                      }", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r389421651", "createdAt": "2020-03-09T00:12:09Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n       for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n+        if (Arrays.stream(exportedFiles).filter(fstat ->\n+            fstat.getPath().getName().equals(oldFileName)).count() != 1) {\n+          if (Arrays.stream(importedFiles).filter(fstat ->\n+              fstat.getPath().getName().equals(fileNameMappings.get(oldFileName))).count() != 1) {\n+            throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n+                TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n+                \"File referenced by exported table does not exist \" + oldFileName);\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzM3MTY0", "url": "https://github.com/apache/accumulo/pull/1555#pullrequestreview-371337164", "createdAt": "2020-03-09T16:30:04Z", "commit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozMDowNVrOFzwAQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozMDowNVrOFzwAQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwODE5NQ==", "bodyText": "Could possibly avoid the linear search in each loop iteration with something like the following before the loop.\nSet<String> importing = Arrays.stream(exportedFiles).map(fstat ->\n            fstat.getPath().getName()).map(fileNameMapping::get).collect(Collectors.toSet());\nSet<String> imported = Arrays.stream(importedFiles).map(fstat ->\n            fstat.getPath().getName()).collect(Collectors.toSet());\n\n//ensure Sets.union(importing, imported) equals new HashSet<>(fileNameMappings.values())", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r389808195", "createdAt": "2020-03-09T16:30:05Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzYyMTUz", "url": "https://github.com/apache/accumulo/pull/1555#pullrequestreview-371362153", "createdAt": "2020-03-09T17:01:06Z", "commit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowMTowN1rOFzxNhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzowMTowN1rOFzxNhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgyNzk3NQ==", "bodyText": "This is a really nice change, avoiding all of the individual namenode RPCs", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r389827975", "createdAt": "2020-03-09T17:01:07Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,17 +49,22 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3dc5f629b59d51d0580a5df710f6743d518b308"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1", "author": {"user": {"login": "arvindshmicrosoft", "name": "Arvind Shyamsundar"}}, "url": "https://github.com/apache/accumulo/commit/0e5f5c407f4c8ed9a188470be255b7833d1e2ac1", "committedDate": "2020-03-10T05:19:51Z", "message": "Use Set operations to streamline code\nThis code uses set operations to validate if there are missing files in\nthe exported (source) directory. In addition the usage of sets improves\nperf compared to the lambda scanning the file status arrays."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMjk0OTI2", "url": "https://github.com/apache/accumulo/pull/1555#pullrequestreview-372294926", "createdAt": "2020-03-10T20:25:18Z", "commit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDoyNToxOFrOF0frpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDoyNToxOFrOF0frpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU4OTM1MQ==", "bodyText": "Would be nice to avoid creating the concatenated string unless needed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  log.debug(\"Files already present in imported (target) directory: {}\",\n          \n          \n            \n                    StringUtils.join(imported.toArray(), \",\"));\n          \n          \n            \n              if(log.isDebugEnabled()){\n          \n          \n            \n                  log.debug(\"Files already present in imported (target) directory: {}\",\n          \n          \n            \n                    StringUtils.join(imported.toArray(), \",\"));\n          \n          \n            \n               }", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390589351", "createdAt": "2020-03-10T20:25:18Z", "author": {"login": "keith-turner"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMzY3MTg5", "url": "https://github.com/apache/accumulo/pull/1555#pullrequestreview-372367189", "createdAt": "2020-03-10T22:33:26Z", "commit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjozMzoyNlrOF0jYbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0MDowOVrOF0jiKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY0OTk2Nw==", "bodyText": "fstat -> fstat.getPath().getName() is used twice. The lines can be shortened (possibly to one line each) if that lambda was saved in a reusable Function<FileStatus,String> fileStatusName = fstat -> fstat.getPath().getName(); variable or similar.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390649967", "createdAt": "2020-03-10T22:33:26Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MTQ4Nw==", "bodyText": "In addition to Keith's suggestion, we'll need to be careful about the use of commons-lang here when we merge to the master branch, which now uses commons-lang3. If you wanted to avoid that, you could instead use the built-in Java Joiner, as in:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    StringUtils.join(imported.toArray(), \",\"));\n          \n          \n            \n                    imported.stream().collect(Collectors.joining(\",\")));\n          \n      \n    \n    \n  \n\nIt's only slightly longer, but removes an unneeded library dependency.", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390651487", "createdAt": "2020-03-10T22:37:40Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1MjQ1OQ==", "bodyText": "This doesn't match our formatter style. Before we merge this, make sure the code is formatted and the basic QA checks pass (mvn clean verify -DskipTests).", "url": "https://github.com/apache/accumulo/pull/1555#discussion_r390652459", "createdAt": "2020-03-10T22:40:09Z", "author": {"login": "ctubbsii"}, "path": "server/master/src/main/java/org/apache/accumulo/master/tableOps/MoveExportedFiles.java", "diffHunk": "@@ -48,21 +55,35 @@\n \n       Map<String,String> fileNameMappings = PopulateMetadataTable.readMappingFile(fs, tableInfo);\n \n-      for (String oldFileName : fileNameMappings.keySet()) {\n-        if (!fs.exists(new Path(tableInfo.exportDir, oldFileName))) {\n-          throw new AcceptableThriftTableOperationException(tableInfo.tableId, tableInfo.tableName,\n-              TableOperation.IMPORT, TableOperationExceptionType.OTHER,\n-              \"File referenced by exported table does not exists \" + oldFileName);\n-        }\n-      }\n+      FileStatus[] exportedFiles = fs.listStatus(new Path(tableInfo.exportDir));\n+      FileStatus[] importedFiles = fs.listStatus(new Path(tableInfo.importDir));\n+\n+      Set<String> importing = Arrays.stream(exportedFiles).map(fstat -> fstat.getPath().getName())\n+        .map(fileNameMappings::get).collect(Collectors.toSet());\n \n-      FileStatus[] files = fs.listStatus(new Path(tableInfo.exportDir));\n+      Set<String> imported = Arrays.stream(importedFiles).map(fstat -> fstat.getPath().getName())\n+        .collect(Collectors.toSet());\n+      log.debug(\"Files already present in imported (target) directory: {}\",\n+        StringUtils.join(imported.toArray(), \",\"));\n \n-      for (FileStatus fileStatus : files) {\n+      Set<String> missingFiles = Sets.difference(new HashSet<String>(fileNameMappings.values()),\n+        new HashSet<String>(Sets.union(importing, imported)));\n+\n+      if (!missingFiles.isEmpty())\n+      {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5f5c407f4c8ed9a188470be255b7833d1e2ac1"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cf2aa4785ad1ddee9b6d35364fa328c321f49cd", "author": {"user": {"login": "arvindshmicrosoft", "name": "Arvind Shyamsundar"}}, "url": "https://github.com/apache/accumulo/commit/4cf2aa4785ad1ddee9b6d35364fa328c321f49cd", "committedDate": "2020-03-11T05:00:36Z", "message": "Fix formatting and use inbuilt Java joiner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODIyMjgw", "url": "https://github.com/apache/accumulo/pull/1555#pullrequestreview-372822280", "createdAt": "2020-03-11T14:40:57Z", "commit": {"oid": "4cf2aa4785ad1ddee9b6d35364fa328c321f49cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyOTE0NDYz", "url": "https://github.com/apache/accumulo/pull/1555#pullrequestreview-372914463", "createdAt": "2020-03-11T16:16:53Z", "commit": {"oid": "4cf2aa4785ad1ddee9b6d35364fa328c321f49cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1886, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}