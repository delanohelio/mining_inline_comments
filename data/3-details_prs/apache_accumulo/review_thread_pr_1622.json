{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDEwNjcw", "number": 1622, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNDoxM1rOECr1hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTo0NDoyOVrOEKq87A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjUwODIwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNDoxM1rOGfS19Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MDo1MlrOGfs4SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2Nzc2NQ==", "bodyText": "The default of true maintains the current behavior, however that behavior seemed problematic in the issue you opened.  Makes me wonder if the default should be false.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r435467765", "createdAt": "2020-06-04T18:34:13Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -452,6 +458,9 @@\n       \"The time to wait for a tablet server to process a bulk import request.\"),\n   TSERV_MINTHREADS(\"tserver.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.thread.timeout.allowed\", \"true\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbfab01a39e7bc6ac92f8641fc4b1c0f0c22039f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwNzI3MA==", "bodyText": "I thought about that.  I think this only really becomes a problem when you are dealing with very large numbers of threads (300+ maybe) which is why I left the default as true.  I am certainly will to change it to false however.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r435507270", "createdAt": "2020-06-04T19:44:06Z", "author": {"login": "ivakegg"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -452,6 +458,9 @@\n       \"The time to wait for a tablet server to process a bulk import request.\"),\n   TSERV_MINTHREADS(\"tserver.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.thread.timeout.allowed\", \"true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2Nzc2NQ=="}, "originalCommit": {"oid": "dbfab01a39e7bc6ac92f8641fc4b1c0f0c22039f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxMjM0OA==", "bodyText": "I am slightly in favor of false because it addresses a known problem and seems like it should not cause problems, but it could.  The way this change is structured it does not change all of the existing code to false just a few select places, which is good.  Leaving most of the internal usage w/ a hard coded true is good and changing just these configurable ones to false may be a good way to go.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r435512348", "createdAt": "2020-06-04T19:53:53Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -452,6 +458,9 @@\n       \"The time to wait for a tablet server to process a bulk import request.\"),\n   TSERV_MINTHREADS(\"tserver.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.thread.timeout.allowed\", \"true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2Nzc2NQ=="}, "originalCommit": {"oid": "dbfab01a39e7bc6ac92f8641fc4b1c0f0c22039f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5NDM0NA==", "bodyText": "ok, I am game for that.  I will change it now.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r435894344", "createdAt": "2020-06-05T12:40:52Z", "author": {"login": "ivakegg"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -452,6 +458,9 @@\n       \"The time to wait for a tablet server to process a bulk import request.\"),\n   TSERV_MINTHREADS(\"tserver.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.thread.timeout.allowed\", \"true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2Nzc2NQ=="}, "originalCommit": {"oid": "dbfab01a39e7bc6ac92f8641fc4b1c0f0c22039f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTQ3ODE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo1Nzo1NFrOGgnf4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo1Nzo1NFrOGgnf4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NDc1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.thread.timeout.allowed\", \"false\",\n          \n          \n            \n              TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.threads.timeout.allowed\", \"false\",", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r436854753", "createdAt": "2020-06-08T16:57:54Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -452,6 +458,9 @@\n       \"The time to wait for a tablet server to process a bulk import request.\"),\n   TSERV_MINTHREADS(\"tserver.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.thread.timeout.allowed\", \"false\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTQ3OTE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo1ODoxNFrOGgngog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo1ODoxNFrOGgngog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NDk0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"false\",\n          \n          \n            \n              MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.threads.timeout.allowed\", \"false\",", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r436854946", "createdAt": "2020-06-08T16:58:14Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -259,6 +262,9 @@\n       \"Regular expression that defines the set of Tablet Servers that will perform bulk imports\"),\n   MASTER_MINTHREADS(\"master.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  MASTER_MINTHREADS_ALLOW_TIMEOUT(\"master.server.thread.timeout.allowed\", \"false\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTQ4MDcyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo1ODo0MlrOGgnhoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo1ODo0MlrOGgnhoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NTIwMA==", "bodyText": "To me making the property perfix the same as far as possible with the existing prop provides a clue that these two props go together.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              MASTER_BULK_THREADPOOL_ALLOW_TIMEOUT(\"master.bulk.thread.timeout.allowed\", \"false\",\n          \n          \n            \n              MASTER_BULK_THREADPOOL_ALLOW_TIMEOUT(\"master.bulk.threadpool.timeout.allowed\", \"false\",", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r436855200", "createdAt": "2020-06-08T16:58:42Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -246,6 +246,9 @@\n       \"The number of attempts to bulk import a RFile before giving up.\"),\n   MASTER_BULK_THREADPOOL_SIZE(\"master.bulk.threadpool.size\", \"5\", PropertyType.COUNT,\n       \"The number of threads to use when coordinating a bulk import.\"),\n+  MASTER_BULK_THREADPOOL_ALLOW_TIMEOUT(\"master.bulk.thread.timeout.allowed\", \"false\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTQ5NTA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzowMjo1N1rOGgnq9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDowNDoxMVrOGrnUww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NzU5MQ==", "bodyText": "While we are examining this code, I think it would be a good idea to increase this timeout to a few minutes and use a a private constant.   Maybe 3 to 5 mins.  Could do private static final   TIMEOUT_SECS=180\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));\n          \n          \n            \n                super(coreAndMax, coreAndMax, TIMEOUT_SECS, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r436857591", "createdAt": "2020-06-08T17:02:57Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "diffHunk": "@@ -28,15 +28,16 @@\n  */\n public class SimpleThreadPool extends ThreadPoolExecutor {\n \n-  public SimpleThreadPool(int max, final String name) {\n-    super(max, max, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n         new NamingThreadFactory(name));\n-    allowCoreThreadTimeOut(true);\n+    allowCoreThreadTimeOut(allowCoreThreadTimeOut);\n   }\n \n-  public SimpleThreadPool(int max, final String name, BlockingQueue<Runnable> queue) {\n-    super(max, max, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));\n-    allowCoreThreadTimeOut(true);\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name,\n+      BlockingQueue<Runnable> queue) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzMjU0NQ==", "bodyText": "I changed this to TIMEOUT_SECS with a value of 180.  I am wondering whether this should be configurable as well.  @keith-turner thoughts?", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r444332545", "createdAt": "2020-06-23T15:56:22Z", "author": {"login": "ivakegg"}, "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "diffHunk": "@@ -28,15 +28,16 @@\n  */\n public class SimpleThreadPool extends ThreadPoolExecutor {\n \n-  public SimpleThreadPool(int max, final String name) {\n-    super(max, max, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n         new NamingThreadFactory(name));\n-    allowCoreThreadTimeOut(true);\n+    allowCoreThreadTimeOut(allowCoreThreadTimeOut);\n   }\n \n-  public SimpleThreadPool(int max, final String name, BlockingQueue<Runnable> queue) {\n-    super(max, max, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));\n-    allowCoreThreadTimeOut(true);\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name,\n+      BlockingQueue<Runnable> queue) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NzU5MQ=="}, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDUzNDI4OQ==", "bodyText": "I am not sure it needs to be made configurable.  If it were configurable maybe we could have a single property with just the timeout and a timeout of zero means no timeout.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r444534289", "createdAt": "2020-06-23T22:03:33Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "diffHunk": "@@ -28,15 +28,16 @@\n  */\n public class SimpleThreadPool extends ThreadPoolExecutor {\n \n-  public SimpleThreadPool(int max, final String name) {\n-    super(max, max, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n         new NamingThreadFactory(name));\n-    allowCoreThreadTimeOut(true);\n+    allowCoreThreadTimeOut(allowCoreThreadTimeOut);\n   }\n \n-  public SimpleThreadPool(int max, final String name, BlockingQueue<Runnable> queue) {\n-    super(max, max, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));\n-    allowCoreThreadTimeOut(true);\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name,\n+      BlockingQueue<Runnable> queue) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NzU5MQ=="}, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM4NjI0Mw==", "bodyText": "Your idea is starting to grow on me.  Instead of ALLOW_TIMEOUT properties I will create a THREAD_TIMEOUT properties which default to 0.  I will work that through and update unless I find any issues.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r448386243", "createdAt": "2020-07-01T14:04:11Z", "author": {"login": "ivakegg"}, "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "diffHunk": "@@ -28,15 +28,16 @@\n  */\n public class SimpleThreadPool extends ThreadPoolExecutor {\n \n-  public SimpleThreadPool(int max, final String name) {\n-    super(max, max, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n         new NamingThreadFactory(name));\n-    allowCoreThreadTimeOut(true);\n+    allowCoreThreadTimeOut(allowCoreThreadTimeOut);\n   }\n \n-  public SimpleThreadPool(int max, final String name, BlockingQueue<Runnable> queue) {\n-    super(max, max, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));\n-    allowCoreThreadTimeOut(true);\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name,\n+      BlockingQueue<Runnable> queue) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, queue, new NamingThreadFactory(name));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1NzU5MQ=="}, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTQ5NjQwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzowMzoxNVrOGgnrtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzowMzoxNVrOGgnrtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg1Nzc4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n          \n          \n            \n                super(coreAndMax, coreAndMax, TIMEOUT_SECS, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r436857780", "createdAt": "2020-06-08T17:03:15Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "diffHunk": "@@ -28,15 +28,16 @@\n  */\n public class SimpleThreadPool extends ThreadPoolExecutor {\n \n-  public SimpleThreadPool(int max, final String name) {\n-    super(max, max, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n+  public SimpleThreadPool(int coreAndMax, boolean allowCoreThreadTimeOut, final String name) {\n+    super(coreAndMax, coreAndMax, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjUxNDA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMzowNTowNVrOGkaTvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjowMTozNlrOGnwIfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzMjk1Nw==", "bodyText": "minor nit: I think this is a great set of features; however, I had a question about the wording. \"True... if... allowed\" made me think another setting would impact this, but I imagine it is the case that if this is true then timeouts can occur.\n\"Allows request threads to time out when no work is available\" might be more clear but @keith-turner spent more time here so he can likely correct me from his perspective -- and it may be the case that my interpretation is wrong.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r440832957", "createdAt": "2020-06-16T13:05:05Z", "author": {"login": "phrocker"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -452,6 +458,9 @@\n       \"The time to wait for a tablet server to process a bulk import request.\"),\n   TSERV_MINTHREADS(\"tserver.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.thread.timeout.allowed\", \"false\",\n+      PropertyType.BOOLEAN,\n+      \"True if the incoming request threads are allowed to timeout with no work available.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDMzNjI1NA==", "bodyText": "I have no problem changing the descriptions as such.  done.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r444336254", "createdAt": "2020-06-23T16:01:36Z", "author": {"login": "ivakegg"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -452,6 +458,9 @@\n       \"The time to wait for a tablet server to process a bulk import request.\"),\n   TSERV_MINTHREADS(\"tserver.server.threads.minimum\", \"20\", PropertyType.COUNT,\n       \"The minimum number of threads to use to handle incoming requests.\"),\n+  TSERV_MINTHREADS_ALLOW_TIMEOUT(\"tserver.server.thread.timeout.allowed\", \"false\",\n+      PropertyType.BOOLEAN,\n+      \"True if the incoming request threads are allowed to timeout with no work available.\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgzMjk1Nw=="}, "originalCommit": {"oid": "4d6991afc9c9589b829c2b9677a47e85586cc5aa"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjIxMTkzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTozMDoxNlrOGr1_Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzowOTozNlrOGt9wJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyNjUyMw==", "bodyText": "Would it work to only do the following in the constructor?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                super(coreAndMax, coreAndMax, threadTimeOut, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),\n          \n          \n            \n                this(coreAndMax, threadTimeOut, name, new LinkedBlockingQueue<>());", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r448626523", "createdAt": "2020-07-01T21:30:16Z", "author": {"login": "keith-turner"}, "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "diffHunk": "@@ -28,15 +28,32 @@\n  */\n public class SimpleThreadPool extends ThreadPoolExecutor {\n \n-  public SimpleThreadPool(int max, final String name) {\n-    super(max, max, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n+  // the number of seconds before we allow a thread to terminate with non-use.\n+  public static final long DEFAULT_TIMEOUT_MILLISECS = 180000L;\n+\n+  public SimpleThreadPool(int coreAndMax, final String name) {\n+    this(coreAndMax, DEFAULT_TIMEOUT_MILLISECS, name);\n+  }\n+\n+  public SimpleThreadPool(int coreAndMax, long threadTimeOut, final String name) {\n+    super(coreAndMax, coreAndMax, threadTimeOut, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7d70a6a0d2c3f859e3299831812ae30cec27e95"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyODQwNQ==", "bodyText": "That would work and would be cleaner.  I could also them remove the redundant lines after.  I will add this change.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r450828405", "createdAt": "2020-07-07T12:32:44Z", "author": {"login": "ivakegg"}, "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "diffHunk": "@@ -28,15 +28,32 @@\n  */\n public class SimpleThreadPool extends ThreadPoolExecutor {\n \n-  public SimpleThreadPool(int max, final String name) {\n-    super(max, max, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n+  // the number of seconds before we allow a thread to terminate with non-use.\n+  public static final long DEFAULT_TIMEOUT_MILLISECS = 180000L;\n+\n+  public SimpleThreadPool(int coreAndMax, final String name) {\n+    this(coreAndMax, DEFAULT_TIMEOUT_MILLISECS, name);\n+  }\n+\n+  public SimpleThreadPool(int coreAndMax, long threadTimeOut, final String name) {\n+    super(coreAndMax, coreAndMax, threadTimeOut, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyNjUyMw=="}, "originalCommit": {"oid": "c7d70a6a0d2c3f859e3299831812ae30cec27e95"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1MDg1NQ==", "bodyText": "done", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r450850855", "createdAt": "2020-07-07T13:09:36Z", "author": {"login": "ivakegg"}, "path": "core/src/main/java/org/apache/accumulo/core/util/SimpleThreadPool.java", "diffHunk": "@@ -28,15 +28,32 @@\n  */\n public class SimpleThreadPool extends ThreadPoolExecutor {\n \n-  public SimpleThreadPool(int max, final String name) {\n-    super(max, max, 4L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n+  // the number of seconds before we allow a thread to terminate with non-use.\n+  public static final long DEFAULT_TIMEOUT_MILLISECS = 180000L;\n+\n+  public SimpleThreadPool(int coreAndMax, final String name) {\n+    this(coreAndMax, DEFAULT_TIMEOUT_MILLISECS, name);\n+  }\n+\n+  public SimpleThreadPool(int coreAndMax, long threadTimeOut, final String name) {\n+    super(coreAndMax, coreAndMax, threadTimeOut, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyNjUyMw=="}, "originalCommit": {"oid": "c7d70a6a0d2c3f859e3299831812ae30cec27e95"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjI0OTQwOnYy", "diffSide": "RIGHT", "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTo0NDoyOVrOGr2V1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzowOTo0OVrOGt9wvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzMjI3OQ==", "bodyText": "I was trying to ensure the parameter order was correct when looking at this PR.  Once I realized you had consistently put the timeout after the number of threads here and elsewhere it made verifying the order much easier.", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r448632279", "createdAt": "2020-07-01T21:44:29Z", "author": {"login": "keith-turner"}, "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "diffHunk": "@@ -231,8 +236,8 @@ public static ServerAddress startServer(MetricsSystem metricsSystem, ServerConte\n    */\n   public static ServerAddress createThreadedSelectorServer(HostAndPort address,\n       TProcessor processor, TProtocolFactory protocolFactory, final String serverName,\n-      final int numThreads, final int numSTThreads, long timeBetweenThreadChecks,\n-      long maxMessageSize) throws TTransportException {\n+      final int numThreads, final long threadTimeOut, final int numSTThreads,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7d70a6a0d2c3f859e3299831812ae30cec27e95"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1MTAwNQ==", "bodyText": "cool", "url": "https://github.com/apache/accumulo/pull/1622#discussion_r450851005", "createdAt": "2020-07-07T13:09:49Z", "author": {"login": "ivakegg"}, "path": "server/base/src/main/java/org/apache/accumulo/server/rpc/TServerUtils.java", "diffHunk": "@@ -231,8 +236,8 @@ public static ServerAddress startServer(MetricsSystem metricsSystem, ServerConte\n    */\n   public static ServerAddress createThreadedSelectorServer(HostAndPort address,\n       TProcessor processor, TProtocolFactory protocolFactory, final String serverName,\n-      final int numThreads, final int numSTThreads, long timeBetweenThreadChecks,\n-      long maxMessageSize) throws TTransportException {\n+      final int numThreads, final long threadTimeOut, final int numSTThreads,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYzMjI3OQ=="}, "originalCommit": {"oid": "c7d70a6a0d2c3f859e3299831812ae30cec27e95"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4272, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}