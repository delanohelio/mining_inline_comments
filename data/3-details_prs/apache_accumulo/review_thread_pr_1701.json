{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwODc1MzQ4", "number": 1701, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxOTo1ODoyOVrOEguj9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMjoxODoxNVrOEgwo_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzUyNzU2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/client/PluginEnvironment.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxOTo1ODoyOVrOHNrnEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMDo0MTo0NFrOHNr18A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwODA0OA==", "bodyText": "I know this should probably have a @since tag, I'm just not sure what version to put. Please let me know and I'll add it.", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484108048", "createdAt": "2020-09-06T19:58:29Z", "author": {"login": "jkosh44"}, "path": "core/src/main/java/org/apache/accumulo/core/client/PluginEnvironment.java", "diffHunk": "@@ -55,6 +55,15 @@\n      */\n     String get(String key);\n \n+    /**\n+     * Returns all properties with a given prefix\n+     *\n+     * @param prefix\n+     *          prefix of properties to be returned\n+     * @return all properties with a given prefix\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3378be19cc9416ee39cf1100d4f69d44738fc8d5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExMTA3NA==", "bodyText": "2.1.0 would be the version we would add this kind of thing to.", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484111074", "createdAt": "2020-09-06T20:32:37Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/client/PluginEnvironment.java", "diffHunk": "@@ -55,6 +55,15 @@\n      */\n     String get(String key);\n \n+    /**\n+     * Returns all properties with a given prefix\n+     *\n+     * @param prefix\n+     *          prefix of properties to be returned\n+     * @return all properties with a given prefix\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwODA0OA=="}, "originalCommit": {"oid": "3378be19cc9416ee39cf1100d4f69d44738fc8d5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExMTg1Ng==", "bodyText": "Thanks, added", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484111856", "createdAt": "2020-09-06T20:41:44Z", "author": {"login": "jkosh44"}, "path": "core/src/main/java/org/apache/accumulo/core/client/PluginEnvironment.java", "diffHunk": "@@ -55,6 +55,15 @@\n      */\n     String get(String key);\n \n+    /**\n+     * Returns all properties with a given prefix\n+     *\n+     * @param prefix\n+     *          prefix of properties to be returned\n+     * @return all properties with a given prefix\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwODA0OA=="}, "originalCommit": {"oid": "3378be19cc9416ee39cf1100d4f69d44738fc8d5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzYyMTQ0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjowNzo1OVrOHNsSyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjozNjo0NlrOHNsc6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTI0Mg==", "bodyText": "This method isn't necessary, since this loop can be avoided.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n              /**\n          \n          \n            \n               * Checks if the given property prefix is valid. A valid property prefix is equal to some prefix\n          \n          \n            \n               * defined in this class.\n          \n          \n            \n               *\n          \n          \n            \n               * @param prefix\n          \n          \n            \n               *          property prefix\n          \n          \n            \n               * @return true if prefix is valid (recognized)\n          \n          \n            \n               */\n          \n          \n            \n              public static boolean isValidPropertyPrefix(String prefix) {\n          \n          \n            \n                return validPrefixes.contains(prefix);\n          \n          \n            \n              }", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484119242", "createdAt": "2020-09-06T22:07:59Z", "author": {"login": "ctubbsii"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -1233,6 +1233,18 @@ public static boolean isValidPropertyKey(String key) {\n     return validProperties.contains(key) || isKeyValidlyPrefixed(key);\n   }\n \n+  /**\n+   * Checks if the given property prefix is valid. A valid property prefix is equal to some prefix\n+   * defined in this class.\n+   *\n+   * @param prefix\n+   *          property prefix\n+   * @return true if prefix is valid (recognized)\n+   */\n+  public static boolean isValidPropertyPrefix(String prefix) {\n+    return validPrefixes.contains(prefix);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4e3c51efed22f9c17185bf023883ecb1962e6e9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMTgzMw==", "bodyText": "Removed", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484121833", "createdAt": "2020-09-06T22:36:46Z", "author": {"login": "jkosh44"}, "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -1233,6 +1233,18 @@ public static boolean isValidPropertyKey(String key) {\n     return validProperties.contains(key) || isKeyValidlyPrefixed(key);\n   }\n \n+  /**\n+   * Checks if the given property prefix is valid. A valid property prefix is equal to some prefix\n+   * defined in this class.\n+   *\n+   * @param prefix\n+   *          property prefix\n+   * @return true if prefix is valid (recognized)\n+   */\n+  public static boolean isValidPropertyPrefix(String prefix) {\n+    return validPrefixes.contains(prefix);\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTI0Mg=="}, "originalCommit": {"oid": "f4e3c51efed22f9c17185bf023883ecb1962e6e9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzYyMjY2OnYy", "diffSide": "RIGHT", "path": "server/base/src/main/java/org/apache/accumulo/server/ServiceEnvironmentImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjowOTo1NFrOHNsTVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjozNjo1NlrOHNsc7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTM4MA==", "bodyText": "This check for valid prefix property can be avoided, by checking the returned object from Property.getPropertyByKey(prefix):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (Property.isValidPropertyPrefix(prefix)) {\n          \n          \n            \n                    Property propertyPrefix = Property.getPropertyByKey(prefix);\n          \n          \n            \n                  Property propertyPrefix = Property.getPropertyByKey(prefix);\n          \n          \n            \n                  if (propertyPrefix != null && propertyPrefix.getType() == PropertyType.PREFIX) {", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484119380", "createdAt": "2020-09-06T22:09:54Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/ServiceEnvironmentImpl.java", "diffHunk": "@@ -78,6 +79,22 @@ public String get(String key) {\n       }\n     }\n \n+    @Override\n+    public Map<String,String> getWithPrefix(String prefix) {\n+      if (Property.isValidPropertyPrefix(prefix)) {\n+        Property propertyPrefix = Property.getPropertyByKey(prefix);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4e3c51efed22f9c17185bf023883ecb1962e6e9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMTgzOQ==", "bodyText": "Fixed", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484121839", "createdAt": "2020-09-06T22:36:56Z", "author": {"login": "jkosh44"}, "path": "server/base/src/main/java/org/apache/accumulo/server/ServiceEnvironmentImpl.java", "diffHunk": "@@ -78,6 +79,22 @@ public String get(String key) {\n       }\n     }\n \n+    @Override\n+    public Map<String,String> getWithPrefix(String prefix) {\n+      if (Property.isValidPropertyPrefix(prefix)) {\n+        Property propertyPrefix = Property.getPropertyByKey(prefix);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTM4MA=="}, "originalCommit": {"oid": "f4e3c51efed22f9c17185bf023883ecb1962e6e9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzYyNDA0OnYy", "diffSide": "RIGHT", "path": "server/base/src/main/java/org/apache/accumulo/server/ServiceEnvironmentImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjoxMToyNVrOHNsT9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQyMjozNzowM1rOHNsc-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTU0MQ==", "bodyText": "This can be more succinctly written with streams:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String,String> properties = new HashMap<>();\n          \n          \n            \n                    for (Entry<String,String> prop : acfg) {\n          \n          \n            \n                      if (prop.getKey().startsWith(prefix)) {\n          \n          \n            \n                        properties.put(prop.getKey(), prop.getValue());\n          \n          \n            \n                      }\n          \n          \n            \n                    }\n          \n          \n            \n                    return properties;\n          \n          \n            \n                  }\n          \n          \n            \n                    return StreamSupport.stream(acfg.spliterator(), false)\n          \n          \n            \n                        .filter(prop -> prop.getKey().startsWith(prefix))\n          \n          \n            \n                        .collect(Collectors.toMap(Entry::getKey, Entry::getValue));", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484119541", "createdAt": "2020-09-06T22:11:25Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/main/java/org/apache/accumulo/server/ServiceEnvironmentImpl.java", "diffHunk": "@@ -78,6 +79,22 @@ public String get(String key) {\n       }\n     }\n \n+    @Override\n+    public Map<String,String> getWithPrefix(String prefix) {\n+      if (Property.isValidPropertyPrefix(prefix)) {\n+        Property propertyPrefix = Property.getPropertyByKey(prefix);\n+        return acfg.getAllPropertiesWithPrefix(propertyPrefix);\n+      } else {\n+        Map<String,String> properties = new HashMap<>();\n+        for (Entry<String,String> prop : acfg) {\n+          if (prop.getKey().startsWith(prefix)) {\n+            properties.put(prop.getKey(), prop.getValue());\n+          }\n+        }\n+        return properties;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4e3c51efed22f9c17185bf023883ecb1962e6e9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMTg0OA==", "bodyText": "Fixed", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484121848", "createdAt": "2020-09-06T22:37:03Z", "author": {"login": "jkosh44"}, "path": "server/base/src/main/java/org/apache/accumulo/server/ServiceEnvironmentImpl.java", "diffHunk": "@@ -78,6 +79,22 @@ public String get(String key) {\n       }\n     }\n \n+    @Override\n+    public Map<String,String> getWithPrefix(String prefix) {\n+      if (Property.isValidPropertyPrefix(prefix)) {\n+        Property propertyPrefix = Property.getPropertyByKey(prefix);\n+        return acfg.getAllPropertiesWithPrefix(propertyPrefix);\n+      } else {\n+        Map<String,String> properties = new HashMap<>();\n+        for (Entry<String,String> prop : acfg) {\n+          if (prop.getKey().startsWith(prefix)) {\n+            properties.put(prop.getKey(), prop.getValue());\n+          }\n+        }\n+        return properties;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTU0MQ=="}, "originalCommit": {"oid": "f4e3c51efed22f9c17185bf023883ecb1962e6e9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzg2ODE0OnYy", "diffSide": "RIGHT", "path": "server/base/src/test/java/org/apache/accumulo/server/ServiceEnvironmentImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMjoxODoxNVrOHNuRug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMjoyMTozMVrOHNuUow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1MTczOA==", "bodyText": "The verify method is actually a varargs, so you can pass both in one:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @After\n          \n          \n            \n              public void verifyMocks() {\n          \n          \n            \n                verify(srvCtx);\n          \n          \n            \n                verify(acfg);\n          \n          \n            \n              }\n          \n          \n            \n              @After\n          \n          \n            \n              public void verifyMocks() {\n          \n          \n            \n                verify(srvCtx, acfg);\n          \n          \n            \n              }", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484151738", "createdAt": "2020-09-07T02:18:15Z", "author": {"login": "ctubbsii"}, "path": "server/base/src/test/java/org/apache/accumulo/server/ServiceEnvironmentImplTest.java", "diffHunk": "@@ -44,6 +46,12 @@ public void setUp() {\n     serviceEnvironment = new ServiceEnvironmentImpl(srvCtx);\n   }\n \n+  @After\n+  public void verifyMocks() {\n+    verify(srvCtx);\n+    verify(acfg);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25382ca456ec0791c93b65dfbec32581fd5571bb"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1MjQ4Mw==", "bodyText": "Fixed", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484152483", "createdAt": "2020-09-07T02:21:31Z", "author": {"login": "jkosh44"}, "path": "server/base/src/test/java/org/apache/accumulo/server/ServiceEnvironmentImplTest.java", "diffHunk": "@@ -44,6 +46,12 @@ public void setUp() {\n     serviceEnvironment = new ServiceEnvironmentImpl(srvCtx);\n   }\n \n+  @After\n+  public void verifyMocks() {\n+    verify(srvCtx);\n+    verify(acfg);\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1MTczOA=="}, "originalCommit": {"oid": "25382ca456ec0791c93b65dfbec32581fd5571bb"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4044, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}