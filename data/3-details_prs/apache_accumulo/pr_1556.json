{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MjkxNTI1", "number": 1556, "title": "Fixes #1488 - ManyWriteAheadLogsIT asserts open WALS equal to zero.", "bodyText": "CLOSED and UNREFERENCE WALS (not OPEN) causing open == 0", "createdAt": "2020-03-10T18:17:39Z", "url": "https://github.com/apache/accumulo/pull/1556", "merged": true, "mergeCommit": {"oid": "b681459fe6d720cc847bd22917265e866c64ccf4"}, "closed": true, "closedAt": "2020-03-13T20:51:19Z", "author": {"login": "jzgithub1"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMWm8GgH2gAyMzg2MjkxNTI1OjAzMDliZjVlZDdjYTgyMDEzMjM1YzAxMDU2MDBhYTVhY2QwNzVlNDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNFBw6gFqTM3Mzk3NzkzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0309bf5ed7ca82013235c0105600aa5acd075e45", "author": {"user": {"login": "jzgithub1", "name": "Jeffrey Zeiberg"}}, "url": "https://github.com/apache/accumulo/commit/0309bf5ed7ca82013235c0105600aa5acd075e45", "committedDate": "2020-03-10T18:13:37Z", "message": "WIP - Fixes #1488 - ManyWriteAheadLogsIT sees CLOSED and UNREFERENCED WALS (not OPEN) causing open == 0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e51ba0db8220d34d842df3098fe5e27a3aabd8f", "author": {"user": {"login": "jzgithub1", "name": "Jeffrey Zeiberg"}}, "url": "https://github.com/apache/accumulo/commit/9e51ba0db8220d34d842df3098fe5e27a3aabd8f", "committedDate": "2020-03-10T19:41:12Z", "message": "Fixes #1488 - ManyWriteAheadLogsIT retries to find open WALS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f21c9102bfb5ead79107e6505e0649fba204f7d3", "author": {"user": {"login": "jzgithub1", "name": "Jeffrey Zeiberg"}}, "url": "https://github.com/apache/accumulo/commit/f21c9102bfb5ead79107e6505e0649fba204f7d3", "committedDate": "2020-03-10T20:04:55Z", "message": "Fixes #1488 - ManyWriteAheadLogsIT retries to find open WALS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMzcyMjkz", "url": "https://github.com/apache/accumulo/pull/1556#pullrequestreview-372372293", "createdAt": "2020-03-10T22:45:56Z", "commit": {"oid": "f21c9102bfb5ead79107e6505e0649fba204f7d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0NTo1NlrOF0jqUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0Nzo0OVrOF0js5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1NDU0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                log.debug(\"It took \" + attempts + \" attempt(s) to find an open WAL\");\n          \n          \n            \n                log.debug(\"It took {} attempt(s) to find {} open WALs\", attempts, open);", "url": "https://github.com/apache/accumulo/pull/1556#discussion_r390654546", "createdAt": "2020-03-10T22:45:56Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "diffHunk": "@@ -198,16 +198,33 @@ public void testMany() throws Exception {\n   }\n \n   private void addOpenWals(ServerContext c, Set<String> allWalsSeen) throws Exception {\n-    Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n-    Set<Entry<String,WalState>> es = wals.entrySet();\n+\n     int open = 0;\n-    for (Entry<String,WalState> entry : es) {\n-      if (entry.getValue() == WalState.OPEN) {\n-        open++;\n-        allWalsSeen.add(entry.getKey());\n+    int attempts = 0;\n+    boolean foundWal = false;\n+\n+    while (open == 0) {\n+      attempts++;\n+      Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n+      Set<Entry<String,WalState>> es = wals.entrySet();\n+      for (Entry<String,WalState> entry : es) {\n+        if (entry.getValue() == WalState.OPEN) {\n+          open++;\n+          allWalsSeen.add(entry.getKey());\n+          foundWal = true;\n+        } else {\n+          log.error(\"The WalState is \" + entry.getValue());// CLOSED or UNREFERENCED\n+        }\n+      }\n+\n+      if (!foundWal) {\n+        Thread.sleep(50);\n+        if (attempts % 50 == 0)\n+          log.info(\"Has not found an open WAL in \" + attempts + \" attempts.\");\n       }\n     }\n \n+    log.debug(\"It took \" + attempts + \" attempt(s) to find an open WAL\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21c9102bfb5ead79107e6505e0649fba204f7d3"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1NDgzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      log.info(\"Has not found an open WAL in \" + attempts + \" attempts.\");\n          \n          \n            \n                      log.debug(\"No open WALs found in {} attempts.\", attempts);", "url": "https://github.com/apache/accumulo/pull/1556#discussion_r390654831", "createdAt": "2020-03-10T22:46:42Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "diffHunk": "@@ -198,16 +198,33 @@ public void testMany() throws Exception {\n   }\n \n   private void addOpenWals(ServerContext c, Set<String> allWalsSeen) throws Exception {\n-    Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n-    Set<Entry<String,WalState>> es = wals.entrySet();\n+\n     int open = 0;\n-    for (Entry<String,WalState> entry : es) {\n-      if (entry.getValue() == WalState.OPEN) {\n-        open++;\n-        allWalsSeen.add(entry.getKey());\n+    int attempts = 0;\n+    boolean foundWal = false;\n+\n+    while (open == 0) {\n+      attempts++;\n+      Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n+      Set<Entry<String,WalState>> es = wals.entrySet();\n+      for (Entry<String,WalState> entry : es) {\n+        if (entry.getValue() == WalState.OPEN) {\n+          open++;\n+          allWalsSeen.add(entry.getKey());\n+          foundWal = true;\n+        } else {\n+          log.error(\"The WalState is \" + entry.getValue());// CLOSED or UNREFERENCED\n+        }\n+      }\n+\n+      if (!foundWal) {\n+        Thread.sleep(50);\n+        if (attempts % 50 == 0)\n+          log.info(\"Has not found an open WAL in \" + attempts + \" attempts.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21c9102bfb5ead79107e6505e0649fba204f7d3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1NTIwNw==", "bodyText": "The formatter will reform that line, and possibly others. Try running mvn clean verify -DskipTests on this branch to run the code formatter, and to check for other style issues.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      log.error(\"The WalState is \" + entry.getValue());// CLOSED or UNREFERENCED\n          \n          \n            \n                      log.debug(\"The WalState for {} is {}\", entry.getKey(), entry.getValue()); // CLOSED or UNREFERENCED", "url": "https://github.com/apache/accumulo/pull/1556#discussion_r390655207", "createdAt": "2020-03-10T22:47:49Z", "author": {"login": "ctubbsii"}, "path": "test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java", "diffHunk": "@@ -198,16 +198,33 @@ public void testMany() throws Exception {\n   }\n \n   private void addOpenWals(ServerContext c, Set<String> allWalsSeen) throws Exception {\n-    Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n-    Set<Entry<String,WalState>> es = wals.entrySet();\n+\n     int open = 0;\n-    for (Entry<String,WalState> entry : es) {\n-      if (entry.getValue() == WalState.OPEN) {\n-        open++;\n-        allWalsSeen.add(entry.getKey());\n+    int attempts = 0;\n+    boolean foundWal = false;\n+\n+    while (open == 0) {\n+      attempts++;\n+      Map<String,WalState> wals = WALSunnyDayIT._getWals(c);\n+      Set<Entry<String,WalState>> es = wals.entrySet();\n+      for (Entry<String,WalState> entry : es) {\n+        if (entry.getValue() == WalState.OPEN) {\n+          open++;\n+          allWalsSeen.add(entry.getKey());\n+          foundWal = true;\n+        } else {\n+          log.error(\"The WalState is \" + entry.getValue());// CLOSED or UNREFERENCED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f21c9102bfb5ead79107e6505e0649fba204f7d3"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccf16cb9c92695bea72dd486c52e0a66feb4c214", "author": {"user": {"login": "jzgithub1", "name": "Jeffrey Zeiberg"}}, "url": "https://github.com/apache/accumulo/commit/ccf16cb9c92695bea72dd486c52e0a66feb4c214", "committedDate": "2020-03-11T02:35:17Z", "message": "Update test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java\n\nCo-Authored-By: Christopher Tubbs <ctubbsii@apache.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7d2b257767f99d89b04b72914f2ec59fc354de9", "author": {"user": {"login": "jzgithub1", "name": "Jeffrey Zeiberg"}}, "url": "https://github.com/apache/accumulo/commit/e7d2b257767f99d89b04b72914f2ec59fc354de9", "committedDate": "2020-03-11T02:35:29Z", "message": "Update test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java\n\nCo-Authored-By: Christopher Tubbs <ctubbsii@apache.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355ff0dc746e8b6e907f68edb5cdce19e6270fe7", "author": {"user": {"login": "jzgithub1", "name": "Jeffrey Zeiberg"}}, "url": "https://github.com/apache/accumulo/commit/355ff0dc746e8b6e907f68edb5cdce19e6270fe7", "committedDate": "2020-03-11T02:35:38Z", "message": "Update test/src/main/java/org/apache/accumulo/test/functional/ManyWriteAheadLogsIT.java\n\nCo-Authored-By: Christopher Tubbs <ctubbsii@apache.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczOTc3OTMz", "url": "https://github.com/apache/accumulo/pull/1556#pullrequestreview-373977933", "createdAt": "2020-03-13T00:18:33Z", "commit": {"oid": "355ff0dc746e8b6e907f68edb5cdce19e6270fe7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1889, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}