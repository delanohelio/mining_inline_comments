{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNzE0NzY3", "number": 3054, "title": "NMS-12753: Add encryption option for snmp config", "bodyText": "Add encryption for snmp credentials\nExternal References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12753", "createdAt": "2020-07-01T13:52:09Z", "url": "https://github.com/OpenNMS/opennms/pull/3054", "merged": true, "mergeCommit": {"oid": "b7b7b204ed66be6d98982c24aceb4893c1e64a60"}, "closed": true, "closedAt": "2020-08-05T13:17:48Z", "author": {"login": "cgorantla"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwsjF6ABqjM1MDMxODc2NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7rMOUgH2gAyNDQyNzE0NzY3OjdlMzYzZTI0Yzc2NDQ1N2IyYTg3MzJjN2FkMjkwMmI5ZTNiY2JjMjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d83f20c900fd7592df63f685c9bbef52ed9ae30", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/4d83f20c900fd7592df63f685c9bbef52ed9ae30", "committedDate": "2020-07-01T16:00:48Z", "message": "NMS-12753: Move interface to config api"}, "afterCommit": {"oid": "90adcf67a25001cd9686e7874bf54cce3d6df1de", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/90adcf67a25001cd9686e7874bf54cce3d6df1de", "committedDate": "2020-07-01T16:08:22Z", "message": "NMS-12753: Move interface to config api"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c461d05d75a0a8066060088a7b2494218bea181", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/6c461d05d75a0a8066060088a7b2494218bea181", "committedDate": "2020-07-06T16:16:14Z", "message": "NMS-12753: Add encrypted flag to denote encryption"}, "afterCommit": {"oid": "7ff92fce2873164894249617e36766944597733a", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/7ff92fce2873164894249617e36766944597733a", "committedDate": "2020-07-06T16:24:52Z", "message": "NMS-12753: Add encryption for snmp\n\nNMS-12753: Add IT\n\nNMS-12753: Move interface to config api\n\nNMS-12753: Add encrypted flag to denote encryption"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c09ac43c587a9d675ff80110f2c66681329ee57e", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/c09ac43c587a9d675ff80110f2c66681329ee57e", "committedDate": "2020-07-06T16:32:01Z", "message": "NMS-12753: Add encryption for snmp\n\nNMS-12753: Add IT\n\nNMS-12753: Move interface to config api\n\nNMS-12753: Add encrypted flag to denote encryption"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ff92fce2873164894249617e36766944597733a", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/7ff92fce2873164894249617e36766944597733a", "committedDate": "2020-07-06T16:24:52Z", "message": "NMS-12753: Add encryption for snmp\n\nNMS-12753: Add IT\n\nNMS-12753: Move interface to config api\n\nNMS-12753: Add encrypted flag to denote encryption"}, "afterCommit": {"oid": "c09ac43c587a9d675ff80110f2c66681329ee57e", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/c09ac43c587a9d675ff80110f2c66681329ee57e", "committedDate": "2020-07-06T16:32:01Z", "message": "NMS-12753: Add encryption for snmp\n\nNMS-12753: Add IT\n\nNMS-12753: Move interface to config api\n\nNMS-12753: Add encrypted flag to denote encryption"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjQ1NDEx", "url": "https://github.com/OpenNMS/opennms/pull/3054#pullrequestreview-443245411", "createdAt": "2020-07-06T16:46:38Z", "commit": {"oid": "c09ac43c587a9d675ff80110f2c66681329ee57e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo0NjozOFrOGtfRJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo0NjozOFrOGtfRJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MTM5Nw==", "bodyText": "Does this do anything?  Seems like a no-op.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r450351397", "createdAt": "2020-07-06T16:46:38Z", "author": {"login": "RangerRick"}, "path": "core/snmp/profile-mapper/src/test/java/org/opennms/core/snmp/profile/mapper/SnmpProfileMapperIT.java", "diffHunk": "@@ -121,6 +121,7 @@ public void testSnmpProfileMapperWithCustomOID() {\n         int timeout = 6000;\n         long ttl = 7000;\n         URL url = getClass().getResource(\"/snmp-config2.xml\");\n+        url.getPath().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c09ac43c587a9d675ff80110f2c66681329ee57e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjQ2Njkx", "url": "https://github.com/OpenNMS/opennms/pull/3054#pullrequestreview-443246691", "createdAt": "2020-07-06T16:48:13Z", "commit": {"oid": "c09ac43c587a9d675ff80110f2c66681329ee57e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo0ODoxNFrOGtfUwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo0ODoxNFrOGtfUwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MjMyMg==", "bodyText": "If m_encrypted is included in the hashcode above, shouldn't it be part of the equals() too?", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r450352322", "createdAt": "2020-07-06T16:48:14Z", "author": {"login": "RangerRick"}, "path": "opennms-config-jaxb/src/main/java/org/opennms/netmgt/config/snmp/Configuration.java", "diffHunk": "@@ -942,6 +957,13 @@ public boolean equals(final Object obj) {\n         } else if (!m_writeCommunity.equals(other.m_writeCommunity)) {\n             return false;\n         }\n+        if (m_ttl == null) {\n+            if (other.m_ttl != null) {\n+                return false;\n+            }\n+        } else if (!m_ttl.equals(other.m_ttl)) {\n+            return false;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c09ac43c587a9d675ff80110f2c66681329ee57e"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjQ3MzYx", "url": "https://github.com/OpenNMS/opennms/pull/3054#pullrequestreview-443247361", "createdAt": "2020-07-06T16:49:00Z", "commit": {"oid": "c09ac43c587a9d675ff80110f2c66681329ee57e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo0OTowMFrOGtfWww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo0OTowMFrOGtfWww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MjgzNQ==", "bodyText": "</p> ?  ;)", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r450352835", "createdAt": "2020-07-06T16:49:00Z", "author": {"login": "RangerRick"}, "path": "opennms-config/src/main/java/org/opennms/netmgt/config/SnmpPeerFactory.java", "diffHunk": "@@ -426,7 +443,7 @@ public SnmpConfig getSnmpConfig() {\n      * with many other attributes.  Uses new classes the wrap JAXB-generated code to\n      * help with merging, comparing, and optimizing definitions.  Thanks for your\n      * initial work on this Gerald.\n-     *\n+     * <p>\n      * Puts a specific IP address with associated read-community string into\n      * the currently loaded snmp-config.xml.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c09ac43c587a9d675ff80110f2c66681329ee57e"}, "originalPosition": 126}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c0fc64a82aa35cc34a919f37d8b5c152d1acfb4", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/5c0fc64a82aa35cc34a919f37d8b5c152d1acfb4", "committedDate": "2020-07-07T18:06:21Z", "message": "NMS-12753: Update docs, fix tests, handle review comments"}, "afterCommit": {"oid": "88abdaf332b93d657b9ec2f869b21ee652aea7e6", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/88abdaf332b93d657b9ec2f869b21ee652aea7e6", "committedDate": "2020-07-07T19:23:26Z", "message": "NMS-12753: Update docs, fix tests, handle review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60e77cdeb3c17ac02ab600e8c01712bc6a1dbf4e", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/60e77cdeb3c17ac02ab600e8c01712bc6a1dbf4e", "committedDate": "2020-07-08T12:11:12Z", "message": "NMS-12753: Handle review comments\n\nUpdate docs/tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88abdaf332b93d657b9ec2f869b21ee652aea7e6", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/88abdaf332b93d657b9ec2f869b21ee652aea7e6", "committedDate": "2020-07-07T19:23:26Z", "message": "NMS-12753: Update docs, fix tests, handle review comments"}, "afterCommit": {"oid": "60e77cdeb3c17ac02ab600e8c01712bc6a1dbf4e", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/60e77cdeb3c17ac02ab600e8c01712bc6a1dbf4e", "committedDate": "2020-07-08T12:11:12Z", "message": "NMS-12753: Handle review comments\n\nUpdate docs/tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67e7d012c771a366102c5dfe573326996ea0efeb", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/67e7d012c771a366102c5dfe573326996ea0efeb", "committedDate": "2020-07-08T18:31:50Z", "message": "NMS-12753: Update crypto policy on java for CircleCI"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42c474382b393f5c70970eae8dae31198a317baf", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/42c474382b393f5c70970eae8dae31198a317baf", "committedDate": "2020-07-08T16:43:48Z", "message": "NMS-12753: Update crypto policy on java for CircleCI"}, "afterCommit": {"oid": "67e7d012c771a366102c5dfe573326996ea0efeb", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/67e7d012c771a366102c5dfe573326996ea0efeb", "committedDate": "2020-07-08T18:31:50Z", "message": "NMS-12753: Update crypto policy on java for CircleCI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "451f4dd361d0b90312fa20cb49f6d277b9d242dc", "author": {"user": {"login": "RangerRick", "name": "Benjamin Reed"}}, "url": "https://github.com/OpenNMS/opennms/commit/451f4dd361d0b90312fa20cb49f6d277b9d242dc", "committedDate": "2020-07-08T19:00:38Z", "message": "use OpenJDK instead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa9f027a5c58972a76d2d116c3eef6260c6858ce", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/fa9f027a5c58972a76d2d116c3eef6260c6858ce", "committedDate": "2020-07-09T13:10:37Z", "message": "NMS-12753: Remove encrypt-util from opennms-config\n\nIt's already available through spring application context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95c9be595537b23a36a7a90d2d8100972ee82316", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/95c9be595537b23a36a7a90d2d8100972ee82316", "committedDate": "2020-07-13T20:28:17Z", "message": "NMS-12753: Remove persisting of key in DB, move to SCV"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODA3NzE2", "url": "https://github.com/OpenNMS/opennms/pull/3054#pullrequestreview-450807716", "createdAt": "2020-07-17T16:45:16Z", "commit": {"oid": "95c9be595537b23a36a7a90d2d8100972ee82316"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNjo0NToxN1rOGzZ87g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNjo1MzoxMVrOGzaLwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NTc1OA==", "bodyText": "Would help to explain the use of the alias and key attribute here.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r456555758", "createdAt": "2020-07-17T16:45:17Z", "author": {"login": "j-white"}, "path": "core/api/src/main/java/org/opennms/core/config/api/TextEncryptor.java", "diffHunk": "@@ -0,0 +1,37 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.core.config.api;\n+\n+public interface TextEncryptor {\n+\n+    String encrypt(String alias, String key, String text);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c9be595537b23a36a7a90d2d8100972ee82316"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NjQ4OA==", "bodyText": "I'd opt to re-throw here instead. If someone is calling encrypt I wouldn't expect it to silently fail and return a un-encrypted payload back.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r456556488", "createdAt": "2020-07-17T16:46:47Z", "author": {"login": "j-white"}, "path": "core/encrypt-util/src/main/java/org/opennms/core/text/encryptor/TextEncryptorImpl.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.core.text.encryptor;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.jasypt.util.password.StrongPasswordEncryptor;\n+import org.jasypt.util.text.AES256TextEncryptor;\n+import org.opennms.core.config.api.TextEncryptor;\n+import org.opennms.features.scv.api.Credentials;\n+import org.opennms.features.scv.api.SecureCredentialsVault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.base.Strings;\n+\n+\n+public class TextEncryptorImpl implements TextEncryptor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(TextEncryptorImpl.class);\n+    private final SecureCredentialsVault secureCredentialsVault;\n+    private Map<String, Credentials> passwordsByAlias = new ConcurrentHashMap<>();\n+\n+    public TextEncryptorImpl(SecureCredentialsVault secureCredentialsVault) {\n+        this.secureCredentialsVault = secureCredentialsVault;\n+    }\n+\n+    @Override\n+    public String encrypt(String alias, String key, String text) {\n+        try {\n+            final AES256TextEncryptor textEncryptor = new AES256TextEncryptor();\n+            String password = getPasswordFromCredentials(alias, key);\n+            if (!Strings.isNullOrEmpty(password)) {\n+                textEncryptor.setPassword(password);\n+                return textEncryptor.encrypt(text);\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"Exception while encrypting {} with key {}\", text, key, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c9be595537b23a36a7a90d2d8100972ee82316"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1NjkxMw==", "bodyText": "Similarly here.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r456556913", "createdAt": "2020-07-17T16:47:36Z", "author": {"login": "j-white"}, "path": "core/encrypt-util/src/main/java/org/opennms/core/text/encryptor/TextEncryptorImpl.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.core.text.encryptor;\n+\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.jasypt.util.password.StrongPasswordEncryptor;\n+import org.jasypt.util.text.AES256TextEncryptor;\n+import org.opennms.core.config.api.TextEncryptor;\n+import org.opennms.features.scv.api.Credentials;\n+import org.opennms.features.scv.api.SecureCredentialsVault;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.base.Strings;\n+\n+\n+public class TextEncryptorImpl implements TextEncryptor {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(TextEncryptorImpl.class);\n+    private final SecureCredentialsVault secureCredentialsVault;\n+    private Map<String, Credentials> passwordsByAlias = new ConcurrentHashMap<>();\n+\n+    public TextEncryptorImpl(SecureCredentialsVault secureCredentialsVault) {\n+        this.secureCredentialsVault = secureCredentialsVault;\n+    }\n+\n+    @Override\n+    public String encrypt(String alias, String key, String text) {\n+        try {\n+            final AES256TextEncryptor textEncryptor = new AES256TextEncryptor();\n+            String password = getPasswordFromCredentials(alias, key);\n+            if (!Strings.isNullOrEmpty(password)) {\n+                textEncryptor.setPassword(password);\n+                return textEncryptor.encrypt(text);\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"Exception while encrypting {} with key {}\", text, key, e);\n+        }\n+        return text;\n+\n+    }\n+\n+    @Override\n+    public String decrypt(String alias, String key, String encrypted) {\n+        final AES256TextEncryptor textEncryptor = new AES256TextEncryptor();\n+        try {\n+            String password = getPasswordFromCredentials(alias, key);\n+            if (!Strings.isNullOrEmpty(password)) {\n+                textEncryptor.setPassword(password);\n+                return textEncryptor.decrypt(encrypted);\n+            }\n+        } catch (Exception e) {\n+            LOG.error(\"Exception while decrypting {} with key {}\", encrypted, key, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c9be595537b23a36a7a90d2d8100972ee82316"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1Nzg5NA==", "bodyText": "What's the purpose of this override? This logic should probably be in the application context instead.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r456557894", "createdAt": "2020-07-17T16:49:35Z", "author": {"login": "j-white"}, "path": "features/scv/jceks-impl/src/main/java/org/opennms/features/scv/jceks/JCEKSSecureCredentialsVault.java", "diffHunk": "@@ -86,11 +87,15 @@ public JCEKSSecureCredentialsVault(String keystoreFile, String password, byte[]\n     }\n \n     public JCEKSSecureCredentialsVault(String keystoreFile, String password, byte[] salt, int iterationCount, int keyLength) {\n-        m_password = Objects.requireNonNull(password).toCharArray();\n         m_salt = Objects.requireNonNull(salt);\n         m_iterationCount = iterationCount;\n         m_keyLength = keyLength;\n         m_keystoreFile = new File(keystoreFile);\n+        String keyFromProperties = System.getProperty(SCV_KEY_PROPERTY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c9be595537b23a36a7a90d2d8100972ee82316"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU1OTU1NA==", "bodyText": "Requiring the key set via a system property and storing it directly on the file-system negates the benefit subsequently storing it in SCV.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r456559554", "createdAt": "2020-07-17T16:53:11Z", "author": {"login": "j-white"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,17 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n+\n+==== Enabling encrypting on SNMP Config\n+\n+Specifying a key for encryption would enable encryption on SNMP config.\n+[source, sh]\n+----\n+echo 'org.opennms.snmp.encryption.key=abc12345' >> \"$OPENNMS_HOME/etc/opennms.properties.d/snmp-encryption.properties\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95c9be595537b23a36a7a90d2d8100972ee82316"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56e704cdfddfe17c711476aa30a75bdb1630cdf9", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/56e704cdfddfe17c711476aa30a75bdb1630cdf9", "committedDate": "2020-07-17T22:07:25Z", "message": "NMS-12753: Handle review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/8531172fb01152bb4614b497b59625cc903ccef3", "committedDate": "2020-07-20T01:28:29Z", "message": "NMS-12753: Disable compAttribList check as it seems different across JDKs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDUzNTM2", "url": "https://github.com/OpenNMS/opennms/pull/3054#pullrequestreview-454453536", "createdAt": "2020-07-23T20:00:54Z", "commit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMDowMDo1NFrOG2ZjeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxODozMTowN1rOG25qrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY5NDk2OA==", "bodyText": "Nit: We can skip the catch statement all together - the method already  throws IOException and the test will fail if thrown.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r459694968", "createdAt": "2020-07-23T20:00:54Z", "author": {"login": "j-white"}, "path": "opennms-config/src/test/java/org/opennms/netmgt/config/SnmpEncryptionIT.java", "diffHunk": "@@ -0,0 +1,129 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.netmgt.config;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+import static org.opennms.netmgt.config.SnmpPeerFactory.ENCRYPTION_ENABLED;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.net.URL;\n+import java.util.Arrays;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.opennms.core.config.api.TextEncryptor;\n+import org.opennms.core.text.encryptor.TextEncryptorImpl;\n+import org.opennms.core.utils.InetAddressUtils;\n+import org.opennms.core.xml.JaxbUtils;\n+import org.opennms.features.scv.api.SecureCredentialsVault;\n+import org.opennms.features.scv.jceks.JCEKSSecureCredentialsVault;\n+import org.opennms.netmgt.config.snmp.Definition;\n+import org.opennms.netmgt.config.snmp.SnmpConfig;\n+import org.opennms.netmgt.snmp.SnmpAgentConfig;\n+import org.springframework.core.io.InputStreamResource;\n+\n+public class SnmpEncryptionIT {\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    static {\n+        System.setProperty(ENCRYPTION_ENABLED, \"true\");\n+    }\n+\n+    private SnmpPeerFactory snmpPeerFactory;\n+\n+    @Test\n+    public void testEncryption() throws IOException {\n+        URL url = getClass().getResource(\"/snmp-config.xml\");\n+        try (InputStream configStream = url.openStream()) {\n+            snmpPeerFactory = new SnmpPeerFactory(new InputStreamResource(configStream));\n+            snmpPeerFactory.setEncryptionKey(\"OpenNMS-SNMP-Encryption-Key\");\n+            SnmpPeerFactory.setFile(new File(url.getFile()));\n+            // Check if encryption is enabled\n+            assertTrue(snmpPeerFactory.getEncryptionEnabled());\n+            File keystoreFile = new File(tempFolder.getRoot(), \"scv.jce\");\n+            SecureCredentialsVault scv = new JCEKSSecureCredentialsVault(keystoreFile.getAbsolutePath(), \"notRealPassword\");\n+            TextEncryptor textEncryptor = new TextEncryptorImpl(scv);\n+            snmpPeerFactory.setTextEncryptor(textEncryptor);\n+            // Check that it is loaded from test resource.\n+            assertEquals(snmpPeerFactory.getSnmpConfig().getReadCommunity(), \"minion\");\n+            assertTrue(snmpPeerFactory.getSnmpConfig().getDefinitions().isEmpty());\n+            Definition definition = new Definition();\n+            definition.setSpecifics(Arrays.asList(\"127.0.0.1\"));\n+            definition.setReadCommunity(\"Sentinel\");\n+            definition.setWriteCommunity(\"Alec\");\n+            definition.setAuthPassphrase(\"OpenNMS\");\n+            definition.setPrivacyPassphrase(\"Minion\");\n+            snmpPeerFactory.saveDefinition(definition);\n+            snmpPeerFactory.saveCurrent();\n+            String configAsString = snmpPeerFactory.getSnmpConfigAsString();\n+            SnmpConfig config = JaxbUtils.unmarshal(SnmpConfig.class, configAsString);\n+            // Verify that marshalled strings are different from actual\n+            assertEquals(config.getDefinitions().size(), 1);\n+            config.getDefinitions().forEach(def -> {\n+                assertNotEquals(def.getAuthPassphrase(), \"OpenNMS\");\n+                assertNotEquals(def.getReadCommunity(), \"Sentinel\");\n+                assertNotEquals(def.getWriteCommunity(), \"Alec\");\n+            });\n+            // Getting config should always resolve to actual strings.\n+            config = snmpPeerFactory.getSnmpConfig();\n+            config.getDefinitions().forEach(def -> {\n+                assertEquals(\"OpenNMS\", def.getAuthPassphrase());\n+                assertEquals(\"Sentinel\", def.getReadCommunity());\n+                assertEquals(\"Alec\", def.getWriteCommunity());\n+            });\n+            SnmpAgentConfig agentConfig = snmpPeerFactory.getAgentConfig(InetAddressUtils.getInetAddress(\"127.0.0.1\"));\n+            assertEquals(\"OpenNMS\", agentConfig.getAuthPassPhrase());\n+            assertEquals(\"Minion\", agentConfig.getPrivPassPhrase());\n+\n+            // Test saving from SnmpEventInfo.\n+            SnmpEventInfo info = new SnmpEventInfo();\n+            info.setVersion(\"v1\");\n+            info.setReadCommunityString(\"snmp1\");\n+            info.setWriteCommunityString(\"snmp2\");\n+            info.setFirstIPAddress(\"127.0.0.2\");\n+            info.setLastIPAddress(\"127.0.0.9\");\n+            snmpPeerFactory.define(info);\n+            snmpPeerFactory.saveCurrent();\n+            agentConfig = snmpPeerFactory.getAgentConfig(InetAddressUtils.getInetAddress(\"127.0.0.5\"));\n+            assertEquals(\"snmp1\", agentConfig.getReadCommunity());\n+            assertEquals(\"snmp2\", agentConfig.getWriteCommunity());\n+        } catch (IOException e) {\n+            fail(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwMjczNw==", "bodyText": "@Bonrob2 can you think of a better place to put this?", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r460202737", "createdAt": "2020-07-24T17:52:38Z", "author": {"login": "j-white"}, "path": "opennms-doc/guide-admin/src/asciidoc/index.adoc", "diffHunk": "@@ -399,6 +399,10 @@ include::text/alarm-correlation/situation-feedback.adoc[]\n == Meta-Data\n include::text/meta-data.adoc[]\n \n+[[ga-snmp-encryption]]\n+== Snmp Encryption\n+include::text/snmp/snmp-encryption.adoc[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwNjk1NQ==", "bodyText": "No Spring context is used here.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r460206955", "createdAt": "2020-07-24T18:01:14Z", "author": {"login": "j-white"}, "path": "core/encrypt-util/src/test/java/org/opennms/core/text/encryptor/TextEncryptorTest.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.core.text.encryptor;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import java.io.File;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.opennms.core.config.api.TextEncryptor;\n+import org.opennms.features.scv.api.Credentials;\n+import org.opennms.features.scv.api.SecureCredentialsVault;\n+import org.opennms.features.scv.jceks.JCEKSSecureCredentialsVault;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+\n+public class TextEncryptorTest {\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    @Autowired", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIxMDEzMw==", "bodyText": "I find the use of the encryptionKey here a little confusing.\nWe hash the key with some salt using StrongPasswordEncryptor to generate a unique password - this password is stored in SCV and we subsequently use that to encrypt/decrypt the payload.\nIf we call decrypt after encrypt with a given key, the key is ignored (since the actual password is retrieved from SCV).\nIf we call encrypt with a different key, but the same alias, then original key is still used.\nGiven this, it seems like the key can be dropped completed and we can just generate a random password for a given alias and store/retrieve this in SCV.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r460210133", "createdAt": "2020-07-24T18:07:58Z", "author": {"login": "j-white"}, "path": "core/api/src/main/java/org/opennms/core/config/api/TextEncryptor.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.core.config.api;\n+\n+/**\n+ * For a given context/alias, encrypt/decrypt text with specified encryptionKey.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyMDg4NQ==", "bodyText": "Would be good to document how the key used to encrypt/decrypt the attributes is managed, the fact that the key is stored in SCV and what alias the key is stored under.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r460220885", "createdAt": "2020-07-24T18:30:37Z", "author": {"login": "j-white"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n+\n+==== Enabling encrypting on SNMP Config\n+\n+Enable encryption on SNMP config by setting following system property.\n+[source, sh]\n+----\n+echo 'org.opennms.snmp.encryption.enabled=true' >> \"$OPENNMS_HOME/etc/opennms.properties.d/snmp-encryption.properties\"\n+----\n+\n+SNMP config that is modified on User Interface will be encrypted directly on file system.\n+Config that is updated on the file system needs to be saved with karaf command `opennms-snmp:save-config` to get encrypted.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIyMTEwMQ==", "bodyText": "this.m_", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r460221101", "createdAt": "2020-07-24T18:31:07Z", "author": {"login": "j-white"}, "path": "opennms-config-jaxb/src/main/java/org/opennms/netmgt/config/snmp/Configuration.java", "diffHunk": "@@ -763,6 +767,15 @@ public void setTTL(Long ttl) {\n         m_ttl = ttl;\n     }\n \n+\n+    public Boolean getEncrypted() {\n+        return m_encrypted != null ? m_encrypted : false;\n+    }\n+\n+    public void setEncrypted(Boolean encrypted) {\n+        this.m_encrypted = encrypted;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49c32636b4bea0c6c0c96312cc223a5031c5e83c", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/49c32636b4bea0c6c0c96312cc223a5031c5e83c", "committedDate": "2020-08-04T13:43:56Z", "message": "NMS-12753: Handle review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwOTgwNTE1", "url": "https://github.com/OpenNMS/opennms/pull/3054#pullrequestreview-460980515", "createdAt": "2020-08-04T16:32:56Z", "commit": {"oid": "49c32636b4bea0c6c0c96312cc223a5031c5e83c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMDE1Nzg3", "url": "https://github.com/OpenNMS/opennms/pull/3054#pullrequestreview-461015787", "createdAt": "2020-08-04T17:19:32Z", "commit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzoxOTozMlrOG7qBSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODoyMDo1M1rOG7sI2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwNzYyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n          \n          \n            \n            You can save SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase on the file system in encrypted format.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465207624", "createdAt": "2020-08-04T17:19:32Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwNzgzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ==== Enabling encrypting on SNMP Config\n          \n          \n            \n            ==== Enabling Encryption on SNMP Config", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465207839", "createdAt": "2020-08-04T17:19:54Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n+\n+==== Enabling encrypting on SNMP Config", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwNzk4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Enable encryption on SNMP config by setting following system property.\n          \n          \n            \n            Enable encryption on SNMP config by setting the following system property:", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465207987", "createdAt": "2020-08-04T17:20:10Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n+\n+==== Enabling encrypting on SNMP Config\n+\n+Enable encryption on SNMP config by setting following system property.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwODM2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            SNMP config that is modified on User Interface will be encrypted directly on file system.\n          \n          \n            \n            SNMP config that is modified through the user interface will be encrypted directly on the file system.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465208365", "createdAt": "2020-08-04T17:20:50Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n+\n+==== Enabling encrypting on SNMP Config\n+\n+Enable encryption on SNMP config by setting following system property.\n+[source, sh]\n+----\n+echo 'org.opennms.snmp.encryption.enabled=true' >> \"$OPENNMS_HOME/etc/opennms.properties.d/snmp-encryption.properties\"\n+----\n+\n+SNMP config that is modified on User Interface will be encrypted directly on file system.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwODYzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Config that is updated on the file system needs to be saved with karaf command `opennms-snmp:save-config` to get encrypted.\n          \n          \n            \n            Config that is updated on the file system needs to be saved with Karaf command `opennms-snmp:save-config` to get encrypted.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465208638", "createdAt": "2020-08-04T17:21:20Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n+\n+==== Enabling encrypting on SNMP Config\n+\n+Enable encryption on SNMP config by setting following system property.\n+[source, sh]\n+----\n+echo 'org.opennms.snmp.encryption.enabled=true' >> \"$OPENNMS_HOME/etc/opennms.properties.d/snmp-encryption.properties\"\n+----\n+\n+SNMP config that is modified on User Interface will be encrypted directly on file system.\n+Config that is updated on the file system needs to be saved with karaf command `opennms-snmp:save-config` to get encrypted.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwODgwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE:  Currently, SNMP config encryption is not supported on the snmp profiles.\n          \n          \n            \n            NOTE: Currently, SNMP config encryption is not supported on the SNMP profiles.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465208807", "createdAt": "2020-08-04T17:21:40Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n+\n+==== Enabling encrypting on SNMP Config\n+\n+Enable encryption on SNMP config by setting following system property.\n+[source, sh]\n+----\n+echo 'org.opennms.snmp.encryption.enabled=true' >> \"$OPENNMS_HOME/etc/opennms.properties.d/snmp-encryption.properties\"\n+----\n+\n+SNMP config that is modified on User Interface will be encrypted directly on file system.\n+Config that is updated on the file system needs to be saved with karaf command `opennms-snmp:save-config` to get encrypted.\n+\n+NOTE:  Currently, SNMP config encryption is not supported on the snmp profiles.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwODk3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            NOTE:  Encryption Utils needs https://www.oracle.com/java/technologies/javase-jce-all-downloads.html[JCE] (Java Cryptography Extension) enabled on the JDK.\n          \n          \n            \n            NOTE: Encryption Utils needs https://www.oracle.com/java/technologies/javase-jce-all-downloads.html[JCE] (Java Cryptography Extension) enabled on the JDK.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465208974", "createdAt": "2020-08-04T17:21:59Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/snmp/snmp-encryption.adoc", "diffHunk": "@@ -0,0 +1,19 @@\n+\n+=== Encrypting SNMP Credentials\n+\n+SNMP credentials like readCommunity/WriteCommunity, authPassPhrase/privPassPhrase can be saved on the file system in encrypted format.\n+\n+==== Enabling encrypting on SNMP Config\n+\n+Enable encryption on SNMP config by setting following system property.\n+[source, sh]\n+----\n+echo 'org.opennms.snmp.encryption.enabled=true' >> \"$OPENNMS_HOME/etc/opennms.properties.d/snmp-encryption.properties\"\n+----\n+\n+SNMP config that is modified on User Interface will be encrypted directly on file system.\n+Config that is updated on the file system needs to be saved with karaf command `opennms-snmp:save-config` to get encrypted.\n+\n+NOTE:  Currently, SNMP config encryption is not supported on the snmp profiles.\n+\n+NOTE:  Encryption Utils needs https://www.oracle.com/java/technologies/javase-jce-all-downloads.html[JCE] (Java Cryptography Extension) enabled on the JDK.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0MTczOA==", "bodyText": "Spoke with Chandra, and I think we agree it should go in 10.3.1. Provisioning the SNMP Configuration.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465241738", "createdAt": "2020-08-04T18:19:51Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/index.adoc", "diffHunk": "@@ -399,6 +399,10 @@ include::text/alarm-correlation/situation-feedback.adoc[]\n == Meta-Data\n include::text/meta-data.adoc[]\n \n+[[ga-snmp-encryption]]\n+== Snmp Encryption\n+include::text/snmp/snmp-encryption.adoc[]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDIwMjczNw=="}, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0MTg0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            == Snmp Encryption\n          \n          \n            \n            == SNMP Encryption", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465241849", "createdAt": "2020-08-04T18:20:02Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/index.adoc", "diffHunk": "@@ -399,6 +399,10 @@ include::text/alarm-correlation/situation-feedback.adoc[]\n == Meta-Data\n include::text/meta-data.adoc[]\n \n+[[ga-snmp-encryption]]\n+== Snmp Encryption", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0MjMzMA==", "bodyText": "And move to the end of section 10.3.1: Provisioning the SNMP Configuration.", "url": "https://github.com/OpenNMS/opennms/pull/3054#discussion_r465242330", "createdAt": "2020-08-04T18:20:53Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/index.adoc", "diffHunk": "@@ -399,6 +399,10 @@ include::text/alarm-correlation/situation-feedback.adoc[]\n == Meta-Data\n include::text/meta-data.adoc[]\n \n+[[ga-snmp-encryption]]\n+== Snmp Encryption", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0MTg0OQ=="}, "originalCommit": {"oid": "8531172fb01152bb4614b497b59625cc903ccef3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e363e24c764457b2a8732c7ad2902b9e3bcbc20", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/7e363e24c764457b2a8732c7ad2902b9e3bcbc20", "committedDate": "2020-08-04T18:46:53Z", "message": "NMS-12753: Address doc review comments [ci skip]"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3471, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}