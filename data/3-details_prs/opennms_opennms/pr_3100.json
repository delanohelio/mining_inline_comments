{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MDkzMTYw", "number": 3100, "title": "NMS-12838: Add events for new Application Model", "bodyText": "Adds events for creation, changing and deletion of an application.\nRemoves POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI\n\nJIRA: https://issues.opennms.org/browse/NMS-12838", "createdAt": "2020-08-06T15:16:12Z", "url": "https://github.com/OpenNMS/opennms/pull/3100", "merged": true, "mergeCommit": {"oid": "c39cf6d27fa5215ec3b6c359c8c74aea02ca7094"}, "closed": true, "closedAt": "2020-08-18T10:32:25Z", "author": {"login": "patrick-schweizer"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8ep6OAFqTQ2MzA2NjU1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAEgKRgFqTQ2OTE5NjU3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMDY2NTUw", "url": "https://github.com/OpenNMS/opennms/pull/3100#pullrequestreview-463066550", "createdAt": "2020-08-07T06:34:38Z", "commit": {"oid": "0d23955e2e31133b384ead8a37e8feb7e6c03198"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjozNDozOVrOG9OK6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNjo0Mjo1MlrOG9OW5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0ODQ4OA==", "bodyText": "We need something similar here, that reacts to APPLICATION_CREATED_EVENT_UEI, APPLICATION_DELETED_EVENT_UEI and APPLICATION_CHANGED_EVENT_UEI and creates / reschedule / cancels only the affected and not the entire set of polling jobs, e.g. handleConfigurationChangedForApplication().", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r466848488", "createdAt": "2020-08-07T06:34:39Z", "author": {"login": "christianpape"}, "path": "features/remotepollerng/daemon/src/main/java/org/opennms/netmgt/remotepollerng/RemotePollerd.java", "diffHunk": "@@ -498,15 +496,4 @@ public void afterPropertiesSet() throws Exception {\n     public void reloadDaemonConfig(final IEvent e) {\n         DaemonTools.handleReloadEvent(e, RemotePollerd.NAME, (event) -> handleConfigurationChanged());\n     }\n-\n-    @EventHandler(uei = EventConstants.POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI)\n-    public void reloadDaemonConfigForLocation(final IEvent e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d23955e2e31133b384ead8a37e8feb7e6c03198"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg0OTAwNw==", "bodyText": "see above, the behavior for the partial reschedule of jobs for an application should be tested here.", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r466849007", "createdAt": "2020-08-07T06:35:55Z", "author": {"login": "christianpape"}, "path": "features/remotepollerng/daemon/src/test/java/org/opennms/netmgt/remotepollerng/RemotePollerdIT.java", "diffHunk": "@@ -208,9 +208,10 @@ private void changePollingPackages(final String locationName, final String ... p\n     }\n \n     private void sendPollingPackageAssociationChanged(final String locationName) {\n-        final EventBuilder ebldr = new EventBuilder(EventConstants.POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI, \"test\");\n-        ebldr.addParam(EventConstants.PARM_LOCATION, locationName);\n-        this.eventIpcManager.sendNow(ebldr.getEvent());\n+        // TODO Patrick: do we need to send a different event?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d23955e2e31133b384ead8a37e8feb7e6c03198"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg1MTU1Nw==", "bodyText": "There are events sent for creation and deletion of an application but not for changing an application, right? Or am I missing something?", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r466851557", "createdAt": "2020-08-07T06:42:52Z", "author": {"login": "christianpape"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v2/ApplicationRestService.java", "diffHunk": "@@ -58,8 +68,17 @@\n @Transactional\n public class ApplicationRestService extends AbstractDaoRestService<OnmsApplication,OnmsApplication,Integer,Integer> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d23955e2e31133b384ead8a37e8feb7e6c03198"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1ODg0NjE3", "url": "https://github.com/OpenNMS/opennms/pull/3100#pullrequestreview-465884617", "createdAt": "2020-08-12T12:52:01Z", "commit": {"oid": "0d23955e2e31133b384ead8a37e8feb7e6c03198"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d23955e2e31133b384ead8a37e8feb7e6c03198", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/0d23955e2e31133b384ead8a37e8feb7e6c03198", "committedDate": "2020-08-06T15:50:30Z", "message": "NMS-12838: Add events for new Application Model: fixed spelling"}, "afterCommit": {"oid": "41f1a24ecdeb631207c0358516052629fbf01ca6", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/41f1a24ecdeb631207c0358516052629fbf01ca6", "committedDate": "2020-08-12T20:41:55Z", "message": "NMS-12838: Add events for new Application Model: fixed spelling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a126da7bf02bf5c596c224b4fd0bbafc61519496", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/a126da7bf02bf5c596c224b4fd0bbafc61519496", "committedDate": "2020-08-13T15:22:18Z", "message": "NMS-12838: Add events for new Application Model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "749aa38d741be90fd5d51d0f6448f30a9b3da742", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/749aa38d741be90fd5d51d0f6448f30a9b3da742", "committedDate": "2020-08-13T15:22:18Z", "message": "NMS-12838: Add events for new Application Model: remove POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d40196482025e4b52f5368118aee72ef72ce1153", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/d40196482025e4b52f5368118aee72ef72ce1153", "committedDate": "2020-08-13T15:22:18Z", "message": "NMS-12838: Add events for new Application Model: implement events in ApplicationRestService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb290eda33cfdfded7c707934f626b0bd755fa08", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/fb290eda33cfdfded7c707934f626b0bd755fa08", "committedDate": "2020-08-13T15:22:18Z", "message": "NMS-12838: Add events for new Application Model: add missing copyright"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de18ee56c66eca3f60cf422e837bac1c02dbf097", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/de18ee56c66eca3f60cf422e837bac1c02dbf097", "committedDate": "2020-08-13T15:22:18Z", "message": "NMS-12838: Add events for new Application Model: fixed spelling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/41449fbd486b91ddf45b93f74c33fa0872716666", "committedDate": "2020-08-13T15:22:18Z", "message": "NMS-12842: Remote Poller: add remote outages to UI: add events to more places."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41f1a24ecdeb631207c0358516052629fbf01ca6", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/41f1a24ecdeb631207c0358516052629fbf01ca6", "committedDate": "2020-08-12T20:41:55Z", "message": "NMS-12838: Add events for new Application Model: fixed spelling"}, "afterCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/41449fbd486b91ddf45b93f74c33fa0872716666", "committedDate": "2020-08-13T15:22:18Z", "message": "NMS-12842: Remote Poller: add remote outages to UI: add events to more places."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDU3MTg2", "url": "https://github.com/OpenNMS/opennms/pull/3100#pullrequestreview-467057186", "createdAt": "2020-08-13T19:12:56Z", "commit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOToxMjo1N1rOHAZ8cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOToyNToyMVrOHAaaEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE4NzEyMA==", "bodyText": "Better call it sendEvent, 'sent' is past.", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r470187120", "createdAt": "2020-08-13T19:12:57Z", "author": {"login": "christianpape"}, "path": "opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultAdminApplicationService.java", "diffHunk": "@@ -307,12 +325,25 @@ public void performEditLocations(final String applicationIdString, final String\n         }\n     }\n \n+    private void sentEvent(final OnmsApplication application, final String uei) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5MDQyOA==", "bodyText": "Same must be done in the performEditLocations() method, since the application is also saved there.", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r470190428", "createdAt": "2020-08-13T19:18:20Z", "author": {"login": "christianpape"}, "path": "opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultAdminApplicationService.java", "diffHunk": "@@ -203,9 +219,10 @@ public void performEditServices(String applicationIdString, String editAction, S\n                 \n                 service.addApplication(application);\n                 m_monitoredServiceDao.save(service);\n+                sentEvent(application, EventConstants.APPLICATION_CHANGED_EVENT_UEI);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5MDY5NA==", "bodyText": "Same must be done in the performEditLocations() method, since the application is also saved there.", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r470190694", "createdAt": "2020-08-13T19:18:48Z", "author": {"login": "christianpape"}, "path": "opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultAdminApplicationService.java", "diffHunk": "@@ -237,6 +254,7 @@ public void performEditServices(String applicationIdString, String editAction, S\n             }\n \n             m_applicationDao.save(application);\n+            sentEvent(application, EventConstants.APPLICATION_CHANGED_EVENT_UEI);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5MTgwMg==", "bodyText": "Same here 'sendEvent' is better.", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r470191802", "createdAt": "2020-08-13T19:20:36Z", "author": {"login": "christianpape"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v2/ApplicationRestService.java", "diffHunk": "@@ -104,11 +123,25 @@ protected OnmsApplication doGet(UriInfo uriInfo, Integer id) {\n     @Override\n     public Response doCreate(final SecurityContext securityContext, final UriInfo uriInfo, final OnmsApplication object) {\n         final Integer id = getDao().save(object);\n+        sentEvent(object, EventConstants.APPLICATION_CREATED_EVENT_UEI);\n         return Response.created(RedirectHelper.getRedirectUri(uriInfo, id)).build();\n     }\n \n     @Override\n     protected void doDelete(SecurityContext securityContext, UriInfo uriInfo, OnmsApplication object) {\n         getDao().delete(object);\n+        sentEvent(object, EventConstants.APPLICATION_DELETED_EVENT_UEI);\n+    }\n+\n+    private void sentEvent(final OnmsApplication application, final String uei) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5MjIyNw==", "bodyText": "shouldSendEvents...", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r470192227", "createdAt": "2020-08-13T19:21:27Z", "author": {"login": "christianpape"}, "path": "opennms-web-api/src/test/java/org/opennms/web/svclayer/support/DefaultAdminApplicationServiceTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2006-2014 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.web.svclayer.support;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Matchers.anyInt;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n+\n+import org.junit.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Mockito;\n+import org.opennms.netmgt.dao.api.ApplicationDao;\n+import org.opennms.netmgt.dao.api.MonitoredServiceDao;\n+import org.opennms.netmgt.dao.mock.MockApplicationDao;\n+import org.opennms.netmgt.events.api.EventConstants;\n+import org.opennms.netmgt.events.api.EventProxy;\n+import org.opennms.netmgt.events.api.EventProxyException;\n+import org.opennms.netmgt.model.OnmsMonitoredService;\n+import org.opennms.netmgt.xml.event.Event;\n+\n+public class DefaultAdminApplicationServiceTest {\n+\n+    @Test\n+    public void shouldSentEventsForApplication() throws EventProxyException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5Mzc4Mw==", "bodyText": "Why not static?", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r470193783", "createdAt": "2020-08-13T19:23:53Z", "author": {"login": "christianpape"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v2/ApplicationEventUtil.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2008-2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.web.rest.v2;\n+\n+import static org.opennms.netmgt.events.api.EventConstants.APPLICATION_CHANGED_EVENT_UEI;\n+import static org.opennms.netmgt.events.api.EventConstants.PARM_APPLICATION_ID;\n+import static org.opennms.netmgt.events.api.EventConstants.PARM_APPLICATION_NAME;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.opennms.netmgt.model.OnmsApplication;\n+import org.opennms.netmgt.model.events.EventBuilder;\n+import org.opennms.netmgt.xml.event.Event;\n+\n+public class ApplicationEventUtil {\n+\n+    public List<Event> getApplicationChangedEvents(final Collection<OnmsApplication> applications) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5NDI0Mw==", "bodyText": "Is there a reason why the method is not static?", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r470194243", "createdAt": "2020-08-13T19:24:36Z", "author": {"login": "christianpape"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v2/NodeMonitoredServiceRestService.java", "diffHunk": "@@ -159,6 +164,8 @@ protected Response doCreate(SecurityContext securityContext, UriInfo uriInfo, On\n         final Event e = EventUtils.createNodeGainedServiceEvent(\"ReST\", iface.getNode().getId(), iface.getIpAddress(), service.getServiceName(), iface.getNode().getLabel(),\n                                                                 iface.getNode().getLabelSource(), iface.getNode().getSysName(), iface.getNode().getSysDescription());\n         sendEvent(e);\n+        new ApplicationEventUtil().getApplicationChangedEvents(service.getApplications()).forEach(this::sendEvent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE5NDcwNQ==", "bodyText": "Again, use 'send' instead of 'sent'", "url": "https://github.com/OpenNMS/opennms/pull/3100#discussion_r470194705", "createdAt": "2020-08-13T19:25:21Z", "author": {"login": "christianpape"}, "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v2/ApplicationRestServiceTest.java", "diffHunk": "@@ -0,0 +1,258 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2008-2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.web.rest.v2;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.lang.reflect.Method;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.Map;\n+\n+import javax.ws.rs.core.SecurityContext;\n+import javax.ws.rs.core.UriBuilder;\n+import javax.ws.rs.core.UriBuilderException;\n+import javax.ws.rs.core.UriInfo;\n+\n+import org.junit.Test;\n+import org.mockito.ArgumentCaptor;\n+import org.opennms.netmgt.dao.api.ApplicationDao;\n+import org.opennms.netmgt.dao.mock.MockApplicationDao;\n+import org.opennms.netmgt.events.api.EventConstants;\n+import org.opennms.netmgt.events.api.EventProxy;\n+import org.opennms.netmgt.events.api.EventProxyException;\n+import org.opennms.netmgt.model.OnmsApplication;\n+import org.opennms.netmgt.xml.event.Event;\n+\n+public class ApplicationRestServiceTest {\n+    @Test\n+    public void shouldSentEvents() throws EventProxyException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41449fbd486b91ddf45b93f74c33fa0872716666"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcd4afd666bd3828d0b8dc8c27f97308835de19e", "author": {"user": {"login": "patrick-schweizer", "name": "Patrick Schweizer"}}, "url": "https://github.com/OpenNMS/opennms/commit/dcd4afd666bd3828d0b8dc8c27f97308835de19e", "committedDate": "2020-08-14T00:49:32Z", "message": "NMS-12842: Remote Poller: add remote outages to UI: address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MTk2NTc4", "url": "https://github.com/OpenNMS/opennms/pull/3100#pullrequestreview-469196578", "createdAt": "2020-08-18T10:31:59Z", "commit": {"oid": "dcd4afd666bd3828d0b8dc8c27f97308835de19e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3501, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}