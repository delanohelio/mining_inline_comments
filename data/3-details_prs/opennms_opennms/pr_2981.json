{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTQzNjkx", "number": 2981, "title": "NMS-12661: Fix collection set building for ResponseTime resources", "bodyText": "External References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12661\nBamboo (Continuous Integration): https://bamboo.opennms.org/", "createdAt": "2020-04-20T15:44:30Z", "url": "https://github.com/OpenNMS/opennms/pull/2981", "merged": true, "mergeCommit": {"oid": "55d1e26de2db75978b2201adad175a38e3112fe0"}, "closed": true, "closedAt": "2020-04-21T17:39:41Z", "author": {"login": "cgorantla"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZV446AH2gAyNDA2MTQzNjkxOmQ3ZTI2MTlhOGIwNzU5Y2FkNWZkNWFjNTk2NjRlMDhmNTg1NDkzZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZ21xqAFqTM5NzUwMzk2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d7e2619a8b0759cad5fd5ac59664e08f585493d1", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/d7e2619a8b0759cad5fd5ac59664e08f585493d1", "committedDate": "2020-04-20T02:44:20Z", "message": "NMS-12661: Fix collection set building for ResponseTime resources"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NjUxNDk1", "url": "https://github.com/OpenNMS/opennms/pull/2981#pullrequestreview-396651495", "createdAt": "2020-04-20T17:12:23Z", "commit": {"oid": "d7e2619a8b0759cad5fd5ac59664e08f585493d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoxMjoyM1rOGIe8Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoxMjoyM1rOGIe8Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0ODY3NQ==", "bodyText": "Can we move this to the org.opennms.netmgt.collection.support.builder package? Would be useful there so we could reuse it.", "url": "https://github.com/OpenNMS/opennms/pull/2981#discussion_r411548675", "createdAt": "2020-04-20T17:12:23Z", "author": {"login": "j-white"}, "path": "features/kafka/producer/src/test/java/org/opennms/features/kafka/producer/collection/KafkaPersisterIT.java", "diffHunk": "@@ -136,16 +141,65 @@ public void testKafkaCollection() throws IOException {\n         OnmsNode node = databasePopulator.getNode5();\n         CollectionAgent agent = new MockCollectionAgent(node.getId(), \"test\", InetAddress.getLocalHost());\n         NodeLevelResource nodeResource = new NodeLevelResource(node.getId());\n+\n         CollectionSet collectionSet = new CollectionSetBuilder(agent).withTimestamp(new Date(2))\n                 .withNumericAttribute(nodeResource, \"group1\", \"node5\", 105, AttributeType.GAUGE)\n-                .withNumericAttribute(nodeResource, \"group2\", \"node5\", 1050, AttributeType.GAUGE).build();\n+                .withNumericAttribute(nodeResource, \"group2\", \"node5\", 1050, AttributeType.GAUGE)\n+                .withNumericAttribute(new ResponseTimeResource(), \"ICMP\", \"ICMP\", 120, AttributeType.GAUGE).build();\n         persister.visitCollectionSet(collectionSet);\n         \n-        await().atMost(1, TimeUnit.MINUTES).pollInterval(15, TimeUnit.SECONDS).until(() -> kafkaConsumer.getCollectionSet(), not(nullValue()));\n-        assertThat(kafkaConsumer.getCollectionSet().getResource(0).getNode().getNodeId(), equalTo(node.getId().longValue()));\n-        assertThat(kafkaConsumer.getCollectionSet().getResource(0).getNumericCount(), equalTo(2));\n-        assertThat(kafkaConsumer.getCollectionSet().getResource(0).getNumeric(1).getValue(), equalTo(1050.0));\n+        await().atMost(1, TimeUnit.MINUTES).pollInterval(15, TimeUnit.SECONDS).until(() -> kafkaConsumer.getCollectionSetValues(), not(Matchers.empty()));\n+        assertThat(kafkaConsumer.getCollectionSetValues().get(0).getResource(0).getNode().getNodeId(), equalTo(node.getId().longValue()));\n+        assertThat(kafkaConsumer.getCollectionSetValues().get(0).getResource(0).getNumericCount(), equalTo(2));\n+        assertThat(kafkaConsumer.getCollectionSetValues().get(0).getResource(1).getResponse().getInstance(), equalTo(IP_ADDRESS));\n+\n+    }\n+\n+    private class ResponseTimeResource implements Resource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7e2619a8b0759cad5fd5ac59664e08f585493d1"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce62468894635f9b3a8297e0a748a4927d7ebd0c", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/ce62468894635f9b3a8297e0a748a4927d7ebd0c", "committedDate": "2020-04-20T21:42:59Z", "message": "NMS-12661: Update test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTAzOTY4", "url": "https://github.com/OpenNMS/opennms/pull/2981#pullrequestreview-397503968", "createdAt": "2020-04-21T17:07:48Z", "commit": {"oid": "ce62468894635f9b3a8297e0a748a4927d7ebd0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3599, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}