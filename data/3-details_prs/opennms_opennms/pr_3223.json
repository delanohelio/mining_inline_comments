{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NzU0MTUw", "number": 3223, "title": "NMS-13015: Fix NPE while dequeing", "bodyText": "External References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-13015", "createdAt": "2020-11-24T20:28:52Z", "url": "https://github.com/OpenNMS/opennms/pull/3223", "merged": true, "mergeCommit": {"oid": "02879724d44ff5f485f4088cc18931af7e28dfb7"}, "closed": true, "closedAt": "2020-11-25T15:09:07Z", "author": {"login": "cgorantla"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfvvsNgH2gAyNTI2NzU0MTUwOjBhODA5Y2NkNzI5ZjQ2YTcyZDM4MGQ5MDVlNzlkYjk3Y2RmZDJiYzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfxIBiAFqTUzODAwNDMyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0a809ccd729f46a72d380d905e79db97cdfd2bc4", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/0a809ccd729f46a72d380d905e79db97cdfd2bc4", "committedDate": "2020-11-24T20:26:31Z", "message": "NMS-13015: Fix NPE when dequeing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3OTg5OTYz", "url": "https://github.com/OpenNMS/opennms/pull/3223#pullrequestreview-537989963", "createdAt": "2020-11-24T21:46:20Z", "commit": {"oid": "0a809ccd729f46a72d380d905e79db97cdfd2bc4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDA0MzI2", "url": "https://github.com/OpenNMS/opennms/pull/3223#pullrequestreview-538004326", "createdAt": "2020-11-24T22:02:56Z", "commit": {"oid": "0a809ccd729f46a72d380d905e79db97cdfd2bc4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowMjo1NlrOH5Xdlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowMjo1NlrOH5Xdlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxNTI4Ng==", "bodyText": "I guess this should only be the case when the result from enqueuing was deferred so we did not persist a latch to track it. I wonder why the above condition on line 224 wasn't written to handle this originally. Hope we are not missing anything, been a while since I looked at this.", "url": "https://github.com/OpenNMS/opennms/pull/3223#discussion_r529915286", "createdAt": "2020-11-24T22:02:56Z", "author": {"login": "mattixtech"}, "path": "core/ipc/sink/common/src/main/java/org/opennms/core/ipc/sink/common/AsyncDispatcherImpl.java", "diffHunk": "@@ -224,8 +224,10 @@ void enqueue(T message, String key, Consumer<DispatchQueue.EnqueueResult> onEnqu\n             if (messageEntry.getKey() == null) {\n                 return messageEntry;\n             }\n-\n-            resultRecordedMap.remove(messageEntry.getKey()).await();\n+            CountDownLatch resultRecorded = resultRecordedMap.remove(messageEntry.getKey());\n+            if(resultRecorded != null) {\n+                resultRecorded.await();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a809ccd729f46a72d380d905e79db97cdfd2bc4"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3857, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}