{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0ODc1MzIz", "number": 2873, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDozNzo0N1rODZoQ4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDozODoxOVrODZoRuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjAwNjcyOnYy", "diffSide": "RIGHT", "path": "features/graph/api/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDozNzo0N1rOFgIBsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDozNzo0N1rOFgIBsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzMDI1OQ==", "bodyText": "This is a pretty heavy dependency to add to the API module :)\nLooks like there's no easy way around it if we want to use the OnmsSeverity model though.", "url": "https://github.com/OpenNMS/opennms/pull/2873#discussion_r369230259", "createdAt": "2020-01-21T20:37:47Z", "author": {"login": "j-white"}, "path": "features/graph/api/pom.xml", "diffHunk": "@@ -32,6 +32,10 @@\n             <artifactId>org.opennms.features.graph.jung</artifactId>\n             <version>${jungVersion}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.opennms</groupId>\n+            <artifactId>opennms-model</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6a365fe0ee13e108fe97af8bbe59f0f673ea8ef"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjAwODg5OnYy", "diffSide": "RIGHT", "path": "smoke-test/src/test/java/org/opennms/smoketest/graph/GraphRestServiceIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDozODoxOVrOFgIC4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDozODoxOVrOFgIC4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzMDU2Mg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/OpenNMS/opennms/pull/2873#discussion_r369230562", "createdAt": "2020-01-21T20:38:19Z", "author": {"login": "j-white"}, "path": "smoke-test/src/test/java/org/opennms/smoketest/graph/GraphRestServiceIT.java", "diffHunk": "@@ -361,6 +378,136 @@ public void verifyNodeEnrichment() throws InterruptedException {\n                 .content(\"vertices[2].nodeInfo.categories\", Matchers.hasItems(\"Test\", \"Node\"));\n     }\n \n+    @Test\n+    public void verifyStatusExposureBsm() {\n+        try {\n+            karafShell.runCommand(\"opennms-bsm:generate-hierarchies 5 2\");\n+\n+            // Fetch data\n+            final JSONObject query = new JSONObject().put(\"semanticZoomLevel\", 1);\n+            given().log().ifValidationFails()\n+                    .body(query.toString())\n+                    .contentType(ContentType.JSON)\n+                    .post(\"{container_id}/{namespace}\", \"bsm\", \"bsm\")\n+                    .then()\n+                    .log().ifValidationFails()\n+                    .statusCode(200)\n+                    .contentType(ContentType.JSON)\n+                    .content(\"vertices\", Matchers.hasSize(1))\n+                    .content(\"vertices[0].status\", Matchers.is(\"Normal\"));\n+        } finally {\n+            karafShell.runCommand(\"opennms-bsm:delete-generated-hierarchies\");\n+        }\n+    }\n+\n+    @Test\n+    public void verifyStatusEnrichmentApplication() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6a365fe0ee13e108fe97af8bbe59f0f673ea8ef"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 732, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}