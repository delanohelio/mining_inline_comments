{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NjE0MTEy", "number": 3180, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjoxODoyN1rOEumUmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoyMzo0OVrOEyCA5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Mjk3ODE3OnYy", "diffSide": "RIGHT", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjoxODoyN1rOHjHSmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjoxODoyN1rOHjHSmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MTY1Ng==", "bodyText": "Can replace with LOG", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506581656", "createdAt": "2020-10-16T16:18:27Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -265,6 +288,12 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 String reason = \"IOException while polling address: \" + ipAddr;\n                 LOG.debug(reason, e);\n                 serviceStatus = PollStatus.unavailable(reason);\n+            } catch (CertificateEncodingException e) {\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Mjk3OTMwOnYy", "diffSide": "RIGHT", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjoxODo1MFrOHjHTXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjoxODo1MFrOHjHTXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MTg1NQ==", "bodyText": "can omit e.printStackTrace()", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506581855", "createdAt": "2020-10-16T16:18:50Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -265,6 +288,12 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 String reason = \"IOException while polling address: \" + ipAddr;\n                 LOG.debug(reason, e);\n                 serviceStatus = PollStatus.unavailable(reason);\n+            } catch (CertificateEncodingException e) {\n+                e.printStackTrace();\n+            } catch (NoSuchAlgorithmException e) {\n+                String reason = \"NoSuchAlgorithException (SHA-1) while polling address: \" + ipAddr;\n+                LOG.debug(reason, e);\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Mjk5NTY4OnYy", "diffSide": "RIGHT", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjoyMzowMVrOHjHdIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjo1ODowNFrOHjInTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4NDM1NA==", "bodyText": "Are all of these guaranteed to be not null ?", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506584354", "createdAt": "2020-10-16T16:23:01Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,46 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = certx.getSubjectDN().getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjYwMzM0MA==", "bodyText": "The javadocs do not explicitly say whether or not they can be null, so I might as well add a check.", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506603340", "createdAt": "2020-10-16T16:58:04Z", "author": {"login": "dschlenk"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,46 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = certx.getSubjectDN().getName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4NDM1NA=="}, "originalCommit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjkyMzQ0OnYy", "diffSide": "RIGHT", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTo0MjozOFrOHmHHtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODo0MDowNVrOHodaDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDU5Nw==", "bodyText": "not assigned to subject", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r509724597", "createdAt": "2020-10-21T21:42:38Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4Njg5NQ==", "bodyText": "yikes!", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512186895", "createdAt": "2020-10-26T18:40:05Z", "author": {"login": "dschlenk"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDU5Nw=="}, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MjkyNDU0OnYy", "diffSide": "RIGHT", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTo0Mjo1NFrOHmHIhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTo0Mjo1NFrOHmHIhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDgwNA==", "bodyText": "same here.", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r509724804", "createdAt": "2020-10-21T21:42:54Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();\n+                        }\n+                        String issuer = \"\";\n+                        if (certx.getIssuerDN() != null && certx.getIssuerDN().getName() != null) {\n+                            certx.getIssuerDN().getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODk3MjUyOnYy", "diffSide": "RIGHT", "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoyMzo0OVrOHocyow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODo0NToyNFrOHodnDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NjgwMw==", "bodyText": "Guess we should also check these elements to be non-null, certx.getNotBefore().toString() ,  certx.getNotAfter()", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512176803", "createdAt": "2020-10-26T18:23:49Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();\n+                        }\n+                        String issuer = \"\";\n+                        if (certx.getIssuerDN() != null && certx.getIssuerDN().getName() != null) {\n+                            certx.getIssuerDN().getName();\n+                        }\n+                        String fprint = DatatypeConverter.printHexBinary(MessageDigest.getInstance(\"SHA-1\").digest(certx.getEncoded())).toLowerCase();\n+                        StringBuilder reasonBuilder = new StringBuilder();\n                         LOG.debug(\"Checking validity against dates: [current: {}, valid: {}], NotBefore: {}, NotAfter: {}\", calCurrent.getTime(), calValid.getTime(), certx.getNotBefore(), certx.getNotAfter());\n                         calBefore.setTime(certx.getNotBefore());\n                         calAfter.setTime(certx.getNotAfter());\n                         if (calCurrent.before(calBefore)) {\n-                            LOG.debug(\"Certificate is invalid, current time is before start time\");\n-                            serviceStatus = PollStatus.unavailable(\"Certificate is invalid, current time is before start time\");\n+                            reasonBuilder.append(\"Certificate with fingerprint '\").append(fprint).append(\"' issued to \")\n+                                    .append(subject).append(\" by \").append(issuer)\n+                                    .append(\" is not yet valid. Current time is before start time. It is valid from \")\n+                                    .append(certx.getNotBefore().toString()).append(\" until \").append(certx.getNotAfter()).append(\".\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4NzQwNw==", "bodyText": "OK, I'm now just marking the service unavailable if either of them are null prior to attempting to use them. I assume that's sensible?", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512187407", "createdAt": "2020-10-26T18:40:48Z", "author": {"login": "dschlenk"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();\n+                        }\n+                        String issuer = \"\";\n+                        if (certx.getIssuerDN() != null && certx.getIssuerDN().getName() != null) {\n+                            certx.getIssuerDN().getName();\n+                        }\n+                        String fprint = DatatypeConverter.printHexBinary(MessageDigest.getInstance(\"SHA-1\").digest(certx.getEncoded())).toLowerCase();\n+                        StringBuilder reasonBuilder = new StringBuilder();\n                         LOG.debug(\"Checking validity against dates: [current: {}, valid: {}], NotBefore: {}, NotAfter: {}\", calCurrent.getTime(), calValid.getTime(), certx.getNotBefore(), certx.getNotAfter());\n                         calBefore.setTime(certx.getNotBefore());\n                         calAfter.setTime(certx.getNotAfter());\n                         if (calCurrent.before(calBefore)) {\n-                            LOG.debug(\"Certificate is invalid, current time is before start time\");\n-                            serviceStatus = PollStatus.unavailable(\"Certificate is invalid, current time is before start time\");\n+                            reasonBuilder.append(\"Certificate with fingerprint '\").append(fprint).append(\"' issued to \")\n+                                    .append(subject).append(\" by \").append(issuer)\n+                                    .append(\" is not yet valid. Current time is before start time. It is valid from \")\n+                                    .append(certx.getNotBefore().toString()).append(\" until \").append(certx.getNotAfter()).append(\".\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NjgwMw=="}, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE5MDIyMQ==", "bodyText": "yeah, that seems fine to me.", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512190221", "createdAt": "2020-10-26T18:45:24Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();\n+                        }\n+                        String issuer = \"\";\n+                        if (certx.getIssuerDN() != null && certx.getIssuerDN().getName() != null) {\n+                            certx.getIssuerDN().getName();\n+                        }\n+                        String fprint = DatatypeConverter.printHexBinary(MessageDigest.getInstance(\"SHA-1\").digest(certx.getEncoded())).toLowerCase();\n+                        StringBuilder reasonBuilder = new StringBuilder();\n                         LOG.debug(\"Checking validity against dates: [current: {}, valid: {}], NotBefore: {}, NotAfter: {}\", calCurrent.getTime(), calValid.getTime(), certx.getNotBefore(), certx.getNotAfter());\n                         calBefore.setTime(certx.getNotBefore());\n                         calAfter.setTime(certx.getNotAfter());\n                         if (calCurrent.before(calBefore)) {\n-                            LOG.debug(\"Certificate is invalid, current time is before start time\");\n-                            serviceStatus = PollStatus.unavailable(\"Certificate is invalid, current time is before start time\");\n+                            reasonBuilder.append(\"Certificate with fingerprint '\").append(fprint).append(\"' issued to \")\n+                                    .append(subject).append(\" by \").append(issuer)\n+                                    .append(\" is not yet valid. Current time is before start time. It is valid from \")\n+                                    .append(certx.getNotBefore().toString()).append(\" until \").append(certx.getNotAfter()).append(\".\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NjgwMw=="}, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3001, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}