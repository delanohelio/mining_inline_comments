{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzU0NzIw", "number": 3176, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzowOToyOFrOEpzrog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzowOToyOFrOEpzrog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjczODI2OnYy", "diffSide": "RIGHT", "path": "features/telemetry/protocols/netflow/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/netflow/parser/ParserBase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzowOToyOFrOHbs9vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNToyMDoyM1rOHbxutA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxMDMwMw==", "bodyText": "Can we use a rate limited logger or move this up into the block above? (Trying to avoid spamming the logs with this.)\nCan we also include the exporter address in the log message?", "url": "https://github.com/OpenNMS/opennms/pull/3176#discussion_r498810303", "createdAt": "2020-10-02T13:09:28Z", "author": {"login": "j-white"}, "path": "features/telemetry/protocols/netflow/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/netflow/parser/ParserBase.java", "diffHunk": "@@ -241,7 +265,32 @@ public void setThreads(int threads) {\n                     // if we can't keep up\n                     final Runnable dispatch = () -> {\n                         // Let's serialize\n-                        byte[] flowMessage = buildMessage(record, enrichment);\n+                        byte[] flowMessage = new byte[0];\n+                        try {\n+                            flowMessage = buildMessage(record, enrichment);\n+                        } catch (IllegalFlowException e) {\n+                            final Optional<Instant> instant = illegalFlowEventCache.getUnchecked(remoteAddress.getAddress());\n+\n+                            if (!instant.isPresent() || Duration.between(instant.get(), Instant.now()).getSeconds() > getIllegalFlowEventRate()) {\n+                                illegalFlowEventCache.put(remoteAddress.getAddress(), Optional.of(Instant.now()));\n+\n+                                eventForwarder.sendNow(new EventBuilder()\n+                                        .setUei(ILLEGAL_FLOW_EVENT_UEI)\n+                                        .setTime(new Date())\n+                                        .setSource(getName())\n+                                        .setInterface(remoteAddress.getAddress())\n+                                        .setDistPoller(identity.getId())\n+                                        .addParam(\"monitoringSystemId\", identity.getId())\n+                                        .addParam(\"monitoringSystemLocation\", identity.getLocation())\n+                                        .setParam(\"cause\", e.getMessage())\n+                                        .setParam(\"illegalFlowEventRate\", (int) getIllegalFlowEventRate())\n+                                        .getEvent());\n+                            }\n+\n+                            LOG.warn(\"Illegal flow detected\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9233ef3ff90e4b8a6b52f4c8071e9c777c0509a"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg4MzA3Mw==", "bodyText": "Pas de probl\u00e8me. La ligne a \u00e9t\u00e9 d\u00e9plac\u00e9e vers le bloc sup\u00e9rieur.", "url": "https://github.com/OpenNMS/opennms/pull/3176#discussion_r498883073", "createdAt": "2020-10-02T15:11:26Z", "author": {"login": "christianpape"}, "path": "features/telemetry/protocols/netflow/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/netflow/parser/ParserBase.java", "diffHunk": "@@ -241,7 +265,32 @@ public void setThreads(int threads) {\n                     // if we can't keep up\n                     final Runnable dispatch = () -> {\n                         // Let's serialize\n-                        byte[] flowMessage = buildMessage(record, enrichment);\n+                        byte[] flowMessage = new byte[0];\n+                        try {\n+                            flowMessage = buildMessage(record, enrichment);\n+                        } catch (IllegalFlowException e) {\n+                            final Optional<Instant> instant = illegalFlowEventCache.getUnchecked(remoteAddress.getAddress());\n+\n+                            if (!instant.isPresent() || Duration.between(instant.get(), Instant.now()).getSeconds() > getIllegalFlowEventRate()) {\n+                                illegalFlowEventCache.put(remoteAddress.getAddress(), Optional.of(Instant.now()));\n+\n+                                eventForwarder.sendNow(new EventBuilder()\n+                                        .setUei(ILLEGAL_FLOW_EVENT_UEI)\n+                                        .setTime(new Date())\n+                                        .setSource(getName())\n+                                        .setInterface(remoteAddress.getAddress())\n+                                        .setDistPoller(identity.getId())\n+                                        .addParam(\"monitoringSystemId\", identity.getId())\n+                                        .addParam(\"monitoringSystemLocation\", identity.getLocation())\n+                                        .setParam(\"cause\", e.getMessage())\n+                                        .setParam(\"illegalFlowEventRate\", (int) getIllegalFlowEventRate())\n+                                        .getEvent());\n+                            }\n+\n+                            LOG.warn(\"Illegal flow detected\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxMDMwMw=="}, "originalCommit": {"oid": "e9233ef3ff90e4b8a6b52f4c8071e9c777c0509a"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg4ODM3Mg==", "bodyText": "C'est tr\u00e8s bien @christianpape. Je suis ravi.", "url": "https://github.com/OpenNMS/opennms/pull/3176#discussion_r498888372", "createdAt": "2020-10-02T15:20:23Z", "author": {"login": "j-white"}, "path": "features/telemetry/protocols/netflow/parser/src/main/java/org/opennms/netmgt/telemetry/protocols/netflow/parser/ParserBase.java", "diffHunk": "@@ -241,7 +265,32 @@ public void setThreads(int threads) {\n                     // if we can't keep up\n                     final Runnable dispatch = () -> {\n                         // Let's serialize\n-                        byte[] flowMessage = buildMessage(record, enrichment);\n+                        byte[] flowMessage = new byte[0];\n+                        try {\n+                            flowMessage = buildMessage(record, enrichment);\n+                        } catch (IllegalFlowException e) {\n+                            final Optional<Instant> instant = illegalFlowEventCache.getUnchecked(remoteAddress.getAddress());\n+\n+                            if (!instant.isPresent() || Duration.between(instant.get(), Instant.now()).getSeconds() > getIllegalFlowEventRate()) {\n+                                illegalFlowEventCache.put(remoteAddress.getAddress(), Optional.of(Instant.now()));\n+\n+                                eventForwarder.sendNow(new EventBuilder()\n+                                        .setUei(ILLEGAL_FLOW_EVENT_UEI)\n+                                        .setTime(new Date())\n+                                        .setSource(getName())\n+                                        .setInterface(remoteAddress.getAddress())\n+                                        .setDistPoller(identity.getId())\n+                                        .addParam(\"monitoringSystemId\", identity.getId())\n+                                        .addParam(\"monitoringSystemLocation\", identity.getLocation())\n+                                        .setParam(\"cause\", e.getMessage())\n+                                        .setParam(\"illegalFlowEventRate\", (int) getIllegalFlowEventRate())\n+                                        .getEvent());\n+                            }\n+\n+                            LOG.warn(\"Illegal flow detected\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxMDMwMw=="}, "originalCommit": {"oid": "e9233ef3ff90e4b8a6b52f4c8071e9c777c0509a"}, "originalPosition": 94}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2994, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}