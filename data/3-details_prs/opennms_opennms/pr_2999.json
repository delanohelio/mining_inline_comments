{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MTI1NDUx", "number": 2999, "title": "NMS-12684: Added upgrade task to enable RemotePollerNG", "bodyText": "JIRA: https://issues.opennms.org/browse/NMS-12684", "createdAt": "2020-05-06T14:16:33Z", "url": "https://github.com/OpenNMS/opennms/pull/2999", "merged": true, "mergeCommit": {"oid": "d9700188926e14c460b56f8291f4b6613f50b2c7"}, "closed": true, "closedAt": "2020-05-10T09:20:07Z", "author": {"login": "christianpape"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceW00kgH2gAyNDE0MTI1NDUxOjU5ZWUwOTBkMTdhOGRiNzI0YTI4ZWRmZjNlMzU2NDJmMzdmMWJiOGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcf3iC7AH2gAyNDE0MTI1NDUxOjBhYzA5OWY0NmQwMTZmNzcyMDcxOGRhY2Y3OTdkMThjZTQzYmJmYTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59ee090d17a8db724a28edff3e35642f37f1bb8e", "author": {"user": {"login": "christianpape", "name": "Christian Pape"}}, "url": "https://github.com/OpenNMS/opennms/commit/59ee090d17a8db724a28edff3e35642f37f1bb8e", "committedDate": "2020-05-05T16:39:25Z", "message": "NMS-12684: Added upgrade task to enable RemotePollerNG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6569954f9c80a60a5a75e1836058f0fdbfd6e42f", "author": {"user": {"login": "christianpape", "name": "Christian Pape"}}, "url": "https://github.com/OpenNMS/opennms/commit/6569954f9c80a60a5a75e1836058f0fdbfd6e42f", "committedDate": "2020-05-06T14:14:58Z", "message": "Merge branch 'features/rpwm' into jira/NMS-12684"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NjI4ODc3", "url": "https://github.com/OpenNMS/opennms/pull/2999#pullrequestreview-408628877", "createdAt": "2020-05-09T08:45:31Z", "commit": {"oid": "6569954f9c80a60a5a75e1836058f0fdbfd6e42f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODo0NTozMVrOGS5krw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwODo0ODozN1rOGS5log==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MDgzMQ==", "bodyText": "deprecated vs existing", "url": "https://github.com/OpenNMS/opennms/pull/2999#discussion_r422470831", "createdAt": "2020-05-09T08:45:31Z", "author": {"login": "fooker"}, "path": "core/upgrade/src/main/java/org/opennms/upgrade/implementations/RemotePollerServiceConfigMigratorOffline.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.upgrade.implementations;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.util.Collections;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.opennms.core.utils.ConfigFileConstants;\n+import org.opennms.core.xml.JaxbUtils;\n+import org.opennms.netmgt.config.service.Attribute;\n+import org.opennms.netmgt.config.service.Invoke;\n+import org.opennms.netmgt.config.service.InvokeAtType;\n+import org.opennms.netmgt.config.service.Service;\n+import org.opennms.netmgt.config.service.ServiceConfiguration;\n+import org.opennms.upgrade.api.AbstractOnmsUpgrade;\n+import org.opennms.upgrade.api.OnmsUpgradeException;\n+\n+import com.google.common.collect.Lists;\n+\n+public class RemotePollerServiceConfigMigratorOffline extends AbstractOnmsUpgrade {\n+\n+    private File configFile;\n+\n+    public static final String DEPRECATED_REMOTE_POLLER_SERVICENAME = \"OpenNMS:Name=PollerBackEnd\";\n+    public static final String REMOTE_POLLER_NG_SERVICENAME = \"OpenNMS:Name=RemotePollerNG\";\n+\n+    public RemotePollerServiceConfigMigratorOffline() throws OnmsUpgradeException {\n+        super();\n+        try {\n+            configFile = ConfigFileConstants.getFile(ConfigFileConstants.SERVICE_CONF_FILE_NAME);\n+        } catch (final IOException e) {\n+            throw new OnmsUpgradeException(\"Can't find Services Configuration file\", e);\n+        }\n+    }\n+\n+    @Override\n+    public int getOrder() {\n+        return 14;\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Remove deprecated RemotePoller service entry from service-configuration.xml, see NMS-12684\";\n+    }\n+\n+    @Override\n+    public void preExecute() throws OnmsUpgradeException {\n+        try {\n+            log(\"Creating backup of %s\\n\", configFile);\n+            zipFile(configFile);\n+        } catch (Exception e) {\n+            throw new OnmsUpgradeException(\"Can't backup service-configurations.xml because \" + e.getMessage());\n+        }\n+\n+    }\n+\n+    @Override\n+    public void postExecute() throws OnmsUpgradeException {\n+        File zip = new File(configFile.getAbsolutePath() + ZIP_EXT);\n+        if (zip.exists()) {\n+            log(\"Removing backup %s\\n\", zip);\n+            FileUtils.deleteQuietly(zip);\n+        }\n+    }\n+\n+    @Override\n+    public void rollback() throws OnmsUpgradeException {\n+        log(\"Restoring backup %s\\n\", configFile);\n+        File zip = new File(configFile.getAbsolutePath() + ZIP_EXT);\n+        FileUtils.deleteQuietly(configFile);\n+        unzipFile(zip, zip.getParentFile());\n+    }\n+\n+    @Override\n+    public void execute() throws OnmsUpgradeException {\n+        try {\n+            final ServiceConfiguration currentCfg = JaxbUtils.unmarshal(ServiceConfiguration.class, configFile);\n+            boolean skipRemovePollerNgEntryCreation = false;\n+            boolean deprecatedServiceEnabled = true;\n+\n+            log(\"Current configuration: \" + currentCfg.getServices().size() + \" services.\\n\");\n+\n+            for (int i = currentCfg.getServices().size() - 1; i >= 0; i--) {\n+                final Service localSvc = currentCfg.getServices().get(i);\n+                final String name = localSvc.getName();\n+\n+                if (DEPRECATED_REMOTE_POLLER_SERVICENAME.equals(name)) {\n+                    // Perhaps the administrator has intentionally disabled it, so RemotePollerNg should only be\n+                    // enabled if deprecated RemotePoller was enabled. If no entry was found this value defaults to true.\n+                    deprecatedServiceEnabled = localSvc.isEnabled();\n+\n+                    // remote the entry from the configuration\n+                    currentCfg.getServices().remove(i);\n+                    log(\"Removing deprecated '%s' entry\\n\", DEPRECATED_REMOTE_POLLER_SERVICENAME);\n+                }\n+\n+\n+                if (REMOTE_POLLER_NG_SERVICENAME.equals(name)) {\n+                    // if a deprecated RemotePollerNg entry exists, do not touch it's configuration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6569954f9c80a60a5a75e1836058f0fdbfd6e42f"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MTA3NA==", "bodyText": "for (final Service localSvc : Lists.reverse(currentCfg.getServices())) { looks more modern", "url": "https://github.com/OpenNMS/opennms/pull/2999#discussion_r422471074", "createdAt": "2020-05-09T08:48:37Z", "author": {"login": "fooker"}, "path": "core/upgrade/src/main/java/org/opennms/upgrade/implementations/RemotePollerServiceConfigMigratorOffline.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.upgrade.implementations;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.util.Collections;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.opennms.core.utils.ConfigFileConstants;\n+import org.opennms.core.xml.JaxbUtils;\n+import org.opennms.netmgt.config.service.Attribute;\n+import org.opennms.netmgt.config.service.Invoke;\n+import org.opennms.netmgt.config.service.InvokeAtType;\n+import org.opennms.netmgt.config.service.Service;\n+import org.opennms.netmgt.config.service.ServiceConfiguration;\n+import org.opennms.upgrade.api.AbstractOnmsUpgrade;\n+import org.opennms.upgrade.api.OnmsUpgradeException;\n+\n+import com.google.common.collect.Lists;\n+\n+public class RemotePollerServiceConfigMigratorOffline extends AbstractOnmsUpgrade {\n+\n+    private File configFile;\n+\n+    public static final String DEPRECATED_REMOTE_POLLER_SERVICENAME = \"OpenNMS:Name=PollerBackEnd\";\n+    public static final String REMOTE_POLLER_NG_SERVICENAME = \"OpenNMS:Name=RemotePollerNG\";\n+\n+    public RemotePollerServiceConfigMigratorOffline() throws OnmsUpgradeException {\n+        super();\n+        try {\n+            configFile = ConfigFileConstants.getFile(ConfigFileConstants.SERVICE_CONF_FILE_NAME);\n+        } catch (final IOException e) {\n+            throw new OnmsUpgradeException(\"Can't find Services Configuration file\", e);\n+        }\n+    }\n+\n+    @Override\n+    public int getOrder() {\n+        return 14;\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Remove deprecated RemotePoller service entry from service-configuration.xml, see NMS-12684\";\n+    }\n+\n+    @Override\n+    public void preExecute() throws OnmsUpgradeException {\n+        try {\n+            log(\"Creating backup of %s\\n\", configFile);\n+            zipFile(configFile);\n+        } catch (Exception e) {\n+            throw new OnmsUpgradeException(\"Can't backup service-configurations.xml because \" + e.getMessage());\n+        }\n+\n+    }\n+\n+    @Override\n+    public void postExecute() throws OnmsUpgradeException {\n+        File zip = new File(configFile.getAbsolutePath() + ZIP_EXT);\n+        if (zip.exists()) {\n+            log(\"Removing backup %s\\n\", zip);\n+            FileUtils.deleteQuietly(zip);\n+        }\n+    }\n+\n+    @Override\n+    public void rollback() throws OnmsUpgradeException {\n+        log(\"Restoring backup %s\\n\", configFile);\n+        File zip = new File(configFile.getAbsolutePath() + ZIP_EXT);\n+        FileUtils.deleteQuietly(configFile);\n+        unzipFile(zip, zip.getParentFile());\n+    }\n+\n+    @Override\n+    public void execute() throws OnmsUpgradeException {\n+        try {\n+            final ServiceConfiguration currentCfg = JaxbUtils.unmarshal(ServiceConfiguration.class, configFile);\n+            boolean skipRemovePollerNgEntryCreation = false;\n+            boolean deprecatedServiceEnabled = true;\n+\n+            log(\"Current configuration: \" + currentCfg.getServices().size() + \" services.\\n\");\n+\n+            for (int i = currentCfg.getServices().size() - 1; i >= 0; i--) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6569954f9c80a60a5a75e1836058f0fdbfd6e42f"}, "originalPosition": 113}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac099f46d016f7720718dacf797d18ce43bbfa4", "author": {"user": {"login": "christianpape", "name": "Christian Pape"}}, "url": "https://github.com/OpenNMS/opennms/commit/0ac099f46d016f7720718dacf797d18ce43bbfa4", "committedDate": "2020-05-10T09:19:42Z", "message": "NMS-12684: Review changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3628, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}