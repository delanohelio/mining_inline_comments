{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNDE5NTk1", "number": 2990, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozMzowM1rOD4BcNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjo0ODowMlrOD4BxFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDcwNDUyOnYy", "diffSide": "LEFT", "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsLocationMonitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozMzowM1rOGOnJ2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowODo1NlrOGOrCaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NDc0Nw==", "bodyText": "The constant can be removed, too.", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r417974747", "createdAt": "2020-04-30T12:33:03Z", "author": {"login": "fooker"}, "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsLocationMonitor.java", "diffHunk": "@@ -1,123 +0,0 @@\n-/*******************************************************************************\n- * This file is part of OpenNMS(R).\n- *\n- * Copyright (C) 2006-2014 The OpenNMS Group, Inc.\n- * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as published\n- * by the Free Software Foundation, either version 3 of the License,\n- * or (at your option) any later version.\n- *\n- * OpenNMS(R) is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with OpenNMS(R).  If not, see:\n- *      http://www.gnu.org/licenses/\n- *\n- * For more information contact:\n- *     OpenNMS(R) Licensing <license@opennms.org>\n- *     http://www.opennms.org/\n- *     http://www.opennms.com/\n- *******************************************************************************/\n-\n-package org.opennms.netmgt.model;\n-\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.Entity;\n-import javax.persistence.EnumType;\n-import javax.persistence.Enumerated;\n-import javax.persistence.Transient;\n-import javax.xml.bind.annotation.XmlRootElement;\n-\n-import com.google.common.base.MoreObjects;\n-\n-/**\n- * Represents the current status of a location monitor from the\n- * view of the controlling OpenNMS daemon.\n- *\n- * Note: this class has a natural ordering that is inconsistent\n- * with equals.\n- *\n- * @author <a href=\"mailto:brozow@opennms.org\">Mathew Brozowski</a>\n- * @author <a href=\"mailto:david@opennms.org\">David Hustace</a>\n- */\n-@Entity\n-@DiscriminatorValue(OnmsMonitoringSystem.TYPE_REMOTE_POLLER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzODM3OQ==", "bodyText": "Yes, you're soooo right.", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r418038379", "createdAt": "2020-04-30T14:08:56Z", "author": {"login": "christianpape"}, "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsLocationMonitor.java", "diffHunk": "@@ -1,123 +0,0 @@\n-/*******************************************************************************\n- * This file is part of OpenNMS(R).\n- *\n- * Copyright (C) 2006-2014 The OpenNMS Group, Inc.\n- * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as published\n- * by the Free Software Foundation, either version 3 of the License,\n- * or (at your option) any later version.\n- *\n- * OpenNMS(R) is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with OpenNMS(R).  If not, see:\n- *      http://www.gnu.org/licenses/\n- *\n- * For more information contact:\n- *     OpenNMS(R) Licensing <license@opennms.org>\n- *     http://www.opennms.org/\n- *     http://www.opennms.com/\n- *******************************************************************************/\n-\n-package org.opennms.netmgt.model;\n-\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.Entity;\n-import javax.persistence.EnumType;\n-import javax.persistence.Enumerated;\n-import javax.persistence.Transient;\n-import javax.xml.bind.annotation.XmlRootElement;\n-\n-import com.google.common.base.MoreObjects;\n-\n-/**\n- * Represents the current status of a location monitor from the\n- * view of the controlling OpenNMS daemon.\n- *\n- * Note: this class has a natural ordering that is inconsistent\n- * with equals.\n- *\n- * @author <a href=\"mailto:brozow@opennms.org\">Mathew Brozowski</a>\n- * @author <a href=\"mailto:david@opennms.org\">David Hustace</a>\n- */\n-@Entity\n-@DiscriminatorValue(OnmsMonitoringSystem.TYPE_REMOTE_POLLER)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NDc0Nw=="}, "originalCommit": {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDcxMDIwOnYy", "diffSide": "LEFT", "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsLocationMonitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozNDo0NFrOGOnNdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowOTowNFrOGOrC6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NTY2OQ==", "bodyText": "As the sub-class is removed, the liquibase update should ensure that all values with this type are removed from the monitoringsystems table, too.", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r417975669", "createdAt": "2020-04-30T12:34:44Z", "author": {"login": "fooker"}, "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsLocationMonitor.java", "diffHunk": "@@ -1,123 +0,0 @@\n-/*******************************************************************************\n- * This file is part of OpenNMS(R).\n- *\n- * Copyright (C) 2006-2014 The OpenNMS Group, Inc.\n- * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as published\n- * by the Free Software Foundation, either version 3 of the License,\n- * or (at your option) any later version.\n- *\n- * OpenNMS(R) is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with OpenNMS(R).  If not, see:\n- *      http://www.gnu.org/licenses/\n- *\n- * For more information contact:\n- *     OpenNMS(R) Licensing <license@opennms.org>\n- *     http://www.opennms.org/\n- *     http://www.opennms.com/\n- *******************************************************************************/\n-\n-package org.opennms.netmgt.model;\n-\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.Entity;\n-import javax.persistence.EnumType;\n-import javax.persistence.Enumerated;\n-import javax.persistence.Transient;\n-import javax.xml.bind.annotation.XmlRootElement;\n-\n-import com.google.common.base.MoreObjects;\n-\n-/**\n- * Represents the current status of a location monitor from the\n- * view of the controlling OpenNMS daemon.\n- *\n- * Note: this class has a natural ordering that is inconsistent\n- * with equals.\n- *\n- * @author <a href=\"mailto:brozow@opennms.org\">Mathew Brozowski</a>\n- * @author <a href=\"mailto:david@opennms.org\">David Hustace</a>\n- */\n-@Entity\n-@DiscriminatorValue(OnmsMonitoringSystem.TYPE_REMOTE_POLLER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzODUwNg==", "bodyText": "Good catch.", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r418038506", "createdAt": "2020-04-30T14:09:04Z", "author": {"login": "christianpape"}, "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsLocationMonitor.java", "diffHunk": "@@ -1,123 +0,0 @@\n-/*******************************************************************************\n- * This file is part of OpenNMS(R).\n- *\n- * Copyright (C) 2006-2014 The OpenNMS Group, Inc.\n- * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n- *\n- * OpenNMS(R) is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU Affero General Public License as published\n- * by the Free Software Foundation, either version 3 of the License,\n- * or (at your option) any later version.\n- *\n- * OpenNMS(R) is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- * GNU Affero General Public License for more details.\n- *\n- * You should have received a copy of the GNU Affero General Public License\n- * along with OpenNMS(R).  If not, see:\n- *      http://www.gnu.org/licenses/\n- *\n- * For more information contact:\n- *     OpenNMS(R) Licensing <license@opennms.org>\n- *     http://www.opennms.org/\n- *     http://www.opennms.com/\n- *******************************************************************************/\n-\n-package org.opennms.netmgt.model;\n-\n-import javax.persistence.Column;\n-import javax.persistence.DiscriminatorValue;\n-import javax.persistence.Entity;\n-import javax.persistence.EnumType;\n-import javax.persistence.Enumerated;\n-import javax.persistence.Transient;\n-import javax.xml.bind.annotation.XmlRootElement;\n-\n-import com.google.common.base.MoreObjects;\n-\n-/**\n- * Represents the current status of a location monitor from the\n- * view of the controlling OpenNMS daemon.\n- *\n- * Note: this class has a natural ordering that is inconsistent\n- * with equals.\n- *\n- * @author <a href=\"mailto:brozow@opennms.org\">Mathew Brozowski</a>\n- * @author <a href=\"mailto:david@opennms.org\">David Hustace</a>\n- */\n-@Entity\n-@DiscriminatorValue(OnmsMonitoringSystem.TYPE_REMOTE_POLLER)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NTY2OQ=="}, "originalCommit": {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDcyNDQ4OnYy", "diffSide": "LEFT", "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/AvailCalculator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjozODo0MVrOGOnWOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowOToxMlrOGOrDRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NzkxNA==", "bodyText": "As this needs revisiting in future, should we mark this with a TODO?", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r417977914", "createdAt": "2020-04-30T12:38:41Z", "author": {"login": "fooker"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/AvailCalculator.java", "diffHunk": "@@ -154,23 +154,23 @@ private double uptime(TimeChunk chunk, TimeIntervalSequence uptime) {\n     }\n     \n     public static class ServiceAvailCalculator {\n-        Map<OnmsLocationMonitor, UptimeCalculator> m_uptimeCalculators = new HashMap<OnmsLocationMonitor, UptimeCalculator>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzODU5OQ==", "bodyText": "Done.", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r418038599", "createdAt": "2020-04-30T14:09:12Z", "author": {"login": "christianpape"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/AvailCalculator.java", "diffHunk": "@@ -154,23 +154,23 @@ private double uptime(TimeChunk chunk, TimeIntervalSequence uptime) {\n     }\n     \n     public static class ServiceAvailCalculator {\n-        Map<OnmsLocationMonitor, UptimeCalculator> m_uptimeCalculators = new HashMap<OnmsLocationMonitor, UptimeCalculator>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3NzkxNA=="}, "originalCommit": {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDc1Nzk2OnYy", "diffSide": "RIGHT", "path": "opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DistributedStatusResourceType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjo0ODowMlrOGOnrCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowOToxOFrOGOrDfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4MzI0Mw==", "bodyText": "Get rid of the definitionName.  createResource is used just here and can be adopted easily.", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r417983243", "createdAt": "2020-04-30T12:48:02Z", "author": {"login": "fooker"}, "path": "opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DistributedStatusResourceType.java", "diffHunk": "@@ -117,11 +117,11 @@ public boolean isResourceTypeOnParent(OnmsResource parent) {\n \n         final OnmsNode node = ResourceTypeUtils.getNodeFromResource(parent);\n         final List<OnmsResource> resources = Lists.newLinkedList();\n-        final Collection<LocationMonitorIpInterface> statuses = m_locationMonitorDao.findStatusChangesForNodeForUniqueMonitorAndInterface(node.getId());\n+        final Collection<LocationIpInterface> statuses = m_locationSpecificStatusDao.findStatusChangesForNodeForUniqueMonitorAndInterface(node.getId());\n \n-        for (LocationMonitorIpInterface status : statuses) {\n-            String definitionName = status.getLocationMonitor().getLocation();\n-            String id = status.getLocationMonitor().getId();\n+        for (LocationIpInterface status : statuses) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzODY1Mw==", "bodyText": "Done.", "url": "https://github.com/OpenNMS/opennms/pull/2990#discussion_r418038653", "createdAt": "2020-04-30T14:09:18Z", "author": {"login": "christianpape"}, "path": "opennms-dao/src/main/java/org/opennms/netmgt/dao/support/DistributedStatusResourceType.java", "diffHunk": "@@ -117,11 +117,11 @@ public boolean isResourceTypeOnParent(OnmsResource parent) {\n \n         final OnmsNode node = ResourceTypeUtils.getNodeFromResource(parent);\n         final List<OnmsResource> resources = Lists.newLinkedList();\n-        final Collection<LocationMonitorIpInterface> statuses = m_locationMonitorDao.findStatusChangesForNodeForUniqueMonitorAndInterface(node.getId());\n+        final Collection<LocationIpInterface> statuses = m_locationSpecificStatusDao.findStatusChangesForNodeForUniqueMonitorAndInterface(node.getId());\n \n-        for (LocationMonitorIpInterface status : statuses) {\n-            String definitionName = status.getLocationMonitor().getLocation();\n-            String id = status.getLocationMonitor().getId();\n+        for (LocationIpInterface status : statuses) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4MzI0Mw=="}, "originalCommit": {"oid": "ade029b6276ab6b22dc0ccca516ae135aac4fcf5"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 638, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}