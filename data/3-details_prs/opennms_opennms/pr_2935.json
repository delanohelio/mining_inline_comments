{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMzQ4NjQx", "number": 2935, "title": "NMS-12586: Fix restoring of facts on DroolsCorrelationEngine reload", "bodyText": "Marshal objects that are in the session before reload.\nUnmarshal with specific class loader while restoring\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12586\nBamboo (Continuous Integration): https://bamboo.opennms.org/", "createdAt": "2020-03-25T02:24:54Z", "url": "https://github.com/OpenNMS/opennms/pull/2935", "merged": true, "mergeCommit": {"oid": "0a04975ee0342ef989e119fee68a1dc7cec43c2d"}, "closed": true, "closedAt": "2020-03-26T21:16:52Z", "author": {"login": "cgorantla"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ-KnngFqTM4MDgyMjY1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRizqoAH2gAyMzkzMzQ4NjQxOjE2YTI4OGYyODBmZTViN2ViYzkzODg4ZWY1NGZhYmZiOTU0NGFjYmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODIyNjU5", "url": "https://github.com/OpenNMS/opennms/pull/2935#pullrequestreview-380822659", "createdAt": "2020-03-25T02:32:37Z", "commit": {"oid": "2899e78bbfb3dc0ae694f1d281a71ace6c958d1a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjozMjozN1rOF7KFbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMjozNDowMFrOF7KGvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3NTUzMw==", "bodyText": "Add factObject & factObject class to exception.", "url": "https://github.com/OpenNMS/opennms/pull/2935#discussion_r397575533", "createdAt": "2020-03-25T02:32:37Z", "author": {"login": "j-white"}, "path": "opennms-correlation/drools-correlation-engine/src/main/java/org/opennms/netmgt/correlation/drools/DroolsCorrelationEngine.java", "diffHunk": "@@ -505,17 +505,50 @@ void saveFacts( ) {\n         shutDownKieSession(() -> {\n             try {\n                 // Capture the current set of facts\n-                factObjects  = m_kieSession.getFactHandles().stream()\n-                        .map(fact -> m_kieSession.getObject(fact))\n-                        .collect(Collectors.toList());\n+                m_kieSession.getFactHandles().forEach(this::marshalAndSaveFact);\n             } catch (Exception e) {\n                 LOG.warn(\"Failed to save facts\", e);\n             }\n         });\n     }\n \n-    List<Object> getFactObjects() {\n+    Map<byte[], Class<?>> getFactObjects() {\n         return factObjects;\n     }\n \n+    FactType getFactType(String packageName, String className) {\n+        try {\n+            return m_kieBase.getFactType(packageName, className);\n+        } catch (Exception e) {\n+            // Any objects that are not declared in drl will throw exception.\n+        }\n+        return null;\n+    }\n+\n+    private void marshalAndSaveFact(FactHandle factHandle) {\n+        Object factObject = m_kieSession.getObject(factHandle);\n+        try {\n+            factObjects.put(DroolsStreamUtils.streamOut(factObject), factObject.getClass());\n+        } catch (IOException e) {\n+            LOG.error(\"Exception while marshalling fact {}\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2899e78bbfb3dc0ae694f1d281a71ace6c958d1a"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3NTY1NA==", "bodyText": "Remove factBytes or replace with factBytes.length from exception.", "url": "https://github.com/OpenNMS/opennms/pull/2935#discussion_r397575654", "createdAt": "2020-03-25T02:33:07Z", "author": {"login": "j-white"}, "path": "opennms-correlation/drools-correlation-engine/src/main/java/org/opennms/netmgt/correlation/drools/DroolsCorrelationEngine.java", "diffHunk": "@@ -505,17 +505,50 @@ void saveFacts( ) {\n         shutDownKieSession(() -> {\n             try {\n                 // Capture the current set of facts\n-                factObjects  = m_kieSession.getFactHandles().stream()\n-                        .map(fact -> m_kieSession.getObject(fact))\n-                        .collect(Collectors.toList());\n+                m_kieSession.getFactHandles().forEach(this::marshalAndSaveFact);\n             } catch (Exception e) {\n                 LOG.warn(\"Failed to save facts\", e);\n             }\n         });\n     }\n \n-    List<Object> getFactObjects() {\n+    Map<byte[], Class<?>> getFactObjects() {\n         return factObjects;\n     }\n \n+    FactType getFactType(String packageName, String className) {\n+        try {\n+            return m_kieBase.getFactType(packageName, className);\n+        } catch (Exception e) {\n+            // Any objects that are not declared in drl will throw exception.\n+        }\n+        return null;\n+    }\n+\n+    private void marshalAndSaveFact(FactHandle factHandle) {\n+        Object factObject = m_kieSession.getObject(factHandle);\n+        try {\n+            factObjects.put(DroolsStreamUtils.streamOut(factObject), factObject.getClass());\n+        } catch (IOException e) {\n+            LOG.error(\"Exception while marshalling fact {}\", e);\n+        }\n+    }\n+\n+\n+    private void unmarshalAndInsert(byte[] factBytes, Class<?> clazz) {\n+\n+        try {\n+            String packageName = clazz.getPackage().getName();\n+            String className = clazz.getSimpleName();\n+            FactType factType = getFactType(packageName, className);\n+            if (factType != null) {\n+                m_kieSession.insert(DroolsStreamUtils.streamIn(factBytes, factType.getFactClass().getClassLoader()));\n+            } else {\n+                m_kieSession.insert(DroolsStreamUtils.streamIn(factBytes, clazz.getClassLoader()));\n+            }\n+        } catch (IOException | ClassNotFoundException e) {\n+            LOG.error(\"Exception while unmarshalling fact {} with class {}\", factBytes, clazz.getCanonicalName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2899e78bbfb3dc0ae694f1d281a71ace6c958d1a"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU3NTg2OQ==", "bodyText": "query, nice", "url": "https://github.com/OpenNMS/opennms/pull/2935#discussion_r397575869", "createdAt": "2020-03-25T02:34:00Z", "author": {"login": "j-white"}, "path": "opennms-correlation/drools-correlation-engine/src/test/opennms-home/etc/drools-engine.d/persistState/PersistState.drl", "diffHunk": "@@ -4,13 +4,22 @@ import org.opennms.netmgt.correlation.drools.DroolsCorrelationEngine;\n import org.opennms.netmgt.xml.event.Event;\n import org.opennms.netmgt.model.events.EventBuilder;\n import org.drools.core.spi.KnowledgeHelper;\n+import org.drools.core.QueryResultsImpl;\n \n global DroolsCorrelationEngine engine;\n \n declare Thing\n \tname: String\n end\n \n+declare PersistedTestFact\n+  factId: String\n+end\n+\n+query \"find PersistedTestFact by factId\" (String searchFactId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2899e78bbfb3dc0ae694f1d281a71ace6c958d1a"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjE3NTY0", "url": "https://github.com/OpenNMS/opennms/pull/2935#pullrequestreview-381217564", "createdAt": "2020-03-25T14:44:38Z", "commit": {"oid": "dc67acd1e82d1f4e401fef3423d8b279e55be49c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58df88992bb3adf8459f75b49d8b7606c15e937", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/f58df88992bb3adf8459f75b49d8b7606c15e937", "committedDate": "2020-03-25T19:22:26Z", "message": "NMS-12586: Fix restoring facts on reload\n\nMarshal objects that are in the session before reload.\nUnmarshal with specific class loader while restoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "417c2777233c1c52b3f3cf0602e18aa3a030bfb4", "author": {"user": {"login": "UberPinguin", "name": "Will Keaney"}}, "url": "https://github.com/OpenNMS/opennms/commit/417c2777233c1c52b3f3cf0602e18aa3a030bfb4", "committedDate": "2020-03-25T19:53:49Z", "message": "NMS-12586: Use DroolsStreamUtils methods to serialize/deserialize facts\n\nCopying facts between sessions leads to incompatible class signatures.\nTake advantage of the Drools streaming utilities and protobuf to persist\nfacts between sessions, instead."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc67acd1e82d1f4e401fef3423d8b279e55be49c", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/dc67acd1e82d1f4e401fef3423d8b279e55be49c", "committedDate": "2020-03-25T02:58:48Z", "message": "NMS-12586: Handle review comments"}, "afterCommit": {"oid": "417c2777233c1c52b3f3cf0602e18aa3a030bfb4", "author": {"user": {"login": "UberPinguin", "name": "Will Keaney"}}, "url": "https://github.com/OpenNMS/opennms/commit/417c2777233c1c52b3f3cf0602e18aa3a030bfb4", "committedDate": "2020-03-25T19:53:49Z", "message": "NMS-12586: Use DroolsStreamUtils methods to serialize/deserialize facts\n\nCopying facts between sessions leads to incompatible class signatures.\nTake advantage of the Drools streaming utilities and protobuf to persist\nfacts between sessions, instead."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMTAzNjA4", "url": "https://github.com/OpenNMS/opennms/pull/2935#pullrequestreview-382103608", "createdAt": "2020-03-26T15:07:12Z", "commit": {"oid": "417c2777233c1c52b3f3cf0602e18aa3a030bfb4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16a288f280fe5b7ebc93888ef54fabfb9544acbb", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/16a288f280fe5b7ebc93888ef54fabfb9544acbb", "committedDate": "2020-03-26T21:16:00Z", "message": "NMS-12586: Add comment for declared fact type"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3812, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}