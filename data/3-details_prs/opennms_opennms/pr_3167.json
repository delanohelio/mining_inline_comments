{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzc2OTgy", "number": 3167, "title": "NMS-12915: Support gNMI for OpenConfig", "bodyText": "External References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12915", "createdAt": "2020-09-23T13:20:28Z", "url": "https://github.com/OpenNMS/opennms/pull/3167", "merged": true, "mergeCommit": {"oid": "696b47e6f049836575450ed067dee0fb9a2798b7"}, "closed": true, "closedAt": "2020-11-02T19:01:00Z", "author": {"login": "cgorantla"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLsbv4AH2gAyNDkxNzc2OTgyOjM0MjkyYWUxZmZkMDE3YTNhOWNhODBlZmU2MzIyOGQyYWFhN2I1YmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXorAMAFqTUyMDc5MzU0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "34292ae1ffd017a3a9ca80efe63228d2aaa7b5bf", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/34292ae1ffd017a3a9ca80efe63228d2aaa7b5bf", "committedDate": "2020-09-23T13:16:32Z", "message": "NMS-12915: Add support for gNMI\n\nBy default mode would be gnmi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64b7eb9227e4a0f8a967c9d8270fba208841b9c0", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/64b7eb9227e4a0f8a967c9d8270fba208841b9c0", "committedDate": "2020-09-23T18:53:12Z", "message": "NMS-12915: Handle inner path separators"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0515a5298af8ca69e47278022e04b5cf54f6f8d8", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/0515a5298af8ca69e47278022e04b5cf54f6f8d8", "committedDate": "2020-09-23T20:03:52Z", "message": "Merge branch 'develop' into jira/NMS-12915"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ba8c9491801e6ff190471fefd062300ee13b6af", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/5ba8c9491801e6ff190471fefd062300ee13b6af", "committedDate": "2020-09-25T03:54:12Z", "message": "NMS-12915: Add support for different sampling rates for different paths"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b153e0ef3e66a657a2f5413d591621795935e97", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/0b153e0ef3e66a657a2f5413d591621795935e97", "committedDate": "2020-09-25T03:29:41Z", "message": "NMS-12915: Add support for different sampling rates for different paths"}, "afterCommit": {"oid": "5ba8c9491801e6ff190471fefd062300ee13b6af", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/5ba8c9491801e6ff190471fefd062300ee13b6af", "committedDate": "2020-09-25T03:54:12Z", "message": "NMS-12915: Add support for different sampling rates for different paths"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "869f5981af6af2b94c2e8da38ecc010040faae62", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/869f5981af6af2b94c2e8da38ecc010040faae62", "committedDate": "2020-09-25T20:22:19Z", "message": "Merge branch 'develop' into jira/NMS-12915"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aa9e5df862492770f033c8b4e1c3be332ec1dae", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/6aa9e5df862492770f033c8b4e1c3be332ec1dae", "committedDate": "2020-09-25T20:30:43Z", "message": "Merge branch 'develop' into jira/NMS-12915"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37", "committedDate": "2020-09-28T16:05:27Z", "message": "Merge branch 'develop' into jira/NMS-12915"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NzgwODg5", "url": "https://github.com/OpenNMS/opennms/pull/3167#pullrequestreview-517780889", "createdAt": "2020-10-27T14:40:28Z", "commit": {"oid": "68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDo0MDoyOFrOHo_yPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDo0NjoyMlrOHpAGWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1MDE0MA==", "bodyText": "Looks like the whole block just interpolates all keys regardless of the group.\nMaybe something like this does the job:\nList<Map<String, String>> interpolatedMapList = packageConfig.getParameters().stream()\n    .map(parmeterMap -> getInterpolated(parmeterMap, serviceRef))\n    .collect(Collectors.toList());", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r512750140", "createdAt": "2020-10-27T14:40:28Z", "author": {"login": "fooker"}, "path": "features/telemetry/daemon/src/main/java/org/opennms/netmgt/telemetry/daemon/ConnectorManager.java", "diffHunk": "@@ -88,28 +91,43 @@ private void startStreamingFor(ConnectorConfig connectorConfig, PackageConfig pa\n             if (connectorsByKey.containsKey(key)) {\n                 LOG.debug(\"Connector already exists. Ignoring.\");\n             }\n-\n+            List<Map<String, String>> interpolatedMapList = new ArrayList<>();\n             // Flatten the parameters to a map\n             Map<String,String> parmMap = packageConfig.getParameters().stream()\n+                    .filter(parameter -> Strings.isNullOrEmpty(parameter.getGroup()))\n                     .collect(Collectors.toMap(\n                             Parameter::getKey,\n                             Parameter::getValue\n                     ));\n             // Interpolate meta-data in parameter values\n-            parmMap = Interpolator.interpolateStrings(parmMap, new FallbackScope(\n-                    entityScopeProvider.getScopeForNode(serviceRef.getNodeId()),\n-                    entityScopeProvider.getScopeForInterface(serviceRef.getNodeId(), InetAddressUtils.str(serviceRef.getIpAddress())),\n-                    entityScopeProvider.getScopeForService(serviceRef.getNodeId(), serviceRef.getIpAddress(), serviceRef.getServiceName())\n-            ));\n+            parmMap = getInterpolated(parmMap, serviceRef);\n+            interpolatedMapList.add(parmMap);\n+\n+            // Interpolate grouped parameters\n+            Map<String, Map<String, String>> parmMapByGroup = packageConfig.getParameters().stream()\n+                    .filter(parameter -> !Strings.isNullOrEmpty(parameter.getGroup()))\n+                    .collect(Collectors.groupingBy(Parameter::getGroup, Collectors.toMap(Parameter::getKey, Parameter::getValue)));\n+\n+            parmMapByGroup.forEach((group, parmeterMap) -> {\n+                interpolatedMapList.add(getInterpolated(parmeterMap, serviceRef));\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc1NTI4OA==", "bodyText": "I think it would be better to enforce en empty group on the global parameters. (And maybe print an error log message if they are specified with a group)", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r512755288", "createdAt": "2020-10-27T14:46:22Z", "author": {"login": "fooker"}, "path": "features/openconfig/telemetry-client/src/main/java/org/opennms/features/openconfig/telemetry/OpenConfigClientImpl.java", "diffHunk": "@@ -78,16 +87,24 @@\n     private ManagedChannel channel;\n     private final InetAddress host;\n     private Integer port;\n-    private Map<String, String> parameters = new HashMap<>();\n+    private String mode;\n+    private Integer interval;\n+    private Integer retries;\n+    private List<Map<String,String>> paramList = new ArrayList<>();\n     private AtomicBoolean closed = new AtomicBoolean(false);\n     private AtomicBoolean scheduled = new AtomicBoolean(false);\n     private ExecutorService executor = Executors.newSingleThreadExecutor();\n     private ScheduledExecutorService scheduledExecutor = Executors.newSingleThreadScheduledExecutor();\n \n-    public OpenConfigClientImpl(InetAddress host, Map<String, String> params) {\n+    public OpenConfigClientImpl(InetAddress host, List<Map<String, String>> paramList) {\n         this.host = Objects.requireNonNull(host);\n-        this.port = Objects.requireNonNull(StringUtils.parseInt(params.get(\"port\"), null));\n-        parameters.putAll(params);\n+        this.paramList.addAll(paramList);\n+        // Extract port and mode which are global.\n+        this.paramList.stream().filter(entry -> entry.get(\"port\") != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68ccac6a12cfd2a32d6de4e0f56d026caa0f7e37"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70c213244764cf322a28cebacb949bc202fa6212", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/70c213244764cf322a28cebacb949bc202fa6212", "committedDate": "2020-10-28T14:56:55Z", "message": "NMS-12915: Handle review comments\n\nAdd test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "315b26514689736eadec6aa05b59bdd940893d98", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/315b26514689736eadec6aa05b59bdd940893d98", "committedDate": "2020-10-28T19:28:42Z", "message": "NMS-12915: Update docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDczOTYz", "url": "https://github.com/OpenNMS/opennms/pull/3167#pullrequestreview-519073963", "createdAt": "2020-10-28T20:52:50Z", "commit": {"oid": "315b26514689736eadec6aa05b59bdd940893d98"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMDo1Mjo1MFrOHp89rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQyMTowMDoyOFrOHp9PKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1MjQ5Mw==", "bodyText": "Use groups to separate paths that need to be streamed at different frequencies.", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r513752493", "createdAt": "2020-10-28T20:52:50Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/telemetryd/protocols/openconfig.adoc", "diffHunk": "@@ -67,12 +67,17 @@ The data contains metadata and is structured as a list of `key:value` pairs.\n         <package name=\"OpenConfig-Default\">\n             <filter>IPADDR != '0.0.0.0'</filter>\n             <parameter key=\"port\" value=\"${requisition:oc.port|9000}\"/>\n-            <parameter key=\"paths\" value=\"/network-instances/network-instance[instance-name='master'],/protocols/protocol/bgp\"/>\n-            <parameter key=\"frequency\" value=\"${requisition:oc.frequency|300000}\"/>\n             <parameter key=\"retries\" value=\"12\"/>\n             <parameter key=\"interval\" value=\"300\"/>\n             <parameter key=\"tls.enabled\" value=\"${requisition:oc.tls.enabled}\"/>\n             <parameter key=\"tls.trust.cert.path\" value=\"${requisition:trust.cert.path}\"/>\n+           <!-- Use groups to separate paths which needs to be streamed at different frequencies -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "315b26514689736eadec6aa05b59bdd940893d98"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1NDYzOQ==", "bodyText": "Use the group element to group parameters into multiple groups when you need to stream different paths at different frequencies using\n\n(I don't understand why I can't directly quote individual lines anymore.)", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r513754639", "createdAt": "2020-10-28T20:56:33Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/telemetryd/protocols/openconfig.adoc", "diffHunk": "@@ -84,6 +89,9 @@ Use multiple packages to customize the parameter's subsets of nodes.\n \n The `filter` element is optional; if missing, all services with the given name will be considered.\n \n+Parameters can also grouped into multiple groups when different paths need to be streamed at different frequencies using", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "315b26514689736eadec6aa05b59bdd940893d98"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1NTY4OQ==", "bodyText": "Global parameters like port, and connection-specific parameters, don't need any group.", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r513755689", "createdAt": "2020-10-28T20:58:21Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/telemetryd/protocols/openconfig.adoc", "diffHunk": "@@ -84,6 +89,9 @@ Use multiple packages to customize the parameter's subsets of nodes.\n \n The `filter` element is optional; if missing, all services with the given name will be considered.\n \n+Parameters can also grouped into multiple groups when different paths need to be streamed at different frequencies using\n+`group` element in parameter. Global parameters like port and connection specific parameters doesn't need any group.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "315b26514689736eadec6aa05b59bdd940893d98"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1NjM3Nw==", "bodyText": ".Globals passed to the script for gNMI (default) mode.", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r513756377", "createdAt": "2020-10-28T20:59:29Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/telemetryd/protocols/openconfig.adoc", "diffHunk": "@@ -128,7 +137,16 @@ The script will be invoked for every OpenConfig stream data that is received and\n \n The following globals will be passed to the script:\n \n-.Globals passed to the script\n+.Globals passed to the script for gnmi (default) mode.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "315b26514689736eadec6aa05b59bdd940893d98"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzc1Njk3MQ==", "bodyText": ".Globals passed to the script for JTI mode.", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r513756971", "createdAt": "2020-10-28T21:00:28Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/telemetryd/protocols/openconfig.adoc", "diffHunk": "@@ -128,7 +137,16 @@ The script will be invoked for every OpenConfig stream data that is received and\n \n The following globals will be passed to the script:\n \n-.Globals passed to the script\n+.Globals passed to the script for gnmi (default) mode.\n+[options=\"header, autowidth\"]\n+|===\n+| Parameter  | Description                                                    | Type\n+| `agent`    | The agent (node) against which the metrics will be associated  | `org.opennms.netmgt.collection.api.CollectionAgent`\n+| `builder`  | Builder in which the resources and metrics should be added     | `org.opennms.netmgt.collection.support.builder.CollectionSetBuilder`\n+| `msg`      | Decoded message from which the metrics should be extracted     | `org.opennms.features.openconfig.proto.gnmi.Gnmi.SubscribeResponse`\n+|===\n+\n+.Globals passed to the script for jti mode.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "315b26514689736eadec6aa05b59bdd940893d98"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50e1d70261c0d99dad510dfffb707e0a868bb469", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/50e1d70261c0d99dad510dfffb707e0a868bb469", "committedDate": "2020-10-28T21:30:13Z", "message": "NMS-12915: Handle review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNjMzODM2", "url": "https://github.com/OpenNMS/opennms/pull/3167#pullrequestreview-520633836", "createdAt": "2020-10-30T12:47:33Z", "commit": {"oid": "50e1d70261c0d99dad510dfffb707e0a868bb469"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMjo0NzozM1rOHrNigQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMjo0NzozM1rOHrNigQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA3MjY0MQ==", "bodyText": "@cgorantla ... Sorry my edit was confusing, but it went over two lines. This section should read like this:\nUse the group element to group parameters into multiple groups when you need to stream different paths at different frequencies. Global parameters like port, and connection-specific parameters, don't need any group.", "url": "https://github.com/OpenNMS/opennms/pull/3167#discussion_r515072641", "createdAt": "2020-10-30T12:47:33Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/telemetryd/protocols/openconfig.adoc", "diffHunk": "@@ -89,8 +89,8 @@ Use multiple packages to customize the parameter's subsets of nodes.\n \n The `filter` element is optional; if missing, all services with the given name will be considered.\n \n-Parameters can also grouped into multiple groups when different paths need to be streamed at different frequencies using\n-`group` element in parameter. Global parameters like port and connection specific parameters doesn't need any group.\n+Use the group element to group parameters into multiple groups when you need to stream different paths at different frequencies using\n+`group` element in parameter. Global parameters like port, and connection-specific parameters, don't need any group.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e1d70261c0d99dad510dfffb707e0a868bb469"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNjM0MDQz", "url": "https://github.com/OpenNMS/opennms/pull/3167#pullrequestreview-520634043", "createdAt": "2020-10-30T12:47:53Z", "commit": {"oid": "50e1d70261c0d99dad510dfffb707e0a868bb469"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "410cc6a019c468bfdf78eecacb3925b595492fc9", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/410cc6a019c468bfdf78eecacb3925b595492fc9", "committedDate": "2020-10-30T14:17:46Z", "message": "NMS-12915: Doc update\n[skip ci]"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzkzNTQ1", "url": "https://github.com/OpenNMS/opennms/pull/3167#pullrequestreview-520793545", "createdAt": "2020-10-30T15:40:40Z", "commit": {"oid": "410cc6a019c468bfdf78eecacb3925b595492fc9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3895, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}