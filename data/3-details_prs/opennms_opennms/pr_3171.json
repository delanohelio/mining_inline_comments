{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0ODcwOTE4", "number": 3171, "title": "BS-55: sort attributes alphanumerically", "bodyText": "Customer issue for sorting the list of custom resource graphs alphabetically (accounting for numerical sort in substrings).\nExternal References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/BS-55", "createdAt": "2020-09-29T14:24:14Z", "url": "https://github.com/OpenNMS/opennms/pull/3171", "merged": true, "mergeCommit": {"oid": "e357e8d6f6f8dc17fd75786f289a63746c89f3f0"}, "closed": true, "closedAt": "2020-09-29T17:30:26Z", "author": {"login": "RangerRick"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNpBUeAFqTQ5ODUyOTQ2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNp2jsgH2gAyNDk0ODcwOTE4OmUzOTAwZDRlODFjMTg3ZjA4NzBlYmViMmRmYzU2MWVjZWI2ZTExZGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NTI5NDY5", "url": "https://github.com/OpenNMS/opennms/pull/3171#pullrequestreview-498529469", "createdAt": "2020-09-29T14:25:48Z", "commit": {"oid": "5ec94a0efd67d9c56831ead78f7401ea14ef0cec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoyNTo0OFrOHZv9AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoyNTo0OFrOHZv9AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc2MjExMw==", "bodyText": "This is screaming at me for unit test coverage.", "url": "https://github.com/OpenNMS/opennms/pull/3171#discussion_r496762113", "createdAt": "2020-09-29T14:25:48Z", "author": {"login": "j-white"}, "path": "opennms-dao/src/main/java/org/opennms/netmgt/dao/support/RrdResourceAttributeUtils.java", "diffHunk": "@@ -255,4 +256,79 @@ protected static String getStringProperty(File directory, String key) {\n             throw new DataAccessResourceFailureException(message, e);\n         }\n     }\n+\n+    /**\n+     * Alphanumeric sort that handles substrings with numeric components\n+     */\n+    public static class AlphaNumericOnmsAttributeComparator implements Serializable, Comparator<OnmsAttribute> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec94a0efd67d9c56831ead78f7401ea14ef0cec"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92ed17e7cfed6144f983e7b1f8c009114dcf9d5f", "author": {"user": {"login": "RangerRick", "name": "Benjamin Reed"}}, "url": "https://github.com/OpenNMS/opennms/commit/92ed17e7cfed6144f983e7b1f8c009114dcf9d5f", "committedDate": "2020-09-29T14:33:07Z", "message": "NMS-12931: sort attributes alphanumerically"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d58056a0eb2a71364214511c2fb591d15fcf7d40", "author": {"user": {"login": "RangerRick", "name": "Benjamin Reed"}}, "url": "https://github.com/OpenNMS/opennms/commit/d58056a0eb2a71364214511c2fb591d15fcf7d40", "committedDate": "2020-09-29T14:54:50Z", "message": "NMS-12931: unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ec94a0efd67d9c56831ead78f7401ea14ef0cec", "author": {"user": {"login": "RangerRick", "name": "Benjamin Reed"}}, "url": "https://github.com/OpenNMS/opennms/commit/5ec94a0efd67d9c56831ead78f7401ea14ef0cec", "committedDate": "2020-09-28T20:06:16Z", "message": "BS-55: sort attributes alphanumerically"}, "afterCommit": {"oid": "d58056a0eb2a71364214511c2fb591d15fcf7d40", "author": {"user": {"login": "RangerRick", "name": "Benjamin Reed"}}, "url": "https://github.com/OpenNMS/opennms/commit/d58056a0eb2a71364214511c2fb591d15fcf7d40", "committedDate": "2020-09-29T14:54:50Z", "message": "NMS-12931: unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NjAxODY2", "url": "https://github.com/OpenNMS/opennms/pull/3171#pullrequestreview-498601866", "createdAt": "2020-09-29T15:16:59Z", "commit": {"oid": "d58056a0eb2a71364214511c2fb591d15fcf7d40"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToxNjo1OVrOHZydTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToxNjo1OVrOHZydTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgwMzE0OQ==", "bodyText": "lengthFirstStr and lengthSecondStr can be final", "url": "https://github.com/OpenNMS/opennms/pull/3171#discussion_r496803149", "createdAt": "2020-09-29T15:16:59Z", "author": {"login": "christianpape"}, "path": "opennms-dao/src/main/java/org/opennms/netmgt/dao/support/RrdResourceAttributeUtils.java", "diffHunk": "@@ -255,4 +256,79 @@ protected static String getStringProperty(File directory, String key) {\n             throw new DataAccessResourceFailureException(message, e);\n         }\n     }\n+\n+    /**\n+     * Alphanumeric sort that handles substrings with numeric components\n+     */\n+    public static class AlphaNumericOnmsAttributeComparator implements Serializable, Comparator<OnmsAttribute> {\n+        private static final long serialVersionUID = 1;\n+\n+        public int compare(final OnmsAttribute firstAtt, final OnmsAttribute secondAtt) {\n+            // Sorting algorithm found here: http://blog.icodejava.com/261/how-to-sort-alpha-numeric-strings-in-java/\n+            final String firstString  = firstAtt.getName();\n+            final String secondString = secondAtt.getName();\n+\n+            if (secondString == null || firstString == null) {\n+                return 0;\n+            }\n+\n+            int lengthFirstStr = firstString.length();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d58056a0eb2a71364214511c2fb591d15fcf7d40"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NjAyNTI3", "url": "https://github.com/OpenNMS/opennms/pull/3171#pullrequestreview-498602527", "createdAt": "2020-09-29T15:17:17Z", "commit": {"oid": "d58056a0eb2a71364214511c2fb591d15fcf7d40"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToxNzoxN1rOHZyeIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToxNzoxN1rOHZyeIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgwMzM2MQ==", "bodyText": "result can also be final", "url": "https://github.com/OpenNMS/opennms/pull/3171#discussion_r496803361", "createdAt": "2020-09-29T15:17:17Z", "author": {"login": "christianpape"}, "path": "opennms-dao/src/main/java/org/opennms/netmgt/dao/support/RrdResourceAttributeUtils.java", "diffHunk": "@@ -255,4 +256,79 @@ protected static String getStringProperty(File directory, String key) {\n             throw new DataAccessResourceFailureException(message, e);\n         }\n     }\n+\n+    /**\n+     * Alphanumeric sort that handles substrings with numeric components\n+     */\n+    public static class AlphaNumericOnmsAttributeComparator implements Serializable, Comparator<OnmsAttribute> {\n+        private static final long serialVersionUID = 1;\n+\n+        public int compare(final OnmsAttribute firstAtt, final OnmsAttribute secondAtt) {\n+            // Sorting algorithm found here: http://blog.icodejava.com/261/how-to-sort-alpha-numeric-strings-in-java/\n+            final String firstString  = firstAtt.getName();\n+            final String secondString = secondAtt.getName();\n+\n+            if (secondString == null || firstString == null) {\n+                return 0;\n+            }\n+\n+            int lengthFirstStr = firstString.length();\n+            int lengthSecondStr = secondString.length();\n+\n+            int index1 = 0;\n+            int index2 = 0;\n+\n+            while (index1 < lengthFirstStr && index2 < lengthSecondStr) {\n+                char ch1 = firstString.charAt(index1);\n+                char ch2 = secondString.charAt(index2);\n+\n+                final char[] space1 = new char[lengthFirstStr];\n+                final char[] space2 = new char[lengthSecondStr];\n+\n+                int loc1 = 0;\n+                int loc2 = 0;\n+\n+                do {\n+                    space1[loc1++] = ch1;\n+                    index1++;\n+\n+                    if (index1 < lengthFirstStr) {\n+                        ch1 = firstString.charAt(index1);\n+                    } else {\n+                        break;\n+                    }\n+                } while (Character.isDigit(ch1) == Character.isDigit(space1[0]));\n+\n+                do {\n+                    space2[loc2++] = ch2;\n+                    index2++;\n+\n+                    if (index2 < lengthSecondStr) {\n+                        ch2 = secondString.charAt(index2);\n+                    } else {\n+                        break;\n+                    }\n+                } while (Character.isDigit(ch2) == Character.isDigit(space2[0]));\n+\n+                final String str1 = new String(space1);\n+                final String str2 = new String(space2);\n+\n+                int result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d58056a0eb2a71364214511c2fb591d15fcf7d40"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NjA5NjY2", "url": "https://github.com/OpenNMS/opennms/pull/3171#pullrequestreview-498609666", "createdAt": "2020-09-29T15:22:25Z", "commit": {"oid": "d58056a0eb2a71364214511c2fb591d15fcf7d40"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3900d4e81c187f0870ebeb2dfc561eceb6e11de", "author": {"user": {"login": "RangerRick", "name": "Benjamin Reed"}}, "url": "https://github.com/OpenNMS/opennms/commit/e3900d4e81c187f0870ebeb2dfc561eceb6e11de", "committedDate": "2020-09-29T15:23:57Z", "message": "NMS-12931: feedback from @christianpape"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3901, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}