{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDY0NjQw", "number": 2971, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo0OTozNlrODw41Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToxNjoxNVrODyjRxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTg5MzQ2OnYy", "diffSide": "RIGHT", "path": "opennms-provision/opennms-provisiond/src/main/java/org/opennms/netmgt/provision/service/DefaultProvisionService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo0OTozNlrOGEIeBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo0OTozNlrOGEIeBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NjI0NA==", "bodyText": "Seems odd to mix calls to getTracer() and direct access to m_tracer in this same method.", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r406986244", "createdAt": "2020-04-10T23:49:36Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-provisiond/src/main/java/org/opennms/netmgt/provision/service/DefaultProvisionService.java", "diffHunk": "@@ -1453,4 +1470,22 @@ public void setServiceTypeDao(final ServiceTypeDao dao) {\n     public void setEventForwarder(final EventForwarder eventForwarder) {\n         m_eventForwarder = eventForwarder;\n     }\n+\n+    public Span buildAndStartSpan(String name, SpanContext spanContext) {\n+        if(getTracer() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTg5NjU4OnYy", "diffSide": "RIGHT", "path": "opennms-provision/opennms-provisiond/src/main/java/org/opennms/netmgt/provision/service/Provisioner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1MjoyNlrOGEIf2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1MjoyNlrOGEIf2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NjcxMw==", "bodyText": "this.m_", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r406986713", "createdAt": "2020-04-10T23:52:26Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-provisiond/src/main/java/org/opennms/netmgt/provision/service/Provisioner.java", "diffHunk": "@@ -214,6 +222,10 @@ public void setMonitoringSystemDao(MonitoringSystemDao monitoringSystemDao) {\n         this.monitoringSystemDao = monitoringSystemDao;\n     }\n \n+    public void setTracerRegistry(TracerRegistry tracerRegistry) {\n+        this.m_tracerRegistry = tracerRegistry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTg5NzE0OnYy", "diffSide": "RIGHT", "path": "opennms-provision/opennms-provisiond/src/test/java/org/opennms/netmgt/provision/service/InvalidRequisitionDataIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1Mjo1MFrOGEIgKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1Mjo1MFrOGEIgKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4Njc5NQ==", "bodyText": "Unnecessary change.", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r406986795", "createdAt": "2020-04-10T23:52:50Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-provisiond/src/test/java/org/opennms/netmgt/provision/service/InvalidRequisitionDataIT.java", "diffHunk": "@@ -143,7 +143,7 @@ public void testImportInvalidAsset() throws Exception {\n         // Change it to \"pollerCategory\" (capital 'C') and the test passes...\n         m_provisioner.doImport(invalidAssetFieldResource.getURL().toString(), Boolean.TRUE.toString());\n         waitForEverything();\n-        m_eventManager.getEventAnticipator().verifyAnticipated();\n+            m_eventManager.getEventAnticipator().verifyAnticipated();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTg5ODg5OnYy", "diffSide": "RIGHT", "path": "opennms-provision/opennms-provisiond/src/test/java/org/opennms/netmgt/provision/service/ProvisionerIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1Mzo1NVrOGEIhGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1NToyM1rOGFejMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NzAzNQ==", "bodyText": "I'm guessing this is related to NMS-12503? :)", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r406987035", "createdAt": "2020-04-10T23:53:55Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-provisiond/src/test/java/org/opennms/netmgt/provision/service/ProvisionerIT.java", "diffHunk": "@@ -1300,6 +1301,15 @@ public void testProvisionServiceGetScheduleForNodesUponDelete() throws Exception\n \n         assertEquals(9, schedulesForNode.size());\n         assertEquals(9, m_provisioner.getScheduleLength());\n+\n+        // Check that re-scheduling won't trigger duplicate scheduling for a given node.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5NjU5Mw==", "bodyText": "yeah, similar issue but https://issues.opennms.org/browse/NMS-12504", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r408396593", "createdAt": "2020-04-14T19:55:23Z", "author": {"login": "cgorantla"}, "path": "opennms-provision/opennms-provisiond/src/test/java/org/opennms/netmgt/provision/service/ProvisionerIT.java", "diffHunk": "@@ -1300,6 +1301,15 @@ public void testProvisionServiceGetScheduleForNodesUponDelete() throws Exception\n \n         assertEquals(9, schedulesForNode.size());\n         assertEquals(9, m_provisioner.getScheduleLength());\n+\n+        // Check that re-scheduling won't trigger duplicate scheduling for a given node.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NzAzNQ=="}, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzMzMzgzOnYy", "diffSide": "RIGHT", "path": "opennms-provision/opennms-detectorclient-rpc/src/main/java/org/opennms/netmgt/provision/detector/client/rpc/DetectorClientRpcModule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToxNjoxNVrOGGqX8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToxNjoxNVrOGGqX8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYzODg5Ng==", "bodyText": "We'll need to re-think this for Minion.", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r409638896", "createdAt": "2020-04-16T15:16:15Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-detectorclient-rpc/src/main/java/org/opennms/netmgt/provision/detector/client/rpc/DetectorClientRpcModule.java", "diffHunk": "@@ -86,6 +86,7 @@ public DetectorClientRpcModule() {\n                 @Override\n                 public DetectorResponseDTO get() {\n                     try {\n+                        detectRequest.preDetect();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4327b53744e5aec104dbb639abf5558e7b79c9e1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3157, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}