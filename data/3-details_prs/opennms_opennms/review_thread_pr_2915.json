{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2OTI1Mzg5", "number": 2915, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMDo0NjozOFrODnTOAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMTo0NzowMFrODnsClQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTM1OTM3OnYy", "diffSide": "LEFT", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMDo0NjozOFrOF1N9uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMDo0NjozOFrOF1N9uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM0NzY0MA==", "bodyText": "We need to keep this logic. We can perform the check before the interfaceToNodeCache lookup, and store the results in a separate cache (keyed by contextKey).", "url": "https://github.com/OpenNMS/opennms/pull/2915#discussion_r391347640", "createdAt": "2020-03-12T00:46:38Z", "author": {"login": "j-white"}, "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "diffHunk": "@@ -150,40 +148,24 @@ private static boolean isPrivateAddress(String ipAddress) {\n         return inetAddress.isLoopbackAddress() || inetAddress.isLinkLocalAddress() || inetAddress.isSiteLocalAddress();\n     }\n \n-    private Optional<NodeDocument> getNodeInfoFromCache(final String location, final String ipAddress, final ContextKey contextKey, final String value) {\n-        final NodeInfoKey key = new NodeInfoKey(location, ipAddress, contextKey, value);\n-        try {\n-            return nodeInfoCache.get(key);\n-        } catch (ExecutionException e) {\n-            LOG.error(\"Error while retrieving NodeDocument from NodeInfoCache: {}.\", e.getMessage(), e);\n-            throw new RuntimeException(e);\n+    private Optional<NodeDocument> getNodeInfoFromCache(final String location, final String ipAddress) {\n+        final Optional<Integer> nodeId = interfaceToNodeCache.getFirstNodeId(location, InetAddressUtils.addr(ipAddress));\n+        if(nodeId.isPresent()) {\n+            try {\n+                return nodeInfoCache.get(nodeId.get());\n+            } catch (ExecutionException e) {\n+                LOG.error(\"Error while retrieving NodeDocument from NodeInfoCache: {}.\", e.getMessage(), e);\n+                throw new RuntimeException(e);\n+            }\n         }\n+        return Optional.empty();\n     }\n \n-    private Optional<NodeDocument> getNodeInfo(final String location, final String ipAddress, final ContextKey contextKey, final String value) {\n-        return getNodeInfo(location, InetAddressUtils.addr(ipAddress), contextKey, value);\n-    }\n \n-    private Optional<NodeDocument> getNodeInfo(final String location, final InetAddress ipAddress, final ContextKey contextKey, final String value) {\n+    private Optional<NodeDocument> getNodeInfo(Integer nodeId) {\n         OnmsNode onmsNode = null;\n-\n-        if (contextKey != null && !Strings.isNullOrEmpty(value)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1948cd49cd22742a1d4182be36822cb95395b13"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTQyMjQ5OnYy", "diffSide": "RIGHT", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMTo0NDo0OVrOF11GhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMTo0NDo0OVrOF11GhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4ODg2OA==", "bodyText": "Let's only perform this if contextKey != null && !Strings.isNullOrEmpty(value) and remove that check from the cache loader (i.e. getNodeInfoFromMetadataContext)", "url": "https://github.com/OpenNMS/opennms/pull/2915#discussion_r391988868", "createdAt": "2020-03-13T01:44:49Z", "author": {"login": "j-white"}, "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "diffHunk": "@@ -151,68 +163,40 @@ private static boolean isPrivateAddress(String ipAddress) {\n     }\n \n     private Optional<NodeDocument> getNodeInfoFromCache(final String location, final String ipAddress, final ContextKey contextKey, final String value) {\n-        final NodeInfoKey key = new NodeInfoKey(location, ipAddress, contextKey, value);\n+\n+        Optional<NodeDocument> nodeDocument;\n+        final NodeMetadataKey metadataKey = new NodeMetadataKey(contextKey, value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620df1354a0ce717a5623bbdfc94e412b237d864"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTQyMzYwOnYy", "diffSide": "RIGHT", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMTo0NTozOVrOF11HNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMTo0NTozOVrOF11HNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4OTA0Ng==", "bodyText": "Would be nice to time this with the nodeLoadTimer too.", "url": "https://github.com/OpenNMS/opennms/pull/2915#discussion_r391989046", "createdAt": "2020-03-13T01:45:39Z", "author": {"login": "j-white"}, "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "diffHunk": "@@ -221,19 +205,58 @@ private NodeInfoKey(final String location, final String ipAddress, final Context\n         public boolean equals(Object o) {\n             if (this == o) return true;\n             if (o == null || getClass() != o.getClass()) return false;\n-            final NodeInfoKey that = (NodeInfoKey) o;\n-            return Objects.equals(location, that.location) &&\n-                    Objects.equals(ipAddress, that.ipAddress) &&\n-                    Objects.equals(contextKey, that.contextKey) &&\n+            final NodeMetadataKey that = (NodeMetadataKey) o;\n+            return Objects.equals(contextKey, that.contextKey) &&\n                     Objects.equals(value, that.value);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(location, ipAddress, contextKey, value);\n+            return Objects.hash(contextKey, value);\n         }\n     }\n \n+    private Optional<NodeDocument> getNodeInfoFromMetadataContext(ContextKey contextKey, String value) {\n+        OnmsNode onmsNode = null;\n+        if (contextKey != null && !Strings.isNullOrEmpty(value)) {\n+            final List<OnmsNode> nodes = nodeDao.findNodeWithMetaData(contextKey.getContext(), contextKey.getKey(), value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620df1354a0ce717a5623bbdfc94e412b237d864"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTQyNjEzOnYy", "diffSide": "RIGHT", "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMTo0NzowMFrOF11IhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwMTo0NzowMFrOF11IhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTk4OTM4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            onmsNode = nodes.get(0);\n          \n          \n            \n                            return mapOnmsNodeToNodeDocument(nodes.get(0));\n          \n      \n    \n    \n  \n\nthen can remove onmsNode local variable and other if statement bellow.", "url": "https://github.com/OpenNMS/opennms/pull/2915#discussion_r391989381", "createdAt": "2020-03-13T01:47:00Z", "author": {"login": "j-white"}, "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/DocumentEnricher.java", "diffHunk": "@@ -221,19 +205,58 @@ private NodeInfoKey(final String location, final String ipAddress, final Context\n         public boolean equals(Object o) {\n             if (this == o) return true;\n             if (o == null || getClass() != o.getClass()) return false;\n-            final NodeInfoKey that = (NodeInfoKey) o;\n-            return Objects.equals(location, that.location) &&\n-                    Objects.equals(ipAddress, that.ipAddress) &&\n-                    Objects.equals(contextKey, that.contextKey) &&\n+            final NodeMetadataKey that = (NodeMetadataKey) o;\n+            return Objects.equals(contextKey, that.contextKey) &&\n                     Objects.equals(value, that.value);\n         }\n \n         @Override\n         public int hashCode() {\n-            return Objects.hash(location, ipAddress, contextKey, value);\n+            return Objects.hash(contextKey, value);\n         }\n     }\n \n+    private Optional<NodeDocument> getNodeInfoFromMetadataContext(ContextKey contextKey, String value) {\n+        OnmsNode onmsNode = null;\n+        if (contextKey != null && !Strings.isNullOrEmpty(value)) {\n+            final List<OnmsNode> nodes = nodeDao.findNodeWithMetaData(contextKey.getContext(), contextKey.getKey(), value);\n+\n+            if (!nodes.isEmpty()) {\n+                onmsNode = nodes.get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "620df1354a0ce717a5623bbdfc94e412b237d864"}, "originalPosition": 151}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 803, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}