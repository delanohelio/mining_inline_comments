{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NzU0MTUw", "number": 3223, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowMjo1NlrOE88e6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowMjo1NlrOE88e6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzQwOTY4OnYy", "diffSide": "RIGHT", "path": "core/ipc/sink/common/src/main/java/org/opennms/core/ipc/sink/common/AsyncDispatcherImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowMjo1NlrOH5Xdlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMzoxMToxMFrOH5bybg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxNTI4Ng==", "bodyText": "I guess this should only be the case when the result from enqueuing was deferred so we did not persist a latch to track it. I wonder why the above condition on line 224 wasn't written to handle this originally. Hope we are not missing anything, been a while since I looked at this.", "url": "https://github.com/OpenNMS/opennms/pull/3223#discussion_r529915286", "createdAt": "2020-11-24T22:02:56Z", "author": {"login": "mattixtech"}, "path": "core/ipc/sink/common/src/main/java/org/opennms/core/ipc/sink/common/AsyncDispatcherImpl.java", "diffHunk": "@@ -224,8 +224,10 @@ void enqueue(T message, String key, Consumer<DispatchQueue.EnqueueResult> onEnqu\n             if (messageEntry.getKey() == null) {\n                 return messageEntry;\n             }\n-\n-            resultRecordedMap.remove(messageEntry.getKey()).await();\n+            CountDownLatch resultRecorded = resultRecordedMap.remove(messageEntry.getKey());\n+            if(resultRecorded != null) {\n+                resultRecorded.await();\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a809ccd729f46a72d380d905e79db97cdfd2bc4"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk4NjE1OA==", "bodyText": "yeah, DEFERRED seems to be the one case this could happen. Think this is corner case when default Offheap Queue fills up.", "url": "https://github.com/OpenNMS/opennms/pull/3223#discussion_r529986158", "createdAt": "2020-11-24T23:11:10Z", "author": {"login": "cgorantla"}, "path": "core/ipc/sink/common/src/main/java/org/opennms/core/ipc/sink/common/AsyncDispatcherImpl.java", "diffHunk": "@@ -224,8 +224,10 @@ void enqueue(T message, String key, Consumer<DispatchQueue.EnqueueResult> onEnqu\n             if (messageEntry.getKey() == null) {\n                 return messageEntry;\n             }\n-\n-            resultRecordedMap.remove(messageEntry.getKey()).await();\n+            CountDownLatch resultRecorded = resultRecordedMap.remove(messageEntry.getKey());\n+            if(resultRecorded != null) {\n+                resultRecorded.await();\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxNTI4Ng=="}, "originalCommit": {"oid": "0a809ccd729f46a72d380d905e79db97cdfd2bc4"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2947, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}