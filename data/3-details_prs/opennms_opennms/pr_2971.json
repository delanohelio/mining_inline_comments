{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMDY0NjQw", "number": 2971, "title": "NMS-12374: Add tracing for provisiond", "bodyText": "External References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12374\nBamboo (Continuous Integration): https://bamboo.opennms.org/", "createdAt": "2020-04-10T20:48:18Z", "url": "https://github.com/OpenNMS/opennms/pull/2971", "merged": true, "mergeCommit": {"oid": "71e0825ec4521aeb9a8dd68553c1bc808b670e23"}, "closed": true, "closedAt": "2020-05-01T21:05:58Z", "author": {"login": "cgorantla"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWaENqgFqTM5MTcxMDQ5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccbjasgFqTQwMjg2NDExNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzEwNDk2", "url": "https://github.com/OpenNMS/opennms/pull/2971#pullrequestreview-391710496", "createdAt": "2020-04-10T23:49:35Z", "commit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo0OTozNlrOGEIeBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1Mzo1NVrOGEIhGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NjI0NA==", "bodyText": "Seems odd to mix calls to getTracer() and direct access to m_tracer in this same method.", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r406986244", "createdAt": "2020-04-10T23:49:36Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-provisiond/src/main/java/org/opennms/netmgt/provision/service/DefaultProvisionService.java", "diffHunk": "@@ -1453,4 +1470,22 @@ public void setServiceTypeDao(final ServiceTypeDao dao) {\n     public void setEventForwarder(final EventForwarder eventForwarder) {\n         m_eventForwarder = eventForwarder;\n     }\n+\n+    public Span buildAndStartSpan(String name, SpanContext spanContext) {\n+        if(getTracer() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NjcxMw==", "bodyText": "this.m_", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r406986713", "createdAt": "2020-04-10T23:52:26Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-provisiond/src/main/java/org/opennms/netmgt/provision/service/Provisioner.java", "diffHunk": "@@ -214,6 +222,10 @@ public void setMonitoringSystemDao(MonitoringSystemDao monitoringSystemDao) {\n         this.monitoringSystemDao = monitoringSystemDao;\n     }\n \n+    public void setTracerRegistry(TracerRegistry tracerRegistry) {\n+        this.m_tracerRegistry = tracerRegistry;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4Njc5NQ==", "bodyText": "Unnecessary change.", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r406986795", "createdAt": "2020-04-10T23:52:50Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-provisiond/src/test/java/org/opennms/netmgt/provision/service/InvalidRequisitionDataIT.java", "diffHunk": "@@ -143,7 +143,7 @@ public void testImportInvalidAsset() throws Exception {\n         // Change it to \"pollerCategory\" (capital 'C') and the test passes...\n         m_provisioner.doImport(invalidAssetFieldResource.getURL().toString(), Boolean.TRUE.toString());\n         waitForEverything();\n-        m_eventManager.getEventAnticipator().verifyAnticipated();\n+            m_eventManager.getEventAnticipator().verifyAnticipated();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NzAzNQ==", "bodyText": "I'm guessing this is related to NMS-12503? :)", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r406987035", "createdAt": "2020-04-10T23:53:55Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-provisiond/src/test/java/org/opennms/netmgt/provision/service/ProvisionerIT.java", "diffHunk": "@@ -1300,6 +1301,15 @@ public void testProvisionServiceGetScheduleForNodesUponDelete() throws Exception\n \n         assertEquals(9, schedulesForNode.size());\n         assertEquals(9, m_provisioner.getScheduleLength());\n+\n+        // Check that re-scheduling won't trigger duplicate scheduling for a given node.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b127f138f880829864c1e7aa5dcb4bd5a697d00"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzM4MDM0", "url": "https://github.com/OpenNMS/opennms/pull/2971#pullrequestreview-394738034", "createdAt": "2020-04-16T15:16:15Z", "commit": {"oid": "4327b53744e5aec104dbb639abf5558e7b79c9e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToxNjoxNVrOGGqX8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNToxNjoxNVrOGGqX8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYzODg5Ng==", "bodyText": "We'll need to re-think this for Minion.", "url": "https://github.com/OpenNMS/opennms/pull/2971#discussion_r409638896", "createdAt": "2020-04-16T15:16:15Z", "author": {"login": "j-white"}, "path": "opennms-provision/opennms-detectorclient-rpc/src/main/java/org/opennms/netmgt/provision/detector/client/rpc/DetectorClientRpcModule.java", "diffHunk": "@@ -86,6 +86,7 @@ public DetectorClientRpcModule() {\n                 @Override\n                 public DetectorResponseDTO get() {\n                     try {\n+                        detectRequest.preDetect();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4327b53744e5aec104dbb639abf5558e7b79c9e1"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "653d5d2545dd41ea7e3c9c77d2772b0c80f4b89c", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/653d5d2545dd41ea7e3c9c77d2772b0c80f4b89c", "committedDate": "2020-04-23T17:22:55Z", "message": "NMS-12374: Add tracing for provisiond"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0198fbbb37f7b70d07158f0b02d2f43f8bd79d3", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/e0198fbbb37f7b70d07158f0b02d2f43f8bd79d3", "committedDate": "2020-04-23T17:23:14Z", "message": "NMS-12374: Add preDetect to trace start of detect\n\nAdd span for InterfaceScan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2161ddeaefa0c74932bb06743d0200c08955ed8b", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/2161ddeaefa0c74932bb06743d0200c08955ed8b", "committedDate": "2020-04-23T17:23:43Z", "message": "NMS-12374: Extend tracing from the Provisiond module to RPC client."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84d29ec3c876c57a4af68f1be4f3c3d189b598f3", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/84d29ec3c876c57a4af68f1be4f3c3d189b598f3", "committedDate": "2020-04-23T17:23:58Z", "message": "NMS-12374: Use callback for detecting start of span for default location\n\nActual detection depends on thread availability from rescan thread pool.\nTo exactly know when detection is happening, send callback just before\ndetect from DetectorClientRpcModule. Callback will start span."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46424b988b80105c6cdeab804a98d327cc267234", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/46424b988b80105c6cdeab804a98d327cc267234", "committedDate": "2020-04-23T17:17:47Z", "message": "Merge branch 'cg/jira/NMS-12374' into jira/NMS-12374"}, "afterCommit": {"oid": "84d29ec3c876c57a4af68f1be4f3c3d189b598f3", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/84d29ec3c876c57a4af68f1be4f3c3d189b598f3", "committedDate": "2020-04-23T17:23:58Z", "message": "NMS-12374: Use callback for detecting start of span for default location\n\nActual detection depends on thread availability from rescan thread pool.\nTo exactly know when detection is happening, send callback just before\ndetect from DetectorClientRpcModule. Callback will start span."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyODY0MTE1", "url": "https://github.com/OpenNMS/opennms/pull/2971#pullrequestreview-402864115", "createdAt": "2020-04-29T17:02:05Z", "commit": {"oid": "84d29ec3c876c57a4af68f1be4f3c3d189b598f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3585, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}