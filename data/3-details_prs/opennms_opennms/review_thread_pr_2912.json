{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0Mzk3MjEz", "number": 2912, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzozMToyMVrODlhBIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzozMTozOFrODl4XKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjY0ODY1OnYy", "diffSide": "RIGHT", "path": "opennms-container/minion/confd/templates/system.properties.tmpl", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzozMToyMVrOFydDKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODowMzozNVrOFyeJYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0OTA2NA==", "bodyText": "Can we update the default/existing system.properties files to include a statement like ${optionals} = confd.system.properties  and append the properties there rather than templating this file?\nThat would save us from having to maintain this template for Karaf upgrades going forward.", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r388449064", "createdAt": "2020-03-05T17:31:21Z", "author": {"login": "j-white"}, "path": "opennms-container/minion/confd/templates/system.properties.tmpl", "diffHunk": "@@ -0,0 +1,161 @@\n+################################################################################", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ccccd41c3e8ef3d725db74b605c577447fe2c02"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2MjA3NQ==", "bodyText": "Yes, that should work. Do we have to worry about duplicates in that case? Or would we treat the values that are currently in the file as non-configurable by confd.", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r388462075", "createdAt": "2020-03-05T17:55:21Z", "author": {"login": "mattixtech"}, "path": "opennms-container/minion/confd/templates/system.properties.tmpl", "diffHunk": "@@ -0,0 +1,161 @@\n+################################################################################", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0OTA2NA=="}, "originalCommit": {"oid": "4ccccd41c3e8ef3d725db74b605c577447fe2c02"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2NzA0MQ==", "bodyText": "Karaf documents this as \"Included files will override the values specified in this file\", so shouldn't have to worry about dupes.", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r388467041", "createdAt": "2020-03-05T18:03:35Z", "author": {"login": "j-white"}, "path": "opennms-container/minion/confd/templates/system.properties.tmpl", "diffHunk": "@@ -0,0 +1,161 @@\n+################################################################################", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ0OTA2NA=="}, "originalCommit": {"oid": "4ccccd41c3e8ef3d725db74b605c577447fe2c02"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDA2NzA3OnYy", "diffSide": "RIGHT", "path": "opennms-container/minion/Dockerfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNTo0MjoxNFrOFy9Rfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNTo0MjoxNFrOFy9Rfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk3NzAyMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r388977022", "createdAt": "2020-03-06T15:42:14Z", "author": {"login": "indigo423"}, "path": "opennms-container/minion/Dockerfile", "diffHunk": "@@ -68,6 +68,15 @@ RUN if [[ \"$(ls -1 /tmp/rpms/*.rpm 2>/dev/null | wc -l)\" != 0 ]]; then dnf -y in\n \n COPY ./assets/* /\n \n+# Install confd\n+ARG CONFD_VERSION=\"0.16.0\"\n+ARG CONFD_ARCH=\"amd64\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eccf9eef9d116218e2b02f34e21cf3b0e0a636a2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDEwNjQ5OnYy", "diffSide": "RIGHT", "path": "opennms-container/minion/assets/entrypoint.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNTo1MzoxMFrOFy9qQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTo1MzoyN1rOFzFjtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MzM2MA==", "bodyText": "Just to be sure, we nail it down to use only the minion-config.yaml file and don't allow other configuration backends right? Just as a quick idea, we could gain some flexibility using a confd.toml and call the binary with -config-file. By default it picks up a confd.toml from /etc/confd/confd.toml.\nconfdir = \"/etc/confd\"\nbackend = \"file\"\nfile = \"/opt/minion/minion-config.yaml\"\n\nI don't worry much - no blocker for and really just a minor comment.", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r388983360", "createdAt": "2020-03-06T15:53:10Z", "author": {"login": "indigo423"}, "path": "opennms-container/minion/assets/entrypoint.sh", "diffHunk": "@@ -149,12 +152,42 @@ applyOverlayConfig() {\n   fi\n }\n \n+applyConfd() {\n+  if [ -f \"${CONFD_KEY_STORE}\" ]; then\n+    echo \"Found a configuration key store, applying configuration via confd.\"\n+    runConfd\n+  else\n+    echo \"No configuration key store present, skipping confd configuration.\"\n+  fi\n+}\n+\n start() {\n     export KARAF_EXEC=\"exec\"\n     cd ${MINION_HOME}/bin\n     exec ./karaf server\n }\n \n+runConfd() {\n+  # Create any directories that confd might write to\n+  while IFS= read -r dir; do\n+    local dirToCreate=\"$MINION_HOME\"/\"$dir\"\n+    echo \"Creating $dirToCreate so confd can write to it\"\n+    mkdir -p \"$dirToCreate\"\n+  done < \"$CONFD_CONFIG_DIR\"/directories\n+\n+  \"$CONFD_BIN\" -log-level debug -onetime -backend=file -file \"$CONFD_KEY_STORE\" -confdir \"$CONFD_CONFIG_DIR\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eccf9eef9d116218e2b02f34e21cf3b0e0a636a2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMjc1Nw==", "bodyText": "I didn't mean to lock it down to a file. Agreed using a confd.toml will allow us to be more flexible since this file could be optionally mounted to changed the config. Will use it.", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r389112757", "createdAt": "2020-03-06T19:53:27Z", "author": {"login": "mattixtech"}, "path": "opennms-container/minion/assets/entrypoint.sh", "diffHunk": "@@ -149,12 +152,42 @@ applyOverlayConfig() {\n   fi\n }\n \n+applyConfd() {\n+  if [ -f \"${CONFD_KEY_STORE}\" ]; then\n+    echo \"Found a configuration key store, applying configuration via confd.\"\n+    runConfd\n+  else\n+    echo \"No configuration key store present, skipping confd configuration.\"\n+  fi\n+}\n+\n start() {\n     export KARAF_EXEC=\"exec\"\n     cd ${MINION_HOME}/bin\n     exec ./karaf server\n }\n \n+runConfd() {\n+  # Create any directories that confd might write to\n+  while IFS= read -r dir; do\n+    local dirToCreate=\"$MINION_HOME\"/\"$dir\"\n+    echo \"Creating $dirToCreate so confd can write to it\"\n+    mkdir -p \"$dirToCreate\"\n+  done < \"$CONFD_CONFIG_DIR\"/directories\n+\n+  \"$CONFD_BIN\" -log-level debug -onetime -backend=file -file \"$CONFD_KEY_STORE\" -confdir \"$CONFD_CONFIG_DIR\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODk4MzM2MA=="}, "originalCommit": {"oid": "eccf9eef9d116218e2b02f34e21cf3b0e0a636a2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDQ3MTgwOnYy", "diffSide": "RIGHT", "path": "features/container/minion/src/main/filtered-resources/etc/system.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzozMTowN1rOFzBNOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTo0ODoxMlrOFzFacA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MTQ2Ng==", "bodyText": "Given this is in the default system.properties file and not just in the container, maybe we should actually rename it.\nKaraf has this stanza in their default configuration, maybe we just reuse it? https://github.com/apache/karaf/blob/master/assemblies/features/base/src/main/resources/resources/etc/system.properties#L25\nNote that it's also at the top of the time, and not the bottom, not sure if that makes a difference.", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r389041466", "createdAt": "2020-03-06T17:31:07Z", "author": {"login": "j-white"}, "path": "features/container/minion/src/main/filtered-resources/etc/system.properties", "diffHunk": "@@ -148,3 +148,5 @@ karaf.secured.services = (&(osgi.command.scope=*)(osgi.command.function=*))\n \n # OPENNMS: Enable SNMP4J Log4j logging\n snmp4j.LogFactory=org.snmp4j.log.Log4jLogFactory\n+\n+${optionals} = confd.system.properties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eccf9eef9d116218e2b02f34e21cf3b0e0a636a2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMDM4NA==", "bodyText": "Will follow the pattern from the default config.", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r389110384", "createdAt": "2020-03-06T19:48:12Z", "author": {"login": "mattixtech"}, "path": "features/container/minion/src/main/filtered-resources/etc/system.properties", "diffHunk": "@@ -148,3 +148,5 @@ karaf.secured.services = (&(osgi.command.scope=*)(osgi.command.function=*))\n \n # OPENNMS: Enable SNMP4J Log4j logging\n snmp4j.LogFactory=org.snmp4j.log.Log4jLogFactory\n+\n+${optionals} = confd.system.properties", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MTQ2Ng=="}, "originalCommit": {"oid": "eccf9eef9d116218e2b02f34e21cf3b0e0a636a2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDQ3MzM5OnYy", "diffSide": "RIGHT", "path": "opennms-container/minion/confd/templates/confd.system.properties.tmpl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzozMTozOFrOFzBOPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxOTo0Nzo0M1rOFzFZhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MTcyNg==", "bodyText": "Should be be strongly modeling all of the system properties, or try and keep this generic from a template perspective?", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r389041726", "createdAt": "2020-03-06T17:31:38Z", "author": {"login": "j-white"}, "path": "opennms-container/minion/confd/templates/confd.system.properties.tmpl", "diffHunk": "@@ -0,0 +1,10 @@\n+{{$snmp2In1Key := \"/snmp/snmp4j/org.opennms.snmp.snmp4j.allowSNMPv2InV1\" -}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eccf9eef9d116218e2b02f34e21cf3b0e0a636a2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTExMDE1MQ==", "bodyText": "Generic will let us be a lot more flexible, will update.", "url": "https://github.com/OpenNMS/opennms/pull/2912#discussion_r389110151", "createdAt": "2020-03-06T19:47:43Z", "author": {"login": "mattixtech"}, "path": "opennms-container/minion/confd/templates/confd.system.properties.tmpl", "diffHunk": "@@ -0,0 +1,10 @@\n+{{$snmp2In1Key := \"/snmp/snmp4j/org.opennms.snmp.snmp4j.allowSNMPv2InV1\" -}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MTcyNg=="}, "originalCommit": {"oid": "eccf9eef9d116218e2b02f34e21cf3b0e0a636a2"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 797, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}