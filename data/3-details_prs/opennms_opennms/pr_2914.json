{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NzA3MzM4", "number": 2914, "title": "NMS-12583: Write enriched flows to Kafka", "bodyText": "External References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12583\nBamboo (Continuous Integration): https://bamboo.opennms.org/", "createdAt": "2020-03-11T14:00:56Z", "url": "https://github.com/OpenNMS/opennms/pull/2914", "merged": true, "mergeCommit": {"oid": "acfb09a1dcc89b116d1227dc082cde517828b2bb"}, "closed": true, "closedAt": "2020-03-24T21:15:57Z", "author": {"login": "cgorantla"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM65gogFqTM3MzUxMjQ1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ4xtZgFqTM4MDY2Mzk1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTEyNDUx", "url": "https://github.com/OpenNMS/opennms/pull/2914#pullrequestreview-373512451", "createdAt": "2020-03-12T12:30:29Z", "commit": {"oid": "5eb8d501cd1469f1bae9219a783c8d8d09a36ea7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MjQ1NzA3", "url": "https://github.com/OpenNMS/opennms/pull/2914#pullrequestreview-376245707", "createdAt": "2020-03-17T17:20:17Z", "commit": {"oid": "21e2f7f43f43ec183fd868b6146d2b108ba142c7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzoyMDoxN1rOF3mT4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzoyMzozNlrOF3mbtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg0MzY4MQ==", "bodyText": "Still needed?", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r393843681", "createdAt": "2020-03-17T17:20:17Z", "author": {"login": "fooker"}, "path": "features/flows/api/pom.xml", "diffHunk": "@@ -36,5 +36,11 @@\n           <groupId>org.opennms.core.ipc.rpc</groupId>\n           <artifactId>org.opennms.core.ipc.rpc.utils</artifactId>\n       </dependency>\n+    <dependency>\n+      <groupId>com.google.code.gson</groupId>\n+      <artifactId>gson</artifactId>\n+      <version>${jestGsonVersion}</version>\n+      <scope>provided</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e2f7f43f43ec183fd868b6146d2b108ba142c7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg0NDI2Ng==", "bodyText": "This is pure elasticsearch specific and can be calculated from other values.", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r393844266", "createdAt": "2020-03-17T17:21:14Z", "author": {"login": "fooker"}, "path": "features/flows/api/src/main/java/org/opennms/netmgt/flows/api/EnrichedFlow.java", "diffHunk": "@@ -0,0 +1,506 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.netmgt.flows.api;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class EnrichedFlow {\n+\n+    public enum Locality {\n+        PUBLIC,\n+        PRIVATE\n+    }\n+\n+    private Flow flow;\n+\n+    private String application;\n+\n+    private String convoKey;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e2f7f43f43ec183fd868b6146d2b108ba142c7"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg0NDUyNQ==", "bodyText": "Same here: pure elasticsearch specific", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r393844525", "createdAt": "2020-03-17T17:21:37Z", "author": {"login": "fooker"}, "path": "features/flows/api/src/main/java/org/opennms/netmgt/flows/api/EnrichedFlow.java", "diffHunk": "@@ -0,0 +1,506 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.netmgt.flows.api;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class EnrichedFlow {\n+\n+    public enum Locality {\n+        PUBLIC,\n+        PRIVATE\n+    }\n+\n+    private Flow flow;\n+\n+    private String application;\n+\n+    private String convoKey;\n+\n+    private String host;\n+\n+    private List<String> hosts = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e2f7f43f43ec183fd868b6146d2b108ba142c7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg0NTY4Ng==", "bodyText": "If the property to enable it is called \"forwarding\", should the class be called \"Forwarder\", too?", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r393845686", "createdAt": "2020-03-17T17:23:36Z", "author": {"login": "fooker"}, "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/ElasticFlowRepository.java", "diffHunk": "@@ -164,6 +165,10 @@\n \n     private final IndexSettings indexSettings;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21e2f7f43f43ec183fd868b6146d2b108ba142c7"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NDE3MTIy", "url": "https://github.com/OpenNMS/opennms/pull/2914#pullrequestreview-376417122", "createdAt": "2020-03-17T21:25:51Z", "commit": {"oid": "1a2bd7ac0dd0b847f96165eda228744ccff57133"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d872adea8cc9fdcf3d2421c1736e2ba5c5daa64", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/6d872adea8cc9fdcf3d2421c1736e2ba5c5daa64", "committedDate": "2020-03-17T22:10:45Z", "message": "NMS-12583: Attempt to fix test"}, "afterCommit": {"oid": "978dcd600c0ace77b27b1485c80acc60c7d1dad8", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/978dcd600c0ace77b27b1485c80acc60c7d1dad8", "committedDate": "2020-03-18T19:45:45Z", "message": "NMS-12583: Fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "978dcd600c0ace77b27b1485c80acc60c7d1dad8", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/978dcd600c0ace77b27b1485c80acc60c7d1dad8", "committedDate": "2020-03-18T19:45:45Z", "message": "NMS-12583: Fix test"}, "afterCommit": {"oid": "1c351725cb13b24d869bd0836d780b85d66cebeb", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/1c351725cb13b24d869bd0836d780b85d66cebeb", "committedDate": "2020-03-18T19:48:06Z", "message": "NMS-12583: Fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c351725cb13b24d869bd0836d780b85d66cebeb", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/1c351725cb13b24d869bd0836d780b85d66cebeb", "committedDate": "2020-03-18T19:48:06Z", "message": "NMS-12583: Fix test"}, "afterCommit": {"oid": "0ccf144ce525f0d49c20ca748d9881fddb638b6d", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/0ccf144ce525f0d49c20ca748d9881fddb638b6d", "committedDate": "2020-03-18T19:51:46Z", "message": "NMS-12583: Add kafka flow forwarder\n\nNMS-12583: Add proto builder\n\nNMS-12583: Add relavant features on sentinel\n\nNMS-12583: Refactor enriched flow forwarder/persister\n\nNMS-12583: Handle review comments\n\nNMS-12583: Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28980914ff963ff3c6193f939140e72af89225b6", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/28980914ff963ff3c6193f939140e72af89225b6", "committedDate": "2020-03-18T19:56:53Z", "message": "NMS-12583: Add kafka flow forwarder\n\nNMS-12583: Add proto builder\n\nNMS-12583: Add relavant features on sentinel\n\nNMS-12583: Refactor enriched flow forwarder/persister\n\nNMS-12583: Handle review comments\n\nNMS-12583: Fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ccf144ce525f0d49c20ca748d9881fddb638b6d", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/0ccf144ce525f0d49c20ca748d9881fddb638b6d", "committedDate": "2020-03-18T19:51:46Z", "message": "NMS-12583: Add kafka flow forwarder\n\nNMS-12583: Add proto builder\n\nNMS-12583: Add relavant features on sentinel\n\nNMS-12583: Refactor enriched flow forwarder/persister\n\nNMS-12583: Handle review comments\n\nNMS-12583: Fix test"}, "afterCommit": {"oid": "28980914ff963ff3c6193f939140e72af89225b6", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/28980914ff963ff3c6193f939140e72af89225b6", "committedDate": "2020-03-18T19:56:53Z", "message": "NMS-12583: Add kafka flow forwarder\n\nNMS-12583: Add proto builder\n\nNMS-12583: Add relavant features on sentinel\n\nNMS-12583: Refactor enriched flow forwarder/persister\n\nNMS-12583: Handle review comments\n\nNMS-12583: Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae29d087bb88c83a2dd96a008f040ff0399c7782", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/ae29d087bb88c83a2dd96a008f040ff0399c7782", "committedDate": "2020-03-20T16:55:15Z", "message": "NMS-12583: Simplify EnrichedFlow conversions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTYxMjI3", "url": "https://github.com/OpenNMS/opennms/pull/2914#pullrequestreview-378961227", "createdAt": "2020-03-22T00:03:01Z", "commit": {"oid": "ae29d087bb88c83a2dd96a008f040ff0399c7782"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwMDowMzowMVrOF5sZZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMlQwMDowOTozMFrOF5satg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MDU1MQ==", "bodyText": "I'd move this logic to the EnrichedFlow class instead of defining it here.", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r396040551", "createdAt": "2020-03-22T00:03:01Z", "author": {"login": "j-white"}, "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/FlowDocument.java", "diffHunk": "@@ -724,4 +741,59 @@ public static FlowDocument from(final Flow flow) {\n \n         return doc;\n     }\n+\n+    public static EnrichedFlow buildEnrichedFlow(FlowDocument flowDocument) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29d087bb88c83a2dd96a008f040ff0399c7782"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MDYxMg==", "bodyText": "We don't know that it's Kafka, but rather just some flow forwarder.", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r396040612", "createdAt": "2020-03-22T00:03:43Z", "author": {"login": "j-white"}, "path": "features/flows/elastic/src/main/java/org/opennms/netmgt/flows/elastic/ElasticFlowRepository.java", "diffHunk": "@@ -238,8 +244,14 @@ public void persist(final Collection<Flow> flows, final FlowSource source) throw\n         } catch (Exception e) {\n             throw new FlowException(\"Failed to enrich one or more flows.\", e);\n         }\n-\n+        if(enableFlowForwarding) {\n+            // Persist to kafka.\n+            LOG.debug(\"Forwarding {} flow documents to Kafka\", flowDocuments.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29d087bb88c83a2dd96a008f040ff0399c7782"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MDgyMQ==", "bodyText": "Can we just have it fail if not set?", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r396040821", "createdAt": "2020-03-22T00:07:51Z", "author": {"login": "j-white"}, "path": "features/flows/kafka-persistence/src/main/java/org/opennms/netmgt/flows/persistence/KafkaFlowForwarder.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.netmgt.flows.persistence;\n+\n+import java.io.IOException;\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.Objects;\n+import java.util.Properties;\n+import java.util.function.Supplier;\n+\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kafka.common.serialization.ByteArraySerializer;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.joda.time.Duration;\n+import org.opennms.netmgt.flows.api.EnrichedFlow;\n+import org.opennms.netmgt.flows.api.EnrichedFlowForwarder;\n+import org.opennms.netmgt.flows.persistence.model.FlowDocument;\n+import org.osgi.service.cm.ConfigurationAdmin;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.swrve.ratelimitedlogger.RateLimitedLog;\n+\n+public class KafkaFlowForwarder implements EnrichedFlowForwarder {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(KafkaFlowForwarder.class);\n+    public static final String KAFKA_CLIENT_PID = \"org.opennms.features.flows.persistence.kafka\";\n+    private final ConfigurationAdmin configAdmin;\n+    private KafkaProducer<String, byte[]> producer;\n+    private String topicName;\n+    private static final RateLimitedLog RATE_LIMITED_LOG = RateLimitedLog\n+            .withRateLimit(LOG)\n+            .maxRate(1).every(Duration.standardSeconds(60))\n+            .build();\n+    private Properties producerConfig;\n+    \n+    public KafkaFlowForwarder(ConfigurationAdmin configAdmin) {\n+        this.configAdmin = configAdmin;\n+    }\n+\n+    @Override\n+    public void forward(EnrichedFlow enrichedFlow) {\n+\n+        if (producer == null) {\n+            RATE_LIMITED_LOG.warn(\"Kafka Producer is not configured for flow forwarding.\");\n+            return;\n+        }\n+\n+        try {\n+            FlowDocument flowDocument = FlowDocumentBuilder.buildFlowDocument(enrichedFlow);\n+            final ProducerRecord<String, byte[]> record = new ProducerRecord<>(topicName, flowDocument.toByteArray());\n+            producer.send(record, (recordMetadata, e) -> {\n+                if (e != null) {\n+                    RATE_LIMITED_LOG.warn(\"Failed to send flow document to producer: {}.\", record, e);\n+                } else if (LOG.isTraceEnabled()) {\n+                    LOG.trace(\"Persisted flow document {} to kafka.\", flowDocument);\n+                }\n+            });\n+        } catch (Exception e) {\n+            LOG.error(\"Exception while sending flow to kafka\", e);\n+        }\n+    }\n+\n+    public void init() throws IOException {\n+        // Create the Kafka producer\n+        producerConfig = new Properties();\n+        final Dictionary<String, Object> properties = configAdmin\n+                .getConfiguration(KAFKA_CLIENT_PID).getProperties();\n+        if (properties != null) {\n+            final Enumeration<String> keys = properties.keys();\n+            while (keys.hasMoreElements()) {\n+                final String key = keys.nextElement();\n+                producerConfig.put(key, properties.get(key));\n+            }\n+        }\n+\n+        if (producerConfig.getProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29d087bb88c83a2dd96a008f040ff0399c7782"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MDgzNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOG.info(\" Kafka Producer initialized with config {} \", producerConfig);\n          \n          \n            \n                        LOG.info(\"Kafka Producer initialized with config: {}\", producerConfig);\n          \n      \n    \n    \n  \n\nRemove leading and trailing spaces from log message.", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r396040837", "createdAt": "2020-03-22T00:08:14Z", "author": {"login": "j-white"}, "path": "features/flows/kafka-persistence/src/main/java/org/opennms/netmgt/flows/persistence/KafkaFlowForwarder.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.netmgt.flows.persistence;\n+\n+import java.io.IOException;\n+import java.util.Dictionary;\n+import java.util.Enumeration;\n+import java.util.Objects;\n+import java.util.Properties;\n+import java.util.function.Supplier;\n+\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kafka.common.serialization.ByteArraySerializer;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.joda.time.Duration;\n+import org.opennms.netmgt.flows.api.EnrichedFlow;\n+import org.opennms.netmgt.flows.api.EnrichedFlowForwarder;\n+import org.opennms.netmgt.flows.persistence.model.FlowDocument;\n+import org.osgi.service.cm.ConfigurationAdmin;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.swrve.ratelimitedlogger.RateLimitedLog;\n+\n+public class KafkaFlowForwarder implements EnrichedFlowForwarder {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(KafkaFlowForwarder.class);\n+    public static final String KAFKA_CLIENT_PID = \"org.opennms.features.flows.persistence.kafka\";\n+    private final ConfigurationAdmin configAdmin;\n+    private KafkaProducer<String, byte[]> producer;\n+    private String topicName;\n+    private static final RateLimitedLog RATE_LIMITED_LOG = RateLimitedLog\n+            .withRateLimit(LOG)\n+            .maxRate(1).every(Duration.standardSeconds(60))\n+            .build();\n+    private Properties producerConfig;\n+    \n+    public KafkaFlowForwarder(ConfigurationAdmin configAdmin) {\n+        this.configAdmin = configAdmin;\n+    }\n+\n+    @Override\n+    public void forward(EnrichedFlow enrichedFlow) {\n+\n+        if (producer == null) {\n+            RATE_LIMITED_LOG.warn(\"Kafka Producer is not configured for flow forwarding.\");\n+            return;\n+        }\n+\n+        try {\n+            FlowDocument flowDocument = FlowDocumentBuilder.buildFlowDocument(enrichedFlow);\n+            final ProducerRecord<String, byte[]> record = new ProducerRecord<>(topicName, flowDocument.toByteArray());\n+            producer.send(record, (recordMetadata, e) -> {\n+                if (e != null) {\n+                    RATE_LIMITED_LOG.warn(\"Failed to send flow document to producer: {}.\", record, e);\n+                } else if (LOG.isTraceEnabled()) {\n+                    LOG.trace(\"Persisted flow document {} to kafka.\", flowDocument);\n+                }\n+            });\n+        } catch (Exception e) {\n+            LOG.error(\"Exception while sending flow to kafka\", e);\n+        }\n+    }\n+\n+    public void init() throws IOException {\n+        // Create the Kafka producer\n+        producerConfig = new Properties();\n+        final Dictionary<String, Object> properties = configAdmin\n+                .getConfiguration(KAFKA_CLIENT_PID).getProperties();\n+        if (properties != null) {\n+            final Enumeration<String> keys = properties.keys();\n+            while (keys.hasMoreElements()) {\n+                final String key = keys.nextElement();\n+                producerConfig.put(key, properties.get(key));\n+            }\n+        }\n+\n+        if (producerConfig.getProperty(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG) != null) {\n+            // Overwrite the serializers\n+            producerConfig.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class.getCanonicalName());\n+            producerConfig.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, ByteArraySerializer.class.getCanonicalName());\n+            // Class-loader hack for accessing the kafka classes when initializing producer.\n+            producer = runWithGivenClassLoader(() -> new KafkaProducer<>(producerConfig), KafkaProducer.class.getClassLoader());\n+            LOG.info(\" Kafka Producer initialized with config {} \", producerConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29d087bb88c83a2dd96a008f040ff0399c7782"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MDg3NQ==", "bodyText": "Topic name must be configurable.", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r396040875", "createdAt": "2020-03-22T00:09:01Z", "author": {"login": "j-white"}, "path": "features/flows/kafka-persistence/src/main/resources/OSGI-INF/blueprint/blueprint.xml", "diffHunk": "@@ -0,0 +1,26 @@\n+<blueprint xmlns=\"http://www.osgi.org/xmlns/blueprint/v1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:cm=\"http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0\"\n+           xmlns:ext=\"http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0\"\n+           xsi:schemaLocation=\"\n+\t\thttp://www.osgi.org/xmlns/blueprint/v1.0.0\n+\t\thttp://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd\n+\n+\t\thttp://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0\n+\t\thttp://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd\n+\n+\t\thttp://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0\n+\t\thttp://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd\n+\">\n+  <!-- Enables update of bundle when kafka config is updated -->\n+  <cm:property-placeholder id=\"kafkaForwarderProperties\" persistent-id=\"org.opennms.features.flows.persistence.kafka\" update-strategy=\"reload\"/>\n+\n+  <reference id=\"configurationAdmin\" interface=\"org.osgi.service.cm.ConfigurationAdmin\"/>\n+\n+  <bean id=\"kafkaFlowForwarder\" class=\"org.opennms.netmgt.flows.persistence.KafkaFlowForwarder\"\n+        init-method=\"init\" destroy-method=\"destroy\">\n+    <argument ref=\"configurationAdmin\"/>\n+    <property name=\"topicName\" value=\"flowDocuments\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29d087bb88c83a2dd96a008f040ff0399c7782"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjA0MDg4Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r396040886", "createdAt": "2020-03-22T00:09:30Z", "author": {"login": "j-white"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/flows/setup.adoc", "diffHunk": "@@ -187,3 +187,31 @@ The following cache properties are available to be set in `${OPENNMS_HOME/etc/or\n | `true`\n \n |===\n+\n+==== Configure Kafka forwarder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae29d087bb88c83a2dd96a008f040ff0399c7782"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d872567b0acb0f551a565dd84cf70628eedd0df3", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/d872567b0acb0f551a565dd84cf70628eedd0df3", "committedDate": "2020-03-23T14:53:21Z", "message": "Merge branch 'release-26.0.0' into jira/NMS-12583"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baf2c99118d1b14f656fff2bee4be80f0946532b", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/baf2c99118d1b14f656fff2bee4be80f0946532b", "committedDate": "2020-03-23T18:12:43Z", "message": "NMS-12583: Handle review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "560cd94247692b5715bae679c9b8bcde37bb7334", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/560cd94247692b5715bae679c9b8bcde37bb7334", "committedDate": "2020-03-23T17:15:19Z", "message": "NMS-12583: Handle review comments"}, "afterCommit": {"oid": "baf2c99118d1b14f656fff2bee4be80f0946532b", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/baf2c99118d1b14f656fff2bee4be80f0946532b", "committedDate": "2020-03-23T18:12:43Z", "message": "NMS-12583: Handle review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTA0OTcx", "url": "https://github.com/OpenNMS/opennms/pull/2914#pullrequestreview-380504971", "createdAt": "2020-03-24T16:49:42Z", "commit": {"oid": "baf2c99118d1b14f656fff2bee4be80f0946532b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo0OTo0MlrOF65r3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNjo0OTo0MlrOF65r3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMwNjg0NQ==", "bodyText": "This one we can skip.", "url": "https://github.com/OpenNMS/opennms/pull/2914#discussion_r397306845", "createdAt": "2020-03-24T16:49:42Z", "author": {"login": "j-white"}, "path": "features/flows/api/src/main/java/org/opennms/netmgt/flows/api/EnrichedFlow.java", "diffHunk": "@@ -0,0 +1,506 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2020 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.netmgt.flows.api;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class EnrichedFlow {\n+\n+    public enum Locality {\n+        PUBLIC,\n+        PRIVATE\n+    }\n+\n+    private Flow flow;\n+\n+    private String application;\n+\n+    private String convoKey;\n+\n+    private String host;\n+\n+    private List<String> hosts = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg0NDUyNQ=="}, "originalCommit": {"oid": "21e2f7f43f43ec183fd868b6146d2b108ba142c7"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3756539a9cc275a2b9b0dc55a378d05cc8998362", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/3756539a9cc275a2b9b0dc55a378d05cc8998362", "committedDate": "2020-03-24T20:13:17Z", "message": "NMS-12583: Remove 'hosts' from EnrichedFlow"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjYzOTU2", "url": "https://github.com/OpenNMS/opennms/pull/2914#pullrequestreview-380663956", "createdAt": "2020-03-24T20:17:51Z", "commit": {"oid": "3756539a9cc275a2b9b0dc55a378d05cc8998362"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3790, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}