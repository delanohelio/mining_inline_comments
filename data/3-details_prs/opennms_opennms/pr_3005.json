{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDI1ODA4", "number": 3005, "title": "NMS-12391: Use bulkhead to restrict number of threads", "bodyText": "During node scan, one node can have 100/1000s of interfaces and those interfaces\ncan have 10s of services. When those nodes are on minion, OpenNMS\nasynchronously sends all requests to minion. This may result in too many\nconcurrent requests.\nIdea is to restrict number of concurrent requests at a given point.\nUsing bulkhead to gate requests that are incoming with tunable timeout\nDefault timeout is 100msecs and max concurrent calls is 1000.\nSo when 1000 rpc requests are processing currently, only 10 extra requests per sec\nwill be allowed. This will allow not having a hard limit on threads but also\ngives chance to tune the system depending on the load.\nExternal References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12391", "createdAt": "2020-05-12T01:02:10Z", "url": "https://github.com/OpenNMS/opennms/pull/3005", "merged": true, "mergeCommit": {"oid": "6749c52f50fb409a3c7c4603dd04cea01382a899"}, "closed": true, "closedAt": "2020-06-01T12:02:32Z", "author": {"login": "cgorantla"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgadeTgH2gAyNDE2NDI1ODA4OjRkNWU4YzA4YjVmMGU5N2IwMTY0YjlkMjUwZDdkZGI5ODI1ODRkYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmFZEtgFqTQyMTEyMjU3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/4d5e8c08b5f0e97b0164b9d250d7ddb982584db3", "committedDate": "2020-05-12T02:01:23Z", "message": "NMS-12391: Use bulkhead to restrict number of threads\n\nDuring node scan, one node can have 100/1000s of interfaces and those interfaces\ncan have 10s of services. When those nodes are on minion, OpenNMS\nasynchronously sends all requests to minion. This may result in too many\nconcurrent requests.\n\nIdea is to restrict number of concurrent requests at a given point.\nUsing bulkhead to gate requests that are incoming with tunable timeout\nDefault timeout is 100msecs and max concurrent calls is 1000.\nSo when 1000 rpc requests are processing currently, only 10 extra requests per sec\nwill be allowed. This will allow not having a hard limit on threads but also\ngives chance to tune the system depending on the load."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "732433bff81499c6ca477af364725d27cadf25a9", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/732433bff81499c6ca477af364725d27cadf25a9", "committedDate": "2020-05-07T22:20:25Z", "message": "NMS-12391: Use bulkhead to restrict number of threads\n\nDuring node scan, one node can have 100/1000s of interfaces and those interfaces\ncan have 10s of services. When those nodes are on minion, OpenNMS\nasynchronously sends all requests to minion. This may result in too many\nconcurrent requests.\n\nIdea is to restrict number of concurrent requests at a given point.\nUsing bulkhead to gate requests that are incoming with tunable timeout\nDefault timeout is 100msecs and max concurrent calls is 1000.\nSo when 1000 rpc requests are processing currently, only 10 extra requests per sec\nwill be allowed. This will allow not having a hard limit on threads but also\ngives chance to tune the system depending on the load."}, "afterCommit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/4d5e8c08b5f0e97b0164b9d250d7ddb982584db3", "committedDate": "2020-05-12T02:01:23Z", "message": "NMS-12391: Use bulkhead to restrict number of threads\n\nDuring node scan, one node can have 100/1000s of interfaces and those interfaces\ncan have 10s of services. When those nodes are on minion, OpenNMS\nasynchronously sends all requests to minion. This may result in too many\nconcurrent requests.\n\nIdea is to restrict number of concurrent requests at a given point.\nUsing bulkhead to gate requests that are incoming with tunable timeout\nDefault timeout is 100msecs and max concurrent calls is 1000.\nSo when 1000 rpc requests are processing currently, only 10 extra requests per sec\nwill be allowed. This will allow not having a hard limit on threads but also\ngives chance to tune the system depending on the load."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjQ2NTky", "url": "https://github.com/OpenNMS/opennms/pull/3005#pullrequestreview-413646592", "createdAt": "2020-05-18T14:26:13Z", "commit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyNjoxNFrOGW5oWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyNjoxNFrOGW5oWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2NjA3NA==", "bodyText": "Can you elaborate on why we still need to process the request?\nIf we continue processing the request there may still be >maxConcurrentCalls active.", "url": "https://github.com/OpenNMS/opennms/pull/3005#discussion_r426666074", "createdAt": "2020-05-18T14:26:14Z", "author": {"login": "j-white"}, "path": "core/ipc/rpc/kafka/src/main/java/org/opennms/core/ipc/rpc/kafka/KafkaRpcServerManager.java", "diffHunk": "@@ -287,8 +301,12 @@ public void run() {\n                             }\n                             // Should have complete message by this point.\n                             final ByteString requestMessage = rpcContent;\n+                            // Incoming RPC requests are gated to restrict number of threads used by Kafka RPC.\n+                            // Need to process the requests after timeout even though permission acquisition fails.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjQ4MDI3", "url": "https://github.com/OpenNMS/opennms/pull/3005#pullrequestreview-413648027", "createdAt": "2020-05-18T14:27:46Z", "commit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyNzo0NlrOGW5svg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNDoyNzo0NlrOGW5svg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2NzE5OA==", "bodyText": "Let's expose the bulk head metrics like we've done here: https://github.com/OpenNMS/opennms/blob/develop/features/dnsresolver/netty/src/main/java/org/opennms/netmgt/dnsresolver/netty/NettyDnsResolver.java#L126", "url": "https://github.com/OpenNMS/opennms/pull/3005#discussion_r426667198", "createdAt": "2020-05-18T14:27:46Z", "author": {"login": "j-white"}, "path": "core/ipc/rpc/kafka/src/main/java/org/opennms/core/ipc/rpc/kafka/KafkaRpcServerManager.java", "diffHunk": "@@ -162,6 +171,11 @@ public void init() throws IOException {\n         });\n         tracerRegistry.init(minionIdentity.getLocation() + \"@\" + minionIdentity.getId());\n \n+        BulkheadConfig bulkheadConfig = BulkheadConfig.custom()\n+                .maxConcurrentCalls(maxConcurrentCalls)\n+                .maxWaitDuration(java.time.Duration.ofMillis(maxWaitDuration))\n+                .build();\n+        bulkhead = Bulkhead.of(\"ipc-rpc-kafka\", bulkheadConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNjkwNTA3", "url": "https://github.com/OpenNMS/opennms/pull/3005#pullrequestreview-413690507", "createdAt": "2020-05-18T15:13:03Z", "commit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxMzowM1rOGW7slg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNToxNzowMlrOGW73uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY5OTkyNg==", "bodyText": "This should only be called if tryAcquirePermission returned true.", "url": "https://github.com/OpenNMS/opennms/pull/3005#discussion_r426699926", "createdAt": "2020-05-18T15:13:03Z", "author": {"login": "j-white"}, "path": "core/ipc/rpc/kafka/src/main/java/org/opennms/core/ipc/rpc/kafka/KafkaRpcServerManager.java", "diffHunk": "@@ -329,10 +347,12 @@ private void handleRequest(RpcMessageProto rpcRequestProto, ByteString rpcConten\n                 }\n                 // Finish minion Span\n                 minionSpan.finish();\n+                bulkhead.onComplete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjcwMjc3OQ==", "bodyText": "Makes sense - this will slow down and put back-pressure on the topic for bursts.\nLet's also make sure to expose a Gauge for the actual number of threads active - since this may differ from the number of active calls being tracked by the bulkhead.", "url": "https://github.com/OpenNMS/opennms/pull/3005#discussion_r426702779", "createdAt": "2020-05-18T15:17:02Z", "author": {"login": "j-white"}, "path": "core/ipc/rpc/kafka/src/main/java/org/opennms/core/ipc/rpc/kafka/KafkaRpcServerManager.java", "diffHunk": "@@ -287,8 +301,12 @@ public void run() {\n                             }\n                             // Should have complete message by this point.\n                             final ByteString requestMessage = rpcContent;\n+                            // Incoming RPC requests are gated to restrict number of threads used by Kafka RPC.\n+                            // Need to process the requests after timeout even though permission acquisition fails.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY2NjA3NA=="}, "originalCommit": {"oid": "4d5e8c08b5f0e97b0164b9d250d7ddb982584db3"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84fbf2b9be12c54344280f30b127eb9d459da904", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/84fbf2b9be12c54344280f30b127eb9d459da904", "committedDate": "2020-05-19T19:50:33Z", "message": "NMS-12391: Add metrics on Minion side."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODM1NTMw", "url": "https://github.com/OpenNMS/opennms/pull/3005#pullrequestreview-414835530", "createdAt": "2020-05-19T21:26:28Z", "commit": {"oid": "84fbf2b9be12c54344280f30b127eb9d459da904"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMToyNjoyOFrOGXzPHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMToyODoyNlrOGXzTHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwOTg4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Currently max number of concurrent requests is set to 1000 with maximum wait time of 100ms.\n          \n          \n            \n            Currently the maximum number of concurrent requests is set to 1,000 with a maximum wait time of 100ms.", "url": "https://github.com/OpenNMS/opennms/pull/3005#discussion_r427609887", "createdAt": "2020-05-19T21:26:28Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/minion/kafka-rpc.adoc", "diffHunk": "@@ -0,0 +1,20 @@\n+// Allow GitHub image rendering\n+:imagesdir: ../../images\n+\n+===  Tuning Kafka RPC on Minion\n+\n+To avoid too many requests hogging the system at once, Kafka RPC on Minion limits the maximum number of concurrent RPC requests.\n+Currently max number of concurrent requests is set to 1000 with maximum wait time of 100ms.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fbf2b9be12c54344280f30b127eb9d459da904"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxMDc0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            With these settings when concurrent requests reach 1000, it only allow 10 extra requests per sec.\n          \n          \n            \n            With these settings, when concurrent requests reach 1000, Kafka RPC will allow only 10 extra requests per second.", "url": "https://github.com/OpenNMS/opennms/pull/3005#discussion_r427610745", "createdAt": "2020-05-19T21:28:04Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/minion/kafka-rpc.adoc", "diffHunk": "@@ -0,0 +1,20 @@\n+// Allow GitHub image rendering\n+:imagesdir: ../../images\n+\n+===  Tuning Kafka RPC on Minion\n+\n+To avoid too many requests hogging the system at once, Kafka RPC on Minion limits the maximum number of concurrent RPC requests.\n+Currently max number of concurrent requests is set to 1000 with maximum wait time of 100ms.\n+With these settings when concurrent requests reach 1000, it only allow 10 extra requests per sec.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fbf2b9be12c54344280f30b127eb9d459da904"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYxMDkwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            These settings can be tuned as below\n          \n          \n            \n            Tune these settings as below:", "url": "https://github.com/OpenNMS/opennms/pull/3005#discussion_r427610909", "createdAt": "2020-05-19T21:28:26Z", "author": {"login": "Bonrob2"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/minion/kafka-rpc.adoc", "diffHunk": "@@ -0,0 +1,20 @@\n+// Allow GitHub image rendering\n+:imagesdir: ../../images\n+\n+===  Tuning Kafka RPC on Minion\n+\n+To avoid too many requests hogging the system at once, Kafka RPC on Minion limits the maximum number of concurrent RPC requests.\n+Currently max number of concurrent requests is set to 1000 with maximum wait time of 100ms.\n+With these settings when concurrent requests reach 1000, it only allow 10 extra requests per sec.\n+\n+These settings can be tuned as below", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84fbf2b9be12c54344280f30b127eb9d459da904"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e790a9af27be8feda182b62d6be5137c7f9a2b3", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/5e790a9af27be8feda182b62d6be5137c7f9a2b3", "committedDate": "2020-05-19T22:04:40Z", "message": "NMS-12391: Handle doc review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NDU0OTYx", "url": "https://github.com/OpenNMS/opennms/pull/3005#pullrequestreview-416454961", "createdAt": "2020-05-21T20:08:58Z", "commit": {"oid": "5e790a9af27be8feda182b62d6be5137c7f9a2b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDowODo1OVrOGZBIkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMDowODo1OVrOGZBIkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg4NjE2MA==", "bodyText": "We can omit location here since all the requests will be for the same location right?", "url": "https://github.com/OpenNMS/opennms/pull/3005#discussion_r428886160", "createdAt": "2020-05-21T20:08:59Z", "author": {"login": "j-white"}, "path": "core/ipc/rpc/kafka/src/main/java/org/opennms/core/ipc/rpc/kafka/KafkaRpcServerManager.java", "diffHunk": "@@ -315,6 +368,8 @@ private void handleRequest(RpcMessageProto rpcRequestProto, ByteString rpcConten\n             setTagsOnMinion(rpcRequestProto, request, minionSpan);\n             // Modules may run the execution in their own thread pool.\n             CompletableFuture<RpcResponse> future = module.execute(request);\n+            final Meter requestSentMeter = getMetrics().meter(MetricRegistry.name(request.getLocation(), module.getId(), RPC_COUNT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e790a9af27be8feda182b62d6be5137c7f9a2b3"}, "originalPosition": 170}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74995c6a9f5a9e2cde44c20e3b5f385ab5235984", "author": {"user": {"login": "cgorantla", "name": "Chandra Gorantla"}}, "url": "https://github.com/OpenNMS/opennms/commit/74995c6a9f5a9e2cde44c20e3b5f385ab5235984", "committedDate": "2020-05-26T14:21:14Z", "message": "NMS-12391: Handle review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMTIyNTcw", "url": "https://github.com/OpenNMS/opennms/pull/3005#pullrequestreview-421122570", "createdAt": "2020-05-29T16:52:07Z", "commit": {"oid": "74995c6a9f5a9e2cde44c20e3b5f385ab5235984"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3642, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}