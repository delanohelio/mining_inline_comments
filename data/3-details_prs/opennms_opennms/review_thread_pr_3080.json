{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDE1OTY2", "number": 3080, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxMjozMVrOEVEfJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzoxMjozN1rOEVSbqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTI5MDYzOnYy", "diffSide": "RIGHT", "path": "features/events/api/src/main/java/org/opennms/netmgt/events/api/EventConstants.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxMjozMVrOG7niZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDoxNjoyM1rOG8DUUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2Njk1MQ==", "bodyText": "@fooker I believe we can delete this event?", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465166951", "createdAt": "2020-08-04T16:12:31Z", "author": {"login": "patrick-schweizer"}, "path": "features/events/api/src/main/java/org/opennms/netmgt/events/api/EventConstants.java", "diffHunk": "@@ -108,6 +108,7 @@\n     /**\n      * The poller package association changed event UEI.\n      */\n+    // TODO Patrick: do we still need this?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxMDQzMg==", "bodyText": "Currently we still using this event in order to re-scheduling only parts of all the scheduled jobs. I think we can create a more general event here that indicates that an application is somehow changed (polling package, locations or monitored services).", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465510432", "createdAt": "2020-08-05T06:50:44Z", "author": {"login": "christianpape"}, "path": "features/events/api/src/main/java/org/opennms/netmgt/events/api/EventConstants.java", "diffHunk": "@@ -108,6 +108,7 @@\n     /**\n      * The poller package association changed event UEI.\n      */\n+    // TODO Patrick: do we still need this?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2Njk1MQ=="}, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMjA5OA==", "bodyText": "Ack. Created a separate issue for that: https://issues.opennms.org/browse/NMS-12838", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465622098", "createdAt": "2020-08-05T10:16:23Z", "author": {"login": "fooker"}, "path": "features/events/api/src/main/java/org/opennms/netmgt/events/api/EventConstants.java", "diffHunk": "@@ -108,6 +108,7 @@\n     /**\n      * The poller package association changed event UEI.\n      */\n+    // TODO Patrick: do we still need this?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2Njk1MQ=="}, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTI5MzA1OnYy", "diffSide": "RIGHT", "path": "features/remotepollerng/daemon/src/main/java/org/opennms/netmgt/remotepollerng/RemotePollerd.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxMzowN1rOG7nj4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxMzowN1rOG7nj4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NzMyOA==", "bodyText": "@fooker we should discuss this.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465167328", "createdAt": "2020-08-04T16:13:07Z", "author": {"login": "patrick-schweizer"}, "path": "features/remotepollerng/daemon/src/main/java/org/opennms/netmgt/remotepollerng/RemotePollerd.java", "diffHunk": "@@ -216,8 +216,9 @@ public void scheduleAllServices() {\n         return mapOfScheduledServices;\n     }\n \n+    // TODO: Patrick: should this be updateScheduledServicesForApplication() going forward?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTI5NDMyOnYy", "diffSide": "RIGHT", "path": "features/remotepollerng/daemon/src/test/java/org/opennms/netmgt/remotepollerng/RemotePollerdIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxMzoyM1rOG7nkmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxMzoyM1rOG7nkmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NzUxMw==", "bodyText": "@fooker we should discuss this.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465167513", "createdAt": "2020-08-04T16:13:23Z", "author": {"login": "patrick-schweizer"}, "path": "features/remotepollerng/daemon/src/test/java/org/opennms/netmgt/remotepollerng/RemotePollerdIT.java", "diffHunk": "@@ -96,6 +95,7 @@\n })\n @JUnitConfigurationEnvironment\n @JUnitTemporaryDatabase(reuseDatabase = false)\n+@Ignore // TODO: Patrick: rewrite test after we have finalized how it should look like...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTI5NjQ5OnYy", "diffSide": "RIGHT", "path": "opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultDistributedStatusService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxMzo1MFrOG7nl6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDoyMjo0NVrOG8Dg_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2Nzg1MQ==", "bodyText": "@fooker we should discuss this.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465167851", "createdAt": "2020-08-04T16:13:50Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultDistributedStatusService.java", "diffHunk": "@@ -248,7 +248,7 @@ public SimpleWebTable createStatusTable(DistributedStatusDetailsCommand command,\n                           \"bright\");\n             table.addCell(getResponseText(s.getPollResult()), \"\");\n             table.addCell(reDateify(s.getPollResult().getTimestamp()), \"\");\n-            //TODO: table.addCell(reDateify(s.getLocationMonitor().getLastUpdated()), \"\");\n+            table.addCell(reDateify(new Date()), \"\"); // TODO Patrick: from where do we get the date?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyNTM0Mg==", "bodyText": "This can be ignored(stay as you currently have it) for now - the whole code will hopefully go away soon.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465625342", "createdAt": "2020-08-05T10:22:45Z", "author": {"login": "fooker"}, "path": "opennms-web-api/src/main/java/org/opennms/web/svclayer/support/DefaultDistributedStatusService.java", "diffHunk": "@@ -248,7 +248,7 @@ public SimpleWebTable createStatusTable(DistributedStatusDetailsCommand command,\n                           \"bright\");\n             table.addCell(getResponseText(s.getPollResult()), \"\");\n             table.addCell(reDateify(s.getPollResult().getTimestamp()), \"\");\n-            //TODO: table.addCell(reDateify(s.getLocationMonitor().getLastUpdated()), \"\");\n+            table.addCell(reDateify(new Date()), \"\"); // TODO Patrick: from where do we get the date?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2Nzg1MQ=="}, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTI5Nzc0OnYy", "diffSide": "RIGHT", "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/config/CollectionConfigurationResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNDowM1rOG7nmmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzo0OTo1NVrOG8KjFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODAyNA==", "bodyText": "@fooker we should discuss this.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465168024", "createdAt": "2020-08-04T16:14:03Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/config/CollectionConfigurationResource.java", "diffHunk": "@@ -67,11 +65,7 @@ public Response getCollectdConfigurationForLocation(@PathParam(\"location\") final\n             return Response.status(Response.Status.NOT_FOUND).build();\n         }\n \n-        final List<String> collectionPackageNames = def.getCollectionPackageNames();\n-        if (collectionPackageNames != null && collectionPackageNames.size() > 0) {\n-            final CollectdConfiguration collectdConfig = m_collectdConfigResource.get().getCollectdConfigurationForPackages(collectionPackageNames);\n-            return Response.ok(collectdConfig).build();\n-        }\n+        // TODO: Patrick: do we still need this method?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyNjk5MA==", "bodyText": "I think this is a leftover from the first days minion work - the whole component can go away.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465626990", "createdAt": "2020-08-05T10:26:02Z", "author": {"login": "fooker"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/config/CollectionConfigurationResource.java", "diffHunk": "@@ -67,11 +65,7 @@ public Response getCollectdConfigurationForLocation(@PathParam(\"location\") final\n             return Response.status(Response.Status.NOT_FOUND).build();\n         }\n \n-        final List<String> collectionPackageNames = def.getCollectionPackageNames();\n-        if (collectionPackageNames != null && collectionPackageNames.size() > 0) {\n-            final CollectdConfiguration collectdConfig = m_collectdConfigResource.get().getCollectdConfigurationForPackages(collectionPackageNames);\n-            return Response.ok(collectdConfig).build();\n-        }\n+        // TODO: Patrick: do we still need this method?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODAyNA=="}, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0MDU2Ng==", "bodyText": "\ud83d\udc4d I removed it", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465740566", "createdAt": "2020-08-05T13:49:55Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/config/CollectionConfigurationResource.java", "diffHunk": "@@ -67,11 +65,7 @@ public Response getCollectdConfigurationForLocation(@PathParam(\"location\") final\n             return Response.status(Response.Status.NOT_FOUND).build();\n         }\n \n-        final List<String> collectionPackageNames = def.getCollectionPackageNames();\n-        if (collectionPackageNames != null && collectionPackageNames.size() > 0) {\n-            final CollectdConfiguration collectdConfig = m_collectdConfigResource.get().getCollectdConfigurationForPackages(collectionPackageNames);\n-            return Response.ok(collectdConfig).build();\n-        }\n+        // TODO: Patrick: do we still need this method?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODAyNA=="}, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTI5ODM5OnYy", "diffSide": "RIGHT", "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/config/PollerConfigurationResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNDoxMlrOG7nm_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzo1MDo0NlrOG8KlRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODEyNQ==", "bodyText": "@fooker we should discuss this.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465168125", "createdAt": "2020-08-04T16:14:12Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/config/PollerConfigurationResource.java", "diffHunk": "@@ -59,6 +57,7 @@\n \n     @GET\n     @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})\n+    // TODO: Patrick: do we still need this class?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyNzIzMg==", "bodyText": "Same here - just delete the whole class.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465627232", "createdAt": "2020-08-05T10:26:36Z", "author": {"login": "fooker"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/config/PollerConfigurationResource.java", "diffHunk": "@@ -59,6 +57,7 @@\n \n     @GET\n     @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})\n+    // TODO: Patrick: do we still need this class?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODEyNQ=="}, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0MTEyNQ==", "bodyText": "+1 I removed it", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465741125", "createdAt": "2020-08-05T13:50:46Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/config/PollerConfigurationResource.java", "diffHunk": "@@ -59,6 +57,7 @@\n \n     @GET\n     @Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.APPLICATION_ATOM_XML})\n+    // TODO: Patrick: do we still need this class?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODEyNQ=="}, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTMwMTg1OnYy", "diffSide": "RIGHT", "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/MonitoringLocationRestServiceIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNTowM1rOG7npNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDowMjo0MlrOG8YoJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODY5Mg==", "bodyText": "@fooker we should discuss how to rewrite this test", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465168692", "createdAt": "2020-08-04T16:15:03Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/MonitoringLocationRestServiceIT.java", "diffHunk": "@@ -97,9 +93,10 @@ public void testEventOnUpdate() throws Exception {\n         this.eventIpcManager.getEventAnticipator().verifyAnticipated();\n \n         // add polling package\n-        this.eventIpcManager.getEventAnticipator().anticipateEvent(new EventBuilder(EventConstants.POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI, \"ReST\").addParam(EventConstants.PARM_DAEMON_NAME, \"RemotePollerNG\").getEvent());\n-        sendPut(\"/monitoringLocations/location1\", \"pollingPackageNames=foo\", 204);\n-        this.eventIpcManager.getEventAnticipator().verifyAnticipated();\n+        // TODO: Patrick remove", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3MTIzOQ==", "bodyText": "all rest services are not relevant for now", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465971239", "createdAt": "2020-08-05T20:02:42Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/MonitoringLocationRestServiceIT.java", "diffHunk": "@@ -97,9 +93,10 @@ public void testEventOnUpdate() throws Exception {\n         this.eventIpcManager.getEventAnticipator().verifyAnticipated();\n \n         // add polling package\n-        this.eventIpcManager.getEventAnticipator().anticipateEvent(new EventBuilder(EventConstants.POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI, \"ReST\").addParam(EventConstants.PARM_DAEMON_NAME, \"RemotePollerNG\").getEvent());\n-        sendPut(\"/monitoringLocations/location1\", \"pollingPackageNames=foo\", 204);\n-        this.eventIpcManager.getEventAnticipator().verifyAnticipated();\n+        // TODO: Patrick remove", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODY5Mg=="}, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTMwMjc3OnYy", "diffSide": "RIGHT", "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/RemotePollerAvailabilityRestServiceIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNToxNFrOG7npsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNToxNFrOG7npsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2ODgxNg==", "bodyText": "@fooker we should discuss how to rewrite this test", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465168816", "createdAt": "2020-08-04T16:15:14Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v1/RemotePollerAvailabilityRestServiceIT.java", "diffHunk": "@@ -87,6 +88,8 @@\n @JUnitConfigurationEnvironment\n @JUnitTemporaryDatabase\n @Transactional\n+// TODO: Patrick fix test?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTMwNDQyOnYy", "diffSide": "RIGHT", "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v2/MonitoringLocationRestServiceIT.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNTozN1rOG7nqvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNTozN1rOG7nqvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2OTA4Ng==", "bodyText": "@fooker we should discuss how to rewrite this test", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465169086", "createdAt": "2020-08-04T16:15:37Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp-rest/src/test/java/org/opennms/web/rest/v2/MonitoringLocationRestServiceIT.java", "diffHunk": "@@ -133,10 +129,9 @@ public void testEventOnUpdate() throws Exception {\n         this.eventIpcManager.getEventAnticipator().verifyAnticipated();\n \n         // add polling package\n-        this.eventIpcManager.getEventAnticipator().anticipateEvent(new EventBuilder(EventConstants.POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI, \"ReST\").addParam(EventConstants.PARM_DAEMON_NAME, \"RemotePollerNG\").getEvent());\n-        location.setPollingPackageNames(Lists.newArrayList(\"foo\", \"bar\"));\n+        // TODO: Patrick this.eventIpcManager.getEventAnticipator().anticipateEvent(new EventBuilder(EventConstants.POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI, \"ReST\").addParam(EventConstants.PARM_DAEMON_NAME, \"RemotePollerNG\").getEvent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTMwNTk3OnYy", "diffSide": "RIGHT", "path": "opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNTo1NVrOG7nrlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNTo1NVrOG7nrlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2OTMwMg==", "bodyText": "@fooker we should discuss how to rewrite this test", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465169302", "createdAt": "2020-08-04T16:15:55Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java", "diffHunk": "@@ -325,7 +336,8 @@ public void runTestCreateStatus() {\n         \n         expectedTable.newRow();\n         expectedTable.addCell(\"Node 1\", \"Normal\", \"element/node.jsp?node=1\");\n-        expectedTable.addCell(\"Raleigh-\" + LOCATION_MONITOR_ID_A, \"\", \"distributed/locationMonitorDetails.htm?monitorId=\" + LOCATION_MONITOR_ID_A);\n+        // TODO: Patrick: I removed the LOCATION_MONITOR_ID_A to make the test pass again. Is that correct?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTMwNjc1OnYy", "diffSide": "RIGHT", "path": "opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNjowNVrOG7nsEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoxNjowNVrOG7nsEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2OTQyNw==", "bodyText": "@fooker we should discuss how to rewrite this test", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465169427", "createdAt": "2020-08-04T16:16:05Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp/src/test/java/org/opennms/web/svclayer/support/DefaultDistributedStatusServiceTest.java", "diffHunk": "@@ -644,6 +672,9 @@ public void testCreateFacilityStatusTableOneApplicationOneOfTwoLocationsReportin\n     /*\n      * XXX need to check sorting\n      */\n+    // TODO: PatrickTest is broken but not sure what to do to fix it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e78f53634af5bcfe53769a6f56178caa562d20c0"}, "originalPosition": 253}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzUyMjQ1OnYy", "diffSide": "RIGHT", "path": "opennms-base-assembly/src/main/filtered/etc/create.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjo1NDoyM1rOG78mew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzo1Nzo0M1rOG8K4EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxMjA1OQ==", "bodyText": "The liquibase changes above use a \"bigint\". Please keep both schemes consistent.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465512059", "createdAt": "2020-08-05T06:54:23Z", "author": {"login": "christianpape"}, "path": "opennms-base-assembly/src/main/filtered/etc/create.sql", "diffHunk": "@@ -1480,6 +1457,26 @@ CREATE INDEX appid_idx on application_service_map(appid);\n CREATE INDEX ifserviceid_idx on application_service_map(ifserviceid);\n CREATE UNIQUE INDEX appid_ifserviceid_idex on application_service_map(appid,ifserviceid);\n \n+--########################################################################\n+--# application_perspective_location_map table - Many-to-Many mapping table of\n+--# applications to monitoringLocations\n+--#\n+--# This table contains the following fields:\n+--#\n+--# appId                : The application id from applications table\n+--# monitoringLocationId : The id from the monitoringLocations table.\n+--########################################################################\n+\n+create table application_perspective_location_map (\n+                                         appId\t\tinteger,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0NTkzNg==", "bodyText": "\ud83d\udc4d fixed", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465745936", "createdAt": "2020-08-05T13:57:43Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-base-assembly/src/main/filtered/etc/create.sql", "diffHunk": "@@ -1480,6 +1457,26 @@ CREATE INDEX appid_idx on application_service_map(appid);\n CREATE INDEX ifserviceid_idx on application_service_map(ifserviceid);\n CREATE UNIQUE INDEX appid_ifserviceid_idex on application_service_map(appid,ifserviceid);\n \n+--########################################################################\n+--# application_perspective_location_map table - Many-to-Many mapping table of\n+--# applications to monitoringLocations\n+--#\n+--# This table contains the following fields:\n+--#\n+--# appId                : The application id from applications table\n+--# monitoringLocationId : The id from the monitoringLocations table.\n+--########################################################################\n+\n+create table application_perspective_location_map (\n+                                         appId\t\tinteger,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxMjA1OQ=="}, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzUzMTgyOnYy", "diffSide": "RIGHT", "path": "opennms-base-assembly/src/main/filtered/etc/create.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNjo1Nzo0M1rOG78sIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzo1ODo0NFrOG8K7MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxMzUwNg==", "bodyText": "Same here. Liquibase changes define this field as \"nullable=false\", so here a \"NOT NULL\" is missing. A foreign key constraint does not imply a not-null constraint.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465513506", "createdAt": "2020-08-05T06:57:43Z", "author": {"login": "christianpape"}, "path": "opennms-base-assembly/src/main/filtered/etc/create.sql", "diffHunk": "@@ -1480,6 +1457,26 @@ CREATE INDEX appid_idx on application_service_map(appid);\n CREATE INDEX ifserviceid_idx on application_service_map(ifserviceid);\n CREATE UNIQUE INDEX appid_ifserviceid_idex on application_service_map(appid,ifserviceid);\n \n+--########################################################################\n+--# application_perspective_location_map table - Many-to-Many mapping table of\n+--# applications to monitoringLocations\n+--#\n+--# This table contains the following fields:\n+--#\n+--# appId                : The application id from applications table\n+--# monitoringLocationId : The id from the monitoringLocations table.\n+--########################################################################\n+\n+create table application_perspective_location_map (\n+                                         appId\t\tinteger,\n+                                         monitoringLocationId\ttext,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0NjczNg==", "bodyText": "fixed.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465746736", "createdAt": "2020-08-05T13:58:44Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-base-assembly/src/main/filtered/etc/create.sql", "diffHunk": "@@ -1480,6 +1457,26 @@ CREATE INDEX appid_idx on application_service_map(appid);\n CREATE INDEX ifserviceid_idx on application_service_map(ifserviceid);\n CREATE UNIQUE INDEX appid_ifserviceid_idex on application_service_map(appid,ifserviceid);\n \n+--########################################################################\n+--# application_perspective_location_map table - Many-to-Many mapping table of\n+--# applications to monitoringLocations\n+--#\n+--# This table contains the following fields:\n+--#\n+--# appId                : The application id from applications table\n+--# monitoringLocationId : The id from the monitoringLocations table.\n+--########################################################################\n+\n+create table application_perspective_location_map (\n+                                         appId\t\tinteger,\n+                                         monitoringLocationId\ttext,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxMzUwNg=="}, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzU0NDI2OnYy", "diffSide": "RIGHT", "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsApplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzowMTo1N1rOG78z9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDowMjowNFrOG8LEmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxNTUxMA==", "bodyText": "The column's name in the schema is \"pollingpackage\" not \"polling_package\".", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465515510", "createdAt": "2020-08-05T07:01:57Z", "author": {"login": "christianpape"}, "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsApplication.java", "diffHunk": "@@ -116,35 +107,47 @@ public void setName(String name) {\n     @XmlElementWrapper(name=\"monitoredServices\")\n     @JsonBackReference\n     public Set<OnmsMonitoredService> getMonitoredServices() {\n-        return m_monitoredServices;\n+        return monitoredServices;\n     }\n \n-    /**\n-     * <p>setMonitoredServices</p>\n-     *\n-     * @param services a {@link java.util.Set} object.\n-     * @since 1.8.1\n-     */\n     public void setMonitoredServices(Set<OnmsMonitoredService> services) {\n-        m_monitoredServices = services;\n+        monitoredServices = services;\n     }\n \n-    /**\n-     * <p>addMonitoredService</p>\n-     *\n-     * @param service a {@link org.opennms.netmgt.model.OnmsMonitoredService} object.\n-     * @since 1.8.1\n-     */\n     public void addMonitoredService(OnmsMonitoredService service) {\n         getMonitoredServices().add(service);\n     }\n \n-    /**\n-     * <p>compareTo</p>\n-     *\n-     * @param o a {@link org.opennms.netmgt.model.OnmsApplication} object.\n-     * @return a int.\n-     */\n+\n+    @ManyToMany( cascade={CascadeType.PERSIST, CascadeType.MERGE})\n+    @JoinTable(name=\"application_perspective_location_map\",\n+            joinColumns=@JoinColumn(name=\"appId\", referencedColumnName = \"id\"),\n+            inverseJoinColumns=@JoinColumn(name=\"monitoringLocationId\", referencedColumnName = \"id\"))\n+    @XmlIDREF\n+    @XmlElement(name=\"perspectiveLocationId\")\n+    @XmlElementWrapper(name=\"perspectiveLocations\")\n+    public Set<OnmsMonitoringLocation> getPerspectiveLocations() {\n+        return this.perspectiveLocations;\n+    }\n+\n+    public void setPerspectiveLocations(Set<OnmsMonitoringLocation> perspectiveLocations) {\n+        this.perspectiveLocations = perspectiveLocations;\n+    }\n+\n+    public void addPerspectiveLocation(OnmsMonitoringLocation perspectiveLocation) {\n+        getPerspectiveLocations().add(perspectiveLocation);\n+    }\n+\n+    /** Can be null. */\n+    @Column(name = \"polling_package\", nullable=true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0OTE0NQ==", "bodyText": "good catch! I changed the name but forgot here. fixed.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465749145", "createdAt": "2020-08-05T14:02:04Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsApplication.java", "diffHunk": "@@ -116,35 +107,47 @@ public void setName(String name) {\n     @XmlElementWrapper(name=\"monitoredServices\")\n     @JsonBackReference\n     public Set<OnmsMonitoredService> getMonitoredServices() {\n-        return m_monitoredServices;\n+        return monitoredServices;\n     }\n \n-    /**\n-     * <p>setMonitoredServices</p>\n-     *\n-     * @param services a {@link java.util.Set} object.\n-     * @since 1.8.1\n-     */\n     public void setMonitoredServices(Set<OnmsMonitoredService> services) {\n-        m_monitoredServices = services;\n+        monitoredServices = services;\n     }\n \n-    /**\n-     * <p>addMonitoredService</p>\n-     *\n-     * @param service a {@link org.opennms.netmgt.model.OnmsMonitoredService} object.\n-     * @since 1.8.1\n-     */\n     public void addMonitoredService(OnmsMonitoredService service) {\n         getMonitoredServices().add(service);\n     }\n \n-    /**\n-     * <p>compareTo</p>\n-     *\n-     * @param o a {@link org.opennms.netmgt.model.OnmsApplication} object.\n-     * @return a int.\n-     */\n+\n+    @ManyToMany( cascade={CascadeType.PERSIST, CascadeType.MERGE})\n+    @JoinTable(name=\"application_perspective_location_map\",\n+            joinColumns=@JoinColumn(name=\"appId\", referencedColumnName = \"id\"),\n+            inverseJoinColumns=@JoinColumn(name=\"monitoringLocationId\", referencedColumnName = \"id\"))\n+    @XmlIDREF\n+    @XmlElement(name=\"perspectiveLocationId\")\n+    @XmlElementWrapper(name=\"perspectiveLocations\")\n+    public Set<OnmsMonitoringLocation> getPerspectiveLocations() {\n+        return this.perspectiveLocations;\n+    }\n+\n+    public void setPerspectiveLocations(Set<OnmsMonitoringLocation> perspectiveLocations) {\n+        this.perspectiveLocations = perspectiveLocations;\n+    }\n+\n+    public void addPerspectiveLocation(OnmsMonitoringLocation perspectiveLocation) {\n+        getPerspectiveLocations().add(perspectiveLocation);\n+    }\n+\n+    /** Can be null. */\n+    @Column(name = \"polling_package\", nullable=true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxNTUxMA=="}, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzU1MjQyOnYy", "diffSide": "RIGHT", "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsApplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzowNDo1NFrOG7844A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNDowMzowNVrOG8LHSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxNjc2OA==", "bodyText": "The current implementation / Web-UI allows users to create applicationnames that differ only in upper and lower case. So, I think we should not ignore the case at this point.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465516768", "createdAt": "2020-08-05T07:04:54Z", "author": {"login": "christianpape"}, "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsApplication.java", "diffHunk": "@@ -116,35 +107,47 @@ public void setName(String name) {\n     @XmlElementWrapper(name=\"monitoredServices\")\n     @JsonBackReference\n     public Set<OnmsMonitoredService> getMonitoredServices() {\n-        return m_monitoredServices;\n+        return monitoredServices;\n     }\n \n-    /**\n-     * <p>setMonitoredServices</p>\n-     *\n-     * @param services a {@link java.util.Set} object.\n-     * @since 1.8.1\n-     */\n     public void setMonitoredServices(Set<OnmsMonitoredService> services) {\n-        m_monitoredServices = services;\n+        monitoredServices = services;\n     }\n \n-    /**\n-     * <p>addMonitoredService</p>\n-     *\n-     * @param service a {@link org.opennms.netmgt.model.OnmsMonitoredService} object.\n-     * @since 1.8.1\n-     */\n     public void addMonitoredService(OnmsMonitoredService service) {\n         getMonitoredServices().add(service);\n     }\n \n-    /**\n-     * <p>compareTo</p>\n-     *\n-     * @param o a {@link org.opennms.netmgt.model.OnmsApplication} object.\n-     * @return a int.\n-     */\n+\n+    @ManyToMany( cascade={CascadeType.PERSIST, CascadeType.MERGE})\n+    @JoinTable(name=\"application_perspective_location_map\",\n+            joinColumns=@JoinColumn(name=\"appId\", referencedColumnName = \"id\"),\n+            inverseJoinColumns=@JoinColumn(name=\"monitoringLocationId\", referencedColumnName = \"id\"))\n+    @XmlIDREF\n+    @XmlElement(name=\"perspectiveLocationId\")\n+    @XmlElementWrapper(name=\"perspectiveLocations\")\n+    public Set<OnmsMonitoringLocation> getPerspectiveLocations() {\n+        return this.perspectiveLocations;\n+    }\n+\n+    public void setPerspectiveLocations(Set<OnmsMonitoringLocation> perspectiveLocations) {\n+        this.perspectiveLocations = perspectiveLocations;\n+    }\n+\n+    public void addPerspectiveLocation(OnmsMonitoringLocation perspectiveLocation) {\n+        getPerspectiveLocations().add(perspectiveLocation);\n+    }\n+\n+    /** Can be null. */\n+    @Column(name = \"polling_package\", nullable=true)\n+    public String getPollingPackage() {\n+        return pollingPackage;\n+    }\n+\n+    public void setPollingPackage(String pollingPackage) {\n+        this.pollingPackage = pollingPackage;\n+    }\n+\n     @Override\n     public int compareTo(OnmsApplication o) {\n         return getName().compareToIgnoreCase(o.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0OTgzMw==", "bodyText": "I didn't change that but makes sense. I removed the check..", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465749833", "createdAt": "2020-08-05T14:03:05Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-model/src/main/java/org/opennms/netmgt/model/OnmsApplication.java", "diffHunk": "@@ -116,35 +107,47 @@ public void setName(String name) {\n     @XmlElementWrapper(name=\"monitoredServices\")\n     @JsonBackReference\n     public Set<OnmsMonitoredService> getMonitoredServices() {\n-        return m_monitoredServices;\n+        return monitoredServices;\n     }\n \n-    /**\n-     * <p>setMonitoredServices</p>\n-     *\n-     * @param services a {@link java.util.Set} object.\n-     * @since 1.8.1\n-     */\n     public void setMonitoredServices(Set<OnmsMonitoredService> services) {\n-        m_monitoredServices = services;\n+        monitoredServices = services;\n     }\n \n-    /**\n-     * <p>addMonitoredService</p>\n-     *\n-     * @param service a {@link org.opennms.netmgt.model.OnmsMonitoredService} object.\n-     * @since 1.8.1\n-     */\n     public void addMonitoredService(OnmsMonitoredService service) {\n         getMonitoredServices().add(service);\n     }\n \n-    /**\n-     * <p>compareTo</p>\n-     *\n-     * @param o a {@link org.opennms.netmgt.model.OnmsApplication} object.\n-     * @return a int.\n-     */\n+\n+    @ManyToMany( cascade={CascadeType.PERSIST, CascadeType.MERGE})\n+    @JoinTable(name=\"application_perspective_location_map\",\n+            joinColumns=@JoinColumn(name=\"appId\", referencedColumnName = \"id\"),\n+            inverseJoinColumns=@JoinColumn(name=\"monitoringLocationId\", referencedColumnName = \"id\"))\n+    @XmlIDREF\n+    @XmlElement(name=\"perspectiveLocationId\")\n+    @XmlElementWrapper(name=\"perspectiveLocations\")\n+    public Set<OnmsMonitoringLocation> getPerspectiveLocations() {\n+        return this.perspectiveLocations;\n+    }\n+\n+    public void setPerspectiveLocations(Set<OnmsMonitoringLocation> perspectiveLocations) {\n+        this.perspectiveLocations = perspectiveLocations;\n+    }\n+\n+    public void addPerspectiveLocation(OnmsMonitoringLocation perspectiveLocation) {\n+        getPerspectiveLocations().add(perspectiveLocation);\n+    }\n+\n+    /** Can be null. */\n+    @Column(name = \"polling_package\", nullable=true)\n+    public String getPollingPackage() {\n+        return pollingPackage;\n+    }\n+\n+    public void setPollingPackage(String pollingPackage) {\n+        this.pollingPackage = pollingPackage;\n+    }\n+\n     @Override\n     public int compareTo(OnmsApplication o) {\n         return getName().compareToIgnoreCase(o.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUxNjc2OA=="}, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzU3NTQ1OnYy", "diffSide": "LEFT", "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/MonitoringLocationsRestService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzoxMjozN1rOG79G0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMDoxODo1NlrOG8DZcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyMDMzNw==", "bodyText": "The POLLER_PACKAGE_LOCATION_ASSOCIATION_CHANGED_EVENT_UEI can be removed, but it's handling must be moved to the ApplicationRestService. We already have an APPLICATION_DELETED_EVENT_UEI, so I think we should introduce an additional APPLICATION_CHANGED_EVENT_UEI in order to re-schedule services at runtime.", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465520337", "createdAt": "2020-08-05T07:12:37Z", "author": {"login": "christianpape"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/MonitoringLocationsRestService.java", "diffHunk": "@@ -117,19 +116,6 @@ public Response addMonitoringLocation(@Context final UriInfo uriInfo, OnmsMonito\n \t\ttry {\n \t\t\tLOG.debug(\"addMonitoringLocation: Adding monitoringLocation {}\", monitoringLocation.getLocationName());\n \t\t\tm_monitoringLocationDao.save(monitoringLocation);\n-\n-\t\t\tfinal boolean sendEvent = monitoringLocation.getPollingPackageNames() != null && !monitoringLocation.getPollingPackageNames().isEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMzIyMw==", "bodyText": "Same for an APPLICATION_CREATED_EVENT_UEI", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465623223", "createdAt": "2020-08-05T10:18:30Z", "author": {"login": "fooker"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/MonitoringLocationsRestService.java", "diffHunk": "@@ -117,19 +116,6 @@ public Response addMonitoringLocation(@Context final UriInfo uriInfo, OnmsMonito\n \t\ttry {\n \t\t\tLOG.debug(\"addMonitoringLocation: Adding monitoringLocation {}\", monitoringLocation.getLocationName());\n \t\t\tm_monitoringLocationDao.save(monitoringLocation);\n-\n-\t\t\tfinal boolean sendEvent = monitoringLocation.getPollingPackageNames() != null && !monitoringLocation.getPollingPackageNames().isEmpty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyMDMzNw=="}, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYyMzQwOA==", "bodyText": "See https://issues.opennms.org/browse/NMS-12838", "url": "https://github.com/OpenNMS/opennms/pull/3080#discussion_r465623408", "createdAt": "2020-08-05T10:18:56Z", "author": {"login": "fooker"}, "path": "opennms-webapp-rest/src/main/java/org/opennms/web/rest/v1/MonitoringLocationsRestService.java", "diffHunk": "@@ -117,19 +116,6 @@ public Response addMonitoringLocation(@Context final UriInfo uriInfo, OnmsMonito\n \t\ttry {\n \t\t\tLOG.debug(\"addMonitoringLocation: Adding monitoringLocation {}\", monitoringLocation.getLocationName());\n \t\t\tm_monitoringLocationDao.save(monitoringLocation);\n-\n-\t\t\tfinal boolean sendEvent = monitoringLocation.getPollingPackageNames() != null && !monitoringLocation.getPollingPackageNames().isEmpty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTUyMDMzNw=="}, "originalCommit": {"oid": "772071a259f10d84a81fec2de98b467a1fc34686"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3047, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}