{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4Nzc1MTc0", "number": 3034, "title": "NMS-12735: Document how to use metadata with thresholding", "bodyText": "All Contributors\n\n Have you read and followed our Contribution Guidelines?\n Have you made an issue in the OpenNMS issue tracker?If so, you should:\n\nupdate the title of this PR to be of the format: ${JIRA-ISSUE-NUMBER}: subject of pull request\nupdate the JIRA link at the bottom of this comment to refer to the real issue number\nprefix your commit messages with the issue number, if possible\n\n\n Have you made a comment in that issue which points back to this PR?\n Have you updated the JIRA link at the bottom of this comment to link to your issue?\n If this is a new or updated feature, is there documentation for the new behavior?\n If this is new code, are there unit and/or integration tests?\n If this PR targets a foundation-* branch, does it avoid changing files in $OPENNMS_HOME/etc/?\n\nPull Request Process\nOne or more reviewers should be assigned to each PR.\nIf you know that a particular person is subject matter expert in the area your PR affects, feel free to assign one or more reviewers when you create this PR, otherwise reviewers will be assigned for you.\nIf you have made additions or changes to the documentation, or if you need documentation for these code changes, please make sure a technical writer has looked it over.\nOnce the reviewer(s) accept the PR and the branch passes continuous integration, the PR is eligible for merge.\nAt that time, if you have commit access (are an OpenNMS Group employee or a member of the Order of the Green Polo) you are welcome to merge the PR.\nOtherwise, a reviewer can merge it for you.\nThanks for taking time to contribute!\nExternal References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12735", "createdAt": "2020-06-05T21:29:32Z", "url": "https://github.com/OpenNMS/opennms/pull/3034", "merged": true, "mergeCommit": {"oid": "0a3c4330ff9286336e2962ae7c34b136fbae1f90"}, "closed": true, "closedAt": "2020-06-23T15:51:09Z", "author": {"login": "Bonrob2"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnD1E2gH2gAyNDI4Nzc1MTc0OjY2ZTk1MTQ5YzVkMWQyZWMzMWE2ZmNhM2JiZjFmZWQwYTBlNGI4ODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuHfatgH2gAyNDI4Nzc1MTc0OjM2MDlmYmUzNDEzN2M2ZDU0Zjg4ZjRjYzc1ZWRiYmRmNzZlODQwZmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "66e95149c5d1d2ec31a6fca3bbf1fed0a0e4b887", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/66e95149c5d1d2ec31a6fca3bbf1fed0a0e4b887", "committedDate": "2020-06-01T17:36:49Z", "message": "NMS-12735 document metadata thresholding\n\nNMS-12735: document metadata thresholding and updated spelling of metadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e55db19378afc98d3494b2182c2cd3f131651526", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/e55db19378afc98d3494b2182c2cd3f131651526", "committedDate": "2020-06-01T20:48:00Z", "message": "NMS-12735 metadata threshold documentation\n\nNMS-12735 - added more detail to the metadata thresholding documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "225227f1ccf4512052000b5569b60dd998d7e726", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/225227f1ccf4512052000b5569b60dd998d7e726", "committedDate": "2020-06-03T21:42:53Z", "message": "NMS-12735 document metadata in thresholds\n\nNMS-12735 document metadata in thresholds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "565e3622b934ddc08dfd33a9813a005f6dc9bc76", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/565e3622b934ddc08dfd33a9813a005f6dc9bc76", "committedDate": "2020-06-04T21:29:39Z", "message": "NMS-12735 - metadata in thresholds docs\n\n NMS-12735 - updating the metadata DLS documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/2f4d94f4520c64305311e422e4f36bd173d2baaa", "committedDate": "2020-06-05T21:26:45Z", "message": "NMS-12735 metadata in threshold documentation\n\nNMS-12735 updated metadata documentation and added docs around metadata in threshold expressions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ3NDUw", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-425747450", "createdAt": "2020-06-06T15:16:59Z", "commit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToxNjo1OVrOGgENKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToxNjo1OVrOGgENKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3NjUyMQ==", "bodyText": "It's the node's metadata that is used to identify the exporter.", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r436276521", "createdAt": "2020-06-06T15:16:59Z", "author": {"login": "christianpape"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/flows/setup.adoc", "diffHunk": "@@ -110,7 +110,7 @@ parsers.0.class-name org.opennms.netmgt.telemetry.protocols.netflow.parser.Netfl\n NOTE: The associated protocol, in this case `Netflow-5` must also be enabled on _{opennms-product-name}_ for the messages to be processed.\n \n In some scenarios the exporters address is altered due to network address translation.\n-In this case you can use node meta-data to identify the exporter.\n+In this case you can use node data to identify the exporter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ3ODYw", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-425747860", "createdAt": "2020-06-06T15:23:52Z", "commit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyMzo1M1rOGgEPAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyMzo1M1rOGgEPAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3Njk5Mg==", "bodyText": "This is somewhat misleading. This sounds like a user is able to define contextA/keyX/Value1 and contextA/keyX/Value2 at the same time, but a new value for a contextA/keyX will overwrite the old value. Of course key/context/value is unique, but because the tuple contextA/keyX is already unique itself.", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r436276992", "createdAt": "2020-06-06T15:23:53Z", "author": {"login": "christianpape"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/meta-data.adoc", "diffHunk": "@@ -1,29 +1,45 @@\n-{opennms-product-name} supports the assignment of arbitrary meta-data to nodes, interfaces and services.\n \n-The meta-data is a simple triple of strings containing a context, a key and the associated value.\n-There can be an arbitrary number of meta-data elements assigned to each node, each interface and each service.\n-The only restriction is, that the tuple of context and key must be unique in the element to which they are associated.\n+// Allow GitHub image rendering\n+:imagesdir: ../images\n \n-The meta-data is associated to nodes, interfaces and services during link:#ga-provisioning-meta-data[provisioning].\n+{opennms-product-name} supports the assignment of arbitrary metadata to nodes, interfaces and services. \n+You can then use this metadata to dynamically configure service monitoring, performance data collection, service detection, and expression-based thresholds. \n \n-To view the meta-data currently assigned to nodes, interfaces and services, there according details page can be used.\n-These pages show the meta-data as it is currently assigned in the database.\n+The metadata is a simple triad of strings containing a context, a key and the associated value.\n+Each node, each interface and each service can have an arbitrary number of metadata elements assigned to it.\n+The only restriction is that each context/key/value must be unique in the entity with which it is associated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ4MDc2", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-425748076", "createdAt": "2020-06-06T15:27:45Z", "commit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyNzo0NVrOGgEQCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyNzo0NVrOGgEQCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3NzI1OA==", "bodyText": "User can create additional metadata by using the ReST-API.", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r436277258", "createdAt": "2020-06-06T15:27:45Z", "author": {"login": "christianpape"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/meta-data.adoc", "diffHunk": "@@ -1,29 +1,45 @@\n-{opennms-product-name} supports the assignment of arbitrary meta-data to nodes, interfaces and services.\n \n-The meta-data is a simple triple of strings containing a context, a key and the associated value.\n-There can be an arbitrary number of meta-data elements assigned to each node, each interface and each service.\n-The only restriction is, that the tuple of context and key must be unique in the element to which they are associated.\n+// Allow GitHub image rendering\n+:imagesdir: ../images\n \n-The meta-data is associated to nodes, interfaces and services during link:#ga-provisioning-meta-data[provisioning].\n+{opennms-product-name} supports the assignment of arbitrary metadata to nodes, interfaces and services. \n+You can then use this metadata to dynamically configure service monitoring, performance data collection, service detection, and expression-based thresholds. \n \n-To view the meta-data currently assigned to nodes, interfaces and services, there according details page can be used.\n-These pages show the meta-data as it is currently assigned in the database.\n+The metadata is a simple triad of strings containing a context, a key and the associated value.\n+Each node, each interface and each service can have an arbitrary number of metadata elements assigned to it.\n+The only restriction is that each context/key/value must be unique in the entity with which it is associated.\n \n-The meta-data can be used to dynamically configure service monitoring, performance data collection, and service detection.\n-They all use a link:#ga-meta-data-dsl[simple DSL] which allows to access the meta-data associated to the elements they are working on.\n+The association of metadata with nodes, interfaces and services happens during link:#ga-provisioning-meta-data[provisioning].\n+Users can add, query, modify, or delete metadata through the requisition editor in the link:ga-metadata-webui[web UI], or through the xref:https://docs.opennms.org/opennms/releases/latest/guide-development/guide-development.html#_meta_data[ReST endpoints].\n \n-=== Special contexts\n-In relation to nodes, interfaces and services, there are special contexts available which expose details about those objects.\n+A link:#ga-meta-data-dsl[simple domain-specific language] (DSL) allows users to access the metadata associated with the elements they are working on, and use it as a variable in parameters and expressions\n+#QUESTION: Is there anything else they can use metadata in?# \n+There is no limitation in defining metadata: users can decide how to define it and use it in expressions. \n+\n+View metadata currently assigned to nodes, interfaces and services, on the details page associated with that entity in the web UI. \n+#TODO: Insert image#\n+\n+=== Contexts\n+\n+A context distinguishes different kinds of metadata use. \n+{opennms-product-name} uses several default contexts: pattern, requisition, network, node, interface, and service. \n+#QUESTION: is this correct? I might be getting contexts and scopes mixed up. If so, what are the scopes? Regardless, are there default keys for requisistion or does requisition include all the keys from node, interface, and service contexts?#\n+\n+Three special contexts provide details about nodes, interfaces and services objects.\n+Each context has keys associated with it that you can use in a metadata expression. \n+You can create additional contexts by prefixing the context name with `X-`. #QUESTION: Where do they create contexts?#", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ4MTk5", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-425748199", "createdAt": "2020-06-06T15:29:33Z", "commit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyOTozM1rOGgEQiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNToyOTozM1rOGgEQiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3NzM4NQ==", "bodyText": "optiional -> optional", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r436277385", "createdAt": "2020-06-06T15:29:33Z", "author": {"login": "christianpape"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/meta-data.adoc", "diffHunk": "@@ -35,59 +51,84 @@ The following keys are available under this context:\n | `node:area`            | The node's monitoring location area\n |===\n \n+==== Interface context\n+\n The `interface` context provides details about the interface currently processed.\n The following keys are available under this context:\n \n [options=\"header, autowidth\"]\n |===\n | Context:Key                | Description\n | `interface:hostname`       | The hostname associated with the IP address of the interface\n-| `interface:address`        | The IP address if the interface\n+| `interface:address`        | The IP address of the interface\n | `interface:netmask`        | The netmask of the interface\n | `interface:if-index`       | The SNMP interface index\n | `interface:if-alias`       | The SNMP interface alias\n | `interface:if-description` | The SNMP interface description\n | `interface:phy-addr`       | The physical address of the interface\n |===\n \n+==== Service context\n+\n The `service` context provides details about the service currently processed.\n-The following keys are available under this context:\n+The following key is available under this context:\n \n [options=\"header, autowidth\"]\n |===\n | Context:Key        | Description\n | `service:name`     | The full name of the service\n |===\n \n+[[ga-metadata-webui]]\n+=== Adding Metadata through the Web UI\n+\n+You can add metadata for the requisition context in the requisition editor in the web UI:\n+\n+. Under the admin menu, select *Configure OpenNMS*.\n+. Select *Manage Provisioning Requisitions*.\n+. Click the edit icon beside the requisition you want to work with. \n+. Click edit beside the node you want to work with. \n+. In the *Meta-Data* area, click *Add Meta-Data*.\n++\n+image:metadata/metadata_add.png[]\n+\n+. Specify `node` or `interface` as the *scope* of where the metadata will apply. \n+. Specify the key and a value and click *Save*.\n+\n [[ga-meta-data-dsl]]\n-=== The Meta-Data-DSL\n-The meta-data DSL allow interpolation of meta-data into a parameter.\n-The syntax allows the usage of patterns like `${context:key|context_fallback:key_fallback|...|default}` in an expression.\n+=== The Metadata DSL\n+The metadata DSL allows interpolation of metadata into a parameter.\n+The syntax allows the use of patterns like `${context:key|context_fallback:key_fallback|...|default}` in an expression.\n+\n+Each expression can contain multiple references to metadata that will be replaced with the corresponding value during evaluation.\n+Placeholders start with `${` and end with `}` containing a reference to a context-key pair. \n+You may choose to define multiple fallback context-key pairs and and an optional trailing default value.\n+Separate context and key by a `:`.\n+Use a `|` to separate optiional fall back context-key pairs and default value.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "originalPosition": 121}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ4NTg3", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-425748587", "createdAt": "2020-06-06T15:35:52Z", "commit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTozNTo1MlrOGgESVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTozNTo1MlrOGgESVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3Nzg0Ng==", "bodyText": "Currently we have the scopes node, interface and service. If I query a metadata entry of an service entity the resolution is service metadata -> interface.metadata -> node metadata. On interface level just interface metadata -> node metadata. On node level only the node is searched for the metadata entry.", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r436277846", "createdAt": "2020-06-06T15:35:52Z", "author": {"login": "christianpape"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/meta-data.adoc", "diffHunk": "@@ -35,59 +51,84 @@ The following keys are available under this context:\n | `node:area`            | The node's monitoring location area\n |===\n \n+==== Interface context\n+\n The `interface` context provides details about the interface currently processed.\n The following keys are available under this context:\n \n [options=\"header, autowidth\"]\n |===\n | Context:Key                | Description\n | `interface:hostname`       | The hostname associated with the IP address of the interface\n-| `interface:address`        | The IP address if the interface\n+| `interface:address`        | The IP address of the interface\n | `interface:netmask`        | The netmask of the interface\n | `interface:if-index`       | The SNMP interface index\n | `interface:if-alias`       | The SNMP interface alias\n | `interface:if-description` | The SNMP interface description\n | `interface:phy-addr`       | The physical address of the interface\n |===\n \n+==== Service context\n+\n The `service` context provides details about the service currently processed.\n-The following keys are available under this context:\n+The following key is available under this context:\n \n [options=\"header, autowidth\"]\n |===\n | Context:Key        | Description\n | `service:name`     | The full name of the service\n |===\n \n+[[ga-metadata-webui]]\n+=== Adding Metadata through the Web UI\n+\n+You can add metadata for the requisition context in the requisition editor in the web UI:\n+\n+. Under the admin menu, select *Configure OpenNMS*.\n+. Select *Manage Provisioning Requisitions*.\n+. Click the edit icon beside the requisition you want to work with. \n+. Click edit beside the node you want to work with. \n+. In the *Meta-Data* area, click *Add Meta-Data*.\n++\n+image:metadata/metadata_add.png[]\n+\n+. Specify `node` or `interface` as the *scope* of where the metadata will apply. \n+. Specify the key and a value and click *Save*.\n+\n [[ga-meta-data-dsl]]\n-=== The Meta-Data-DSL\n-The meta-data DSL allow interpolation of meta-data into a parameter.\n-The syntax allows the usage of patterns like `${context:key|context_fallback:key_fallback|...|default}` in an expression.\n+=== The Metadata DSL\n+The metadata DSL allows interpolation of metadata into a parameter.\n+The syntax allows the use of patterns like `${context:key|context_fallback:key_fallback|...|default}` in an expression.\n+\n+Each expression can contain multiple references to metadata that will be replaced with the corresponding value during evaluation.\n+Placeholders start with `${` and end with `}` containing a reference to a context-key pair. \n+You may choose to define multiple fallback context-key pairs and and an optional trailing default value.\n+Separate context and key by a `:`.\n+Use a `|` to separate optiional fall back context-key pairs and default value.  \n \n-Each expressions can contain multiple references to meta-data which will be replaced with the according value during evaluation.\n-Placeholders starts with `${` and ends with `}` containing a reference to a context-key-pair optionally allowing to define multiple fallback context-key-pairs and and optional trailing default value.\n-Context and key are separated by a `:`.\n+*Examples*\n \n `${requisition:username}`::\n Will resolve to the `username` as defined in the requisitioning UI or an empty value, if there is no such username defined.\n \n-An placeholder can contain an optional default value which is separated by a `|`.\n+A placeholder can contain an optional default value which is separated by a `|`.\n \n `${requisition:username|admin}`::\n Will resolve to the `username` as defined in the requisitioning UI or to the value `admin`, if there is no such username defined.\n \n-There can be zero or more fallback context-key-pairs in an placeholder which will follow the primary context-key-pair.\n-Each fallback context-key-pair is separated by a `|`.\n+Use fallback context-key pairs in a placeholder after the primary context-key pair to specify other values if the primary context-key pair is not defined. \n+Separate each fallback context-key-pair by a `|`.\n \n `${requisition:username|requisition:account|admin}`::\n Will resolve to the `username` as defined in the requisitioning UI.\n-If there is no such username defined the fallback `account` will be used.\n-If both of them do not exist, the fallback value `admin` will be used.\n+If there is no such username defined, the fallback `account` will be used.\n+If neither exist, the fallback value `admin` will be used.\n \n-To resolve the value associated with context-key-pair, the DSL uses scopes which will determine the resolution order.\n-The last scope will be queried first and if a scope does not contain the queried context-key-tuple, the next one will be queried.\n-Which scopes are available depends on the environment for which a expression is evaluated and is documented in the according places.\n-Some environments also provide additional scopes which are not backed by the persisted meta-data but provide additional meta-data related to the current evaluation.\n+To resolve the value associated with context-key pair, the DSL uses scopes that will determine the resolution order.\n+The last scope will be queried first and if a scope does not contain the queried context-key tuple, the next one will be queried.\n+#QUESTION: How does the user know what the last scope is? is there a default order depending on what scopes are being queried?#", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "originalPosition": 155}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzQ4NzQ3", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-425748747", "createdAt": "2020-06-06T15:38:33Z", "commit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTozODozM1rOGgETDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTozODozM1rOGgETDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3ODAyOA==", "bodyText": "Looks good.", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r436278028", "createdAt": "2020-06-06T15:38:33Z", "author": {"login": "christianpape"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/thresholds/thresholding.adoc", "diffHunk": "@@ -163,6 +163,54 @@ In this case, when the five-minute CPU load average goes above 70% for two conse\n \n . Click `Save`.\n \n+[[ga-threshhold-metadata]]\n+==== Using Metadata in a Threshold\n+\n+Metadata in expression-based thresholds can streamline threshold creation. \n+The link:#ga-meta-data-dsl[Metadata DSL] (domain specific language) allows for the use of patterns in an expression, whereby the metadata is replaced with a corresponding value during the collection process.\n+A single expression can behave differently based on the node being tested against.\n+\n+During evaluation of an expression, the following scopes are available:\n+\n+* Node metadata\n+* Interface metadata\n+* Service metadata\n+\n+For more information on metadata and how to define it, see link:metadata[Metadata].\n+\n+IMPORTANT: Never attempt to use metatdata with basic thresholds. \n+Metadata works only with expression-based thresholds.\n+Using metadata with a basic threshold will break the web UI, making it unusable.  \n+\n+This procedure uses metadata to trigger an event when the number of logged-in users exceeds 1.\n+#QUESTION: Is this correct? I feel like something is missing.#\n+The expression is in the form `${context:key|context_fallback:key_fallback|...|default}`.\n+\n+Before using metatdata in a threshold, you need to add the metatdata context pair, in this case, a requisition key called userLimit (see link:ga-metadata-webui[Adding Metadata through the Web UI]).\n+\n+. Select `<User_Name>>Configure OpenNMS` from the top-right menu. \n+. Under *Performance Measurement*, choose *Configure Thresholds*.\n+. Click *Edit* beside the `netsnmp` group. \n+. Click *Create New Expression-based Threshold*. \n+. Fill in the following information:\n+\n++\n+* Type: High\n+* Expression: `hrSystemNumUsers / ${requisition:userLimit|1}`\n+* Datasource type: Node\n+* Value: 1\n+* Rearm: 1\n+* Description: Too many logged-in users\n+\n+image:metadata/meta-expression1.png[]\n+\n+. Click *Save*.\n+\n+This expression will trigger an event when the number of logged-in users exceeds 1.\n+#QUESTION: Is this correct? I feel like something is missing.#", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f4d94f4520c64305311e422e4f36bd173d2baaa"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d825f1cc97e2ce4cf98844f722add56d22695a96", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/d825f1cc97e2ce4cf98844f722add56d22695a96", "committedDate": "2020-06-09T18:43:06Z", "message": "NMS-12735: Document how to use metadata with thresholding\n\nDocumented how to use metadata with thresholding, with examples."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3ODQwNTEx", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-427840511", "createdAt": "2020-06-10T08:44:26Z", "commit": {"oid": "d825f1cc97e2ce4cf98844f722add56d22695a96"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODo0NDoyN1rOGhrCCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODo1MzozNFrOGhrYWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2MTIyNg==", "bodyText": "Maybe call them \"User defined contexts\". The idea here is that we (the opennms project) can add contexts later on without interfering with the user defined contexts, because they are all prefixed with X-. But there is no mechanism to enforce this.", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r437961226", "createdAt": "2020-06-10T08:44:27Z", "author": {"login": "fooker"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/meta-data.adoc", "diffHunk": "@@ -1,29 +1,44 @@\n-{opennms-product-name} supports the assignment of arbitrary meta-data to nodes, interfaces and services.\n \n-The meta-data is a simple triple of strings containing a context, a key and the associated value.\n-There can be an arbitrary number of meta-data elements assigned to each node, each interface and each service.\n-The only restriction is, that the tuple of context and key must be unique in the element to which they are associated.\n+// Allow GitHub image rendering\n+:imagesdir: ../images\n \n-The meta-data is associated to nodes, interfaces and services during link:#ga-provisioning-meta-data[provisioning].\n+{opennms-product-name} supports the assignment of arbitrary metadata to nodes, interfaces and services. \n+You can then use this metadata to dynamically configure service monitoring, performance data collection, service detection, and expression-based thresholds. \n \n-To view the meta-data currently assigned to nodes, interfaces and services, there according details page can be used.\n-These pages show the meta-data as it is currently assigned in the database.\n+The metadata is a simple triad of strings containing a context, a key and the associated value.\n+Each node, each interface and each service can have an arbitrary number of metadata elements assigned to it.\n+The only restriction is that the tuple of context and key must be unique in the element with which it is associated.\n \n-The meta-data can be used to dynamically configure service monitoring, performance data collection, and service detection.\n-They all use a link:#ga-meta-data-dsl[simple DSL] which allows to access the meta-data associated to the elements they are working on.\n+The association of metadata with nodes, interfaces and services happens during link:#ga-provisioning-meta-data[provisioning].\n+Users can add, query, modify, or delete metadata through the requisition editor in the link:ga-metadata-webui[web UI], or through the xref:https://docs.opennms.org/opennms/releases/latest/guide-development/guide-development.html#_meta_data[ReST endpoints].\n \n-=== Special contexts\n-In relation to nodes, interfaces and services, there are special contexts available which expose details about those objects.\n+A link:#ga-meta-data-dsl[simple domain-specific language] (DSL) allows users to access the metadata associated with the elements they are working on, and use it as a variable in parameters and expressions\n+There is no limitation in defining metadata: users can decide how to define it and use it in expressions. \n+\n+View metadata currently assigned to nodes, interfaces and services, on the details page associated with that entity in the web UI:\n+\n+image:metadata/metadata-view.png[]\n+\n+=== Contexts\n+\n+A context distinguishes different kinds of metadata use. \n+{opennms-product-name} uses several default contexts: pattern, requisition, network, node, interface, and service. \n+\n+Three special contexts provide details about nodes, interfaces and services objects.\n+Each context has keys associated with it that you can use in a metadata expression. \n+You can create additional contexts in the ReST API by prefixing the context name with `X-`. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d825f1cc97e2ce4cf98844f722add56d22695a96"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2NjM0NQ==", "bodyText": "The pattern context only plays a role when the metadata is used for polling.\nThe poller config allows to define service patterns. This patterns can contain named placeholders (RegEx matching groups). If a poller is executed because it matched a services by the defined pattern, the matched placeholder values are available in the pattern context.", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r437966345", "createdAt": "2020-06-10T08:52:35Z", "author": {"login": "fooker"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/meta-data.adoc", "diffHunk": "@@ -1,29 +1,44 @@\n-{opennms-product-name} supports the assignment of arbitrary meta-data to nodes, interfaces and services.\n \n-The meta-data is a simple triple of strings containing a context, a key and the associated value.\n-There can be an arbitrary number of meta-data elements assigned to each node, each interface and each service.\n-The only restriction is, that the tuple of context and key must be unique in the element to which they are associated.\n+// Allow GitHub image rendering\n+:imagesdir: ../images\n \n-The meta-data is associated to nodes, interfaces and services during link:#ga-provisioning-meta-data[provisioning].\n+{opennms-product-name} supports the assignment of arbitrary metadata to nodes, interfaces and services. \n+You can then use this metadata to dynamically configure service monitoring, performance data collection, service detection, and expression-based thresholds. \n \n-To view the meta-data currently assigned to nodes, interfaces and services, there according details page can be used.\n-These pages show the meta-data as it is currently assigned in the database.\n+The metadata is a simple triad of strings containing a context, a key and the associated value.\n+Each node, each interface and each service can have an arbitrary number of metadata elements assigned to it.\n+The only restriction is that the tuple of context and key must be unique in the element with which it is associated.\n \n-The meta-data can be used to dynamically configure service monitoring, performance data collection, and service detection.\n-They all use a link:#ga-meta-data-dsl[simple DSL] which allows to access the meta-data associated to the elements they are working on.\n+The association of metadata with nodes, interfaces and services happens during link:#ga-provisioning-meta-data[provisioning].\n+Users can add, query, modify, or delete metadata through the requisition editor in the link:ga-metadata-webui[web UI], or through the xref:https://docs.opennms.org/opennms/releases/latest/guide-development/guide-development.html#_meta_data[ReST endpoints].\n \n-=== Special contexts\n-In relation to nodes, interfaces and services, there are special contexts available which expose details about those objects.\n+A link:#ga-meta-data-dsl[simple domain-specific language] (DSL) allows users to access the metadata associated with the elements they are working on, and use it as a variable in parameters and expressions\n+There is no limitation in defining metadata: users can decide how to define it and use it in expressions. \n+\n+View metadata currently assigned to nodes, interfaces and services, on the details page associated with that entity in the web UI:\n+\n+image:metadata/metadata-view.png[]\n+\n+=== Contexts\n+\n+A context distinguishes different kinds of metadata use. \n+{opennms-product-name} uses several default contexts: pattern, requisition, network, node, interface, and service. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d825f1cc97e2ce4cf98844f722add56d22695a96"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2NjkzOQ==", "bodyText": "What is the network context about?", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r437966939", "createdAt": "2020-06-10T08:53:34Z", "author": {"login": "fooker"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/meta-data.adoc", "diffHunk": "@@ -1,29 +1,44 @@\n-{opennms-product-name} supports the assignment of arbitrary meta-data to nodes, interfaces and services.\n \n-The meta-data is a simple triple of strings containing a context, a key and the associated value.\n-There can be an arbitrary number of meta-data elements assigned to each node, each interface and each service.\n-The only restriction is, that the tuple of context and key must be unique in the element to which they are associated.\n+// Allow GitHub image rendering\n+:imagesdir: ../images\n \n-The meta-data is associated to nodes, interfaces and services during link:#ga-provisioning-meta-data[provisioning].\n+{opennms-product-name} supports the assignment of arbitrary metadata to nodes, interfaces and services. \n+You can then use this metadata to dynamically configure service monitoring, performance data collection, service detection, and expression-based thresholds. \n \n-To view the meta-data currently assigned to nodes, interfaces and services, there according details page can be used.\n-These pages show the meta-data as it is currently assigned in the database.\n+The metadata is a simple triad of strings containing a context, a key and the associated value.\n+Each node, each interface and each service can have an arbitrary number of metadata elements assigned to it.\n+The only restriction is that the tuple of context and key must be unique in the element with which it is associated.\n \n-The meta-data can be used to dynamically configure service monitoring, performance data collection, and service detection.\n-They all use a link:#ga-meta-data-dsl[simple DSL] which allows to access the meta-data associated to the elements they are working on.\n+The association of metadata with nodes, interfaces and services happens during link:#ga-provisioning-meta-data[provisioning].\n+Users can add, query, modify, or delete metadata through the requisition editor in the link:ga-metadata-webui[web UI], or through the xref:https://docs.opennms.org/opennms/releases/latest/guide-development/guide-development.html#_meta_data[ReST endpoints].\n \n-=== Special contexts\n-In relation to nodes, interfaces and services, there are special contexts available which expose details about those objects.\n+A link:#ga-meta-data-dsl[simple domain-specific language] (DSL) allows users to access the metadata associated with the elements they are working on, and use it as a variable in parameters and expressions\n+There is no limitation in defining metadata: users can decide how to define it and use it in expressions. \n+\n+View metadata currently assigned to nodes, interfaces and services, on the details page associated with that entity in the web UI:\n+\n+image:metadata/metadata-view.png[]\n+\n+=== Contexts\n+\n+A context distinguishes different kinds of metadata use. \n+{opennms-product-name} uses several default contexts: pattern, requisition, network, node, interface, and service. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2NjM0NQ=="}, "originalCommit": {"oid": "d825f1cc97e2ce4cf98844f722add56d22695a96"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e16f5bc571bb576c3183582f2d801c94ed8000f", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/5e16f5bc571bb576c3183582f2d801c94ed8000f", "committedDate": "2020-06-16T13:56:43Z", "message": "NMS-12735 Metadata documentation\n\nUpdated metatdata documentation to address feedback from PR."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzA1MDU3", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-432705057", "createdAt": "2020-06-17T19:21:51Z", "commit": {"oid": "5e16f5bc571bb576c3183582f2d801c94ed8000f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjI5NjYw", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-435629660", "createdAt": "2020-06-23T09:59:44Z", "commit": {"oid": "5e16f5bc571bb576c3183582f2d801c94ed8000f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo1OTo0NFrOGniLdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo1OTo0NFrOGniLdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwNzYzOA==", "bodyText": "Maybe we can refine this a little more: If the first contex:key item is not available (neither on service, interface, node or any other of the special contexts) the next one after the | is used. The last one, the default value, is not interpreted as a context:key but is used as a literal and will always succeed.", "url": "https://github.com/OpenNMS/opennms/pull/3034#discussion_r444107638", "createdAt": "2020-06-23T09:59:44Z", "author": {"login": "fooker"}, "path": "opennms-doc/guide-admin/src/asciidoc/text/meta-data.adoc", "diffHunk": "@@ -35,59 +52,87 @@ The following keys are available under this context:\n | `node:area`            | The node's monitoring location area\n |===\n \n+==== Interface context\n+\n The `interface` context provides details about the interface currently processed.\n The following keys are available under this context:\n \n [options=\"header, autowidth\"]\n |===\n | Context:Key                | Description\n | `interface:hostname`       | The hostname associated with the IP address of the interface\n-| `interface:address`        | The IP address if the interface\n+| `interface:address`        | The IP address of the interface\n | `interface:netmask`        | The netmask of the interface\n | `interface:if-index`       | The SNMP interface index\n | `interface:if-alias`       | The SNMP interface alias\n | `interface:if-description` | The SNMP interface description\n | `interface:phy-addr`       | The physical address of the interface\n |===\n \n+==== Service context\n+\n The `service` context provides details about the service currently processed.\n-The following keys are available under this context:\n+The following key is available under this context:\n \n [options=\"header, autowidth\"]\n |===\n | Context:Key        | Description\n | `service:name`     | The full name of the service\n |===\n \n+[[ga-metadata-webui]]\n+=== Adding Metadata through the Web UI\n+\n+You can edit the requisition context in the web UI:\n+\n+. Under the admin menu, select *Configure OpenNMS*.\n+. Select *Manage Provisioning Requisitions*.\n+. Click the edit icon beside the requisition you want to work with. \n+. Click edit beside the node you want to work with. \n+. In the *Meta-Data* area, click *Add Meta-Data*.\n++\n+image:metadata/metadata_add.png[]\n+\n+. Specify `node` or `interface` as the *scope* of where the metadata will apply. \n+. Specify the key and a value and click *Save*.\n+\n [[ga-meta-data-dsl]]\n-=== The Meta-Data-DSL\n-The meta-data DSL allow interpolation of meta-data into a parameter.\n-The syntax allows the usage of patterns like `${context:key|context_fallback:key_fallback|...|default}` in an expression.\n+=== The Metadata DSL\n+The metadata DSL allows interpolation of metadata into a parameter.\n+The syntax allows the use of patterns like `${context:key|context_fallback:key_fallback|...|default}` in an expression.\n \n-Each expressions can contain multiple references to meta-data which will be replaced with the according value during evaluation.\n-Placeholders starts with `${` and ends with `}` containing a reference to a context-key-pair optionally allowing to define multiple fallback context-key-pairs and and optional trailing default value.\n-Context and key are separated by a `:`.\n+Each expression can contain multiple references to metadata that will be replaced with the corresponding value during evaluation.\n+Placeholders start with `${` and end with `}` containing a reference to a context-key pair. \n+You may choose to define multiple fallback context-key pairs and and an optional trailing default value.\n+Separate context and key by a `:`.\n+Use a `|` to separate optional fall back context-key pairs and default value.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e16f5bc571bb576c3183582f2d801c94ed8000f"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1Njk3NTU1", "url": "https://github.com/OpenNMS/opennms/pull/3034#pullrequestreview-435697555", "createdAt": "2020-06-23T11:41:38Z", "commit": {"oid": "5e16f5bc571bb576c3183582f2d801c94ed8000f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "541ee1f0a16732532cab2fcd9b2e5db3d2cd954b", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/541ee1f0a16732532cab2fcd9b2e5db3d2cd954b", "committedDate": "2020-06-23T12:54:59Z", "message": "NMS-12735: how to use metadata with thresholding\n\nNMS-12735: how to use metadata with thresholding - updated to address feedback from Dustin."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3609fbe34137c6d54f88f4cc75edbbdf76e840fa", "author": {"user": {"login": "Bonrob2", "name": null}}, "url": "https://github.com/OpenNMS/opennms/commit/3609fbe34137c6d54f88f4cc75edbbdf76e840fa", "committedDate": "2020-06-23T15:50:15Z", "message": "Merge branch 'develop' into NMS-12735"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3675, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}