{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NDQ1Mjky", "number": 3107, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMToyODozNFrOEXcAWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjowODo1MFrOEYWSiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDExNTQ0OnYy", "diffSide": "RIGHT", "path": "opennms-webapp/src/main/java/org/opennms/web/outage/DaoWebOutageRepository.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwMToyODozNFrOG_Op3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNjoyNjowMlrOG_pENQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk1MzU2NA==", "bodyText": "@christianpape I'm not sure from where do we get the perspective location?", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r468953564", "createdAt": "2020-08-12T01:28:34Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp/src/main/java/org/opennms/web/outage/DaoWebOutageRepository.java", "diffHunk": "@@ -195,6 +195,7 @@ private Outage mapOnmsOutageToOutage(OnmsOutage onmsOutage) {\n             outage.serviceName = onmsOutage.getMonitoredService() != null ? onmsOutage.getMonitoredService().getServiceName() : \"\";\n             outage.suppressedBy = onmsOutage.getSuppressedBy();\n             outage.suppressTime = onmsOutage.getSuppressTime();\n+            outage.perspectiveLocation = \"TODO Patrick\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d52328ffc3af84576d8df63d4db0bfc064d232a6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTAzMjIzNg==", "bodyText": "The PR #3073 isn't merged to features/rpwm yet. We are still waiting for the final approval of @indigo423 . You can of course base your branch off jira/NMS-12792.", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r469032236", "createdAt": "2020-08-12T06:27:36Z", "author": {"login": "christianpape"}, "path": "opennms-webapp/src/main/java/org/opennms/web/outage/DaoWebOutageRepository.java", "diffHunk": "@@ -195,6 +195,7 @@ private Outage mapOnmsOutageToOutage(OnmsOutage onmsOutage) {\n             outage.serviceName = onmsOutage.getMonitoredService() != null ? onmsOutage.getMonitoredService().getServiceName() : \"\";\n             outage.suppressedBy = onmsOutage.getSuppressedBy();\n             outage.suppressTime = onmsOutage.getSuppressTime();\n+            outage.perspectiveLocation = \"TODO Patrick\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk1MzU2NA=="}, "originalCommit": {"oid": "d52328ffc3af84576d8df63d4db0bfc064d232a6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTM4NjI5Mw==", "bodyText": "fixed", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r469386293", "createdAt": "2020-08-12T16:26:02Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp/src/main/java/org/opennms/web/outage/DaoWebOutageRepository.java", "diffHunk": "@@ -195,6 +195,7 @@ private Outage mapOnmsOutageToOutage(OnmsOutage onmsOutage) {\n             outage.serviceName = onmsOutage.getMonitoredService() != null ? onmsOutage.getMonitoredService().getServiceName() : \"\";\n             outage.suppressedBy = onmsOutage.getSuppressedBy();\n             outage.suppressTime = onmsOutage.getSuppressTime();\n+            outage.perspectiveLocation = \"TODO Patrick\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODk1MzU2NA=="}, "originalCommit": {"oid": "d52328ffc3af84576d8df63d4db0bfc064d232a6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTY1NzQwOnYy", "diffSide": "RIGHT", "path": "opennms-webapp/src/main/java/org/opennms/web/filter/EqualsFilterNullAware.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjowNDo0NFrOHAom3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo0MzowOFrOHA3PAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyNzM1Nw==", "bodyText": "Use\nCopyright (C) 2002-2020 The OpenNMS Group, Inc.\nOpenNMS(R) is Copyright (C) 1999-2020 The OpenNMS Group, Inc.\nfor new files.", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r470427357", "createdAt": "2020-08-14T06:04:44Z", "author": {"login": "christianpape"}, "path": "opennms-webapp/src/main/java/org/opennms/web/filter/EqualsFilterNullAware.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2007-2014 The OpenNMS Group, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a26141b0015eb92f9fbaaa25a62b6f636cffa6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2NzAwOA==", "bodyText": "\ud83d\udc4d fixed", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r470667008", "createdAt": "2020-08-14T14:43:08Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp/src/main/java/org/opennms/web/filter/EqualsFilterNullAware.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2007-2014 The OpenNMS Group, Inc.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyNzM1Nw=="}, "originalCommit": {"oid": "f8a26141b0015eb92f9fbaaa25a62b6f636cffa6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTY1ODM3OnYy", "diffSide": "RIGHT", "path": "opennms-webapp/src/main/java/org/opennms/web/filter/NotEqualsFilterNullAware.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjowNToxNlrOHAoncA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo0MzoxNFrOHA3PlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyNzUwNA==", "bodyText": "Same here", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r470427504", "createdAt": "2020-08-14T06:05:16Z", "author": {"login": "christianpape"}, "path": "opennms-webapp/src/main/java/org/opennms/web/filter/NotEqualsFilterNullAware.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2007-2014 The OpenNMS Group, Inc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a26141b0015eb92f9fbaaa25a62b6f636cffa6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2NzE1Nw==", "bodyText": "\ud83d\udc4d fixed", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r470667157", "createdAt": "2020-08-14T14:43:14Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp/src/main/java/org/opennms/web/filter/NotEqualsFilterNullAware.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2007-2014 The OpenNMS Group, Inc.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyNzUwNA=="}, "originalCommit": {"oid": "f8a26141b0015eb92f9fbaaa25a62b6f636cffa6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTY2NDc1OnYy", "diffSide": "RIGHT", "path": "opennms-webapp/src/main/java/org/opennms/web/filter/NotEqualsFilterNullAware.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjowODo1MFrOHAorXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzo1MjoyMFrOHA9g7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODUxMA==", "bodyText": "isn'd used anywhere, right?", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r470428510", "createdAt": "2020-08-14T06:08:50Z", "author": {"login": "christianpape"}, "path": "opennms-webapp/src/main/java/org/opennms/web/filter/NotEqualsFilterNullAware.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2007-2014 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.web.filter;\n+\n+import org.hibernate.criterion.Criterion;\n+import org.hibernate.criterion.Restrictions;\n+\n+/** Allows null as a valid value for not equals filtering. */\n+public abstract class NotEqualsFilterNullAware<T> extends OneArgFilter<String> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8a26141b0015eb92f9fbaaa25a62b6f636cffa6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2ODU4Ng==", "bodyText": "it is used by the NegativePerspectiveLocationFilter. I had to introduce this class to handle the NULL perspectives properly.", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r470668586", "createdAt": "2020-08-14T14:44:25Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp/src/main/java/org/opennms/web/filter/NotEqualsFilterNullAware.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2007-2014 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.web.filter;\n+\n+import org.hibernate.criterion.Criterion;\n+import org.hibernate.criterion.Restrictions;\n+\n+/** Allows null as a valid value for not equals filtering. */\n+public abstract class NotEqualsFilterNullAware<T> extends OneArgFilter<String> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODUxMA=="}, "originalCommit": {"oid": "f8a26141b0015eb92f9fbaaa25a62b6f636cffa6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc2Nzc0Mg==", "bodyText": "Sorry, I meant the <T> isn't used at all, right? This can be omitted, right?", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r470767742", "createdAt": "2020-08-14T17:47:54Z", "author": {"login": "christianpape"}, "path": "opennms-webapp/src/main/java/org/opennms/web/filter/NotEqualsFilterNullAware.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2007-2014 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.web.filter;\n+\n+import org.hibernate.criterion.Criterion;\n+import org.hibernate.criterion.Restrictions;\n+\n+/** Allows null as a valid value for not equals filtering. */\n+public abstract class NotEqualsFilterNullAware<T> extends OneArgFilter<String> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODUxMA=="}, "originalCommit": {"oid": "f8a26141b0015eb92f9fbaaa25a62b6f636cffa6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc2OTkwMQ==", "bodyText": "true. Will remove...", "url": "https://github.com/OpenNMS/opennms/pull/3107#discussion_r470769901", "createdAt": "2020-08-14T17:52:20Z", "author": {"login": "patrick-schweizer"}, "path": "opennms-webapp/src/main/java/org/opennms/web/filter/NotEqualsFilterNullAware.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*******************************************************************************\n+ * This file is part of OpenNMS(R).\n+ *\n+ * Copyright (C) 2007-2014 The OpenNMS Group, Inc.\n+ * OpenNMS(R) is Copyright (C) 1999-2014 The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is a registered trademark of The OpenNMS Group, Inc.\n+ *\n+ * OpenNMS(R) is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU Affero General Public License as published\n+ * by the Free Software Foundation, either version 3 of the License,\n+ * or (at your option) any later version.\n+ *\n+ * OpenNMS(R) is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * GNU Affero General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Affero General Public License\n+ * along with OpenNMS(R).  If not, see:\n+ *      http://www.gnu.org/licenses/\n+ *\n+ * For more information contact:\n+ *     OpenNMS(R) Licensing <license@opennms.org>\n+ *     http://www.opennms.org/\n+ *     http://www.opennms.com/\n+ *******************************************************************************/\n+\n+package org.opennms.web.filter;\n+\n+import org.hibernate.criterion.Criterion;\n+import org.hibernate.criterion.Restrictions;\n+\n+/** Allows null as a valid value for not equals filtering. */\n+public abstract class NotEqualsFilterNullAware<T> extends OneArgFilter<String> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODUxMA=="}, "originalCommit": {"oid": "f8a26141b0015eb92f9fbaaa25a62b6f636cffa6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3069, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}