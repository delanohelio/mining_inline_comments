{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NjE0MTEy", "number": 3180, "title": "NMS-12948: SSLCertMonitor should include more details about the expir(ing|ed) certificate in reason codes", "bodyText": "All Contributors\n\n Have you read and followed our Contribution Guidelines?\n Have you made an issue in the OpenNMS issue tracker?If so, you should:\n\nupdate the title of this PR to be of the format: ${JIRA-ISSUE-NUMBER}: subject of pull request\nupdate the JIRA link at the bottom of this comment to refer to the real issue number\nprefix your commit messages with the issue number, if possible\n\n\n Have you made a comment in that issue which points back to this PR?\n Have you updated the JIRA link at the bottom of this comment to link to your issue?\n If this is a new or updated feature, is there documentation for the new behavior?\n If this is new code, are there unit and/or integration tests?\n If this PR targets a foundation-* branch, does it avoid changing files in $OPENNMS_HOME/etc/?\n\nPull Request Process\nOne or more reviewers should be assigned to each PR.\nIf you know that a particular person is subject matter expert in the area your PR affects, feel free to assign one or more reviewers when you create this PR, otherwise reviewers will be assigned for you.\nIf you have made additions or changes to the documentation, or if you need documentation for these code changes, please make sure a technical writer has looked it over.\nOnce the reviewer(s) accept the PR and the branch passes continuous integration, the PR is eligible for merge.\nAt that time, if you have commit access (are an OpenNMS Group employee or a member of the Order of the Green Polo) you are welcome to merge the PR.\nOtherwise, a reviewer can merge it for you.\nThanks for taking time to contribute!\nExternal References\n\nJIRA (Issue Tracker): http://issues.opennms.org/browse/NMS-12948", "createdAt": "2020-10-08T02:22:01Z", "url": "https://github.com/OpenNMS/opennms/pull/3180", "merged": true, "mergeCommit": {"oid": "ec3ae2dabc40e2353edb55b606c92a659098fb4c"}, "closed": true, "closedAt": "2020-10-29T14:50:53Z", "author": {"login": "dschlenk"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQYA2AAH2gAyNDk5NjE0MTEyOjMwNTRlZmExYzIxOTM2ZmMyZjU0YmRjMDU4ZjNjYTcyNDYwMzU5NDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWY9kAAFqTUxNzA3OTAwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946", "author": {"user": {"login": "dschlenk", "name": "David Schlenk"}}, "url": "https://github.com/OpenNMS/opennms/commit/3054efa1c21936fc2f54bdc058f3ca7246035946", "committedDate": "2020-10-08T02:18:40Z", "message": "NMS-12948"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNjE3NjE2", "url": "https://github.com/OpenNMS/opennms/pull/3180#pullrequestreview-510617616", "createdAt": "2020-10-16T16:18:26Z", "commit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjoxODoyN1rOHjHSmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjoyMzowMVrOHjHdIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MTY1Ng==", "bodyText": "Can replace with LOG", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506581656", "createdAt": "2020-10-16T16:18:27Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -265,6 +288,12 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 String reason = \"IOException while polling address: \" + ipAddr;\n                 LOG.debug(reason, e);\n                 serviceStatus = PollStatus.unavailable(reason);\n+            } catch (CertificateEncodingException e) {\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4MTg1NQ==", "bodyText": "can omit e.printStackTrace()", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506581855", "createdAt": "2020-10-16T16:18:50Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -265,6 +288,12 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 String reason = \"IOException while polling address: \" + ipAddr;\n                 LOG.debug(reason, e);\n                 serviceStatus = PollStatus.unavailable(reason);\n+            } catch (CertificateEncodingException e) {\n+                e.printStackTrace();\n+            } catch (NoSuchAlgorithmException e) {\n+                String reason = \"NoSuchAlgorithException (SHA-1) while polling address: \" + ipAddr;\n+                LOG.debug(reason, e);\n+                e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU4NDM1NA==", "bodyText": "Are all of these guaranteed to be not null ?", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r506584354", "createdAt": "2020-10-16T16:23:01Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,46 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = certx.getSubjectDN().getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3054efa1c21936fc2f54bdc058f3ca7246035946"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f", "author": {"user": {"login": "dschlenk", "name": "David Schlenk"}}, "url": "https://github.com/OpenNMS/opennms/commit/01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f", "committedDate": "2020-10-16T18:03:04Z", "message": "fixes from review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MjA4MTEx", "url": "https://github.com/OpenNMS/opennms/pull/3180#pullrequestreview-514208111", "createdAt": "2020-10-21T21:42:38Z", "commit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMTo0MjozOFrOHmHHtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoyMzo0OVrOHocyow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDU5Nw==", "bodyText": "not assigned to subject", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r509724597", "createdAt": "2020-10-21T21:42:38Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTcyNDgwNA==", "bodyText": "same here.", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r509724804", "createdAt": "2020-10-21T21:42:54Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();\n+                        }\n+                        String issuer = \"\";\n+                        if (certx.getIssuerDN() != null && certx.getIssuerDN().getName() != null) {\n+                            certx.getIssuerDN().getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NjgwMw==", "bodyText": "Guess we should also check these elements to be non-null, certx.getNotBefore().toString() ,  certx.getNotAfter()", "url": "https://github.com/OpenNMS/opennms/pull/3180#discussion_r512176803", "createdAt": "2020-10-26T18:23:49Z", "author": {"login": "cgorantla"}, "path": "features/poller/monitors/core/src/main/java/org/opennms/netmgt/poller/monitors/SSLCertMonitor.java", "diffHunk": "@@ -222,27 +226,52 @@ public PollStatus poll(final MonitoredService svc, final Map<String, Object> par\n                 for (int i = 0; i < certs.length && !serviceStatus.isAvailable(); i++) {\n                     if (certs[i] instanceof X509Certificate) {\n                         X509Certificate certx = (X509Certificate) certs[i];\n+                        String subject = \"\";\n+                        if (certx.getSubjectDN() != null && certx.getSubjectDN().getName() != null) {\n+                            certx.getSubjectDN().getName();\n+                        }\n+                        String issuer = \"\";\n+                        if (certx.getIssuerDN() != null && certx.getIssuerDN().getName() != null) {\n+                            certx.getIssuerDN().getName();\n+                        }\n+                        String fprint = DatatypeConverter.printHexBinary(MessageDigest.getInstance(\"SHA-1\").digest(certx.getEncoded())).toLowerCase();\n+                        StringBuilder reasonBuilder = new StringBuilder();\n                         LOG.debug(\"Checking validity against dates: [current: {}, valid: {}], NotBefore: {}, NotAfter: {}\", calCurrent.getTime(), calValid.getTime(), certx.getNotBefore(), certx.getNotAfter());\n                         calBefore.setTime(certx.getNotBefore());\n                         calAfter.setTime(certx.getNotAfter());\n                         if (calCurrent.before(calBefore)) {\n-                            LOG.debug(\"Certificate is invalid, current time is before start time\");\n-                            serviceStatus = PollStatus.unavailable(\"Certificate is invalid, current time is before start time\");\n+                            reasonBuilder.append(\"Certificate with fingerprint '\").append(fprint).append(\"' issued to \")\n+                                    .append(subject).append(\" by \").append(issuer)\n+                                    .append(\" is not yet valid. Current time is before start time. It is valid from \")\n+                                    .append(certx.getNotBefore().toString()).append(\" until \").append(certx.getNotAfter()).append(\".\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01e4fd88cab6fbb0c3ba4660cd42b8ad9c68fd2f"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d9c0b456414b6d8c21ae1fdaf913d9ba02762c5", "author": {"user": {"login": "dschlenk", "name": "David Schlenk"}}, "url": "https://github.com/OpenNMS/opennms/commit/2d9c0b456414b6d8c21ae1fdaf913d9ba02762c5", "committedDate": "2020-10-26T18:38:57Z", "message": "actually populate issuer / subject; make unavailable if notBefore and/or\nnotAfter are null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDc5MDAy", "url": "https://github.com/OpenNMS/opennms/pull/3180#pullrequestreview-517079002", "createdAt": "2020-10-26T18:48:32Z", "commit": {"oid": "2d9c0b456414b6d8c21ae1fdaf913d9ba02762c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3915, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}