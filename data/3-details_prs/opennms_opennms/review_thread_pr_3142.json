{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTM2MTE4", "number": 3142, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyNzo1NlrOEf8m7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyNzo1NlrOEf8m7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTM0MzE5OnYy", "diffSide": "RIGHT", "path": "features/perspectivepoller/src/test/java/org/opennms/netmgt/perspectivepoller/PerspectivePollerdIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyNzo1NlrOHMiQwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMTo0MzoyM1rOHMiwPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNjMwNA==", "bodyText": "Just to be sure to cover all cases - can you add additional tests for:\n\napplication with services and without locations\napplication with locations and without services", "url": "https://github.com/OpenNMS/opennms/pull/3142#discussion_r482906304", "createdAt": "2020-09-03T11:27:56Z", "author": {"login": "christianpape"}, "path": "features/perspectivepoller/src/test/java/org/opennms/netmgt/perspectivepoller/PerspectivePollerdIT.java", "diffHunk": "@@ -598,6 +615,46 @@ public void testPerspectivePollerThresholding() throws Exception {\n         this.eventIpcManager.getEventAnticipator().verifyAnticipated();\n     }\n \n+    @Test\n+    public void testStartWithEmptyApp() throws Exception {\n+        this.databasePopulator.getTransactionTemplate().execute(tx -> {\n+            final OnmsApplication app = new OnmsApplication();\n+            app.setName(\"App Empty\");\n+            this.databasePopulator.getApplicationDao().save(app);\n+\n+            return null;\n+        });\n+\n+        this.perspectivePollerd.start();\n+    }\n+\n+    @Test\n+    public void testStartWithDuplicatedService() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "869fdf17fa2ac7c45530133b5ca979d99b305fe6"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkxMDIzOQ==", "bodyText": "Good point. Done.", "url": "https://github.com/OpenNMS/opennms/pull/3142#discussion_r482910239", "createdAt": "2020-09-03T11:35:34Z", "author": {"login": "fooker"}, "path": "features/perspectivepoller/src/test/java/org/opennms/netmgt/perspectivepoller/PerspectivePollerdIT.java", "diffHunk": "@@ -598,6 +615,46 @@ public void testPerspectivePollerThresholding() throws Exception {\n         this.eventIpcManager.getEventAnticipator().verifyAnticipated();\n     }\n \n+    @Test\n+    public void testStartWithEmptyApp() throws Exception {\n+        this.databasePopulator.getTransactionTemplate().execute(tx -> {\n+            final OnmsApplication app = new OnmsApplication();\n+            app.setName(\"App Empty\");\n+            this.databasePopulator.getApplicationDao().save(app);\n+\n+            return null;\n+        });\n+\n+        this.perspectivePollerd.start();\n+    }\n+\n+    @Test\n+    public void testStartWithDuplicatedService() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNjMwNA=="}, "originalCommit": {"oid": "869fdf17fa2ac7c45530133b5ca979d99b305fe6"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkxNDM2Nw==", "bodyText": "Perfect.", "url": "https://github.com/OpenNMS/opennms/pull/3142#discussion_r482914367", "createdAt": "2020-09-03T11:43:23Z", "author": {"login": "christianpape"}, "path": "features/perspectivepoller/src/test/java/org/opennms/netmgt/perspectivepoller/PerspectivePollerdIT.java", "diffHunk": "@@ -598,6 +615,46 @@ public void testPerspectivePollerThresholding() throws Exception {\n         this.eventIpcManager.getEventAnticipator().verifyAnticipated();\n     }\n \n+    @Test\n+    public void testStartWithEmptyApp() throws Exception {\n+        this.databasePopulator.getTransactionTemplate().execute(tx -> {\n+            final OnmsApplication app = new OnmsApplication();\n+            app.setName(\"App Empty\");\n+            this.databasePopulator.getApplicationDao().save(app);\n+\n+            return null;\n+        });\n+\n+        this.perspectivePollerd.start();\n+    }\n+\n+    @Test\n+    public void testStartWithDuplicatedService() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNjMwNA=="}, "originalCommit": {"oid": "869fdf17fa2ac7c45530133b5ca979d99b305fe6"}, "originalPosition": 146}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3117, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}