{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0MjQ2MzA4", "number": 2910, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzo1NTowNVrODlblSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzo1NTowNVrODlblSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTc1ODE2OnYy", "diffSide": "LEFT", "path": "features/telemetry/listeners/src/main/java/org/opennms/netmgt/telemetry/listeners/factory/TcpListenerFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzo1NTowNVrOFyUXkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToxMzoyN1rOFyXegw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMwNjgzMg==", "bodyText": "I believe this was done within the factory itself rather that outside because of reflection issues with the OSGi proxy classes.\nDoes this work differently now?", "url": "https://github.com/OpenNMS/opennms/pull/2910#discussion_r388306832", "createdAt": "2020-03-05T13:55:05Z", "author": {"login": "j-white"}, "path": "features/telemetry/listeners/src/main/java/org/opennms/netmgt/telemetry/listeners/factory/TcpListenerFactory.java", "diffHunk": "@@ -68,9 +66,6 @@ public Listener createBean(ListenerDefinition listenerDefinition) {\n         if (parser.size() != listenerDefinition.getParsers().size()) {\n             throw new IllegalArgumentException(\"Each parser must be of type TcpParser but was not.\");\n         }\n-        final TcpListener listener = new TcpListener(listenerDefinition.getName(), parser.iterator().next(), telemetryRegistry.getMetricRegistry());\n-        final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(listener);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b939e067c963615ea678c46580f4644198b0e2b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1NTk4Mg==", "bodyText": "I don't know if this has been the case before. But I verified that it works on standalone OpenNMS and on Minion.\nThe instances returned from the factories are not proxied (whereas the factories itself are). Therefore the BeanWrapper should work just fine.", "url": "https://github.com/OpenNMS/opennms/pull/2910#discussion_r388355982", "createdAt": "2020-03-05T15:10:58Z", "author": {"login": "fooker"}, "path": "features/telemetry/listeners/src/main/java/org/opennms/netmgt/telemetry/listeners/factory/TcpListenerFactory.java", "diffHunk": "@@ -68,9 +66,6 @@ public Listener createBean(ListenerDefinition listenerDefinition) {\n         if (parser.size() != listenerDefinition.getParsers().size()) {\n             throw new IllegalArgumentException(\"Each parser must be of type TcpParser but was not.\");\n         }\n-        final TcpListener listener = new TcpListener(listenerDefinition.getName(), parser.iterator().next(), telemetryRegistry.getMetricRegistry());\n-        final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(listener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMwNjgzMg=="}, "originalCommit": {"oid": "b939e067c963615ea678c46580f4644198b0e2b4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1Nzc2Mw==", "bodyText": "Sounds good. Thanks for the confirmation.", "url": "https://github.com/OpenNMS/opennms/pull/2910#discussion_r388357763", "createdAt": "2020-03-05T15:13:27Z", "author": {"login": "j-white"}, "path": "features/telemetry/listeners/src/main/java/org/opennms/netmgt/telemetry/listeners/factory/TcpListenerFactory.java", "diffHunk": "@@ -68,9 +66,6 @@ public Listener createBean(ListenerDefinition listenerDefinition) {\n         if (parser.size() != listenerDefinition.getParsers().size()) {\n             throw new IllegalArgumentException(\"Each parser must be of type TcpParser but was not.\");\n         }\n-        final TcpListener listener = new TcpListener(listenerDefinition.getName(), parser.iterator().next(), telemetryRegistry.getMetricRegistry());\n-        final BeanWrapper wrapper = PropertyAccessorFactory.forBeanPropertyAccess(listener);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODMwNjgzMg=="}, "originalCommit": {"oid": "b939e067c963615ea678c46580f4644198b0e2b4"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 792, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}