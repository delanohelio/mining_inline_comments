{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNzk3MjY4", "number": 2510, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDo1Nzo0MlrOEIZ5MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDo1Nzo0MlrOEIZ5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjQ4MzA0OnYy", "diffSide": "RIGHT", "path": "android/capacitor/src/main/java/com/getcapacitor/MessageHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNDo1Nzo0MlrOGoWGxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNjo1MDozN1rOGoau-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk1ODQwNg==", "bodyText": "Did you mean to use the new isJavaScriptError bool here?", "url": "https://github.com/ionic-team/capacitor/pull/2510#discussion_r444958406", "createdAt": "2020-06-24T14:57:42Z", "author": {"login": "carlpoole"}, "path": "android/capacitor/src/main/java/com/getcapacitor/MessageHandler.java", "diffHunk": "@@ -35,40 +35,36 @@ public void postMessage(String jsonStr) {\n \n       String type = postData.getString(\"type\");\n \n-      if (type != null && type.equals(\"cordova\")) {\n-        String callbackId = postData.getString(\"callbackId\");\n+      boolean typeIsNotNull = type != null;\n+      boolean isCordovaPlugin = typeIsNotNull && type.equals(\"cordova\");\n+      boolean isJavaScriptError = typeIsNotNull && type.equals(\"js.error\");\n+\n+      String callbackId = postData.getString(\"callbackId\");\n+\n+      if (isCordovaPlugin) {\n         String service = postData.getString(\"service\");\n         String action = postData.getString(\"action\");\n         String actionArgs = postData.getString(\"actionArgs\");\n-        Logger.verbose(Logger.tags(\"Plugin\"), \"To native (Cordova plugin): callbackId: \" + callbackId + \", service: \" + service +\n-          \", action: \" + action + \", actionArgs: \" + actionArgs);\n+\n+        Logger.verbose(Logger.tags(\"Plugin\"), \"To native (Cordova plugin): callbackId: \" + callbackId + \", service: \" + service + \", action: \" + action + \", actionArgs: \" + actionArgs);\n+\n         this.callCordovaPluginMethod(callbackId, service, action, actionArgs);\n       } else if (type != null && type.equals(\"js.error\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d86fd278400c6e057e9cf31e3f9aca9a7b47a1c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTAzNDIzMg==", "bodyText": "Good spot, fixed!", "url": "https://github.com/ionic-team/capacitor/pull/2510#discussion_r445034232", "createdAt": "2020-06-24T16:50:37Z", "author": {"login": "imjacobclark"}, "path": "android/capacitor/src/main/java/com/getcapacitor/MessageHandler.java", "diffHunk": "@@ -35,40 +35,36 @@ public void postMessage(String jsonStr) {\n \n       String type = postData.getString(\"type\");\n \n-      if (type != null && type.equals(\"cordova\")) {\n-        String callbackId = postData.getString(\"callbackId\");\n+      boolean typeIsNotNull = type != null;\n+      boolean isCordovaPlugin = typeIsNotNull && type.equals(\"cordova\");\n+      boolean isJavaScriptError = typeIsNotNull && type.equals(\"js.error\");\n+\n+      String callbackId = postData.getString(\"callbackId\");\n+\n+      if (isCordovaPlugin) {\n         String service = postData.getString(\"service\");\n         String action = postData.getString(\"action\");\n         String actionArgs = postData.getString(\"actionArgs\");\n-        Logger.verbose(Logger.tags(\"Plugin\"), \"To native (Cordova plugin): callbackId: \" + callbackId + \", service: \" + service +\n-          \", action: \" + action + \", actionArgs: \" + actionArgs);\n+\n+        Logger.verbose(Logger.tags(\"Plugin\"), \"To native (Cordova plugin): callbackId: \" + callbackId + \", service: \" + service + \", action: \" + action + \", actionArgs: \" + actionArgs);\n+\n         this.callCordovaPluginMethod(callbackId, service, action, actionArgs);\n       } else if (type != null && type.equals(\"js.error\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk1ODQwNg=="}, "originalCommit": {"oid": "6d86fd278400c6e057e9cf31e3f9aca9a7b47a1c"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3600, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}