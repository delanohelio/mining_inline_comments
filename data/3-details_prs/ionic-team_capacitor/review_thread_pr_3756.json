{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NDA0OTQz", "number": 3756, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoyNjowM1rOE25TZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoxNDo1NlrOE4Vbew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTk3NDEzOnYy", "diffSide": "RIGHT", "path": "cli/src/declarations.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoyNjowM1rOHv71HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODoyNjowM1rOHv71HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyNTM3Mw==", "bodyText": "this is only set if the preference is set, if not set then it uses the webview default value. According to this, on iOS 10 and newer it's true", "url": "https://github.com/ionic-team/capacitor/pull/3756#discussion_r520025373", "createdAt": "2020-11-09T18:26:03Z", "author": {"login": "jcesarmobile"}, "path": "cli/src/declarations.ts", "diffHunk": "@@ -0,0 +1,341 @@\n+export interface CapacitorConfig {\n+  /**\n+   * The Package ID of your app.\n+   *\n+   * Package IDs (aka Bundle ID in iOS and Application ID in Android) are\n+   * unique identifiers for apps. They must be in reverse domain name notation,\n+   * generally representing a domain name that you or your company owns.\n+   *\n+   * @since 1.0.0\n+   */\n+  appId?: string;\n+\n+  /**\n+   * The human-friendly name of your app.\n+   *\n+   * This should be what you'd see in the App Store, but can be changed after\n+   * within each native platform after it is generated.\n+   *\n+   * @since 1.0.0\n+   */\n+  appName?: string;\n+\n+  /**\n+   * The directory of your compiled web assets.\n+   *\n+   * This directory should contain the final `index.html` of your app.\n+   *\n+   * @since 1.0.0\n+   */\n+  webDir?: string;\n+\n+  /**\n+   * Whether to copy the Capacitor runtime bundle or not.\n+   *\n+   * If your app is using a bundler, this should be `false`. If you added\n+   * `capacitor.js` as a script in your `index.html` file, this should be\n+   * `true`.\n+   *\n+   * @since 1.0.0\n+   * @default false\n+   */\n+  bundledWebRuntime?: boolean;\n+\n+  /**\n+   * Hide or show the native logs for iOS and Android.\n+   *\n+   * @since 2.1.0\n+   * @default false\n+   */\n+  hideLogs?: boolean;\n+\n+  /**\n+   * User agent of Capacitor Web View.\n+   *\n+   * @since 1.4.0\n+   */\n+  overrideUserAgent?: string;\n+\n+  /**\n+   * String to append to the original user agent of Capacitor Web View.\n+   *\n+   * This is disregarded if `overrideUserAgent` is used.\n+   *\n+   * @since 1.4.0\n+   */\n+  appendUserAgent?: string;\n+\n+  /**\n+   * Background color of the Capacitor Web View.\n+   *\n+   * @since 1.1.0\n+   */\n+  backgroundColor?: string;\n+\n+  android?: {\n+    /**\n+     * Specify a custom path to the native Android project.\n+     *\n+     * @since 3.0.0\n+     * @default android\n+     */\n+    path?: string;\n+\n+    /**\n+     * User agent of Capacitor Web View on Android.\n+     *\n+     * Overrides global `overrideUserAgent` option.\n+     *\n+     * @since 1.4.0\n+     */\n+    overrideUserAgent?: string;\n+\n+    /**\n+     * String to append to the original user agent of Capacitor Web View for Android.\n+     *\n+     * Overrides global `appendUserAgent` option.\n+     *\n+     * This is disregarded if `overrideUserAgent` is used.\n+     *\n+     * @since 1.4.0\n+     */\n+    appendUserAgent?: string;\n+\n+    /**\n+     * Background color of the Capacitor Web View for Android.\n+     *\n+     * Overrides global `backgroundColor` option.\n+     *\n+     * @since 1.1.0\n+     */\n+    backgroundColor?: string;\n+\n+    /**\n+     * Enable mixed content in the Capacitor Web View for Android.\n+     *\n+     * [Mixed\n+     * content](https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content)\n+     * is disabled by default for security. During development, you may need to\n+     * enable it to allow the Web View to load files from different schemes.\n+     *\n+     * **This is not intended for use in production.**\n+     *\n+     * @since 1.0.0\n+     * @default false\n+     */\n+    allowMixedContent?: boolean;\n+\n+    /**\n+     * This enables a simpler keyboard which may have some limitations.\n+     *\n+     * This will capture JS keys using an alternative\n+     * [`InputConnection`](https://developer.android.com/reference/android/view/inputmethod/InputConnection).\n+     *\n+     * @since 1.0.0\n+     * @default false\n+     */\n+    captureInput?: boolean;\n+\n+    /**\n+     * Always enable debuggable web content.\n+     *\n+     * This is automatically enabled during development.\n+     *\n+     * @since 1.0.0\n+     * @default false\n+     */\n+    webContentsDebuggingEnabled?: boolean;\n+\n+    /**\n+     * Hide or show the native logs for Android.\n+     *\n+     * Overrides global `hideLogs` option.\n+     *\n+     * @since 2.1.0\n+     * @default false\n+     */\n+    hideLogs?: boolean;\n+  };\n+\n+  ios?: {\n+    /**\n+     * Specify a custom path to the native iOS project.\n+     *\n+     * @since 3.0.0\n+     * @default ios\n+     */\n+    path?: string;\n+\n+    /**\n+     * User agent of Capacitor Web View on iOS.\n+     *\n+     * Overrides global `overrideUserAgent` option.\n+     *\n+     * @since 1.4.0\n+     */\n+    overrideUserAgent?: string;\n+\n+    /**\n+     * String to append to the original user agent of Capacitor Web View for iOS.\n+     *\n+     * Overrides global `appendUserAgent` option.\n+     *\n+     * This is disregarded if `overrideUserAgent` is used.\n+     *\n+     * @since 1.4.0\n+     */\n+    appendUserAgent?: string;\n+\n+    /**\n+     * Background color of the Capacitor Web View for iOS.\n+     *\n+     * Overrides global `backgroundColor` option.\n+     *\n+     * @since 1.1.0\n+     */\n+    backgroundColor?: string;\n+\n+    /**\n+     * Configure the scroll view's content inset adjustment behavior.\n+     *\n+     * This will set the\n+     * [`contentInsetAdjustmentBehavior`](https://developer.apple.com/documentation/uikit/uiscrollview/2902261-contentinsetadjustmentbehavior)\n+     * property on the Web View's\n+     * [`UIScrollView`](https://developer.apple.com/documentation/uikit/uiscrollview).\n+     *\n+     * @since 2.0.0\n+     * @default never\n+     */\n+    contentInset?: 'automatic' | 'scrollableAxes' | 'never' | 'always';\n+\n+    /**\n+     * Configure the Swift version to be used in Cordova plugins.\n+     *\n+     * @since 1.0.0\n+     * @default 5.1\n+     */\n+    cordovaSwiftVersion?: string;\n+\n+    /**\n+     * Configure the minimum iOS version supported.\n+     *\n+     * @since 1.0.0\n+     * @default 11.0\n+     */\n+    minVersion?: string;\n+\n+    /**\n+     * Configure custom linker flags for compiling Cordova plugins.\n+     *\n+     * @since 1.0.0\n+     * @default []\n+     */\n+    cordovaLinkerFlags?: string[];\n+\n+    /**\n+     * Allow destination previews when pressing on links.\n+     *\n+     * @since 2.0.0\n+     * @default false\n+     */\n+    allowsLinkPreview?: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "859ed8a9b97f126c399f66952a06722fed134d15"}, "originalPosition": 241}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA1OTY5OnYy", "diffSide": "RIGHT", "path": "cli/src/declarations.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0OToxNFrOHv8pLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo0OToxNFrOHv8pLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzODcwMA==", "bodyText": "Since there is already a common confusion about the android package name and the application ID, I think we should not use package ID here, better use App ID.", "url": "https://github.com/ionic-team/capacitor/pull/3756#discussion_r520038700", "createdAt": "2020-11-09T18:49:14Z", "author": {"login": "jcesarmobile"}, "path": "cli/src/declarations.ts", "diffHunk": "@@ -0,0 +1,341 @@\n+export interface CapacitorConfig {\n+  /**\n+   * The Package ID of your app.\n+   *\n+   * Package IDs (aka Bundle ID in iOS and Application ID in Android) are", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "859ed8a9b97f126c399f66952a06722fed134d15"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA3NjQ2OnYy", "diffSide": "RIGHT", "path": "cli/src/declarations.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1MzoyNlrOHv8zOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1MzoyNlrOHv8zOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MTI3Mg==", "bodyText": "More like the opposite, if you set it to true, then you have to add capacitor.js to the index.html.\nShould be reworded to something like\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * If your app is using a bundler, this should be `false`. If you added\n          \n          \n            \n               * `capacitor.js` as a script in your `index.html` file, this should be\n          \n          \n            \n               * `true`.\n          \n          \n            \n               * If your app is using a bundler, this should be `false`. If not using a bundler\n          \n          \n            \n               * set this to true, then Capacitor will create a `capacitor.js` file that you'll need to add as \n          \n          \n            \n               * a script in your `index.html` file.", "url": "https://github.com/ionic-team/capacitor/pull/3756#discussion_r520041272", "createdAt": "2020-11-09T18:53:26Z", "author": {"login": "jcesarmobile"}, "path": "cli/src/declarations.ts", "diffHunk": "@@ -0,0 +1,341 @@\n+export interface CapacitorConfig {\n+  /**\n+   * The Package ID of your app.\n+   *\n+   * Package IDs (aka Bundle ID in iOS and Application ID in Android) are\n+   * unique identifiers for apps. They must be in reverse domain name notation,\n+   * generally representing a domain name that you or your company owns.\n+   *\n+   * @since 1.0.0\n+   */\n+  appId?: string;\n+\n+  /**\n+   * The human-friendly name of your app.\n+   *\n+   * This should be what you'd see in the App Store, but can be changed after\n+   * within each native platform after it is generated.\n+   *\n+   * @since 1.0.0\n+   */\n+  appName?: string;\n+\n+  /**\n+   * The directory of your compiled web assets.\n+   *\n+   * This directory should contain the final `index.html` of your app.\n+   *\n+   * @since 1.0.0\n+   */\n+  webDir?: string;\n+\n+  /**\n+   * Whether to copy the Capacitor runtime bundle or not.\n+   *\n+   * If your app is using a bundler, this should be `false`. If you added\n+   * `capacitor.js` as a script in your `index.html` file, this should be\n+   * `true`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "859ed8a9b97f126c399f66952a06722fed134d15"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA5NjkwOnYy", "diffSide": "RIGHT", "path": "cli/src/tasks/init.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1ODozN1rOHv8_uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1ODozN1rOHv8_uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0NDQ3NQ==", "bodyText": "since init doesn't work if a .ts or .js file is present, I don't think this needs to be changed", "url": "https://github.com/ionic-team/capacitor/pull/3756#discussion_r520044475", "createdAt": "2020-11-09T18:58:37Z", "author": {"login": "jcesarmobile"}, "path": "cli/src/tasks/init.ts", "diffHunk": "@@ -38,7 +48,7 @@ export async function initCommand(\n     const cordova = await getCordovaPreferences(config);\n \n     await runTask(\n-      `Creating ${c.strong('capacitor.config.json')} in ${c.input(\n+      `Creating ${c.strong(config.app.extConfigName)} in ${c.input(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b9138cd4d634d4a3a1ee79421b1dc97cab4245"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA5ODYzOnYy", "diffSide": "RIGHT", "path": "cli/src/tasks/init.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1OTowMFrOHv9Avg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1OTowMFrOHv9Avg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0NDczNA==", "bodyText": "same, init only works with the .json file", "url": "https://github.com/ionic-team/capacitor/pull/3756#discussion_r520044734", "createdAt": "2020-11-09T18:59:00Z", "author": {"login": "jcesarmobile"}, "path": "cli/src/tasks/init.ts", "diffHunk": "@@ -62,8 +72,8 @@ export async function initCommand(\n   }\n }\n \n-function printNextSteps() {\n-  logSuccess(`${c.strong('capacitor.config.json')} created!`);\n+function printNextSteps(config: Config) {\n+  logSuccess(`${c.strong(config.app.extConfigName)} created!`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b9138cd4d634d4a3a1ee79421b1dc97cab4245"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDEwNTUyOnYy", "diffSide": "RIGHT", "path": "cli/src/cordova.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTowMDozNlrOHv9E6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTowMDozNlrOHv9E6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0NTgwMw==", "bodyText": "init only works on .json files, don't need to change this", "url": "https://github.com/ionic-team/capacitor/pull/3756#discussion_r520045803", "createdAt": "2020-11-09T19:00:36Z", "author": {"login": "jcesarmobile"}, "path": "cli/src/cordova.ts", "diffHunk": "@@ -527,7 +527,7 @@ export async function getCordovaPreferences(config: Config): Promise<any> {\n     const answers = await logPrompt(\n       `${c.strong(\n         `Cordova preferences can be automatically ported to ${c.strong(\n-          'capacitor.config.json',\n+          config.app.extConfigName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b9138cd4d634d4a3a1ee79421b1dc97cab4245"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTA2ODExOnYy", "diffSide": "RIGHT", "path": "cli/src/config.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMDoxNDo1NlrOHyMZAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMTo1MjowMlrOHyWbxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM5Mzg1Ng==", "bodyText": "I think it'd be quite useful to optionally support exporting a () => Promise<ExternalConfig> instead of just ExternalConfig.\nWould you accept a pull request?", "url": "https://github.com/ionic-team/capacitor/pull/3756#discussion_r522393856", "createdAt": "2020-11-12T20:14:56Z", "author": {"login": "buschtoens"}, "path": "cli/src/config.ts", "diffHunk": "@@ -57,6 +54,86 @@ export async function loadConfig(): Promise<Config> {\n   return config;\n }\n \n+type ExtConfigPairs = Pick<\n+  AppConfig,\n+  'extConfigType' | 'extConfigName' | 'extConfigFilePath' | 'extConfig'\n+>;\n+\n+async function loadExtConfigTS(\n+  rootDir: string,\n+  extConfigName: string,\n+  extConfigFilePath: string,\n+): Promise<ExtConfigPairs> {\n+  try {\n+    const tsPath = resolveNode(rootDir, 'typescript');\n+\n+    if (!tsPath) {\n+      logFatal(\n+        'Could not find installation of TypeScript.\\n' +\n+          `To use ${c.strong(\n+            extConfigName,\n+          )} files, you must install TypeScript in your project, e.g. w/ ${c.input(\n+            'npm install -D typescript',\n+          )}`,\n+      );\n+    }\n+\n+    const ts = require(tsPath); // eslint-disable-line @typescript-eslint/no-var-requires\n+\n+    return {\n+      extConfigType: 'ts',\n+      extConfigName,\n+      extConfigFilePath: extConfigFilePath,\n+      extConfig: requireTS(ts, extConfigFilePath) as any,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2473a48bcc0744f2243e9e038b3c6f7bac06b037"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU1ODQwNA==", "bodyText": "Yes, I was thinking about this as well. I would be happy to look at a PR that adds that functionality.", "url": "https://github.com/ionic-team/capacitor/pull/3756#discussion_r522558404", "createdAt": "2020-11-13T01:52:02Z", "author": {"login": "imhoffd"}, "path": "cli/src/config.ts", "diffHunk": "@@ -57,6 +54,86 @@ export async function loadConfig(): Promise<Config> {\n   return config;\n }\n \n+type ExtConfigPairs = Pick<\n+  AppConfig,\n+  'extConfigType' | 'extConfigName' | 'extConfigFilePath' | 'extConfig'\n+>;\n+\n+async function loadExtConfigTS(\n+  rootDir: string,\n+  extConfigName: string,\n+  extConfigFilePath: string,\n+): Promise<ExtConfigPairs> {\n+  try {\n+    const tsPath = resolveNode(rootDir, 'typescript');\n+\n+    if (!tsPath) {\n+      logFatal(\n+        'Could not find installation of TypeScript.\\n' +\n+          `To use ${c.strong(\n+            extConfigName,\n+          )} files, you must install TypeScript in your project, e.g. w/ ${c.input(\n+            'npm install -D typescript',\n+          )}`,\n+      );\n+    }\n+\n+    const ts = require(tsPath); // eslint-disable-line @typescript-eslint/no-var-requires\n+\n+    return {\n+      extConfigType: 'ts',\n+      extConfigName,\n+      extConfigFilePath: extConfigFilePath,\n+      extConfig: requireTS(ts, extConfigFilePath) as any,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM5Mzg1Ng=="}, "originalCommit": {"oid": "2473a48bcc0744f2243e9e038b3c6f7bac06b037"}, "originalPosition": 104}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3437, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}