{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTI2Njc2", "number": 3091, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoyMjozMlrOEGGFPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzoyNzoxOFrOEJwioA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODI2NTU4OnYy", "diffSide": "RIGHT", "path": "cli/src/tasks/copy.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoyMjozMlrOGkrxHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoyMjozMlrOGkrxHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExOTAwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run copy`);\n          \n          \n            \n                  const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run capacitor:copy`);", "url": "https://github.com/ionic-team/capacitor/pull/3091#discussion_r441119007", "createdAt": "2020-06-16T20:22:32Z", "author": {"login": "imhoffd"}, "path": "cli/src/tasks/copy.ts", "diffHunk": "@@ -10,15 +10,25 @@ import { getCordovaPlugins, handleCordovaPluginsJS, writeCordovaAndroidManifest\n import chalk from 'chalk';\n \n export async function copyCommand(config: Config, selectedPlatformName: string) {\n-  const platforms = config.selectPlatforms(selectedPlatformName);\n-  if (platforms.length === 0) {\n-    logInfo(`There are no platforms to copy yet. Create one with \\`capacitor create\\`.`);\n-    return;\n-  }\n-  try {\n-    await allSerial(platforms.map(platformName => () => copy(config, platformName)));\n-  } catch (e) {\n-    logError(e);\n+  if (selectedPlatformName && !config.isValidPlatform(selectedPlatformName)) {\n+    const platformFolder = resolveNode(config, selectedPlatformName);\n+    if (platformFolder) {\n+      const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run copy`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e5c54321d6f68deabb0481627c59d7469ac672"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODI2NjIxOnYy", "diffSide": "RIGHT", "path": "cli/src/tasks/sync.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoyMjo0NlrOGkrxiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoyMjo0NlrOGkrxiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExOTExMw==", "bodyText": "We should probably not do this. sync = copy + update, so we should just run npm run capacitor:copy followed by npm run capacitor:sync. What do you think?", "url": "https://github.com/ionic-team/capacitor/pull/3091#discussion_r441119113", "createdAt": "2020-06-16T20:22:46Z", "author": {"login": "imhoffd"}, "path": "cli/src/tasks/sync.ts", "diffHunk": "@@ -1,28 +1,38 @@\n import { Config } from '../config';\n import { copy } from './copy';\n import { update, updateChecks } from './update';\n-import { check, checkPackage, checkWebDir, log, logError, logFatal, logInfo } from '../common';\n+import { check, checkPackage, checkWebDir, hasYarn, log, logError, logFatal, logInfo, resolveNode, runCommand } from '../common';\n \n import { allSerial } from '../util/promise';\n \n /**\n  * Sync is a copy and an update in one.\n  */\n-export async function syncCommand(config: Config, selectedPlatform: string, deployment: boolean) {\n-  const then = +new Date;\n-  const platforms = config.selectPlatforms(selectedPlatform);\n-  if (platforms.length === 0) {\n-    logInfo(`There are no platforms to sync yet. Create one with \"capacitor create\".`);\n-    return;\n-  }\n-  try {\n-    await check(config, [checkPackage, checkWebDir, ...updateChecks(config, platforms)]);\n-    await allSerial(platforms.map(platformName => () => sync(config, platformName, deployment)));\n-    const now = +new Date;\n-    const diff = (now - then) / 1000;\n-    log(`Sync finished in ${diff}s`);\n-  } catch (e) \u00a0{\n-    logFatal(e);\n+export async function syncCommand(config: Config, selectedPlatformName: string, deployment: boolean) {\n+  if (selectedPlatformName && !config.isValidPlatform(selectedPlatformName)) {\n+    const platformFolder = resolveNode(config, selectedPlatformName);\n+    if (platformFolder) {\n+      const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run sync`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e5c54321d6f68deabb0481627c59d7469ac672"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODI2OTAxOnYy", "diffSide": "RIGHT", "path": "cli/src/tasks/update.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoyMzo0OVrOGkrzhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoyMzo0OVrOGkrzhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExOTYyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run update`);\n          \n          \n            \n                  const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run capacitor:update`);", "url": "https://github.com/ionic-team/capacitor/pull/3091#discussion_r441119621", "createdAt": "2020-06-16T20:23:49Z", "author": {"login": "imhoffd"}, "path": "cli/src/tasks/update.ts", "diffHunk": "@@ -2,29 +2,39 @@ import { Config } from '../config';\n import { updateAndroid } from '../android/update';\n import { updateIOS, updateIOSChecks } from '../ios/update';\n import { allSerial } from '../util/promise';\n-import { CheckFunction, check, checkPackage, log, logError, logFatal, logInfo, runTask } from '../common';\n+import { CheckFunction, check, checkPackage, hasYarn, log, logError, logFatal, logInfo, resolveNode, runCommand, runTask } from '../common';\n \n import chalk from 'chalk';\n \n export async function updateCommand(config: Config, selectedPlatformName: string, deployment: boolean) {\n-  const then = +new Date;\n-  const platforms = config.selectPlatforms(selectedPlatformName);\n-  if (platforms.length === 0) {\n-    logInfo(`There are no platforms to update yet. Create one with \"capacitor create\".`);\n-    return;\n-  }\n-  try {\n-    await check(\n-      config,\n-      [checkPackage, ...updateChecks(config, platforms)]\n-    );\n+  if (selectedPlatformName && !config.isValidPlatform(selectedPlatformName)) {\n+    const platformFolder = resolveNode(config, selectedPlatformName);\n+    if (platformFolder) {\n+      const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run update`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09e5c54321d6f68deabb0481627c59d7469ac672"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NjY3OTM2OnYy", "diffSide": "RIGHT", "path": "cli/src/tasks/open.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzoyNzoxOFrOGqa6qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxNzo0MzoxNlrOGqbeFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNDM3Ng==", "bodyText": "Shouldn't this be runPlatformHook instead?", "url": "https://github.com/ionic-team/capacitor/pull/3091#discussion_r447134376", "createdAt": "2020-06-29T17:27:18Z", "author": {"login": "IT-MikeS"}, "path": "cli/src/tasks/open.ts", "diffHunk": "@@ -1,26 +1,35 @@\n import { Config } from '../config';\n-import { logFatal, logInfo, runTask } from '../common';\n+import { hasYarn, log, logError, logFatal, logInfo, resolvePlatform, runCommand, runTask } from '../common';\n import { openAndroid } from '../android/open';\n import { openElectron } from '../electron/open';\n import { openIOS } from '../ios/open';\n \n-export async function openCommand(config: Config, selectedPlatform: string) {\n-  const platforms = config.selectPlatforms(selectedPlatform);\n-  let platformName: string;\n-  if (platforms.length === 0) {\n-    logInfo(`There are no platforms to open yet. Create one with \"capacitor add\".`);\n-    return;\n-  } else if (platforms.length === 1) {\n-    platformName = platforms[0];\n+export async function openCommand(config: Config, selectedPlatformName: string) {\n+  if (selectedPlatformName && !config.isValidPlatform(selectedPlatformName)) {\n+    const platformFolder = resolvePlatform(config, selectedPlatformName);\n+    if (platformFolder) {\n+      const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run capacitor:open`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "565b218dce0ea89885be37e156a7cdf34f13d08e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzE0MzQ0NA==", "bodyText": "Ah yeah, I forgot to merge before doing this. \ud83d\ude02", "url": "https://github.com/ionic-team/capacitor/pull/3091#discussion_r447143444", "createdAt": "2020-06-29T17:43:16Z", "author": {"login": "imhoffd"}, "path": "cli/src/tasks/open.ts", "diffHunk": "@@ -1,26 +1,35 @@\n import { Config } from '../config';\n-import { logFatal, logInfo, runTask } from '../common';\n+import { hasYarn, log, logError, logFatal, logInfo, resolvePlatform, runCommand, runTask } from '../common';\n import { openAndroid } from '../android/open';\n import { openElectron } from '../electron/open';\n import { openIOS } from '../ios/open';\n \n-export async function openCommand(config: Config, selectedPlatform: string) {\n-  const platforms = config.selectPlatforms(selectedPlatform);\n-  let platformName: string;\n-  if (platforms.length === 0) {\n-    logInfo(`There are no platforms to open yet. Create one with \"capacitor add\".`);\n-    return;\n-  } else if (platforms.length === 1) {\n-    platformName = platforms[0];\n+export async function openCommand(config: Config, selectedPlatformName: string) {\n+  if (selectedPlatformName && !config.isValidPlatform(selectedPlatformName)) {\n+    const platformFolder = resolvePlatform(config, selectedPlatformName);\n+    if (platformFolder) {\n+      const result = await runCommand(`cd \"${platformFolder}\" && ${await hasYarn(config) ? 'yarn' : 'npm'} run capacitor:open`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEzNDM3Ng=="}, "originalCommit": {"oid": "565b218dce0ea89885be37e156a7cdf34f13d08e"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3521, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}