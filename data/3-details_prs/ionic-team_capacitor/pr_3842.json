{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MTgzNjUx", "number": 3842, "title": "feat(ios): add path utilities to bridge", "bodyText": "Usable by plugins that deal with file paths, such as Camera and Notifications.", "createdAt": "2020-11-21T20:10:08Z", "url": "https://github.com/ionic-team/capacitor/pull/3842", "merged": true, "mergeCommit": {"oid": "c31eb35f83a33626a9d88731c0fff18966c71b0b"}, "closed": true, "closedAt": "2020-11-28T18:15:00Z", "author": {"login": "imhoffd"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdexsBsAH2gAyNTI1MTgzNjUxOjZiZGQxOGJlYzg3MDExYWI4ZGFkYmJmYzkzY2EwOWQ4MWM1NzcyYjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgGmeYAH2gAyNTI1MTgzNjUxOjI5ODRiNzdmZWJjYmE1MTQyZTNiYzAxNGZmZDZlYjk0YjZhY2E0MGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6bdd18bec87011ab8dadbbfc93ca09d81c5772b1", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/6bdd18bec87011ab8dadbbfc93ca09d81c5772b1", "committedDate": "2020-11-21T20:08:24Z", "message": "feat(ios): expose CAPFile utilities"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzYzMTE0", "url": "https://github.com/ionic-team/capacitor/pull/3842#pullrequestreview-536763114", "createdAt": "2020-11-23T19:01:28Z", "commit": {"oid": "6bdd18bec87011ab8dadbbfc93ca09d81c5772b1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTowMToyOFrOH4bTwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTowMzowN1rOH4bXag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkyOTczMA==", "bodyText": "Can this just return a URL? CAPFile is a pretty useless wrapper since it only has one property. In addition, using that object means that this method can't be exported to Obj-C because CAPFile is Swift-only.", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r528929730", "createdAt": "2020-11-23T19:01:28Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CAPFile.swift", "diffHunk": "@@ -11,7 +11,7 @@ public class CAPFile {\n  * disk, in a bundle, or in another location.\n  */\n @objc public class CAPFileManager: NSObject {\n-    static func get(path: String) -> CAPFile? {\n+    public static func get(path: String) -> CAPFile? {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bdd18bec87011ab8dadbbfc93ca09d81c5772b1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODkzMDY2Ng==", "bodyText": "I think this would benefit from a more descriptive name. This isn't getting \"getting\" anything; CAPFileManager doesn't store data. This is transforming the parameter that gets passed in but it's impossible to tell what it is expected do to from the name.", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r528930666", "createdAt": "2020-11-23T19:03:07Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CAPFile.swift", "diffHunk": "@@ -11,7 +11,7 @@ public class CAPFile {\n  * disk, in a bundle, or in another location.\n  */\n @objc public class CAPFileManager: NSObject {\n-    static func get(path: String) -> CAPFile? {\n+    public static func get(path: String) -> CAPFile? {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bdd18bec87011ab8dadbbfc93ca09d81c5772b1"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83d67bccda7d790d02e098e4a48d3205f68c7547", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/83d67bccda7d790d02e098e4a48d3205f68c7547", "committedDate": "2020-11-23T19:16:55Z", "message": "remove CAPFile in favor of using URL directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d959390726a4519136010476c09c2c15271aefb9", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/d959390726a4519136010476c09c2c15271aefb9", "committedDate": "2020-11-23T23:04:36Z", "message": "add path helpers on bridge itself"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23d227f59c93a63326411bbfa6cb5c5ffbf9df2a", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/23d227f59c93a63326411bbfa6cb5c5ffbf9df2a", "committedDate": "2020-11-23T23:08:01Z", "message": "Merge branch 'main' into file-access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a966988170cc1fe7d3261f3428c52ce50d05a350", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/a966988170cc1fe7d3261f3428c52ce50d05a350", "committedDate": "2020-11-23T23:10:39Z", "message": "fix merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "511462c56dfd408e9e8728018df8715a861d211c", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/511462c56dfd408e9e8728018df8715a861d211c", "committedDate": "2020-11-23T23:12:47Z", "message": "fmt"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTE5NTI1", "url": "https://github.com/ionic-team/capacitor/pull/3842#pullrequestreview-536919525", "createdAt": "2020-11-23T23:15:47Z", "commit": {"oid": "511462c56dfd408e9e8728018df8715a861d211c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzoxNTo0N1rOH4jIEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzoxNTo0N1rOH4jIEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA1NzgxMQ==", "bodyText": "@ikeith This is questionable. I kept the old behavior, but I'm thinking we should remove this check and let it fail whenever the file is actually used, vs when we transform the path.", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r529057811", "createdAt": "2020-11-23T23:15:47Z", "author": {"login": "imhoffd"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -537,6 +537,57 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         }\n     }\n \n+    // MARK: - CAPBridgeProtocol: Paths, Files, Assets\n+\n+    /**\n+     * Translate a URL from the web view into a file URL for native iOS.\n+     *\n+     * The web view may be handling several different types of URLs:\n+     *   - res:// (shortcut scheme to web assets)\n+     *   - file:// (fully qualified URL to file on the local device)\n+     *   - base64:// (to be implemented)\n+     *   - [web view scheme]:// (already converted once to load in the web view, to be implemented)\n+     */\n+    public func localURL(fromWebURL webURL: URL?) -> URL? {\n+        guard let inputURL = webURL else {\n+            return nil\n+        }\n+\n+        let manager = FileManager.default\n+        let url: URL\n+\n+        switch inputURL.scheme {\n+        case \"res\":\n+            let bundle = Bundle.main\n+            let resourcePath = bundle.resourcePath!\n+            url = URL(fileURLWithPath: resourcePath + \"/public\" + inputURL.path)\n+        case \"file\":\n+            url = inputURL\n+        default:\n+            return nil\n+        }\n+\n+        guard manager.fileExists(atPath: url.absoluteString.replacingOccurrences(of: \"file://\", with: \"\")) else {\n+            return nil\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "511462c56dfd408e9e8728018df8715a861d211c"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b21029f0cb914a67f682b1796f385d186482fd99", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/b21029f0cb914a67f682b1796f385d186482fd99", "committedDate": "2020-11-23T23:21:13Z", "message": "add docs for portablePath"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTIyNjMx", "url": "https://github.com/ionic-team/capacitor/pull/3842#pullrequestreview-536922631", "createdAt": "2020-11-23T23:22:36Z", "commit": {"oid": "b21029f0cb914a67f682b1796f385d186482fd99"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzoyMjozNlrOH4jTDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzoyMjozNlrOH4jTDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2MDYyMg==", "bodyText": "@ikeith What do you think about this also returning a proper URL, and then documenting that the plugin can use url.absoluteString?", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r529060622", "createdAt": "2020-11-23T23:22:36Z", "author": {"login": "imhoffd"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -537,6 +537,60 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         }\n     }\n \n+    // MARK: - CAPBridgeProtocol: Paths, Files, Assets\n+\n+    /**\n+     * Translate a URL from the web view into a file URL for native iOS.\n+     *\n+     * The web view may be handling several different types of URLs:\n+     *   - res:// (shortcut scheme to web assets)\n+     *   - file:// (fully qualified URL to file on the local device)\n+     *   - base64:// (to be implemented)\n+     *   - [web view scheme]:// (already converted once to load in the web view, to be implemented)\n+     */\n+    public func localURL(fromWebURL webURL: URL?) -> URL? {\n+        guard let inputURL = webURL else {\n+            return nil\n+        }\n+\n+        let manager = FileManager.default\n+        let url: URL\n+\n+        switch inputURL.scheme {\n+        case \"res\":\n+            let bundle = Bundle.main\n+            let resourcePath = bundle.resourcePath!\n+            url = URL(fileURLWithPath: resourcePath + \"/public\" + inputURL.path)\n+        case \"file\":\n+            url = inputURL\n+        default:\n+            return nil\n+        }\n+\n+        guard manager.fileExists(atPath: url.absoluteString.replacingOccurrences(of: \"file://\", with: \"\")) else {\n+            return nil\n+        }\n+\n+        return url\n+    }\n+\n+    /**\n+     * Translate a file URL for native iOS into a URL to load in the web view.\n+     */\n+    public func portablePath(fromLocalURL localURL: URL?) -> String? {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b21029f0cb914a67f682b1796f385d186482fd99"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzU0NTQy", "url": "https://github.com/ionic-team/capacitor/pull/3842#pullrequestreview-537754542", "createdAt": "2020-11-24T17:37:09Z", "commit": {"oid": "b21029f0cb914a67f682b1796f385d186482fd99"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzozNzowOVrOH5N40w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzo0NDoyNFrOH5OKyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1ODQxOQ==", "bodyText": "URL's path manipulation methods are more robust than string modifications. Also, force-unwraps are bad.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        let bundle = Bundle.main\n          \n          \n            \n                        let resourcePath = bundle.resourcePath!\n          \n          \n            \n                        url = URL(fileURLWithPath: resourcePath + \"/public\" + inputURL.path)\n          \n          \n            \n                        guard let resourcePath = Bundle.main.resourcePath else {\n          \n          \n            \n                            return nil\n          \n          \n            \n                        }\n          \n          \n            \n                        url = URL(fileURLWithPath: resourcePath).appendingPathComponent(\"public\").appendingPathComponent(inputURL.path)", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r529758419", "createdAt": "2020-11-24T17:37:09Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -537,6 +537,60 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         }\n     }\n \n+    // MARK: - CAPBridgeProtocol: Paths, Files, Assets\n+\n+    /**\n+     * Translate a URL from the web view into a file URL for native iOS.\n+     *\n+     * The web view may be handling several different types of URLs:\n+     *   - res:// (shortcut scheme to web assets)\n+     *   - file:// (fully qualified URL to file on the local device)\n+     *   - base64:// (to be implemented)\n+     *   - [web view scheme]:// (already converted once to load in the web view, to be implemented)\n+     */\n+    public func localURL(fromWebURL webURL: URL?) -> URL? {\n+        guard let inputURL = webURL else {\n+            return nil\n+        }\n+\n+        let manager = FileManager.default\n+        let url: URL\n+\n+        switch inputURL.scheme {\n+        case \"res\":\n+            let bundle = Bundle.main\n+            let resourcePath = bundle.resourcePath!\n+            url = URL(fileURLWithPath: resourcePath + \"/public\" + inputURL.path)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b21029f0cb914a67f682b1796f385d186482fd99"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1OTczMg==", "bodyText": "I would be in favor of removing this. If we did keep it, though, it should simply pass url.path to fileExist(atPath:) instead of getting the absolute string and modifying it.", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r529759732", "createdAt": "2020-11-24T17:39:11Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -537,6 +537,57 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         }\n     }\n \n+    // MARK: - CAPBridgeProtocol: Paths, Files, Assets\n+\n+    /**\n+     * Translate a URL from the web view into a file URL for native iOS.\n+     *\n+     * The web view may be handling several different types of URLs:\n+     *   - res:// (shortcut scheme to web assets)\n+     *   - file:// (fully qualified URL to file on the local device)\n+     *   - base64:// (to be implemented)\n+     *   - [web view scheme]:// (already converted once to load in the web view, to be implemented)\n+     */\n+    public func localURL(fromWebURL webURL: URL?) -> URL? {\n+        guard let inputURL = webURL else {\n+            return nil\n+        }\n+\n+        let manager = FileManager.default\n+        let url: URL\n+\n+        switch inputURL.scheme {\n+        case \"res\":\n+            let bundle = Bundle.main\n+            let resourcePath = bundle.resourcePath!\n+            url = URL(fileURLWithPath: resourcePath + \"/public\" + inputURL.path)\n+        case \"file\":\n+            url = inputURL\n+        default:\n+            return nil\n+        }\n+\n+        guard manager.fileExists(atPath: url.absoluteString.replacingOccurrences(of: \"file://\", with: \"\")) else {\n+            return nil\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA1NzgxMQ=="}, "originalCommit": {"oid": "511462c56dfd408e9e8728018df8715a861d211c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc2MjE0Ng==", "bodyText": "I like that better.", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r529762146", "createdAt": "2020-11-24T17:43:04Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -537,6 +537,60 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         }\n     }\n \n+    // MARK: - CAPBridgeProtocol: Paths, Files, Assets\n+\n+    /**\n+     * Translate a URL from the web view into a file URL for native iOS.\n+     *\n+     * The web view may be handling several different types of URLs:\n+     *   - res:// (shortcut scheme to web assets)\n+     *   - file:// (fully qualified URL to file on the local device)\n+     *   - base64:// (to be implemented)\n+     *   - [web view scheme]:// (already converted once to load in the web view, to be implemented)\n+     */\n+    public func localURL(fromWebURL webURL: URL?) -> URL? {\n+        guard let inputURL = webURL else {\n+            return nil\n+        }\n+\n+        let manager = FileManager.default\n+        let url: URL\n+\n+        switch inputURL.scheme {\n+        case \"res\":\n+            let bundle = Bundle.main\n+            let resourcePath = bundle.resourcePath!\n+            url = URL(fileURLWithPath: resourcePath + \"/public\" + inputURL.path)\n+        case \"file\":\n+            url = inputURL\n+        default:\n+            return nil\n+        }\n+\n+        guard manager.fileExists(atPath: url.absoluteString.replacingOccurrences(of: \"file://\", with: \"\")) else {\n+            return nil\n+        }\n+\n+        return url\n+    }\n+\n+    /**\n+     * Translate a file URL for native iOS into a URL to load in the web view.\n+     */\n+    public func portablePath(fromLocalURL localURL: URL?) -> String? {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2MDYyMg=="}, "originalCommit": {"oid": "b21029f0cb914a67f682b1796f385d186482fd99"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc2MzAxOA==", "bodyText": "Same reasoning.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    guard let inputURL = localURL else {\n          \n          \n            \n                        return nil\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    guard let portableSchemeAndHost = self.localUrl else {\n          \n          \n            \n                        return nil\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    let url = URL(string: portableSchemeAndHost + CapacitorBridge.fileStartIdentifier + inputURL.path)\n          \n          \n            \n            \n          \n          \n            \n                    return url?.absoluteString\n          \n          \n            \n                    guard let inputURL = localURL else {\n          \n          \n            \n                        return nil\n          \n          \n            \n                    }\n          \n          \n            \n                    guard let urlString = self.localUrl, let portableURL = URL(string: urlString) else {\n          \n          \n            \n                        return nil\n          \n          \n            \n                    }\n          \n          \n            \n                    return portableURL.appendingPathComponent(CapacitorBridge.fileStartIdentifier).appendingPathComponent(inputURL.path).absoluteString", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r529763018", "createdAt": "2020-11-24T17:44:24Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -537,6 +537,60 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         }\n     }\n \n+    // MARK: - CAPBridgeProtocol: Paths, Files, Assets\n+\n+    /**\n+     * Translate a URL from the web view into a file URL for native iOS.\n+     *\n+     * The web view may be handling several different types of URLs:\n+     *   - res:// (shortcut scheme to web assets)\n+     *   - file:// (fully qualified URL to file on the local device)\n+     *   - base64:// (to be implemented)\n+     *   - [web view scheme]:// (already converted once to load in the web view, to be implemented)\n+     */\n+    public func localURL(fromWebURL webURL: URL?) -> URL? {\n+        guard let inputURL = webURL else {\n+            return nil\n+        }\n+\n+        let manager = FileManager.default\n+        let url: URL\n+\n+        switch inputURL.scheme {\n+        case \"res\":\n+            let bundle = Bundle.main\n+            let resourcePath = bundle.resourcePath!\n+            url = URL(fileURLWithPath: resourcePath + \"/public\" + inputURL.path)\n+        case \"file\":\n+            url = inputURL\n+        default:\n+            return nil\n+        }\n+\n+        guard manager.fileExists(atPath: url.absoluteString.replacingOccurrences(of: \"file://\", with: \"\")) else {\n+            return nil\n+        }\n+\n+        return url\n+    }\n+\n+    /**\n+     * Translate a file URL for native iOS into a URL to load in the web view.\n+     */\n+    public func portablePath(fromLocalURL localURL: URL?) -> String? {\n+        guard let inputURL = localURL else {\n+            return nil\n+        }\n+\n+        guard let portableSchemeAndHost = self.localUrl else {\n+            return nil\n+        }\n+\n+        let url = URL(string: portableSchemeAndHost + CapacitorBridge.fileStartIdentifier + inputURL.path)\n+\n+        return url?.absoluteString", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b21029f0cb914a67f682b1796f385d186482fd99"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1aa25966dc24e03d6fddab01386edf7d53616f44", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/1aa25966dc24e03d6fddab01386edf7d53616f44", "committedDate": "2020-11-24T18:12:55Z", "message": "address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODIxODQw", "url": "https://github.com/ionic-team/capacitor/pull/3842#pullrequestreview-537821840", "createdAt": "2020-11-24T19:05:40Z", "commit": {"oid": "1aa25966dc24e03d6fddab01386edf7d53616f44"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae4f8cd665bb5b4629a78c8ff4cbaab3c28454ab", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/ae4f8cd665bb5b4629a78c8ff4cbaab3c28454ab", "committedDate": "2020-11-24T19:09:45Z", "message": "Merge branch 'main' into file-access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d892e86370b9acc06a3a45b9ab801328a6a900e4", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/d892e86370b9acc06a3a45b9ab801328a6a900e4", "committedDate": "2020-11-24T20:31:22Z", "message": "Merge branch 'main' into file-access"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f86dbab730227682a56f96121c3cbb822a0eacd7", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/f86dbab730227682a56f96121c3cbb822a0eacd7", "committedDate": "2020-11-24T20:40:26Z", "message": "apply changes from config PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cccf378bfd2b918200beaaf925e0f3e0166beca", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/6cccf378bfd2b918200beaaf925e0f3e0166beca", "committedDate": "2020-11-25T00:43:16Z", "message": "Merge branch 'main' into file-access"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4ODA1MTQ0", "url": "https://github.com/ionic-team/capacitor/pull/3842#pullrequestreview-538805144", "createdAt": "2020-11-25T19:49:19Z", "commit": {"oid": "6cccf378bfd2b918200beaaf925e0f3e0166beca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTo0OToxOVrOH6BzLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTo0OToxOVrOH6BzLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwODk0MQ==", "bodyText": "To support the embedded case, this should use the configuration's web app location instead of the native app bundle/public path.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        guard let resourcePath = Bundle.main.resourcePath else {\n          \n          \n            \n                            return nil\n          \n          \n            \n                        }\n          \n          \n            \n            \n          \n          \n            \n                        url = URL(fileURLWithPath: resourcePath).appendingPathComponent(\"public\").appendingPathComponent(inputURL.path)\n          \n          \n            \n                        url = config.appLocation.appendingPathComponent(inputURL.path)", "url": "https://github.com/ionic-team/capacitor/pull/3842#discussion_r530608941", "createdAt": "2020-11-25T19:49:19Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -533,6 +533,51 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         }\n     }\n \n+    // MARK: - CAPBridgeProtocol: Paths, Files, Assets\n+\n+    /**\n+     * Translate a URL from the web view into a file URL for native iOS.\n+     *\n+     * The web view may be handling several different types of URLs:\n+     *   - res:// (shortcut scheme to web assets)\n+     *   - file:// (fully qualified URL to file on the local device)\n+     *   - base64:// (to be implemented)\n+     *   - [web view scheme]:// (already converted once to load in the web view, to be implemented)\n+     */\n+    public func localURL(fromWebURL webURL: URL?) -> URL? {\n+        guard let inputURL = webURL else {\n+            return nil\n+        }\n+\n+        let url: URL\n+\n+        switch inputURL.scheme {\n+        case \"res\":\n+            guard let resourcePath = Bundle.main.resourcePath else {\n+                return nil\n+            }\n+\n+            url = URL(fileURLWithPath: resourcePath).appendingPathComponent(\"public\").appendingPathComponent(inputURL.path)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cccf378bfd2b918200beaaf925e0f3e0166beca"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84f2f2ee04b8479494b337e80648d43f4aead46f", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/84f2f2ee04b8479494b337e80648d43f4aead46f", "committedDate": "2020-11-25T20:15:45Z", "message": "Update ios/Capacitor/Capacitor/CapacitorBridge.swift\n\nCo-authored-by: Ian Keith <iankeith@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7e9762bdcba7498967ee74acc3b5c1b773e6e73", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/b7e9762bdcba7498967ee74acc3b5c1b773e6e73", "committedDate": "2020-11-25T20:32:30Z", "message": "Merge branch 'main' into file-access"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4ODYzNTk3", "url": "https://github.com/ionic-team/capacitor/pull/3842#pullrequestreview-538863597", "createdAt": "2020-11-25T21:44:19Z", "commit": {"oid": "b7e9762bdcba7498967ee74acc3b5c1b773e6e73"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2984b77febcba5142e3bc014ffd6eb94b6aca40f", "author": {"user": {"login": "imhoffd", "name": "Dan Imhoff"}}, "url": "https://github.com/ionic-team/capacitor/commit/2984b77febcba5142e3bc014ffd6eb94b6aca40f", "committedDate": "2020-11-25T23:04:16Z", "message": "Merge branch 'main' into file-access"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1126, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}