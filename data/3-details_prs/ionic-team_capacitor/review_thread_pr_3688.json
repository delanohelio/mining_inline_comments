{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MjA2NjY5", "number": 3688, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzo0MDozNFrOEuOQbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0MDozM1rOEw0_NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2OTAzNTM0OnYy", "diffSide": "RIGHT", "path": "ios/CapacitorCordova/CapacitorCordova/Info.plist", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzo0MDozNFrOHifJVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjozNToxMFrOHi6QjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyMzkyNg==", "bodyText": "Why not CapacitorCordova?", "url": "https://github.com/ionic-team/capacitor/pull/3688#discussion_r505923926", "createdAt": "2020-10-15T23:40:34Z", "author": {"login": "imhoffd"}, "path": "ios/CapacitorCordova/CapacitorCordova/Info.plist", "diffHunk": "@@ -4,6 +4,8 @@\n <dict>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n+\t<key>CFBundleDisplayName</key>\n+\t<string>Cordova</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a40a6ab6d1511187b58b0302a9021f7e1e02753"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2ODE0MA==", "bodyText": "Because this matches how it is configured when importing via Cocoapods. The output bundle/module/filename are all Cordova despite what the project is named.", "url": "https://github.com/ionic-team/capacitor/pull/3688#discussion_r506368140", "createdAt": "2020-10-16T12:35:10Z", "author": {"login": "ikeith"}, "path": "ios/CapacitorCordova/CapacitorCordova/Info.plist", "diffHunk": "@@ -4,6 +4,8 @@\n <dict>\n \t<key>CFBundleDevelopmentRegion</key>\n \t<string>$(DEVELOPMENT_LANGUAGE)</string>\n+\t<key>CFBundleDisplayName</key>\n+\t<string>Cordova</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkyMzkyNg=="}, "originalCommit": {"oid": "8a40a6ab6d1511187b58b0302a9021f7e1e02753"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzY2MzU3OnYy", "diffSide": "RIGHT", "path": "ios/Capacitor/Capacitor/CAPLog.swift", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOTo1MjoxN1rOHjN8cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOTo1MjoxN1rOHjN8cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MDY3NA==", "bodyText": "This is a stop-gap fix as I don't think this is really the best way to solve the problem. Ultimately, I think the enableLogging flag should be set externally, probably by CAPBridgeViewController at the point of entry, rather than letting CAPLog load a configuration. That will be the best way to handle things for an embedded context where the configuration might be programmatically changed. But that can addressed when CAPConfig is redone and the view controller is refactored.", "url": "https://github.com/ionic-team/capacitor/pull/3688#discussion_r506690674", "createdAt": "2020-10-16T19:52:17Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CAPLog.swift", "diffHunk": "@@ -1,19 +1,26 @@\n public class CAPLog {\n-\n-    public static let config = CAPConfig()\n-\n+    public static var enableLogging: Bool = true\n+    \n+    private static var oneTimeConfigCheck: () -> () = {\n+        // `dispatch_once` is not available since Swift 3. but, since static properties are implicitly lazy,\n+        // this code will only execute once which is sufficient for our needs here. but since we need to do an\n+        // async dispatch, there is a window of time where the default value will be valid before the config\n+        // value(s) can be loaded.\n+        DispatchQueue.main.async {\n+            let config = CAPConfig()\n+            if let configFlag = (config.getValue(\"ios.hideLogs\") as? Bool) ?? (config.getValue(\"hideLogs\") as? Bool) {\n+                enableLogging = !configFlag\n+            }\n+        }\n+        return {}\n+    }()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d92dd0fc2825ec92638d1b481f832856d5a9f24"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjM1MjUyOnYy", "diffSide": "RIGHT", "path": "ios/Capacitor.podspec", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo0MDozM1rOHmoDFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo1NTowN1rOHmtbCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NDA4Nw==", "bodyText": "Why is the file excluded?\nCan it just be removed if not needed?", "url": "https://github.com/ionic-team/capacitor/pull/3688#discussion_r510264087", "createdAt": "2020-10-22T15:40:33Z", "author": {"login": "jcesarmobile"}, "path": "ios/Capacitor.podspec", "diffHunk": "@@ -11,6 +11,8 @@ Pod::Spec.new do |s|\n   s.authors = { 'Ionic Team' => 'hi@ionicframework.com' }\n   s.source = { :git => 'https://github.com/ionic-team/capacitor.git', :tag => s.version.to_s }\n   s.source_files = 'Capacitor/Capacitor/*.{swift,h,m}', 'Capacitor/Capacitor/Plugins/*.{swift,h,m}', 'Capacitor/Capacitor/Plugins/**/*.{swift,h,m}'\n+  s.exclude_files = 'Capacitor/Capacitor/Plugins/DefaultPlugins.h'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9e996985c0c692bc4e10f27b5521a78dcda333c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1MjEzOQ==", "bodyText": "It's excluded so the cocoapods build matches. Otherwise cocoapods will try to add it to the public headers but that will generate a warning since it's not included in the umbrella header. But, yes, it's probably easier to just remove it since it is empty.", "url": "https://github.com/ionic-team/capacitor/pull/3688#discussion_r510352139", "createdAt": "2020-10-22T17:55:07Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor.podspec", "diffHunk": "@@ -11,6 +11,8 @@ Pod::Spec.new do |s|\n   s.authors = { 'Ionic Team' => 'hi@ionicframework.com' }\n   s.source = { :git => 'https://github.com/ionic-team/capacitor.git', :tag => s.version.to_s }\n   s.source_files = 'Capacitor/Capacitor/*.{swift,h,m}', 'Capacitor/Capacitor/Plugins/*.{swift,h,m}', 'Capacitor/Capacitor/Plugins/**/*.{swift,h,m}'\n+  s.exclude_files = 'Capacitor/Capacitor/Plugins/DefaultPlugins.h'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NDA4Nw=="}, "originalCommit": {"oid": "b9e996985c0c692bc4e10f27b5521a78dcda333c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3431, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}