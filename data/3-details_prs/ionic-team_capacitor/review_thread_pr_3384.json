{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyODQ1ODA2", "number": 3384, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjo0NDowNFrOExSDTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjo0NDowNFrOExSDTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMTExNDM5OnYy", "diffSide": "RIGHT", "path": "ios/Capacitor/Capacitor/Plugins/LocalNotifications.swift", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxNjo0NDowNFrOHnVj5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxODo1OToxNFrOHnaMlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwOTc2NA==", "bodyText": "Can something like this be used in this 3 fors instead of the guards?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for type in actionTypes {\n          \n          \n            \n                        guard let type = type as? JSObject else {\n          \n          \n            \n                          continue\n          \n          \n            \n                        }\n          \n          \n            \n                    for case let type as JSObject in actionTypes {", "url": "https://github.com/ionic-team/capacitor/pull/3384#discussion_r511009764", "createdAt": "2020-10-23T16:44:04Z", "author": {"login": "jcesarmobile"}, "path": "ios/Capacitor/Capacitor/Plugins/LocalNotifications.swift", "diffHunk": "@@ -338,6 +338,9 @@ public class CAPLocalNotificationsPlugin: CAPPlugin {\n \n         createdCategories.append(generalCategory)\n         for type in actionTypes {\n+            guard let type = type as? JSObject else {\n+              continue\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f12d1ee194ad971e8c4a017aa6e111d815fb81f3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAzODA3MQ==", "bodyText": "That would work. I am little concerned, though, that that kind of syntax might be too esoteric just to save a couple of lines. It could be hard for someone less familiar with Swift to understand if they looked at the core plugins for examples of how to write a plugin.", "url": "https://github.com/ionic-team/capacitor/pull/3384#discussion_r511038071", "createdAt": "2020-10-23T17:38:48Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/Plugins/LocalNotifications.swift", "diffHunk": "@@ -338,6 +338,9 @@ public class CAPLocalNotificationsPlugin: CAPPlugin {\n \n         createdCategories.append(generalCategory)\n         for type in actionTypes {\n+            guard let type = type as? JSObject else {\n+              continue\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwOTc2NA=="}, "originalCommit": {"oid": "f12d1ee194ad971e8c4a017aa6e111d815fb81f3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA0NzM4OQ==", "bodyText": "I didn't propose it for saving lines, but because I find the guard with continue confusing.\nCould be possible to indicate in some way that the whole JSArray contain elements of the same type so don't need to cast them inside the for?\nIn the change I proposed (guard let types = call.getArray(\"types\", JSObject.self)), we are saying the elements are JSObject, but we still need to cast them when we go over the Array.", "url": "https://github.com/ionic-team/capacitor/pull/3384#discussion_r511047389", "createdAt": "2020-10-23T17:54:34Z", "author": {"login": "jcesarmobile"}, "path": "ios/Capacitor/Capacitor/Plugins/LocalNotifications.swift", "diffHunk": "@@ -338,6 +338,9 @@ public class CAPLocalNotificationsPlugin: CAPPlugin {\n \n         createdCategories.append(generalCategory)\n         for type in actionTypes {\n+            guard let type = type as? JSObject else {\n+              continue\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwOTc2NA=="}, "originalCommit": {"oid": "f12d1ee194ad971e8c4a017aa6e111d815fb81f3"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA4NTcxOA==", "bodyText": "Oh, I see. Your suggested change is functionally identical so I assumed it was just to be more concise. (I think a for loop with an inner guard is easier to understand but obviously that's subjective) I agree that bubbling the more exact types through the code is better but I was trying to avoid too many changes, especially since I knew the plugins were being split out and I didn't expect this change to get merged quickly. I will update the code to avoid casting types up to a more generic one.", "url": "https://github.com/ionic-team/capacitor/pull/3384#discussion_r511085718", "createdAt": "2020-10-23T18:59:14Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/Plugins/LocalNotifications.swift", "diffHunk": "@@ -338,6 +338,9 @@ public class CAPLocalNotificationsPlugin: CAPPlugin {\n \n         createdCategories.append(generalCategory)\n         for type in actionTypes {\n+            guard let type = type as? JSObject else {\n+              continue\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTAwOTc2NA=="}, "originalCommit": {"oid": "f12d1ee194ad971e8c4a017aa6e111d815fb81f3"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3492, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}