{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NDg1MjM0", "number": 3796, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDo0NDoyNVrOE9QqDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTowMTo1N1rOE9RJ8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjcxNTAzOnYy", "diffSide": "RIGHT", "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDo0NDoyNVrOH52mhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzozNjoyM1rOH59zAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyNTQ3Nw==", "bodyText": "This should not be weak. Something needs to keep the instance in memory. Since the bridge creates the object then it should own it.\nAlso, it should be marked as public to match the protocol declaration. The protocol defines the property as read-only so that's how outside classes will see it.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private(set) weak var userNotificationDelegate: UserNotificationCenterDelegate\n          \n          \n            \n                public var userNotificationDelegate: UserNotificationCenterDelegate", "url": "https://github.com/ionic-team/capacitor/pull/3796#discussion_r530425477", "createdAt": "2020-11-25T14:44:25Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -16,6 +16,8 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         return bridgeDelegate?.bridgedWebView\n     }\n \n+    private(set) weak var userNotificationDelegate: UserNotificationCenterDelegate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec72b177a935a6324d0f75479d51db9eb3d85c5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0MzM2Mw==", "bodyText": "I think the linter switched it to weak automatically \ud83e\udd14", "url": "https://github.com/ionic-team/capacitor/pull/3796#discussion_r530543363", "createdAt": "2020-11-25T17:36:23Z", "author": {"login": "imhoffd"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -16,6 +16,8 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         return bridgeDelegate?.bridgedWebView\n     }\n \n+    private(set) weak var userNotificationDelegate: UserNotificationCenterDelegate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQyNTQ3Nw=="}, "originalCommit": {"oid": "5ec72b177a935a6324d0f75479d51db9eb3d85c5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjc1MTU0OnYy", "diffSide": "RIGHT", "path": "ios/Capacitor/Capacitor/CAPInstanceConfiguration.h", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDo1MjoyMlrOH529Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzozODozOFrOH593vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzMTMwMg==", "bodyText": "Does this need a field in the config file? Otherwise turning it off will require that the app developer subclass the view controller to programmatically set it.", "url": "https://github.com/ionic-team/capacitor/pull/3796#discussion_r530431302", "createdAt": "2020-11-25T14:52:22Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CAPInstanceConfiguration.h", "diffHunk": "@@ -17,6 +17,7 @@ NS_SWIFT_NAME(InstanceConfiguration)\n @property (nonatomic, readonly) BOOL enableLogging;\n @property (nonatomic, readonly) BOOL enableScrolling;\n @property (nonatomic, readonly) BOOL allowLinkPreviews;\n+@property (nonatomic, readonly) BOOL assignUserNotificationCenterDelegate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec72b177a935a6324d0f75479d51db9eb3d85c5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0NDU3Mw==", "bodyText": "I don't think so. Disabling it is likely only a use case for embedded. If I'm mistaken, we can always add a field later.", "url": "https://github.com/ionic-team/capacitor/pull/3796#discussion_r530544573", "createdAt": "2020-11-25T17:38:38Z", "author": {"login": "imhoffd"}, "path": "ios/Capacitor/Capacitor/CAPInstanceConfiguration.h", "diffHunk": "@@ -17,6 +17,7 @@ NS_SWIFT_NAME(InstanceConfiguration)\n @property (nonatomic, readonly) BOOL enableLogging;\n @property (nonatomic, readonly) BOOL enableScrolling;\n @property (nonatomic, readonly) BOOL allowLinkPreviews;\n+@property (nonatomic, readonly) BOOL assignUserNotificationCenterDelegate;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzMTMwMg=="}, "originalCommit": {"oid": "5ec72b177a935a6324d0f75479d51db9eb3d85c5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjc5NjY2OnYy", "diffSide": "RIGHT", "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNTowMTo1N1rOH53ZyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNzozNzo0MVrOH591zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzODYwMA==", "bodyText": "What if this was moved into UserNotificationCenterDelegate? It could have a computed property that both returned whether or not it was the active delegate and allowed it be to set. The bridge, then, could just set the flag like:\nuserNotificationDelegate.handleNotifications = configuration.assignUserNotificationDelegate", "url": "https://github.com/ionic-team/capacitor/pull/3796#discussion_r530438600", "createdAt": "2020-11-25T15:01:57Z", "author": {"login": "ikeith"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -172,6 +174,12 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         self.messageHandlerWrapper = messageHandlerWrapper\n         self.config = configuration\n         self.cordovaParser = cordovaConfiguration\n+        self.userNotificationDelegate = UserNotificationCenterDelegate()\n+\n+        if configuration.assignUserNotificationCenterDelegate {\n+            let center = UNUserNotificationCenter.current()\n+            center.delegate = userNotificationDelegate\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ec72b177a935a6324d0f75479d51db9eb3d85c5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU0NDA3Ng==", "bodyText": "I wasn't quite sure where to place it because it's such global logic. I can change it to see how it looks.", "url": "https://github.com/ionic-team/capacitor/pull/3796#discussion_r530544076", "createdAt": "2020-11-25T17:37:41Z", "author": {"login": "imhoffd"}, "path": "ios/Capacitor/Capacitor/CapacitorBridge.swift", "diffHunk": "@@ -172,6 +174,12 @@ internal class CapacitorBridge: NSObject, CAPBridgeProtocol {\n         self.messageHandlerWrapper = messageHandlerWrapper\n         self.config = configuration\n         self.cordovaParser = cordovaConfiguration\n+        self.userNotificationDelegate = UserNotificationCenterDelegate()\n+\n+        if configuration.assignUserNotificationCenterDelegate {\n+            let center = UNUserNotificationCenter.current()\n+            center.delegate = userNotificationDelegate\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQzODYwMA=="}, "originalCommit": {"oid": "5ec72b177a935a6324d0f75479d51db9eb3d85c5"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3465, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}