{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2Mjc5Njc5", "number": 155, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMDo1MTo1MVrODtVo1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxNjoxMlrODtZ7HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODY3MDMwOnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/transport/Response.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMDo1MTo1MVrOF-tMGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjoxNzoyMlrOF-yNvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5NjQwOQ==", "bodyText": "This check seams not neccessary.", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401296409", "createdAt": "2020-04-01T00:51:51Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/transport/Response.java", "diffHunk": "@@ -28,6 +32,21 @@\n \n   private String content;\n \n+  private Map<String, String> headers = new HashMap<>();\n+\n+  public String getHeader(String key) {\n+    if (!headers.containsKey(key)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b2b7d4fb907a0673a41a2518daefe2fa1e41ee"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3ODc1MA==", "bodyText": "done", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401378750", "createdAt": "2020-04-01T06:17:22Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/transport/Response.java", "diffHunk": "@@ -28,6 +32,21 @@\n \n   private String content;\n \n+  private Map<String, String> headers = new HashMap<>();\n+\n+  public String getHeader(String key) {\n+    if (!headers.containsKey(key)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5NjQwOQ=="}, "originalCommit": {"oid": "26b2b7d4fb907a0673a41a2518daefe2fa1e41ee"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODY5ODUzOnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMTowODowNVrOF-tc8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjoxNzo1NFrOF-yOYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwMDcyMA==", "bodyText": "Define a setter is better, e.g. addServiceReivison(String, String). Or must difine it to be final .", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401300720", "createdAt": "2020-04-01T01:08:05Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceHandler.java", "diffHunk": "@@ -39,9 +41,15 @@\n \n   private static List<ServiceInstance> instanceList = Collections.emptyList();\n \n+  public static Map<String, String> serviceRevision = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b2b7d4fb907a0673a41a2518daefe2fa1e41ee"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3ODkxMw==", "bodyText": "change it to final", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401378913", "createdAt": "2020-04-01T06:17:54Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceHandler.java", "diffHunk": "@@ -39,9 +41,15 @@\n \n   private static List<ServiceInstance> instanceList = Collections.emptyList();\n \n+  public static Map<String, String> serviceRevision = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwMDcyMA=="}, "originalCommit": {"oid": "26b2b7d4fb907a0673a41a2518daefe2fa1e41ee"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODcwMDk3OnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClientTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMTowOToyNlrOF-teVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjoxODowM1rOF-yOmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwMTA3OA==", "bodyText": "Formate this code", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401301078", "createdAt": "2020-04-01T01:09:26Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClientTest.java", "diffHunk": "@@ -210,7 +210,7 @@ public void getInstances(@Injectable\n       }\n     };\n     ServiceCombClient serviceCombClient = new ServiceCombClient(url, httpTransport);\n-    List<ServiceInstance> actual = serviceCombClient.getInstances(microservice);\n+    List<ServiceInstance> actual = serviceCombClient.getInstances(microservice,null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b2b7d4fb907a0673a41a2518daefe2fa1e41ee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3ODk2OA==", "bodyText": "done", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401378968", "createdAt": "2020-04-01T06:18:03Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClientTest.java", "diffHunk": "@@ -210,7 +210,7 @@ public void getInstances(@Injectable\n       }\n     };\n     ServiceCombClient serviceCombClient = new ServiceCombClient(url, httpTransport);\n-    List<ServiceInstance> actual = serviceCombClient.getInstances(microservice);\n+    List<ServiceInstance> actual = serviceCombClient.getInstances(microservice,null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwMTA3OA=="}, "originalCommit": {"oid": "26b2b7d4fb907a0673a41a2518daefe2fa1e41ee"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODcwMTU0OnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMTowOTo0N1rOF-tesw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjoxODoxMlrOF-yO0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwMTE3MQ==", "bodyText": "Format this code", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401301171", "createdAt": "2020-04-01T01:09:47Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceHandlerTest.java", "diffHunk": "@@ -54,7 +54,7 @@ public void getInstances(@Injectable ServiceCombClient serviceCombClient)\n     microservice.setServiceName(\"testservice\");\n     new Expectations() {\n       {\n-        serviceCombClient.getInstances(microservice);\n+        serviceCombClient.getInstances(microservice,\"0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b2b7d4fb907a0673a41a2518daefe2fa1e41ee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3OTAyNQ==", "bodyText": "done", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401379025", "createdAt": "2020-04-01T06:18:12Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceHandlerTest.java", "diffHunk": "@@ -54,7 +54,7 @@ public void getInstances(@Injectable ServiceCombClient serviceCombClient)\n     microservice.setServiceName(\"testservice\");\n     new Expectations() {\n       {\n-        serviceCombClient.getInstances(microservice);\n+        serviceCombClient.getInstances(microservice,\"0\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwMTE3MQ=="}, "originalCommit": {"oid": "26b2b7d4fb907a0673a41a2518daefe2fa1e41ee"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTM2MzU1OnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/ribbon/ServiceCombServerListTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxMzowNFrOF-zj4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1Njo0MFrOF_nv_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMDgwMw==", "bodyText": "format code", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401400803", "createdAt": "2020-04-01T07:13:04Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/ribbon/ServiceCombServerListTest.java", "diffHunk": "@@ -85,21 +92,23 @@ public URI getUri() {\n \n       @Override\n       public Map<String, String> getMetadata() {\n-        return null;\n+        Map<String, String> map = new HashMap<>();\n+        map.put(\"status\", MicroserviceInstanceStatus.UP.name());\n+        return map;\n       }\n     };\n     instanceList.add(serviceInstance);\n     new Expectations() {\n       {\n         iClientConfig.getClientName();\n         result = \"serviceid11\";\n-        serviceCombClient.getInstances((Microservice) any);\n+        serviceCombClient.getInstances((Microservice) any,null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8581163399217f047164756d37b3c0ead8b606fa"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NTg2OQ==", "bodyText": "done", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r402255869", "createdAt": "2020-04-02T11:56:40Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/test/java/com/huaweicloud/servicecomb/discovery/ribbon/ServiceCombServerListTest.java", "diffHunk": "@@ -85,21 +92,23 @@ public URI getUri() {\n \n       @Override\n       public Map<String, String> getMetadata() {\n-        return null;\n+        Map<String, String> map = new HashMap<>();\n+        map.put(\"status\", MicroserviceInstanceStatus.UP.name());\n+        return map;\n       }\n     };\n     instanceList.add(serviceInstance);\n     new Expectations() {\n       {\n         iClientConfig.getClientName();\n         result = \"serviceid11\";\n-        serviceCombClient.getInstances((Microservice) any);\n+        serviceCombClient.getInstances((Microservice) any,null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMDgwMw=="}, "originalCommit": {"oid": "8581163399217f047164756d37b3c0ead8b606fa"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTM2NTQ1OnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/KieAddrSeekerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxMzo0MFrOF-zlEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1Njo1MFrOF_nwQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTEwNQ==", "bodyText": "format code", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401401105", "createdAt": "2020-04-01T07:13:40Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/KieAddrSeekerImpl.java", "diffHunk": "@@ -28,7 +28,7 @@ public String getKieAddr() {\n     microservice.setServiceName(\"servicecomb-kie\");\n     List<ServiceInstance> instanceList;\n     try {\n-      instanceList = serviceCombClient.getInstances(microservice);\n+      instanceList = serviceCombClient.getInstances(microservice,null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8581163399217f047164756d37b3c0ead8b606fa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NTkzOA==", "bodyText": "done", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r402255938", "createdAt": "2020-04-02T11:56:50Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/KieAddrSeekerImpl.java", "diffHunk": "@@ -28,7 +28,7 @@ public String getKieAddr() {\n     microservice.setServiceName(\"servicecomb-kie\");\n     List<ServiceInstance> instanceList;\n     try {\n-      instanceList = serviceCombClient.getInstances(microservice);\n+      instanceList = serviceCombClient.getInstances(microservice,null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTEwNQ=="}, "originalCommit": {"oid": "8581163399217f047164756d37b3c0ead8b606fa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTM3MjQ0OnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceCache.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxNjoxMlrOF-zpdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1MzoyMVrOF_npFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMjIzMA==", "bodyText": "I am not sure where getMicroserviceIns is called. Seams use microservice instance id as the key is better. Not all endpoints starts with rest.", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r401402230", "createdAt": "2020-04-01T07:16:12Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceCache.java", "diffHunk": "@@ -35,19 +35,17 @@ public static void initService(List<Microservice> list) {\n         list.forEach(item ->\n                 item.getInstances().forEach(ins -> {\n                     ins.setServiceName(item.getServiceName());\n-                    ins.getEndpoints().forEach(ep -> {\n-                        microserviceList.put(ep.replaceAll(\"rest://\", \"\"), ins);\n-                    });\n+                    ins.getEndpoints()\n+                        .forEach(ep -> microserviceList.put(ep.replaceAll(\"rest://\", \"\"), ins));\n                 })\n         );\n     }\n \n     public static void initInsList(List<MicroserviceInstance> list, String serviceName) {\n         list.forEach(ins -> {\n             ins.setServiceName(serviceName);\n-            ins.getEndpoints().forEach(ep -> {\n-                microserviceList.put(ep.replaceAll(\"rest://\", \"\"), ins);\n-            });\n+            ins.getEndpoints()\n+                .forEach(ep -> microserviceList.put(ep.replaceAll(\"rest://\", \"\"), ins));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8581163399217f047164756d37b3c0ead8b606fa"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NDEwMw==", "bodyText": "Ribbon's  com.netflix.loadbalancer.Server choose the endpint as the instance id, so I use  endpoint.\nIn spring cloud all endpoints with rest.", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/155#discussion_r402254103", "createdAt": "2020-04-02T11:53:21Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/MicroserviceCache.java", "diffHunk": "@@ -35,19 +35,17 @@ public static void initService(List<Microservice> list) {\n         list.forEach(item ->\n                 item.getInstances().forEach(ins -> {\n                     ins.setServiceName(item.getServiceName());\n-                    ins.getEndpoints().forEach(ep -> {\n-                        microserviceList.put(ep.replaceAll(\"rest://\", \"\"), ins);\n-                    });\n+                    ins.getEndpoints()\n+                        .forEach(ep -> microserviceList.put(ep.replaceAll(\"rest://\", \"\"), ins));\n                 })\n         );\n     }\n \n     public static void initInsList(List<MicroserviceInstance> list, String serviceName) {\n         list.forEach(ins -> {\n             ins.setServiceName(serviceName);\n-            ins.getEndpoints().forEach(ep -> {\n-                microserviceList.put(ep.replaceAll(\"rest://\", \"\"), ins);\n-            });\n+            ins.getEndpoints()\n+                .forEach(ep -> microserviceList.put(ep.replaceAll(\"rest://\", \"\"), ins));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMjIzMA=="}, "originalCommit": {"oid": "8581163399217f047164756d37b3c0ead8b606fa"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1995, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}