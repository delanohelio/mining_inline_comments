{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMTA4NjAx", "number": 303, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODoxODo1N1rOE-_z-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODoxODo1N1rOE-_z-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDkyNjY3OnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/transport/DefaultHttpTransport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODoxODo1N1rOH8cq5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTowMzoxOVrOH8e4aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE0NjM0Mw==", "bodyText": "\u6570\u5b57\u90fd\u5b9a\u4e49\u4e0b\u5e38\u91cf\u5427", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/303#discussion_r533146343", "createdAt": "2020-12-01T08:18:57Z", "author": {"login": "tianxiaoliang"}, "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/transport/DefaultHttpTransport.java", "diffHunk": "@@ -69,18 +72,26 @@\n \n   private HttpClient httpClient;\n \n+  private ServiceCombRBACProperties serviceCombRBACProperties;\n+\n+  private List<String> urlList;\n+\n+  private final TaskScheduler scheduler = new ConcurrentTaskScheduler(Executors.newSingleThreadScheduledExecutor());\n+\n   public void setRBACToken(ServiceCombRBACProperties serviceCombRBACProperties,\n       String urls) {\n     if (serviceCombRBACProperties == null ||\n         StringUtils.isEmpty(serviceCombRBACProperties.getName()) ||\n         StringUtils.isEmpty(serviceCombRBACProperties.getPassword())) {\n       return;\n     }\n-    List<String> urlList = URLUtil.dealMultiUrl(urls);\n-    getToken(serviceCombRBACProperties, urlList);\n+    this.urlList = URLUtil.dealMultiUrl(urls);\n+    this.serviceCombRBACProperties = serviceCombRBACProperties;\n+    // 30min token expire  /\n+    scheduler.scheduleWithFixedDelay(this::refreshToken, 28 * 60 * 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5823ed8ad42d8a642b4a8117de57b4046e1508"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE4MjU3MQ==", "bodyText": "done", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/303#discussion_r533182571", "createdAt": "2020-12-01T09:03:19Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/transport/DefaultHttpTransport.java", "diffHunk": "@@ -69,18 +72,26 @@\n \n   private HttpClient httpClient;\n \n+  private ServiceCombRBACProperties serviceCombRBACProperties;\n+\n+  private List<String> urlList;\n+\n+  private final TaskScheduler scheduler = new ConcurrentTaskScheduler(Executors.newSingleThreadScheduledExecutor());\n+\n   public void setRBACToken(ServiceCombRBACProperties serviceCombRBACProperties,\n       String urls) {\n     if (serviceCombRBACProperties == null ||\n         StringUtils.isEmpty(serviceCombRBACProperties.getName()) ||\n         StringUtils.isEmpty(serviceCombRBACProperties.getPassword())) {\n       return;\n     }\n-    List<String> urlList = URLUtil.dealMultiUrl(urls);\n-    getToken(serviceCombRBACProperties, urlList);\n+    this.urlList = URLUtil.dealMultiUrl(urls);\n+    this.serviceCombRBACProperties = serviceCombRBACProperties;\n+    // 30min token expire  /\n+    scheduler.scheduleWithFixedDelay(this::refreshToken, 28 * 60 * 1000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE0NjM0Mw=="}, "originalCommit": {"oid": "4c5823ed8ad42d8a642b4a8117de57b4046e1508"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1969, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}