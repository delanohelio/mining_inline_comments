{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5Mzk2NTM5", "number": 246, "title": "[issue #247] support reactive discovery", "bodyText": "", "createdAt": "2020-08-18T10:43:25Z", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/246", "merged": true, "mergeCommit": {"oid": "9094f4a751592b14db3c26521f85d312752216fb"}, "closed": true, "closedAt": "2020-08-18T11:56:22Z", "author": {"login": "GuoYL123"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAEpWKgH2gAyNDY5Mzk2NTM5OmZkYjFkOTFiMThjZmE2OWM1ODViNjc0ZTdiOGU0MTNhYTdkY2M5YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAFevKAFqTQ2OTI5MjI3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fdb1d91b18cfa69c585b674e7b8e413aa7dcc9be", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/fdb1d91b18cfa69c585b674e7b8e413aa7dcc9be", "committedDate": "2020-08-18T10:42:01Z", "message": "support spring cloud gateway discovery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MjkyMjcw", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/246#pullrequestreview-469292270", "createdAt": "2020-08-18T11:40:20Z", "commit": {"oid": "fdb1d91b18cfa69c585b674e7b8e413aa7dcc9be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMTo0MDoyMFrOHCPgSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMTo0MDoyMFrOHCPgSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjExMzIyNQ==", "bodyText": "This implementatioin is too simple. Can use reactictor API to interacte with service center?", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/246#discussion_r472113225", "createdAt": "2020-08-18T11:40:20Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/discovery/ServiceCombReactiveDiscoveryClient.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package com.huaweicloud.servicecomb.discovery.discovery;\n+\n+import org.springframework.cloud.client.ServiceInstance;\n+import org.springframework.cloud.client.discovery.DiscoveryClient;\n+import org.springframework.cloud.client.discovery.ReactiveDiscoveryClient;\n+import reactor.core.publisher.Flux;\n+import reactor.core.scheduler.Schedulers;\n+\n+/**\n+ * @Author GuoYl123\n+ * @Date 2020/8/18\n+ **/\n+public class ServiceCombReactiveDiscoveryClient implements ReactiveDiscoveryClient {\n+\n+  private DiscoveryClient discoveryClient;\n+\n+  public ServiceCombReactiveDiscoveryClient(DiscoveryClient serviceCombDiscoveryClient) {\n+    this.discoveryClient = serviceCombDiscoveryClient;\n+  }\n+\n+  @Override\n+  public String description() {\n+    return \"this is servicecomb reactive implement\";\n+  }\n+\n+  @Override\n+  public Flux<ServiceInstance> getInstances(String serviceId) {\n+    return Flux.defer(() -> Flux.fromIterable(discoveryClient.getInstances(serviceId)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdb1d91b18cfa69c585b674e7b8e413aa7dcc9be"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1761, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}