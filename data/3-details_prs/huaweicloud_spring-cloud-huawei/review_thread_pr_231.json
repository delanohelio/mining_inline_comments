{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5ODI3MDY0", "number": 231, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjo0NzowOFrOEO_GEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjo0ODowNVrOEO_HHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTQ5MjY1OnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjo0NzowOFrOGycV3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMTo1NTowOVrOGynl-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0NjMzMw==", "bodyText": "I found heartbeat is call in an scheduler. And don't understand why this can 'avoid too many heartbeat.\n ScheduledFuture currentTask = this.scheduler\n        .scheduleWithFixedDelay(() -> {", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231#discussion_r455546333", "createdAt": "2020-07-16T06:47:08Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "diffHunk": "@@ -411,12 +411,13 @@ public HeardBeatStatus heartbeat(HeartbeatRequest heartbeatRequest) throws Servi\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\n         LOGGER.debug(\"heartbeat success.\");\n         return HeardBeatStatus.SUCCESS;\n-      } else {\n+      } else if (response.getStatusCode() == HttpStatus.SC_BAD_REQUEST) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cb38310971034760d7532bafbc489347e678b0b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTczMDY4MQ==", "bodyText": "in some case it trigger flow limiting:\nif heard beat failed , will retry -> retry success, heard beat -> heard beat failed , will retry .\nit's a loop.\nso I add a condition : retry only if the service does not exist", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231#discussion_r455730681", "createdAt": "2020-07-16T11:55:09Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "diffHunk": "@@ -411,12 +411,13 @@ public HeardBeatStatus heartbeat(HeartbeatRequest heartbeatRequest) throws Servi\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\n         LOGGER.debug(\"heartbeat success.\");\n         return HeardBeatStatus.SUCCESS;\n-      } else {\n+      } else if (response.getStatusCode() == HttpStatus.SC_BAD_REQUEST) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0NjMzMw=="}, "originalCommit": {"oid": "6cb38310971034760d7532bafbc489347e678b0b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTQ5NTM1OnYy", "diffSide": "RIGHT", "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjo0ODowNVrOGycXeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMTo1MDoyN1rOGyncvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0Njc0Ng==", "bodyText": "This exception is caught in the method, throw RemoteOperationException is more direct.", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231#discussion_r455546746", "createdAt": "2020-07-16T06:48:05Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "diffHunk": "@@ -411,12 +411,13 @@ public HeardBeatStatus heartbeat(HeartbeatRequest heartbeatRequest) throws Servi\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\n         LOGGER.debug(\"heartbeat success.\");\n         return HeardBeatStatus.SUCCESS;\n-      } else {\n+      } else if (response.getStatusCode() == HttpStatus.SC_BAD_REQUEST) {\n         LOGGER.error(\n             \"heartbeat to service center failed. status:\" + response.getStatusCode() + \"; message:\"\n                 + response.getStatusMessage() + \"; content:\" + response.getContent());\n         return HeardBeatStatus.FAILED;\n       }\n+      throw new IOException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cb38310971034760d7532bafbc489347e678b0b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcyODMxOQ==", "bodyText": "The purpose of throwing an exception here is to trigger toggle() to back off.", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/231#discussion_r455728319", "createdAt": "2020-07-16T11:50:27Z", "author": {"login": "GuoYL123"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/client/ServiceCombClient.java", "diffHunk": "@@ -411,12 +411,13 @@ public HeardBeatStatus heartbeat(HeartbeatRequest heartbeatRequest) throws Servi\n       if (response.getStatusCode() == HttpStatus.SC_OK) {\n         LOGGER.debug(\"heartbeat success.\");\n         return HeardBeatStatus.SUCCESS;\n-      } else {\n+      } else if (response.getStatusCode() == HttpStatus.SC_BAD_REQUEST) {\n         LOGGER.error(\n             \"heartbeat to service center failed. status:\" + response.getStatusCode() + \"; message:\"\n                 + response.getStatusMessage() + \"; content:\" + response.getContent());\n         return HeardBeatStatus.FAILED;\n       }\n+      throw new IOException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU0Njc0Ng=="}, "originalCommit": {"oid": "6cb38310971034760d7532bafbc489347e678b0b"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1934, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}