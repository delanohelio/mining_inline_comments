{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNDA2NDQ3", "number": 150, "title": "when heard beat failed , retry registry", "bodyText": "", "createdAt": "2020-03-25T06:21:47Z", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150", "merged": true, "mergeCommit": {"oid": "8ef03114488931cd3fbc747825f4d2c9eaad5391"}, "closed": true, "closedAt": "2020-03-26T07:13:46Z", "author": {"login": "GuoYL123"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRBXsngH2gAyMzkzNDA2NDQ3OjVmMjEwNjkzY2ViOTlkYjE4OGNkMjQ2Njg5OWM0ZTI0YWQ2ZjQ5YmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRWXLCgBqjMxNjY5MDI1MTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5f210693ceb99db188cd2466899c4e24ad6f49ba", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/5f210693ceb99db188cd2466899c4e24ad6f49ba", "committedDate": "2020-03-25T06:18:35Z", "message": "when heard beat failed , retry registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ea75aa8be928ebd66aa8963979bf2b485941a19", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/2ea75aa8be928ebd66aa8963979bf2b485941a19", "committedDate": "2020-03-25T07:01:26Z", "message": "format modify"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "655f00e3925425581f38f1e3b907194cf36c0004", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/655f00e3925425581f38f1e3b907194cf36c0004", "committedDate": "2020-03-25T06:59:14Z", "message": "format modify"}, "afterCommit": {"oid": "2ea75aa8be928ebd66aa8963979bf2b485941a19", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/2ea75aa8be928ebd66aa8963979bf2b485941a19", "committedDate": "2020-03-25T07:01:26Z", "message": "format modify"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODkzNzAw", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#pullrequestreview-380893700", "createdAt": "2020-03-25T06:57:32Z", "commit": {"oid": "5f210693ceb99db188cd2466899c4e24ad6f49ba"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo1NzozMlrOF7OFmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNjo1ODowNVrOF7OGPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MTExMg==", "bodyText": "log\u65e5\u5fd7\u90fd\u4f7f\u7528{} \u53c2\u6570\u7684\u5f62\u5f0f\uff0c\u4e0d\u8981\u7528\u5b57\u7b26\u4e32\u62fc\u63a5", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r397641112", "createdAt": "2020-03-25T06:57:32Z", "author": {"login": "jeho0815"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java", "diffHunk": "@@ -35,17 +42,86 @@\n \n   private ServiceCombClient serviceCombClient;\n \n+  private AtomicBoolean isInitialize = new AtomicBoolean(true);\n+\n+  private ServiceCombSwaggerHandler serviceCombSwaggerHandler;\n+\n+  private ServiceCombDiscoveryProperties serviceCombDiscoveryProperties;\n+\n+  private TagsProperties tagsProperties;\n+\n+  private ServiceCombRegistration registration;\n+\n   public HeartbeatTask(HeartbeatRequest heartbeatRequest, ServiceCombClient serviceCombClient) {\n     this.heartbeatRequest = heartbeatRequest;\n     this.serviceCombClient = serviceCombClient;\n   }\n \n+  public void setServiceCombSwaggerHandler(\n+      ServiceCombSwaggerHandler serviceCombSwaggerHandler) {\n+    this.serviceCombSwaggerHandler = serviceCombSwaggerHandler;\n+  }\n+\n+  public void setServiceCombDiscoveryProperties(\n+      ServiceCombDiscoveryProperties serviceCombDiscoveryProperties) {\n+    this.serviceCombDiscoveryProperties = serviceCombDiscoveryProperties;\n+  }\n+\n+  public void setTagsProperties(\n+      TagsProperties tagsProperties) {\n+    this.tagsProperties = tagsProperties;\n+  }\n+\n+  public void setRegistration(\n+      ServiceCombRegistration registration) {\n+    this.registration = registration;\n+  }\n+\n   @Override\n   public void run() {\n     try {\n-      serviceCombClient.heartbeat(heartbeatRequest);\n+      HeardBeatStatus result = serviceCombClient.heartbeat(heartbeatRequest);\n+      if (result.equals(HeardBeatStatus.FAILED)) {\n+        retryRegister(registration);\n+      }\n     } catch (ServiceCombException e) {\n       LOGGER.warn(\"heartbeat failed.\", e);\n     }\n   }\n+\n+  private void retryRegister(ServiceCombRegistration registration) {\n+    LOGGER.info(\"retry registry to service center.\");\n+    Microservice microservice = RegistryHandler.buildMicroservice(registration);\n+    if (serviceCombSwaggerHandler != null) {\n+      serviceCombSwaggerHandler.init(serviceCombDiscoveryProperties.getAppName(),\n+          serviceCombDiscoveryProperties.getServiceName());\n+      microservice.setSchemas(serviceCombSwaggerHandler.getSchemas());\n+    }\n+    try {\n+      String serviceID = serviceCombClient.getServiceId(microservice);\n+      if (null == serviceID) {\n+        serviceID = serviceCombClient.registerMicroservice(microservice);\n+      }\n+      if (serviceCombSwaggerHandler != null) {\n+        serviceCombSwaggerHandler.registerSwagger(serviceID, microservice.getSchemas());\n+      }\n+      MicroserviceInstance microserviceInstance = RegistryHandler\n+          .buildMicroServiceInstances(serviceID, microservice, serviceCombDiscoveryProperties,\n+              tagsProperties);\n+      String instanceID = serviceCombClient.registerInstance(microserviceInstance);\n+      if (null != instanceID) {\n+        serviceCombClient.autoDiscovery(serviceCombDiscoveryProperties.isAutoDiscovery());\n+        return;\n+      }\n+      RegisterCache.setInstanceID(instanceID);\n+      RegisterCache.setServiceID(serviceID);\n+      LOGGER.info(\"register success,instanceID=\" + instanceID + \";serviceID=\" + serviceID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f210693ceb99db188cd2466899c4e24ad6f49ba"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY0MTI3OQ==", "bodyText": "enum\u7c7b\u578b\u6700\u597d\u76f4\u63a5\u7528 ==", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r397641279", "createdAt": "2020-03-25T06:58:05Z", "author": {"login": "jeho0815"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatTask.java", "diffHunk": "@@ -35,17 +42,86 @@\n \n   private ServiceCombClient serviceCombClient;\n \n+  private AtomicBoolean isInitialize = new AtomicBoolean(true);\n+\n+  private ServiceCombSwaggerHandler serviceCombSwaggerHandler;\n+\n+  private ServiceCombDiscoveryProperties serviceCombDiscoveryProperties;\n+\n+  private TagsProperties tagsProperties;\n+\n+  private ServiceCombRegistration registration;\n+\n   public HeartbeatTask(HeartbeatRequest heartbeatRequest, ServiceCombClient serviceCombClient) {\n     this.heartbeatRequest = heartbeatRequest;\n     this.serviceCombClient = serviceCombClient;\n   }\n \n+  public void setServiceCombSwaggerHandler(\n+      ServiceCombSwaggerHandler serviceCombSwaggerHandler) {\n+    this.serviceCombSwaggerHandler = serviceCombSwaggerHandler;\n+  }\n+\n+  public void setServiceCombDiscoveryProperties(\n+      ServiceCombDiscoveryProperties serviceCombDiscoveryProperties) {\n+    this.serviceCombDiscoveryProperties = serviceCombDiscoveryProperties;\n+  }\n+\n+  public void setTagsProperties(\n+      TagsProperties tagsProperties) {\n+    this.tagsProperties = tagsProperties;\n+  }\n+\n+  public void setRegistration(\n+      ServiceCombRegistration registration) {\n+    this.registration = registration;\n+  }\n+\n   @Override\n   public void run() {\n     try {\n-      serviceCombClient.heartbeat(heartbeatRequest);\n+      HeardBeatStatus result = serviceCombClient.heartbeat(heartbeatRequest);\n+      if (result.equals(HeardBeatStatus.FAILED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f210693ceb99db188cd2466899c4e24ad6f49ba"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98762b9f67e2635ad24041664aa2eccc403211df", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/98762b9f67e2635ad24041664aa2eccc403211df", "committedDate": "2020-03-25T07:31:58Z", "message": "modify as comment and fix bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b879bef7d136a701a1919d507c2d55b318a6b6a", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/8b879bef7d136a701a1919d507c2d55b318a6b6a", "committedDate": "2020-03-26T03:40:55Z", "message": "refactory the code / fix deregistry bug / avoid to log meaningless warn"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba01a785a9210c7c8bfa9549b1965a4f1211f273", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/ba01a785a9210c7c8bfa9549b1965a4f1211f273", "committedDate": "2020-03-26T03:44:17Z", "message": "modify code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjg4NjM2", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#pullrequestreview-381688636", "createdAt": "2020-03-26T04:02:18Z", "commit": {"oid": "ba01a785a9210c7c8bfa9549b1965a4f1211f273"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDowMjoxOFrOF72oQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDowMjoxOFrOF72oQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTM0NA==", "bodyText": "Why need add this line ?\nDefinition private WatchService watchService is never read after initialize in constructor, can removed", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398305344", "createdAt": "2020-03-26T04:02:18Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-common/src/main/java/com/huaweicloud/common/auth/AuthHeaderStrategyMount.java", "diffHunk": "@@ -51,6 +52,8 @@ public AuthHeaderStrategyMount() {\n           StandardWatchEventKinds.ENTRY_MODIFY,\n           StandardWatchEventKinds.ENTRY_CREATE);\n       executor.execute(new FileUpdateCheckThread(watchService));\n+    } catch (NoSuchFileException e) {\n+      //ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba01a785a9210c7c8bfa9549b1965a4f1211f273"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjg5Mjc3", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#pullrequestreview-381689277", "createdAt": "2020-03-26T04:04:48Z", "commit": {"oid": "ba01a785a9210c7c8bfa9549b1965a4f1211f273"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDowNDo0OVrOF72qcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDowNDo0OVrOF72qcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNTkwNQ==", "bodyText": "After  line 92 is better", "url": "https://github.com/huaweicloud/spring-cloud-huawei/pull/150#discussion_r398305905", "createdAt": "2020-03-26T04:04:49Z", "author": {"login": "liubao68"}, "path": "spring-cloud-huawei-servicecomb-discovery/src/main/java/com/huaweicloud/servicecomb/discovery/registry/HeartbeatScheduler.java", "diffHunk": "@@ -42,31 +52,86 @@\n \n   private ServiceCombClient serviceCombClient;\n \n+  private TagsProperties tagsProperties;\n+\n+  private ServiceCombSwaggerHandler serviceCombSwaggerHandler;\n+\n   public HeartbeatScheduler(ServiceCombDiscoveryProperties serviceCombDiscoveryProperties,\n-      ServiceCombClient serviceCombClient) {\n+      ServiceCombClient serviceCombClient, TagsProperties tagsProperties) {\n     this.serviceCombDiscoveryProperties = serviceCombDiscoveryProperties;\n     this.serviceCombClient = serviceCombClient;\n+    this.tagsProperties = tagsProperties;\n   }\n \n-  public void add(String instanceId, String serviceId) {\n+  public void add(ServiceCombRegistration registration,\n+      ServiceCombSwaggerHandler serviceCombSwaggerHandler) {\n     if (!serviceCombDiscoveryProperties.isHealthCheck()) {\n       return;\n     }\n-    HeartbeatRequest heartbeatRequest = new HeartbeatRequest(serviceId, instanceId);\n+    this.serviceCombSwaggerHandler = serviceCombSwaggerHandler;\n     ScheduledFuture currentTask = this.scheduler\n-        .scheduleWithFixedDelay(new HeartbeatTask(heartbeatRequest, serviceCombClient),\n+        .scheduleWithFixedDelay(() -> {\n+              try {\n+                HeartbeatRequest heartbeatRequest = new HeartbeatRequest(RegisterCache.getServiceID(),\n+                    RegisterCache.getInstanceID());\n+                HeardBeatStatus result = serviceCombClient.heartbeat(heartbeatRequest);\n+                if (result == HeardBeatStatus.FAILED) {\n+                  retryRegister(registration, heartbeatRequest.getInstances().get(0).getInstanceId());\n+                }\n+              } catch (ServiceCombException e) {\n+                LOGGER.warn(\"heartbeat failed.\", e);\n+              }\n+            },\n             serviceCombDiscoveryProperties.getHealthCheckInterval() * 1000);\n+    refreshLocalMap(RegisterCache.getInstanceID(), currentTask);\n+  }\n+\n+  public void remove() {\n+    ScheduledFuture scheduled = heartbeatRequestMap.get(RegisterCache.getInstanceID());\n+    if (null != scheduled) {\n+      scheduled.cancel(true);\n+    }\n+    heartbeatRequestMap.remove(RegisterCache.getInstanceID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba01a785a9210c7c8bfa9549b1965a4f1211f273"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d1d82d09484fcf74f809c751caddf59b3bb5fab", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/3d1d82d09484fcf74f809c751caddf59b3bb5fab", "committedDate": "2020-03-26T06:45:31Z", "message": "modify as comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f25d4b0381372152d8e7cc9ea7d8ba3afdda677c", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/f25d4b0381372152d8e7cc9ea7d8ba3afdda677c", "committedDate": "2020-03-26T04:49:48Z", "message": "modify as comment"}, "afterCommit": {"oid": "3d1d82d09484fcf74f809c751caddf59b3bb5fab", "author": {"user": {"login": "GuoYL123", "name": "GuoYL"}}, "url": "https://github.com/huaweicloud/spring-cloud-huawei/commit/3d1d82d09484fcf74f809c751caddf59b3bb5fab", "committedDate": "2020-03-26T06:45:31Z", "message": "modify as comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1824, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}