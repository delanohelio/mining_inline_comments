{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTYyNjA4", "number": 2002, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo1OTo1OVrOECFgng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo1OTo1OVrOECFgng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjIyODc4OnYy", "diffSide": "RIGHT", "path": "service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo1OTo1OVrOGeU23w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozNzo1OVrOGeWHAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ1MjE5MQ==", "bodyText": "this should work but wouldn't it be more straight-forward, easier to understand and less Spring dependent to simply add the Tracer as a parameter to HonoConnectionImpl's constructor?", "url": "https://github.com/eclipse/hono/pull/2002#discussion_r434452191", "createdAt": "2020-06-03T09:59:59Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java", "diffHunk": "@@ -444,15 +446,19 @@ public HonoConnection commandConsumerConnection() {\n      * Exposes a factory for creating clients for receiving upstream commands\n      * via the AMQP Messaging Network.\n      *\n+     * @param appContext The Spring application context.\n      * @return The factory.\n      */\n     @Bean\n     @Scope(\"prototype\")\n-    public ProtocolAdapterCommandConsumerFactory commandConsumerFactory() {\n+    public ProtocolAdapterCommandConsumerFactory commandConsumerFactory(final ApplicationContext appContext) {\n         // be sure to use a new ClientConfigProperties instance so that its unique container-id\n         // is only used for the specific consumer factory instance created here (as adapterInstanceId, which has to be unique)\n         final ClientConfigProperties clientConfigProperties = new ClientConfigProperties(commandConsumerFactoryConfig());\n         final HonoConnection honoConnection = HonoConnection.newConnection(vertx(), clientConfigProperties);\n+        // make sure the tracer instance gets autowired into the honoConnection\n+        appContext.getAutowireCapableBeanFactory()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66185b630ab5704b59a38f91b95edf063cd3b029"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3MjcwNA==", "bodyText": "yes, but I wanted to keep the change for 1.2.x here as small as possible. (In master, this change isn't needed.)\nIn master we can then get rid of autowiring the tracer instance.", "url": "https://github.com/eclipse/hono/pull/2002#discussion_r434472704", "createdAt": "2020-06-03T10:37:59Z", "author": {"login": "calohmn"}, "path": "service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java", "diffHunk": "@@ -444,15 +446,19 @@ public HonoConnection commandConsumerConnection() {\n      * Exposes a factory for creating clients for receiving upstream commands\n      * via the AMQP Messaging Network.\n      *\n+     * @param appContext The Spring application context.\n      * @return The factory.\n      */\n     @Bean\n     @Scope(\"prototype\")\n-    public ProtocolAdapterCommandConsumerFactory commandConsumerFactory() {\n+    public ProtocolAdapterCommandConsumerFactory commandConsumerFactory(final ApplicationContext appContext) {\n         // be sure to use a new ClientConfigProperties instance so that its unique container-id\n         // is only used for the specific consumer factory instance created here (as adapterInstanceId, which has to be unique)\n         final ClientConfigProperties clientConfigProperties = new ClientConfigProperties(commandConsumerFactoryConfig());\n         final HonoConnection honoConnection = HonoConnection.newConnection(vertx(), clientConfigProperties);\n+        // make sure the tracer instance gets autowired into the honoConnection\n+        appContext.getAutowireCapableBeanFactory()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ1MjE5MQ=="}, "originalCommit": {"oid": "66185b630ab5704b59a38f91b95edf063cd3b029"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3145, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}