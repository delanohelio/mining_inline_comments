{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NDYzODk3", "number": 2256, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxODowOFrOEvoeOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMToxNVrOEvoi2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgxNjI2OnYy", "diffSide": "RIGHT", "path": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxODowOFrOHkt8Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxODowOFrOHkt8Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2MzQ1NA==", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ PRECON_FAILED) ?", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508263454", "createdAt": "2020-10-20T07:18:08Z", "author": {"login": "sophokles73"}, "path": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java", "diffHunk": "@@ -276,15 +273,16 @@ public void testRemoveCommandHandlingAdapterInstanceFailsForOtherDevice(final Ve\n         info.setCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, deviceId, adapterInstance, null, span)\n         .compose(v -> {\n             return info.removeCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, \"otherDevice\", adapterInstance, span);\n-        }).onComplete(ctx.succeeding(result -> ctx.verify(() -> {\n-            assertThat(result).isFalse();\n+        }).onComplete(ctx.failing(t -> ctx.verify(() -> {\n+            assertThat(t).isInstanceOf(ServiceInvocationException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cae320d74235fd80e367ddcddc9909f307239b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgxNzM1OnYy", "diffSide": "RIGHT", "path": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxODoyNlrOHkt8wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxODoyNlrOHkt8wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2MzYxNg==", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ PRECON_FAILED)  ?", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508263616", "createdAt": "2020-10-20T07:18:26Z", "author": {"login": "sophokles73"}, "path": "client-device-connection-infinispan/src/test/java/org/eclipse/hono/deviceconnection/infinispan/client/CacheBasedDeviceConnectionInfoTest.java", "diffHunk": "@@ -295,8 +293,9 @@ public void testRemoveCommandHandlingAdapterInstanceFailsForOtherAdapterInstance\n         info.setCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, deviceId, adapterInstance, null, span)\n         .compose(v -> {\n             return info.removeCommandHandlingAdapterInstance(Constants.DEFAULT_TENANT, deviceId, \"otherAdapterInstance\", span);\n-        }).onComplete(ctx.succeeding(result -> ctx.verify(() -> {\n-            assertThat(result).isFalse();\n+        }).onComplete(ctx.failing(t -> ctx.verify(() -> {\n+            assertThat(t).isInstanceOf(ServiceInvocationException.class);\n+            assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cae320d74235fd80e367ddcddc9909f307239b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgxODQ2OnYy", "diffSide": "RIGHT", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxODo0OFrOHkt9fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxODo0OFrOHkt9fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2MzgwNQ==", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ PRECON_FAILED)", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508263805", "createdAt": "2020-10-20T07:18:48Z", "author": {"login": "sophokles73"}, "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -351,18 +350,18 @@ public void testRemoveCommandHandlingAdapterInstanceForNotFoundEntry(final Vertx\n \n         // WHEN removing the command handling adapter instance\n         client.removeCommandHandlingAdapterInstance(\"deviceId\", \"gatewayId\", span.context())\n-                .onComplete(ctx.succeeding(removed -> {\n+                .onComplete(ctx.failing(t -> {\n                     ctx.verify(() -> {\n                         // THEN the response has been handled and the span is finished\n-                        assertThat(removed).isFalse();\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_PRECON_FAILED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cae320d74235fd80e367ddcddc9909f307239b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgxOTU3OnYy", "diffSide": "RIGHT", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOTowNlrOHkt-IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOTowNlrOHkt-IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2Mzk2OA==", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ BAD_REQUEST)", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508263968", "createdAt": "2020-10-20T07:19:06Z", "author": {"login": "sophokles73"}, "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -415,8 +414,8 @@ public void testGetLastKnownGatewayForDeviceFailsWithRejectedRequest(final Vertx\n         // WHEN getting last known gateway information\n         client.getLastKnownGatewayForDevice(\"deviceId\", span.context())\n                 .onComplete(ctx.failing(t -> {\n-                    assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                     ctx.verify(() -> {\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cae320d74235fd80e367ddcddc9909f307239b"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgyMDQ3OnYy", "diffSide": "RIGHT", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOToxOVrOHkt-pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOToxOVrOHkt-pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NDEwMQ==", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ BAD_REQUEST)", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508264101", "createdAt": "2020-10-20T07:19:19Z", "author": {"login": "sophokles73"}, "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -481,8 +480,8 @@ public void testSetCommandHandlingAdapterInstanceFailsWithRejectedRequest(final\n         // WHEN setting the command handling adapter instance\n         client.setCommandHandlingAdapterInstance(\"deviceId\", \"adapterInstanceId\", null, span.context())\n                 .onComplete(ctx.failing(t -> {\n-                    assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                     ctx.verify(() -> {\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cae320d74235fd80e367ddcddc9909f307239b"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgyMDgwOnYy", "diffSide": "RIGHT", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOToyNFrOHkt-1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOToyNFrOHkt-1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NDE1MQ==", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ BAD_REQUEST)", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508264151", "createdAt": "2020-10-20T07:19:24Z", "author": {"login": "sophokles73"}, "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -514,8 +513,8 @@ public void testRemoveCommandHandlingAdapterInstanceFailsWithRejectedRequest(fin\n         // WHEN removing the command handling adapter instance\n         client.removeCommandHandlingAdapterInstance(\"deviceId\", \"adapterInstanceId\", span.context())\n                 .onComplete(ctx.failing(t -> {\n-                    assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                     ctx.verify(() -> {\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cae320d74235fd80e367ddcddc9909f307239b"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgyMTIzOnYy", "diffSide": "RIGHT", "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOTozMlrOHkt_Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoxOTozMlrOHkt_Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NDIxNA==", "bodyText": "assertThat(ServiceInvocationException.extractErrorCode(t)).isEqualsTo(HTTP_ BAD_REQUEST)", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508264214", "createdAt": "2020-10-20T07:19:32Z", "author": {"login": "sophokles73"}, "path": "client/src/test/java/org/eclipse/hono/client/impl/DeviceConnectionClientImplTest.java", "diffHunk": "@@ -547,8 +546,8 @@ public void testGetCommandHandlingAdapterInstancesFailsWithRejectedRequest(final\n         // WHEN getting the command handling adapter instances\n         client.getCommandHandlingAdapterInstances(\"deviceId\", Collections.emptyList(), span.context())\n                 .onComplete(ctx.failing(t -> {\n-                    assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);\n                     ctx.verify(() -> {\n+                        assertThat(((ServiceInvocationException) t).getErrorCode()).isEqualTo(HttpURLConnection.HTTP_BAD_REQUEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cae320d74235fd80e367ddcddc9909f307239b"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzgyODEwOnYy", "diffSide": "RIGHT", "path": "tests/src/test/java/org/eclipse/hono/tests/registry/DeviceConnectionApiTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMToxNVrOHkuDEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzoyMToxNVrOHkuDEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI2NTIzNA==", "bodyText": "the JavaDoc should be adapted as well ...", "url": "https://github.com/eclipse/hono/pull/2256#discussion_r508265234", "createdAt": "2020-10-20T07:21:15Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/registry/DeviceConnectionApiTests.java", "diffHunk": "@@ -201,15 +201,12 @@ public void testRemoveCommandHandlingAdapterInstanceSucceeds(final VertxTestCont\n                         .map(client))\n                 // then remove it\n                 .compose(client -> client.removeCommandHandlingAdapterInstance(deviceId, adapterInstance, null))\n-                .onComplete(ctx.succeeding(result -> {\n-                    ctx.verify(() -> assertThat(result).isTrue());\n-                    ctx.completeNow();\n-                }));\n+                .onComplete(ctx.completing());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2cae320d74235fd80e367ddcddc9909f307239b"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2827, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}