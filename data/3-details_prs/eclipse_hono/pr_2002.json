{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2OTYyNjA4", "number": 2002, "title": "1.2.x: Ensure Tracer gets autowired into HonoConnection", "bodyText": "This fixes the issue that some spans created during Command & Control handling are missing in the overall traces.\nOnly needed for 1.2.x.", "createdAt": "2020-06-03T04:59:01Z", "url": "https://github.com/eclipse/hono/pull/2002", "merged": true, "mergeCommit": {"oid": "539c92b7fb0cb3fdd0e897c823f460b2b78bf90d"}, "closed": true, "closedAt": "2020-06-03T12:39:15Z", "author": {"login": "calohmn"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcniI4UAH2gAyNDI2OTYyNjA4OjY2MTg1YjYzMGFiNTcwNGI1OWEzOGY5MWI5NWVkZjA2M2NkM2IwMjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnoukmAFqTQyMzUwNzAxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "66185b630ab5704b59a38f91b95edf063cd3b029", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/66185b630ab5704b59a38f91b95edf063cd3b029", "committedDate": "2020-06-03T04:55:36Z", "message": "Ensure Tracer gets autowired into HonoConnection.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNDAxNzA0", "url": "https://github.com/eclipse/hono/pull/2002#pullrequestreview-423401704", "createdAt": "2020-06-03T09:59:59Z", "commit": {"oid": "66185b630ab5704b59a38f91b95edf063cd3b029"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo1OTo1OVrOGeU23w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo1OTo1OVrOGeU23w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ1MjE5MQ==", "bodyText": "this should work but wouldn't it be more straight-forward, easier to understand and less Spring dependent to simply add the Tracer as a parameter to HonoConnectionImpl's constructor?", "url": "https://github.com/eclipse/hono/pull/2002#discussion_r434452191", "createdAt": "2020-06-03T09:59:59Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/AbstractAdapterConfig.java", "diffHunk": "@@ -444,15 +446,19 @@ public HonoConnection commandConsumerConnection() {\n      * Exposes a factory for creating clients for receiving upstream commands\n      * via the AMQP Messaging Network.\n      *\n+     * @param appContext The Spring application context.\n      * @return The factory.\n      */\n     @Bean\n     @Scope(\"prototype\")\n-    public ProtocolAdapterCommandConsumerFactory commandConsumerFactory() {\n+    public ProtocolAdapterCommandConsumerFactory commandConsumerFactory(final ApplicationContext appContext) {\n         // be sure to use a new ClientConfigProperties instance so that its unique container-id\n         // is only used for the specific consumer factory instance created here (as adapterInstanceId, which has to be unique)\n         final ClientConfigProperties clientConfigProperties = new ClientConfigProperties(commandConsumerFactoryConfig());\n         final HonoConnection honoConnection = HonoConnection.newConnection(vertx(), clientConfigProperties);\n+        // make sure the tracer instance gets autowired into the honoConnection\n+        appContext.getAutowireCapableBeanFactory()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66185b630ab5704b59a38f91b95edf063cd3b029"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNTA3MDE2", "url": "https://github.com/eclipse/hono/pull/2002#pullrequestreview-423507016", "createdAt": "2020-06-03T12:36:12Z", "commit": {"oid": "66185b630ab5704b59a38f91b95edf063cd3b029"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 654, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}