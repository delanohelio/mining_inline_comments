{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MTMwODM5", "number": 2366, "title": "[#2239] Add OpenAPI spec and prepare base classes for the new tenants search operation", "bodyText": "", "createdAt": "2020-12-10T17:58:03Z", "url": "https://github.com/eclipse/hono/pull/2366", "merged": true, "mergeCommit": {"oid": "448d0e58487dabb8eb348b7d6ab430ede9d2d0ef"}, "closed": true, "closedAt": "2020-12-17T12:49:40Z", "author": {"login": "kaniyan"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmFCnCAFqTU1MTMxOTk1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmZxi3ABqjQxMTQ0MDc4NDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMzE5OTU0", "url": "https://github.com/eclipse/hono/pull/2366#pullrequestreview-551319954", "createdAt": "2020-12-14T12:29:10Z", "commit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjoyOToxMFrOIFOLhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjozNzoxOVrOIFOdcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjExOQ==", "bodyText": "how about using a copy of the given list in order to prevent (unintended) changes to the result after creation of the SearchResult instance?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542346119", "createdAt": "2020-12-14T12:29:10Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n+        this.total = total;\n+        this.result = Objects.requireNonNull(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjkwOA==", "bodyText": "Do you expect this class to be created from JSON? My understanding is that this will be included in the response body only, right?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542346908", "createdAt": "2020-12-14T12:30:39Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0ODA0MQ==", "bodyText": "it is up to the ...", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542348041", "createdAt": "2020-12-14T12:32:44Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java", "diffHunk": "@@ -65,6 +71,43 @@\n      */\n     Future<OperationResult<Tenant>> readTenant(String tenantId, Span span);\n \n+    /**\n+     * Finds tenants with optional filters, paging and sorting options.\n+     * <p>\n+     * This search operation is considered as optional since it is not required for the normal functioning of Hono and\n+     * is more of a convenient operation. Hence here it is declared as a default method which returns\n+     * {@link HttpURLConnection#HTTP_NOT_IMPLEMENTED}. It is upto the implementors of this interface to offer an", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0OTU5Ng==", "bodyText": "can we please move this to below the definition of the Tenant object?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542349596", "createdAt": "2020-12-14T12:35:33Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1001,6 +1025,17 @@ components:\n             \"status\":\n                $ref: '#/components/schemas/Status'\n \n+      TenantWithId:\n+         type: object\n+         additionalProperties: false\n+         allOf:\n+            - type: object\n+              properties:\n+                 \"id\":\n+                    description: The identifier of the tenant.\n+                    type: string\n+            - $ref: '#/components/schemas/Tenant'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1MDcwNg==", "bodyText": "can you please rebase and then add the minimum property analogously to the devices search result?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542350706", "createdAt": "2020-12-14T12:37:19Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1040,6 +1075,19 @@ components:\n                description: Indicates if the northbound application was notified of the auto-provisioned device via an\n                   empty event.\n \n+      SearchTenantsResult:\n+         type: object\n+         description: The result of a search request for tenants.\n+         additionalProperties: false\n+         properties:\n+            \"total\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/de7de96dd7053edb0f862174873f7ec0783793d5", "committedDate": "2020-12-10T17:54:29Z", "message": "[#2239] Prepare base classes required for search tenants operation\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}, "afterCommit": {"oid": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "committedDate": "2020-12-15T08:36:03Z", "message": "[#2239] Implement review suggestions\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMzgwMjUy", "url": "https://github.com/eclipse/hono/pull/2366#pullrequestreview-552380252", "createdAt": "2020-12-15T12:01:41Z", "commit": {"oid": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjowMTo0MVrOIGHdIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjowMjozOFrOIGHfnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NDUxMg==", "bodyText": "I see", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543284512", "createdAt": "2020-12-15T12:01:41Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjkwOA=="}, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NTE0OQ==", "bodyText": "how about returning an unmodifiable view on the list instead to prevent (unintended) alterations?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543285149", "createdAt": "2020-12-15T12:02:38Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n+        Objects.requireNonNull(result);\n+\n+        this.total = total;\n+        this.result = new ArrayList<>(result);\n+    }\n+\n+    /**\n+     * Gets the total number of objects in the result set, regardless of the pageSize set in query.\n+     *\n+     * @return the total number of objects in the result set.\n+     */\n+    public int getTotal() {\n+        return total;\n+    }\n+\n+    /**\n+     * Gets the result list.\n+     *\n+     * @return the result list.\n+     */\n+    public List<T> getResult() {\n+        return result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7547068463c0ccfaa481a18a757909670e405e0d", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/7547068463c0ccfaa481a18a757909670e405e0d", "committedDate": "2020-12-15T12:38:35Z", "message": "[#2239] Add OpenAPI spec for search tenants operation\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f89be596cd621f6b9f2414aae3be6dfde0fa9a3", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/9f89be596cd621f6b9f2414aae3be6dfde0fa9a3", "committedDate": "2020-12-15T12:38:35Z", "message": "[#2239] Pull up Filter and Sort classes for reuse\n\nPull up Filter and Sort classes to package org.eclipse.hono.service.management\nfor reuse by the search tenants operation.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33397f8c0efeaa43b8b4e7b1dd8d83b66fa7f254", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/33397f8c0efeaa43b8b4e7b1dd8d83b66fa7f254", "committedDate": "2020-12-15T12:38:35Z", "message": "[#2239] Prepare base classes required for search tenants operation\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b67e50e90dc3888f4d0c614fed38ea5a29a9871", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/1b67e50e90dc3888f4d0c614fed38ea5a29a9871", "committedDate": "2020-12-15T12:38:35Z", "message": "[#2239] Implement review suggestions\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13b3d28546de048201186cd189e4e492fb6ba8de", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/13b3d28546de048201186cd189e4e492fb6ba8de", "committedDate": "2020-12-15T12:47:16Z", "message": "Return an unmodifiable view on the result list\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/07c98cfc37a0b8916d5ba8f0c16522c5ffda781f", "committedDate": "2020-12-15T08:36:03Z", "message": "[#2239] Implement review suggestions\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}, "afterCommit": {"oid": "13b3d28546de048201186cd189e4e492fb6ba8de", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/13b3d28546de048201186cd189e4e492fb6ba8de", "committedDate": "2020-12-15T12:47:16Z", "message": "Return an unmodifiable view on the result list\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 486, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}