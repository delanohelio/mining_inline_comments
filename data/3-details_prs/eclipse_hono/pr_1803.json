{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyOTUwOTc2", "number": 1803, "title": "[#1802] Refactor device management service to return future", "bodyText": "The idea is to incrementally address the issue #1802 in a series of PRs, so that it is easier to review. As part of this PR the DeviceManagementService is refactored to return vertx futures and also the related implementations.", "createdAt": "2020-03-03T13:28:33Z", "url": "https://github.com/eclipse/hono/pull/1803", "merged": true, "mergeCommit": {"oid": "e8744dfc6a576cc80ed3a0abb1b2c7e2a79b1989"}, "closed": true, "closedAt": "2020-03-06T11:54:15Z", "author": {"login": "kaniyan"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKEcR3AFqTM2ODA5Mzg3Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcK-uWeAFqTM3MDI2NzM0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MDkzODcz", "url": "https://github.com/eclipse/hono/pull/1803#pullrequestreview-368093873", "createdAt": "2020-03-03T15:48:15Z", "commit": {"oid": "75aaa49f8f58b85e5df8617aed7531e104507d70"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNTo0ODoxNVrOFxLY-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNTo1MDo1NFrOFxLgqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzExMTE2MA==", "bodyText": "It looks to me as if the\n.setHandler(ctx.succeeding(s -> Future.succeededFuture(s)))\npart can be removed.\nThe future returned by createDevice gets a handler here and is assigned to phase1Future.\nSome lines below the phase1Future gets a handler again, overwriting the previous one. Therefore the above line looks superfluous.\nSame applies to 7 other occurrences of a similar block in this class.", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r387111160", "createdAt": "2020-03-03T15:48:15Z", "author": {"login": "calohmn"}, "path": "service-base/src/test/java/org/eclipse/hono/service/credentials/AbstractCredentialsServiceTest.java", "diffHunk": "@@ -702,16 +700,15 @@ public void testDisableCredentials(final VertxTestContext ctx) {\n \n         // create device\n \n-        final Promise<?> phase1 = Promise.promise();\n-        getDeviceManagementService().createDevice(\n-                tenantId, Optional.of(deviceId), new Device(), NoopSpan.INSTANCE,\n-                ctx.succeeding(s -> phase1.complete()));\n+        final Future<OperationResult<Id>> phase1Future = getDeviceManagementService().createDevice(\n+                tenantId, Optional.of(deviceId), new Device(), NoopSpan.INSTANCE)\n+                .setHandler(ctx.succeeding(s -> Future.succeededFuture(s)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75aaa49f8f58b85e5df8617aed7531e104507d70"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzExMzEzMA==", "bodyText": "Using when(underTest.createDevice(...)).thenReturn(Future.succeededFuture(...)); looks simpler here.\nSame in 2 other places below.", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r387113130", "createdAt": "2020-03-03T15:50:54Z", "author": {"login": "calohmn"}, "path": "service-base/src/test/java/org/eclipse/hono/service/management/device/AutoProvisioningEnabledDeviceBackendTest.java", "diffHunk": "@@ -80,11 +80,9 @@ public void testProvisionDeviceSucceeds(final VertxTestContext ctx) {\n         final AutoProvisioningEnabledDeviceBackend underTest = mock(AutoProvisioningEnabledDeviceBackend.class);\n         when(underTest.provisionDevice(anyString(), any(), any())).thenCallRealMethod();\n \n-        doAnswer(invocation -> {\n-            final Promise<OperationResult<Id>> promise = invocation.getArgument(4);\n-            promise.complete(OperationResult.ok(201, Id.of(DEVICE_ID), Optional.empty(), Optional.empty()));\n-            return null;\n-        }).when(underTest).createDevice(any(), any(), any(), any(), any(Handler.class));\n+        doAnswer(invocation -> Future\n+                .succeededFuture(OperationResult.ok(201, Id.of(DEVICE_ID), Optional.empty(), Optional.empty()))\n+        ).when(underTest).createDevice(any(), any(), any(), any());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75aaa49f8f58b85e5df8617aed7531e104507d70"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75aaa49f8f58b85e5df8617aed7531e104507d70", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/75aaa49f8f58b85e5df8617aed7531e104507d70", "committedDate": "2020-03-03T13:06:11Z", "message": "[#1802] Refactor device management service to return future instead of passing on handler.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}, "afterCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/7a182aef81bba9ab9e047eb1db3b973cd70bca13", "committedDate": "2020-03-03T17:45:12Z", "message": "[#1802] Refactor device management service to return future instead of passing on handler.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDc3NDIw", "url": "https://github.com/eclipse/hono/pull/1803#pullrequestreview-369477420", "createdAt": "2020-03-05T11:03:19Z", "commit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMTowMzoxOVrOFyPQ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMToyNDowNlrOFyP4HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyMzIyNg==", "bodyText": "I guess this was added by mistake.", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r388223226", "createdAt": "2020-03-05T11:03:19Z", "author": {"login": "calohmn"}, "path": "service-base/src/main/java/org/eclipse/hono/service/management/device/DeviceManagementService.java", "diffHunk": "@@ -113,7 +110,7 @@ void updateDevice(String tenantId, String deviceId, Device device, Optional<Stri\n      * @throws NullPointerException if any of the parameters is {@code null}.\n      * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/deleteRegistration\">\n      *      Device Registry Management API - Delete Device Registration</a>\n+     * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyNTMyMQ==", "bodyText": "Indentation in this method seems non-standard.\nSomething which was there in the code before already: Since resourceVersion can be null, Optional.ofNullable(resourceVersion) should be used, I guess.", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r388225321", "createdAt": "2020-03-05T11:07:27Z", "author": {"login": "calohmn"}, "path": "service-base/src/test/java/org/eclipse/hono/service/registration/AbstractRegistrationServiceTest.java", "diffHunk": "@@ -655,27 +592,23 @@ public void testUpdateSucceedWithMissingResourceVersion(final VertxTestContext c\n     @Test\n     public void testUpdateSucceedWithCorrectResourceVersion(final VertxTestContext ctx) {\n \n-        final Promise<OperationResult<Id>> result = Promise.promise();\n         final Checkpoint register = ctx.checkpoint(2);\n         final JsonObject version = new JsonObject();\n \n-        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE, result);\n-        result.future()\n-        .map(response -> {\n-            assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n-            register.flag();\n-            return response;\n-        }).compose(rr -> {\n-            final Promise<OperationResult<Id>> update = Promise.promise();\n+        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE)\n+                .map(response -> {\n+                    assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n+                    register.flag();\n+                    return response;\n+                }).compose(rr -> {\n             final String resourceVersion = rr.getResourceVersion().orElse(null);\n             version.put(\"1\", resourceVersion);\n \n-            getDeviceManagementService().updateDevice(\n-                    TENANT, DEVICE,\n-                    new JsonObject().put(\"ext\", new JsonObject().put(\"customKey\", \"customValue\")).mapTo(Device.class),\n-                    Optional.of(resourceVersion), NoopSpan.INSTANCE,\n-                    update);\n-            return update.future();\n+            return getDeviceManagementService()\n+                    .updateDevice(TENANT, DEVICE,\n+                            new JsonObject().put(\"ext\", new JsonObject().put(\"customKey\", \"customValue\"))\n+                                    .mapTo(Device.class),\n+                            Optional.of(resourceVersion), NoopSpan.INSTANCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13"}, "originalPosition": 408}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIyNTU5MA==", "bodyText": "Indentation in this method seems non-standard.\nSomething which was there in the code before already: Since resourceVersion can be null, Optional.ofNullable(resourceVersion) should be used, I guess.", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r388225590", "createdAt": "2020-03-05T11:08:00Z", "author": {"login": "calohmn"}, "path": "service-base/src/test/java/org/eclipse/hono/service/registration/AbstractRegistrationServiceTest.java", "diffHunk": "@@ -724,22 +650,17 @@ public void testDeleteSucceedWithMissingResourceVersion(final VertxTestContext c\n     @Test\n     public void testDeleteSucceedWithCorrectResourceVersion(final VertxTestContext ctx) {\n \n-        final Promise<OperationResult<Id>> result = Promise.promise();\n         final Checkpoint register = ctx.checkpoint(2);\n \n-        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE, result);\n-        result.future()\n-        .map(response -> {\n-            assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n-            register.flag();\n-            return response;\n-        }).compose(rr -> {\n-            final Promise<Result<Void>> update = Promise.promise();\n+        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE)\n+                .map(response -> {\n+                    assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n+                    register.flag();\n+                    return response;\n+                }).compose(rr -> {\n             final String resourceVersion = rr.getResourceVersion().orElse(null);\n-\n-            getDeviceManagementService().deleteDevice(\n-                    TENANT, DEVICE, Optional.of(resourceVersion), NoopSpan.INSTANCE, update);\n-            return update.future();\n+            return getDeviceManagementService()\n+                    .deleteDevice(TENANT, DEVICE, Optional.of(resourceVersion), NoopSpan.INSTANCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13"}, "originalPosition": 471}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzMDc5Nw==", "bodyText": "Indentation in this method seems non-standard.", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r388230797", "createdAt": "2020-03-05T11:18:53Z", "author": {"login": "calohmn"}, "path": "service-base/src/test/java/org/eclipse/hono/service/registration/AbstractRegistrationServiceTest.java", "diffHunk": "@@ -513,23 +474,18 @@ public void testGetReturnsCopyOfOriginalData(final VertxTestContext ctx) {\n     @Test\n     public void testGetFailsForDeregisteredDevice(final VertxTestContext ctx) {\n \n-        final Promise<OperationResult<Id>> result = Promise.promise();\n         final Checkpoint get = ctx.checkpoint(3);\n \n-        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE, result);\n-        result.future()\n-        .compose(response -> {\n-            assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n-            get.flag();\n-            final Promise<Result<Void>> deregisterResult = Promise.promise();\n-            getDeviceManagementService().deleteDevice(TENANT, DEVICE, Optional.empty(), NoopSpan.INSTANCE, deregisterResult);\n-            return deregisterResult.future();\n-        }).compose(response -> {\n+        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE)\n+                .compose(response -> {\n+                    assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n+                    get.flag();\n+                    return getDeviceManagementService()\n+                            .deleteDevice(TENANT, DEVICE, Optional.empty(), NoopSpan.INSTANCE);\n+                }).compose(response -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13"}, "originalPosition": 242}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzMTAyNg==", "bodyText": "Indentation in this method seems non-standard.", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r388231026", "createdAt": "2020-03-05T11:19:24Z", "author": {"login": "calohmn"}, "path": "service-base/src/test/java/org/eclipse/hono/service/registration/AbstractRegistrationServiceTest.java", "diffHunk": "@@ -588,25 +538,20 @@ public void testAddSucceedAndContainsResourceVersion(final VertxTestContext ctx)\n     @Test\n     public void testUpdateFailsWithInvalidResourceVersion(final VertxTestContext ctx) {\n \n-        final Promise<OperationResult<Id>> result = Promise.promise();\n         final Checkpoint register = ctx.checkpoint(2);\n \n-        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE, result);\n-        result.future()\n-        .map(response -> {\n-            assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n-            register.flag();\n-            return response;\n-        }).compose(rr -> {\n-            final Promise<OperationResult<Id>> update = Promise.promise();\n+        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE)\n+                .map(response -> {\n+                    assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n+                    register.flag();\n+                    return response;\n+                }).compose(rr -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13"}, "originalPosition": 324}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzMTc4Mw==", "bodyText": "Indentation in this method seems non-standard.", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r388231783", "createdAt": "2020-03-05T11:21:03Z", "author": {"login": "calohmn"}, "path": "service-base/src/test/java/org/eclipse/hono/service/registration/AbstractRegistrationServiceTest.java", "diffHunk": "@@ -755,22 +676,17 @@ public void testDeleteSucceedWithCorrectResourceVersion(final VertxTestContext c\n     @Test\n     public void testDeleteFailsWithInvalidResourceVersion(final VertxTestContext ctx) {\n \n-        final Promise<OperationResult<Id>> result = Promise.promise();\n         final Checkpoint register = ctx.checkpoint(2);\n \n-        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE, result);\n-        result.future()\n-        .map(response -> {\n-            assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n-            register.flag();\n-            return response;\n-        }).compose(rr -> {\n-            final Promise<Result<Void>> update = Promise.promise();\n+        getDeviceManagementService().createDevice(TENANT, Optional.of(DEVICE), new Device(), NoopSpan.INSTANCE)\n+                .map(response -> {\n+                    assertEquals(HttpURLConnection.HTTP_CREATED, response.getStatus());\n+                    register.flag();\n+                    return response;\n+                }).compose(rr -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13"}, "originalPosition": 495}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzMzI0NQ==", "bodyText": "Can be simplified (when(underTest.deleteDevice)...).", "url": "https://github.com/eclipse/hono/pull/1803#discussion_r388233245", "createdAt": "2020-03-05T11:24:06Z", "author": {"login": "calohmn"}, "path": "service-base/src/test/java/org/eclipse/hono/service/management/device/AutoProvisioningEnabledDeviceBackendTest.java", "diffHunk": "@@ -119,17 +117,12 @@ public void testProvisionDeviceRemovesDeviceIfCredentialsCreationFails(final Ver\n         final AutoProvisioningEnabledDeviceBackend underTest = mock(AutoProvisioningEnabledDeviceBackend.class);\n         when(underTest.provisionDevice(anyString(), any(), any())).thenCallRealMethod();\n \n-        doAnswer(invocation -> {\n-            final Promise<OperationResult<Id>> promise = invocation.getArgument(4);\n-            promise.complete(OperationResult.ok(201, Id.of(DEVICE_ID), Optional.empty(), Optional.empty()));\n-            return null;\n-        }).when(underTest).createDevice(any(), any(), any(), any(), any(Handler.class));\n+        when(underTest.createDevice(any(), any(), any(), any()))\n+                .thenReturn(Future.succeededFuture(\n+                        OperationResult.ok(201, Id.of(DEVICE_ID), Optional.empty(), Optional.empty())));\n \n-        doAnswer(invocation -> {\n-            final Promise<Result<Void>> promise = invocation.getArgument(4);\n-            promise.complete(Result.from(204));\n-            return null;\n-        }).when(underTest).deleteDevice(any(), any(), any(), any(), any(Handler.class));\n+        doAnswer(invocation -> Future.succeededFuture(Result.from(204)))\n+                .when(underTest).deleteDevice(any(), any(), any(), any());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13"}, "originalPosition": 43}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a182aef81bba9ab9e047eb1db3b973cd70bca13", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/7a182aef81bba9ab9e047eb1db3b973cd70bca13", "committedDate": "2020-03-03T17:45:12Z", "message": "[#1802] Refactor device management service to return future instead of passing on handler.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}, "afterCommit": {"oid": "9c156814b319cf6f2f75fb5e4dc4aa28f506905a", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/9c156814b319cf6f2f75fb5e4dc4aa28f506905a", "committedDate": "2020-03-05T13:01:47Z", "message": "[#1802] Refactor device management service to return future instead of passing on handler.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfc2f2ef1d7a6ccb08b5f5e973525d600dc874e9", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/dfc2f2ef1d7a6ccb08b5f5e973525d600dc874e9", "committedDate": "2020-03-05T13:30:47Z", "message": "[#1802] Refactor device management service to return future instead of passing a handler as an argument.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c156814b319cf6f2f75fb5e4dc4aa28f506905a", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/9c156814b319cf6f2f75fb5e4dc4aa28f506905a", "committedDate": "2020-03-05T13:01:47Z", "message": "[#1802] Refactor device management service to return future instead of passing on handler.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}, "afterCommit": {"oid": "dfc2f2ef1d7a6ccb08b5f5e973525d600dc874e9", "author": {"user": {"login": "kaniyan", "name": "Karthees Kalidass"}}, "url": "https://github.com/eclipse/hono/commit/dfc2f2ef1d7a6ccb08b5f5e973525d600dc874e9", "committedDate": "2020-03-05T13:30:47Z", "message": "[#1802] Refactor device management service to return future instead of passing a handler as an argument.\n\nSigned-off-by: Kartheeswaran Kalidass <kartheeswaran.kalidass@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMjY3MzQ0", "url": "https://github.com/eclipse/hono/pull/1803#pullrequestreview-370267344", "createdAt": "2020-03-06T11:50:04Z", "commit": {"oid": "dfc2f2ef1d7a6ccb08b5f5e973525d600dc874e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 754, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}