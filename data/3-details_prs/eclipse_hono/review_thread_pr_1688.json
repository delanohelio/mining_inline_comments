{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MDExMzEx", "number": 1688, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo1NzowNFrODV6tjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNTozMTo0OVrODWAODw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzA4NjIyOnYy", "diffSide": "RIGHT", "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo1NzowNFrOFaYSFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo1NzowNFrOFaYSFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIwNTE0MQ==", "bodyText": "can we merge this with the previous message being logged to the current span?", "url": "https://github.com/eclipse/hono/pull/1688#discussion_r363205141", "createdAt": "2020-01-06T08:57:04Z", "author": {"login": "sophokles73"}, "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "diffHunk": "@@ -860,18 +879,21 @@ protected Integer getTimeUntilDisconnectFromRequest(final RoutingContext ctx) {\n      * @param deviceId The identifier of the device.\n      * @param currentSpan The <em>OpenTracing</em> Span used for tracking the processing of the request.\n      */\n-    private void addConnectionCloseHandler(\n+    private void setTtdRequestConnectionCloseHandler(\n             final RoutingContext ctx,\n             final MessageConsumer messageConsumer,\n             final String tenantId,\n             final String deviceId,\n             final Span currentSpan) {\n \n-        if (messageConsumer != null && !ctx.response().closed()) {\n+        if (messageConsumer != null && !ctx.response().closed() && !ctx.response().ended()) {\n             ctx.response().closeHandler(v -> {\n                 log.debug(\"device [tenant: {}, device-id: {}] closed connection before response could be sent\",\n                         tenantId, deviceId);\n                 currentSpan.log(\"device closed connection\");\n+                TracingHelper.logError(currentSpan, \"cannot send HTTP response to device: response already closed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bc36d61527f6ae0f1d1ae0839f8f388b93834e2"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzA5MTI5OnYy", "diffSide": "RIGHT", "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo1OTozOVrOFaYVCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo1OTozOVrOFaYVCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIwNTg5OQ==", "bodyText": "this handler seems to be useful/required for any request, not just TTD requests, doesn't it?", "url": "https://github.com/eclipse/hono/pull/1688#discussion_r363205899", "createdAt": "2020-01-06T08:59:39Z", "author": {"login": "sophokles73"}, "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "diffHunk": "@@ -860,18 +879,21 @@ protected Integer getTimeUntilDisconnectFromRequest(final RoutingContext ctx) {\n      * @param deviceId The identifier of the device.\n      * @param currentSpan The <em>OpenTracing</em> Span used for tracking the processing of the request.\n      */\n-    private void addConnectionCloseHandler(\n+    private void setTtdRequestConnectionCloseHandler(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bc36d61527f6ae0f1d1ae0839f8f388b93834e2"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzcwMjgwOnYy", "diffSide": "RIGHT", "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxMzo0Njo0NFrOFaeAFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDowNzoyMFrOFaef9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI5ODgzOQ==", "bodyText": "the close handler that is set here will be overwritten later by the doUploadMessage method, right?\nWhy don't we set a failure Handler here instead which finishes the root span and modify the doUploadMessage method to fail the RoutingContext e.g. with an IllegalStateException if the request is being closed before we can send the response or if sending the response fails?", "url": "https://github.com/eclipse/hono/pull/1688#discussion_r363298839", "createdAt": "2020-01-06T13:46:44Z", "author": {"login": "sophokles73"}, "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "diffHunk": "@@ -315,16 +316,24 @@ protected Router createRouter() {\n         final TracingHandler tracingHandler = createTracingHandler();\n         matchAllRoute.handler(tracingHandler).failureHandler(tracingHandler);\n \n-        // 3. default handler for failed routes\n+        // 3. handler to ensure tracing root span is finished if the request gets closed prematurely\n+        matchAllRoute.handler(ctx -> {\n+            if (!ctx.response().closed() && !ctx.response().ended()) {\n+                ctx.response().closeHandler(v -> finishRootSpanOnResponseGettingClosedPrematurely(ctx));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de081f735d826141aa68cc35dc369ca70c53e001"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMwNjk5OA==", "bodyText": "the close handler that is set here will be overwritten later by the doUploadMessage method, right?\n\nYes, that's intended.\n\nWhy don't we set a failure Handler here instead which finishes the root span and modify the doUploadMessage method to fail the RoutingContext e.g. with an IllegalStateException if the request is being closed before we can send the response or if sending the response fails?\n\nHmm, I'll think about that. I'm currently doing some more testing.", "url": "https://github.com/eclipse/hono/pull/1688#discussion_r363306998", "createdAt": "2020-01-06T14:07:20Z", "author": {"login": "calohmn"}, "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "diffHunk": "@@ -315,16 +316,24 @@ protected Router createRouter() {\n         final TracingHandler tracingHandler = createTracingHandler();\n         matchAllRoute.handler(tracingHandler).failureHandler(tracingHandler);\n \n-        // 3. default handler for failed routes\n+        // 3. handler to ensure tracing root span is finished if the request gets closed prematurely\n+        matchAllRoute.handler(ctx -> {\n+            if (!ctx.response().closed() && !ctx.response().ended()) {\n+                ctx.response().closeHandler(v -> finishRootSpanOnResponseGettingClosedPrematurely(ctx));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzI5ODgzOQ=="}, "originalCommit": {"oid": "de081f735d826141aa68cc35dc369ca70c53e001"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mzk4ODYzOnYy", "diffSide": "RIGHT", "path": "service-base/src/main/java/org/eclipse/hono/service/http/HttpUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNTozMTo0OVrOFaguPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwODozMzo0M1rOFayvjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM0MzQyMw==", "bodyText": "shouldn't this better be part of the condition in the first if statement?", "url": "https://github.com/eclipse/hono/pull/1688#discussion_r363343423", "createdAt": "2020-01-06T15:31:49Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/http/HttpUtils.java", "diffHunk": "@@ -181,7 +181,7 @@ public static void failWithHeaders(\n         if (ctx.failed() || ctx.response().ended()) {\n             // nothing to do\n         } else {\n-            if (headers != null) {\n+            if (headers != null && !ctx.response().closed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2305fa040fa360a277a2764e297061b349e0ed"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM2OTM2Nw==", "bodyText": "No, if the response is closed but not failed/ended yet, the fail method should get called here (which then also causes the TracingHandler failureHandler to get called).\nThe extra closed check above is to ensure that the putHeader invocation doesn't throw an exception. It would do so for a closed response using Vert.x 3.7.1 (Hono 1.0). In Vert.x 3.8.4 (Hono master) this check isn't strictly needed any more, but I think the extra condition doesn't hurt here.", "url": "https://github.com/eclipse/hono/pull/1688#discussion_r363369367", "createdAt": "2020-01-06T16:26:27Z", "author": {"login": "calohmn"}, "path": "service-base/src/main/java/org/eclipse/hono/service/http/HttpUtils.java", "diffHunk": "@@ -181,7 +181,7 @@ public static void failWithHeaders(\n         if (ctx.failed() || ctx.response().ended()) {\n             // nothing to do\n         } else {\n-            if (headers != null) {\n+            if (headers != null && !ctx.response().closed()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM0MzQyMw=="}, "originalCommit": {"oid": "ce2305fa040fa360a277a2764e297061b349e0ed"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzMTI5Mg==", "bodyText": "I see, then adding a corresponding comment would improve readability a lot here FMPOV.", "url": "https://github.com/eclipse/hono/pull/1688#discussion_r363631292", "createdAt": "2020-01-07T08:11:01Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/http/HttpUtils.java", "diffHunk": "@@ -181,7 +181,7 @@ public static void failWithHeaders(\n         if (ctx.failed() || ctx.response().ended()) {\n             // nothing to do\n         } else {\n-            if (headers != null) {\n+            if (headers != null && !ctx.response().closed()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM0MzQyMw=="}, "originalCommit": {"oid": "ce2305fa040fa360a277a2764e297061b349e0ed"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzODY3MQ==", "bodyText": "Yes, I've added comments.", "url": "https://github.com/eclipse/hono/pull/1688#discussion_r363638671", "createdAt": "2020-01-07T08:33:43Z", "author": {"login": "calohmn"}, "path": "service-base/src/main/java/org/eclipse/hono/service/http/HttpUtils.java", "diffHunk": "@@ -181,7 +181,7 @@ public static void failWithHeaders(\n         if (ctx.failed() || ctx.response().ended()) {\n             // nothing to do\n         } else {\n-            if (headers != null) {\n+            if (headers != null && !ctx.response().closed()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM0MzQyMw=="}, "originalCommit": {"oid": "ce2305fa040fa360a277a2764e297061b349e0ed"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3381, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}