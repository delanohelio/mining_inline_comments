{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1ODcwNjM4", "number": 2323, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzo1NDo0OVrOE9g8UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzo1NDo0OVrOE9g8UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTM4MzIwOnYy", "diffSide": "RIGHT", "path": "services/command-router/src/main/java/org/eclipse/hono/commandrouter/ApplicationConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzo1NDo0OVrOH6PY2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwODo0NToyMVrOH6RHxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMTU3Ng==", "bodyText": "how about adding this as the default implementation to org.eclipse.hono.service.amqp.AbstractDelegatingRequestResponseEndpoint?\nIt seems to make a lot of sense to register these checks automatically, doesn't it?", "url": "https://github.com/eclipse/hono/pull/2323#discussion_r530831576", "createdAt": "2020-11-26T07:54:49Z", "author": {"login": "sophokles73"}, "path": "services/command-router/src/main/java/org/eclipse/hono/commandrouter/ApplicationConfig.java", "diffHunk": "@@ -172,13 +174,28 @@ public ObjectFactoryCreatingFactoryBean amqpServerFactory() {\n     /**\n      * Creates a new instance of an AMQP 1.0 protocol handler for Hono's <em>Command Router</em> API.\n      *\n-     * @param service The service instance to delegate to.\n      * @return The handler.\n      */\n     @Bean\n     @Scope(\"prototype\")\n-    public AmqpEndpoint commandRouterAmqpEndpoint(final CommandRouterService service) {\n-        return new DelegatingCommandRouterAmqpEndpoint<>(vertx(), service);\n+    public AmqpEndpoint commandRouterAmqpEndpoint() {\n+        final CommandRouterService commandRouterService = commandRouterService();\n+        return new DelegatingCommandRouterAmqpEndpoint<>(vertx(), commandRouterService) {\n+\n+            @Override\n+            public void registerLivenessChecks(final HealthCheckHandler handler) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ba04b4675c82a233b037286e2a183f6329df6e1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg0NDgwMQ==", "bodyText": "I also thought about this. But that would have implications on the hono-service-device-connection module and its usage of the DelegatingDeviceConnectionAmqpEndpoint class, where the given service implementation is already registered with the health check by other means (done in the Application class there).", "url": "https://github.com/eclipse/hono/pull/2323#discussion_r530844801", "createdAt": "2020-11-26T08:20:40Z", "author": {"login": "calohmn"}, "path": "services/command-router/src/main/java/org/eclipse/hono/commandrouter/ApplicationConfig.java", "diffHunk": "@@ -172,13 +174,28 @@ public ObjectFactoryCreatingFactoryBean amqpServerFactory() {\n     /**\n      * Creates a new instance of an AMQP 1.0 protocol handler for Hono's <em>Command Router</em> API.\n      *\n-     * @param service The service instance to delegate to.\n      * @return The handler.\n      */\n     @Bean\n     @Scope(\"prototype\")\n-    public AmqpEndpoint commandRouterAmqpEndpoint(final CommandRouterService service) {\n-        return new DelegatingCommandRouterAmqpEndpoint<>(vertx(), service);\n+    public AmqpEndpoint commandRouterAmqpEndpoint() {\n+        final CommandRouterService commandRouterService = commandRouterService();\n+        return new DelegatingCommandRouterAmqpEndpoint<>(vertx(), commandRouterService) {\n+\n+            @Override\n+            public void registerLivenessChecks(final HealthCheckHandler handler) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMTU3Ng=="}, "originalCommit": {"oid": "9ba04b4675c82a233b037286e2a183f6329df6e1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1OTk3Mg==", "bodyText": "I see, then let's keep it like this for the time being ...", "url": "https://github.com/eclipse/hono/pull/2323#discussion_r530859972", "createdAt": "2020-11-26T08:45:21Z", "author": {"login": "sophokles73"}, "path": "services/command-router/src/main/java/org/eclipse/hono/commandrouter/ApplicationConfig.java", "diffHunk": "@@ -172,13 +174,28 @@ public ObjectFactoryCreatingFactoryBean amqpServerFactory() {\n     /**\n      * Creates a new instance of an AMQP 1.0 protocol handler for Hono's <em>Command Router</em> API.\n      *\n-     * @param service The service instance to delegate to.\n      * @return The handler.\n      */\n     @Bean\n     @Scope(\"prototype\")\n-    public AmqpEndpoint commandRouterAmqpEndpoint(final CommandRouterService service) {\n-        return new DelegatingCommandRouterAmqpEndpoint<>(vertx(), service);\n+    public AmqpEndpoint commandRouterAmqpEndpoint() {\n+        final CommandRouterService commandRouterService = commandRouterService();\n+        return new DelegatingCommandRouterAmqpEndpoint<>(vertx(), commandRouterService) {\n+\n+            @Override\n+            public void registerLivenessChecks(final HealthCheckHandler handler) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMTU3Ng=="}, "originalCommit": {"oid": "9ba04b4675c82a233b037286e2a183f6329df6e1"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2911, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}