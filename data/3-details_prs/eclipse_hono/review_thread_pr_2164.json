{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTE2MzU2", "number": 2164, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo1NzoyNFrOEhNaug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxNToxNVrOEhS7Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjU4Mjk4OnYy", "diffSide": "RIGHT", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo1NzoyNFrOHOZfcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxNTozNFrOHOiGnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1OTc2MA==", "bodyText": "if the result is a JsonArray (as the previous line seems to indicate), then we should probably try to find the matching credentials among the elements of that array instead of just matching the first element, right?", "url": "https://github.com/eclipse/hono/pull/2164#discussion_r484859760", "createdAt": "2020-09-08T11:57:24Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java", "diffHunk": "@@ -382,6 +383,8 @@ private CompositeFuture createIndices() {\n                         .flatMap(ok -> Optional\n                                 .ofNullable(result.getJsonArray(MongoDbDeviceRegistryUtils.FIELD_CREDENTIALS))\n                                 .map(credential -> credential.getJsonObject(0))\n+                                .filter(credential -> DeviceRegistryUtils.matchesWithClientContext(credential,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1120e627848109f7ec3ba8b80cd7c80d323dff8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg4NDE0Ng==", "bodyText": "AFAIK, at any case there won't be more than one element. The result is obtained by matching tenantId, authId and type. No two records can have same value for those fields.", "url": "https://github.com/eclipse/hono/pull/2164#discussion_r484884146", "createdAt": "2020-09-08T12:41:23Z", "author": {"login": "kaniyan"}, "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java", "diffHunk": "@@ -382,6 +383,8 @@ private CompositeFuture createIndices() {\n                         .flatMap(ok -> Optional\n                                 .ofNullable(result.getJsonArray(MongoDbDeviceRegistryUtils.FIELD_CREDENTIALS))\n                                 .map(credential -> credential.getJsonObject(0))\n+                                .filter(credential -> DeviceRegistryUtils.matchesWithClientContext(credential,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1OTc2MA=="}, "originalCommit": {"oid": "b1120e627848109f7ec3ba8b80cd7c80d323dff8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwMDg2MQ==", "bodyText": "Yes, that is true for our implementation at hand.", "url": "https://github.com/eclipse/hono/pull/2164#discussion_r485000861", "createdAt": "2020-09-08T15:15:34Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedCredentialsService.java", "diffHunk": "@@ -382,6 +383,8 @@ private CompositeFuture createIndices() {\n                         .flatMap(ok -> Optional\n                                 .ofNullable(result.getJsonArray(MongoDbDeviceRegistryUtils.FIELD_CREDENTIALS))\n                                 .map(credential -> credential.getJsonObject(0))\n+                                .filter(credential -> DeviceRegistryUtils.matchesWithClientContext(credential,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1OTc2MA=="}, "originalCommit": {"oid": "b1120e627848109f7ec3ba8b80cd7c80d323dff8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzQ4NTY3OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/util/DeviceRegistryUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToxNToxNVrOHOiFsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoxNzoyNVrOHPJnzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwMDYyNw==", "bodyText": "It would be good to describe how the client context is matched against the extension properties as I do not think that this is straight forward.", "url": "https://github.com/eclipse/hono/pull/2164#discussion_r485000627", "createdAt": "2020-09-08T15:15:15Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/util/DeviceRegistryUtils.java", "diffHunk": "@@ -242,4 +242,39 @@ public static void checkCredential(\n             }\n         }\n     }\n+\n+    /**\n+     * Checks if the properties in the given client context matches with the extension properties of ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1120e627848109f7ec3ba8b80cd7c80d323dff8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU4Mjk2Nw==", "bodyText": "How about describing (how is being matched) in the paragraph next to the description as below?  WDYT?\n    /**\n     * Checks if the properties in the given client context matches with the extension properties of the\n     * given credential.\n     * <p>\n     * The matching properties in the client context and credential extensions are filtered out based \n     * on their property names. If their values are equal then {@code true} is returned. Otherwise {@code false}.", "url": "https://github.com/eclipse/hono/pull/2164#discussion_r485582967", "createdAt": "2020-09-09T12:47:42Z", "author": {"login": "kaniyan"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/util/DeviceRegistryUtils.java", "diffHunk": "@@ -242,4 +242,39 @@ public static void checkCredential(\n             }\n         }\n     }\n+\n+    /**\n+     * Checks if the properties in the given client context matches with the extension properties of ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwMDYyNw=="}, "originalCommit": {"oid": "b1120e627848109f7ec3ba8b80cd7c80d323dff8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTYxNDkyOQ==", "bodyText": "we'll also need to mention the special handling of properties that only exist in the context but not in the extensions ...", "url": "https://github.com/eclipse/hono/pull/2164#discussion_r485614929", "createdAt": "2020-09-09T13:34:08Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/util/DeviceRegistryUtils.java", "diffHunk": "@@ -242,4 +242,39 @@ public static void checkCredential(\n             }\n         }\n     }\n+\n+    /**\n+     * Checks if the properties in the given client context matches with the extension properties of ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwMDYyNw=="}, "originalCommit": {"oid": "b1120e627848109f7ec3ba8b80cd7c80d323dff8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0ODMzMw==", "bodyText": "I have also added the above to the JavaDoc.", "url": "https://github.com/eclipse/hono/pull/2164#discussion_r485648333", "createdAt": "2020-09-09T14:17:25Z", "author": {"login": "kaniyan"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/util/DeviceRegistryUtils.java", "diffHunk": "@@ -242,4 +242,39 @@ public static void checkCredential(\n             }\n         }\n     }\n+\n+    /**\n+     * Checks if the properties in the given client context matches with the extension properties of ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAwMDYyNw=="}, "originalCommit": {"oid": "b1120e627848109f7ec3ba8b80cd7c80d323dff8"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3042, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}