{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTMxNjkx", "number": 1844, "title": "Provide abstract base classes for implementing device registries", "bodyText": "", "createdAt": "2020-03-19T10:53:27Z", "url": "https://github.com/eclipse/hono/pull/1844", "merged": true, "mergeCommit": {"oid": "562fcf4ad900b8b4eeb7f0635eea04f59398e1fa"}, "closed": true, "closedAt": "2020-03-20T14:58:05Z", "author": {"login": "dejanb"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPJsgJAH2gAyMzkwOTMxNjkxOjQxMzM2YWU5ZWUwYjhjNmJjMWMzZjI3NzI4NTkzYmQzYjA1NTBiNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPf_F5gFqTM3ODQ1NDA0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "41336ae9ee0b8c6bc1c3f27728593bd3b0550b50", "author": {"user": {"login": "dejanb", "name": "Dejan Bosanac"}}, "url": "https://github.com/eclipse/hono/commit/41336ae9ee0b8c6bc1c3f27728593bd3b0550b50", "committedDate": "2020-03-19T10:52:42Z", "message": "Provide abstract base classes for implementing device registries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3ODc1MzI5", "url": "https://github.com/eclipse/hono/pull/1844#pullrequestreview-377875329", "createdAt": "2020-03-19T16:14:00Z", "commit": {"oid": "41336ae9ee0b8c6bc1c3f27728593bd3b0550b50"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxNDowMFrOF4132A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxNDowMFrOF4132A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0NzIyNA==", "bodyText": "Is that intentional?", "url": "https://github.com/eclipse/hono/pull/1844#discussion_r395147224", "createdAt": "2020-03-19T16:14:00Z", "author": {"login": "ctron"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.deviceregistry.service.credentials;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import org.eclipse.hono.deviceregistry.service.device.DeviceKey;\n+import org.eclipse.hono.deviceregistry.service.tenant.TenantInformationService;\n+import org.eclipse.hono.service.management.OperationResult;\n+import org.eclipse.hono.service.management.credentials.CommonCredential;\n+import org.eclipse.hono.service.management.credentials.CredentialsManagementService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import io.opentracing.Span;\n+import io.vertx.core.Future;\n+\n+/**\n+ * An abstract base class implementation for {@link CredentialsManagementService}.\n+ * <p>\n+ * It checks the parameters, validate tenant using {@link TenantInformationService} and creates {@link DeviceKey} for looking up the credentials.\n+ */\n+public abstract class AbstractCredentialsManagementService implements CredentialsManagementService {\n+\n+    protected TenantInformationService tenantInformationService;\n+\n+    /**\n+     * Set tenant information service.\n+     * @param tenantInformationService The tenant information service.\n+     */\n+    @Autowired\n+    public void setTenantInformationService(final TenantInformationService tenantInformationService) {\n+        this.tenantInformationService = tenantInformationService;\n+    }\n+\n+    /**\n+     * Update credentials with a specified device key and value objects.\n+     *\n+     * @param key The device key object.\n+     * @param resourceVersion The identifier of the resource version to update.\n+     * @param credentials The credentials value object.\n+     * @param span The active OpenTracing span for this operation.\n+     * @return A future indicating the outcome of the operation.\n+     */\n+    protected abstract Future<OperationResult<Void>> processUpdateCredentials(DeviceKey key, Optional<String> resourceVersion, List<CommonCredential> credentials, Span span);\n+\n+    /**\n+     * Read credentials with a specified device key.\n+     *\n+     * @param key The device key object.\n+     * @param span The active OpenTracing span for this operation.\n+     * @return A future indicating the outcome of the operation.\n+     */\n+    protected abstract Future<OperationResult<List<CommonCredential>>> processReadCredentials(DeviceKey key, Span span);\n+\n+    @Override\n+    public Future<OperationResult<Void>> updateCredentials(final String tenantId, final String deviceId, final List<CommonCredential> credentials, final Optional<String> resourceVersion, final Span span) {\n+        Objects.requireNonNull(tenantId);\n+        Objects.requireNonNull(deviceId);\n+        Objects.requireNonNull(resourceVersion);\n+\n+        //TODO add credentials verification and encoding logic here to be shared between implementations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41336ae9ee0b8c6bc1c3f27728593bd3b0550b50"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NDU0MDQ5", "url": "https://github.com/eclipse/hono/pull/1844#pullrequestreview-378454049", "createdAt": "2020-03-20T12:50:55Z", "commit": {"oid": "41336ae9ee0b8c6bc1c3f27728593bd3b0550b50"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 811, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}