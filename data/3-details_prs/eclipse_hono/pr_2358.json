{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MTMyOTQ1", "number": 2358, "title": "#2053 implicit device registration file registry", "bodyText": "This pull request depends on #2094 being merged first.\nSo I guess it makes sense to review the second commit only.\nNote however that this PR partially shares changes with #2359 and #2360 in order to not depend these being merged before.", "createdAt": "2020-12-09T12:08:03Z", "url": "https://github.com/eclipse/hono/pull/2358", "merged": true, "mergeCommit": {"oid": "2ec7dfd126df83cb77a097c284da37da5b975ce2"}, "closed": true, "closedAt": "2021-01-04T16:45:58Z", "author": {"login": "fkaltner"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkf-cJAFqTU0ODIyNzAzMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABds4VBggFqTU2MTEzMjkyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MjI3MDMy", "url": "https://github.com/eclipse/hono/pull/2358#pullrequestreview-548227032", "createdAt": "2020-12-09T14:18:05Z", "commit": {"oid": "5a4b36078499017859323746a4e44e8809b6fad8"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxODowNlrOICW4Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDo0NToyM1rOICYP6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0MjkwMw==", "bodyText": "not needed here", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r539342903", "createdAt": "2020-12-09T14:18:06Z", "author": {"login": "calohmn"}, "path": "services/device-registry-base/src/test/java/org/eclipse/hono/service/management/device/DelegatingDeviceManagementHttpEndpointTest.java", "diffHunk": "@@ -196,6 +198,88 @@ public void testCreateDeviceRejectsInvalidPayload() {\n         verify(service, never()).createDevice(anyString(), any(Optional.class), any(Device.class), any(Span.class));\n     }\n \n+    /**\n+     * Makes sure that status properties are ignored when creating a device management via the REST API.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Test\n+    public void testCreateDeviceIgnoresStatus() {\n+\n+        final JsonObject json = new JsonObject()\n+                .put(RegistryManagementConstants.FIELD_ENABLED, true)\n+                .put(RegistryManagementConstants.FIELD_STATUS, new JsonObject().put(\"created\", \"foobar\"));\n+        requestBody = json.toBuffer();\n+        final HttpServerResponse response = newResponse();\n+\n+        final HttpServerRequest request = newRequest(\n+                HttpMethod.POST,\n+                \"/v1/devices/mytenant/newdevice\",\n+                requestHeaders,\n+                requestParams,\n+                response);\n+        when(request.getHeader(\"Content-Type\")).thenReturn(\"application/json\");\n+\n+        when(service.createDevice(anyString(), any(Optional.class), any(Device.class), any(Span.class)))\n+                .thenAnswer(invocation -> {\n+                    final Optional<String> deviceId = invocation.getArgument(1);\n+                    return Future.succeededFuture(OperationResult.ok(\n+                            HttpURLConnection.HTTP_CREATED,\n+                            Id.of(deviceId.get()),\n+                            Optional.empty(),\n+                            Optional.empty()));\n+                });\n+\n+        router.handle(request);\n+\n+        verify(response).setStatusCode(HttpURLConnection.HTTP_CREATED);\n+\n+        final ArgumentCaptor<Device> deviceArgumentCaptor = ArgumentCaptor.forClass(Device.class);\n+        verify(service).createDevice(anyString(), any(Optional.class), deviceArgumentCaptor.capture(), any(Span.class));\n+\n+        assertThat(deviceArgumentCaptor.getValue().getStatus()).isNull();\n+    }\n+\n+    /**\n+     * Makes sure that status properties are ignored when updating a device management via the REST API.\n+     */\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4b36078499017859323746a4e44e8809b6fad8"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM0NDg1Ng==", "bodyText": "VertxMockSupport.anyHandler() can be used instead of any(Handler.class) to prevent the \"unchecked assignment\" warning.", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r539344856", "createdAt": "2020-12-09T14:20:24Z", "author": {"login": "calohmn"}, "path": "services/device-registry-file/src/test/java/org/eclipse/hono/deviceregistry/file/FileBasedRegistrationServiceTest.java", "diffHunk": "@@ -87,6 +90,21 @@ public void setUp() {\n \n         registrationService = new FileBasedRegistrationService(vertx);\n         registrationService.setConfig(registrationConfig);\n+\n+        final AutoProvisioner autoProvisioner = new AutoProvisioner(registrationService, registrationService);\n+        autoProvisioner.setConfig(new AutoProvisionerConfigProperties());\n+\n+        final DownstreamSenderFactory downstreamSenderFactoryMock = mock(DownstreamSenderFactory.class);\n+        when(downstreamSenderFactoryMock.connect()).thenReturn(Future.succeededFuture());\n+        doAnswer(invocation -> {\n+            final Handler<AsyncResult<Void>> handler = invocation.getArgument(0);\n+            handler.handle(Future.succeededFuture());\n+            return null;\n+        }).when(downstreamSenderFactoryMock).disconnect(any(Handler.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4b36078499017859323746a4e44e8809b6fad8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM2NTM1NA==", "bodyText": "It looks to me as if invoking autoProvisioner.setTracer() and autoProvisioner.setTenantInformationService() is missing here.", "url": "https://github.com/eclipse/hono/pull/2358#discussion_r539365354", "createdAt": "2020-12-09T14:45:23Z", "author": {"login": "calohmn"}, "path": "services/device-registry-file/src/main/java/org/eclipse/hono/deviceregistry/file/FileBasedServiceConfig.java", "diffHunk": "@@ -139,6 +199,13 @@ public FileBasedDeviceBackend deviceBackend(final Vertx vertx) {\n         final FileBasedRegistrationService registrationService = new FileBasedRegistrationService(vertx);\n         registrationService.setConfig(registrationProperties());\n \n+        final AutoProvisioner autoProvisioner = new AutoProvisioner(registrationService, registrationService);\n+        autoProvisioner.setVertx(vertx);\n+        autoProvisioner.setDownstreamSenderFactory(downstreamSenderFactory(vertx));\n+        autoProvisioner.setConfig(autoProvisionerConfigProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4b36078499017859323746a4e44e8809b6fad8"}, "originalPosition": 90}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59f7033870e65ca3d98765fee4eb6f569cede04c", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/59f7033870e65ca3d98765fee4eb6f569cede04c", "committedDate": "2020-12-09T16:01:16Z", "message": "Review suggestions calohmn\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "b3e3253c39cc35033827df862c75d1abc4145c82", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/b3e3253c39cc35033827df862c75d1abc4145c82", "committedDate": "2020-12-10T08:23:17Z", "message": "Review suggestions calohmn\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3e3253c39cc35033827df862c75d1abc4145c82", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/b3e3253c39cc35033827df862c75d1abc4145c82", "committedDate": "2020-12-10T08:23:17Z", "message": "Review suggestions calohmn\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "e4623e4efaf491b3d48fcb7be6dbec6729d3922f", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/e4623e4efaf491b3d48fcb7be6dbec6729d3922f", "committedDate": "2020-12-10T14:33:47Z", "message": "Review suggestions calohmn\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4623e4efaf491b3d48fcb7be6dbec6729d3922f", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/e4623e4efaf491b3d48fcb7be6dbec6729d3922f", "committedDate": "2020-12-10T14:33:47Z", "message": "Review suggestions calohmn\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "2db6355efd8bb6075d2ddd9a1a4a8ebf968ffb1f", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/2db6355efd8bb6075d2ddd9a1a4a8ebf968ffb1f", "committedDate": "2020-12-16T10:18:52Z", "message": "[#2053] Adding capability to auto-provision devices to file-based device registry.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d1ba77f6f7dc8fb68874786daf06b79943bb970", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/7d1ba77f6f7dc8fb68874786daf06b79943bb970", "committedDate": "2020-12-16T10:58:07Z", "message": "[#2053] Adding capability to auto-provision devices to file-based device registry.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2db6355efd8bb6075d2ddd9a1a4a8ebf968ffb1f", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/2db6355efd8bb6075d2ddd9a1a4a8ebf968ffb1f", "committedDate": "2020-12-16T10:18:52Z", "message": "[#2053] Adding capability to auto-provision devices to file-based device registry.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "7d1ba77f6f7dc8fb68874786daf06b79943bb970", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/7d1ba77f6f7dc8fb68874786daf06b79943bb970", "committedDate": "2020-12-16T10:58:07Z", "message": "[#2053] Adding capability to auto-provision devices to file-based device registry.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMTMyOTIy", "url": "https://github.com/eclipse/hono/pull/2358#pullrequestreview-561132922", "createdAt": "2021-01-04T15:47:33Z", "commit": {"oid": "7d1ba77f6f7dc8fb68874786daf06b79943bb970"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 478, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}