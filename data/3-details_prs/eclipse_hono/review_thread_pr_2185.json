{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NDY2NzA4", "number": 2185, "reviewThreads": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzozNzozM1rOEkaAXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoyMDowOFrOEo4mXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEwMjcxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/ServerErrorException.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzozNzozM1rOHTVTkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNzoxNzozNlrOHVDInA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNDA2Nw==", "bodyText": "this looks like it would be helpful in both ClientErrorException and ServerErrorException. Thus, IMHO we should add this to ServiceInvocationException.", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490034067", "createdAt": "2020-09-17T07:37:33Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/ServerErrorException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n     private static final long serialVersionUID = 1L;\n \n+    private String clientFacingMessage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc0ODk0OQ==", "bodyText": "The motivation to put it only in the ServerErrorException class was that the standard error message of a ClientErrorException is already a client-facing one, i.e. it is used in the HTTP response for example:\n\n  \n    \n      hono/adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java\n    \n    \n        Lines 787 to 789\n      in\n      0e440ef\n    \n    \n    \n    \n\n        \n          \n           if (ClientErrorException.class.isInstance(t)) { \n        \n\n        \n          \n               outcome = ProcessingOutcome.UNPROCESSABLE; \n        \n\n        \n          \n               ctx.fail(t); \n        \n    \n  \n\n\nI see a ServerErrorException as more of an internal exception, where it makes sense to add a separate error message that abstracts from the internals.", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490748949", "createdAt": "2020-09-18T07:15:38Z", "author": {"login": "calohmn"}, "path": "client/src/main/java/org/eclipse/hono/client/ServerErrorException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n     private static final long serialVersionUID = 1L;\n \n+    private String clientFacingMessage;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNDA2Nw=="}, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzMzUwMA==", "bodyText": "I see", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r491833500", "createdAt": "2020-09-21T07:17:36Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/ServerErrorException.java", "diffHunk": "@@ -21,6 +21,8 @@\n \n     private static final long serialVersionUID = 1L;\n \n+    private String clientFacingMessage;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNDA2Nw=="}, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEwMzg5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/ServerErrorException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzozNzo1M1rOHTVUOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzozNzo1M1rOHTVUOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNDIzNQ==", "bodyText": "final?", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490034235", "createdAt": "2020-09-17T07:37:53Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/ServerErrorException.java", "diffHunk": "@@ -115,4 +117,22 @@ public ServerErrorException(final String tenant, final int errorCode, final Stri\n             throw new IllegalArgumentException(\"client error code must be >= 500 and < 600\");\n         }\n     }\n+\n+    /**\n+     * Gets the error message suitable to be propagated to an external client.\n+     *\n+     * @return The message or {@code null}.\n+     */\n+    public String getClientFacingMessage() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEwNDI3OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/ServerErrorException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzozODowMFrOHTVUcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzozODowMFrOHTVUcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNDI5MQ==", "bodyText": "final ?", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490034291", "createdAt": "2020-09-17T07:38:00Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/ServerErrorException.java", "diffHunk": "@@ -115,4 +117,22 @@ public ServerErrorException(final String tenant, final int errorCode, final Stri\n             throw new IllegalArgumentException(\"client error code must be >= 500 and < 600\");\n         }\n     }\n+\n+    /**\n+     * Gets the error message suitable to be propagated to an external client.\n+     *\n+     * @return The message or {@code null}.\n+     */\n+    public String getClientFacingMessage() {\n+        return clientFacingMessage;\n+    }\n+\n+    /**\n+     * Sets the error message suitable to be propagated to an external client.\n+     *\n+     * @param clientFacingMessage The message.\n+     */\n+    public void setClientFacingMessage(final String clientFacingMessage) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjExNDQxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0MDo0OFrOHTVaqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNzo0Njo1OVrOHVD_Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNTg4MQ==", "bodyText": "FMPOV you have now opened Pandora's Box of (localized) messages ;-)\nI do not think that we should populate our constants classes with full fledged error messages ...\nInstead, we should probably use resource bundles which have been designed for this purpose.", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490035881", "createdAt": "2020-09-17T07:40:48Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "diffHunk": "@@ -56,6 +56,24 @@\n  */\n public abstract class AbstractSender extends AbstractHonoClient implements MessageSender {\n \n+    /**\n+     * Client facing error message for the case of a message sender not receiving a delivery update in time.\n+     * May be used as {@link ServerErrorException#clientFacingMessage}.\n+     */\n+    public static final String ERROR_SEND_MESSAGE_TIMEOUT = \"consumer failed to indicate in time whether it has processed the message\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDc1MzQ5MQ==", "bodyText": "Using a resource bundle just for these error messages seems a bit overkill to me. We also don't use a resource bundle for the ClientErrorException messages already being included in HTTP responses.\nI mainly introduced these constants to match the error message in the unit tests. As we rarely use such error message checks in unit tests, I could just remove them and then also remove the constants.", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490753491", "createdAt": "2020-09-18T07:25:03Z", "author": {"login": "calohmn"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "diffHunk": "@@ -56,6 +56,24 @@\n  */\n public abstract class AbstractSender extends AbstractHonoClient implements MessageSender {\n \n+    /**\n+     * Client facing error message for the case of a message sender not receiving a delivery update in time.\n+     * May be used as {@link ServerErrorException#clientFacingMessage}.\n+     */\n+    public static final String ERROR_SEND_MESSAGE_TIMEOUT = \"consumer failed to indicate in time whether it has processed the message\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNTg4MQ=="}, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgzNDEwMg==", "bodyText": "FMPOV it would actually be the right choice for the problem at hand. I also do not think that it is much effort to implement.", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r491834102", "createdAt": "2020-09-21T07:19:06Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "diffHunk": "@@ -56,6 +56,24 @@\n  */\n public abstract class AbstractSender extends AbstractHonoClient implements MessageSender {\n \n+    /**\n+     * Client facing error message for the case of a message sender not receiving a delivery update in time.\n+     * May be used as {@link ServerErrorException#clientFacingMessage}.\n+     */\n+    public static final String ERROR_SEND_MESSAGE_TIMEOUT = \"consumer failed to indicate in time whether it has processed the message\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNTg4MQ=="}, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0Mzk3Mg==", "bodyText": "So you mean introducing a resource bundle, used then also for the ClientErrorException messages?", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r491843972", "createdAt": "2020-09-21T07:40:26Z", "author": {"login": "calohmn"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "diffHunk": "@@ -56,6 +56,24 @@\n  */\n public abstract class AbstractSender extends AbstractHonoClient implements MessageSender {\n \n+    /**\n+     * Client facing error message for the case of a message sender not receiving a delivery update in time.\n+     * May be used as {@link ServerErrorException#clientFacingMessage}.\n+     */\n+    public static final String ERROR_SEND_MESSAGE_TIMEOUT = \"consumer failed to indicate in time whether it has processed the message\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNTg4MQ=="}, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg0NzQzMA==", "bodyText": "You mean for the already existing messages? IMHO that should be the goal then, yes. We could maybe use a step-by-step approach here but in the end we should use the same mechanism. FMPOV this is even more desirable if we want to provide more elaborate messages than bad JSON ...", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r491847430", "createdAt": "2020-09-21T07:46:59Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "diffHunk": "@@ -56,6 +56,24 @@\n  */\n public abstract class AbstractSender extends AbstractHonoClient implements MessageSender {\n \n+    /**\n+     * Client facing error message for the case of a message sender not receiving a delivery update in time.\n+     * May be used as {@link ServerErrorException#clientFacingMessage}.\n+     */\n+    public static final String ERROR_SEND_MESSAGE_TIMEOUT = \"consumer failed to indicate in time whether it has processed the message\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNTg4MQ=="}, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEyNzQ1OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NDoyMlrOHTVihA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwODoyMjoyMVrOHTW81Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNzg5Mg==", "bodyText": "no comma here", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490037892", "createdAt": "2020-09-17T07:44:22Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -86,15 +86,18 @@ The device is authenticated using PSK.\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA2MTAxMw==", "bodyText": "Comma needed before and linking two independent clauses here.", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490061013", "createdAt": "2020-09-17T08:22:21Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -86,15 +86,18 @@ The device is authenticated using PSK.\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzNzg5Mg=="}, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzNDM0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NjowOVrOHTVmxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NjowOVrOHTVmxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzODk4MA==", "bodyText": "payload is unspecific here, analogously to how people is usually used...", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490038980", "createdAt": "2020-09-17T07:46:09Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -131,7 +134,7 @@ coap-client -u sensor1@DEFAULT_TENANT -k hono-secret -m POST coaps://hono.eclips\n ~~~\n \n {{% note %}}\n-In the example above the response actually contains payload that should be used as input to a command to be executed by the device.\n+In the example above the response actually contains a payload that should be used as input to a command to be executed by the device.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzNDgyOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NjoxOFrOHTVnEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NjoxOFrOHTVnEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTA1Nw==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039057", "createdAt": "2020-09-17T07:46:18Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -171,16 +174,19 @@ send any commands to the device.\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzNTM4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NjoyN1rOHTVnZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NjoyN1rOHTVnZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTE0MA==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039140", "createdAt": "2020-09-17T07:46:27Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -245,7 +251,7 @@ coap-client -m PUT coap://hono.eclipseprojects.io/telemetry/DEFAULT_TENANT/4711?\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzNTczOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NjozNVrOHTVnpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NjozNVrOHTVnpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTIwNQ==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039205", "createdAt": "2020-09-17T07:46:35Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -329,15 +338,14 @@ The device is authenticated using PSK.\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzNzA4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0Njo1N1rOHTVobQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0Njo1N1rOHTVobQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTQwNQ==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039405", "createdAt": "2020-09-17T07:46:57Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -329,15 +338,14 @@ The device is authenticated using PSK.\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.\n   * 4.03 (Forbidden): The request cannot be processed because the device's registration status cannot be asserted.\n     Possible reasons for this include:\n         * The given tenant is not allowed to use this protocol adapter.\n   * 4.04 (Not Found): The request cannot be processed because the device is disabled or does not exist.\n   * 4.13 (Request Entity Too Large): The request cannot be processed because the request body exceeds the maximum supported size.\n   * 4.29 (Too Many Requests): The request cannot be processed because the tenant's message limit for the current period is exceeded.\n-  * 5.03 (Service Unavailable): The request cannot be processed because there is no consumer of telemetry data for the given tenant\n-    connected to Hono.\n+  * 5.03 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono, or the consumer didn't process the event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzODA0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NzoxNFrOHTVpAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NzoxNFrOHTVpAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTU1Mw==", "bodyText": "unspecific", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039553", "createdAt": "2020-09-17T07:47:14Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -368,7 +376,7 @@ coap-client -u sensor1@DEFAULT_TENANT -k hono-secret -m POST coaps://hono.eclips\n ~~~\n \n {{% note %}}\n-In the example above the response actually contains payload that should be used as input to a command to be executed by the device.\n+In the example above the response actually contains a payload that should be used as input to a command to be executed by the device.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzODUxOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NzoyM1rOHTVpRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NzoyM1rOHTVpRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTYyMQ==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039621", "createdAt": "2020-09-17T07:47:23Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -406,16 +414,15 @@ send any commands to the device.\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzOTIwOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NzozNFrOHTVptQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0NzozNFrOHTVptQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTczMw==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039733", "createdAt": "2020-09-17T07:47:34Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -406,16 +414,15 @@ send any commands to the device.\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.\n   * 4.03 (Forbidden): The request cannot be processed because the device's registration status cannot be asserted.\n     Possible reasons for this include:\n         * The given tenant is not allowed to use this protocol adapter.\n         * The given device does not belong to the given tenant.\n   * 4.04 (Not Found): The request cannot be processed because the device is disabled or does not exist.\n   * 4.13 (Request Entity Too Large): The request cannot be processed because the request body exceeds the maximum supported size.\n   * 4.29 (Too Many Requests): The request cannot be processed because the tenant's message limit for the current period is exceeded.\n-  * 5.03 (Service Unavailable): The request cannot be processed because there is no consumer of telemetry data for the given tenant\n-    connected to Hono.\n+  * 5.03 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono, or the consumer didn't process the event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjEzOTUzOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0Nzo0MVrOHTVp7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0Nzo0MVrOHTVp7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTc5MQ==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039791", "createdAt": "2020-09-17T07:47:41Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -472,7 +479,7 @@ coap-client -m PUT coap://hono.eclipseprojects.io/event/DEFAULT_TENANT/4711?hono\n     delivered to any potential consumer (yet). However, if the message type is `CON` (*at least once* semantics), then the adapter waits\n     for the message to be delivered and accepted by a downstream consumer before responding with this status code.\n   * 4.00 (Bad Request): The request cannot be processed. Possible reasons include:\n-         * the request body is empty and the *URI-query* option doesn't contain the `empty` parameter\n+         * the request body is empty, and the *URI-query* option doesn't contain the `empty` parameter.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE0MDE0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/coap-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0Nzo0OVrOHTVqQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0Nzo0OVrOHTVqQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAzOTg3NA==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490039874", "createdAt": "2020-09-17T07:47:49Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/coap-adapter.md", "diffHunk": "@@ -482,8 +489,7 @@ coap-client -m PUT coap://hono.eclipseprojects.io/event/DEFAULT_TENANT/4711?hono\n   * 4.04 (Not Found): The request cannot be processed because the device is disabled or does not exist.\n   * 4.13 (Request Entity Too Large): The request cannot be processed because the request body exceeds the maximum supported size.\n   * 4.29 (Too Many Requests): The request cannot be processed because the tenant's message limit for the current period is exceeded.\n-  * 5.03 (Service Unavailable): The request cannot be processed because there is no consumer of telemetry data for the given tenant\n-    connected to Hono.\n+  * 5.03 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono, or the consumer didn't process the event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE0MTA3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/http-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0ODowM1rOHTVq0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0ODowM1rOHTVq0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0MDAxOA==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490040018", "createdAt": "2020-09-17T07:48:03Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/http-adapter.md", "diffHunk": "@@ -306,7 +318,7 @@ content-length: 23\n   * 404 (Not Found): The request cannot be processed because the device is disabled or does not exist.\n   * 413 (Request Entity Too Large): The request cannot be processed because the request body exceeds the maximum supported size.\n   * 429 (Too Many Requests): The request cannot be processed because the tenant's message limit for the current period is exceeded.\n-  * 503 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono.\n+  * 503 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono, or the consumer didn't process the event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE0MTc0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/http-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0ODoxMlrOHTVrNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0ODoxMlrOHTVrNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0MDExNw==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490040117", "createdAt": "2020-09-17T07:48:12Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/http-adapter.md", "diffHunk": "@@ -350,7 +362,7 @@ content-length: 0\n   * 404 (Not Found): The request cannot be processed because the device is disabled or does not exist.\n   * 413 (Request Entity Too Large): The request cannot be processed because the request body exceeds the maximum supported size.\n   * 429 (Too Many Requests): The request cannot be processed because the tenant's message limit for the current period is exceeded.\n-  * 503 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono.\n+  * 503 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono, or the consumer didn't process the event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjE0MjI0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/user-guide/http-adapter.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0ODoyMFrOHTVrhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzo0ODoyMFrOHTVrhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDA0MDE5Nw==", "bodyText": "no comma", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r490040197", "createdAt": "2020-09-17T07:48:20Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/http-adapter.md", "diffHunk": "@@ -399,7 +411,7 @@ content-length: 0\n   * 404 (Not Found): The request cannot be processed because the device is disabled or does not exist.\n   * 413 (Request Entity Too Large): The request cannot be processed because the request body exceeds the maximum supported size.\n   * 429 (Too Many Requests): The request cannot be processed because the tenant's message limit for the current period is exceeded.\n-  * 503 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono.\n+  * 503 (Service Unavailable): The request cannot be processed because there is no consumer of events for the given tenant connected to Hono, or the consumer didn't process the event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d907b5a0687dc3fcb4b4608d69c0a11e56ca3e7"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzkyNDY4OnYy", "diffSide": "RIGHT", "path": "client/src/main/resources/org/eclipse/hono/client/ServiceInvocationException_messages.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjo1MzozNFrOHZdXQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjo1MzozNFrOHZdXQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1NzUzNw==", "bodyText": "how about sorting these alphabetically?", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r496457537", "createdAt": "2020-09-29T06:53:34Z", "author": {"login": "sophokles73"}, "path": "client/src/main/resources/org/eclipse/hono/client/ServiceInvocationException_messages.properties", "diffHunk": "@@ -0,0 +1,17 @@\n+###############################################################################\n+# Copyright (c) 2020 Contributors to the Eclipse Foundation\n+#\n+# See the NOTICE file(s) distributed with this work for additional\n+# information regarding copyright ownership.\n+#\n+# This program and the accompanying materials are made available under the\n+# terms of the Eclipse Public License 2.0 which is available at\n+# http://www.eclipse.org/legal/epl-2.0\n+#\n+# SPDX-License-Identifier: EPL-2.0\n+###############################################################################\n+\n+# ServiceInvocationException messages\n+SERVER_ERROR_SEND_MESSAGE_TIMEOUT=consumer failed to indicate in time whether it has processed the message\n+SERVER_ERROR_MESSAGE_NOT_PROCESSED=consumer didn't process the message\n+SERVER_ERROR_NO_CONSUMER=no consumer available", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d02ff00b51af7d1e9e08e4d8e3516ca5bd9019b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzk0MDI3OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjo1ODozMlrOHZdgpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODoyNTowOFrOHZhXOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1OTk0MA==", "bodyText": "the consumer did not process the message in this case as well", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r496459940", "createdAt": "2020-09-29T06:58:32Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "diffHunk": "@@ -304,10 +307,15 @@ protected final Span startSpan(final Message message) {\n                                 : new ClientErrorException(HttpURLConnection.HTTP_BAD_REQUEST, rejected.getError().getDescription());\n                     } else if (Released.class.isInstance(remoteState)) {\n                         e = new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE);\n+                        ((ServerErrorException) e).setClientFacingMessage(ServerErrorMessage.MESSAGE_NOT_PROCESSED);\n                     } else if (Modified.class.isInstance(remoteState)) {\n                         final Modified modified = (Modified) deliveryUpdated.getRemoteState();\n-                        e = modified.getUndeliverableHere() ? new ClientErrorException(HttpURLConnection.HTTP_NOT_FOUND)\n-                                : new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE);\n+                        if (modified.getUndeliverableHere()) {\n+                            e = new ClientErrorException(HttpURLConnection.HTTP_NOT_FOUND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d02ff00b51af7d1e9e08e4d8e3516ca5bd9019b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUyMzA2Nw==", "bodyText": "yes, but I think the \"not found/don't try again\" semantics of the exception would then need to be put into the message as well. How about using\nSERVER_ERROR_MESSAGE_UNDELIVERABLE=consumer declared message as undeliverable, it should not be redelivered\nhere?", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r496523067", "createdAt": "2020-09-29T08:25:08Z", "author": {"login": "calohmn"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/AbstractSender.java", "diffHunk": "@@ -304,10 +307,15 @@ protected final Span startSpan(final Message message) {\n                                 : new ClientErrorException(HttpURLConnection.HTTP_BAD_REQUEST, rejected.getError().getDescription());\n                     } else if (Released.class.isInstance(remoteState)) {\n                         e = new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE);\n+                        ((ServerErrorException) e).setClientFacingMessage(ServerErrorMessage.MESSAGE_NOT_PROCESSED);\n                     } else if (Modified.class.isInstance(remoteState)) {\n                         final Modified modified = (Modified) deliveryUpdated.getRemoteState();\n-                        e = modified.getUndeliverableHere() ? new ClientErrorException(HttpURLConnection.HTTP_NOT_FOUND)\n-                                : new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE);\n+                        if (modified.getUndeliverableHere()) {\n+                            e = new ClientErrorException(HttpURLConnection.HTTP_NOT_FOUND);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1OTk0MA=="}, "originalCommit": {"oid": "3d02ff00b51af7d1e9e08e4d8e3516ca5bd9019b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTYwMzkyOnYy", "diffSide": "RIGHT", "path": "tests/src/test/java/org/eclipse/hono/tests/http/TelemetryHttpIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzozOTozM1rOHZtq8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoyNjo0MVrOHZv_yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcyNDcyMA==", "bodyText": "wow, this looks terrible, doesn't it ;-)\nMaybe we can add a static String ServiceInvocationException.getLocalizedMessage(String) method which accepts a key instead?", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r496724720", "createdAt": "2020-09-29T13:39:33Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/http/TelemetryHttpIT.java", "diffHunk": "@@ -214,6 +221,10 @@ public void testUploadQos1MessageFailsIfDeliveryStateNotUpdated(final VertxTestC\n \n         httpResponseFuture\n                 .onComplete(ctx.succeeding(response -> {\n+                    ctx.verify(() -> {\n+                        assertThat(response.bodyAsString())\n+                                .isEqualTo(new SendMessageTimeoutException(\"\").getClientFacingMessage());\n+                    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9a6ebfe1ce61c1445638fdbc7feb2a8f0118234"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc2MjgyNw==", "bodyText": "Well, I agree that it doesn't look pretty and I was actually a bit hesitant, using that. However, it's in a test and as an advantage, the resource handling and keys can be kept internal to the exception classes that way.\nBut ok, I've changed it to use ServiceInvocationException.getLocalizedMessage() now.", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r496762827", "createdAt": "2020-09-29T14:26:41Z", "author": {"login": "calohmn"}, "path": "tests/src/test/java/org/eclipse/hono/tests/http/TelemetryHttpIT.java", "diffHunk": "@@ -214,6 +221,10 @@ public void testUploadQos1MessageFailsIfDeliveryStateNotUpdated(final VertxTestC\n \n         httpResponseFuture\n                 .onComplete(ctx.succeeding(response -> {\n+                    ctx.verify(() -> {\n+                        assertThat(response.bodyAsString())\n+                                .isEqualTo(new SendMessageTimeoutException(\"\").getClientFacingMessage());\n+                    });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcyNDcyMA=="}, "originalCommit": {"oid": "a9a6ebfe1ce61c1445638fdbc7feb2a8f0118234"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzA1ODIwOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/NoConsumerException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwNjoyMDowOFrOHaOwyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDowODoxNFrOHaWjoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2Njg4OA==", "bodyText": "IMHO it would be helpful to explain that apart from the given message, the clientFacingMessage will be set to a certain key. This is also true for the other exception classes. WDYT?", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r497266888", "createdAt": "2020-09-30T06:20:08Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/NoConsumerException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.client;\n+\n+import java.net.HttpURLConnection;\n+\n+/**\n+ * A {@link ServerErrorException} indicating that there is no consumer for the request message.\n+ */\n+public class NoConsumerException extends ServerErrorException {\n+\n+    /**\n+     * Resource key for the client facing error message.\n+     */\n+    public static final String CLIENT_FACING_MESSAGE_KEY = \"SERVER_ERROR_NO_CONSUMER\";\n+\n+    /**\n+     * Creates a new NoConsumerException.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b11db74260a05f84f8cdacafb8bece5ac116630"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5NDU5Mg==", "bodyText": "I've amended the commit accordingly.", "url": "https://github.com/eclipse/hono/pull/2185#discussion_r497394592", "createdAt": "2020-09-30T10:08:14Z", "author": {"login": "calohmn"}, "path": "client/src/main/java/org/eclipse/hono/client/NoConsumerException.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.client;\n+\n+import java.net.HttpURLConnection;\n+\n+/**\n+ * A {@link ServerErrorException} indicating that there is no consumer for the request message.\n+ */\n+public class NoConsumerException extends ServerErrorException {\n+\n+    /**\n+     * Resource key for the client facing error message.\n+     */\n+    public static final String CLIENT_FACING_MESSAGE_KEY = \"SERVER_ERROR_NO_CONSUMER\";\n+\n+    /**\n+     * Creates a new NoConsumerException.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI2Njg4OA=="}, "originalCommit": {"oid": "5b11db74260a05f84f8cdacafb8bece5ac116630"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3060, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}