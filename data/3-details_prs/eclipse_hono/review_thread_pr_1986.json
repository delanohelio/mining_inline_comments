{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NDA0OTQ0", "number": 1986, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxNDozN1rOEK3s1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxNDozN1rOEK3s1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODMzODEyOnYy", "diffSide": "RIGHT", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/DefaultDeviceResolver.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxNDozN1rOGsKMSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNToyNTo0MlrOGsRyfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NzUxNQ==", "bodyText": "which component invokes this method and when?", "url": "https://github.com/eclipse/hono/pull/1986#discussion_r448957515", "createdAt": "2020-07-02T12:14:37Z", "author": {"login": "sophokles73"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/DefaultDeviceResolver.java", "diffHunk": "@@ -240,4 +256,24 @@ private PreSharedKeyDeviceIdentity getHandshakeIdentity(final Span span, final S\n         final String splitRegex = config.isSingleTenant() ? null : config.getIdSplitRegex();\n         return PreSharedKeyDeviceIdentity.create(span, identity, splitRegex);\n     }\n+\n+    @Override\n+    public boolean hasEcdhePskSupported() {\n+        return true;\n+    }\n+\n+    @Override\n+    public PskSecretResult requestPskSecretResult(final ConnectionId cid, final ServerNames serverName,\n+            final PskPublicInformation identity, final String hmacAlgorithm, final SecretKey otherSecret,\n+            final byte[] seed) {\n+\n+        context.runOnContext((v) -> loadCredentialsForDevice(cid, identity));\n+        return null;\n+    }\n+\n+    @Override\n+    public void setResultHandler(final PskSecretResultHandler resultHandler) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6c19f90f57abfbdfb48331b82cd2e9d1012cfad"}, "originalPosition": 281}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk2MTk3OQ==", "bodyText": "The DTLSConnector in initialization.", "url": "https://github.com/eclipse/hono/pull/1986#discussion_r448961979", "createdAt": "2020-07-02T12:23:04Z", "author": {"login": "boaks"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/DefaultDeviceResolver.java", "diffHunk": "@@ -240,4 +256,24 @@ private PreSharedKeyDeviceIdentity getHandshakeIdentity(final Span span, final S\n         final String splitRegex = config.isSingleTenant() ? null : config.getIdSplitRegex();\n         return PreSharedKeyDeviceIdentity.create(span, identity, splitRegex);\n     }\n+\n+    @Override\n+    public boolean hasEcdhePskSupported() {\n+        return true;\n+    }\n+\n+    @Override\n+    public PskSecretResult requestPskSecretResult(final ConnectionId cid, final ServerNames serverName,\n+            final PskPublicInformation identity, final String hmacAlgorithm, final SecretKey otherSecret,\n+            final byte[] seed) {\n+\n+        context.runOnContext((v) -> loadCredentialsForDevice(cid, identity));\n+        return null;\n+    }\n+\n+    @Override\n+    public void setResultHandler(final PskSecretResultHandler resultHandler) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NzUxNQ=="}, "originalCommit": {"oid": "a6c19f90f57abfbdfb48331b82cd2e9d1012cfad"}, "originalPosition": 281}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3NTEyNA==", "bodyText": "So this is only set once and not for each invocation of requestPskSecretResult, right?", "url": "https://github.com/eclipse/hono/pull/1986#discussion_r449075124", "createdAt": "2020-07-02T15:15:37Z", "author": {"login": "sophokles73"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/DefaultDeviceResolver.java", "diffHunk": "@@ -240,4 +256,24 @@ private PreSharedKeyDeviceIdentity getHandshakeIdentity(final Span span, final S\n         final String splitRegex = config.isSingleTenant() ? null : config.getIdSplitRegex();\n         return PreSharedKeyDeviceIdentity.create(span, identity, splitRegex);\n     }\n+\n+    @Override\n+    public boolean hasEcdhePskSupported() {\n+        return true;\n+    }\n+\n+    @Override\n+    public PskSecretResult requestPskSecretResult(final ConnectionId cid, final ServerNames serverName,\n+            final PskPublicInformation identity, final String hmacAlgorithm, final SecretKey otherSecret,\n+            final byte[] seed) {\n+\n+        context.runOnContext((v) -> loadCredentialsForDevice(cid, identity));\n+        return null;\n+    }\n+\n+    @Override\n+    public void setResultHandler(final PskSecretResultHandler resultHandler) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NzUxNQ=="}, "originalCommit": {"oid": "a6c19f90f57abfbdfb48331b82cd2e9d1012cfad"}, "originalPosition": 281}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3OTQxMQ==", "bodyText": "yes.", "url": "https://github.com/eclipse/hono/pull/1986#discussion_r449079411", "createdAt": "2020-07-02T15:21:52Z", "author": {"login": "boaks"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/DefaultDeviceResolver.java", "diffHunk": "@@ -240,4 +256,24 @@ private PreSharedKeyDeviceIdentity getHandshakeIdentity(final Span span, final S\n         final String splitRegex = config.isSingleTenant() ? null : config.getIdSplitRegex();\n         return PreSharedKeyDeviceIdentity.create(span, identity, splitRegex);\n     }\n+\n+    @Override\n+    public boolean hasEcdhePskSupported() {\n+        return true;\n+    }\n+\n+    @Override\n+    public PskSecretResult requestPskSecretResult(final ConnectionId cid, final ServerNames serverName,\n+            final PskPublicInformation identity, final String hmacAlgorithm, final SecretKey otherSecret,\n+            final byte[] seed) {\n+\n+        context.runOnContext((v) -> loadCredentialsForDevice(cid, identity));\n+        return null;\n+    }\n+\n+    @Override\n+    public void setResultHandler(final PskSecretResultHandler resultHandler) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NzUxNQ=="}, "originalCommit": {"oid": "a6c19f90f57abfbdfb48331b82cd2e9d1012cfad"}, "originalPosition": 281}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA4MDIwMg==", "bodyText": "Just to mention:\notherwise I would have included that callback in the call.", "url": "https://github.com/eclipse/hono/pull/1986#discussion_r449080202", "createdAt": "2020-07-02T15:23:05Z", "author": {"login": "boaks"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/DefaultDeviceResolver.java", "diffHunk": "@@ -240,4 +256,24 @@ private PreSharedKeyDeviceIdentity getHandshakeIdentity(final Span span, final S\n         final String splitRegex = config.isSingleTenant() ? null : config.getIdSplitRegex();\n         return PreSharedKeyDeviceIdentity.create(span, identity, splitRegex);\n     }\n+\n+    @Override\n+    public boolean hasEcdhePskSupported() {\n+        return true;\n+    }\n+\n+    @Override\n+    public PskSecretResult requestPskSecretResult(final ConnectionId cid, final ServerNames serverName,\n+            final PskPublicInformation identity, final String hmacAlgorithm, final SecretKey otherSecret,\n+            final byte[] seed) {\n+\n+        context.runOnContext((v) -> loadCredentialsForDevice(cid, identity));\n+        return null;\n+    }\n+\n+    @Override\n+    public void setResultHandler(final PskSecretResultHandler resultHandler) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NzUxNQ=="}, "originalCommit": {"oid": "a6c19f90f57abfbdfb48331b82cd2e9d1012cfad"}, "originalPosition": 281}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA4MTk4Mg==", "bodyText": "That is the answer I had hoped for/expected ;-)", "url": "https://github.com/eclipse/hono/pull/1986#discussion_r449081982", "createdAt": "2020-07-02T15:25:42Z", "author": {"login": "sophokles73"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/DefaultDeviceResolver.java", "diffHunk": "@@ -240,4 +256,24 @@ private PreSharedKeyDeviceIdentity getHandshakeIdentity(final Span span, final S\n         final String splitRegex = config.isSingleTenant() ? null : config.getIdSplitRegex();\n         return PreSharedKeyDeviceIdentity.create(span, identity, splitRegex);\n     }\n+\n+    @Override\n+    public boolean hasEcdhePskSupported() {\n+        return true;\n+    }\n+\n+    @Override\n+    public PskSecretResult requestPskSecretResult(final ConnectionId cid, final ServerNames serverName,\n+            final PskPublicInformation identity, final String hmacAlgorithm, final SecretKey otherSecret,\n+            final byte[] seed) {\n+\n+        context.runOnContext((v) -> loadCredentialsForDevice(cid, identity));\n+        return null;\n+    }\n+\n+    @Override\n+    public void setResultHandler(final PskSecretResultHandler resultHandler) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NzUxNQ=="}, "originalCommit": {"oid": "a6c19f90f57abfbdfb48331b82cd2e9d1012cfad"}, "originalPosition": 281}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3126, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}