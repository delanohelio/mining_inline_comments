{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwODM1Nzcy", "number": 2270, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNjoyNDoyMlrOEycJgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNjozNTo0NlrOEycfjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzI1NDQwOnYy", "diffSide": "RIGHT", "path": "service-base/src/main/java/org/eclipse/hono/service/http/AuthHandlerTools.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNjoyNDoyMlrOHpFO9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzoyMjoxMlrOHppsVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgzOTQxMg==", "bodyText": "AuthHandlerImpl#processException is inaccessible from this class as that method is protected.", "url": "https://github.com/eclipse/hono/pull/2270#discussion_r512839412", "createdAt": "2020-10-27T16:24:22Z", "author": {"login": "kaniyan"}, "path": "service-base/src/main/java/org/eclipse/hono/service/http/AuthHandlerTools.java", "diffHunk": "@@ -40,13 +40,19 @@ private AuthHandlerTools() {\n      * This method checks if the given exception is an {@code HttpStatusException}\n      * and if so, tries to extract the root cause of the problem from its\n      * <em>cause</em> field. If the root cause is a {@link ServiceInvocationException}\n-     * then its error code is used to fail the routing context, otherwise the status\n-     * code from the {@code HttpStatusException} is used. In all other cases, the\n-     * context is failed with a 500 error code.\n+     * the routing context is failed with that exception (provided the status code\n+     * isn't 302, in which case the context is ended with a <em>Location</em> header).\n+     * <p>\n+     * In all other cases, the routing context is failed with the given exception.\n+     * <p>\n+     * Note that the routing context is failed with just the exception, no status\n+     * code. Setting the status code on the response corresponding to the exception\n+     * is to be done in the failure handler, e.g. as implemented in the {@link DefaultFailureHandler}.\n      *\n      * @param ctx The routing context.\n      * @param exception The cause of failure to process the request.\n      * @param authenticateHeader The value to return in the HTTP Authenticate header.\n+     * @see io.vertx.ext.web.handler.impl.AuthHandlerImpl#processException(RoutingContext, Throwable)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ba8490f50fe7d52cfbca40e9a170cfd73897c1"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQzNjc1Nw==", "bodyText": "There was a discussion on such a case earlier already (regarding TableAdapterStore class) and the outcome was, that the javadoc tool won't reject this with an error anyway, so it was deemed ok.", "url": "https://github.com/eclipse/hono/pull/2270#discussion_r513436757", "createdAt": "2020-10-28T13:22:12Z", "author": {"login": "calohmn"}, "path": "service-base/src/main/java/org/eclipse/hono/service/http/AuthHandlerTools.java", "diffHunk": "@@ -40,13 +40,19 @@ private AuthHandlerTools() {\n      * This method checks if the given exception is an {@code HttpStatusException}\n      * and if so, tries to extract the root cause of the problem from its\n      * <em>cause</em> field. If the root cause is a {@link ServiceInvocationException}\n-     * then its error code is used to fail the routing context, otherwise the status\n-     * code from the {@code HttpStatusException} is used. In all other cases, the\n-     * context is failed with a 500 error code.\n+     * the routing context is failed with that exception (provided the status code\n+     * isn't 302, in which case the context is ended with a <em>Location</em> header).\n+     * <p>\n+     * In all other cases, the routing context is failed with the given exception.\n+     * <p>\n+     * Note that the routing context is failed with just the exception, no status\n+     * code. Setting the status code on the response corresponding to the exception\n+     * is to be done in the failure handler, e.g. as implemented in the {@link DefaultFailureHandler}.\n      *\n      * @param ctx The routing context.\n      * @param exception The cause of failure to process the request.\n      * @param authenticateHeader The value to return in the HTTP Authenticate header.\n+     * @see io.vertx.ext.web.handler.impl.AuthHandlerImpl#processException(RoutingContext, Throwable)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgzOTQxMg=="}, "originalCommit": {"oid": "f4ba8490f50fe7d52cfbca40e9a170cfd73897c1"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzMxMDg0OnYy", "diffSide": "RIGHT", "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNjozNTo0NlrOHpFyYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMzoyNDozM1rOHppzFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg0ODQ4MQ==", "bodyText": "In addition to the adapter, isAdapterEnabled(...) also verifies if the tenant is enabled or not. How about including this info about tenant also in the JavaDoc ?  It is also applicable for the MQTT adpter too. WDYT?", "url": "https://github.com/eclipse/hono/pull/2270#discussion_r512848481", "createdAt": "2020-10-27T16:35:46Z", "author": {"login": "kaniyan"}, "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "diffHunk": "@@ -331,6 +332,7 @@ protected Router createRouter() {\n      * information before the potentially expensive credentials validation is done\n      * <p>\n      * The default implementation updates the trace sampling priority in the execution context tracing span.\n+     * It also verifies that the adapter is enabled for the tenant, failing the returned future if that is not the case.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ba8490f50fe7d52cfbca40e9a170cfd73897c1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQzODQ4NA==", "bodyText": "I've adapted the javadocs.", "url": "https://github.com/eclipse/hono/pull/2270#discussion_r513438484", "createdAt": "2020-10-28T13:24:33Z", "author": {"login": "calohmn"}, "path": "adapters/http-vertx-base/src/main/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapter.java", "diffHunk": "@@ -331,6 +332,7 @@ protected Router createRouter() {\n      * information before the potentially expensive credentials validation is done\n      * <p>\n      * The default implementation updates the trace sampling priority in the execution context tracing span.\n+     * It also verifies that the adapter is enabled for the tenant, failing the returned future if that is not the case.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg0ODQ4MQ=="}, "originalCommit": {"oid": "f4ba8490f50fe7d52cfbca40e9a170cfd73897c1"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2840, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}