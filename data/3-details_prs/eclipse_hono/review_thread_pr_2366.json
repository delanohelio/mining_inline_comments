{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MTMwODM5", "number": 2366, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjoyOToxMFrOFE9V8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjowMjozOFrOFFjVvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzQzNjY2OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjoyOToxMFrOIFOLhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToxNzoxMlrOIGArsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjExOQ==", "bodyText": "how about using a copy of the given list in order to prevent (unintended) changes to the result after creation of the SearchResult instance?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542346119", "createdAt": "2020-12-14T12:29:10Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n+        this.total = total;\n+        this.result = Objects.requireNonNull(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MzU1Mw==", "bodyText": "Done", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543173553", "createdAt": "2020-12-15T09:17:12Z", "author": {"login": "kaniyan"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n+        this.total = total;\n+        this.result = Objects.requireNonNull(result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjExOQ=="}, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzQ0MjMyOnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjozMDozOVrOIFOOnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjowMTo0MVrOIGHdIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjkwOA==", "bodyText": "Do you expect this class to be created from JSON? My understanding is that this will be included in the response body only, right?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542346908", "createdAt": "2020-12-14T12:30:39Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MzE5NA==", "bodyText": "Do you expect this class to be created from JSON?\n\nWe are creating from JSON in the integration tests.", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543173194", "createdAt": "2020-12-15T09:16:40Z", "author": {"login": "kaniyan"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjkwOA=="}, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NDUxMg==", "bodyText": "I see", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543284512", "createdAt": "2020-12-15T12:01:41Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0NjkwOA=="}, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzQ1MDIwOnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjozMjo0NFrOIFOTCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToxMjoyNFrOIGAe5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0ODA0MQ==", "bodyText": "it is up to the ...", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542348041", "createdAt": "2020-12-14T12:32:44Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java", "diffHunk": "@@ -65,6 +71,43 @@\n      */\n     Future<OperationResult<Tenant>> readTenant(String tenantId, Span span);\n \n+    /**\n+     * Finds tenants with optional filters, paging and sorting options.\n+     * <p>\n+     * This search operation is considered as optional since it is not required for the normal functioning of Hono and\n+     * is more of a convenient operation. Hence here it is declared as a default method which returns\n+     * {@link HttpURLConnection#HTTP_NOT_IMPLEMENTED}. It is upto the implementors of this interface to offer an", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MDI3OA==", "bodyText": "Thanks for pointing out, I have corrected it.", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543170278", "createdAt": "2020-12-15T09:12:24Z", "author": {"login": "kaniyan"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/tenant/TenantManagementService.java", "diffHunk": "@@ -65,6 +71,43 @@\n      */\n     Future<OperationResult<Tenant>> readTenant(String tenantId, Span span);\n \n+    /**\n+     * Finds tenants with optional filters, paging and sorting options.\n+     * <p>\n+     * This search operation is considered as optional since it is not required for the normal functioning of Hono and\n+     * is more of a convenient operation. Hence here it is declared as a default method which returns\n+     * {@link HttpURLConnection#HTTP_NOT_IMPLEMENTED}. It is upto the implementors of this interface to offer an", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0ODA0MQ=="}, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzQ2MDk5OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjozNTozM1rOIFOZHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToxNDoyNlrOIGAkJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0OTU5Ng==", "bodyText": "can we please move this to below the definition of the Tenant object?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542349596", "createdAt": "2020-12-14T12:35:33Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1001,6 +1025,17 @@ components:\n             \"status\":\n                $ref: '#/components/schemas/Status'\n \n+      TenantWithId:\n+         type: object\n+         additionalProperties: false\n+         allOf:\n+            - type: object\n+              properties:\n+                 \"id\":\n+                    description: The identifier of the tenant.\n+                    type: string\n+            - $ref: '#/components/schemas/Tenant'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MTYyMQ==", "bodyText": "I have moved it.", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543171621", "createdAt": "2020-12-15T09:14:26Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1001,6 +1025,17 @@ components:\n             \"status\":\n                $ref: '#/components/schemas/Status'\n \n+      TenantWithId:\n+         type: object\n+         additionalProperties: false\n+         allOf:\n+            - type: object\n+              properties:\n+                 \"id\":\n+                    description: The identifier of the tenant.\n+                    type: string\n+            - $ref: '#/components/schemas/Tenant'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM0OTU5Ng=="}, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzQ2ODcyOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMjozNzoxOVrOIFOdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOToxNDoyM1rOIGAkAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1MDcwNg==", "bodyText": "can you please rebase and then add the minimum property analogously to the devices search result?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r542350706", "createdAt": "2020-12-14T12:37:19Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1040,6 +1075,19 @@ components:\n                description: Indicates if the northbound application was notified of the auto-provisioned device via an\n                   empty event.\n \n+      SearchTenantsResult:\n+         type: object\n+         description: The result of a search request for tenants.\n+         additionalProperties: false\n+         properties:\n+            \"total\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE3MTU4NA==", "bodyText": "I have added it.", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543171584", "createdAt": "2020-12-15T09:14:23Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1040,6 +1075,19 @@ components:\n                description: Indicates if the northbound application was notified of the auto-provisioned device via an\n                   empty event.\n \n+      SearchTenantsResult:\n+         type: object\n+         description: The result of a search request for tenants.\n+         additionalProperties: false\n+         properties:\n+            \"total\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM1MDcwNg=="}, "originalCommit": {"oid": "de7de96dd7053edb0f862174873f7ec0783793d5"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzY2MjA2OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjowMjozOFrOIGHfnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMjo0OTowNFrOIGJPUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NTE0OQ==", "bodyText": "how about returning an unmodifiable view on the list instead to prevent (unintended) alterations?", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543285149", "createdAt": "2020-12-15T12:02:38Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n+        Objects.requireNonNull(result);\n+\n+        this.total = total;\n+        this.result = new ArrayList<>(result);\n+    }\n+\n+    /**\n+     * Gets the total number of objects in the result set, regardless of the pageSize set in query.\n+     *\n+     * @return the total number of objects in the result set.\n+     */\n+    public int getTotal() {\n+        return total;\n+    }\n+\n+    /**\n+     * Gets the result list.\n+     *\n+     * @return the result list.\n+     */\n+    public List<T> getResult() {\n+        return result;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMxMzc0NA==", "bodyText": "I have changed to return an unmodifiable view on the list.", "url": "https://github.com/eclipse/hono/pull/2366#discussion_r543313744", "createdAt": "2020-12-15T12:49:04Z", "author": {"login": "kaniyan"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/SearchResult.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.service.management;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * The result of a search operation in Device Registry Management API.\n+ *\n+ * @param <T> The type of the result.\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Tenants</a>\n+ * @see <a href=\"https://www.eclipse.org/hono/docs/api/management/#/devices/searchDevicesForTenant\"> Device Registry\n+ *      Management API - Search Devices</a>\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public final class SearchResult<T> {\n+    private final int total;\n+    private final List<T> result;\n+\n+    /**\n+     * Creates an instance of {@link SearchResult}.\n+     *\n+     * @param total The total number of objects in the result set, regardless of the pageSize set in query.\n+     * @param result The list of devices with their identifiers.\n+     * @throws NullPointerException if any of the parameters is {@code null}.\n+     */\n+    public SearchResult(\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_SIZE) final int total,\n+            @JsonProperty(value = RegistryManagementConstants.FIELD_RESULT_SET_PAGE) final List<T> result) {\n+        Objects.requireNonNull(result);\n+\n+        this.total = total;\n+        this.result = new ArrayList<>(result);\n+    }\n+\n+    /**\n+     * Gets the total number of objects in the result set, regardless of the pageSize set in query.\n+     *\n+     * @return the total number of objects in the result set.\n+     */\n+    public int getTotal() {\n+        return total;\n+    }\n+\n+    /**\n+     * Gets the result list.\n+     *\n+     * @return the result list.\n+     */\n+    public List<T> getResult() {\n+        return result;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI4NTE0OQ=="}, "originalCommit": {"oid": "07c98cfc37a0b8916d5ba8f0c16522c5ffda781f"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2948, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}