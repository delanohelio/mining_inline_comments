{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTMyMDg4", "number": 2377, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODoxODoyMlrOFIEOaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODoxODoyMlrOFIEOaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MDAyMTU1OnYy", "diffSide": "RIGHT", "path": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODoxODoyM1rOIJyUYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwOToxNTo0MVrOIJz-xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEzMjUxMw==", "bodyText": "I am not sure if the open handler will be invoked with a failed AsyncResult in any case. However, the closeHandler and/or the detachHandler should contain an error that we can assert.", "url": "https://github.com/eclipse/hono/pull/2377#discussion_r547132513", "createdAt": "2020-12-22T08:18:23Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "diffHunk": "@@ -849,6 +849,45 @@ public void testSendCommandFailsForCommandNotAcknowledgedByDevice(\n         }\n     }\n \n+    /**\n+     * Verifies that the adapter immediately closes the command receiver link of a gateway wanting\n+     * to receive commands of a device that doesn't have the gateway in its via-gateways.\n+     *\n+     * @param ctx The vert.x test context.\n+     */\n+    @Test\n+    @Timeout(timeUnit = TimeUnit.SECONDS, value = 20)\n+    public void testCommandReceiverCreationFailsForDeviceNotInViaGateways(\n+            final VertxTestContext ctx) {\n+\n+        final AmqpCommandEndpointConfiguration endpointConfig = new AmqpCommandEndpointConfiguration(\n+                SubscriberRole.GATEWAY_FOR_SINGLE_DEVICE);\n+\n+        final String otherDeviceId = helper.getRandomDeviceId(tenantId);\n+        helper.registry\n+                .addDeviceToTenant(tenantId, deviceId, password)\n+                .compose(ok -> helper.registry.addDeviceToTenant(tenantId, otherDeviceId, password))\n+                .compose(ok -> connectToAdapter(IntegrationTestSupport.getUsername(deviceId, tenantId), password))\n+                .compose(conAck -> {\n+                    final Promise<Void> result = Promise.promise();\n+                    context.runOnContext(go -> {\n+                        final ProtonReceiver recv = connection\n+                                .createReceiver(endpointConfig.getSubscriptionAddress(tenantId, otherDeviceId));\n+                        recv.setQoS(ProtonQoS.AT_LEAST_ONCE);\n+                        recv.openHandler(openResult -> {\n+                            ctx.verify(() -> {\n+                                assertThat(openResult.failed()).isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abca0ff6922efd26f951e75796a725c1699505f2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzE1OTc1MA==", "bodyText": "Yes, I think in theory the open handler could succeed with the receiver link remote source being null. I'm not sure whether that can actually happen during a somehow delayed test run.\nIn any case, I've adapted the tests here accordingly.", "url": "https://github.com/eclipse/hono/pull/2377#discussion_r547159750", "createdAt": "2020-12-22T09:15:41Z", "author": {"login": "calohmn"}, "path": "tests/src/test/java/org/eclipse/hono/tests/amqp/CommandAndControlAmqpIT.java", "diffHunk": "@@ -849,6 +849,45 @@ public void testSendCommandFailsForCommandNotAcknowledgedByDevice(\n         }\n     }\n \n+    /**\n+     * Verifies that the adapter immediately closes the command receiver link of a gateway wanting\n+     * to receive commands of a device that doesn't have the gateway in its via-gateways.\n+     *\n+     * @param ctx The vert.x test context.\n+     */\n+    @Test\n+    @Timeout(timeUnit = TimeUnit.SECONDS, value = 20)\n+    public void testCommandReceiverCreationFailsForDeviceNotInViaGateways(\n+            final VertxTestContext ctx) {\n+\n+        final AmqpCommandEndpointConfiguration endpointConfig = new AmqpCommandEndpointConfiguration(\n+                SubscriberRole.GATEWAY_FOR_SINGLE_DEVICE);\n+\n+        final String otherDeviceId = helper.getRandomDeviceId(tenantId);\n+        helper.registry\n+                .addDeviceToTenant(tenantId, deviceId, password)\n+                .compose(ok -> helper.registry.addDeviceToTenant(tenantId, otherDeviceId, password))\n+                .compose(ok -> connectToAdapter(IntegrationTestSupport.getUsername(deviceId, tenantId), password))\n+                .compose(conAck -> {\n+                    final Promise<Void> result = Promise.promise();\n+                    context.runOnContext(go -> {\n+                        final ProtonReceiver recv = connection\n+                                .createReceiver(endpointConfig.getSubscriptionAddress(tenantId, otherDeviceId));\n+                        recv.setQoS(ProtonQoS.AT_LEAST_ONCE);\n+                        recv.openHandler(openResult -> {\n+                            ctx.verify(() -> {\n+                                assertThat(openResult.failed()).isTrue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEzMjUxMw=="}, "originalCommit": {"oid": "abca0ff6922efd26f951e75796a725c1699505f2"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2958, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}