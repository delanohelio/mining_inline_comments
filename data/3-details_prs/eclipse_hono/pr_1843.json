{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNDY2OTQ2", "number": 1843, "title": "Switch from using sync to async Infinispan methods", "bodyText": "", "createdAt": "2020-03-18T14:24:15Z", "url": "https://github.com/eclipse/hono/pull/1843", "merged": true, "mergeCommit": {"oid": "9a3e0f1f1a8d15182ce24c177f6c8ccb5625b4a6"}, "closed": true, "closedAt": "2020-03-20T14:48:16Z", "author": {"login": "ctron"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO8fKlAFqTM3NzE2OTI5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPhJ5AgFqTM3ODUxNzA1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTY5Mjk2", "url": "https://github.com/eclipse/hono/pull/1843#pullrequestreview-377169296", "createdAt": "2020-03-18T19:24:58Z", "commit": {"oid": "16eefec56feee03a843451d84ace484939c65c26"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNDo1OVrOF4TsZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOToyNjo0M1rOF4Tv_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4NzIzNg==", "bodyText": "I find the naming of MoreFutures.create() somewhat unintuitive (are more/multiple Futures created here?).\nLooking at the Javadoc of the class and the method, I think something like FuturesHelper.mapCompletionStageResult() would make it more obvious what is being done here. WDYT?", "url": "https://github.com/eclipse/hono/pull/1843#discussion_r394587236", "createdAt": "2020-03-18T19:24:59Z", "author": {"login": "calohmn"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodCache.java", "diffHunk": "@@ -162,44 +162,45 @@ public void addReconnectListener(final ReconnectListener<HotrodCache<K, V>> list\n     @Override\n     public Future<V> put(final K key, final V value) {\n \n-        final Promise<V> result = Promise.promise();\n         if (cache == null) {\n-            result.fail(new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));\n+\n+            return noConnectionFailure();\n+\n         } else {\n-            vertx.executeBlocking(outcome -> {\n-                try {\n-                    final V replacedValue = cache.put(key, value);\n-                    outcome.complete(replacedValue);\n-                } catch (final Throwable e) {\n-                    outcome.fail(e);\n-                }\n-            }, result);\n+\n+            return MoreFutures.create(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16eefec56feee03a843451d84ace484939c65c26"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4Nzg1Ng==", "bodyText": "Replace with return noConnectionFailure();?", "url": "https://github.com/eclipse/hono/pull/1843#discussion_r394587856", "createdAt": "2020-03-18T19:26:05Z", "author": {"login": "calohmn"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodCache.java", "diffHunk": "@@ -162,44 +162,45 @@ public void addReconnectListener(final ReconnectListener<HotrodCache<K, V>> list\n     @Override\n     public Future<V> put(final K key, final V value) {\n \n-        final Promise<V> result = Promise.promise();\n         if (cache == null) {\n-            result.fail(new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));\n+\n+            return noConnectionFailure();\n+\n         } else {\n-            vertx.executeBlocking(outcome -> {\n-                try {\n-                    final V replacedValue = cache.put(key, value);\n-                    outcome.complete(replacedValue);\n-                } catch (final Throwable e) {\n-                    outcome.fail(e);\n-                }\n-            }, result);\n+\n+            return MoreFutures.create(() -> {\n+                return cache\n+                    .withFlags(Flag.FORCE_RETURN_VALUE)\n+                    .putAsync(key, value);\n+            });\n+\n         }\n-        return result.future();\n+\n     }\n \n     @Override\n     public Future<Boolean> removeWithVersion(final K key, final long version) {\n \n-        final Promise<Boolean> result = Promise.promise();\n         if (cache == null) {\n-            result.fail(new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));\n+\n+            return Future.failedFuture(new ServerErrorException(\n+                    HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16eefec56feee03a843451d84ace484939c65c26"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4ODA4NQ==", "bodyText": "Replace with return noConnectionFailure();?", "url": "https://github.com/eclipse/hono/pull/1843#discussion_r394588085", "createdAt": "2020-03-18T19:26:33Z", "author": {"login": "calohmn"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodCache.java", "diffHunk": "@@ -235,38 +235,46 @@ public void addReconnectListener(final ReconnectListener<HotrodCache<K, V>> list\n     @Override\n     public Future<Versioned<V>> getWithVersion(final K key) {\n \n-        final Promise<Versioned<V>> result = Promise.promise();\n         if (cache == null) {\n-            result.fail(new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));\n+\n+            return Future.failedFuture(new ServerErrorException(\n+                    HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16eefec56feee03a843451d84ace484939c65c26"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU4ODE1Nw==", "bodyText": "Replace with return noConnectionFailure();?", "url": "https://github.com/eclipse/hono/pull/1843#discussion_r394588157", "createdAt": "2020-03-18T19:26:43Z", "author": {"login": "calohmn"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodCache.java", "diffHunk": "@@ -235,38 +235,46 @@ public void addReconnectListener(final ReconnectListener<HotrodCache<K, V>> list\n     @Override\n     public Future<Versioned<V>> getWithVersion(final K key) {\n \n-        final Promise<Versioned<V>> result = Promise.promise();\n         if (cache == null) {\n-            result.fail(new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));\n+\n+            return Future.failedFuture(new ServerErrorException(\n+                    HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));\n+\n         } else {\n-            vertx.executeBlocking(outcome -> {\n-                try {\n-                    final MetadataValue<V> value = cache.getWithMetadata(key);\n-                    outcome.complete(value != null ? new Versioned<>(value.getVersion(), value.getValue()) : null);\n-                } catch (final Throwable e) {\n-                    outcome.fail(e);\n-                }\n-            }, result);\n+\n+            return MoreFutures.create(() -> {\n+                return cache\n+                    .getWithMetadataAsync(key)\n+                    .thenApply(value -> {\n+                        if (value != null ) {\n+                            return new Versioned<>(value.getVersion(), value.getValue());\n+                        } else {\n+                            return null;\n+                        }\n+                    });\n+            });\n+\n         }\n-        return result.future();\n+\n     }\n \n     @Override\n     public Future<Map<K, V>> getAll(final Set<? extends K> keys) {\n-        final Promise<Map<K, V>> result = Promise.promise();\n+\n         if (cache == null) {\n-            result.fail(new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));\n+\n+            return Future.failedFuture(new ServerErrorException(\n+                    HttpURLConnection.HTTP_UNAVAILABLE, \"no connection to data grid\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16eefec56feee03a843451d84ace484939c65c26"}, "originalPosition": 164}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "16eefec56feee03a843451d84ace484939c65c26", "author": {"user": {"login": "ctron", "name": "Jens Reimann"}}, "url": "https://github.com/eclipse/hono/commit/16eefec56feee03a843451d84ace484939c65c26", "committedDate": "2020-03-18T14:23:01Z", "message": "Switch from using sync to async Infinispan methods"}, "afterCommit": {"oid": "faccb913b243a9a48294eac716733b9f4c4750a2", "author": {"user": {"login": "ctron", "name": "Jens Reimann"}}, "url": "https://github.com/eclipse/hono/commit/faccb913b243a9a48294eac716733b9f4c4750a2", "committedDate": "2020-03-19T09:28:04Z", "message": "Switch from using sync to async Infinispan methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a394d5a0897d25c8babffdb671fa06c0d47bb65c", "author": {"user": {"login": "ctron", "name": "Jens Reimann"}}, "url": "https://github.com/eclipse/hono/commit/a394d5a0897d25c8babffdb671fa06c0d47bb65c", "committedDate": "2020-03-20T09:45:10Z", "message": "Switch from using sync to async Infinispan methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "faccb913b243a9a48294eac716733b9f4c4750a2", "author": {"user": {"login": "ctron", "name": "Jens Reimann"}}, "url": "https://github.com/eclipse/hono/commit/faccb913b243a9a48294eac716733b9f4c4750a2", "committedDate": "2020-03-19T09:28:04Z", "message": "Switch from using sync to async Infinispan methods"}, "afterCommit": {"oid": "a394d5a0897d25c8babffdb671fa06c0d47bb65c", "author": {"user": {"login": "ctron", "name": "Jens Reimann"}}, "url": "https://github.com/eclipse/hono/commit/a394d5a0897d25c8babffdb671fa06c0d47bb65c", "committedDate": "2020-03-20T09:45:10Z", "message": "Switch from using sync to async Infinispan methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4NTE3MDU5", "url": "https://github.com/eclipse/hono/pull/1843#pullrequestreview-378517059", "createdAt": "2020-03-20T14:12:37Z", "commit": {"oid": "a394d5a0897d25c8babffdb671fa06c0d47bb65c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 808, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}