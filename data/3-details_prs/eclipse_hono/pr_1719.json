{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2ODEzNTA0", "number": 1719, "title": "[#1718] Add exception handling; improve link creation logic", "bodyText": "This fixes #1718.\nFix onLinkEstablishmentTimeout(), not calling link.free()\nthere anymore (has caused session to get into invalid state).\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.", "createdAt": "2020-01-24T12:25:47Z", "url": "https://github.com/eclipse/hono/pull/1719", "merged": true, "mergeCommit": {"oid": "d820e4d5760bb5ea60ae97f508d0490c2f30e46f"}, "closed": true, "closedAt": "2020-01-31T13:36:20Z", "author": {"login": "calohmn"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9fzCngFqTM0Nzk4NTkxMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_u_4bAFqTM1MTQ5NzU2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTg1OTEw", "url": "https://github.com/eclipse/hono/pull/1719#pullrequestreview-347985910", "createdAt": "2020-01-24T14:25:04Z", "commit": {"oid": "ba82817e66481831564a6b3a886ab02ac752d44c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDoyNTowNFrOFhfPRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDoyNzowMVrOFhfTeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY1OTE0MA==", "bodyText": "IMHO you also nee to verify that at this point the result is not completed/failed yet ...", "url": "https://github.com/eclipse/hono/pull/1719#discussion_r370659140", "createdAt": "2020-01-24T14:25:04Z", "author": {"login": "sophokles73"}, "path": "client/src/test/java/org/eclipse/hono/client/impl/HonoConnectionImplTest.java", "diffHunk": "@@ -648,6 +648,47 @@ public void testCreateReceiverFailsOnTimeout(final TestContext ctx) {\n         verify(remoteCloseHook, never()).handle(anyString());\n     }\n \n+    /**\n+     * Verifies that the attempt to create a receiver fails with a\n+     * {@code ServerErrorException} if the connection gets disconnected\n+     * before the remote peer has sent its attach frame. It is verified\n+     * that this is done before the link establishment timeout.\n+     *\n+     * @param ctx The vert.x test context.\n+     */\n+    @Test\n+    public void testCreateReceiverFailsOnDisconnectBeforeOpen(final TestContext ctx) {\n+\n+        final long linkEstablishmentTimeout = 444L; // choose a distinct value here\n+        props.setLinkEstablishmentTimeout(linkEstablishmentTimeout);\n+        // don't run linkEstablishmentTimeout timer handler\n+        when(vertx.setTimer(eq(linkEstablishmentTimeout), any(Handler.class))).thenAnswer(invocation -> 0L);\n+\n+        // GIVEN an established connection\n+        final Async connectAttempt = ctx.async();\n+        honoConnection.connect().setHandler(ctx.asyncAssertSuccess(ok -> connectAttempt.complete()));\n+        connectAttempt.await();\n+        final Source source = mock(Source.class);\n+        when(source.getAddress()).thenReturn(\"source/address\");\n+        final ProtonReceiver receiver = mock(ProtonReceiver.class);\n+        when(receiver.isOpen()).thenReturn(Boolean.TRUE);\n+        when(receiver.getSource()).thenReturn(source);\n+        when(receiver.getRemoteSource()).thenReturn(source);\n+        when(con.createReceiver(anyString())).thenReturn(receiver);\n+\n+        // WHEN creating a receiver link with a close hook\n+        final Handler<String> remoteCloseHook = mock(Handler.class);\n+\n+        final Future<ProtonReceiver> result = honoConnection.createReceiver(\"source\", ProtonQoS.AT_LEAST_ONCE,\n+                mock(ProtonMessageHandler.class), remoteCloseHook);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba82817e66481831564a6b3a886ab02ac752d44c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY1OTMzMw==", "bodyText": "same here", "url": "https://github.com/eclipse/hono/pull/1719#discussion_r370659333", "createdAt": "2020-01-24T14:25:26Z", "author": {"login": "sophokles73"}, "path": "client/src/test/java/org/eclipse/hono/client/impl/HonoConnectionImplTest.java", "diffHunk": "@@ -905,4 +946,44 @@ public void testCreateSenderThatGetsDelayedCredits(final TestContext ctx) {\n                     });\n                 });\n     }\n+\n+    /**\n+     * Verifies that the attempt to create a sender fails with a\n+     * {@code ServerErrorException} if the connection gets disconnected\n+     * before the remote peer has sent its attach frame. It is verified\n+     * that this is done before the link establishment timeout.\n+     *\n+     * @param ctx The vert.x test context.\n+     */\n+    @Test\n+    public void testCreateSenderFailsOnDisconnectBeforeOpen(final TestContext ctx) {\n+        final long linkEstablishmentTimeout = 444L; // choose a distinct value here\n+        props.setLinkEstablishmentTimeout(linkEstablishmentTimeout);\n+        // don't run linkEstablishmentTimeout timer handler\n+        when(vertx.setTimer(eq(linkEstablishmentTimeout), any(Handler.class))).thenAnswer(invocation -> 0L);\n+\n+        final ProtonSender sender = mock(ProtonSender.class);\n+        when(sender.isOpen()).thenReturn(Boolean.TRUE);\n+        when(con.createSender(anyString())).thenReturn(sender);\n+        final Target target = new Target();\n+        target.setAddress(\"someAddress\");\n+        when(sender.getRemoteTarget()).thenReturn(target);\n+        when(sender.getCredit()).thenReturn(0);\n+        // mock handlers\n+        final Handler<String> remoteCloseHook = mock(Handler.class);\n+\n+        // GIVEN an established connection\n+        final Async connectAttempt = ctx.async();\n+        honoConnection.connect().setHandler(ctx.asyncAssertSuccess(ok -> connectAttempt.complete()));\n+        connectAttempt.await();\n+\n+        final Future<ProtonSender> result = honoConnection.createSender(\n+                \"target\", ProtonQoS.AT_LEAST_ONCE, remoteCloseHook);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba82817e66481831564a6b3a886ab02ac752d44c"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY2MDIxOA==", "bodyText": "didn't one of the stack traces you showed me that a runtime exception had been thrown while executing the free() method?", "url": "https://github.com/eclipse/hono/pull/1719#discussion_r370660218", "createdAt": "2020-01-24T14:27:01Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/util/HonoProtonHelper.java", "diffHunk": "@@ -60,7 +65,11 @@ private HonoProtonHelper() {\n         Objects.requireNonNull(handler);\n \n         final Handler<AsyncResult<T>> wrappedHandler = remoteDetach -> {\n-            handler.handle(remoteDetach);\n+            try {\n+                handler.handle(remoteDetach);\n+            } catch (final Exception ex) {\n+                LOG.warn(\"error running detachHandler\", ex);\n+            }\n             link.free();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba82817e66481831564a6b3a886ab02ac752d44c"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba82817e66481831564a6b3a886ab02ac752d44c", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/ba82817e66481831564a6b3a886ab02ac752d44c", "committedDate": "2020-01-24T12:23:16Z", "message": "[#1718] Add exception handling; improve link creation logic.\n\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}, "afterCommit": {"oid": "2ff922e35e75ec1b211d3812b773ddde3bdf389b", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/2ff922e35e75ec1b211d3812b773ddde3bdf389b", "committedDate": "2020-01-31T11:54:11Z", "message": "[#1718] Add exception handling; improve link creation logic.\n\nFix onLinkEstablishmentTimeout(), not calling link.free()\nthere anymore (has caused session to get into invalid state).\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ff922e35e75ec1b211d3812b773ddde3bdf389b", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/2ff922e35e75ec1b211d3812b773ddde3bdf389b", "committedDate": "2020-01-31T11:54:11Z", "message": "[#1718] Add exception handling; improve link creation logic.\n\nFix onLinkEstablishmentTimeout(), not calling link.free()\nthere anymore (has caused session to get into invalid state).\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}, "afterCommit": {"oid": "8950ea76d1aba287b943425c3b2678f4caf98dff", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/8950ea76d1aba287b943425c3b2678f4caf98dff", "committedDate": "2020-01-31T12:05:37Z", "message": "[#1718] Add exception handling; improve link creation logic.\n\nFix onLinkEstablishmentTimeout(), not calling link.free()\nthere anymore (has caused session to get into invalid state).\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1df97221b303fe6c95130be388674606d4f9590", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/d1df97221b303fe6c95130be388674606d4f9590", "committedDate": "2020-01-31T12:47:44Z", "message": "[#1718] Add exception handling; improve link creation logic.\n\nFix onLinkEstablishmentTimeout(), not calling link.free()\nthere anymore (has caused session to get into invalid state).\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8950ea76d1aba287b943425c3b2678f4caf98dff", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/8950ea76d1aba287b943425c3b2678f4caf98dff", "committedDate": "2020-01-31T12:05:37Z", "message": "[#1718] Add exception handling; improve link creation logic.\n\nFix onLinkEstablishmentTimeout(), not calling link.free()\nthere anymore (has caused session to get into invalid state).\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}, "afterCommit": {"oid": "d1df97221b303fe6c95130be388674606d4f9590", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/d1df97221b303fe6c95130be388674606d4f9590", "committedDate": "2020-01-31T12:47:44Z", "message": "[#1718] Add exception handling; improve link creation logic.\n\nFix onLinkEstablishmentTimeout(), not calling link.free()\nthere anymore (has caused session to get into invalid state).\nExceptions now get caught in disconnect/detach/close handlers\nused in HonoConnectionImpl. A disconnect during link creation\nnow causes the creation attempt to be failed directly,\nwithout waiting for the link establishment timeout.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDk3NTY5", "url": "https://github.com/eclipse/hono/pull/1719#pullrequestreview-351497569", "createdAt": "2020-01-31T13:17:34Z", "commit": {"oid": "d1df97221b303fe6c95130be388674606d4f9590"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 931, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}