{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNzY1MjA2", "number": 1932, "title": "Use new interface in createCommandConsumer() return value.", "bodyText": "ProtocolAdapterCommandConsumerFactory.createCommandConsumer now returns a Future with a value of the new ProtocolAdapterCommandConsumer interface type.\nThe previously used MessageConsumer interface with its flow() and getRemainingCredit() methods wasn't a good fit anymore because both these methods do nothing in the implementation used for the ProtocolAdapterCommandConsumerFactory.\nFurthermore, a SpanContext parameter has been added to the close() method of the new interface. This allows the trace spans created in the commandConsumer.close() operation to be properly assigned to the corresponding parent span (in an UNSUBSCRIBE operation for example).\nSpecial care in this PR has been taken to ensure that the parent span to the one, used for the commandConsumer.close() invocation, is only finished after the close() method result Future is completed.", "createdAt": "2020-04-29T14:54:37Z", "url": "https://github.com/eclipse/hono/pull/1932", "merged": true, "mergeCommit": {"oid": "ef3e5723a33daf393086610a3045893ffa0d3195"}, "closed": true, "closedAt": "2020-05-06T08:56:27Z", "author": {"login": "calohmn"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccZoN7gH2gAyNDEwNzY1MjA2OmM3MDJkZGM3NDljZDJkMDI0ODRlOTU2N2JiNDgyNDg5NjdhMTZjY2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcekp9_AFqTQwNjQxMzE4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c702ddc749cd2d02484e9567bb48248967a16ccc", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/c702ddc749cd2d02484e9567bb48248967a16ccc", "committedDate": "2020-04-29T14:47:31Z", "message": "Use new interface in createCommandConsumer() return value.\n\nThe previously used \"MessageConsumer\" interface with its flow()\nand getRemainingCredit() methods wasn't a good fit anymore\nbecause both these methods do nothing in the implementation\nused for the ProtocolAdapterCommandConsumerFactory.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzU1NDA2", "url": "https://github.com/eclipse/hono/pull/1932#pullrequestreview-406355406", "createdAt": "2020-05-06T07:18:11Z", "commit": {"oid": "c702ddc749cd2d02484e9567bb48248967a16ccc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzoxODoxMVrOGRGtSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzoxODoxMVrOGRGtSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4ODg3NA==", "bodyText": "If I am not mistaken, then this code sends a disconnect event for each subscription being canceled. However, FMPOV we only need to send the disconnect once after all subscriptions have been canceled. WDYT?", "url": "https://github.com/eclipse/hono/pull/1932#discussion_r420588874", "createdAt": "2020-05-06T07:18:11Z", "author": {"login": "sophokles73"}, "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "diffHunk": "@@ -1196,12 +1201,12 @@ protected final void close(final MqttEndpoint endpoint, final Device authenticat\n \n         final Span span = newSpan(\"CLOSE\", endpoint, authenticatedDevice, traceSamplingPriority);\n         onClose(endpoint);\n-        cmdHandler.removeAllSubscriptions((tenant, device) -> {\n-            final Span closeHandlerSpan = newSpan(\"Send Disconnected Event\", endpoint, authenticatedDevice,\n-                    traceSamplingPriority);\n-            sendDisconnectedTtdEvent(tenant, device, authenticatedDevice, span.context())\n-                    .setHandler(sendAttempt -> closeHandlerSpan.finish());\n-        });\n+        final CompositeFuture removalDoneFuture = cmdHandler.removeAllSubscriptions((tenant, device) -> {\n+            final Span sendEventSpan = newChildSpan(span.context(), \"Send Disconnected Event\", endpoint,\n+                    authenticatedDevice);\n+            return sendDisconnectedTtdEvent(tenant, device, authenticatedDevice, sendEventSpan.context())\n+                    .onComplete(r -> sendEventSpan.finish()).mapEmpty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c702ddc749cd2d02484e9567bb48248967a16ccc"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDEzMTgy", "url": "https://github.com/eclipse/hono/pull/1932#pullrequestreview-406413182", "createdAt": "2020-05-06T08:46:14Z", "commit": {"oid": "c702ddc749cd2d02484e9567bb48248967a16ccc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 898, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}