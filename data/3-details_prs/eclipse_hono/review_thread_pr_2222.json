{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NjExNzQz", "number": 2222, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzoyNDozOFrOEoZ6zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzoyOTozMFrOEoaCGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODAzMTQ4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/admin-guide/file-based-device-registry-config.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzoyNDozOFrOHZeWtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzoyNDozOFrOHZeWtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ3Mzc4MQ==", "bodyText": "can you also fix the name of the property to use instead ... and the one referred to by the HONO_REGISTRY_REST_TENANT_ID_PATTERN as well?", "url": "https://github.com/eclipse/hono/pull/2222#discussion_r496473781", "createdAt": "2020-09-29T07:24:38Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/admin-guide/file-based-device-registry-config.md", "diffHunk": "@@ -58,7 +58,7 @@ The following table provides an overview of the configuration variables and corr\n | `HONO_REGISTRY_HTTP_KEY_STORE_PATH`<br>`--hono.registry.http.keyStorePath` | no | - | The absolute path to the Java key store containing the private key and certificate that the server should use for authenticating to clients. Either this option or the `HONO_REGISTRY_HTTP_KEY_PATH` and `HONO_REGISTRY_HTTP_CERT_PATH` options need to be set in order to enable TLS secured connections with clients. The key store format can be either `JKS` or `PKCS12` indicated by a `.jks` or `.p12` file suffix respectively. |\n | `HONO_REGISTRY_HTTP_PORT`<br>`--hono.registry.http.port` | no | `8443` | The secure port that the server should listen on for HTTP requests.<br>See [Port Configuration]({{< relref \"#port-configuration\" >}}) below for details. |\n | `HONO_REGISTRY_REST_TENANT_ID_PATTERN`<br>`--hono.registry.rest.tenantIdPattern` | no | `^[a-zA-Z0-9-_\\.]+$` | The regular expression to use to validate tenant ID. Please refer to the [java pattern documentation](https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html).<br>**Deprecated** Use `HONO_REGISTRY_HTTP_TENANT_ID_REGEX` instead. |\n-| `HONO_REGISTRY_REST_DEVICE_ID_PATTERN`<br>`--hono.registry.rest.deviceIdPattern` | no | `^[a-zA-Z0-9-_\\.]+$` | The regular expression to use to validate device ID. Please refer to the [java pattern documentation](https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html).<br>**Deprecated** Use `HONO_REGISTRY_HTTP_DEVICE_ID_REGEX` instead. |\n+| `HONO_REGISTRY_REST_DEVICE_ID_PATTERN`<br>`--hono.registry.rest.deviceIdPattern` | no | `^[a-zA-Z0-9-_\\.:]+$` | The regular expression to use to validate device ID. Please refer to the [java pattern documentation](https://docs.oracle.com/javase/7/docs/api/java/util/regex/Pattern.html).<br>**Deprecated** Use `HONO_REGISTRY_HTTP_DEVICE_ID_REGEX` instead. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18aa453923ed00bb490144f0d9261bf8a5213135"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODA1MDE4OnYy", "diffSide": "RIGHT", "path": "site/homepage/content/release-notes.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzoyOTozMFrOHZeh_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwODowNjo1OFrOHZgKdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ3NjY2OQ==", "bodyText": "is this supposed to be documenting the status quo of the 1.3.0 release only? My understanding is that you want to remove these restrictions again in 1.5.0, 1.4.1 and 1.3.1. I guess we then should also add a corresponding entry to the API Changes section for the upcoming 1.5.0, right?", "url": "https://github.com/eclipse/hono/pull/2222#discussion_r496476669", "createdAt": "2020-09-29T07:29:30Z", "author": {"login": "sophokles73"}, "path": "site/homepage/content/release-notes.md", "diffHunk": "@@ -148,6 +150,14 @@ title = \"Release Notes\"\n   properties instead of working on given ones. The new method name now more accurately conveys\n   what the method is used for. The same change has been applied to the other `customize[*]Config`\n   methods in the `AbstractAdapterConfig` class.\n+* The file based as well as the MongoDB based device registry implementations now disallow certain\n+  special characters in device and tenant identifiers. The configuration properties\n+  `HONO_REGISTRY_HTTP_TENANT_ID_PATTERN` and `HONO_REGISTRY_HTTP_DEVICE_ID_PATTERN` (and corresponding ones with\n+  prefix `HONO_REGISTRY_REST` for the file based registry) can be used to override the patterns for matching\n+  valid identifiers. Please refer to the \n+  [file based registry]({{% doclink \"/admin-guide/file-based-device-registry-config/#service-configuration\" %}}) or\n+  [MongoDB based registry]({{% doclink \"/admin-guide/mongodb-device-registry-config/#service-configuration\" %}})\n+  configuration guide for details.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18aa453923ed00bb490144f0d9261bf8a5213135"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjUwMzQxMw==", "bodyText": "This shall document the fact that there are restrictions on the allowed characters now, not talking about the colon in particular. So this is still valid after the patch releases.\n\nI guess we then should also add a corresponding entry to the API Changes section for the upcoming 1.5.0, right?\n\nI've added an entry there.", "url": "https://github.com/eclipse/hono/pull/2222#discussion_r496503413", "createdAt": "2020-09-29T08:06:58Z", "author": {"login": "calohmn"}, "path": "site/homepage/content/release-notes.md", "diffHunk": "@@ -148,6 +150,14 @@ title = \"Release Notes\"\n   properties instead of working on given ones. The new method name now more accurately conveys\n   what the method is used for. The same change has been applied to the other `customize[*]Config`\n   methods in the `AbstractAdapterConfig` class.\n+* The file based as well as the MongoDB based device registry implementations now disallow certain\n+  special characters in device and tenant identifiers. The configuration properties\n+  `HONO_REGISTRY_HTTP_TENANT_ID_PATTERN` and `HONO_REGISTRY_HTTP_DEVICE_ID_PATTERN` (and corresponding ones with\n+  prefix `HONO_REGISTRY_REST` for the file based registry) can be used to override the patterns for matching\n+  valid identifiers. Please refer to the \n+  [file based registry]({{% doclink \"/admin-guide/file-based-device-registry-config/#service-configuration\" %}}) or\n+  [MongoDB based registry]({{% doclink \"/admin-guide/mongodb-device-registry-config/#service-configuration\" %}})\n+  configuration guide for details.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ3NjY2OQ=="}, "originalCommit": {"oid": "18aa453923ed00bb490144f0d9261bf8a5213135"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3087, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}