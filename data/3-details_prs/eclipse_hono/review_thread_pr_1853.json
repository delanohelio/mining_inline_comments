{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNTA4ODgz", "number": 1853, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzowOTozNFrODqqmYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzowOTozNFrODqqmYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDY0NzM2OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/device/AbstractRegistrationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNzowOTozNFrOF6jP8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwOTowNDo1OFrOF6mtMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzOTI0OQ==", "bodyText": "is there a particular reason why you are using flatMap in some places and compose in other places?", "url": "https://github.com/eclipse/hono/pull/1853#discussion_r396939249", "createdAt": "2020-03-24T07:09:34Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/device/AbstractRegistrationService.java", "diffHunk": "@@ -110,15 +111,17 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n      * {@link #processAssertRegistration(DeviceKey, Span) processAssertRegistration} method to work.\n      */\n     @Override\n-    public Future<RegistrationResult>  assertRegistration(final String tenantId, final String deviceId, final Span span) {\n+    public Future<RegistrationResult> assertRegistration(final String tenantId, final String deviceId, final Span span) {\n \n         Objects.requireNonNull(tenantId);\n         Objects.requireNonNull(deviceId);\n         Objects.requireNonNull(span);\n \n         return this.tenantInformationService\n                 .tenantExists(tenantId, span)\n-                .flatMap(tenantKey -> processAssertRegistration(DeviceKey.from(tenantKey, deviceId), span)\n+                .flatMap(tenantKeyResult -> tenantKeyResult.isError()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9fbd75e180f997cb49bf30d9af437e2fcbc02b4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk5NTg5MQ==", "bodyText": "Changed everything to compose to make it uniform across the codebase.", "url": "https://github.com/eclipse/hono/pull/1853#discussion_r396995891", "createdAt": "2020-03-24T09:04:58Z", "author": {"login": "dejanb"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/device/AbstractRegistrationService.java", "diffHunk": "@@ -110,15 +111,17 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n      * {@link #processAssertRegistration(DeviceKey, Span) processAssertRegistration} method to work.\n      */\n     @Override\n-    public Future<RegistrationResult>  assertRegistration(final String tenantId, final String deviceId, final Span span) {\n+    public Future<RegistrationResult> assertRegistration(final String tenantId, final String deviceId, final Span span) {\n \n         Objects.requireNonNull(tenantId);\n         Objects.requireNonNull(deviceId);\n         Objects.requireNonNull(span);\n \n         return this.tenantInformationService\n                 .tenantExists(tenantId, span)\n-                .flatMap(tenantKey -> processAssertRegistration(DeviceKey.from(tenantKey, deviceId), span)\n+                .flatMap(tenantKeyResult -> tenantKeyResult.isError()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkzOTI0OQ=="}, "originalCommit": {"oid": "e9fbd75e180f997cb49bf30d9af437e2fcbc02b4"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3306, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}