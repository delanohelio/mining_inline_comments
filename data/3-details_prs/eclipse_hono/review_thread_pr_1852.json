{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMjI5ODQ0", "number": 1852, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTowNjoxM1rODqSb5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTowOToyNVrODqSgGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjY4ODM3OnYy", "diffSide": "RIGHT", "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTowNjoxM1rOF58OQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOToxNDoyNlrOF58flw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5OTg0MQ==", "bodyText": "get command handling adapter instances?\notherwise, it will be hard to guess what this span is for, won't it?", "url": "https://github.com/eclipse/hono/pull/1852#discussion_r396299841", "createdAt": "2020-03-23T09:06:13Z", "author": {"login": "sophokles73"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "diffHunk": "@@ -201,9 +206,12 @@ public HotrodBasedDeviceConnectionInfo(final RemoteCache<String, String> cache,\n     public Future<JsonObject> getCommandHandlingAdapterInstances(final String tenantId, final String deviceId,\n             final Set<String> viaGateways, final SpanContext context) {\n \n+        final Span span = createSpan(\"get command handling instances\", tenantId, deviceId, null, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c613872ce6b9ffcddc195c4cd0c8a9901ac460a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwNDI3OQ==", "bodyText": "I've changed it accordingly.", "url": "https://github.com/eclipse/hono/pull/1852#discussion_r396304279", "createdAt": "2020-03-23T09:14:26Z", "author": {"login": "calohmn"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "diffHunk": "@@ -201,9 +206,12 @@ public HotrodBasedDeviceConnectionInfo(final RemoteCache<String, String> cache,\n     public Future<JsonObject> getCommandHandlingAdapterInstances(final String tenantId, final String deviceId,\n             final Set<String> viaGateways, final SpanContext context) {\n \n+        final Span span = createSpan(\"get command handling instances\", tenantId, deviceId, null, context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjI5OTg0MQ=="}, "originalCommit": {"oid": "2c613872ce6b9ffcddc195c4cd0c8a9901ac460a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NjY5OTE0OnYy", "diffSide": "RIGHT", "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTowOToyNVrOF58VGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOTo0MjowOVrOF59g_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwMTU5NQ==", "bodyText": "IMHO this is a client as we are retrieving data from the remote grid, aren't we?", "url": "https://github.com/eclipse/hono/pull/1852#discussion_r396301595", "createdAt": "2020-03-23T09:09:25Z", "author": {"login": "sophokles73"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "diffHunk": "@@ -437,4 +484,17 @@ private void checkForCacheAvailability(final Promise<Status> status) {\n     @Override\n     public void registerLivenessChecks(final HealthCheckHandler livenessHandler) {\n     }\n+\n+    private Span createSpan(final String operationName, final String tenantId, final String deviceId,\n+            final String adapterInstanceId, final SpanContext spanContext) {\n+        final Tracer.SpanBuilder spanBuilder = TracingHelper.buildChildSpan(tracer, spanContext, operationName, getClass().getSimpleName())\n+                .withTag(Tags.SPAN_KIND.getKey(), Tags.SPAN_KIND_SERVER)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c613872ce6b9ffcddc195c4cd0c8a9901ac460a"}, "originalPosition": 216}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwNDkwMg==", "bodyText": "Yes, right. I've changed it to SPAN_KIND_CONSUMER.", "url": "https://github.com/eclipse/hono/pull/1852#discussion_r396304902", "createdAt": "2020-03-23T09:15:27Z", "author": {"login": "calohmn"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "diffHunk": "@@ -437,4 +484,17 @@ private void checkForCacheAvailability(final Promise<Status> status) {\n     @Override\n     public void registerLivenessChecks(final HealthCheckHandler livenessHandler) {\n     }\n+\n+    private Span createSpan(final String operationName, final String tenantId, final String deviceId,\n+            final String adapterInstanceId, final SpanContext spanContext) {\n+        final Tracer.SpanBuilder spanBuilder = TracingHelper.buildChildSpan(tracer, spanContext, operationName, getClass().getSimpleName())\n+                .withTag(Tags.SPAN_KIND.getKey(), Tags.SPAN_KIND_SERVER)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwMTU5NQ=="}, "originalCommit": {"oid": "2c613872ce6b9ffcddc195c4cd0c8a9901ac460a"}, "originalPosition": 216}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMxNjA1OA==", "bodyText": "FMPOV it should be SPAN_KIND_CLIENT as we invoke a remote API and get back a result (the data from the grid) ...", "url": "https://github.com/eclipse/hono/pull/1852#discussion_r396316058", "createdAt": "2020-03-23T09:34:05Z", "author": {"login": "sophokles73"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "diffHunk": "@@ -437,4 +484,17 @@ private void checkForCacheAvailability(final Promise<Status> status) {\n     @Override\n     public void registerLivenessChecks(final HealthCheckHandler livenessHandler) {\n     }\n+\n+    private Span createSpan(final String operationName, final String tenantId, final String deviceId,\n+            final String adapterInstanceId, final SpanContext spanContext) {\n+        final Tracer.SpanBuilder spanBuilder = TracingHelper.buildChildSpan(tracer, spanContext, operationName, getClass().getSimpleName())\n+                .withTag(Tags.SPAN_KIND.getKey(), Tags.SPAN_KIND_SERVER)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwMTU5NQ=="}, "originalCommit": {"oid": "2c613872ce6b9ffcddc195c4cd0c8a9901ac460a"}, "originalPosition": 216}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMyMTAyMw==", "bodyText": "Yes, fits better. I've changed it accordingly.", "url": "https://github.com/eclipse/hono/pull/1852#discussion_r396321023", "createdAt": "2020-03-23T09:42:09Z", "author": {"login": "calohmn"}, "path": "client-device-connection-infinispan/src/main/java/org/eclipse/hono/deviceconnection/infinispan/client/HotrodBasedDeviceConnectionInfo.java", "diffHunk": "@@ -437,4 +484,17 @@ private void checkForCacheAvailability(final Promise<Status> status) {\n     @Override\n     public void registerLivenessChecks(final HealthCheckHandler livenessHandler) {\n     }\n+\n+    private Span createSpan(final String operationName, final String tenantId, final String deviceId,\n+            final String adapterInstanceId, final SpanContext spanContext) {\n+        final Tracer.SpanBuilder spanBuilder = TracingHelper.buildChildSpan(tracer, spanContext, operationName, getClass().getSimpleName())\n+                .withTag(Tags.SPAN_KIND.getKey(), Tags.SPAN_KIND_SERVER)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwMTU5NQ=="}, "originalCommit": {"oid": "2c613872ce6b9ffcddc195c4cd0c8a9901ac460a"}, "originalPosition": 216}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3304, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}