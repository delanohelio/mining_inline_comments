{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMTU3NzAw", "number": 2251, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzo0ODoxOFrOEtfmSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzoyMTo1N1rOEugOVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTM5MDgyOnYy", "diffSide": "RIGHT", "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzo0ODoxOFrOHhT-xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0NDo0MVrOHh_lWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MjQyMw==", "bodyText": "shouldn't this compare to 412 instead of 404?", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r504692423", "createdAt": "2020-10-14T13:48:18Z", "author": {"login": "sophokles73"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -823,6 +819,26 @@ private Span newSpan(final String operationName, final Device authenticatedDevic\n                 new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"cannot create command consumer\")));\n     }\n \n+    private Future<Void> closeCommandConsumer(\n+            final ProtocolAdapterCommandConsumer consumer,\n+            final String tenantId,\n+            final String deviceId,\n+            final Device authenticatedDevice,\n+            final Span span) {\n+\n+        return consumer.close(span.context())\n+                .recover(thr -> {\n+                    // ignore all but not-found errors\n+                    if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_NOT_FOUND) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwNjgxMQ==", "bodyText": "I've changed it now that the relevant code to match here is indeed 412. (See also the ProtocolAdapterCommandConsumer#close javadoc.)", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r505406811", "createdAt": "2020-10-15T09:44:41Z", "author": {"login": "calohmn"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -823,6 +819,26 @@ private Span newSpan(final String operationName, final Device authenticatedDevic\n                 new ServerErrorException(HttpURLConnection.HTTP_UNAVAILABLE, \"cannot create command consumer\")));\n     }\n \n+    private Future<Void> closeCommandConsumer(\n+            final ProtocolAdapterCommandConsumer consumer,\n+            final String tenantId,\n+            final String deviceId,\n+            final Device authenticatedDevice,\n+            final Span span) {\n+\n+        return consumer.close(span.context())\n+                .recover(thr -> {\n+                    // ignore all but not-found errors\n+                    if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_NOT_FOUND) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MjQyMw=="}, "originalCommit": {"oid": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTM5Mzk2OnYy", "diffSide": "RIGHT", "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzo0ODo1N1rOHhUAuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzo0ODo1N1rOHhUAuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY5MjkyMQ==", "bodyText": "412?", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r504692921", "createdAt": "2020-10-14T13:48:57Z", "author": {"login": "sophokles73"}, "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapter.java", "diffHunk": "@@ -760,6 +761,28 @@ protected final void onUnsubscribe(\n         CompositeFuture.join(removalDoneFutures).onComplete(r -> span.finish());\n     }\n \n+    private Function<Pair<CommandSubscription, ProtocolAdapterCommandConsumer>, Future<Void>> getOnSubscriptionRemovedFunction(\n+            final Device authenticatedDevice,\n+            final MqttEndpoint endpoint,\n+            final Span span) {\n+\n+        return subscriptionConsumerPair -> {\n+            final CommandSubscription subscription = subscriptionConsumerPair.one();\n+            final ProtocolAdapterCommandConsumer commandConsumer = subscriptionConsumerPair.two();\n+            return commandConsumer.close(span.context())\n+                    .recover(thr -> {\n+                        // ignore all but not-found errors\n+                        if (ServiceInvocationException.extractStatusCode(thr) == HttpURLConnection.HTTP_NOT_FOUND) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTQ4OTc4OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDowODozNlrOHhU79Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1OTozM1rOHiAPjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwODA4NQ==", "bodyText": "I find it extremely confusing that DeviceConnectionClientImpl.removeCommandHandlingAdapterInstance method does not comply with the Device Connection API in that the returned future actually succeeds for status codes 404 and 412 but fails for e.g. a status code 404 being returned from the service.\nI am even more confused seeing that a few lines below we actually map the successful result to a 404?", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r504708085", "createdAt": "2020-10-14T14:08:36Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "diffHunk": "@@ -196,19 +198,29 @@ protected void onDisconnect() {\n     }\n \n     private Future<Void> removeCommandConsumer(final String tenantId, final String deviceId,\n-            final SpanContext onCloseSpanContext) {\n+            final SpanContext onCloseSpanContext, final boolean isUnlimitedLifespanConsumer) {\n         log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n         adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(tenantId, deviceId);\n \n         return deviceConnectionClientFactory.getOrCreateDeviceConnectionClient(tenantId)\n                 .compose(client -> client.removeCommandHandlingAdapterInstance(deviceId, adapterInstanceId,\n                         onCloseSpanContext))\n+                .compose(removed -> {\n+                    if (!removed && isUnlimitedLifespanConsumer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNzYxNQ==", "bodyText": "The change to let DeviceConnectionClientImpl.removeCommandHandlingAdapterInstance return a Boolean future value was done when introducing the lifespan for the corresponding cache entries, with which 404 exceptions when trying to remove a just expired entry can easily occur (when the ttd has elapsed). PR for that was #1926. With that change, a failure to remove a (potentially expired) entry will also not be traced as an error in the client anymore.\nI think the corresponding server method wasn't changed back then for compatibility reasons and following up on this later on was abandoned because of the new command router concept.\nI see that it may be confusing to use that client method with having the API definition in mind. I've changed the javadoc now to add a note about that difference.\nWe could also revert #1926 and just adapt the client tracing to skip logging a 412 error there. If doing so, that should be in a follow-up PR, but frankly, I don't see that much benefit in that, also since the plan is to abandon the device connection API for the command routing component concept.\n\nI am even more confused seeing that a few lines below we actually map the successful result to a 404?\n\nI've changed that now to 412.", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r505417615", "createdAt": "2020-10-15T09:59:33Z", "author": {"login": "calohmn"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "diffHunk": "@@ -196,19 +198,29 @@ protected void onDisconnect() {\n     }\n \n     private Future<Void> removeCommandConsumer(final String tenantId, final String deviceId,\n-            final SpanContext onCloseSpanContext) {\n+            final SpanContext onCloseSpanContext, final boolean isUnlimitedLifespanConsumer) {\n         log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n         adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(tenantId, deviceId);\n \n         return deviceConnectionClientFactory.getOrCreateDeviceConnectionClient(tenantId)\n                 .compose(client -> client.removeCommandHandlingAdapterInstance(deviceId, adapterInstanceId,\n                         onCloseSpanContext))\n+                .compose(removed -> {\n+                    if (!removed && isUnlimitedLifespanConsumer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwODA4NQ=="}, "originalCommit": {"oid": "09d49c9ec750d62e8cfc51f2bb224fb4f27da371"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTcwMzM0OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/DeviceConnectionClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjoyOTo1MFrOHi6CIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjoyOTo1MFrOHi6CIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2NDQ0OQ==", "bodyText": "... to a succeeded future with value false ...", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r506364449", "createdAt": "2020-10-16T12:29:50Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/DeviceConnectionClient.java", "diffHunk": "@@ -98,6 +98,10 @@\n      * @return A future indicating the outcome of the operation, with its value indicating whether the protocol\n      *         adapter instance value was removed or not.\n      *         <p>\n+     *         NOTE: this method maps an outcome with status 404 or 412 as defined in the\n+     *         <a href=\"https://www.eclipse.org/hono/docs/api/device-connection/\">Device Connection API\n+     *         specification</a> to a future result value of {@code false} here.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73d4d410e64028e908d8c4476e61f43c0c89115a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTk2NDAxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzoxOTo1MVrOHi8xHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzoxOTo1MVrOHi8xHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwOTI0NQ==", "bodyText": "this is the check for scenario B, right (device has re-connected to same verticle instance)? IMHO it would be very helpful to describe this scenario in a comment here", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r506409245", "createdAt": "2020-10-16T13:19:51Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "diffHunk": "@@ -195,11 +202,19 @@ protected void onDisconnect() {\n                 });\n     }\n \n-    private Future<Void> removeCommandConsumer(final String tenantId, final String deviceId,\n-            final SpanContext onCloseSpanContext) {\n-        log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n-        adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(tenantId, deviceId);\n+    private Future<Void> removeCommandConsumer(final CommandHandlerWrapper commandHandlerWrapper, final Duration lifespan,\n+            final Instant lifespanStart, final SpanContext onCloseSpanContext) {\n+\n+        final String tenantId = commandHandlerWrapper.getTenantId();\n+        final String deviceId = commandHandlerWrapper.getDeviceId();\n \n+        log.trace(\"remove command consumer [tenant-id: {}, device-id: {}]\", tenantId, deviceId);\n+        if (!adapterInstanceCommandHandler.removeDeviceSpecificCommandHandler(commandHandlerWrapper)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73d4d410e64028e908d8c4476e61f43c0c89115a"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTk3OTExOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzoyMTo1N1rOHi876g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDozNzoxMFrOHjB7HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMjAxMA==", "bodyText": "this covers adapters which use stateful protocols like AMQP and MQTT where the TTD is -1, right?\nagain, IMHO it would be helpful to describe the circumstances under which this happens here in the comment in some more detail", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r506412010", "createdAt": "2020-10-16T13:21:57Z", "author": {"login": "sophokles73"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "diffHunk": "@@ -208,7 +223,18 @@ protected void onDisconnect() {\n                             deviceId, thr);\n                     return Future.failedFuture(thr);\n                 })\n-                .mapEmpty();\n+                .compose(removed -> {\n+                    final boolean entryNotExpired = lifespan.isNegative() || Instant.now().isBefore(lifespanStart.plus(lifespan));\n+                    if (!removed && entryNotExpired) {\n+                        // entry wasn't actually removed and entry hasn't expired (yet)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73d4d410e64028e908d8c4476e61f43c0c89115a"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ5MzcyNA==", "bodyText": "this covers adapters which use stateful protocols like AMQP and MQTT where the TTD is -1, right?\n\nMost importantly, but not exclusively. There could also be 2 overlapping HTTP adapter TTD requests, the above \"if\" block getting reached when calling removeCommandConsumer on the 1st request before the 2nd ttd period has elapsed. It's not that important throwing an exception in that case though, since the HTTP adapter won't send a \"disconnectedTtd\" event. But could be informative in the tracing span anyway.", "url": "https://github.com/eclipse/hono/pull/2251#discussion_r506493724", "createdAt": "2020-10-16T14:37:10Z", "author": {"login": "calohmn"}, "path": "client/src/main/java/org/eclipse/hono/client/impl/ProtocolAdapterCommandConsumerFactoryImpl.java", "diffHunk": "@@ -208,7 +223,18 @@ protected void onDisconnect() {\n                             deviceId, thr);\n                     return Future.failedFuture(thr);\n                 })\n-                .mapEmpty();\n+                .compose(removed -> {\n+                    final boolean entryNotExpired = lifespan.isNegative() || Instant.now().isBefore(lifespanStart.plus(lifespan));\n+                    if (!removed && entryNotExpired) {\n+                        // entry wasn't actually removed and entry hasn't expired (yet)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMjAxMA=="}, "originalCommit": {"oid": "73d4d410e64028e908d8c4476e61f43c0c89115a"}, "originalPosition": 79}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3108, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}