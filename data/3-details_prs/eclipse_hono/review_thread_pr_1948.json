{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NjQxMzA5", "number": 1948, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwNzowNjoxOFrOD7G-Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwNzowNjoxOFrOD7G-Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzA2ODM5OnYy", "diffSide": "RIGHT", "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwNzowNjoxOFrOGTPObg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0Mzo1NFrOGTSj2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgyNTU4Mg==", "bodyText": "why not log the error to the span?", "url": "https://github.com/eclipse/hono/pull/1948#discussion_r422825582", "createdAt": "2020-05-11T07:06:18Z", "author": {"login": "sophokles73"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -762,18 +749,29 @@ protected void handleRemoteSenderOpenForCommands(\n         });\n     }\n \n+    private void onCommandConnectionClose(final String tenantId, final String deviceId, final Device authenticatedDevice,\n+            final ProtocolAdapterCommandConsumer consumer, final OptionalInt traceSamplingPriority) {\n+\n+        final Span span = newSpan(\"handle closing of command connection\", authenticatedDevice, traceSamplingPriority);\n+        final Future<ProtonDelivery> sendEventFuture = sendDisconnectedTtdEvent(tenantId, deviceId, authenticatedDevice,\n+                span.context());\n+        final Future<Void> closeConsumerFuture = consumer.close(span.context());\n+\n+        CompositeFuture.join(sendEventFuture, closeConsumerFuture).recover(thr -> {\n+            Tags.ERROR.set(span, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4264cd0cc37ee55b004c728d61f6ee724e3b5f36"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MDIxOA==", "bodyText": "The error(s) will be logged at the respective child spans. Therefore I think it's not needed here, also because both of the child operations could have failed, meaning there are 2 errors.", "url": "https://github.com/eclipse/hono/pull/1948#discussion_r422880218", "createdAt": "2020-05-11T08:43:54Z", "author": {"login": "calohmn"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -762,18 +749,29 @@ protected void handleRemoteSenderOpenForCommands(\n         });\n     }\n \n+    private void onCommandConnectionClose(final String tenantId, final String deviceId, final Device authenticatedDevice,\n+            final ProtocolAdapterCommandConsumer consumer, final OptionalInt traceSamplingPriority) {\n+\n+        final Span span = newSpan(\"handle closing of command connection\", authenticatedDevice, traceSamplingPriority);\n+        final Future<ProtonDelivery> sendEventFuture = sendDisconnectedTtdEvent(tenantId, deviceId, authenticatedDevice,\n+                span.context());\n+        final Future<Void> closeConsumerFuture = consumer.close(span.context());\n+\n+        CompositeFuture.join(sendEventFuture, closeConsumerFuture).recover(thr -> {\n+            Tags.ERROR.set(span, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjgyNTU4Mg=="}, "originalCommit": {"oid": "4264cd0cc37ee55b004c728d61f6ee724e3b5f36"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3226, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}