{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NDcyMjg0", "number": 1992, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTowMzoyNlrOEAjOww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTowNDoxOFrOEAjQRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDEyNjc1OnYy", "diffSide": "RIGHT", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/AbstractVertxBasedCoapAdapter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTowMzoyNlrOGb5k2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTo1MjowN1rOGb7tyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODA1OQ==", "bodyText": "how about moving this method to CoapContext?", "url": "https://github.com/eclipse/hono/pull/1992#discussion_r431908059", "createdAt": "2020-05-28T15:03:26Z", "author": {"login": "sophokles73"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/AbstractVertxBasedCoapAdapter.java", "diffHunk": "@@ -1059,6 +1066,36 @@ private void addCommandReceptionTimer(\n         context.put(KEY_TIMER_ID, timerId);\n     }\n \n+    /**\n+     * Sets a timer to trigger the sending of a separate ACK to a device.\n+     * <p>\n+     *\n+     * @param context The device's currently executing HTTP request.\n+     * @param timeoutMillis The number of milliseconds to wait for a separate ACK.\n+     */\n+    private void addSeparateAcceptTimer(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bb2944b2ef696d0531c9d4b2fc88650806f473"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk0MzExMw==", "bodyText": "Done.", "url": "https://github.com/eclipse/hono/pull/1992#discussion_r431943113", "createdAt": "2020-05-28T15:52:07Z", "author": {"login": "boaks"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/AbstractVertxBasedCoapAdapter.java", "diffHunk": "@@ -1059,6 +1066,36 @@ private void addCommandReceptionTimer(\n         context.put(KEY_TIMER_ID, timerId);\n     }\n \n+    /**\n+     * Sets a timer to trigger the sending of a separate ACK to a device.\n+     * <p>\n+     *\n+     * @param context The device's currently executing HTTP request.\n+     * @param timeoutMillis The number of milliseconds to wait for a separate ACK.\n+     */\n+    private void addSeparateAcceptTimer(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODA1OQ=="}, "originalCommit": {"oid": "78bb2944b2ef696d0531c9d4b2fc88650806f473"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDEyOTk4OnYy", "diffSide": "RIGHT", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTowNDowOVrOGb5nFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTo1MjoxN1rOGb7uNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODYzMQ==", "bodyText": "IMHO the {@link } should be omitted", "url": "https://github.com/eclipse/hono/pull/1992#discussion_r431908631", "createdAt": "2020-05-28T15:04:09Z", "author": {"login": "sophokles73"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -352,4 +357,39 @@ public final void setMessageOffloadingEnabled(final boolean messageOffloading) {\n         this.messageOffloadingEnabled = messageOffloading;\n     }\n \n+    /**\n+     * Gets the timeout to ACK a CoAP CON requests.\n+     * <p>\n+     * If the response is available before that timeout, a more efficient piggybacked response is used. If the timeout\n+     * is reached without response, a separate ACK is sent to prevent the client form retransmit the CON request.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_TIMEOUT_TO_ACK}, {@value #DEFAULT_TIMEOUT_TO_ACK}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bb2944b2ef696d0531c9d4b2fc88650806f473"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk0MzIyMg==", "bodyText": "Done.", "url": "https://github.com/eclipse/hono/pull/1992#discussion_r431943222", "createdAt": "2020-05-28T15:52:17Z", "author": {"login": "boaks"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -352,4 +357,39 @@ public final void setMessageOffloadingEnabled(final boolean messageOffloading) {\n         this.messageOffloadingEnabled = messageOffloading;\n     }\n \n+    /**\n+     * Gets the timeout to ACK a CoAP CON requests.\n+     * <p>\n+     * If the response is available before that timeout, a more efficient piggybacked response is used. If the timeout\n+     * is reached without response, a separate ACK is sent to prevent the client form retransmit the CON request.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_TIMEOUT_TO_ACK}, {@value #DEFAULT_TIMEOUT_TO_ACK}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODYzMQ=="}, "originalCommit": {"oid": "78bb2944b2ef696d0531c9d4b2fc88650806f473"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDEzMDYyOnYy", "diffSide": "RIGHT", "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTowNDoxOFrOGb5nfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTo1MjoyNlrOGb7uog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODczMw==", "bodyText": "see above", "url": "https://github.com/eclipse/hono/pull/1992#discussion_r431908733", "createdAt": "2020-05-28T15:04:18Z", "author": {"login": "sophokles73"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -352,4 +357,39 @@ public final void setMessageOffloadingEnabled(final boolean messageOffloading) {\n         this.messageOffloadingEnabled = messageOffloading;\n     }\n \n+    /**\n+     * Gets the timeout to ACK a CoAP CON requests.\n+     * <p>\n+     * If the response is available before that timeout, a more efficient piggybacked response is used. If the timeout\n+     * is reached without response, a separate ACK is sent to prevent the client form retransmit the CON request.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_TIMEOUT_TO_ACK}, {@value #DEFAULT_TIMEOUT_TO_ACK}\n+     * milliseconds.\n+     *\n+     * @return The timeout in milliseconds. {@code 0} directly send ACK, {@code -1}, never send piggybacked response,\n+     *         always use separate response.\n+     */\n+    public final int getTimeoutToAck() {\n+        return timeoutToAck;\n+    }\n+\n+    /**\n+     * Sets the timeout to ACK a CoAP CON request.\n+     * <p>\n+     * If the response is available before that timeout, a more efficient piggybacked response is used. If the timeout\n+     * is reached without response, a separate ACK is sent to prevent the client form retransmit the CON request.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_TIMEOUT_TO_ACK}, {@value #DEFAULT_TIMEOUT_TO_ACK}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bb2944b2ef696d0531c9d4b2fc88650806f473"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk0MzMzMA==", "bodyText": "Done.", "url": "https://github.com/eclipse/hono/pull/1992#discussion_r431943330", "createdAt": "2020-05-28T15:52:26Z", "author": {"login": "boaks"}, "path": "adapters/coap-vertx-base/src/main/java/org/eclipse/hono/adapter/coap/CoapAdapterProperties.java", "diffHunk": "@@ -352,4 +357,39 @@ public final void setMessageOffloadingEnabled(final boolean messageOffloading) {\n         this.messageOffloadingEnabled = messageOffloading;\n     }\n \n+    /**\n+     * Gets the timeout to ACK a CoAP CON requests.\n+     * <p>\n+     * If the response is available before that timeout, a more efficient piggybacked response is used. If the timeout\n+     * is reached without response, a separate ACK is sent to prevent the client form retransmit the CON request.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_TIMEOUT_TO_ACK}, {@value #DEFAULT_TIMEOUT_TO_ACK}\n+     * milliseconds.\n+     *\n+     * @return The timeout in milliseconds. {@code 0} directly send ACK, {@code -1}, never send piggybacked response,\n+     *         always use separate response.\n+     */\n+    public final int getTimeoutToAck() {\n+        return timeoutToAck;\n+    }\n+\n+    /**\n+     * Sets the timeout to ACK a CoAP CON request.\n+     * <p>\n+     * If the response is available before that timeout, a more efficient piggybacked response is used. If the timeout\n+     * is reached without response, a separate ACK is sent to prevent the client form retransmit the CON request.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_TIMEOUT_TO_ACK}, {@value #DEFAULT_TIMEOUT_TO_ACK}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTkwODczMw=="}, "originalCommit": {"oid": "78bb2944b2ef696d0531c9d4b2fc88650806f473"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3132, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}