{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5OTUyMjU0", "number": 1882, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNjozNToxN1rODvap3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDozNDoxNVrODy2g3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDQ2MzY3OnYy", "diffSide": "RIGHT", "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNjozNToxN1rOGB01aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTowMDo0NVrOGF9_Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU2NzQwMA==", "bodyText": "IMHO this should also be done in the newQueryRequest method, shouldn't it? It should also only be set if the config value is > 0, right?", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r404567400", "createdAt": "2020-04-07T06:35:17Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "diffHunk": "@@ -488,7 +488,9 @@ private void checkMessageLimit(\n \n         final Promise<Long> result = Promise.promise();\n         LOG.trace(\"running Prometheus query [URL: {}, query: {}]\", url, query);\n-        newQueryRequest(query).send(sendAttempt -> {\n+        newQueryRequest(query)\n+                .timeout(config.getQueryTimeout())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed3ff7cdedce42407be7e5184f6498c4a1d3d676"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxMTY1NA==", "bodyText": "Vertx web-client have already the logic for timeout when is zero or negative the timeout is disabled. But anyway,  I followed your suggestion and   I putted the timeout  in the newQueryRequest .", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r408911654", "createdAt": "2020-04-15T15:00:45Z", "author": {"login": "bordeuax"}, "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "diffHunk": "@@ -488,7 +488,9 @@ private void checkMessageLimit(\n \n         final Promise<Long> result = Promise.promise();\n         LOG.trace(\"running Prometheus query [URL: {}, query: {}]\", url, query);\n-        newQueryRequest(query).send(sendAttempt -> {\n+        newQueryRequest(query)\n+                .timeout(config.getQueryTimeout())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU2NzQwMA=="}, "originalCommit": {"oid": "ed3ff7cdedce42407be7e5184f6498c4a1d3d676"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDQ3MTQzOnYy", "diffSide": "RIGHT", "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNjozODoxNlrOGB06Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwOTowMzowNlrOGHF9SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU2ODYxMQ==", "bodyText": "My understanding is that the query will run on Prometheus for hte given amount of time. However, since the query will be started after the request has been sent, I assume that we can run into situations where the WebClient stops waiting for the response while the query is still running. I therefore think that the timeout set on the WebClient should serve as a backstop only, i.e. it should wait for some additional time in order to allow for the query to finish in any case. WDYT?", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r404568611", "createdAt": "2020-04-07T06:38:16Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "diffHunk": "@@ -515,6 +517,10 @@ private void checkMessageLimit(\n                 .expect(ResponsePredicate.SC_OK)\n                 .as(BodyCodec.jsonObject());\n \n+        if (config.getQueryTimeout() > 0) {\n+           request.addQueryParam(\"timeout\", String.format(\"%dms\", config.getQueryTimeout()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed3ff7cdedce42407be7e5184f6498c4a1d3d676"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ4NjQ1OA==", "bodyText": "You are totally right, such edge case will definitely happen. Here I see several options :\n\nadd some additional time (for example can be 20 or 50 percentage more than web client timeout ) to timeout query parameter ;  In my understating this will reduce probability of such edge case but still this will happen, because  this additional time  will certainly depend on network and maybe some Prometheus configuration.\ndo not set timeout query parameter; Prometheus already have a global query timeout\nhave additional configuration section like query HONO_RESOURCELIMITS_PROMETHEUSBASED_QUERYPARAMETERS_TIMEOUT, that will give for user directly access and configuration for this value.\nkeep timeout query parameter with the value as for web client and put additional query parameter time   that indicate when the execution have been started (at least this is my understating regarding time parameter );  for more info see https://gitlab.cncf.ci/prometheus/prometheus/blob/3bce14db85998b48dde4066d9490b4f3eb4223e1/docs/querying/api.md\n@sophokles73, WDYT?", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r409486458", "createdAt": "2020-04-16T11:34:44Z", "author": {"login": "bordeuax"}, "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "diffHunk": "@@ -515,6 +517,10 @@ private void checkMessageLimit(\n                 .expect(ResponsePredicate.SC_OK)\n                 .as(BodyCodec.jsonObject());\n \n+        if (config.getQueryTimeout() > 0) {\n+           request.addQueryParam(\"timeout\", String.format(\"%dms\", config.getQueryTimeout()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU2ODYxMQ=="}, "originalCommit": {"oid": "ed3ff7cdedce42407be7e5184f6498c4a1d3d676"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3MDgwNQ==", "bodyText": "IMHO we should rely on Prometheus' global query timeout and use the vert.x WebClient's timeout property as a backstop. The backstop should be configurable using e.g. the HONO_RESOURCELIMITS_PROMETHEUSBASED_QUERYTIMEOUT variable.", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r409570805", "createdAt": "2020-04-16T13:49:18Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "diffHunk": "@@ -515,6 +517,10 @@ private void checkMessageLimit(\n                 .expect(ResponsePredicate.SC_OK)\n                 .as(BodyCodec.jsonObject());\n \n+        if (config.getQueryTimeout() > 0) {\n+           request.addQueryParam(\"timeout\", String.format(\"%dms\", config.getQueryTimeout()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU2ODYxMQ=="}, "originalCommit": {"oid": "ed3ff7cdedce42407be7e5184f6498c4a1d3d676"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5MDgyNQ==", "bodyText": "OK. Fixed , followed your suggestions.", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r410090825", "createdAt": "2020-04-17T09:03:06Z", "author": {"login": "bordeuax"}, "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecks.java", "diffHunk": "@@ -515,6 +517,10 @@ private void checkMessageLimit(\n                 .expect(ResponsePredicate.SC_OK)\n                 .as(BodyCodec.jsonObject());\n \n+        if (config.getQueryTimeout() > 0) {\n+           request.addQueryParam(\"timeout\", String.format(\"%dms\", config.getQueryTimeout()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU2ODYxMQ=="}, "originalCommit": {"oid": "ed3ff7cdedce42407be7e5184f6498c4a1d3d676"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjQ2NzEwOnYy", "diffSide": "RIGHT", "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecksConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDoyNzo0NVrOGHIsGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDoyNzo0NVrOGHIsGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEzNTU3OQ==", "bodyText": "how about using a request instead of the request since you are not referring to a particular request? e.g\n\nGets the period of time after which a request to a Prometheus server is closed", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r410135579", "createdAt": "2020-04-17T10:27:45Z", "author": {"login": "Alfusainey"}, "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecksConfig.java", "diffHunk": "@@ -138,4 +144,28 @@ public void setCacheTimeout(final long timeout) {\n         this.cacheTimeout = timeout;\n     }\n \n+    /**\n+     * Gets the period of time after which the request to a Prometheus server are closed.\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed4ed5626d1182074a82548549155207e413f75"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjQ3MDE5OnYy", "diffSide": "RIGHT", "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecksConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDoyODo0OVrOGHIuFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDoyODo0OVrOGHIuFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEzNjA4NA==", "bodyText": "same as above", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r410136084", "createdAt": "2020-04-17T10:28:49Z", "author": {"login": "Alfusainey"}, "path": "service-base/src/main/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecksConfig.java", "diffHunk": "@@ -138,4 +144,28 @@ public void setCacheTimeout(final long timeout) {\n         this.cacheTimeout = timeout;\n     }\n \n+    /**\n+     * Gets the period of time after which the request to a Prometheus server are closed.\n+     * <p>\n+     * The default value of this property is {@link #DEFAULT_QUERY_TIMEOUT}.\n+     *\n+     * @return The timeout for the request to a remote server in milliseconds, zero or negative value is for disabled timeout.\n+     */\n+    public long getQueryTimeout() {\n+        return queryTimeout;\n+    }\n+\n+    /**\n+     * Sets the period of time after which the request to a Prometheus server are closed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed4ed5626d1182074a82548549155207e413f75"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjQ3MjA4OnYy", "diffSide": "RIGHT", "path": "service-base/src/test/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecksTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDoyOToyOFrOGHIvQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDoyOToyOFrOGHIvQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEzNjM4Nw==", "bodyText": "has occured", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r410136387", "createdAt": "2020-04-17T10:29:28Z", "author": {"login": "Alfusainey"}, "path": "service-base/src/test/java/org/eclipse/hono/service/resourcelimits/PrometheusBasedResourceLimitChecksTest.java", "diffHunk": "@@ -519,6 +545,35 @@ public void testConnectionDurationLimitExceeded(final VertxTestContext ctx) {\n                 }));\n     }\n \n+    /**\n+     * Verifies that the message limit check returns {@code false} if a timeout is occurred.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed4ed5626d1182074a82548549155207e413f75"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjQ4NTQzOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/admin-guide/common-config.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDozNDoxNVrOGHI38w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDozNDoxNVrOGHI38w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDEzODYxMQ==", "bodyText": "a  request to  a Prometheus server is closed", "url": "https://github.com/eclipse/hono/pull/1882#discussion_r410138611", "createdAt": "2020-04-17T10:34:15Z", "author": {"login": "Alfusainey"}, "path": "site/documentation/content/admin-guide/common-config.md", "diffHunk": "@@ -136,6 +136,7 @@ The following table provides an overview of the configuration variables and corr\n | `HONO_RESOURCELIMITS_PROMETHEUSBASED_CACHE_MIN_SIZE`<br>`--hono.resourceLimits.prometheusBased.cacheMinSize` | no | `20` | The minimum size of the cache to store the metrics data retrieved from the Prometheus server. The cache is used for storing the current amount of data exchanged with devices of tenants. |\n | `HONO_RESOURCELIMITS_PROMETHEUSBASED_CACHE_MAX_SIZE`<br>`--hono.resourceLimits.prometheusBased.cacheMaxSize` | no | `1000` | The maximum size of the cache to store the metrics data retrieved from the Prometheus server. |\n | `HONO_RESOURCELIMITS_PROMETHEUSBASED_CACHE_TIMEOUT`<br>`--hono.resourceLimits.prometheusBased.cacheTimeout` | no | `600` | The number of seconds after which the cached metrics data should be considered invalid. |\n+| `HONO_RESOURCELIMITS_PROMETHEUSBASED_QUERY_TIMEOUT`<br>`--hono.resourceLimits.prometheusBased.queryTimeout` | no | `500` | The number of milliseconds after which the request to a Prometheus server are closed. Setting zero or a negative value disables the timeout.|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed4ed5626d1182074a82548549155207e413f75"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3325, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}