{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NzIwNDgw", "number": 2287, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzo1ODo0MlrOE2x03A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzo1ODoxMVrOE549-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODc0OTA4OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzo1ODo0MlrOHvwG2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzo1ODo0MlrOHvwG2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzMzMwNw==", "bodyText": "isAutoProvisioned ?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r519833307", "createdAt": "2020-11-09T13:58:42Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -159,6 +173,22 @@ protected final void setDeviceId(final String deviceId) {\n         this.deviceId = Objects.requireNonNull(deviceId);\n     }\n \n+    protected void setAutoProvisioned(final Boolean autoProvisioned) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4283b799062a81f11f2b4b928433916db1591340"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODc1MTEzOnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzo1OToxMVrOHvwIIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMzo1OToxMVrOHvwIIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzMzYzMg==", "bodyText": "isAutoProvisioningNotificationSent?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r519833632", "createdAt": "2020-11-09T13:59:11Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -159,6 +173,22 @@ protected final void setDeviceId(final String deviceId) {\n         this.deviceId = Objects.requireNonNull(deviceId);\n     }\n \n+    protected void setAutoProvisioned(final Boolean autoProvisioned) {\n+        this.autoProvisioned = autoProvisioned;\n+    }\n+\n+    public Boolean getAutoProvisioned() {\n+        return autoProvisioned;\n+    }\n+\n+    public void setAutoProvisioningNotificationSent(final Boolean autoProvisioningNotificationSent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4283b799062a81f11f2b4b928433916db1591340"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODc1NjM3OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNDowMDoxOFrOHvwLRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODoxODowMFrOHxvDQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzNDQzNw==", "bodyText": "is it important that these are not of the primitive type? IMHO the code will be easier to understand if we do not need to account for null values all over the place ...", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r519834437", "createdAt": "2020-11-09T14:00:18Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -32,6 +32,12 @@\n     @JsonProperty(value = RegistryManagementConstants.FIELD_PAYLOAD_DEVICE_ID)\n     private String deviceId;\n \n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONED)\n+    private Boolean autoProvisioned;\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONING_NOTIFICATION_SENT)\n+    private Boolean autoProvisioningNotificationSent;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4283b799062a81f11f2b4b928433916db1591340"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM5MDI5Nw==", "bodyText": "I see. Then how about letting the isAutoProvisioned and isAutoProvisioningNotificationSent methods return a primitive boolean instead?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r520390297", "createdAt": "2020-11-10T08:53:41Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -32,6 +32,12 @@\n     @JsonProperty(value = RegistryManagementConstants.FIELD_PAYLOAD_DEVICE_ID)\n     private String deviceId;\n \n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONED)\n+    private Boolean autoProvisioned;\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONING_NOTIFICATION_SENT)\n+    private Boolean autoProvisioningNotificationSent;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzNDQzNw=="}, "originalCommit": {"oid": "4283b799062a81f11f2b4b928433916db1591340"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkxMzE1NA==", "bodyText": "wouldn't it be easier to keep a DeviceStatus typed field instead of duplicating the DeviceStatus properties here?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r521913154", "createdAt": "2020-11-12T08:18:00Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -32,6 +32,12 @@\n     @JsonProperty(value = RegistryManagementConstants.FIELD_PAYLOAD_DEVICE_ID)\n     private String deviceId;\n \n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONED)\n+    private Boolean autoProvisioned;\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONING_NOTIFICATION_SENT)\n+    private Boolean autoProvisioningNotificationSent;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTgzNDQzNw=="}, "originalCommit": {"oid": "4283b799062a81f11f2b4b928433916db1591340"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTkzNTE4OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzo1NDozOVrOHxuP4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1MzoxNlrOHxwiWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDAwMQ==", "bodyText": "please rename to setAutoProvisioned in order to follow the naming scheme used throughout Hono ...\nwhy should we accept null here? Why don't we simply change the param to the primitive type. In the end, that is also what is returned by the corresponding getter ...", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r521900001", "createdAt": "2020-11-12T07:54:39Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceStatus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.service.management.device;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * A status used in Device value object.\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public class DeviceStatus extends Status<DeviceStatus> {\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONED)\n+    private Boolean autoProvisioned;\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONING_NOTIFICATION_SENT)\n+    private Boolean autoProvisioningNotificationSent;\n+\n+    /**\n+     * Checks if this device was created by Hono's auto-provisioning capability.\n+     * <p>\n+     * The default value of this property is {@code false}.\n+     *\n+     * @return {@code true} if this device was auto-provisioned.\n+     */\n+    public boolean isAutoProvisioned() {\n+        return Optional.ofNullable(autoProvisioned).orElse(false);\n+    }\n+\n+    /**\n+     * Marks this device as auto-provisioned/manually provisioned.\n+     *\n+     * @param autoProvisioned {@code true}, if auto-provisioned. May be {@code null} which then defaults to false.\n+     *\n+     * @return a reference to this for fluent use.\n+     */\n+    public DeviceStatus setIsAutoProvisioned(final Boolean autoProvisioned) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dc3fd198a2305efd70b34900cc8ce5975585813"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNzQ5OQ==", "bodyText": "Okay, will rename.\nThe reason for accepting null are device registrations which were made before these two properties were introduced.\nFor MongoDb this means that there are documents which do not contain that property and for the JDBC registry it depends on how the migration is done (either adding two columns and setting all present values to false or null).", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r521937499", "createdAt": "2020-11-12T08:53:16Z", "author": {"login": "fkaltner"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceStatus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.service.management.device;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * A status used in Device value object.\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public class DeviceStatus extends Status<DeviceStatus> {\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONED)\n+    private Boolean autoProvisioned;\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONING_NOTIFICATION_SENT)\n+    private Boolean autoProvisioningNotificationSent;\n+\n+    /**\n+     * Checks if this device was created by Hono's auto-provisioning capability.\n+     * <p>\n+     * The default value of this property is {@code false}.\n+     *\n+     * @return {@code true} if this device was auto-provisioned.\n+     */\n+    public boolean isAutoProvisioned() {\n+        return Optional.ofNullable(autoProvisioned).orElse(false);\n+    }\n+\n+    /**\n+     * Marks this device as auto-provisioned/manually provisioned.\n+     *\n+     * @param autoProvisioned {@code true}, if auto-provisioned. May be {@code null} which then defaults to false.\n+     *\n+     * @return a reference to this for fluent use.\n+     */\n+    public DeviceStatus setIsAutoProvisioned(final Boolean autoProvisioned) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDAwMQ=="}, "originalCommit": {"oid": "7dc3fd198a2305efd70b34900cc8ce5975585813"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTkzNTc2OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceStatus.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzo1NDo0NlrOHxuQKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzo1NDo0NlrOHxuQKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDA3NA==", "bodyText": "see above", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r521900074", "createdAt": "2020-11-12T07:54:46Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceStatus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.service.management.device;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * A status used in Device value object.\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public class DeviceStatus extends Status<DeviceStatus> {\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONED)\n+    private Boolean autoProvisioned;\n+\n+    @JsonProperty(RegistryManagementConstants.FIELD_AUTO_PROVISIONING_NOTIFICATION_SENT)\n+    private Boolean autoProvisioningNotificationSent;\n+\n+    /**\n+     * Checks if this device was created by Hono's auto-provisioning capability.\n+     * <p>\n+     * The default value of this property is {@code false}.\n+     *\n+     * @return {@code true} if this device was auto-provisioned.\n+     */\n+    public boolean isAutoProvisioned() {\n+        return Optional.ofNullable(autoProvisioned).orElse(false);\n+    }\n+\n+    /**\n+     * Marks this device as auto-provisioned/manually provisioned.\n+     *\n+     * @param autoProvisioned {@code true}, if auto-provisioned. May be {@code null} which then defaults to false.\n+     *\n+     * @return a reference to this for fluent use.\n+     */\n+    public DeviceStatus setIsAutoProvisioned(final Boolean autoProvisioned) {\n+        this.autoProvisioned = autoProvisioned;\n+        return this;\n+    }\n+\n+    /**\n+     * Checks if a notification of this device having been auto-provisioned has been sent to the northbound application.\n+     * <p>\n+     * The default value of this property is {@code false}.\n+     *\n+     * @return {@code true} if the notification has been sent.\n+     */\n+    public boolean isAutoProvisioningNotificationSent() {\n+        return Optional.ofNullable(autoProvisioningNotificationSent).orElse(false);\n+    }\n+\n+    /**\n+     * Marks this device's auto-provisioning as having been sent.\n+     *\n+     * @param autoProvisioningNotificationSent {@code true}, if the notification has been sent.\n+     *                                                     May be {@code null} which then defaults to false.\n+     *\n+     * @return a reference to this for fluent use.\n+     */\n+    public DeviceStatus setIsAutoProvisioningNotificationSent(final Boolean autoProvisioningNotificationSent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dc3fd198a2305efd70b34900cc8ce5975585813"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTkzNjY5OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceStatus.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzo1NTowN1rOHxuQxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDo1MToyN1rOHx1NJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDIzMQ==", "bodyText": "is this class or its methods supposed to be extended/overridden?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r521900231", "createdAt": "2020-11-12T07:55:07Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceStatus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.service.management.device;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * A status used in Device value object.\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public class DeviceStatus extends Status<DeviceStatus> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dc3fd198a2305efd70b34900cc8ce5975585813"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAxMzk4OA==", "bodyText": "No, added final modifier.", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r522013988", "createdAt": "2020-11-12T10:51:27Z", "author": {"login": "fkaltner"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceStatus.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+\n+package org.eclipse.hono.service.management.device;\n+\n+import java.util.Optional;\n+\n+import org.eclipse.hono.util.RegistryManagementConstants;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/**\n+ * A status used in Device value object.\n+ */\n+@JsonInclude(value = JsonInclude.Include.NON_NULL)\n+public class DeviceStatus extends Status<DeviceStatus> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDIzMQ=="}, "originalCommit": {"oid": "7dc3fd198a2305efd70b34900cc8ce5975585813"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MTkzODgwOnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/Status.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzo1NTo0OVrOHxuSBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwNzo1NTo0OVrOHxuSBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkwMDU0OQ==", "bodyText": "if the class itself is no longer final, then maybe its methods should be?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r521900549", "createdAt": "2020-11-12T07:55:49Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/Status.java", "diffHunk": "@@ -22,9 +22,11 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n /**\n- * A status used in Device value object.\n+ * A status base object of a model entity.\n+ *\n+ * @param <T> The concrete type of the status object for a model entity.\n  */\n-public final class Status {\n+public class Status<T extends Status<T>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dc3fd198a2305efd70b34900cc8ce5975585813"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjAwOTcwOnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODoxNToxOVrOHxu9Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwOTowNTowMlrOHxw_Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkxMTYxMQ==", "bodyText": "there doesn't seem to be any P involved in this method, or am I mistaken?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r521911611", "createdAt": "2020-11-12T08:15:19Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -53,12 +61,13 @@ public DeviceDto() {\n      *\n      * @return A DTO instance for creating a new entry.\n      */\n-    public static <P extends Device, T extends DeviceDto> T forCreation(final Supplier<T> supplier, final String tenantId, final String deviceId, final Device device, final String version) {\n+    public static <P extends Device, T extends DeviceDto> T forCreation(final Supplier<T> supplier, final String tenantId, final String deviceId, final Boolean autoProvisioned, final Device device, final String version) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dc3fd198a2305efd70b34900cc8ce5975585813"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk0NDg3OA==", "bodyText": "No, you're right. Thanks for spotting \ud83d\udc4d", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r521944878", "createdAt": "2020-11-12T09:05:02Z", "author": {"login": "fkaltner"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -53,12 +61,13 @@ public DeviceDto() {\n      *\n      * @return A DTO instance for creating a new entry.\n      */\n-    public static <P extends Device, T extends DeviceDto> T forCreation(final Supplier<T> supplier, final String tenantId, final String deviceId, final Device device, final String version) {\n+    public static <P extends Device, T extends DeviceDto> T forCreation(final Supplier<T> supplier, final String tenantId, final String deviceId, final Boolean autoProvisioned, final Device device, final String version) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkxMTYxMQ=="}, "originalCommit": {"oid": "7dc3fd198a2305efd70b34900cc8ce5975585813"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTI4NjI0OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzoyODoxNVrOH0nYNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzo1NDo1NVrOH0oHng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkzMzE3Mg==", "bodyText": "is there a particular reason why we do not simply pass a DeviceStatus instance as a parameter to this method? Or do you want to hide the existence of DeviceStatus to client code?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r524933172", "createdAt": "2020-11-17T07:28:15Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -91,8 +89,10 @@ public static DeviceDto forRead(final String tenantId, final String deviceId, fi\n         final DeviceDto deviceDto = BaseDto.forRead(DeviceDto::new, device, created, updated, version);\n         deviceDto.setTenantId(tenantId);\n         deviceDto.setDeviceId(deviceId);\n-        deviceDto.setIsAutoProvisioned(autoProvisioned);\n-        deviceDto.setIsAutoProvisioningNotificationSent(autoProvisioningNotificationSent);\n+        deviceDto.setDeviceStatus(new DeviceStatus()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea558c422b4a3cc85002902894803949bb18f8ed"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NTMxMA==", "bodyText": "No, I hadn't information hiding in mind when I implemented this. Thinking a second time about this, your proposal makes sense as it shortens the parameter list.", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r524945310", "createdAt": "2020-11-17T07:54:55Z", "author": {"login": "fkaltner"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -91,8 +89,10 @@ public static DeviceDto forRead(final String tenantId, final String deviceId, fi\n         final DeviceDto deviceDto = BaseDto.forRead(DeviceDto::new, device, created, updated, version);\n         deviceDto.setTenantId(tenantId);\n         deviceDto.setDeviceId(deviceId);\n-        deviceDto.setIsAutoProvisioned(autoProvisioned);\n-        deviceDto.setIsAutoProvisioningNotificationSent(autoProvisioningNotificationSent);\n+        deviceDto.setDeviceStatus(new DeviceStatus()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkzMzE3Mg=="}, "originalCommit": {"oid": "ea558c422b4a3cc85002902894803949bb18f8ed"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTM3NjU5OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzo1ODoxMVrOH0oNjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODo0Nzo0OVrOH0qL6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NjgyOA==", "bodyText": "what about forCreation and forUpdate? It seems odd that one method accepts the DeviceStatus as arg but the others require DeviceStatus' properties explicitly, doesn't it?", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r524946828", "createdAt": "2020-11-17T07:58:11Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -76,23 +76,19 @@ public DeviceDto() {\n      * @param tenantId The id of the tenant.\n      * @param deviceId The id of the device.\n      * @param device The data of the DTO.\n-     * @param autoProvisioned Marks this device as being auto-provisioned.\n-     * @param autoProvisioningNotificationSent Marks the auto-provisioning notification for this device as sent.\n+     * @param deviceStatus The registry internal status of the device.\n      * @param created The instant when the object was created.\n      * @param updated The instant of the most recent update.\n      * @param version The version of the DTO\n      *\n      * @return A DTO instance for reading an entry.\n      */\n     public static DeviceDto forRead(final String tenantId, final String deviceId, final Device device,\n-                                    final Boolean autoProvisioned, final Boolean autoProvisioningNotificationSent, final Instant created, final Instant updated, final String version) {\n+                                    final DeviceStatus deviceStatus, final Instant created, final Instant updated, final String version) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b6349b461999d368f65a9fe756dc24566cb038e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3NDcyOA==", "bodyText": "forCreation only should set the autoProvisioned flag, forUpdate only the autoProvisioningNotificationSent flag.\nIf we made the method accept a DeviceStatus instance we would invoke the impression to the caller that one can set both flags in those calls which isn't true.", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r524974728", "createdAt": "2020-11-17T08:40:27Z", "author": {"login": "fkaltner"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -76,23 +76,19 @@ public DeviceDto() {\n      * @param tenantId The id of the tenant.\n      * @param deviceId The id of the device.\n      * @param device The data of the DTO.\n-     * @param autoProvisioned Marks this device as being auto-provisioned.\n-     * @param autoProvisioningNotificationSent Marks the auto-provisioning notification for this device as sent.\n+     * @param deviceStatus The registry internal status of the device.\n      * @param created The instant when the object was created.\n      * @param updated The instant of the most recent update.\n      * @param version The version of the DTO\n      *\n      * @return A DTO instance for reading an entry.\n      */\n     public static DeviceDto forRead(final String tenantId, final String deviceId, final Device device,\n-                                    final Boolean autoProvisioned, final Boolean autoProvisioningNotificationSent, final Instant created, final Instant updated, final String version) {\n+                                    final DeviceStatus deviceStatus, final Instant created, final Instant updated, final String version) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NjgyOA=="}, "originalCommit": {"oid": "1b6349b461999d368f65a9fe756dc24566cb038e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk3OTE3OQ==", "bodyText": "I see", "url": "https://github.com/eclipse/hono/pull/2287#discussion_r524979179", "createdAt": "2020-11-17T08:47:49Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/service/management/device/DeviceDto.java", "diffHunk": "@@ -76,23 +76,19 @@ public DeviceDto() {\n      * @param tenantId The id of the tenant.\n      * @param deviceId The id of the device.\n      * @param device The data of the DTO.\n-     * @param autoProvisioned Marks this device as being auto-provisioned.\n-     * @param autoProvisioningNotificationSent Marks the auto-provisioning notification for this device as sent.\n+     * @param deviceStatus The registry internal status of the device.\n      * @param created The instant when the object was created.\n      * @param updated The instant of the most recent update.\n      * @param version The version of the DTO\n      *\n      * @return A DTO instance for reading an entry.\n      */\n     public static DeviceDto forRead(final String tenantId, final String deviceId, final Device device,\n-                                    final Boolean autoProvisioned, final Boolean autoProvisioningNotificationSent, final Instant created, final Instant updated, final String version) {\n+                                    final DeviceStatus deviceStatus, final Instant created, final Instant updated, final String version) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NjgyOA=="}, "originalCommit": {"oid": "1b6349b461999d368f65a9fe756dc24566cb038e"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2868, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}