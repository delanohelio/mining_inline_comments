{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNDk5MTY4", "number": 2299, "title": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter.", "bodyText": "The HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\nSigned-off-by: Florian Kaltner florian.kaltner@bosch.io", "createdAt": "2020-11-16T08:26:38Z", "url": "https://github.com/eclipse/hono/pull/2299", "merged": true, "mergeCommit": {"oid": "3f13cf763318380c0ccdc35a355b005cf29d2440"}, "closed": true, "closedAt": "2020-11-23T09:59:36Z", "author": {"login": "fkaltner"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddA2yggBqjM5OTkwNjIzODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfSKOkgFqTUzNjMxNzM0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "89e562dddd11bbaa0e7f83149778f172550d3583", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/89e562dddd11bbaa0e7f83149778f172550d3583", "committedDate": "2020-11-16T08:21:54Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter.\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "29740b0acc26bc58b6fa54e640baf76555a58f6b", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/29740b0acc26bc58b6fa54e640baf76555a58f6b", "committedDate": "2020-11-16T08:40:38Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter.\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa28f017f58edac8b12c5b5a9765a438b18a95ee", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/fa28f017f58edac8b12c5b5a9765a438b18a95ee", "committedDate": "2020-11-16T09:15:22Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter.\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29740b0acc26bc58b6fa54e640baf76555a58f6b", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/29740b0acc26bc58b6fa54e640baf76555a58f6b", "committedDate": "2020-11-16T08:40:38Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter.\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "fa28f017f58edac8b12c5b5a9765a438b18a95ee", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/fa28f017f58edac8b12c5b5a9765a438b18a95ee", "committedDate": "2020-11-16T09:15:22Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter.\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMTQ4MzAz", "url": "https://github.com/eclipse/hono/pull/2299#pullrequestreview-531148303", "createdAt": "2020-11-16T09:31:51Z", "commit": {"oid": "fa28f017f58edac8b12c5b5a9765a438b18a95ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTozMTo1MVrOHzv9JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOTozMTo1MVrOHzv9JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAyNTEyNA==", "bodyText": "I had imagined to add some assertions to the existing integration tests that we have for uploading telemetry/event messages to adapters. On the consumer side we would simply need to assert that the consumed messages contain the correct value for the qos application property, right?", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r524025124", "createdAt": "2020-11-16T09:31:51Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/http/EventHttpIT.java", "diffHunk": "@@ -52,4 +63,46 @@ protected void assertAdditionalMessageProperties(final Message msg) {\n \n         assertThat(msg.isDurable()).isTrue();\n     }\n+\n+    /**\n+     * Checks that device QoS level is ignored for events.\n+     *\n+     * @param ctx The test context.\n+     *\n+     * @throws InterruptedException if the test fails.\n+     */\n+    @Test\n+    public void testDeviceQosLevelIsIgnored(final VertxTestContext ctx) throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa28f017f58edac8b12c5b5a9765a438b18a95ee"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/71e90f11c2ecd0c75dc5af73f6860eb13bcf774f", "committedDate": "2020-11-18T13:47:44Z", "message": "Review suggestions:\n- Adapting integration tests of all adapters so that they verify the QoS application property\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "09b7169942ac9d832750dbee0172fc74503a3c57", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/09b7169942ac9d832750dbee0172fc74503a3c57", "committedDate": "2020-11-18T13:46:21Z", "message": "Review suggestions:\n- Adapting integration tests of all adapters so that they verify the QoS application property\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/71e90f11c2ecd0c75dc5af73f6860eb13bcf774f", "committedDate": "2020-11-18T13:47:44Z", "message": "Review suggestions:\n- Adapting integration tests of all adapters so that they verify the QoS application property\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MjYzMDc3", "url": "https://github.com/eclipse/hono/pull/2299#pullrequestreview-534263077", "createdAt": "2020-11-19T10:10:03Z", "commit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDoxMDowM1rOH2VsFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDozOToxNVrOH2W1UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc0MDUwMQ==", "bodyText": "can we rename qos to expectedQos?", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r526740501", "createdAt": "2020-11-19T10:10:03Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/amqp/AmqpUploadTestBase.java", "diffHunk": "@@ -81,6 +81,10 @@ private void assertMessageProperties(final VertxTestContext ctx, final Message m\n         assertAdditionalMessageProperties(ctx, msg);\n     }\n \n+    private void assertQosLevel(final VertxTestContext ctx, final Message msg, final ProtonQoS qos) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc0NDY2Mw==", "bodyText": "???", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r526744663", "createdAt": "2020-11-19T10:16:19Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/mqtt/MqttPublishTestBase.java", "diffHunk": "@@ -77,6 +85,7 @@\n      *         message. The future will succeed if the message has been\n      *         published successfully.\n      */\n+    // here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1NDM5NQ==", "bodyText": "qos -> expectedQos", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r526754395", "createdAt": "2020-11-19T10:31:31Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/coap/CoapTestBase.java", "diffHunk": "@@ -922,6 +926,25 @@ private void assertMessageProperties(final VertxTestContext ctx, final Message m\n         assertAdditionalMessageProperties(ctx, msg);\n     }\n \n+    private QoS getExpectedQoS(final QoS qos) {\n+        if (qos != null) {\n+            return qos;\n+        }\n+\n+        switch (getMessageType()) {\n+            case CON:\n+                return QoS.AT_LEAST_ONCE;\n+            case NON:\n+                return QoS.AT_MOST_ONCE;\n+            default:\n+                throw new IllegalArgumentException(\"Either QoS must be non-null or message type must be CON or NON!\");\n+        }\n+    }\n+\n+    private void  assertQosLevel(final VertxTestContext ctx, final Message msg, final QoS qos) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1NDY0OQ==", "bodyText": "indentation?", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r526754649", "createdAt": "2020-11-19T10:31:53Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/coap/TelemetryCoapIT.java", "diffHunk": "@@ -80,7 +81,7 @@ protected Type getMessageType() {\n      * @throws InterruptedException if the test fails.\n      */\n     @Test\n-    public void testUploadUsingQoS1(final VertxTestContext ctx) throws InterruptedException {\n+        public void testUploadUsingQoS1(final VertxTestContext ctx) throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1NTk5Ng==", "bodyText": "qos -> expectedQos", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r526755996", "createdAt": "2020-11-19T10:34:07Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/http/HttpTestBase.java", "diffHunk": "@@ -1241,6 +1265,10 @@ private void assertMessageProperties(final VertxTestContext ctx, final Message m\n         });\n     }\n \n+    private void  assertQosLevel(final VertxTestContext ctx, final Message msg, final QoS qos) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1NjI0Nw==", "bodyText": "this is not needed anymore, right?", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r526756247", "createdAt": "2020-11-19T10:34:31Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/http/EventHttpIT.java", "diffHunk": "@@ -52,4 +63,47 @@ protected void assertAdditionalMessageProperties(final Message msg) {\n \n         assertThat(msg.isDurable()).isTrue();\n     }\n+\n+    /**\n+     * Checks that device QoS level is ignored for events.\n+     *\n+     * @param ctx The test context.\n+     *\n+     * @throws InterruptedException if the test fails.\n+     */\n+    @Test\n+    public void testDeviceQosLevelIsIgnored(final VertxTestContext ctx) throws InterruptedException {\n+        final VertxTestContext setup = new VertxTestContext();\n+        final Tenant tenant = new Tenant();\n+        final MultiMap requestHeaders = MultiMap.caseInsensitiveMultiMap()\n+                .add(HttpHeaders.CONTENT_TYPE, \"text/plain\")\n+                .add(HttpHeaders.AUTHORIZATION, authorization)\n+                .add(HttpHeaders.ORIGIN, ORIGIN_URI)\n+                .add(Constants.HEADER_QOS_LEVEL, String.valueOf(QoS.AT_MOST_ONCE.ordinal()));\n+\n+        helper.registry.addDeviceForTenant(tenantId, tenant, deviceId, PWD).onComplete(setup.completing());\n+\n+        assertThat(setup.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        if (setup.failed()) {\n+            ctx.failNow(setup.causeOfFailure());\n+            return;\n+        }\n+\n+        testUploadMessages(ctx, tenantId,\n+                msg -> {\n+                    ctx.verify(() -> {\n+                        assertThat(msg.getApplicationProperties().getValue().get(MessageHelper.APP_PROPERTY_QOS))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1OTI0OQ==", "bodyText": "then it is probably not the expected QoS but simply the QoS, right?", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r526759249", "createdAt": "2020-11-19T10:39:15Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/mqtt/MqttPublishTestBase.java", "diffHunk": "@@ -66,6 +67,13 @@\n     // <MQTT message ID, PUBACK handler>\n     private final Map<Integer, Handler<Integer>> pendingMessages = new HashMap<>();\n \n+    /**\n+     * Gets the QoS level with which the MQTT message shall be sent.\n+     *\n+     * @return The QoS level.\n+     */\n+    protected abstract MqttQoS getExpectedQos();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71e90f11c2ecd0c75dc5af73f6860eb13bcf774f"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4040dbd77318a3d7103455fdcc4d6200f0a336b", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/f4040dbd77318a3d7103455fdcc4d6200f0a336b", "committedDate": "2020-11-19T17:05:38Z", "message": "Review suggestions:\n- Renaming qos parameter to expectedQos\n- Removing obsolete comment\n- Fixing ident\n- Removing obsolete assert on message\n- Renaming method getExpectedQos -> getQos\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64fcc30f5030854ab1475cd94c171b8bd49da4fb", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/64fcc30f5030854ab1475cd94c171b8bd49da4fb", "committedDate": "2020-11-19T16:49:36Z", "message": "Review suggestions:\n- Renaming qos parameter to expectedQos\n- Removing obsolete comment\n- Fixing ident\n- Removing obsolete assert on message\n- Renaming method getExpectedQos -> getQos\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "f4040dbd77318a3d7103455fdcc4d6200f0a336b", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/f4040dbd77318a3d7103455fdcc4d6200f0a336b", "committedDate": "2020-11-19T17:05:38Z", "message": "Review suggestions:\n- Renaming qos parameter to expectedQos\n- Removing obsolete comment\n- Fixing ident\n- Removing obsolete assert on message\n- Renaming method getExpectedQos -> getQos\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1Mzc2MDY5", "url": "https://github.com/eclipse/hono/pull/2299#pullrequestreview-535376069", "createdAt": "2020-11-20T12:12:00Z", "commit": {"oid": "f4040dbd77318a3d7103455fdcc4d6200f0a336b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoxMjowMVrOH3NRaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoxMjowMVrOH3NRaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1MTE3OQ==", "bodyText": "the QoS of the sender is being set when opening the sender link. Setting this property after the link has been established has no impact.", "url": "https://github.com/eclipse/hono/pull/2299#discussion_r527651179", "createdAt": "2020-11-20T12:12:01Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/amqp/AmqpUploadTestBase.java", "diffHunk": "@@ -355,6 +360,7 @@ private void testUploadMessages(\n             msg.setAddress(getEndpointName());\n             final Promise<?> sendingComplete = Promise.promise();\n             final Handler<ProtonSender> sendMsgHandler = replenishedSender -> {\n+                replenishedSender.setQoS(senderQoS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4040dbd77318a3d7103455fdcc4d6200f0a336b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc1ce1f81c8ba53cf5d0b637b3f26a3e3c8c2e58", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/dc1ce1f81c8ba53cf5d0b637b3f26a3e3c8c2e58", "committedDate": "2020-11-23T07:51:35Z", "message": "Review suggestions:\n- Verifying that QoS is always AT_LEAST_ONCE for AMQP adapter as it only supports opening links with sender-settle-mode unsettled.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjQwOTg3", "url": "https://github.com/eclipse/hono/pull/2299#pullrequestreview-536240987", "createdAt": "2020-11-23T08:10:44Z", "commit": {"oid": "dc1ce1f81c8ba53cf5d0b637b3f26a3e3c8c2e58"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00d4b942e0a528eb34c374101825bf9f9f999590", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/00d4b942e0a528eb34c374101825bf9f9f999590", "committedDate": "2020-11-23T08:51:37Z", "message": "Review suggestions:\n- Adding release notes\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MzE3MzQw", "url": "https://github.com/eclipse/hono/pull/2299#pullrequestreview-536317340", "createdAt": "2020-11-23T09:58:21Z", "commit": {"oid": "00d4b942e0a528eb34c374101825bf9f9f999590"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 440, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}