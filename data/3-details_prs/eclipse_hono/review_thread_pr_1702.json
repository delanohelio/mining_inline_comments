{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMzUxNTYw", "number": 1702, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTozNDo1OVrODXGOgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTozNDo1OVrODXGOgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NTQ1ODU3OnYy", "diffSide": "LEFT", "path": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/EventBusCredentialsManagementAdapter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTozNDo1OVrOFcOo0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQwOTozNDo1OVrOFcOo0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTE0NDI3Mg==", "bodyText": "Note that this IllegalStateException (which should rather be an IllegalArgumentException, see added TODO) is now caught in credentialsFromPayload().", "url": "https://github.com/eclipse/hono/pull/1702#discussion_r365144272", "createdAt": "2020-01-10T09:34:59Z", "author": {"login": "calohmn"}, "path": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/EventBusCredentialsManagementAdapter.java", "diffHunk": "@@ -94,31 +95,27 @@ protected String getEventBusAddress() {\n         final JsonObject payload = request.getJsonPayload();\n         final SpanContext spanContext = request.getSpanContext();\n \n+        final Span span = Util.newChildSpan(SPAN_NAME_UPDATE_CREDENTIAL, spanContext, tracer, tenantId, deviceId, getClass().getSimpleName());\n+\n+        final Future<EventBusMessage> resultFuture;\n         if (tenantId == null) {\n-            return Future.failedFuture(new ClientErrorException(\n-                    HttpURLConnection.HTTP_BAD_REQUEST,\n-                    \"missing tenant ID\"));\n+            log.debug(\"missing tenant ID\");\n+            TracingHelper.logError(span, \"missing tenant ID\");\n+            resultFuture = Future.failedFuture(new ClientErrorException(HttpURLConnection.HTTP_BAD_REQUEST, \"missing tenant ID\"));\n         } else if (payload == null) {\n-            return Future.failedFuture(new ClientErrorException(\n-                    HttpURLConnection.HTTP_BAD_REQUEST,\n-                    \"missing payload\"));\n-        }\n-        try {\n-            final Future<List<CommonCredential>> secretsFuture = credentialsFromPayload(request);\n-\n-            final Span span = Util.newChildSpan(SPAN_NAME_UPDATE_CREDENTIAL, spanContext, tracer, tenantId, deviceId, getClass().getSimpleName());\n-            final Promise<OperationResult<Void>> result = Promise.promise();\n-\n-            return secretsFuture.compose(secrets -> {\n-                getService().set(tenantId, deviceId, resourceVersion, secrets, span, result);\n-                        return result.future().map(res -> {\n-                            return res.createResponse(request, id -> null).setDeviceId(deviceId);\n-                        });\n-                    }\n-            );\n-        } catch (final IllegalStateException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c51080c48ae4099ebf57d3c65e5448dc7e8579"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3391, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}