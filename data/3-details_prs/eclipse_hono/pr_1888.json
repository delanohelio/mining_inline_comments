{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODEwMDU0", "number": 1888, "title": "Add simple receiver statistic to cli client.", "bodyText": "No big thing, nor brilliant, but from time to time it helps to see changes in the performance easier.\nSigned-off-by: Achim Kraus achim.kraus@bosch.io", "createdAt": "2020-04-08T12:10:31Z", "url": "https://github.com/eclipse/hono/pull/1888", "merged": true, "mergeCommit": {"oid": "c7bb1e579b0f26126b53edc1e413a4752d6ee282"}, "closed": true, "closedAt": "2020-04-22T14:30:23Z", "author": {"login": "boaks"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcV2hBXAFqTM5MDUwMjAyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaJLY_AFqTM5ODI1MTAzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTAyMDI2", "url": "https://github.com/eclipse/hono/pull/1888#pullrequestreview-390502026", "createdAt": "2020-04-09T05:36:01Z", "commit": {"oid": "7a8bc23fd0e8fcef21dcc03454e2027fc21988d8"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNTozNjowMVrOGDKM-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwNjoyNzo1N1rOGDLLFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NjA3Mw==", "bodyText": "Should be just 2020.", "url": "https://github.com/eclipse/hono/pull/1888#discussion_r405966073", "createdAt": "2020-04-09T05:36:01Z", "author": {"login": "calohmn"}, "path": "cli/src/main/java/org/eclipse/hono/cli/app/ReceiverStatistics.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016, 2019 Contributors to the Eclipse Foundation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8bc23fd0e8fcef21dcc03454e2027fc21988d8"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NjIyNA==", "bodyText": "Missing @Override annotation.", "url": "https://github.com/eclipse/hono/pull/1888#discussion_r405966224", "createdAt": "2020-04-09T05:36:36Z", "author": {"login": "calohmn"}, "path": "cli/src/main/java/org/eclipse/hono/cli/app/ReceiverStatistics.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016, 2019 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.cli.app;\n+\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.qpid.proton.message.Message;\n+import org.eclipse.hono.util.MessageHelper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.stereotype.Component;\n+\n+import io.vertx.core.CompositeFuture;\n+import io.vertx.core.Future;\n+import io.vertx.core.buffer.Buffer;\n+\n+/**\n+ * A command line client for statistic of received messages from via Hono's north bound Telemetry and/or Event API and\n+ * <p>\n+ * Messages are output to stdout.\n+ * <p>\n+ */\n+@Component\n+@Profile(\"statistic\")\n+public class ReceiverStatistics extends Receiver {\n+    private static final Logger LOG_STATISTIC = LoggerFactory.getLogger(ReceiverStatistics.class.getName() + \".statistic\");\n+    private static final long INTERVAL_MILLIS = 10000;\n+    private static final long INTERVAL_NANOS = TimeUnit.MILLISECONDS.toNanos(INTERVAL_MILLIS);\n+\n+    /**\n+     * The type of messages to create a consumer for.\n+     */\n+    @Value(value = \"${message.type}\")\n+    protected String messageType;\n+    /**\n+     * Overall statistic.\n+     */\n+    private Statistic total;\n+    /**\n+     * Current period statistic.\n+     */\n+    private Statistic current;\n+\n+    /**\n+     * Starts this component.\n+     * <p>\n+     * \n+     * @return A future indicating the outcome of the startup process.\n+     */\n+    @PostConstruct\n+    Future<CompositeFuture> start() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8bc23fd0e8fcef21dcc03454e2027fc21988d8"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk4MTk3Mg==", "bodyText": "Concerning the spring profile usage:\nI would have expected to use --spring.profiles.active=receiver,statistic here, having the statistic profile as kind of a modifier. Having to run --spring.profiles.active=statistic (without receiver) feels unintuitive. And having to define extra properties for the statistic profile (same way as for the receiver profile) in the application.yml also doesn't look like a good solution.\nHow about having the ReceiverStatistics class not extend Receiver. Instead, the Receiver class could offer a addMessageHandler method, with all the added handlers getting invoked in the handleMessage method.\nThen ReceiverStatistics could just be a bean that adds a handler via that addMessageHandler method, and the counting logic could be in that handler.", "url": "https://github.com/eclipse/hono/pull/1888#discussion_r405981972", "createdAt": "2020-04-09T06:27:57Z", "author": {"login": "calohmn"}, "path": "cli/src/main/java/org/eclipse/hono/cli/app/ReceiverStatistics.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016, 2019 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.cli.app;\n+\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.qpid.proton.message.Message;\n+import org.eclipse.hono.util.MessageHelper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.stereotype.Component;\n+\n+import io.vertx.core.CompositeFuture;\n+import io.vertx.core.Future;\n+import io.vertx.core.buffer.Buffer;\n+\n+/**\n+ * A command line client for statistic of received messages from via Hono's north bound Telemetry and/or Event API and\n+ * <p>\n+ * Messages are output to stdout.\n+ * <p>\n+ */\n+@Component\n+@Profile(\"statistic\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a8bc23fd0e8fcef21dcc03454e2027fc21988d8"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a8bc23fd0e8fcef21dcc03454e2027fc21988d8", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/7a8bc23fd0e8fcef21dcc03454e2027fc21988d8", "committedDate": "2020-04-08T12:07:56Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}, "afterCommit": {"oid": "e42a2e4a48fc330267332de5b7f9740822b32f82", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/e42a2e4a48fc330267332de5b7f9740822b32f82", "committedDate": "2020-04-09T13:17:43Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e42a2e4a48fc330267332de5b7f9740822b32f82", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/e42a2e4a48fc330267332de5b7f9740822b32f82", "committedDate": "2020-04-09T13:17:43Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}, "afterCommit": {"oid": "255502e977a05f8a0de0d6949749f8355522ac63", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/255502e977a05f8a0de0d6949749f8355522ac63", "committedDate": "2020-04-09T16:09:27Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNjU0NzI5", "url": "https://github.com/eclipse/hono/pull/1888#pullrequestreview-392654729", "createdAt": "2020-04-14T07:08:04Z", "commit": {"oid": "255502e977a05f8a0de0d6949749f8355522ac63"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzowODowNFrOGFA89Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoxMjoxM1rOGFBEuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxMTY2OQ==", "bodyText": "Can you adapt the javadoc here (class is not a receiver any more)?", "url": "https://github.com/eclipse/hono/pull/1888#discussion_r407911669", "createdAt": "2020-04-14T07:08:04Z", "author": {"login": "calohmn"}, "path": "cli/src/main/java/org/eclipse/hono/cli/app/ReceiverStatistics.java", "diffHunk": "@@ -0,0 +1,271 @@\n+/*******************************************************************************\n+ * Copyright (c) 2016, 2019 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.cli.app;\n+\n+import java.util.Objects;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.qpid.proton.message.Message;\n+import org.eclipse.hono.util.MessageHelper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.stereotype.Component;\n+\n+import io.vertx.core.CompositeFuture;\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.buffer.Buffer;\n+\n+/**\n+ * A command line client for statistic of received messages from via Hono's north bound Telemetry and/or Event API and\n+ * <p>\n+ * Messages are output to stdout.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "255502e977a05f8a0de0d6949749f8355522ac63"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxMzM2NQ==", "bodyText": "Typos (messge, endpont, recevied). Or javadoc can be removed again (method is again private now).", "url": "https://github.com/eclipse/hono/pull/1888#discussion_r407913365", "createdAt": "2020-04-14T07:11:39Z", "author": {"login": "calohmn"}, "path": "cli/src/main/java/org/eclipse/hono/cli/app/Receiver.java", "diffHunk": "@@ -99,6 +120,14 @@ private CompositeFuture createConsumer(final HonoConnection connection) {\n         return CompositeFuture.all(consumerFutures);\n     }\n \n+    /**\n+     * Handle received messge.\n+     * \n+     * Write log messages to stdout.\n+     * \n+     * @param endpoint receiving endpont, \"telemetry\" or \"event\".\n+     * @param msg recevied message\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "255502e977a05f8a0de0d6949749f8355522ac63"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxMzY1Nw==", "bodyText": "based on", "url": "https://github.com/eclipse/hono/pull/1888#discussion_r407913657", "createdAt": "2020-04-14T07:12:13Z", "author": {"login": "calohmn"}, "path": "cli/src/main/java/org/eclipse/hono/cli/app/Receiver.java", "diffHunk": "@@ -52,6 +54,21 @@\n     @Value(value = \"${message.type}\")\n     protected String messageType;\n \n+    /**\n+     * Bi consumer to handle messages based one endpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "255502e977a05f8a0de0d6949749f8355522ac63"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "255502e977a05f8a0de0d6949749f8355522ac63", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/255502e977a05f8a0de0d6949749f8355522ac63", "committedDate": "2020-04-09T16:09:27Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}, "afterCommit": {"oid": "a987dbeb56d1ed7ba0d0b4c0274f1db12c9ba84d", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/a987dbeb56d1ed7ba0d0b4c0274f1db12c9ba84d", "committedDate": "2020-04-14T07:37:40Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzY1NzYy", "url": "https://github.com/eclipse/hono/pull/1888#pullrequestreview-392765762", "createdAt": "2020-04-14T09:41:19Z", "commit": {"oid": "a987dbeb56d1ed7ba0d0b4c0274f1db12c9ba84d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a987dbeb56d1ed7ba0d0b4c0274f1db12c9ba84d", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/a987dbeb56d1ed7ba0d0b4c0274f1db12c9ba84d", "committedDate": "2020-04-14T07:37:40Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}, "afterCommit": {"oid": "fb9ca28a4b0e06598d9d37c45d65a629ce25f16c", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/fb9ca28a4b0e06598d9d37c45d65a629ce25f16c", "committedDate": "2020-04-14T13:28:34Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTU5MTI3", "url": "https://github.com/eclipse/hono/pull/1888#pullrequestreview-393559127", "createdAt": "2020-04-15T08:25:34Z", "commit": {"oid": "fb9ca28a4b0e06598d9d37c45d65a629ce25f16c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODoyNTozNFrOGFvGZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwODoyNTozNFrOGFvGZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY2Nzc1MQ==", "bodyText": "This means that the total statistic is reset after having received no messages in a period of 2x interval, right?\nI think this might be confusing when the user just looks at the last log line after a long test run, not seeing that the total number might not be the actual grand total because it got reset a few times.", "url": "https://github.com/eclipse/hono/pull/1888#discussion_r408667751", "createdAt": "2020-04-15T08:25:34Z", "author": {"login": "calohmn"}, "path": "cli/src/main/java/org/eclipse/hono/cli/app/ReceiverStatistics.java", "diffHunk": "@@ -0,0 +1,268 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Contributors to the Eclipse Foundation\n+ *\n+ * See the NOTICE file(s) distributed with this work for additional\n+ * information regarding copyright ownership.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.hono.cli.app;\n+\n+import java.util.Objects;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import javax.annotation.PostConstruct;\n+\n+import org.apache.qpid.proton.message.Message;\n+import org.eclipse.hono.util.MessageHelper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.stereotype.Component;\n+\n+import io.vertx.core.CompositeFuture;\n+import io.vertx.core.Future;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.buffer.Buffer;\n+\n+/**\n+ * A command line client extension to collect a statistic of received messages from via Hono's north bound Telemetry\n+ * and/or Event API and\n+ * <p>\n+ * Statistics are output to stdout.\n+ * <p>\n+ */\n+@Component\n+@Profile(\"statistic\")\n+public class ReceiverStatistics {\n+    private static final Logger LOG_STATISTIC = LoggerFactory.getLogger(ReceiverStatistics.class);\n+    private static final long INTERVAL_MILLIS = 10000;\n+\n+    /**\n+     * The statistics interval in milliseconds.\n+     */\n+    @Value(value = \"${statistic.interval}\")\n+    protected long interval = INTERVAL_MILLIS;\n+\n+    /**\n+     * Basic message receiver.\n+     */\n+    private final Receiver receiver;\n+    /**\n+     * The vert.x instance to run on.\n+     */\n+    private final Vertx vertx;\n+    /**\n+     * Overall statistic.\n+     */\n+    private Statistic total;\n+    /**\n+     * Current period statistic.\n+     */\n+    private Statistic current;\n+\n+    /**\n+     * Create new receiver statistics.\n+     * \n+     * @param receiver Receiver instance\n+     * @param vertx The vert.x instance.\n+     * @throws NullPointerException if vert.x or receiver is {@code null}.\n+     */\n+    @Autowired\n+    public ReceiverStatistics(final Receiver receiver, final Vertx vertx) {\n+        this.receiver = Objects.requireNonNull(receiver);\n+        this.vertx = Objects.requireNonNull(vertx);\n+    }\n+\n+    /**\n+     * Starts this component.\n+     * <p>\n+     * \n+     * @return A future indicating the outcome of the startup process.\n+     */\n+    @PostConstruct\n+    Future<CompositeFuture> start() {\n+        vertx.setPeriodic(interval, this::statistic);\n+        receiver.setMessageHandler((endpoint, msg) -> handleMessage(endpoint, msg));\n+        return Future.succeededFuture();\n+    }\n+\n+    private void handleMessage(final String endpoint, final Message msg) {\n+        final String deviceId = MessageHelper.getDeviceId(msg);\n+\n+        final Buffer payload = MessageHelper.getPayload(msg);\n+\n+        if (LOG_STATISTIC.isInfoEnabled()) {\n+            final long now = System.nanoTime();\n+            final Statistic total;\n+            Statistic current;\n+            synchronized (this) {\n+                if (this.total == null) {\n+                    this.total = new Statistic(now);\n+                }\n+                total = this.total;\n+                if (this.current == null) {\n+                    this.current = new PeriodStatistic(now, interval);\n+                }\n+                current = this.current;\n+            }\n+            total.increment(now);\n+            if (!current.increment(now)) {\n+                if (current.isPrinting()) {\n+                    LOG_STATISTIC.info(\"statistic: total {}, last {}\", total, current);\n+                }\n+                synchronized (this) {\n+                    if (this.current == current) {\n+                        this.current = new PeriodStatistic(now, interval);\n+                    }\n+                    current = this.current;\n+                }\n+                current.increment(now);\n+            }\n+        }\n+\n+        LOG_STATISTIC.trace(\"received {} message [device: {}, content-type: {}]: {}\", endpoint, deviceId, msg.getContentType(),\n+                payload);\n+\n+        if (msg.getApplicationProperties() != null) {\n+            LOG_STATISTIC.trace(\"... with application properties: {}\", msg.getApplicationProperties().getValue());\n+        }\n+    }\n+\n+    private void statistic(final Long id) {\n+        final Statistic total;\n+        final Statistic current;\n+        synchronized (this) {\n+            total = this.total;\n+            current = this.current;\n+        }\n+        if (total != null) {\n+            final long now = System.nanoTime();\n+            if (current == null || current.finished(now)) {\n+                if (current == null) {\n+                    LOG_STATISTIC.info(\"statistic: total {}\", total);\n+                } else {\n+                    LOG_STATISTIC.info(\"statistic: total {}, last {}\", total, current);\n+                }\n+                synchronized (this) {\n+                    if (this.total == total && this.current == current) {\n+                        if (current == null) {\n+                            this.total = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb9ca28a4b0e06598d9d37c45d65a629ce25f16c"}, "originalPosition": 158}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d38084aa88da82cacda04a13ecaf70868c71e14", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/7d38084aa88da82cacda04a13ecaf70868c71e14", "committedDate": "2020-04-16T15:21:04Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb9ca28a4b0e06598d9d37c45d65a629ce25f16c", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/fb9ca28a4b0e06598d9d37c45d65a629ce25f16c", "committedDate": "2020-04-14T13:28:34Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}, "afterCommit": {"oid": "7d38084aa88da82cacda04a13ecaf70868c71e14", "author": {"user": {"login": "boaks", "name": "Achim Kraus"}}, "url": "https://github.com/eclipse/hono/commit/7d38084aa88da82cacda04a13ecaf70868c71e14", "committedDate": "2020-04-16T15:21:04Z", "message": "Add simple receiver statistic to cli client.\n\nSigned-off-by: Achim Kraus <achim.kraus@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MjUxMDM3", "url": "https://github.com/eclipse/hono/pull/1888#pullrequestreview-398251037", "createdAt": "2020-04-22T14:29:42Z", "commit": {"oid": "7d38084aa88da82cacda04a13ecaf70868c71e14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 856, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}