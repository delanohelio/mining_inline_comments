{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MTA3OTUw", "number": 2172, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjozNDo1NVrOEjGnWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjozNTowNVrOEjGnuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjQzOTkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/eclipse/hono/util/MapBasedExecutionContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjozNDo1NVrOHRRmwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjozNDo1NVrOHRRmwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3NjI4OQ==", "bodyText": "final ?", "url": "https://github.com/eclipse/hono/pull/2172#discussion_r487876289", "createdAt": "2020-09-14T12:34:55Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/util/MapBasedExecutionContext.java", "diffHunk": "@@ -35,25 +47,30 @@\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public final <T> T get(final String key, final T defaultValue) {\n-        return Optional.ofNullable(getData().get(key)).map(value -> {\n-            return (T) value;\n-        }).orElse(defaultValue);\n+        return Optional.ofNullable(getData().get(key))\n+                .map(value -> (T) value)\n+                .orElse(defaultValue);\n     }\n \n     @Override\n     public final void put(final String key, final Object value) {\n         getData().put(key, value);\n     }\n \n-\n+    /**\n+     * Gets the <em>OpenTracing</em> root span that is used to\n+     * track the processing of this context.\n+     *\n+     * @return The span.\n+     */\n     @Override\n-    public SpanContext getTracingContext() {\n-        return spanContext;\n+    public Span getTracingSpan() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59c0dd34ee6c22c9292a408b3cfea191d36c14f1"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjQ0MDg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/eclipse/hono/util/MapBasedExecutionContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjozNTowNVrOHRRnQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMjozNTowNVrOHRRnQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Nzg3NjQxOQ==", "bodyText": "final ?", "url": "https://github.com/eclipse/hono/pull/2172#discussion_r487876419", "createdAt": "2020-09-14T12:35:05Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/util/MapBasedExecutionContext.java", "diffHunk": "@@ -35,25 +47,30 @@\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public final <T> T get(final String key, final T defaultValue) {\n-        return Optional.ofNullable(getData().get(key)).map(value -> {\n-            return (T) value;\n-        }).orElse(defaultValue);\n+        return Optional.ofNullable(getData().get(key))\n+                .map(value -> (T) value)\n+                .orElse(defaultValue);\n     }\n \n     @Override\n     public final void put(final String key, final Object value) {\n         getData().put(key, value);\n     }\n \n-\n+    /**\n+     * Gets the <em>OpenTracing</em> root span that is used to\n+     * track the processing of this context.\n+     *\n+     * @return The span.\n+     */\n     @Override\n-    public SpanContext getTracingContext() {\n-        return spanContext;\n+    public Span getTracingSpan() {\n+        return span;\n     }\n \n     @Override\n-    public void setTracingContext(final SpanContext spanContext) {\n-        this.spanContext = spanContext;\n+    public SpanContext getTracingContext() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59c0dd34ee6c22c9292a408b3cfea191d36c14f1"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3051, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}