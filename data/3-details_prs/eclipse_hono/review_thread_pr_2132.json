{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczODE2NzYz", "number": 2132, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDo1MTo0OFrOEeVz2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxOToxMVrOEeWfYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjUwMDczOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDo1MTo0OFrOHJ8FjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDo1MTo0OFrOHJ8FjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4MzY5Mw==", "bodyText": "AFIK it is:  must no longer  or must not any longer?\nhttps://dictionary.cambridge.org/grammar/british-grammar/no-longer-not-any-longer", "url": "https://github.com/eclipse/hono/pull/2132#discussion_r480183693", "createdAt": "2020-08-31T14:51:48Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -270,8 +270,9 @@ paths:\n          summary: Delete tenant\n          description: |\n             Clients use this operation to remove an existing tenant from the registry.\n-            Registry implementations may optionally perform a *cascading* delete of all\n-            the tenant's devices and credentials as well.\n+\n+            When the operation succeeds, the data owned by this tenant (including devices and their\n+            credentials) must not longer be accessible. These entities should be reported as *not found*.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5824dfba412e9b579905eb080347d39a2f93186f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjUwMTE1OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDo1MTo1M1rOHJ8F1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDo1MTo1M1rOHJ8F1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE4Mzc2Nw==", "bodyText": "AFIK it is:  must no longer  or must not any longer?", "url": "https://github.com/eclipse/hono/pull/2132#discussion_r480183767", "createdAt": "2020-08-31T14:51:53Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -494,8 +495,9 @@ paths:\n          summary: Delete an existing device registration\n          description: |\n             Clients use this operation to remove an existing device from the registry.\n-            Registry implementations may optionally perform a *cascading* delete of all\n-            the device's credentials as well.\n+\n+            When the operation succeeds, the data owned by this device (including its credentials)\n+            must not longer be accessible. These entities should be reported as *not found*.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5824dfba412e9b579905eb080347d39a2f93186f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMjYxMjE5OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxOToxMVrOHJ9JuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzozMTozMFrOHKpDEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMTE0NQ==", "bodyText": "When the operation succeeds, the data owned by this tenant (including devices and their\ncredentials) must not longer be accessible. These entities should be reported as not found.\n\nWith the above comment, I understood that the tenant existence must be checked not only during create device operation but for all device/credentials management (HTTP) operations and device/credentials services (AMQP). Shouldn't we specify the outcome with the corresponding response code (404) under all those operations in the spec?\nIf we are checking for tenant existence even during delete device operation, then it is no more possible to delete the devices of a tenant that has been already deleted. Does it mean, in order to clean up the devices, the tenant need to be registered again? May be we should allow deleting devices even though the tenant doesn't exist. WDYT?", "url": "https://github.com/eclipse/hono/pull/2132#discussion_r480201145", "createdAt": "2020-08-31T15:19:11Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -270,8 +270,9 @@ paths:\n          summary: Delete tenant\n          description: |\n             Clients use this operation to remove an existing tenant from the registry.\n-            Registry implementations may optionally perform a *cascading* delete of all\n-            the tenant's devices and credentials as well.\n+\n+            When the operation succeeds, the data owned by this tenant (including devices and their\n+            credentials) must not longer be accessible. These entities should be reported as *not found*.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5824dfba412e9b579905eb080347d39a2f93186f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg2OTgzNw==", "bodyText": "How about\n\nWhen the operation succeeds, clients must no longer be able to retrieve nor update the devices (including their credentials) that belong to the deleted tenant. Implementations of this API should respond with a 404 Not Found to any such request.\n\nThis would make it more explicit that we do not want such data to be used any longer but still allow for implementations to support deleting such entities.", "url": "https://github.com/eclipse/hono/pull/2132#discussion_r480869837", "createdAt": "2020-09-01T06:26:20Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -270,8 +270,9 @@ paths:\n          summary: Delete tenant\n          description: |\n             Clients use this operation to remove an existing tenant from the registry.\n-            Registry implementations may optionally perform a *cascading* delete of all\n-            the tenant's devices and credentials as well.\n+\n+            When the operation succeeds, the data owned by this tenant (including devices and their\n+            credentials) must not longer be accessible. These entities should be reported as *not found*.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMTE0NQ=="}, "originalCommit": {"oid": "5824dfba412e9b579905eb080347d39a2f93186f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkyMDMzOQ==", "bodyText": "So aside from the spec: the tenant information should always be used, in order to look up the tenants, and use the tenant id that it provides in TenantKey, because that maybe been rewritten by the backing service to generate unique ID.\nI don't see much reason here to make \"deleting\" a special operation in the public spec. Internally we can handle this differently. We can provide a privileged operation \"clear tenant\". For JDBC this can be handled: a) with a foreign key constraint b) with a separate process executing the \"delete\" operation.\nSo in the case of Kubernetes, the tenant will be deleted using the Kubernetes API, and that will trigger b). Also would the internal tenant ID be the Kubernetes UID, to ensure uniqueness of the tenant.\nI would propose that the MongoDB follows the same strategy. If the MongoDB registry instance is configured for both Tenant + Devices, then you can take an internal shortcut to delete tenant data when the tenant gets deleted. Otherwise there is specialized operation for cleaning tenant data.", "url": "https://github.com/eclipse/hono/pull/2132#discussion_r480920339", "createdAt": "2020-09-01T07:31:30Z", "author": {"login": "ctron"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -270,8 +270,9 @@ paths:\n          summary: Delete tenant\n          description: |\n             Clients use this operation to remove an existing tenant from the registry.\n-            Registry implementations may optionally perform a *cascading* delete of all\n-            the tenant's devices and credentials as well.\n+\n+            When the operation succeeds, the data owned by this tenant (including devices and their\n+            credentials) must not longer be accessible. These entities should be reported as *not found*.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIwMTE0NQ=="}, "originalCommit": {"oid": "5824dfba412e9b579905eb080347d39a2f93186f"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2997, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}