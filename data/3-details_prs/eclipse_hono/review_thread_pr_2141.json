{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MzY4MTk4", "number": 2141, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDowNjozNlrOEgUwpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDoxMzoxOFrOEgU5GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzMwMDIxOnYy", "diffSide": "RIGHT", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedRegistrationService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDowNjozNlrOHNHy3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDo1MTo1MVrOHNJEHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyMTI0NQ==", "bodyText": "IMHO you should not assume the status code to be in the [400, 500) range here. Instead, use StatusCodeMapper.from(int, String) which takes care of this ...\nFor readability I would also explicitly check for OK instead, i.e.\nresult.isOK() ? Future.succeededFuture() : StatusCodeMapper.from(result.getStatus(), null);", "url": "https://github.com/eclipse/hono/pull/2141#discussion_r483521245", "createdAt": "2020-09-04T10:06:36Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedRegistrationService.java", "diffHunk": "@@ -508,4 +521,12 @@ private static JsonArray getSearchDevicesAggregatePipelineQuery(final String ten\n                     return Future.succeededFuture();\n                 });\n     }\n+\n+    private Future<Void> tenantExists(final String tenantId, final Span span) {\n+\n+        return tenantInformationService.tenantExists(tenantId, span)\n+                .compose(result -> result.isError()\n+                        ? Future.failedFuture(new ClientErrorException(result.getStatus()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9f500aeace59f420f27b7cef7ab1257cfcffd90"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzU0MjA0NQ==", "bodyText": "Thanks for pointing it out. I have changed it now and pushed a commit addressing all the comments.", "url": "https://github.com/eclipse/hono/pull/2141#discussion_r483542045", "createdAt": "2020-09-04T10:51:51Z", "author": {"login": "kaniyan"}, "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedRegistrationService.java", "diffHunk": "@@ -508,4 +521,12 @@ private static JsonArray getSearchDevicesAggregatePipelineQuery(final String ten\n                     return Future.succeededFuture();\n                 });\n     }\n+\n+    private Future<Void> tenantExists(final String tenantId, final Span span) {\n+\n+        return tenantInformationService.tenantExists(tenantId, span)\n+                .compose(result -> result.isError()\n+                        ? Future.failedFuture(new ClientErrorException(result.getStatus()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyMTI0NQ=="}, "originalCommit": {"oid": "e9f500aeace59f420f27b7cef7ab1257cfcffd90"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzMxODYyOnYy", "diffSide": "RIGHT", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedRegistrationService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDoxMjoyMlrOHNH93g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDoxMjoyMlrOHNH93g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyNDA2Mg==", "bodyText": "I do not think that this is necessary because the assert Registration operation explicitly defines how to handle the case when there is no device matching the criteria ...", "url": "https://github.com/eclipse/hono/pull/2141#discussion_r483524062", "createdAt": "2020-09-04T10:12:22Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedRegistrationService.java", "diffHunk": "@@ -212,12 +221,15 @@ public MongoDbBasedRegistrationService(\n         Objects.requireNonNull(deviceKey);\n         Objects.requireNonNull(span);\n \n-        return findDeviceDocument(deviceKey.getTenantId(), deviceKey.getDeviceId())\n+        return tenantExists(deviceKey.getTenantId(), span)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9f500aeace59f420f27b7cef7ab1257cfcffd90"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzMyMTg1OnYy", "diffSide": "RIGHT", "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedRegistrationService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDoxMzoxOFrOHNH_vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDoxMzoxOFrOHNH_vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyNDU0MQ==", "bodyText": "this is an internal operation that is invoked as part of one of the public API operations. The existence of the tenant should already have been checked there ...", "url": "https://github.com/eclipse/hono/pull/2141#discussion_r483524541", "createdAt": "2020-09-04T10:13:18Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-mongodb/src/main/java/org/eclipse/hono/deviceregistry/mongodb/service/MongoDbBasedRegistrationService.java", "diffHunk": "@@ -227,7 +239,8 @@ public MongoDbBasedRegistrationService(\n         Objects.requireNonNull(viaGroups);\n         Objects.requireNonNull(span);\n \n-        return processResolveGroupMembers(tenantId, viaGroups, span);\n+        return tenantExists(tenantId, span)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9f500aeace59f420f27b7cef7ab1257cfcffd90"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3007, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}