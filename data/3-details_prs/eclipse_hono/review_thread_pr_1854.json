{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyOTQxODI1", "number": 1854, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo1Mjo0OVrODqxwAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzoxMjo0MVrODqyNFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTgxODkxOnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo1Mjo0OVrOF6uyMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzoxMjozMVrOF6vg-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyODI0Mw==", "bodyText": "does it make sense to allow setting this to null?", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397128243", "createdAt": "2020-03-24T12:52:49Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -44,6 +65,11 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n         this.tenantInformationService = tenantInformationService;\n     }\n \n+    @Autowired\n+    public void setPasswordEncoder(final HonoPasswordEncoder passwordEncoder) {\n+        this.passwordEncoder = passwordEncoder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e8182354ee29c2c20e3706bd3085693215d18c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0MDIxNw==", "bodyText": "I added requireNonNull check for tenant information service as well. We can introduce Noop version for folks that don't want to use autowired one.", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397140217", "createdAt": "2020-03-24T13:12:31Z", "author": {"login": "dejanb"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -44,6 +65,11 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n         this.tenantInformationService = tenantInformationService;\n     }\n \n+    @Autowired\n+    public void setPasswordEncoder(final HonoPasswordEncoder passwordEncoder) {\n+        this.passwordEncoder = passwordEncoder;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyODI0Mw=="}, "originalCommit": {"oid": "08e8182354ee29c2c20e3706bd3085693215d18c"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTgyNjI1OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo1NDo0N1rOF6u2-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo1NDo0N1rOF6u2-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEyOTQ2Nw==", "bodyText": "personally, I find it easier to read (and understand) the positive condition, i.e.\nif (needToEncode(credentials)) {\n} else {\n}", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397129467", "createdAt": "2020-03-24T12:54:47Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -91,4 +122,51 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n                         : processReadCredentials(DeviceKey.from(result.getPayload(), deviceId), span));\n     }\n \n+    private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n+        // Check if we need to encode passwords\n+        if (!needToEncode(credentials)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e8182354ee29c2c20e3706bd3085693215d18c"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTgzMzEzOnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo1NjozNVrOF6u7VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjo1NjozNVrOF6u7VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzMDU4MA==", "bodyText": "!Strings.isNullOrEmpty(s.getPasswordPlain())?", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397130580", "createdAt": "2020-03-24T12:56:35Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -91,4 +122,51 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n                         : processReadCredentials(DeviceKey.from(result.getPayload(), deviceId), span));\n     }\n \n+    private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n+        // Check if we need to encode passwords\n+        if (!needToEncode(credentials)) {\n+            // ... no, so don't fork off a worker task, but inline work\n+            return Future.succeededFuture(checkCredentials(credentials));\n+        } else {\n+            // ... yes, encode passwords asynchronously\n+            return Futures.executeBlocking(this.vertx, () -> checkCredentials(checkCredentials(credentials)));\n+        }\n+    }\n+\n+    /**\n+     * Check if we need to encode any secrets.\n+     *\n+     * @param credentials The credentials to check.\n+     * @return {@code true} is the list contains at least one password which needs to be encoded on the\n+     *         server side.\n+     */\n+    private static boolean needToEncode(final List<CommonCredential> credentials) {\n+        return credentials\n+                .stream()\n+                .filter(PasswordCredential.class::isInstance)\n+                .map(PasswordCredential.class::cast)\n+                .flatMap(c -> c.getSecrets().stream())\n+                .anyMatch(s -> s.getPasswordPlain() != null && !s.getPasswordPlain().isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08e8182354ee29c2c20e3706bd3085693215d18c"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTg5MzM0OnYy", "diffSide": "RIGHT", "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzoxMjo0MVrOF6vhZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzoxNTozMlrOF6voIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0MDMyNQ==", "bodyText": "now you also need to remove the ! ;-)", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397140325", "createdAt": "2020-03-24T13:12:41Z", "author": {"login": "sophokles73"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -91,4 +131,51 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n                         : processReadCredentials(DeviceKey.from(result.getPayload(), deviceId), span));\n     }\n \n+    private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n+        // Check if we need to encode passwords\n+        if (!needToEncode(credentials)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c9897143bd44a9866fe469c549027f366d89c68"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0MjA1MQ==", "bodyText": "Gah! thanks :)", "url": "https://github.com/eclipse/hono/pull/1854#discussion_r397142051", "createdAt": "2020-03-24T13:15:32Z", "author": {"login": "dejanb"}, "path": "services/device-registry-base/src/main/java/org/eclipse/hono/deviceregistry/service/credentials/AbstractCredentialsManagementService.java", "diffHunk": "@@ -91,4 +131,51 @@ public void setTenantInformationService(final TenantInformationService tenantInf\n                         : processReadCredentials(DeviceKey.from(result.getPayload(), deviceId), span));\n     }\n \n+    private Future<List<CommonCredential>> verifyAndEncodePasswords(final List<CommonCredential> credentials) {\n+        // Check if we need to encode passwords\n+        if (!needToEncode(credentials)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0MDMyNQ=="}, "originalCommit": {"oid": "0c9897143bd44a9866fe469c549027f366d89c68"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3308, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}