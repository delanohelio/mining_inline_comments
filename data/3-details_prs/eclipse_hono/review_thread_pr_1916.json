{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDM0NDI5", "number": 1916, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzowODo0MVrOD0v2SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzoxMDoxM1rOD0v5PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NjM2NDg5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/ProtocolAdapterCommandConsumerFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzowODo0MVrOGJ1eGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwOTo0Njo1OFrOGKgmhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2NjQyNQ==", "bodyText": "I would prefer the use of Duration rather then int, which prevents any confusion around the unit.", "url": "https://github.com/eclipse/hono/pull/1916#discussion_r412966425", "createdAt": "2020-04-22T13:08:41Z", "author": {"login": "ctron"}, "path": "client/src/main/java/org/eclipse/hono/client/ProtocolAdapterCommandConsumerFactory.java", "diffHunk": "@@ -83,6 +85,7 @@ void initialize(CommandTargetMapper commandTargetMapper,\n             String tenantId,\n             String deviceId,\n             Handler<CommandContext> commandHandler,\n+            int lifespanSeconds,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27fca7377d904b20bade1ec6c3422965a9a7ac60"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3MzA5NA==", "bodyText": "I've amended the commit, changing the type to Duration (also in the DeviceConnectionInfo, DeviceConnectionClient and DeviceConnectionService interfaces committed earlier).\nI've opted against the usage of Optional (it produces quite some clutter here, IMHO). The way to indicate an infinite lifespan is now using either null or a negative Duration.", "url": "https://github.com/eclipse/hono/pull/1916#discussion_r413673094", "createdAt": "2020-04-23T09:46:58Z", "author": {"login": "calohmn"}, "path": "client/src/main/java/org/eclipse/hono/client/ProtocolAdapterCommandConsumerFactory.java", "diffHunk": "@@ -83,6 +85,7 @@ void initialize(CommandTargetMapper commandTargetMapper,\n             String tenantId,\n             String deviceId,\n             Handler<CommandContext> commandHandler,\n+            int lifespanSeconds,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2NjQyNQ=="}, "originalCommit": {"oid": "27fca7377d904b20bade1ec6c3422965a9a7ac60"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NjM2NTQwOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/eclipse/hono/client/ProtocolAdapterCommandConsumerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzowODo0OFrOGJ1eaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzowODo0OFrOGJ1eaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2NjUwNQ==", "bodyText": "Same here.", "url": "https://github.com/eclipse/hono/pull/1916#discussion_r412966505", "createdAt": "2020-04-22T13:08:48Z", "author": {"login": "ctron"}, "path": "client/src/main/java/org/eclipse/hono/client/ProtocolAdapterCommandConsumerFactory.java", "diffHunk": "@@ -121,6 +126,7 @@ void initialize(CommandTargetMapper commandTargetMapper,\n             String deviceId,\n             String gatewayId,\n             Handler<CommandContext> commandHandler,\n+            int lifespanSeconds,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27fca7377d904b20bade1ec6c3422965a9a7ac60"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NjM3MjQ1OnYy", "diffSide": "RIGHT", "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzoxMDoxM1rOGJ1ijA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwOTo0NzoxM1rOGKgnQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2NzU2NA==", "bodyText": "If the parameter is optional, then maybe consider using Optional. Or maybe null when using Duration (see other comments on \"int\").", "url": "https://github.com/eclipse/hono/pull/1916#discussion_r412967564", "createdAt": "2020-04-22T13:10:13Z", "author": {"login": "ctron"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -864,10 +864,10 @@ private Span newSpan(final String operationName, final Device authenticatedDevic\n         if (authenticatedDevice != null && !authenticatedDevice.getDeviceId().equals(sourceAddress.getResourceId())) {\n             // gateway scenario\n             return getCommandConsumerFactory().createCommandConsumer(sourceAddress.getTenantId(),\n-                    sourceAddress.getResourceId(), authenticatedDevice.getDeviceId(), commandHandler, span.context());\n+                    sourceAddress.getResourceId(), authenticatedDevice.getDeviceId(), commandHandler, -1, span.context());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27fca7377d904b20bade1ec6c3422965a9a7ac60"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzY3MzI4Mg==", "bodyText": "See the other comment.", "url": "https://github.com/eclipse/hono/pull/1916#discussion_r413673282", "createdAt": "2020-04-23T09:47:13Z", "author": {"login": "calohmn"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -864,10 +864,10 @@ private Span newSpan(final String operationName, final Device authenticatedDevic\n         if (authenticatedDevice != null && !authenticatedDevice.getDeviceId().equals(sourceAddress.getResourceId())) {\n             // gateway scenario\n             return getCommandConsumerFactory().createCommandConsumer(sourceAddress.getTenantId(),\n-                    sourceAddress.getResourceId(), authenticatedDevice.getDeviceId(), commandHandler, span.context());\n+                    sourceAddress.getResourceId(), authenticatedDevice.getDeviceId(), commandHandler, -1, span.context());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2NzU2NA=="}, "originalCommit": {"oid": "27fca7377d904b20bade1ec6c3422965a9a7ac60"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3358, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}