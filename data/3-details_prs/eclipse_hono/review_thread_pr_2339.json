{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTE2NTE2", "number": 2339, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0MDozN1rOE_fQsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0MDozN1rOE_fQsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDA3OTIyOnYy", "diffSide": "RIGHT", "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/AmqpContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo0MDozN1rOH9N9Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDoxMzoxN1rOH9TtTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1Mzg4Mg==", "bodyText": "A hint in the javadoc about the default value would be good here (like in MqttContext#contentType).", "url": "https://github.com/eclipse/hono/pull/2339#discussion_r533953882", "createdAt": "2020-12-02T07:40:37Z", "author": {"login": "calohmn"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/AmqpContext.java", "diffHunk": "@@ -105,7 +105,7 @@ final int getPayloadSize() {\n      * @return The content type of the AMQP 1.0 message.\n      */\n     final String getMessageContentType() {\n-        return message.getContentType();\n+        return Optional.ofNullable(message.getContentType()).orElse(MessageHelper.CONTENT_TYPE_OCTET_STREAM);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecbd560356b4d198626378234b063dc302799dad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk4Mzc0MQ==", "bodyText": "Sure. Will add.", "url": "https://github.com/eclipse/hono/pull/2339#discussion_r533983741", "createdAt": "2020-12-02T08:37:12Z", "author": {"login": "b-abel"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/AmqpContext.java", "diffHunk": "@@ -105,7 +105,7 @@ final int getPayloadSize() {\n      * @return The content type of the AMQP 1.0 message.\n      */\n     final String getMessageContentType() {\n-        return message.getContentType();\n+        return Optional.ofNullable(message.getContentType()).orElse(MessageHelper.CONTENT_TYPE_OCTET_STREAM);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1Mzg4Mg=="}, "originalCommit": {"oid": "ecbd560356b4d198626378234b063dc302799dad"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA0ODA3Nw==", "bodyText": "Done.", "url": "https://github.com/eclipse/hono/pull/2339#discussion_r534048077", "createdAt": "2020-12-02T10:13:17Z", "author": {"login": "b-abel"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/AmqpContext.java", "diffHunk": "@@ -105,7 +105,7 @@ final int getPayloadSize() {\n      * @return The content type of the AMQP 1.0 message.\n      */\n     final String getMessageContentType() {\n-        return message.getContentType();\n+        return Optional.ofNullable(message.getContentType()).orElse(MessageHelper.CONTENT_TYPE_OCTET_STREAM);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk1Mzg4Mg=="}, "originalCommit": {"oid": "ecbd560356b4d198626378234b063dc302799dad"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2926, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}