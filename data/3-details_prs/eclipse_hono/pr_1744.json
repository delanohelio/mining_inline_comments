{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODUyOTIw", "number": 1744, "title": "[#1726] Fix: accept command responses without payload in AMQP adapter.", "bodyText": "This fixes #1726.", "createdAt": "2020-02-04T13:59:27Z", "url": "https://github.com/eclipse/hono/pull/1744", "merged": true, "mergeCommit": {"oid": "bbacfb9d8797e9e3ba95dcc75166ce1b7647fd23"}, "closed": true, "closedAt": "2020-02-06T16:03:53Z", "author": {"login": "b-abel"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBB4lZgH2gAyMzcwODUyOTIwOmNiNjA2ZjNkZTVhZWQzM2E5ZDk0OTY0OTI5OWU4MjU2ZTc0Y2E0ZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBsc7zAFqTM1NDUzOTA1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb606f3de5aed33a9d949649299e8256e74ca4e4", "author": {"user": {"login": "b-abel", "name": "Abel B\u00fcchner-Mihaljevi\u0107"}}, "url": "https://github.com/eclipse/hono/commit/cb606f3de5aed33a9d949649299e8256e74ca4e4", "committedDate": "2020-02-04T13:51:43Z", "message": "[#1726] Fix: accept command responses without payload in AMQP adapter.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDY3NTI3", "url": "https://github.com/eclipse/hono/pull/1744#pullrequestreview-353067527", "createdAt": "2020-02-04T15:28:14Z", "commit": {"oid": "cb606f3de5aed33a9d949649299e8256e74ca4e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNToyODoxNFrOFlYWlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNToyODoxNFrOFlYWlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc0MDYzMQ==", "bodyText": "FMPOV the only thing that needs to be changed/fixed is the isPayloadOfIndicatedType method which should verify that the payload is indeed empty if the content type is EventConstants.CONTENT_TYPE_EMPTY_NOTIFICATION but otherwise return true. WDYT?", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r374740631", "createdAt": "2020-02-04T15:28:14Z", "author": {"login": "sophokles73"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -978,20 +978,20 @@ protected void onCommandReceived(final TenantObject tenantObject, final ProtonSe\n                     \"empty notifications must not contain payload\"));\n         }\n \n-        return contentTypeCheck.future()\n-                .compose(ok -> {\n-                    switch (context.getEndpoint()) {\n-                    case TELEMETRY:\n-                        return doUploadMessage(context, resource, getTelemetrySender(resource.getTenantId()), currentSpan);\n-                    case EVENT:\n-                        return doUploadMessage(context, resource, getEventSender(resource.getTenantId()), currentSpan);\n-                    case COMMAND_RESPONSE:\n-                        return doUploadCommandResponseMessage(context, resource, currentSpan);\n-                    default:\n-                        return Future\n-                                .failedFuture(new ClientErrorException(HttpURLConnection.HTTP_NOT_FOUND, \"unknown endpoint\"));\n-                    }\n-                });\n+        switch (context.getEndpoint()) {\n+        case TELEMETRY:\n+            return contentTypeCheck.future()\n+                    .compose(ok -> doUploadMessage(context, resource, getTelemetrySender(resource.getTenantId()),\n+                            currentSpan));\n+        case EVENT:\n+            return contentTypeCheck.future()\n+                    .compose(ok -> doUploadMessage(context, resource, getEventSender(resource.getTenantId()),\n+                            currentSpan));\n+        case COMMAND_RESPONSE:\n+            return doUploadCommandResponseMessage(context, resource, currentSpan);\n+        default:\n+            return Future.failedFuture(new ClientErrorException(HttpURLConnection.HTTP_NOT_FOUND, \"unknown endpoint\"));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb606f3de5aed33a9d949649299e8256e74ca4e4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a05a884ad94987cbd16f493d195bc21a37592bdc", "author": {"user": {"login": "b-abel", "name": "Abel B\u00fcchner-Mihaljevi\u0107"}}, "url": "https://github.com/eclipse/hono/commit/a05a884ad94987cbd16f493d195bc21a37592bdc", "committedDate": "2020-02-05T20:48:53Z", "message": "[#1726] Verify that MQTT and HTTP adapters accept empty command response.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MjQxNDM5", "url": "https://github.com/eclipse/hono/pull/1744#pullrequestreview-354241439", "createdAt": "2020-02-06T07:24:33Z", "commit": {"oid": "a05a884ad94987cbd16f493d195bc21a37592bdc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzoyNDozM1rOFmRSow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzoyNDozM1rOFmRSow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3MzUwNw==", "bodyText": "I am not sure if this is the same as no payload. Can you change this to null?", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375673507", "createdAt": "2020-02-06T07:24:33Z", "author": {"login": "sophokles73"}, "path": "adapters/http-vertx-base/src/test/java/org/eclipse/hono/adapter/http/AbstractVertxBasedHttpProtocolAdapterTest.java", "diffHunk": "@@ -527,6 +527,46 @@ public void testUploadCommandResponseWaitsForAcceptedOutcome() {\n                 any());\n     }\n \n+    /**\n+     * Verifies that the adapter accepts a command response message with an empty body.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    @Test\n+    public void testUploadEmptyCommandResponseSucceeds() {\n+\n+        // GIVEN an adapter with a downstream application attached\n+        final CommandResponseSender sender = mock(CommandResponseSender.class);\n+        when(sender.sendCommandResponse(any(CommandResponse.class), (SpanContext) any())).thenReturn(Future.succeededFuture(mock(ProtonDelivery.class)));\n+\n+        when(commandConsumerFactory.getCommandResponseSender(anyString(), anyString())).thenReturn(Future.succeededFuture(sender));\n+\n+        final HttpServer server = getHttpServer(false);\n+        final AbstractVertxBasedHttpProtocolAdapter<HttpProtocolAdapterProperties> adapter = getAdapter(server, null);\n+\n+        // WHEN a device publishes a command response with an empty payload\n+        final Buffer payload = Buffer.buffer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a05a884ad94987cbd16f493d195bc21a37592bdc"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f57b952088199d449a7fdc2abc814b79411058b", "author": {"user": {"login": "b-abel", "name": "Abel B\u00fcchner-Mihaljevi\u0107"}}, "url": "https://github.com/eclipse/hono/commit/1f57b952088199d449a7fdc2abc814b79411058b", "committedDate": "2020-02-06T13:35:44Z", "message": "[#1726] HTTP and MQTT adapters can now handle command response where payload is null.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NDk1NDI0", "url": "https://github.com/eclipse/hono/pull/1744#pullrequestreview-354495424", "createdAt": "2020-02-06T14:35:01Z", "commit": {"oid": "1f57b952088199d449a7fdc2abc814b79411058b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDozNTowMVrOFmdMPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNDozNTowMVrOFmdMPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg2ODQ3OA==", "bodyText": "this  should be ctx.succeeding(Handler<T>) and the assertion should be put into the handler. Otherwise the test context will most likely be (successfully) completed before the assertion is executed.\nBTW IMHO you should also verify that the command sender has been invoked ...", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375868478", "createdAt": "2020-02-06T14:35:01Z", "author": {"login": "sophokles73"}, "path": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "diffHunk": "@@ -679,6 +681,49 @@ public void testUploadTelemetryMessageSendsPubAckOnSuccess(final VertxTestContex\n                 });\n     }\n \n+    /**\n+     * Verifies that the adapter accepts a command response message with an empty body.\n+     *\n+     * @param ctx The vert.x test context.\n+     */\n+    @Test\n+    public void testUploadEmptyCommandResponseSucceeds(final VertxTestContext ctx) {\n+\n+        // GIVEN an adapter with a command response consumer\n+        final CommandResponseSender sender = mock(CommandResponseSender.class);\n+        when(sender.sendCommandResponse(any(CommandResponse.class), (SpanContext) any()))\n+                .thenReturn(Future.succeededFuture(mock(ProtonDelivery.class)));\n+        when(commandConsumerFactory.getCommandResponseSender(anyString(), anyString()))\n+                .thenReturn(Future.succeededFuture(sender));\n+\n+        // WHEN forwarding a command response that has been published\n+        final MqttServer server = getMqttServer(false);\n+        final AbstractVertxBasedMqttProtocolAdapter<MqttProtocolAdapterProperties> adapter = getAdapter(server);\n+\n+        final MqttEndpoint endpoint = mockEndpoint();\n+        when(endpoint.isConnected()).thenReturn(Boolean.TRUE);\n+        final MqttPublishMessage messageFromDevice = mock(MqttPublishMessage.class);\n+        when(messageFromDevice.qosLevel()).thenReturn(MqttQoS.AT_MOST_ONCE);\n+        when(messageFromDevice.messageId()).thenReturn(5555555);\n+        when(messageFromDevice.topicName()).thenReturn(\"command///res/1010f8ab0b53-bd96-4d99-9d9c-56b868474a6a/200\");\n+\n+        // ... with an empty payload\n+        when(messageFromDevice.payload()).thenReturn(null);\n+        final ResourceIdentifier address = ResourceIdentifier\n+                .fromString(\"command/my-tenant/4712/res/1010f8ab0b53-bd96-4d99-9d9c-56b868474a6a/200\");\n+        adapter.uploadCommandResponseMessage(newMqttContext(messageFromDevice, endpoint), address)\n+                .setHandler(ctx.completing());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f57b952088199d449a7fdc2abc814b79411058b"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e8a5b7ea36ef8a422b4d2c8cb9be1f364256fde", "author": {"user": {"login": "b-abel", "name": "Abel B\u00fcchner-Mihaljevi\u0107"}}, "url": "https://github.com/eclipse/hono/commit/0e8a5b7ea36ef8a422b4d2c8cb9be1f364256fde", "committedDate": "2020-02-06T15:12:58Z", "message": "[#1726] Fix verification in AbstractVertxBasedMqttProtocolAdapterTest.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTMyMDE1", "url": "https://github.com/eclipse/hono/pull/1744#pullrequestreview-354532015", "createdAt": "2020-02-06T15:19:11Z", "commit": {"oid": "0e8a5b7ea36ef8a422b4d2c8cb9be1f364256fde"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNToxOToxMVrOFme5Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNToxOToxMVrOFme5Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5NjM4Nw==", "bodyText": "this needs to be wrapped in ctx.verify(Handler<Void>)", "url": "https://github.com/eclipse/hono/pull/1744#discussion_r375896387", "createdAt": "2020-02-06T15:19:11Z", "author": {"login": "sophokles73"}, "path": "adapters/mqtt-vertx-base/src/test/java/org/eclipse/hono/adapter/mqtt/AbstractVertxBasedMqttProtocolAdapterTest.java", "diffHunk": "@@ -712,16 +719,19 @@ public void testUploadEmptyCommandResponseSucceeds(final VertxTestContext ctx) {\n         final ResourceIdentifier address = ResourceIdentifier\n                 .fromString(\"command/my-tenant/4712/res/1010f8ab0b53-bd96-4d99-9d9c-56b868474a6a/200\");\n         adapter.uploadCommandResponseMessage(newMqttContext(messageFromDevice, endpoint), address)\n-                .setHandler(ctx.completing());\n+                .setHandler(ctx.succeeding(result -> {\n+                    verify(sender).sendCommandResponse(any(), any());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e8a5b7ea36ef8a422b4d2c8cb9be1f364256fde"}, "originalPosition": 142}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbbe05e08ce6b4eb773cac43db5171652a24c3cf", "author": {"user": {"login": "b-abel", "name": "Abel B\u00fcchner-Mihaljevi\u0107"}}, "url": "https://github.com/eclipse/hono/commit/cbbe05e08ce6b4eb773cac43db5171652a24c3cf", "committedDate": "2020-02-06T15:23:19Z", "message": "[#1726] Add context.verify to AbstractVertxBasedMqttProtocolAdapterTest.\n\nSigned-off-by: Abel Buechner-Mihaljevic <abel.buechner-mihaljevic@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTM5MDUz", "url": "https://github.com/eclipse/hono/pull/1744#pullrequestreview-354539053", "createdAt": "2020-02-06T15:27:26Z", "commit": {"oid": "cbbe05e08ce6b4eb773cac43db5171652a24c3cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 956, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}