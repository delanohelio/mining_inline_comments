{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NjU3MTI3", "number": 2090, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODozODo0OFrOESSnNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoxMzoyNVrOEUnzsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjE0Nzc0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODozODo0OFrOG3Y96A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDozNzowN1rOG4d4JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczMzkyOA==", "bodyText": "I think it's common practice to rather use char[] for password fields.", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r460733928", "createdAt": "2020-07-27T08:38:48Z", "author": {"login": "calohmn"}, "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "diffHunk": "@@ -41,25 +41,23 @@\n     /**\n      *  A logger to be shared with subclasses.\n      */\n-    protected final Logger LOG = LoggerFactory.getLogger(getClass());\n+    public static final Logger LOG = LoggerFactory.getLogger(AbstractConfig.class);\n \n-    private String trustStorePath;\n-    private char[] trustStorePassword;\n-    private TrustOptions trustOptions;\n+    private String trustStorePath = \"\";\n+    private String trustStorePassword = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbf1587e9b40d9fb62c394e887b84ba61c5e25e8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxOTM0NQ==", "bodyText": "As all other libraries we are passing these passwords to are keeping them as Strings in memory, I don't think we're getting any benefits from keeping them as char arrays ourselves.\nAnd if we still chose to do so, I think getter/setter methods should follow that as well.\nAnyway, in my opinion we're just keeping a lot of transformation code that gives us no real benefits.", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r461619345", "createdAt": "2020-07-28T14:20:17Z", "author": {"login": "dejanb"}, "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "diffHunk": "@@ -41,25 +41,23 @@\n     /**\n      *  A logger to be shared with subclasses.\n      */\n-    protected final Logger LOG = LoggerFactory.getLogger(getClass());\n+    public static final Logger LOG = LoggerFactory.getLogger(AbstractConfig.class);\n \n-    private String trustStorePath;\n-    private char[] trustStorePassword;\n-    private TrustOptions trustOptions;\n+    private String trustStorePath = \"\";\n+    private String trustStorePassword = \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczMzkyOA=="}, "originalCommit": {"oid": "cbf1587e9b40d9fb62c394e887b84ba61c5e25e8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2Mjk0OA==", "bodyText": "Ok.", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r461862948", "createdAt": "2020-07-28T20:37:07Z", "author": {"login": "calohmn"}, "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "diffHunk": "@@ -41,25 +41,23 @@\n     /**\n      *  A logger to be shared with subclasses.\n      */\n-    protected final Logger LOG = LoggerFactory.getLogger(getClass());\n+    public static final Logger LOG = LoggerFactory.getLogger(AbstractConfig.class);\n \n-    private String trustStorePath;\n-    private char[] trustStorePassword;\n-    private TrustOptions trustOptions;\n+    private String trustStorePath = \"\";\n+    private String trustStorePassword = \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczMzkyOA=="}, "originalCommit": {"oid": "cbf1587e9b40d9fb62c394e887b84ba61c5e25e8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjE4MjI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0Nzo0MVrOG3ZS3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDoxNjoxNlrOG4Oztw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczOTI5NA==", "bodyText": "Can you explain the motivation here? With the old definition, there is the added info in the log from which actual (sub)class the log statements are coming.", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r460739294", "createdAt": "2020-07-27T08:47:41Z", "author": {"login": "calohmn"}, "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "diffHunk": "@@ -41,25 +41,23 @@\n     /**\n      *  A logger to be shared with subclasses.\n      */\n-    protected final Logger LOG = LoggerFactory.getLogger(getClass());\n+    public static final Logger LOG = LoggerFactory.getLogger(AbstractConfig.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbf1587e9b40d9fb62c394e887b84ba61c5e25e8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTYxNjA1NQ==", "bodyText": "That was left from the PoC phase as there were some issues with native image. Now everything works fine, so I reverted it back.", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r461616055", "createdAt": "2020-07-28T14:16:16Z", "author": {"login": "dejanb"}, "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "diffHunk": "@@ -41,25 +41,23 @@\n     /**\n      *  A logger to be shared with subclasses.\n      */\n-    protected final Logger LOG = LoggerFactory.getLogger(getClass());\n+    public static final Logger LOG = LoggerFactory.getLogger(AbstractConfig.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczOTI5NA=="}, "originalCommit": {"oid": "cbf1587e9b40d9fb62c394e887b84ba61c5e25e8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDA3MzQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/eclipse/hono/config/AuthenticatingClientConfigProperties.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMTo0MzowNlrOG62VXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwOTo0OTozMFrOG7ZUcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2MDc5Ng==", "bodyText": "what's the reason for having to use an empty string as the initial value?", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r464360796", "createdAt": "2020-08-03T11:43:06Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/config/AuthenticatingClientConfigProperties.java", "diffHunk": "@@ -29,14 +30,15 @@\n \n     public static final String SERVER_ROLE_UNKNOWN = \"unknown\";\n \n-    private String credentialsPath;\n+    private String credentialsPath = \"\";\n     private String host = \"localhost\";\n     private boolean hostnameVerificationRequired = true;\n-    private char[] password;\n-    private int port;\n+    private String password = \"\";\n+    private int port = Constants.PORT_AMQPS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b8ab2cda2916db2950778c3aa7d540731d4150f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQyNjk1MA==", "bodyText": "@sophokles73 At the moment with the way we use Quarkus, it is complaining when properties don't have default values. So this is a workaround. I haven't yet raised this with the Quarkus devs, but I can do that and we can revert it in the future. I'm not too fond of it myself either, but I wouldn't block the work just because of it.", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r464426950", "createdAt": "2020-08-03T13:51:56Z", "author": {"login": "dejanb"}, "path": "core/src/main/java/org/eclipse/hono/config/AuthenticatingClientConfigProperties.java", "diffHunk": "@@ -29,14 +30,15 @@\n \n     public static final String SERVER_ROLE_UNKNOWN = \"unknown\";\n \n-    private String credentialsPath;\n+    private String credentialsPath = \"\";\n     private String host = \"localhost\";\n     private boolean hostnameVerificationRequired = true;\n-    private char[] password;\n-    private int port;\n+    private String password = \"\";\n+    private int port = Constants.PORT_AMQPS;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2MDc5Ng=="}, "originalCommit": {"oid": "7b8ab2cda2916db2950778c3aa7d540731d4150f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQzNzEyNg==", "bodyText": "yes, please do so. Honestly, I hate the guts out of it ;-)", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r464437126", "createdAt": "2020-08-03T14:08:28Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/config/AuthenticatingClientConfigProperties.java", "diffHunk": "@@ -29,14 +30,15 @@\n \n     public static final String SERVER_ROLE_UNKNOWN = \"unknown\";\n \n-    private String credentialsPath;\n+    private String credentialsPath = \"\";\n     private String host = \"localhost\";\n     private boolean hostnameVerificationRequired = true;\n-    private char[] password;\n-    private int port;\n+    private String password = \"\";\n+    private int port = Constants.PORT_AMQPS;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2MDc5Ng=="}, "originalCommit": {"oid": "7b8ab2cda2916db2950778c3aa7d540731d4150f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzNDAwMg==", "bodyText": "Setting them explicitly to null also does the trick and it looks a bit nicer. So let's go with that for the moment and push for the fix.", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r464934002", "createdAt": "2020-08-04T09:49:30Z", "author": {"login": "dejanb"}, "path": "core/src/main/java/org/eclipse/hono/config/AuthenticatingClientConfigProperties.java", "diffHunk": "@@ -29,14 +30,15 @@\n \n     public static final String SERVER_ROLE_UNKNOWN = \"unknown\";\n \n-    private String credentialsPath;\n+    private String credentialsPath = \"\";\n     private String host = \"localhost\";\n     private boolean hostnameVerificationRequired = true;\n-    private char[] password;\n-    private int port;\n+    private String password = \"\";\n+    private int port = Constants.PORT_AMQPS;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM2MDc5Ng=="}, "originalCommit": {"oid": "7b8ab2cda2916db2950778c3aa7d540731d4150f"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDU4MDgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoxMDoyNlrOG67EVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoxMDoyNlrOG67EVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQzODM1OQ==", "bodyText": "I do see value in creating the options once only. However, we then should also return the already created instance in subsequent invocations of this method. WDYT?", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r464438359", "createdAt": "2020-08-03T14:10:26Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/config/AbstractConfig.java", "diffHunk": "@@ -186,25 +175,21 @@ public final TrustOptions getTrustOptions() {\n         switch (format) {\n         case PEM:\n             LOG.debug(\"using certificates from file [{}] as trust anchor\", this.trustStorePath);\n-            trustOptions = new PemTrustOptions().addCertPath(this.trustStorePath);\n-            break;\n+            return new PemTrustOptions().addCertPath(this.trustStorePath);\n         case PKCS12:\n             LOG.debug(\"using certificates from PKCS12 key store [{}] as trust anchor\", this.trustStorePath);\n-            trustOptions = new PfxOptions()\n+            return new PfxOptions()\n                     .setPath(getTrustStorePath())\n                     .setPassword(getTrustStorePassword());\n-            break;\n         case JKS:\n             LOG.debug(\"using certificates from JKS key store [{}] as trust anchor\", this.trustStorePath);\n-            trustOptions = new JksOptions()\n+            return new JksOptions()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b8ab2cda2916db2950778c3aa7d540731d4150f"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDU4NzUxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/eclipse/hono/config/KeyLoader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoxMjoxM1rOG67Ibg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoxMjoxM1rOG67Ibg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQzOTQwNg==", "bodyText": "StringUtils.isNullOrEmpty()?", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r464439406", "createdAt": "2020-08-03T14:12:13Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/config/KeyLoader.java", "diffHunk": "@@ -162,10 +162,10 @@ public static KeyLoader fromFiles(final Vertx vertx, final String keyPath, final\n         PrivateKey privateKey = null;\n         List<Certificate> certChain = null;\n \n-        if (keyPath != null) {\n+        if (keyPath != null && !keyPath.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b8ab2cda2916db2950778c3aa7d540731d4150f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMDU5MTg3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/eclipse/hono/config/ProtocolAdapterProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxNDoxMzoyNVrOG67LTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwOTo1MjoxMFrOG7ZavQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0MDE0MQ==", "bodyText": "We usually use an abstract type for field declarations, don't we? Why can't we keep the Map here?", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r464440141", "createdAt": "2020-08-03T14:13:25Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/config/ProtocolAdapterProperties.java", "diffHunk": "@@ -36,7 +36,7 @@\n     private long eventLoopBlockedCheckTimeout = 5000L;\n     private int maxConnections = 0;\n     private Duration tenantIdleTimeout = DEFAULT_TENANT_IDLE_TIMEOUT;\n-    private Map<String, MapperEndpoint> mapperEndpoints = new HashMap<>();\n+    private HashMap<String, MapperEndpoint> mapperEndpoints = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b8ab2cda2916db2950778c3aa7d540731d4150f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDkzNTYxMw==", "bodyText": "We're basically hitting this with using the Map: quarkusio/quarkus#8017. And that's not considered as the issue at the moment. We can create our own converter perhaps and I'll ask if there are a better way to do all this, but to me this is a quick/easy workaround that we can use for now.", "url": "https://github.com/eclipse/hono/pull/2090#discussion_r464935613", "createdAt": "2020-08-04T09:52:10Z", "author": {"login": "dejanb"}, "path": "core/src/main/java/org/eclipse/hono/config/ProtocolAdapterProperties.java", "diffHunk": "@@ -36,7 +36,7 @@\n     private long eventLoopBlockedCheckTimeout = 5000L;\n     private int maxConnections = 0;\n     private Duration tenantIdleTimeout = DEFAULT_TENANT_IDLE_TIMEOUT;\n-    private Map<String, MapperEndpoint> mapperEndpoints = new HashMap<>();\n+    private HashMap<String, MapperEndpoint> mapperEndpoints = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0MDE0MQ=="}, "originalCommit": {"oid": "7b8ab2cda2916db2950778c3aa7d540731d4150f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3200, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}