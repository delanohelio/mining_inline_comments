{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjQ0OTcw", "number": 2344, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODoyNTowNlrOFBp2sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODoyNzo1N1rOFBp7jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mjc4NjQyOnYy", "diffSide": "RIGHT", "path": "clients/adapter/src/main/java/org/eclipse/hono/adapter/client/telemetry/EventSender.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODoyNTowNlrOIAa-qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOTo0NzoyOVrOIAeQRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMxMjkzOA==", "bodyText": "how about adding a note to the contentType param that it will be set to the fallback content-type if a payload is given but no content-type is specified?", "url": "https://github.com/eclipse/hono/pull/2344#discussion_r537312938", "createdAt": "2020-12-07T08:25:06Z", "author": {"login": "sophokles73"}, "path": "clients/adapter/src/main/java/org/eclipse/hono/adapter/client/telemetry/EventSender.java", "diffHunk": "@@ -47,7 +47,7 @@\n      *         The future will be failed with a {@code org.eclipse.hono.client.ServerErrorException} if the data\n      *         could not be sent. The error code contained in the exception indicates the\n      *         cause of the failure.\n-     * @throws NullPointerException if tenant ID, device ID or contentType are {@code null}.\n+     * @throws NullPointerException if tenant ID or device ID are {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d19d490e77851703456c4112d5ee4796a892d43"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM2NjU5Ng==", "bodyText": "Yes. I'll do that in the next commit (see below), then aligned with the updated javadoc for MessageHelper#newMessage.", "url": "https://github.com/eclipse/hono/pull/2344#discussion_r537366596", "createdAt": "2020-12-07T09:47:29Z", "author": {"login": "calohmn"}, "path": "clients/adapter/src/main/java/org/eclipse/hono/adapter/client/telemetry/EventSender.java", "diffHunk": "@@ -47,7 +47,7 @@\n      *         The future will be failed with a {@code org.eclipse.hono.client.ServerErrorException} if the data\n      *         could not be sent. The error code contained in the exception indicates the\n      *         cause of the failure.\n-     * @throws NullPointerException if tenant ID, device ID or contentType are {@code null}.\n+     * @throws NullPointerException if tenant ID or device ID are {@code null}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMxMjkzOA=="}, "originalCommit": {"oid": "7d19d490e77851703456c4112d5ee4796a892d43"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mjc5ODg2OnYy", "diffSide": "RIGHT", "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/impl/HttpBasedMessageMapping.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODoyNzo1N1rOIAbFfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODoyNzo1N1rOIAbFfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMxNDY4NQ==", "bodyText": "FMPOV we should not set the header at all if the device did not provide a content-type. Maybe the mapper wants to handle this case specifically?", "url": "https://github.com/eclipse/hono/pull/2344#discussion_r537314685", "createdAt": "2020-12-07T08:27:57Z", "author": {"login": "sophokles73"}, "path": "adapters/mqtt-vertx-base/src/main/java/org/eclipse/hono/adapter/mqtt/impl/HttpBasedMessageMapping.java", "diffHunk": "@@ -120,7 +120,8 @@ private void mapMessageRequest(\n             }\n         });\n         headers.add(MessageHelper.APP_PROPERTY_ORIG_ADDRESS, ctx.message().topicName());\n-        headers.add(HttpHeaders.CONTENT_TYPE.toString(), ctx.contentType());\n+        headers.add(HttpHeaders.CONTENT_TYPE.toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d19d490e77851703456c4112d5ee4796a892d43"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2928, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}