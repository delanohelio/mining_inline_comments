{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTU1OTk0", "number": 1995, "reviewThreads": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTo1NzoyNFrOEA1JJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzozMjo1OVrOEU4X8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzA2MTUxOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTo1NzoyNFrOGcWeEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwOTo1NzoyNFrOGcWeEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4MTQ1Ng==", "bodyText": "Typo in \"querries\"", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r432381456", "createdAt": "2020-05-29T09:57:24Z", "author": {"login": "dejanb"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +492,43 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk querries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+            \"offset\":\n+               type: integer\n+               default: 0\n+\n+      FilterOptions:\n+            type: object\n+            additionalProperties: true\n+            description: Allows arbitrary filters to be applied to bulk querries.\n+                         Fields to filter MUST be designated with their JSON Path representation.\n+\n+      SortingOptions:\n+         type: object\n+         additionalProperties: true\n+         description: Sorting options to be applied to bulk querries results.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b712c48d7bd1351445462348ef678a97bbdfa68e"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzExMjcxOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMDoxNDoxMFrOGcW-Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMDoxNDoxMFrOGcW-Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjM4OTY4Mw==", "bodyText": "Typo in \"querries\"", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r432389683", "createdAt": "2020-05-29T10:14:10Z", "author": {"login": "dejanb"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +492,43 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk querries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+            \"offset\":\n+               type: integer\n+               default: 0\n+\n+      FilterOptions:\n+            type: object\n+            additionalProperties: true\n+            description: Allows arbitrary filters to be applied to bulk querries.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b712c48d7bd1351445462348ef678a97bbdfa68e"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzM0MDY1OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTozODoyNlrOGcZPeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo1NTowOVrOGcZq4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNjg3Mg==", "bodyText": "I am not sure what \"not found\" would mean in this case. When searching, I would expect an empty result would still be \"200 OK\".", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r432426872", "createdAt": "2020-05-29T11:38:26Z", "author": {"login": "ctron"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -257,6 +257,37 @@ paths:\n             403:\n                $ref: '#/components/responses/NotAllowed'\n \n+      get:\n+         tags:\n+            - devices\n+         summary: Retrieve all devices for a tenant\n+         operationId: getAllDevicesForTenant\n+         requestBody:\n+            description: Filters, paging and sorting options.\n+            content:\n+               application/json:\n+                  schema:\n+                     $ref: '#/components/schemas/PagingSortingFilteringOptions'\n+            required: false\n+         responses:\n+            200:\n+               description: operation successful\n+               content:\n+                  application/json:\n+                     schema:\n+                        $ref: '#/components/schemas/Device'\n+               headers:\n+                  ETag:\n+                     description: Version of the resource\n+                     schema:\n+                        type: string\n+            400:\n+               $ref: '#/components/responses/MalformedRequest'\n+            401:\n+               $ref: '#/components/responses/Unauthorized'\n+            404:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b712c48d7bd1351445462348ef678a97bbdfa68e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQzMzg4OQ==", "bodyText": "I was thinking it would return 404 if the tenant doesn't exist. Otherwhise yes, an empty result is expected", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r432433889", "createdAt": "2020-05-29T11:55:09Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -257,6 +257,37 @@ paths:\n             403:\n                $ref: '#/components/responses/NotAllowed'\n \n+      get:\n+         tags:\n+            - devices\n+         summary: Retrieve all devices for a tenant\n+         operationId: getAllDevicesForTenant\n+         requestBody:\n+            description: Filters, paging and sorting options.\n+            content:\n+               application/json:\n+                  schema:\n+                     $ref: '#/components/schemas/PagingSortingFilteringOptions'\n+            required: false\n+         responses:\n+            200:\n+               description: operation successful\n+               content:\n+                  application/json:\n+                     schema:\n+                        $ref: '#/components/schemas/Device'\n+               headers:\n+                  ETag:\n+                     description: Version of the resource\n+                     schema:\n+                        type: string\n+            400:\n+               $ref: '#/components/responses/MalformedRequest'\n+            401:\n+               $ref: '#/components/responses/Unauthorized'\n+            404:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNjg3Mg=="}, "originalCommit": {"oid": "b712c48d7bd1351445462348ef678a97bbdfa68e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzM0MjM2OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTozOToxNVrOGcZQwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjozMjoyNlrOGcaveQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNzIwMg==", "bodyText": "I think the naming of this is misleading. It is not returning \"all devices\". I think \"search\" would make more sense. Same for the \"summary\".", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r432427202", "createdAt": "2020-05-29T11:39:15Z", "author": {"login": "ctron"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -257,6 +257,37 @@ paths:\n             403:\n                $ref: '#/components/responses/NotAllowed'\n \n+      get:\n+         tags:\n+            - devices\n+         summary: Retrieve all devices for a tenant\n+         operationId: getAllDevicesForTenant", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b712c48d7bd1351445462348ef678a97bbdfa68e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ1MTQ0OQ==", "bodyText": "I updated the name to searchDevicesForTenant", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r432451449", "createdAt": "2020-05-29T12:32:26Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -257,6 +257,37 @@ paths:\n             403:\n                $ref: '#/components/responses/NotAllowed'\n \n+      get:\n+         tags:\n+            - devices\n+         summary: Retrieve all devices for a tenant\n+         operationId: getAllDevicesForTenant", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNzIwMg=="}, "originalCommit": {"oid": "b712c48d7bd1351445462348ef678a97bbdfa68e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzM0NDEyOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo0MDowMFrOGcZR6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo0MDowMFrOGcZR6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNzQ5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     description: options to page the results of bulk querries.\n          \n          \n            \n                     description: options to page the results of bulk queries.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r432427499", "createdAt": "2020-05-29T11:40:00Z", "author": {"login": "ctron"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +492,43 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk querries.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b712c48d7bd1351445462348ef678a97bbdfa68e"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MzM0NjY3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo0MDo1N1rOGcZTgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMTo0MDo1N1rOGcZTgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQyNzkwNg==", "bodyText": "I am not sure how this would look like. Maybe adding an example helps.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r432427906", "createdAt": "2020-05-29T11:40:57Z", "author": {"login": "ctron"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +492,43 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk querries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+            \"offset\":\n+               type: integer\n+               default: 0\n+\n+      FilterOptions:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b712c48d7bd1351445462348ef678a97bbdfa68e"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjY0MjU1OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjoxMToxM1rOGeY8-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjoxMToxM1rOGeY8-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUxOTI4OQ==", "bodyText": "I don't think you can provide that here using headers, as you return multiple entries, and they may have different versions.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r434519289", "createdAt": "2020-06-03T12:11:13Z", "author": {"login": "ctron"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -257,6 +257,37 @@ paths:\n             403:\n                $ref: '#/components/responses/NotAllowed'\n \n+      get:\n+         tags:\n+            - devices\n+         summary: Search devices for a tenant, with optional filters and paging options.\n+         operationId: searchDevicesForTenant\n+         requestBody:\n+            description: Filters, paging and sorting options.\n+            content:\n+               application/json:\n+                  schema:\n+                     $ref: '#/components/schemas/PagingSortingFilteringOptions'\n+            required: false\n+         responses:\n+            200:\n+               description: operation successful\n+               content:\n+                  application/json:\n+                     schema:\n+                        $ref: '#/components/schemas/Device'\n+               headers:\n+                  ETag:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7232e733b2e2b0bb18e923a6c560ea25f2c6f4be"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzM5NzQzOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjowODo0OFrOGg6Cdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjowODo0OFrOGg6Cdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1ODUxOQ==", "bodyText": "this will most likely be an array of devices instead of just a single device, won't it?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r437158519", "createdAt": "2020-06-09T06:08:48Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -257,6 +257,32 @@ paths:\n             403:\n                $ref: '#/components/responses/NotAllowed'\n \n+      get:\n+         tags:\n+            - devices\n+         summary: Search devices for a tenant, with optional filters and paging options.\n+         operationId: searchDevicesForTenant\n+         requestBody:\n+            description: Filters, paging and sorting options.\n+            content:\n+               application/json:\n+                  schema:\n+                     $ref: '#/components/schemas/PagingSortingFilteringOptions'\n+            required: false\n+         responses:\n+            200:\n+               description: operation successful\n+               content:\n+                  application/json:\n+                     schema:\n+                        $ref: '#/components/schemas/Device'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf59b3732e7f536e893fdcbb4fb5bec9b802d897"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzQwMTI3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjoxMDozNVrOGg6E7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjoxMDozNVrOGg6E7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1OTE0OQ==", "bodyText": "how about some proper description of these parameters?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r437159149", "createdAt": "2020-06-09T06:10:35Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,49 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+            \"offset\":\n+               type: integer\n+               default: 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf59b3732e7f536e893fdcbb4fb5bec9b802d897"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzQyMDM0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjoxODo0N1rOGg6Qlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjoxODo0N1rOGg6Qlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2MjEzNQ==", "bodyText": "I would expect the possible values for the sort direction to be defined somewhere, e.g. in an enum?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r437162135", "createdAt": "2020-06-09T06:18:47Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1111,3 +1179,11 @@ components:\n                \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n                \"not-after\": \"2027-12-24T19:00:00Z\",\n             }]\n+      FilterOptionsExample:\n+         value:\n+            enabled: true\n+            ext.brand: \"eclipse\"\n+      SortingOptionsExample:\n+         value:\n+            status.created: \"ascending\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf59b3732e7f536e893fdcbb4fb5bec9b802d897"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDM5ODAzOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMDo1MTo1NVrOGhDzyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDowNzoyMVrOGhL4YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxODYwMw==", "bodyText": "A set is an unordered collection and in this case IMHO it is misleading as the type is array (which is ordered). How about A list of devices? Also how about DevicesList instead of DevicesSet.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r437318603", "createdAt": "2020-06-09T10:51:55Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -847,6 +857,12 @@ components:\n             \"ext\":\n                $ref: '#/components/schemas/Extensions'\n \n+      DevicesSet:\n+         type: array\n+         description: A set of devices.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95b49d86b4aa3e170b82d05eb477840fd35761b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1MDg0OQ==", "bodyText": "I updated accordingly", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r437450849", "createdAt": "2020-06-09T14:07:21Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -847,6 +857,12 @@ components:\n             \"ext\":\n                $ref: '#/components/schemas/Extensions'\n \n+      DevicesSet:\n+         type: array\n+         description: A set of devices.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzMxODYwMw=="}, "originalCommit": {"oid": "d95b49d86b4aa3e170b82d05eb477840fd35761b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODM1NjkzOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODozMjo1OVrOGhqmcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODozMjo1OVrOGhqmcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NDE2MQ==", "bodyText": "we should be able to formally define the min and max using the minimum and maximum properties ...", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r437954161", "createdAt": "2020-06-10T08:32:59Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,59 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+                  The upper bound for this value is 200 and it cannot be less than 0.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d9b15244addd6e6388fb7de5568ea2d4f73da9c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODM1ODE4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODozMzoxOVrOGhqnQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODozMzoxOVrOGhqnQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NDM3MA==", "bodyText": "minimum: 0 ?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r437954370", "createdAt": "2020-06-10T08:33:19Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,59 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+                  The upper bound for this value is 200 and it cannot be less than 0.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d9b15244addd6e6388fb7de5568ea2d4f73da9c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODQwNTQ1OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODo0NTo1M1rOGhrFoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMToyNzowNFrOGlBeaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2MjE0NA==", "bodyText": "If I understand the examples correctly, then the property names of this object are supposed to be JSON paths like status.created and the property values need to be either ascending or descending, right?\nHowever, my understanding of this definition is that any instance of SortingOptions will be either the literal String ascending (default) or descending. The enum property does not define the possible values of the additionalProperties but the value of the SortingOptions object itself. Or am I mistaken? I do not think that it would even be possible to express the enum constraint based on your approach of variable property names because AFAIK you can only define constraints on particular properties or objects. So, FMPOV the SortingOptions would need to be changed to something that looks more like this:\n[\n  {\n      \"property\": \"status.created\",\n      \"direction\": \"descending\"\n  }, {\n       \"property\": \"last-user\",\n       \"direction\": \"ascending\"\n  }\n]", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r437962144", "createdAt": "2020-06-10T08:45:53Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,59 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+                  The upper bound for this value is 200 and it cannot be less than 0.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptions:\n+            type: object\n+            additionalProperties: true\n+            description: Allows arbitrary filters to be applied to bulk queries.\n+                         Fields to filter MUST be designated with their JSON Path representation.\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOptions:\n+         type: object\n+         additionalProperties: true\n+         description: Sorting options to be applied to bulk queries results.\n+                     The field to be used for sorting MUST be defined with its JSON Path representation.\n+         default: ascending\n+         enum:\n+            - ascending\n+            - descending\n+         examples:\n+            Sorting options:\n+               $ref: '#/components/examples/SortingOptionsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d9b15244addd6e6388fb7de5568ea2d4f73da9c"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NDY2NA==", "bodyText": "I think you are right. I am still not mastering the openAPI specification :)\nYour suggestion fits nicely so I updated the spec with that. Thanks !", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r441474664", "createdAt": "2020-06-17T11:27:04Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,59 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+                  The upper bound for this value is 200 and it cannot be less than 0.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptions:\n+            type: object\n+            additionalProperties: true\n+            description: Allows arbitrary filters to be applied to bulk queries.\n+                         Fields to filter MUST be designated with their JSON Path representation.\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOptions:\n+         type: object\n+         additionalProperties: true\n+         description: Sorting options to be applied to bulk queries results.\n+                     The field to be used for sorting MUST be defined with its JSON Path representation.\n+         default: ascending\n+         enum:\n+            - ascending\n+            - descending\n+         examples:\n+            Sorting options:\n+               $ref: '#/components/examples/SortingOptionsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2MjE0NA=="}, "originalCommit": {"oid": "8d9b15244addd6e6388fb7de5568ea2d4f73da9c"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDU1NjM0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTo0Mzo1NFrOGlB-uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTo0Mzo1NFrOGlB-uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ4MjkzOQ==", "bodyText": "I think the indentation is wrong here ...", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r441482939", "createdAt": "2020-06-17T11:43:54Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -528,13 +530,17 @@ components:\n \n       SortingOptions:\n          type: object\n-         additionalProperties: true\n+         additionalProperties: false\n          description: Sorting options to be applied to bulk queries results.\n-                     The field to be used for sorting MUST be defined with its JSON Path representation.\n-         default: ascending\n-         enum:\n-            - ascending\n-            - descending\n+         properties:\n+            \"field\":\n+               type: string\n+               description: The JSON Path representation of the field to use for sorting.\n+            \"direction\":\n+               default: ascending\n+                  enum:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72d3587cef6396ae335db29016fd135f825fa48f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDU2MTU3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTo0NTozNVrOGlCB9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTo0NTozNVrOGlCB9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ4Mzc2Ng==", "bodyText": "can I only filter and sort by one property each?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r441483766", "createdAt": "2020-06-17T11:45:35Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,65 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptions'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72d3587cef6396ae335db29016fd135f825fa48f"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDYxNDg1OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjowMjoxNlrOGlCjhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMTowMjoxMFrOGlqYCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5MjM1Ng==", "bodyText": "are these ANDed together? In any case, we should document the semantics explicitly ...", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r441492356", "createdAt": "2020-06-17T12:02:16Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -495,7 +495,7 @@ components:\n             \"page\":\n                $ref: '#/components/schemas/PagingOptions'\n             \"filters\":\n-               $ref: '#/components/schemas/FilterOptions'\n+               $ref: '#/components/schemas/FilterOptionsSet'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5a95c130dc3d72a30abdc9c3cc07831e6825d6b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE0NDc3OQ==", "bodyText": "I updated the description. Let me know what you think", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r442144779", "createdAt": "2020-06-18T11:02:10Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -495,7 +495,7 @@ components:\n             \"page\":\n                $ref: '#/components/schemas/PagingOptions'\n             \"filters\":\n-               $ref: '#/components/schemas/FilterOptions'\n+               $ref: '#/components/schemas/FilterOptionsSet'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ5MjM1Ng=="}, "originalCommit": {"oid": "d5a95c130dc3d72a30abdc9c3cc07831e6825d6b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDAwMTAwOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDoyNzowOFrOGnDHQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDoyNzowOFrOGnDHQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5ODY1OA==", "bodyText": "EDIT:\nParser error on line 526\ncan not read a block mapping entry; a multiline key may not be an implicit key\n\n@jbtrystram The second line of the description has wrong indentation. Please take a look.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r443598658", "createdAt": "2020-06-22T14:27:08Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -521,7 +521,8 @@ components:\n \n       FilterOptionsSet:\n          type: array\n-         description: A set of filter options.\n+         description: A set of filter options. If multiples filters are provided, they will be applied together\n+         in a cumulative way.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba07839033f6dce5a8aad1e9afa679317f46719c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODMxMzAzOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNDo1MzoyMlrOGntKlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNDo1MzoyMlrOGntKlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI4NzYzNw==", "bodyText": "How about\n\nThe maximum number of objects to include in a response.\n\nThe default value is defined explicitly already.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r444287637", "createdAt": "2020-06-23T14:53:22Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,72 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsSet'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba07839033f6dce5a8aad1e9afa679317f46719c"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODMyMDE3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNDo1NDo1MFrOGntPNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNDo1NDo1MFrOGntPNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI4ODgyMQ==", "bodyText": "This is actually a list of filters, isn't it? There is nothing preventing me from adding the same filter multiple times.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r444288821", "createdAt": "2020-06-23T14:54:50Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,72 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsSet'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsSet:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba07839033f6dce5a8aad1e9afa679317f46719c"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODMyODUzOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNDo1NjozNlrOGntUmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMzo1Nzo0M1rOGo7-nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MDIwMg==", "bodyText": "can we make this more explicit? How about:\n\nA list of filter expressions. Objects must match all filters in order to be included in a result.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r444290202", "createdAt": "2020-06-23T14:56:36Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,72 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsSet'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsSet:\n+         type: array\n+         description: A set of filter options. If multiples filters are provided, they will be applied together\n+         in a cumulative way.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba07839033f6dce5a8aad1e9afa679317f46719c"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU3ODkwOQ==", "bodyText": "Thanks ! I struggled quite a bit to make this understandable, your proposal is better I think", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r445578909", "createdAt": "2020-06-25T13:57:43Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,72 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsSet'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsSet:\n+         type: array\n+         description: A set of filter options. If multiples filters are provided, they will be applied together\n+         in a cumulative way.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5MDIwMg=="}, "originalCommit": {"oid": "ba07839033f6dce5a8aad1e9afa679317f46719c"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODM1MzA0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNTowMjoyMFrOGntk7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDowMjo0OVrOGo8M-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5NDM4Mg==", "bodyText": "I think it would be better to use the same approach as we do for the sorting options, i.e. explicitly define two properties one containing the path expression and the other containing the value to match. That way we would be able to define constraints on the properties (if we so choose) and the list of filters actually makes some sense because otherwise there is no need for an array of FilterOption objects because a single FilterObject could already contain arbitrary filter expressions ...", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r444294382", "createdAt": "2020-06-23T15:02:20Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,72 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsSet'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsSet:\n+         type: array\n+         description: A set of filter options. If multiples filters are provided, they will be applied together\n+         in a cumulative way.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: true\n+            description: Allows arbitrary filters to be applied to bulk queries.\n+                         Fields to filter MUST be designated with their JSON Path representation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba07839033f6dce5a8aad1e9afa679317f46719c"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU4MjU4Ng==", "bodyText": "Yes it's a good idea to have sorting options and filters to be designed the same way :)", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r445582586", "createdAt": "2020-06-25T14:02:49Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -461,7 +487,72 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsSet'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: |\n+                  The threshold on the number of results returned in a single API call. If not set, the registry will return up to 30 results.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsSet:\n+         type: array\n+         description: A set of filter options. If multiples filters are provided, they will be applied together\n+         in a cumulative way.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: true\n+            description: Allows arbitrary filters to be applied to bulk queries.\n+                         Fields to filter MUST be designated with their JSON Path representation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI5NDM4Mg=="}, "originalCommit": {"oid": "ba07839033f6dce5a8aad1e9afa679317f46719c"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDM2MjE3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzo1Njo0OFrOGq9nxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzo1Njo0OFrOGq9nxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwMjk4Mg==", "bodyText": "The properties entry has incorrect indentation.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r447702982", "createdAt": "2020-06-30T13:56:48Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -952,6 +1047,23 @@ components:\n             \"ext\":\n                $ref: '#/components/schemas/Extensions'\n \n+      SearchDevicesResult:\n+         type: object\n+         description: The result of a search request.\n+         additionalProperties: false\n+            properties:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eadd9a2329d882eb49d8b5df165994d08e1a1f6"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDQwMjkyOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowNToxM1rOGq-BMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowNToxM1rOGq-BMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwOTQ4OA==", "bodyText": "IMHO it is also better to include sorting in the summary. How about Search devices for a tenant with optional filters, paging and sorting options?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r447709488", "createdAt": "2020-06-30T14:05:13Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -324,6 +324,32 @@ paths:\n             403:\n                $ref: '#/components/responses/NotAllowed'\n \n+      get:\n+         tags:\n+            - devices\n+         summary: Search devices for a tenant, with optional filters and paging options.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eadd9a2329d882eb49d8b5df165994d08e1a1f6"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDY2NjA3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo1ODowMlrOGrAjyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDo1ODowMlrOGrAjyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc1MTExMw==", "bodyText": "The search operation should return #/components/schemas/DevicesList (a list of devices) and not #/components/schemas/Device.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r447751113", "createdAt": "2020-06-30T14:58:02Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -952,6 +1047,23 @@ components:\n             \"ext\":\n                $ref: '#/components/schemas/Extensions'\n \n+      SearchDevicesResult:\n+         type: object\n+         description: The result of a search request.\n+         additionalProperties: false\n+            properties:\n+               \"total\":\n+                  type: String\n+                  description: The total number of results returned by the query, regardless of the \"limit\" set in the paging options.\n+               \"results\":\n+                  $ref: '#/components/schemas/Device'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eadd9a2329d882eb49d8b5df165994d08e1a1f6"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDQxMjI4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0NTo1MFrOGrkW-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwNjo0OTowM1rOGslkfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzNzY1OA==", "bodyText": "will this be matched exactly or can we use a regex here or wildcards?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r448337658", "createdAt": "2020-07-01T12:45:50Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,76 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsList:\n+         type: array\n+         description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: The value to filter the field with.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5Njg3NQ==", "bodyText": "I don't know what is the better choice honnestly. I suppose it depends on the underlying database, what does it supports.\n@dejanb @ctron any opinions on this ?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r449396875", "createdAt": "2020-07-03T06:22:44Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,76 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsList:\n+         type: array\n+         description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: The value to filter the field with.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzNzY1OA=="}, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQwNjA3Nw==", "bodyText": "Again, I am not arguing that this must support wildcards or regex. In any case, we must document the expected behavior ...", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r449406077", "createdAt": "2020-07-03T06:49:03Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,76 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsList:\n+         type: array\n+         description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: The value to filter the field with.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzNzY1OA=="}, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDQyMDI0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0ODoxMlrOGrkcCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwODo1MjoxOVrOGspBjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzODk1Mw==", "bodyText": "this object defines a single sort option only, doesn't it?\nIf you want to allow for multiple sort options to be given, then the PagingSortingFilteringOptions.sort property needs to be an array, right?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r448338953", "createdAt": "2020-07-01T12:48:12Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,76 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsList:\n+         type: array\n+         description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: The value to filter the field with.\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOptions:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA0MTY2Nw==", "bodyText": "IMHO having multiples sort options at the same time is a bit weird (from a UI/UX perspective) but i guess it doesn't hurt to support it in the back end.\nedit : when applying more than one sorting option, how would we decide the priority ?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r449041667", "createdAt": "2020-07-02T14:26:37Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,76 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsList:\n+         type: array\n+         description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: The value to filter the field with.\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOptions:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzODk1Mw=="}, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA3MTc1NA==", "bodyText": "I am in no way arguing that we must have multiple sorting options. We could as well have just one. I only want to make sure that we know what we want/get :-) So, supporting only one sort option for the time being is fine with me. In any case, the object should be named SortingOption as it only defines a single property and sort direction, right? If we want to support multiple options later, then we would allow specifying an array of SortingOption instances in PagingSortingFilteringOptions. In that case (multiple options) my understanding would be that the results are ordered following the order of the SortingOption instances in the array ...", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r449071754", "createdAt": "2020-07-02T15:10:17Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,76 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsList:\n+         type: array\n+         description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: The value to filter the field with.\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOptions:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzODk1Mw=="}, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM5MzYwNw==", "bodyText": "I am fine with both as well. Sorry if my comment came across as arguing, I wasn't either.\nI am thinking that having an array to support multiples options is the most flexible. The underlying implementation can choose to only support one and apply the first element of the array.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r449393607", "createdAt": "2020-07-03T06:11:48Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,76 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsList:\n+         type: array\n+         description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: The value to filter the field with.\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOptions:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzODk1Mw=="}, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ2MjY2OQ==", "bodyText": "I pushed a change using multiples filters and improved the documentation.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r449462669", "createdAt": "2020-07-03T08:52:19Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,76 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOptionsList:\n+         type: array\n+         description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+         items:\n+            $ref: '#/components/schemas/FilterOption'\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: The value to filter the field with.\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOptions:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzODk1Mw=="}, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDQyMzcxOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0OToxMlrOGrkeQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjo0OToxMlrOGrkeQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMzOTUyMA==", "bodyText": "how about replacing the quotes with *limit*?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r448339520", "createdAt": "2020-07-01T12:49:12Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -952,6 +1047,23 @@ components:\n             \"ext\":\n                $ref: '#/components/schemas/Extensions'\n \n+      SearchDevicesResult:\n+         type: object\n+         description: The result of a search request.\n+         additionalProperties: false\n+         properties:\n+            \"total\":\n+               type: String\n+               description: The total number of results returned by the query, regardless of the \"limit\" set in the paging options.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33be5a29135cb9e737161e1392146d761e973513"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjQ5NDI2OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDoyNjo0NVrOGsyAfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDoyNjo0NVrOGsyAfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYwOTg1NQ==", "bodyText": "how about using\n\"filters\":\n  type: array\n  items:\n    $ref: '#/components/schemas/FilterOption'\nin order to not having to create a separate object definition for each list of objects?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r449609855", "createdAt": "2020-07-03T14:26:45Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,82 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7035e5d0904703f5a60c403ad8a478755512f471"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjQ5Nzk0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDoyNzo1MlrOGsyClA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDoyNzo1MlrOGsyClA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMDM4OA==", "bodyText": "this refers to a non-existing type. Should probably also be\n\"sort\":\n  type: array\n  items:\n    $ref: '#/components/schemas/SortingOption'\nand then we can remove SortingOptionsList", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r449610388", "createdAt": "2020-07-03T14:27:52Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,82 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               $ref: '#/components/schemas/FilterOptionsList'\n+            \"sort\":\n+               $ref: '#/components/schemas/SortingOptions'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7035e5d0904703f5a60c403ad8a478755512f471"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTU1NDUzOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDoyMTo0NlrOGuqfnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDoxMToyOFrOGvx4bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MzkwMw==", "bodyText": "FMPOV standard wildcards like * (zero or more characters) and ? one character would be more appropriate as they are more widely known.\nJust out of curiosity: if eq allows for using wildcards, what are be semantics of the like operation? I sthat about phonetic similarity or similar spelling?\nBased on the fact that we are allowing wildcards, the operation that we are talking about would rather be like and not eq, right?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r451583903", "createdAt": "2020-07-08T14:21:46Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     SQL wildcard characters are supported : `%` will match zero or any number of characters\n+                     and `_` will match exactly one character.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b653490b3514e677e4261a104ea10981a577c604"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE4NjIxNw==", "bodyText": "I went with % and _ because they are standard SQL wildcards, where * and ? are more used in shell environment. I have no preference there.\nAnd yeah, I agree, I would intuitively say that eq *word* is similar to like word, but it probably changes with actual database implementations", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r452186217", "createdAt": "2020-07-09T12:39:08Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     SQL wildcard characters are supported : `%` will match zero or any number of characters\n+                     and `_` will match exactly one character.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MzkwMw=="}, "originalCommit": {"oid": "b653490b3514e677e4261a104ea10981a577c604"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5NTQ1OA==", "bodyText": "Let's do a poll .\n@dejanb  @ctron @sophokles73 @calohmn  please vote on that comment :\n\ud83d\udc4d for * and ?\n\ud83d\udc4e for % and _", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r452195458", "createdAt": "2020-07-09T12:55:04Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     SQL wildcard characters are supported : `%` will match zero or any number of characters\n+                     and `_` will match exactly one character.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MzkwMw=="}, "originalCommit": {"oid": "b653490b3514e677e4261a104ea10981a577c604"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI2NzAwNQ==", "bodyText": "I see that REST APIs use mostly */? combination, so let's go with that.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r452267005", "createdAt": "2020-07-09T14:38:41Z", "author": {"login": "dejanb"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     SQL wildcard characters are supported : `%` will match zero or any number of characters\n+                     and `_` will match exactly one character.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MzkwMw=="}, "originalCommit": {"oid": "b653490b3514e677e4261a104ea10981a577c604"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjY4MjMzMA==", "bodyText": "I updated the PR with */? as wildcards.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r452682330", "createdAt": "2020-07-10T07:52:41Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     SQL wildcard characters are supported : `%` will match zero or any number of characters\n+                     and `_` will match exactly one character.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MzkwMw=="}, "originalCommit": {"oid": "b653490b3514e677e4261a104ea10981a577c604"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjczNDk0Nw==", "bodyText": "did you?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r452734947", "createdAt": "2020-07-10T09:34:27Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     SQL wildcard characters are supported : `%` will match zero or any number of characters\n+                     and `_` will match exactly one character.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MzkwMw=="}, "originalCommit": {"oid": "b653490b3514e677e4261a104ea10981a577c604"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc1MzUxNw==", "bodyText": "ahem, sorry.. This should be fixed \ud83d\ude01", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r452753517", "createdAt": "2020-07-10T10:11:28Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     SQL wildcard characters are supported : `%` will match zero or any number of characters\n+                     and `_` will match exactly one character.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU4MzkwMw=="}, "originalCommit": {"oid": "b653490b3514e677e4261a104ea10981a577c604"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzUxNDIxOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTo1Mzo1OVrOGxQWNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTo1Mzo1OVrOGxQWNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMwMTIzOA==", "bodyText": "Missing comma at the end of the field value.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r454301238", "createdAt": "2020-07-14T11:53:59Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1343,3 +1462,22 @@ components:\n                   \"not-after\": \"2027-12-24T19:00:00Z\",\n                }]\n             }]\n+      FilterOptionsExample:\n+         value:\n+           [\n+            {\n+                field: \"enabled\",\n+                value: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d8ba6620d232dbfa2624276470102c8305bda38"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzUxNDcyOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTo1NDoxNFrOGxQWkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTo1NDoxNFrOGxQWkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMwMTMyOQ==", "bodyText": "Missing comma at the end of the field value.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r454301329", "createdAt": "2020-07-14T11:54:14Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1343,3 +1462,22 @@ components:\n                   \"not-after\": \"2027-12-24T19:00:00Z\",\n                }]\n             }]\n+      FilterOptionsExample:\n+         value:\n+           [\n+            {\n+                field: \"enabled\",\n+                value: true\n+                op: \"eq\"\n+            },\n+            {\n+                field: \"ext.brand\",\n+                value: \"eclipse*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d8ba6620d232dbfa2624276470102c8305bda38"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODQyMzg2OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo0Nzo1MlrOGx-9ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNDowMzoxMlrOGx_qVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2NDkzOA==", "bodyText": "The API is already at 1.3.0 on master ...", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r455064938", "createdAt": "2020-07-15T13:47:52Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -36,7 +36,7 @@ info:\n    license:\n       name: EPL-2.0\n       url: https://www.eclipse.org/legal/epl-2.0/\n-   version: 1.2.0\n+   version: 1.3.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3ced74c125984333006bdef08ff6ddea21360e6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA3NjQzNw==", "bodyText": "fixed.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r455076437", "createdAt": "2020-07-15T14:03:12Z", "author": {"login": "jbtrystram"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -36,7 +36,7 @@ info:\n    license:\n       name: EPL-2.0\n       url: https://www.eclipse.org/legal/epl-2.0/\n-   version: 1.2.0\n+   version: 1.3.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2NDkzOA=="}, "originalCommit": {"oid": "e3ced74c125984333006bdef08ff6ddea21360e6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODQzNjgyOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo1MDoxNlrOGx_FCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo1MDoxNlrOGx_FCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2Njg4OA==", "bodyText": "FMPOV this property is required, right?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r455066888", "createdAt": "2020-07-15T13:50:16Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     Wildcard characters are supported : `*` will match zero or any number of characters\n+                     and `?` will match exactly one character.\n+               \"op\":\n+                  description: The operator to use when applying the filter.\n+                  enum:\n+                     - eq\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOption:\n+         type: object\n+         additionalProperties: false\n+         description: Sorting option to be applied to bulk queries results.\n+         properties:\n+            \"field\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3ced74c125984333006bdef08ff6ddea21360e6"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODQzOTYyOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo1MDo1MVrOGx_Gxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMzo1MDo1MVrOGx_Gxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA2NzMzNA==", "bodyText": "all of these properties are required, aren't they?", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r455067334", "createdAt": "2020-07-15T13:50:51Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -620,7 +646,83 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     Wildcard characters are supported : `*` will match zero or any number of characters\n+                     and `?` will match exactly one character.\n+               \"op\":\n+                  description: The operator to use when applying the filter.\n+                  enum:\n+                     - eq", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3ced74c125984333006bdef08ff6ddea21360e6"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjQyNjg2OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOTowMDowMFrOG2B_PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOTowMDowMFrOG2B_PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMwODg2MA==", "bodyText": "required is an object-level attribute and not a property attribute. This doesn't belong here. This can be removed.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r459308860", "createdAt": "2020-07-23T09:00:00Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -625,7 +651,90 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            required:\n+               - field\n+               - value\n+               - op\n+            properties:\n+               \"field\":\n+                  type: string\n+                  required: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941852da87c563980bc817ad5d3f524122c8f4ab"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjQ5NjExOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOToyMDozN1rOG2CpuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOToyMDozN1rOG2CpuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMxOTczNg==", "bodyText": "type: string is missing for this enum object op.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r459319736", "createdAt": "2020-07-23T09:20:37Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -625,7 +651,90 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            required:\n+               - field\n+               - value\n+               - op\n+            properties:\n+               \"field\":\n+                  type: string\n+                  required: true\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     Wildcard characters are supported : `*` will match zero or any number of characters\n+                     and `?` will match exactly one character.\n+               \"op\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941852da87c563980bc817ad5d3f524122c8f4ab"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NjUwMTk4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOToyMjoyNFrOG2CtZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwOToyMjoyNFrOG2CtZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTMyMDY3OA==", "bodyText": "type: string is missing for this enum object direction.", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r459320678", "createdAt": "2020-07-23T09:22:24Z", "author": {"login": "kaniyan"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -625,7 +651,90 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            required:\n+               - field\n+               - value\n+               - op\n+            properties:\n+               \"field\":\n+                  type: string\n+                  required: true\n+                  description: The JSON Path representation of the field to use for filtering.\n+               \"value\":\n+                  type: string\n+                  description: |\n+                     The value to filter the field with.\n+                     Wildcard characters are supported : `*` will match zero or any number of characters\n+                     and `?` will match exactly one character.\n+               \"op\":\n+                  description: The operator to use when applying the filter.\n+                  enum:\n+                     - eq\n+            examples:\n+               Filters options:\n+                  $ref: '#/components/examples/FilterOptionsExample'\n+\n+      SortingOption:\n+         type: object\n+         additionalProperties: false\n+         description: Sorting option to be applied to bulk queries results.\n+         required:\n+            - field\n+         properties:\n+            \"field\":\n+               type: string\n+               description: The JSON Path representation of the field to use for sorting.\n+            \"direction\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941852da87c563980bc817ad5d3f524122c8f4ab"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzMwNjA4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/management/device-registry-v1.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzozMjo1OVrOG7UkdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwNzozMjo1OVrOG7UkdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg1NjE4MQ==", "bodyText": "FMPOV we need to specify explicitly which parts of JSONPath we support here. In particular we seem to only use the dot notation and omit the $ indicating the root element, right? We do seem to support array indexes but do not support predicates. Instead we use a separate property for predicates (op), right? Without a detailed specification of what we support here, this feature will be very hard to implement consistently ...", "url": "https://github.com/eclipse/hono/pull/1995#discussion_r464856181", "createdAt": "2020-08-04T07:32:59Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -625,7 +651,91 @@ components:\n          description: Allows arbitrary properties as extension to the ones\n                       specified by the Hono API.\n \n-# Tenant schema\n+\n+      PagingSortingFilteringOptions:\n+         type: object\n+         additionalProperties: false\n+         properties:\n+            \"page\":\n+               $ref: '#/components/schemas/PagingOptions'\n+            \"filters\":\n+               type: array\n+               description: A list of filter expressions. Objects must match all filters in order to be included in a result.\n+               items:\n+                  $ref: '#/components/schemas/FilterOption'\n+            \"sort\":\n+               type: array\n+               description: A list of sorting options. If multiples options are provided, the results will be sorted following the order of the options in the list.\n+               items:\n+                  $ref: '#/components/schemas/SortingOption'\n+\n+      PagingOptions:\n+         type: object\n+         additionalProperties: false\n+         description: options to page the results of bulk queries.\n+         properties:\n+            \"limit\":\n+               type: integer\n+               default: 30\n+               minimum: 0\n+               maximum: 200\n+               description: The maximum number of objects to include in a response.\n+            \"offset\":\n+               type: integer\n+               default: 0\n+               minimum: 0\n+               description: |\n+                  The offset to use as a starting point to return results. This allows to go through the query results in\n+                  a paged manner when the query returns more results than the limit.\n+\n+      FilterOption:\n+            type: object\n+            additionalProperties: false\n+            description: Filters to be applied to bulk queries.\n+            required:\n+               - field\n+               - value\n+               - op\n+            properties:\n+               \"field\":\n+                  type: string\n+                  description: The JSON Path representation of the field to use for filtering.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e3c34a2b88fc966dd388e1771e3aaf6d724ed4c"}, "originalPosition": 104}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3140, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}