{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MDU2NDA4", "number": 1711, "title": "[#1710] stop registry to return hashed-passwords details", "bodyText": "The device registry now only returns metadata and a secret ID for each secret.\nSigned-off-by: Jean-Baptiste Trystram jbtrystram@redhat.com", "createdAt": "2020-01-17T09:50:11Z", "url": "https://github.com/eclipse/hono/pull/1711", "merged": true, "mergeCommit": {"oid": "e7fa8b523ea0e02a4ce8354538782c423e10f23e"}, "closed": true, "closedAt": "2020-02-11T15:04:55Z", "author": {"login": "jbtrystram"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7LzXHgBqjI5NTc1Njk4NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDTH-rAFqTM1NjczMDczNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6e16d345a72b78338bbbbba02794654b2a1c3ec", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/e6e16d345a72b78338bbbbba02794654b2a1c3ec", "committedDate": "2020-01-17T09:49:05Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "a68c3c04ca7758fc2be6a54edf674e51e2fa9bc4", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/a68c3c04ca7758fc2be6a54edf674e51e2fa9bc4", "committedDate": "2020-01-17T10:01:21Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a68c3c04ca7758fc2be6a54edf674e51e2fa9bc4", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/a68c3c04ca7758fc2be6a54edf674e51e2fa9bc4", "committedDate": "2020-01-17T10:01:21Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "4e067e5446006de2af4777dec5fd19fdc53e1afc", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/4e067e5446006de2af4777dec5fd19fdc53e1afc", "committedDate": "2020-01-22T10:09:15Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NTYyOTIx", "url": "https://github.com/eclipse/hono/pull/1711#pullrequestreview-346562921", "createdAt": "2020-01-22T12:52:16Z", "commit": {"oid": "4e067e5446006de2af4777dec5fd19fdc53e1afc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjo1MjoxN1rOFgbApg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjo1NTozNVrOFgbGDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MTI4Ng==", "bodyText": "IMHO there is no need to include the id in the response payload. What should a protocol adapter do with it?", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r369541286", "createdAt": "2020-01-22T12:52:17Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/credentials/index.md", "diffHunk": "@@ -155,6 +155,7 @@ Below is an example for a payload containing [a hashed password]({{< relref \"#ha\n   \"auth-id\": \"sensor1\",\n   \"enabled\": true,\n   \"secrets\": [{\n+    \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e067e5446006de2af4777dec5fd19fdc53e1afc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MjAwMw==", "bodyText": "what is this property good for in this context? Isn't this the response to a get credentials request?", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r369542003", "createdAt": "2020-01-22T12:53:51Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1077,15 +1075,10 @@ components:\n             }]\n       MetaPasswordExample:\n          value:\n-           [{\n-               auth-id: sensor1,\n-               type: hashed-password,\n-               secrets: [{\n-                  \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n-                  \"not-after\": \"2027-12-24T19:00:00Z\",\n-                  \"pwd-plain\": \"\",\n-                  \"pwd-hash\": \"\",\n-                  \"salt\": \"\",\n-                  \"hash-function\": \"\"\n-               }]\n+            auth-id: sensor1\n+            type: hashed-password\n+            secrets: [{\n+               \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n+               \"not-after\": \"2027-12-24T19:00:00Z\",\n+               \"pwd-plain\": \"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e067e5446006de2af4777dec5fd19fdc53e1afc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MjQ0NA==", "bodyText": "I would rather keep the original wording and instead explain explicitly, why the response payload does not contain the password itself ...", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r369542444", "createdAt": "2020-01-22T12:54:59Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/device-registry.md", "diffHunk": "@@ -299,9 +299,9 @@ HTTP/1.1 204 No Content\n ETag: becc93d7-ab0f-48ec-ad26-debdf339cbf4x\n ~~~\n     \n-This uses a convenient option which lets the Device Registry do the hashing of the password. The following command retrieves the credentials that are stored by the Device Registry as a result of the command above: \n-    \n-~~~sh    \n+This lets the Device Registry do the hashing of the password. The following command retrieves some metadata credentials that are stored by the Device Registry as a result of the command above: ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e067e5446006de2af4777dec5fd19fdc53e1afc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MjY2OQ==", "bodyText": "please be more explicit about which information is no longer returned", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r369542669", "createdAt": "2020-01-22T12:55:35Z", "author": {"login": "sophokles73"}, "path": "site/homepage/content/release-notes.md", "diffHunk": "@@ -25,6 +25,11 @@ title = \"Release Notes\"\n   mechanisms advertised to a client connecting to these components. This can be used to\n   restrict the support to only one of the SASL PLAIN and EXTERNAL mechanisms instead of both. \n \n+### API Changes\n+\n+ * The device registry credentials endpoint will no longer handout details for hashed-password secrets.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e067e5446006de2af4777dec5fd19fdc53e1afc"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2Njc3MzA5", "url": "https://github.com/eclipse/hono/pull/1711#pullrequestreview-346677309", "createdAt": "2020-01-22T15:29:26Z", "commit": {"oid": "83c1f98b869e1e174cda98fe56eea543dfee64fb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToyOToyNlrOFggWvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTozMDozNVrOFggZpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyODg2MQ==", "bodyText": "... not contain ... as these values ...", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r369628861", "createdAt": "2020-01-22T15:29:26Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/device-registry.md", "diffHunk": "@@ -319,6 +319,7 @@ ETag: becc93d7-ab0f-48ec-ad26-debdf339cbf4x\n   ]\n }]\n ~~~\n+The above result does not contains `pwd_hash` and `hash_function` of the secret, as these value are confidential.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83c1f98b869e1e174cda98fe56eea543dfee64fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyOTYwNw==", "bodyText": "salt", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r369629607", "createdAt": "2020-01-22T15:30:35Z", "author": {"login": "sophokles73"}, "path": "site/homepage/content/release-notes.md", "diffHunk": "@@ -27,8 +27,9 @@ title = \"Release Notes\"\n \n ### API Changes\n \n- * The device registry credentials endpoint will no longer handout details for hashed-password secrets.\n-   Each password is given an ID which is now returned by the device registry.\n+ * The device registry credentials endpoint will no longer handout sensitive details for hashed-password secrets.\n+   `pwd-hash`, `Salt` and `hash-function` are stored by the device registry but not returned to the user.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83c1f98b869e1e174cda98fe56eea543dfee64fb"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83c1f98b869e1e174cda98fe56eea543dfee64fb", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/83c1f98b869e1e174cda98fe56eea543dfee64fb", "committedDate": "2020-01-22T14:22:26Z", "message": "include Kai feedback\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/f7c1f5375182eefc715d5eeb91a9c7627230a3e6", "committedDate": "2020-01-23T09:28:45Z", "message": "include Kai feedback\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MjgwMTY2", "url": "https://github.com/eclipse/hono/pull/1711#pullrequestreview-347280166", "createdAt": "2020-01-23T13:06:20Z", "commit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzowNjoyMFrOFg9b9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzoyMjo0NFrOFg93og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwNTMzNQ==", "bodyText": "How about renaming this to the more general FIELD_ID since it is not really secrets specific anyway and might be used for other entities as well. WDYT?", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370105335", "createdAt": "2020-01-23T13:06:20Z", "author": {"login": "sophokles73"}, "path": "core/src/main/java/org/eclipse/hono/util/RegistryManagementConstants.java", "diffHunk": "@@ -107,6 +107,10 @@\n     public static final String FIELD_CREDENTIALS_TOTAL           = \"total\";\n \n     /* secrets fields */\n+    /**\n+     * The name of the field that contains the secret id.\n+     */\n+    public static final String FIELD_SECRETS_ID                 = \"id\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwNjAzNQ==", "bodyText": "what is the uniqueness scope of this ID? I assume it is just the containing Credentials instance, right? However, IMHO we should document this here.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370106035", "createdAt": "2020-01-23T13:08:08Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java", "diffHunk": "@@ -55,6 +58,21 @@ public CommonSecret setEnabled(final Boolean enabled) {\n         return this;\n     }\n \n+    public String getId() {\n+        return id;\n+    }\n+\n+    /**\n+     * Sets the ID of the secret. This id may be assigned by the device registry.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwODk5MQ==", "bodyText": "I actually meant the empty pwd-plain property ...\nSo, if I get it right, then the id property currently has no purpose at all because it is not considered when adding/updating credentials, right?", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370108991", "createdAt": "2020-01-23T13:14:55Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/management/device-registry-v1.yaml", "diffHunk": "@@ -1077,15 +1075,10 @@ components:\n             }]\n       MetaPasswordExample:\n          value:\n-           [{\n-               auth-id: sensor1,\n-               type: hashed-password,\n-               secrets: [{\n-                  \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n-                  \"not-after\": \"2027-12-24T19:00:00Z\",\n-                  \"pwd-plain\": \"\",\n-                  \"pwd-hash\": \"\",\n-                  \"salt\": \"\",\n-                  \"hash-function\": \"\"\n-               }]\n+            auth-id: sensor1\n+            type: hashed-password\n+            secrets: [{\n+               \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\",\n+               \"not-after\": \"2027-12-24T19:00:00Z\",\n+               \"pwd-plain\": \"\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MjAwMw=="}, "originalCommit": {"oid": "4e067e5446006de2af4777dec5fd19fdc53e1afc"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwOTU1NA==", "bodyText": "does this actually add credentials or does it replace all existing credentials? IMHO it is the latter ...", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370109554", "createdAt": "2020-01-23T13:16:04Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/device-registry.md", "diffHunk": "@@ -314,23 +314,21 @@ ETag: becc93d7-ab0f-48ec-ad26-debdf339cbf4x\n   \"enabled\": true,\n   \"secrets\": [\n     {\n-      \"pwd-hash\": \"$2a$10$uc.qVDwXeDRE1DWa1sM9iOaY9wuevjfALGMtXmHKP.SJDEqg0q7M6\",\n-      \"hash-function\": \"bcrypt\"\n+      \"id\": \"349556ea-4902-47c7-beb0-1009ab693fb4\"\n     }\n   ]\n }]\n ~~~\n-    \n+The above result does not contain `pwd_hash` and `hash_function` of the secret, as these values are confidential.\n+\n The following commands add some `hashed-password` credentials for device `4720` using authentication identifier `sensor20`:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDExMDc4NQ==", "bodyText": "I guess the example payload should at least contain two secrets with e.g. adjoining validity periods so that you can see, what the id would be useful for (e.g. for changing one of the two passwords) ...", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370110785", "createdAt": "2020-01-23T13:18:53Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/user-guide/device-registry.md", "diffHunk": "@@ -403,7 +398,7 @@ ETag: d383ba4d-1853-4d03-b322-b7ff5af05ae2\n \n **Example**\n \n-The following command retrieves credentials for device `4720`:\n+The following command retrieves credentials metadata for device `4720`:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDExMTQ4Mw==", "bodyText": "you shouldn't complete the context for each secret ...", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370111483", "createdAt": "2020-01-23T13:20:37Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/registry/CredentialsHttpIT.java", "diffHunk": "@@ -403,9 +403,11 @@ public void testGetAddedCredentials(final VertxTestContext context) {\n                 HttpURLConnection.HTTP_NO_CONTENT)\n                 .compose(ar -> registry.getCredentials(TENANT, deviceId))\n                 .setHandler(context.succeeding(b -> {\n-                    context.verify(() -> assertThat(b.toJsonArray())\n-                            .isEqualTo(new JsonArray().add(JsonObject.mapFrom(hashedPasswordCredential))));\n-                    context.completeNow();\n+                    final PasswordCredential cred = b.toJsonArray().getJsonObject(0).mapTo(PasswordCredential.class);\n+                    cred.getSecrets().forEach(secret -> {\n+                        context.verify(() -> assertThat(secret.getId()).isNotNull());\n+                        context.completeNow();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDExMjQxOA==", "bodyText": "there is not much left to compare, is there?", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370112418", "createdAt": "2020-01-23T13:22:44Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/registry/CredentialsHttpIT.java", "diffHunk": "@@ -541,8 +543,33 @@ public void testGetAddedCredentialsButWithWrongAuthId(final VertxTestContext con\n     private static void assertResponseBodyContainsAllCredentials(final VertxTestContext context, final JsonArray responseBody,\n             final List<CommonCredential> expected) {\n \n+        assertThat(expected.size()).isEqualTo(responseBody.size());\n+\n+        responseBody.forEach(credential -> {\n+            JsonObject.mapFrom(credential).getJsonArray(CredentialsConstants.FIELD_SECRETS)\n+                    .forEach(secret -> {\n+                        // each secret should contain an ID.\n+                        assertThat(JsonObject.mapFrom(secret)\n+                                .getString(RegistryManagementConstants.FIELD_SECRETS_ID)).isNotNull();\n+                    });\n+        });\n+\n+        // secrets id were added by registry, strip it so we can compare other fields.\n+        responseBody.forEach(credential ->{\n+            ((JsonObject) credential).getJsonArray(CredentialsConstants.FIELD_SECRETS)\n+                    .forEach(secret -> {\n+                        ((JsonObject) secret).remove(RegistryManagementConstants.FIELD_SECRETS_ID);\n+                    });\n+        });\n+\n+        // The returned secrets won't contains the hashed password details fields, strip them from the expected values.\n         final JsonArray expectedArray = new JsonArray();\n-        expected.stream().forEach(credential -> expectedArray.add(JsonObject.mapFrom(credential)));\n+        expected.stream().forEach(credential -> {\n+            final JsonObject jsonCredential = JsonObject.mapFrom(credential);\n+            expectedArray.add(stripHashAndSaltFromPasswordSecret(jsonCredential));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "originalPosition": 43}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/f7c1f5375182eefc715d5eeb91a9c7627230a3e6", "committedDate": "2020-01-23T09:28:45Z", "message": "include Kai feedback\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "3ac9016b8e53ed0e928172211ebd65e005a8ee57", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/3ac9016b8e53ed0e928172211ebd65e005a8ee57", "committedDate": "2020-01-24T11:25:40Z", "message": "include Kai feedback\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ac9016b8e53ed0e928172211ebd65e005a8ee57", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/3ac9016b8e53ed0e928172211ebd65e005a8ee57", "committedDate": "2020-01-24T11:25:40Z", "message": "include Kai feedback\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "ac424b8ee2e53ff15adee31b5ef7634d751ba84c", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/ac424b8ee2e53ff15adee31b5ef7634d751ba84c", "committedDate": "2020-01-24T13:43:35Z", "message": "include Kai feedback\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3OTcwOTkw", "url": "https://github.com/eclipse/hono/pull/1711#pullrequestreview-347970990", "createdAt": "2020-01-24T14:02:22Z", "commit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDowMjoyM1rOFhei5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxNDowMzo0N1rOFhelSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0Nzc4MA==", "bodyText": "Can these IDs be assigned by a client, i.e. when registering the credentials? If so, do we check that the IDs are unique within the credentials?", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370647780", "createdAt": "2020-01-24T14:02:23Z", "author": {"login": "sophokles73"}, "path": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/CommonSecret.java", "diffHunk": "@@ -55,6 +58,21 @@ public CommonSecret setEnabled(final Boolean enabled) {\n         return this;\n     }\n \n+    public String getId() {\n+        return id;\n+    }\n+\n+    /**\n+     * Sets the ID of the secret. This id may be assigned by the device registry.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEwNjAzNQ=="}, "originalCommit": {"oid": "f7c1f5375182eefc715d5eeb91a9c7627230a3e6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDY0ODM5Mg==", "bodyText": "what if they already have an ID, e.g. provided by the client?", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r370648392", "createdAt": "2020-01-24T14:03:47Z", "author": {"login": "sophokles73"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -539,6 +539,10 @@ public void set(final String tenantId, final String deviceId, final Optional<Str\n                 credentialsJson.put(CredentialsConstants.FIELD_SECRETS, secretsJson);\n             }\n             secretsJson.addAll(credentialObject.getJsonArray(CredentialsConstants.FIELD_SECRETS));\n+            // add an id for each secret.\n+            secretsJson.forEach(secret -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac424b8ee2e53ff15adee31b5ef7634d751ba84c"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84f8b04a59283c7a07f6a37b002659aaf2fad990", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/84f8b04a59283c7a07f6a37b002659aaf2fad990", "committedDate": "2020-01-31T14:33:29Z", "message": "add unit tests\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "f2e148959b26ef049489ba5a579e15c3575813e8", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/f2e148959b26ef049489ba5a579e15c3575813e8", "committedDate": "2020-02-04T08:52:26Z", "message": "add unit tests\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2e148959b26ef049489ba5a579e15c3575813e8", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/f2e148959b26ef049489ba5a579e15c3575813e8", "committedDate": "2020-02-04T08:52:26Z", "message": "add unit tests\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "fe4277bdc0e5240900582cea8acaeaa7d587426e", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/fe4277bdc0e5240900582cea8acaeaa7d587426e", "committedDate": "2020-02-04T14:18:39Z", "message": "add unit tests\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe4277bdc0e5240900582cea8acaeaa7d587426e", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/fe4277bdc0e5240900582cea8acaeaa7d587426e", "committedDate": "2020-02-04T14:18:39Z", "message": "add unit tests\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "8ee3909b3420f625939462e61998836570363be8", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/8ee3909b3420f625939462e61998836570363be8", "committedDate": "2020-02-04T15:04:06Z", "message": "add unit tests\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ee3909b3420f625939462e61998836570363be8", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/8ee3909b3420f625939462e61998836570363be8", "committedDate": "2020-02-04T15:04:06Z", "message": "add unit tests\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "a944110fabf8ce2f308004e1643dd861322eb2ea", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/a944110fabf8ce2f308004e1643dd861322eb2ea", "committedDate": "2020-02-04T15:06:18Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a944110fabf8ce2f308004e1643dd861322eb2ea", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/a944110fabf8ce2f308004e1643dd861322eb2ea", "committedDate": "2020-02-04T15:06:18Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/f6a4f182da030c3f02dfc8a9e9dd6697846e55b9", "committedDate": "2020-02-10T14:28:31Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NTgxMzQw", "url": "https://github.com/eclipse/hono/pull/1711#pullrequestreview-356581340", "createdAt": "2020-02-11T11:24:52Z", "commit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMToyNDo1M1rOFoFdOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMTozMDoxMFrOFoFnGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3Njc2MQ==", "bodyText": "Can we keep formatting consistent. There are a couple of places where there's no space after bracket and at some places there's a space in negation statement. We can also consider adding it to the check style.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377576761", "createdAt": "2020-02-11T11:24:53Z", "author": {"login": "dejanb"}, "path": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/PasswordSecret.java", "diffHunk": "@@ -112,6 +112,9 @@ protected ToStringHelper toStringHelper() {\n     @Override\n     public void checkValidity() {\n         super.checkValidity();\n+        if (containsOnlySecretId()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3Njg3OQ==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377576879", "createdAt": "2020-02-11T11:25:11Z", "author": {"login": "dejanb"}, "path": "service-base/src/main/java/org/eclipse/hono/service/management/credentials/PasswordSecret.java", "diffHunk": "@@ -123,6 +126,18 @@ public void checkValidity() {\n         }\n     }\n \n+    /**\n+     * Asserts if the secret do not contain secret details and only an id.\n+     *\n+     * @return        true if an ID is present and no new secret detail is set.\n+     */\n+    public boolean containsOnlySecretId(){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NzA0NA==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377577044", "createdAt": "2020-02-11T11:25:31Z", "author": {"login": "dejanb"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -479,17 +480,19 @@ public void set(final String tenantId, final String deviceId, final Optional<Str\n         final var newVersion = UUID.randomUUID().toString();\n         setResourceVersion(tenantId, deviceId, newVersion);\n \n-        // clean out all existing credentials for this device\n-        try {\n-            removeAllForDevice(tenantId, deviceId, span);\n-        } catch (final ClientErrorException e) {\n-            TracingHelper.logError(span, e);\n-            return OperationResult.empty(e.getErrorCode());\n-        }\n \n         // authId->credentials[]\n         final Map<String, JsonArray> credentialsForTenant = createOrGetCredentialsForTenant(tenantId);\n \n+        if (! credentialsForTenant.isEmpty()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NzE1Ng==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377577156", "createdAt": "2020-02-11T11:25:43Z", "author": {"login": "dejanb"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -479,17 +480,19 @@ public void set(final String tenantId, final String deviceId, final Optional<Str\n         final var newVersion = UUID.randomUUID().toString();\n         setResourceVersion(tenantId, deviceId, newVersion);\n \n-        // clean out all existing credentials for this device\n-        try {\n-            removeAllForDevice(tenantId, deviceId, span);\n-        } catch (final ClientErrorException e) {\n-            TracingHelper.logError(span, e);\n-            return OperationResult.empty(e.getErrorCode());\n-        }\n \n         // authId->credentials[]\n         final Map<String, JsonArray> credentialsForTenant = createOrGetCredentialsForTenant(tenantId);\n \n+        if (! credentialsForTenant.isEmpty()){\n+            try {\n+                verifyOverwriteEnabled(span);\n+            } catch (ClientErrorException e){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NzQyMg==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377577422", "createdAt": "2020-02-11T11:26:17Z", "author": {"login": "dejanb"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -804,4 +856,41 @@ public String toString() {\n     protected int getMaxBcryptIterations() {\n         return getConfig().getMaxBcryptIterations();\n     }\n+\n+    /**\n+     * Strips the hashed-password details from the jsonObject if needed.\n+     */\n+    private static void removePasswordDetailsFromCredential(final JsonObject credential){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 196}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NzUyMw==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377577523", "createdAt": "2020-02-11T11:26:31Z", "author": {"login": "dejanb"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -804,4 +856,41 @@ public String toString() {\n     protected int getMaxBcryptIterations() {\n         return getConfig().getMaxBcryptIterations();\n     }\n+\n+    /**\n+     * Strips the hashed-password details from the jsonObject if needed.\n+     */\n+    private static void removePasswordDetailsFromCredential(final JsonObject credential){\n+        if (credential.getString(CredentialsConstants.FIELD_TYPE).equals(CredentialsConstants.SECRETS_TYPE_HASHED_PASSWORD)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 197}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NzYwNw==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377577607", "createdAt": "2020-02-11T11:26:40Z", "author": {"login": "dejanb"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -804,4 +856,41 @@ public String toString() {\n     protected int getMaxBcryptIterations() {\n         return getConfig().getMaxBcryptIterations();\n     }\n+\n+    /**\n+     * Strips the hashed-password details from the jsonObject if needed.\n+     */\n+    private static void removePasswordDetailsFromCredential(final JsonObject credential){\n+        if (credential.getString(CredentialsConstants.FIELD_TYPE).equals(CredentialsConstants.SECRETS_TYPE_HASHED_PASSWORD)){\n+\n+            credential.getJsonArray(CredentialsConstants.FIELD_SECRETS).forEach(secret ->\n+                    removePasswordDetailsFromSecret((JsonObject) secret));\n+        }\n+    }\n+\n+    private static void removePasswordDetailsFromSecret(final JsonObject secret){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NzY3Ng==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377577676", "createdAt": "2020-02-11T11:26:48Z", "author": {"login": "dejanb"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -804,4 +856,41 @@ public String toString() {\n     protected int getMaxBcryptIterations() {\n         return getConfig().getMaxBcryptIterations();\n     }\n+\n+    /**\n+     * Strips the hashed-password details from the jsonObject if needed.\n+     */\n+    private static void removePasswordDetailsFromCredential(final JsonObject credential){\n+        if (credential.getString(CredentialsConstants.FIELD_TYPE).equals(CredentialsConstants.SECRETS_TYPE_HASHED_PASSWORD)){\n+\n+            credential.getJsonArray(CredentialsConstants.FIELD_SECRETS).forEach(secret ->\n+                    removePasswordDetailsFromSecret((JsonObject) secret));\n+        }\n+    }\n+\n+    private static void removePasswordDetailsFromSecret(final JsonObject secret){\n+\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_HASH_FUNCTION);\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_PWD_HASH);\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_SALT);\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_PWD_PLAIN);\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_KEY);\n+    }\n+\n+    private static void copySecretFields(final JsonObject in, final JsonObject out){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 213}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3Nzc0Ng==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377577746", "createdAt": "2020-02-11T11:26:56Z", "author": {"login": "dejanb"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -804,4 +856,41 @@ public String toString() {\n     protected int getMaxBcryptIterations() {\n         return getConfig().getMaxBcryptIterations();\n     }\n+\n+    /**\n+     * Strips the hashed-password details from the jsonObject if needed.\n+     */\n+    private static void removePasswordDetailsFromCredential(final JsonObject credential){\n+        if (credential.getString(CredentialsConstants.FIELD_TYPE).equals(CredentialsConstants.SECRETS_TYPE_HASHED_PASSWORD)){\n+\n+            credential.getJsonArray(CredentialsConstants.FIELD_SECRETS).forEach(secret ->\n+                    removePasswordDetailsFromSecret((JsonObject) secret));\n+        }\n+    }\n+\n+    private static void removePasswordDetailsFromSecret(final JsonObject secret){\n+\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_HASH_FUNCTION);\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_PWD_HASH);\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_SALT);\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_PWD_PLAIN);\n+        secret.remove(CredentialsConstants.FIELD_SECRETS_KEY);\n+    }\n+\n+    private static void copySecretFields(final JsonObject in, final JsonObject out){\n+\n+        out.put(CredentialsConstants.FIELD_SECRETS_HASH_FUNCTION, in.getString(CredentialsConstants.FIELD_SECRETS_HASH_FUNCTION));\n+        out.put(CredentialsConstants.FIELD_SECRETS_PWD_HASH, in.getString(CredentialsConstants.FIELD_SECRETS_PWD_HASH));\n+        out.put(CredentialsConstants.FIELD_SECRETS_SALT, in.getString(CredentialsConstants.FIELD_SECRETS_SALT));\n+        out.put(CredentialsConstants.FIELD_SECRETS_PWD_PLAIN, in.getString(CredentialsConstants.FIELD_SECRETS_PWD_PLAIN));\n+    }\n+\n+    private void verifyOverwriteEnabled(final Span span) {\n+\n+        // check if we may overwrite\n+        if (! config.isModificationEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 224}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3NzkyOQ==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377577929", "createdAt": "2020-02-11T11:27:17Z", "author": {"login": "dejanb"}, "path": "tests/src/test/java/org/eclipse/hono/tests/registry/CredentialsHttpIT.java", "diffHunk": "@@ -566,4 +593,20 @@ private static PskCredential newPskCredentials(final String authId) {\n     private JsonObject extractFirstCredential(final JsonObject json) {\n         return json.getJsonArray(CredentialsConstants.CREDENTIALS_ENDPOINT).getJsonObject(0);\n     }\n+\n+    private static JsonObject stripHashAndSaltFromPasswordSecret(final JsonObject credential){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3ODA0MA==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377578040", "createdAt": "2020-02-11T11:27:33Z", "author": {"login": "dejanb"}, "path": "tests/src/test/java/org/eclipse/hono/tests/registry/CredentialsHttpIT.java", "diffHunk": "@@ -541,8 +543,33 @@ public void testGetAddedCredentialsButWithWrongAuthId(final VertxTestContext con\n     private static void assertResponseBodyContainsAllCredentials(final VertxTestContext context, final JsonArray responseBody,\n             final List<CommonCredential> expected) {\n \n+        assertThat(expected.size()).isEqualTo(responseBody.size());\n+\n+        responseBody.forEach(credential -> {\n+            JsonObject.mapFrom(credential).getJsonArray(CredentialsConstants.FIELD_SECRETS)\n+                    .forEach(secret -> {\n+                        // each secret should contain an ID.\n+                        assertThat(JsonObject.mapFrom(secret)\n+                                .getString(RegistryManagementConstants.FIELD_ID)).isNotNull();\n+                    });\n+        });\n+\n+        // secrets id were added by registry, strip it so we can compare other fields.\n+        responseBody.forEach(credential ->{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3ODI1Mw==", "bodyText": "Inconsistent formatting.", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377578253", "createdAt": "2020-02-11T11:28:02Z", "author": {"login": "dejanb"}, "path": "services/device-registry/src/main/java/org/eclipse/hono/deviceregistry/FileBasedCredentialsService.java", "diffHunk": "@@ -529,16 +532,68 @@ public void set(final String tenantId, final String deviceId, final Optional<Str\n                 return OperationResult.empty(HttpURLConnection.HTTP_CONFLICT);\n             }\n \n-            // start updating\n-            dirty = true;\n-\n-            var secretsJson = credentialsJson.getJsonArray(CredentialsConstants.FIELD_SECRETS);\n+            JsonArray secretsJson = credentialsJson.getJsonArray(CredentialsConstants.FIELD_SECRETS);\n             if (secretsJson == null) {\n                 // secrets field was missing, assign\n                 secretsJson = new JsonArray();\n-                credentialsJson.put(CredentialsConstants.FIELD_SECRETS, secretsJson);\n             }\n-            secretsJson.addAll(credentialObject.getJsonArray(CredentialsConstants.FIELD_SECRETS));\n+\n+            final JsonArray inputSecrets = credentialObject.getJsonArray(CredentialsConstants.FIELD_SECRETS);\n+            final JsonArray definitiveInputSecret = new JsonArray();\n+            for (Object inputSecret : inputSecrets) {\n+                final JsonObject secret = (JsonObject) inputSecret;\n+                final String secretId = secret.getString(RegistryManagementConstants.FIELD_ID);\n+\n+                // No secret ID specified : create a new secret\n+                if (Strings.isNullOrEmpty(secretId)) {\n+                    secret.put(RegistryManagementConstants.FIELD_ID, UUID.randomUUID().toString());\n+                    definitiveInputSecret.add(secret);\n+                // secret ID specified\n+                } else {\n+                    // Find the corresponding secret with the given ID.\n+                    boolean found = false;\n+                    for (Object st : secretsJson) {\n+                        final JsonObject existingSecret = (JsonObject) st;\n+                        if (secretId.equals(existingSecret.getString(RegistryManagementConstants.FIELD_ID))) {\n+                            found = true;\n+                            final JsonObject newSecret = new JsonObject();\n+                            copySecretFields(secret, newSecret);\n+\n+                            // update the secret : remove the old values.\n+                            if (secret.containsKey(CredentialsConstants.FIELD_SECRETS_PWD_PLAIN)\n+                                    || secret.containsKey(CredentialsConstants.FIELD_SECRETS_KEY)\n+                                    || secret.containsKey(CredentialsConstants.FIELD_SECRETS_PWD_HASH)\n+                                    || secret.containsKey(CredentialsConstants.FIELD_SECRETS_SALT)) {\n+\n+                                removePasswordDetailsFromSecret(newSecret);\n+                            }\n+                            // then copy the new details.\n+                            for (String field : secret.fieldNames()) {\n+                                newSecret.put(field, secret.getValue(field));\n+                            }\n+                            definitiveInputSecret.add(newSecret);\n+                        }\n+                    }\n+\n+                    // check if the secretID given was found\n+                    if (! found) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3OTI4OA==", "bodyText": "This should probably go as 1.2.0 release API changes?", "url": "https://github.com/eclipse/hono/pull/1711#discussion_r377579288", "createdAt": "2020-02-11T11:30:10Z", "author": {"login": "dejanb"}, "path": "site/homepage/content/release-notes.md", "diffHunk": "@@ -58,6 +58,12 @@ title = \"Release Notes\"\n \n ## 1.0.3\n \n+### API Changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6a4f182da030c3f02dfc8a9e9dd6697846e55b9", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/f6a4f182da030c3f02dfc8a9e9dd6697846e55b9", "committedDate": "2020-02-10T14:28:31Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "4ec32a2a2bb5078efeb42655de55adc4cd7226b8", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/4ec32a2a2bb5078efeb42655de55adc4cd7226b8", "committedDate": "2020-02-11T12:08:30Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86f332bbf252eb65abfcc6797a08c56f8e48272b", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/86f332bbf252eb65abfcc6797a08c56f8e48272b", "committedDate": "2020-02-11T14:00:44Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ec32a2a2bb5078efeb42655de55adc4cd7226b8", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/4ec32a2a2bb5078efeb42655de55adc4cd7226b8", "committedDate": "2020-02-11T12:08:30Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}, "afterCommit": {"oid": "86f332bbf252eb65abfcc6797a08c56f8e48272b", "author": {"user": {"login": "jbtrystram", "name": "Jean-Baptiste Trystram"}}, "url": "https://github.com/eclipse/hono/commit/86f332bbf252eb65abfcc6797a08c56f8e48272b", "committedDate": "2020-02-11T14:00:44Z", "message": "[#1710] stop registry to return hashed-passwords details but only returns metadata. Add a secret ID to secrets\n\nSigned-off-by: Jean-Baptiste Trystram <jbtrystram@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NzMwNzM0", "url": "https://github.com/eclipse/hono/pull/1711#pullrequestreview-356730734", "createdAt": "2020-02-11T15:04:46Z", "commit": {"oid": "86f332bbf252eb65abfcc6797a08c56f8e48272b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 928, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}