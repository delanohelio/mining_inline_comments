{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2OTIyMTYx", "number": 2142, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDoxMjo1OVrOEe1kxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDoyNzoyMlrOEe14PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzcwNTAyOnYy", "diffSide": "LEFT", "path": "tests/src/test/java/org/eclipse/hono/tests/DeviceRegistryHttpClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDoxMjo1OVrOHKvtOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDoxMjo1OVrOHKvtOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAyOTQzMw==", "bodyText": "The removal of the with a {@link org.eclipse.hono.client.ServiceInvocationException} part is not consistent in this class yet - it's still in there for several methods.", "url": "https://github.com/eclipse/hono/pull/2142#discussion_r481029433", "createdAt": "2020-09-01T10:12:59Z", "author": {"login": "calohmn"}, "path": "tests/src/test/java/org/eclipse/hono/tests/DeviceRegistryHttpClient.java", "diffHunk": "@@ -272,14 +277,13 @@ private static String registrationWithoutIdUri(final String tenant) {\n      *\n      * @param tenantId The tenant to get information for.\n      * @param expectedStatusCode The status code indicating a successful outcome.\n-     * @return A future indicating the outcome of the operation. The future will contain the response payload if the\n-     *         response contained the expected status code. Otherwise the future will fail with a\n-     *         {@link org.eclipse.hono.client.ServiceInvocationException}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2579a2e162d6ca290d3d78697b3a1ecb744e0ad0"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzc1NDg1OnYy", "diffSide": "RIGHT", "path": "tests/src/test/java/org/eclipse/hono/tests/CrudHttpClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDoyNzoyMlrOHKwLBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDoyNzoyMlrOHKwLBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzNzA2MA==", "bodyText": "No NPE actually thrown if contentType is null.", "url": "https://github.com/eclipse/hono/pull/2142#discussion_r481037060", "createdAt": "2020-09-01T10:27:22Z", "author": {"login": "calohmn"}, "path": "tests/src/test/java/org/eclipse/hono/tests/CrudHttpClient.java", "diffHunk": "@@ -171,19 +166,24 @@ public CrudHttpClient(final Vertx vertx, final HttpClientOptions options) {\n      * @param uri The URI to post to.\n      * @param body The body to post (may be {@code null}).\n      * @param contentType The content type to set in the request (may be {@code null}).\n-     * @param successPredicate A predicate on the HTTP response for determining success.\n-     * @param checkCorsHeaders Whether to set and check CORS headers.\n-     * @return A future that will succeed if the predicate evaluates to {@code true}.\n-     * @throws NullPointerException if URI, content type or predicate are {@code null}.\n+     * @param successPredicates Checks on the HTTP response that need to pass for the request\n+     *                          to be considered successful.\n+     * @return A future indicating the outcome of the request. The future will be completed with the\n+     *         HTTP response if all checks on the response have succeeded.\n+     *         Otherwise the future will be failed with the error produced by the first failing\n+     *         predicate.\n+     * @throws NullPointerException if URI or content type are {@code null}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2579a2e162d6ca290d3d78697b3a1ecb744e0ad0"}, "originalPosition": 174}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3010, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}