{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0OTE2MTI0", "number": 1818, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowMTo1MlrODmPajQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjowNzozNFrODmpsOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI1MDM3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowMTo1MlrOFziwNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjo1NDoyNFrOF0DKRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5MTA5NA==", "bodyText": "I do not quite understand what\n\nhas not been updated due to there being no such mapping entry\n\nmeans. The next paragraph describes that a 412 could be returned if the device_id is currently not mapped to the adapter_instance_id from the request. Is this the same case?", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r389591094", "createdAt": "2020-03-09T11:01:52Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEyMjA1Mg==", "bodyText": "Yes, I have rephrased the sentence above.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390122052", "createdAt": "2020-03-10T06:54:24Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5MTA5NA=="}, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI1ODk4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowNTowMFrOFzi1YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowNTowMFrOFzi1YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5MjQxNg==", "bodyText": "IMHO we should omit\n\n, possibly using one of the given gateways.\n\nhere because it is unclear where the given gateways come from and it is not important to mention them here in order for the reader to understand the purpose of this operation.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r389592416", "createdAt": "2020-03-09T11:05:00Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI2MTA3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowNTo1MFrOFzi2mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowNTo1MFrOFzi2mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5MjcyOQ==", "bodyText": "As part of the request message ...?\nIMHO a hint would be useful as to where the client might get the list of gateways that may act on behalf of the given device ...", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r389592729", "createdAt": "2020-03-09T11:05:50Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI2MjgyOnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowNjoyMlrOFzi3rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMTowNjoyMlrOFzi3rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5MzAwNQ==", "bodyText": "maybe use numbering if order is important?", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r389593005", "createdAt": "2020-03-09T11:06:22Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+- If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI3OTk3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMToxMjozOFrOFzjCZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNjoyMDo1OFrOF0CqYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5NTc0OA==", "bodyText": "FMPOV we should put a JSON array containing the ids into the body of the request message ...\nOtherwise, the location needs to be application-properties ...", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r389595748", "createdAt": "2020-03-09T11:12:38Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+- If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+- Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+- Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *properties*             | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDExMzg5MA==", "bodyText": "Otherwise, the location needs to be application-properties ...\n\nRight, that was a copy/paste error here.\nRegarding using the request message instead: I had this in my initial commit here, but I think putting the operation parameters in the (application-) properties of the request message is more commonly used in our APIs.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390113890", "createdAt": "2020-03-10T06:20:58Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+- If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+- Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+- Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *properties*             | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5NTc0OA=="}, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI4Njg5OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMToxNTowOFrOFzjGrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMToxNTowOFrOFzjGrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5Njg0NQ==", "bodyText": "Based on the examples given below, this doesn't seem to necessarily be the device_id that has been passed in with the request message. A hint would be nice that this is indeed the case and why the client would actually care about this ID.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r389596845", "createdAt": "2020-03-09T11:15:08Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+- If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+- Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+- Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *properties*             | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |\n+\n+Each entry in the *adapter-instances* array has the following properties:\n+\n+| Name                  | Mandatory | JSON Type     | Description |\n+| :-------------------- | :-------: | :------------ | :---------- |\n+| *adapter-instance-id* | *yes*     | *string*      | The ID of the protocol adapter instance handling command & control messages for the device given in the *device-id* property. |\n+| *device-id*           | *yes*     | *string*      | The ID of the gateway or device that the protocol adapter instance given by the *adapter-instance-id* is handling command & control messages for. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI5NTc1OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMToxODoyOFrOFzjMNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMToxODoyOFrOFzjMNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5ODI2Mg==", "bodyText": "it contains the adapter instances ...", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r389598262", "createdAt": "2020-03-09T11:18:28Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+- If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+- Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+- Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *properties*             | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |\n+\n+Each entry in the *adapter-instances* array has the following properties:\n+\n+| Name                  | Mandatory | JSON Type     | Description |\n+| :-------------------- | :-------: | :------------ | :---------- |\n+| *adapter-instance-id* | *yes*     | *string*      | The ID of the protocol adapter instance handling command & control messages for the device given in the *device-id* property. |\n+| *device-id*           | *yes*     | *string*      | The ID of the gateway or device that the protocol adapter instance given by the *adapter-instance-id* is handling command & control messages for. |\n+\n+\n+An example of a response message with a single adapter instance result, returned for example if an adapter instance is registered for the given device:\n+\n+~~~json\n+{\n+  \"adapter-instances\": [\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"4711\"\n+    }\n+  ]\n+}\n+~~~\n+\n+An example of a response message with multiple contained adapter instances, returned for example if no adapter instance is registered for the given device or its last used gateway, and therefore a list of all adapter instances for the gateways of the device is returned:\n+\n+~~~json\n+{\n+  \"adapter-instances\": [\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"gw-1\"\n+    },\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"gw-2\"\n+    }\n+  ]\n+}\n+~~~\n+\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code | Description |\n+| :--- | :---------- |\n+| *200* | OK, the payload contains the gateway ID. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNDI5ODA5OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxMToxOToxMlrOFzjNkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOToyODoxN1rOF0HDQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5ODYxMA==", "bodyText": "the table above seems to indicate that this check is actually mandatory for an implementation to perform ...", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r389598610", "createdAt": "2020-03-09T11:19:12Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+- If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+- Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+- Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *properties*             | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |\n+\n+Each entry in the *adapter-instances* array has the following properties:\n+\n+| Name                  | Mandatory | JSON Type     | Description |\n+| :-------------------- | :-------: | :------------ | :---------- |\n+| *adapter-instance-id* | *yes*     | *string*      | The ID of the protocol adapter instance handling command & control messages for the device given in the *device-id* property. |\n+| *device-id*           | *yes*     | *string*      | The ID of the gateway or device that the protocol adapter instance given by the *adapter-instance-id* is handling command & control messages for. |\n+\n+\n+An example of a response message with a single adapter instance result, returned for example if an adapter instance is registered for the given device:\n+\n+~~~json\n+{\n+  \"adapter-instances\": [\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"4711\"\n+    }\n+  ]\n+}\n+~~~\n+\n+An example of a response message with multiple contained adapter instances, returned for example if no adapter instance is registered for the given device or its last used gateway, and therefore a list of all adapter instances for the gateways of the device is returned:\n+\n+~~~json\n+{\n+  \"adapter-instances\": [\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"gw-1\"\n+    },\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"gw-2\"\n+    }\n+  ]\n+}\n+~~~\n+\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code | Description |\n+| :--- | :---------- |\n+| *200* | OK, the payload contains the gateway ID. |\n+| *400* | Bad Request, the request message does not contain all required information/properties. |\n+| *404* | Not Found, there is no command-handling adapter instance assigned to the device. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDEyNjQ1MQ==", "bodyText": "The check mentioned in the table is a different one, actually.\nThe entry in the table makes it mandatory to return a 404 if not command-handling instance is found.\nThe extra hint below states that the implementation may first check if the given tenant actually has the given device. That would make for a more insightful error message if there was the wrong device id being used. However, this is probably a somewhat theoretical case since a client would usually invoke the \"assert device registration\" method shortly before and would get that error there already.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390126451", "createdAt": "2020-03-10T07:10:31Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+- If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+- Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+- Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *properties*             | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |\n+\n+Each entry in the *adapter-instances* array has the following properties:\n+\n+| Name                  | Mandatory | JSON Type     | Description |\n+| :-------------------- | :-------: | :------------ | :---------- |\n+| *adapter-instance-id* | *yes*     | *string*      | The ID of the protocol adapter instance handling command & control messages for the device given in the *device-id* property. |\n+| *device-id*           | *yes*     | *string*      | The ID of the gateway or device that the protocol adapter instance given by the *adapter-instance-id* is handling command & control messages for. |\n+\n+\n+An example of a response message with a single adapter instance result, returned for example if an adapter instance is registered for the given device:\n+\n+~~~json\n+{\n+  \"adapter-instances\": [\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"4711\"\n+    }\n+  ]\n+}\n+~~~\n+\n+An example of a response message with multiple contained adapter instances, returned for example if no adapter instance is registered for the given device or its last used gateway, and therefore a list of all adapter instances for the gateways of the device is returned:\n+\n+~~~json\n+{\n+  \"adapter-instances\": [\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"gw-1\"\n+    },\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"gw-2\"\n+    }\n+  ]\n+}\n+~~~\n+\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code | Description |\n+| :--- | :---------- |\n+| *200* | OK, the payload contains the gateway ID. |\n+| *400* | Bad Request, the request message does not contain all required information/properties. |\n+| *404* | Not Found, there is no command-handling adapter instance assigned to the device. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5ODYxMA=="}, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NTc5NA==", "bodyText": "I see, then what about starting like\n\nImplementors of this API may also return a 404 status ...", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390185794", "createdAt": "2020-03-10T09:28:17Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,176 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to there being no such mapping entry or due to missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device, possibly using one of the given gateways.\n+\n+As part of this request, the client is supposed to provide the list of gateways that may act on behalf of the given device. This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+- If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+- Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+- Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *properties*             | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |\n+\n+Each entry in the *adapter-instances* array has the following properties:\n+\n+| Name                  | Mandatory | JSON Type     | Description |\n+| :-------------------- | :-------: | :------------ | :---------- |\n+| *adapter-instance-id* | *yes*     | *string*      | The ID of the protocol adapter instance handling command & control messages for the device given in the *device-id* property. |\n+| *device-id*           | *yes*     | *string*      | The ID of the gateway or device that the protocol adapter instance given by the *adapter-instance-id* is handling command & control messages for. |\n+\n+\n+An example of a response message with a single adapter instance result, returned for example if an adapter instance is registered for the given device:\n+\n+~~~json\n+{\n+  \"adapter-instances\": [\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"4711\"\n+    }\n+  ]\n+}\n+~~~\n+\n+An example of a response message with multiple contained adapter instances, returned for example if no adapter instance is registered for the given device or its last used gateway, and therefore a list of all adapter instances for the gateways of the device is returned:\n+\n+~~~json\n+{\n+  \"adapter-instances\": [\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"gw-1\"\n+    },\n+    {\n+      \"adapter-instance-id\": \"adapter-1\",\n+      \"device-id\": \"gw-2\"\n+    }\n+  ]\n+}\n+~~~\n+\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code | Description |\n+| :--- | :---------- |\n+| *200* | OK, the payload contains the gateway ID. |\n+| *400* | Bad Request, the request message does not contain all required information/properties. |\n+| *404* | Not Found, there is no command-handling adapter instance assigned to the device. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU5ODYxMA=="}, "originalCommit": {"oid": "5594d7472b9302b4dc80fc08e71287af3b7ae9ba"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNzk5MjI2OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOToxNzoyMVrOF0GqQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOToxNzoyMVrOF0GqQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE3OTM5Mw==", "bodyText": "adapter adapter", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390179393", "createdAt": "2020-03-10T09:17:21Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODAwMjM4OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOToyMDoyMFrOF0GwpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMToxMjowMFrOF0Kg4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4MTAyOA==", "bodyText": "or because there is no mapping associating the given tenant and device with the given adapter instance\n\nIsn't this exactly the cause that would lead to a 412 being returned as described in the next paragraph?", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390181028", "createdAt": "2020-03-10T09:20:20Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to missing data in the request or because there is no mapping associating the given tenant and device with the given adapter instance. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI0MjUzMA==", "bodyText": "Yes, I'll rephrase that, putting 404 in the table and adding a hint below that an implementor may also return 412 in the above case instead of 404.\nI don't want to make that distinction mandatory, because in an implementation, underlying method calls like Map.remove(key, value) may not provide that information.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390242530", "createdAt": "2020-03-10T11:12:00Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to missing data in the request or because there is no mapping associating the given tenant and device with the given adapter instance. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4MTAyOA=="}, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODAxNDM0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOToyMzoyN1rOF0G34g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDo1MzoyOVrOF0J8Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4Mjg4Mg==", "bodyText": "I still believe that we should rather put complex context into the body instead ...\nWe do this in other cases as well, e.g. https://www.eclipse.org/hono/docs/api/credentials/#get-credentials", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390182882", "createdAt": "2020-03-10T09:23:27Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to missing data in the request or because there is no mapping associating the given tenant and device with the given adapter instance. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device.\n+\n+As part of the request message, the client is supposed to provide the list of gateways that may act on behalf of the given device. The client may get this list via the Device Registration API's [*assert Device Registration*]({{< relref \"/api/device-registration#assert-device-registration\" >}}) operation.\n+\n+This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+1. If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+1. Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+1. Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *application-properties* | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIzMzEzMA==", "bodyText": "Well, I don't have a strong opinion here, I can change it back to using the request body. That way there are no specially encoded values in the application-properties.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390233130", "createdAt": "2020-03-10T10:53:29Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to missing data in the request or because there is no mapping associating the given tenant and device with the given adapter instance. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device.\n+\n+As part of the request message, the client is supposed to provide the list of gateways that may act on behalf of the given device. The client may get this list via the Device Registration API's [*assert Device Registration*]({{< relref \"/api/device-registration#assert-device-registration\" >}}) operation.\n+\n+This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+1. If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+1. Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+1. Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *application-properties* | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4Mjg4Mg=="}, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODAyMjU3OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOToyNTozN1rOF0G9BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMToxNDoxOFrOF0Kk_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NDE5Nw==", "bodyText": "wouldn't it be sufficient to just put an array into the response body, i.e. omit the adapter-instances property?", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390184197", "createdAt": "2020-03-10T09:25:37Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to missing data in the request or because there is no mapping associating the given tenant and device with the given adapter instance. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device.\n+\n+As part of the request message, the client is supposed to provide the list of gateways that may act on behalf of the given device. The client may get this list via the Device Registration API's [*assert Device Registration*]({{< relref \"/api/device-registration#assert-device-registration\" >}}) operation.\n+\n+This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+1. If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+1. Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+1. Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *application-properties* | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNzI1Ng==", "bodyText": "From a purely API standpoint, yes.\nIntroducing an JsonArray result would mean that there are different result types for the Device Connection API operations. From an implementation perspective, this means there cannot be just one DeviceConnectionResult object used for all methods (extending RequestResponseResult<JsonObject>), but there would have to be another DeviceConnectionArrayResult (extending RequestResponseResult<JsonArray>).\nBut, thinking more about it, it is indeed a bit of a crutch, this extra \"adapter-instances\" field and there probably won't be any other fields, getting added on the same level (like some last-updated field for example; wouldn't make sense there).\nSo, yes, I can change it.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390207256", "createdAt": "2020-03-10T10:05:18Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to missing data in the request or because there is no mapping associating the given tenant and device with the given adapter instance. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device.\n+\n+As part of the request message, the client is supposed to provide the list of gateways that may act on behalf of the given device. The client may get this list via the Device Registration API's [*assert Device Registration*]({{< relref \"/api/device-registration#assert-device-registration\" >}}) operation.\n+\n+This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+1. If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+1. Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+1. Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *application-properties* | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NDE5Nw=="}, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyOTI2Mg==", "bodyText": "I was just wondering. One good reason to keep the JSON obect based result would indeed be to keep it extensible. Maybe we want to add additional properties sometime later? I do see the drawback of having to create another result class so I'll leave it up to you whether you want to change it or not :-)", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390229262", "createdAt": "2020-03-10T10:46:03Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to missing data in the request or because there is no mapping associating the given tenant and device with the given adapter instance. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device.\n+\n+As part of the request message, the client is supposed to provide the list of gateways that may act on behalf of the given device. The client may get this list via the Device Registration API's [*assert Device Registration*]({{< relref \"/api/device-registration#assert-device-registration\" >}}) operation.\n+\n+This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+1. If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+1. Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+1. Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *application-properties* | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NDE5Nw=="}, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI0MzU4Mw==", "bodyText": "Ok, extensibility and a common DeviceConnectionResult - I'll keep it as a JSON object.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390243583", "createdAt": "2020-03-10T11:14:18Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,178 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance mapping information for the device has been removed. |\n+| *400* | Bad Request, the command-handling adapter adapter instance information has not been updated due to missing data in the request or because there is no mapping associating the given tenant and device with the given adapter instance. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant or that no adapter instance is associated with the device. Furthermore, in case the currently mapped adapter instance doesn't match the given adapter instance id, a *412* status code may be returned. However, performing any of these checks is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Get command-handling protocol adapter instances for device\n+\n+Clients use this command to *get* information about the adapter instances that can handle command & control messages for the given device.\n+\n+As part of the request message, the client is supposed to provide the list of gateways that may act on behalf of the given device. The client may get this list via the Device Registration API's [*assert Device Registration*]({{< relref \"/api/device-registration#assert-device-registration\" >}}) operation.\n+\n+This API doesn't mandate checks on the validity of the given device and the gateway list in order not to introduce a dependency on the *Device Registration API*.\n+\n+The command implementation MUST determine the adapter instances by applying the following rules (in the given order):\n+1. If an adapter instance is associated with the given device, this adapter instance is returned as the *single* returned list entry.\n+1. Otherwise, if there is an adapter instance registered for the last known gateway associated with the given device, this adapter instance is returned as the *single* returned list entry. The last known gateway has to be contained in the given list of gateways for this case.\n+1. Otherwise, *all* adapter instances associated with any of the given gateway identifiers are returned.\n+\n+That means that for a device communicating via a gateway, the result is reduced to a *single element* list if an adapter instance for the device itself or its last known gateway is found. The adapter instance registered for the device itself is given precedence in order to ensure that a gateway having subscribed to commands for that *particular device* is chosen over a gateway that has subscribed to commands for *all* devices of a tenant.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"get_cmd_handling_adapter_instances.svg\" title=\"Client retrieving the list of command-handling adapter instances for a device\" alt=\"A client sends a request message for retrieving the list of command-handling adapter instances for a device and receives a response containing the information\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to retrieve the command-handling adapter instances for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name           | Mandatory | Location                 | AMQP Type | Description |\n+| :------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*      | yes       | *properties*             | *string*  | MUST be set to `get-cmd-handling-adapter-instances`. |\n+| *gateway_ids*  | yes       | *application-properties* | *string*  | A JSON array containing the IDs of the gateways that may act on behalf of the given device. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *get command-handling adapter instances for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}) as well as the properties shown in the following table:\n+\n+| Name             | Mandatory | Location                 | AMQP Type    | Description |\n+| :--------------- | :-------: | :----------------------- | :----------- | :---------- |\n+| *content-type*   | no        | *properties*             | *string*     | MUST be set to `application/json` if the invocation of the operation was successful and the body of the response message contains payload as described below. |\n+\n+The result of a successful invocation is carried in a single Data section of the response message as a UTF-8 encoded string representation of a single JSON object. It is an error to include payload that is not of this type.\n+\n+The response message JSON object has the following properties:\n+\n+| Name                | Mandatory | JSON Type     | Description |\n+| :------------------ | :-------: | :------------ | :---------- |\n+| *adapter-instances* | *yes*     | *array*       | A non-empty array of JSON objects that represent the command-handling adapter instances along with the device or gateway id. |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NDE5Nw=="}, "originalCommit": {"oid": "d8251cf2d037a173a440c14b1739a67cfd6a7e3a"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODU1NTQ0OnYy", "diffSide": "RIGHT", "path": "site/documentation/content/api/device-connection/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjowNzozNFrOF0ME-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMjoyNzoxMlrOF0MqGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2ODE1Mw==", "bodyText": "response to a remove command-handling adapter ...", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390268153", "createdAt": "2020-03-10T12:07:34Z", "author": {"login": "sophokles73"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,192 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bedafbb876f6da295d70130feedd4d101fa0c9f"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI3NzY1OQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/hono/pull/1818#discussion_r390277659", "createdAt": "2020-03-10T12:27:12Z", "author": {"login": "calohmn"}, "path": "site/documentation/content/api/device-connection/index.md", "diffHunk": "@@ -107,6 +107,192 @@ Implementors of this API may return a *404* status code in order to indicate tha\n \n For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n \n+## Set command-handling protocol adapter instance for device\n+\n+Clients use this command to *set* the protocol adapter instance that currently handles command & control messages for a given device.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"set_cmd_handling_adapter_instance.svg\" title=\"Client sets the command-handling protocol adapter instance for device\" alt=\"A client sends a request message for setting the adapter instance and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to set the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `set-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance that currently handles commands for the device or gateway identified by the *device_id* property. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).\n+\n+The response message's *status* property may contain the following codes:\n+\n+| Code  | Description |\n+| :---- | :---------- |\n+| *204* | OK, the adapter instance for the device has been updated. |\n+| *400* | Bad Request, the command-handling adapter instance has not been updated due to invalid or missing data in the request. |\n+\n+Implementors of this API may return a *404* status code in order to indicate that no device with the given identifier exists for the given tenant. However, performing such a check is optional.\n+\n+For status codes indicating an error (codes in the `400 - 499` range) the message body MAY contain a detailed description of the error that occurred.\n+\n+## Remove command-handling protocol adapter instance for device\n+\n+Clients use this command to *remove* the information, which protocol adapter instance is currently handling command & control messages for the given device. The mapping information is only removed, if the currently associated adapter instance matches the one given in the request.\n+\n+This API doesn't mandate checks on the validity of the given device in order not to introduce a dependency on the *Device Registration API*. However, implementations of this API may choose to perform such checks or impose a restriction on the overall amount of data that can be stored per tenant in order to protect against malicious requests.\n+\n+**Message Flow**\n+\n+\n+{{< figure src=\"remove_cmd_handling_adapter_instance.svg\" title=\"Client removes the command-handling protocol adapter instance information for device\" alt=\"A client sends a request message for removing the adapter instance mapping and receives a response containing a confirmation\" >}}\n+\n+**Request Message Format**\n+\n+The following table provides an overview of the properties a client needs to set on a message to remove the mapping information regarding the command-handling protocol adapter instance for a device in addition to the [Standard Request Properties]({{< relref \"#standard-request-properties\" >}}).\n+\n+| Name                  | Mandatory | Location                 | AMQP Type | Description |\n+| :-------------------- | :-------: | :----------------------- | :-------- | :---------- |\n+| *subject*             | yes       | *properties*             | *string*  | MUST be set to `remove-cmd-handling-adapter-instance`. |\n+| *adapter_instance_id* | yes       | *application-properties* | *string*  | The identifier of the protocol adapter instance to remove the mapping information for. Only if this adapter instance is currently associated with the device or gateway identified by the *device_id* property, the mapping entry will be removed. |\n+\n+The body of the message SHOULD be empty and will be ignored if it is not.\n+\n+**Response Message Format**\n+\n+A response to a *set command-handling adapter instance for device* request contains the [Standard Response Properties]({{< relref \"#standard-response-properties\" >}}).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2ODE1Mw=="}, "originalCommit": {"oid": "4bedafbb876f6da295d70130feedd4d101fa0c9f"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3249, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}