{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NzYxMTEx", "number": 2365, "title": "[#2053] Adding integration tests for gateway-based auto provisioning.", "bodyText": "This PR adds integration tests for auto-provisioning.\nBefore merging this PR\n#2358\n#2360\n#2359\nneed to be merged, so that tests will run successfully", "createdAt": "2020-12-10T08:40:29Z", "url": "https://github.com/eclipse/hono/pull/2365", "merged": true, "mergeCommit": {"oid": "8da1aae0f65898a473960bed5c6daa364e074273"}, "closed": true, "closedAt": "2021-01-18T14:54:30Z", "author": {"login": "fkaltner"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdtMoWvABqjQxNzAzOTI5ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdxX84DAFqTU3MDU2MTEzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c89fa597c5c61ac03dd8681ec8ba89fe7dda912", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/3c89fa597c5c61ac03dd8681ec8ba89fe7dda912", "committedDate": "2020-12-04T13:44:39Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "2a3a4fe05e70b1cd5cdf503033abbdc1e4d8eb78", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/2a3a4fe05e70b1cd5cdf503033abbdc1e4d8eb78", "committedDate": "2021-01-05T15:26:31Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a3a4fe05e70b1cd5cdf503033abbdc1e4d8eb78", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/2a3a4fe05e70b1cd5cdf503033abbdc1e4d8eb78", "committedDate": "2021-01-05T15:26:31Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "4fcfb05598e694670ad3ca0ed06a0b27d0acb9c7", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/4fcfb05598e694670ad3ca0ed06a0b27d0acb9c7", "committedDate": "2021-01-08T14:02:36Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4fcfb05598e694670ad3ca0ed06a0b27d0acb9c7", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/4fcfb05598e694670ad3ca0ed06a0b27d0acb9c7", "committedDate": "2021-01-08T14:02:36Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "f07279d7ca221cf1b44e2ba5bd83079e18f0f11e", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/f07279d7ca221cf1b44e2ba5bd83079e18f0f11e", "committedDate": "2021-01-08T14:21:48Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f07279d7ca221cf1b44e2ba5bd83079e18f0f11e", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/f07279d7ca221cf1b44e2ba5bd83079e18f0f11e", "committedDate": "2021-01-08T14:21:48Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "eeb844d0ad5fa000b3adb41bb517d039379d711d", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/eeb844d0ad5fa000b3adb41bb517d039379d711d", "committedDate": "2021-01-08T14:40:04Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eeb844d0ad5fa000b3adb41bb517d039379d711d", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/eeb844d0ad5fa000b3adb41bb517d039379d711d", "committedDate": "2021-01-08T14:40:04Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "c87e31d2d310c2928a492754cf2d79bfb2aba90e", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/c87e31d2d310c2928a492754cf2d79bfb2aba90e", "committedDate": "2021-01-11T07:24:44Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c87e31d2d310c2928a492754cf2d79bfb2aba90e", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/c87e31d2d310c2928a492754cf2d79bfb2aba90e", "committedDate": "2021-01-11T07:24:44Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "8ee5ccdde1dd8a4e6b017dc95cb961f931174893", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/8ee5ccdde1dd8a4e6b017dc95cb961f931174893", "committedDate": "2021-01-12T11:27:37Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ee5ccdde1dd8a4e6b017dc95cb961f931174893", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/8ee5ccdde1dd8a4e6b017dc95cb961f931174893", "committedDate": "2021-01-12T11:27:37Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "d914e1c6ce29acb636dad0d07e970ae99e47c65b", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/d914e1c6ce29acb636dad0d07e970ae99e47c65b", "committedDate": "2021-01-14T16:12:59Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY4NDI0NDA2", "url": "https://github.com/eclipse/hono/pull/2365#pullrequestreview-568424406", "createdAt": "2021-01-14T16:47:14Z", "commit": {"oid": "d914e1c6ce29acb636dad0d07e970ae99e47c65b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNjo0NzoxNVrOITtgAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxNjo1NDoyOVrOITt0GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzUzOTMyOA==", "bodyText": "you should either consider the senderQoS being passed into the test method or do not run this as a parameterized test. FMPOV the latter would be ok.", "url": "https://github.com/eclipse/hono/pull/2365#discussion_r557539328", "createdAt": "2021-01-14T16:47:15Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/amqp/AmqpUploadTestBase.java", "diffHunk": "@@ -241,6 +244,76 @@ public void testAdapterClosesLinkOnMessageExceedingMaxPayloadSize(final VertxTes\n \n     }\n \n+    /**\n+     * Verifies that an edge device is auto-provisioned if it connects via a gateway equipped with the corresponding\n+     * authority.\n+     *\n+     * @param senderQos The delivery semantics to use for the device.\n+     * @throws InterruptedException if test is interrupted while running.\n+     */\n+    @ParameterizedTest(name = IntegrationTestSupport.PARAMETERIZED_TEST_NAME_PATTERN)\n+    @MethodSource(\"senderQoSTypes\")\n+    public void testAutoProvisioningViaGateway(final ProtonQoS senderQos) throws InterruptedException {\n+\n+        final String tenantId = helper.getRandomTenantId();\n+        final String gatewayId = helper.getRandomDeviceId(tenantId);\n+        final Device gateway = new Device()\n+                .setAuthorities(Collections.singleton(RegistryManagementConstants.AUTHORITY_AUTO_PROVISIONING_ENABLED));\n+\n+        final String username = IntegrationTestSupport.getUsername(gatewayId, tenantId);\n+        final VertxTestContext emptyEventReceived = new VertxTestContext();\n+        helper.applicationClientFactory.createEventConsumer(tenantId,\n+                msg -> emptyEventReceived.verify( () -> {\n+                    assertThat(msg.getContentType()).isEqualTo(EventConstants.CONTENT_TYPE_EMPTY_NOTIFICATION);\n+                    assertThat(MessageHelper.getRegistrationStatus(msg)).isEqualTo(EventConstants.RegistrationStatus.NEW.name());\n+                    emptyEventReceived.completeNow();\n+                }),\n+                close -> {});\n+\n+        final VertxTestContext telemetryReceived = new VertxTestContext();\n+        createConsumer(tenantId, msg -> {\n+            telemetryReceived.verify( () -> {\n+                assertThat(msg.getContentType()).isEqualTo(\"text/plain\");\n+                assertMessageProperties(telemetryReceived, msg);\n+            });\n+            telemetryReceived.completeNow();\n+        });\n+\n+        final VertxTestContext setup = new VertxTestContext();\n+        helper.registry\n+                .addDeviceForTenant(tenantId, new Tenant(), gatewayId, gateway, DEVICE_PASSWORD)\n+                .compose(ok -> connectToAdapter(username, DEVICE_PASSWORD))\n+                .compose(con -> createProducer(null, senderQos))\n+                .recover(t -> {\n+                    log.error(\"error setting up AMQP protocol adapter\", t);\n+                    return Future.failedFuture(t);\n+                })\n+                .onComplete(setup.succeeding(s -> {\n+                    sender = s;\n+                    setup.completeNow();\n+                }));\n+\n+        assertThat(setup.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        assertThat(setup.failed())\n+                .as(\"successfully connect to adapter\")\n+                .isFalse();\n+\n+        final VertxTestContext messageSent = new VertxTestContext();\n+        final Message msg = ProtonHelper.message(\"apFoobar\");\n+        msg.setContentType(\"text/plain\");\n+\n+        final String deviceId = helper.getRandomDeviceId(tenantId);\n+        msg.setAddress(String.format(\"%s/%s/%s\", getEndpointName(), tenantId, deviceId));\n+        sender.send(msg, delivery -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d914e1c6ce29acb636dad0d07e970ae99e47c65b"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzUzOTk1NQ==", "bodyText": "how about using a simple Checkpoint instead of coordinating three TestContexts?", "url": "https://github.com/eclipse/hono/pull/2365#discussion_r557539955", "createdAt": "2021-01-14T16:48:01Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/amqp/AmqpUploadTestBase.java", "diffHunk": "@@ -241,6 +244,76 @@ public void testAdapterClosesLinkOnMessageExceedingMaxPayloadSize(final VertxTes\n \n     }\n \n+    /**\n+     * Verifies that an edge device is auto-provisioned if it connects via a gateway equipped with the corresponding\n+     * authority.\n+     *\n+     * @param senderQos The delivery semantics to use for the device.\n+     * @throws InterruptedException if test is interrupted while running.\n+     */\n+    @ParameterizedTest(name = IntegrationTestSupport.PARAMETERIZED_TEST_NAME_PATTERN)\n+    @MethodSource(\"senderQoSTypes\")\n+    public void testAutoProvisioningViaGateway(final ProtonQoS senderQos) throws InterruptedException {\n+\n+        final String tenantId = helper.getRandomTenantId();\n+        final String gatewayId = helper.getRandomDeviceId(tenantId);\n+        final Device gateway = new Device()\n+                .setAuthorities(Collections.singleton(RegistryManagementConstants.AUTHORITY_AUTO_PROVISIONING_ENABLED));\n+\n+        final String username = IntegrationTestSupport.getUsername(gatewayId, tenantId);\n+        final VertxTestContext emptyEventReceived = new VertxTestContext();\n+        helper.applicationClientFactory.createEventConsumer(tenantId,\n+                msg -> emptyEventReceived.verify( () -> {\n+                    assertThat(msg.getContentType()).isEqualTo(EventConstants.CONTENT_TYPE_EMPTY_NOTIFICATION);\n+                    assertThat(MessageHelper.getRegistrationStatus(msg)).isEqualTo(EventConstants.RegistrationStatus.NEW.name());\n+                    emptyEventReceived.completeNow();\n+                }),\n+                close -> {});\n+\n+        final VertxTestContext telemetryReceived = new VertxTestContext();\n+        createConsumer(tenantId, msg -> {\n+            telemetryReceived.verify( () -> {\n+                assertThat(msg.getContentType()).isEqualTo(\"text/plain\");\n+                assertMessageProperties(telemetryReceived, msg);\n+            });\n+            telemetryReceived.completeNow();\n+        });\n+\n+        final VertxTestContext setup = new VertxTestContext();\n+        helper.registry\n+                .addDeviceForTenant(tenantId, new Tenant(), gatewayId, gateway, DEVICE_PASSWORD)\n+                .compose(ok -> connectToAdapter(username, DEVICE_PASSWORD))\n+                .compose(con -> createProducer(null, senderQos))\n+                .recover(t -> {\n+                    log.error(\"error setting up AMQP protocol adapter\", t);\n+                    return Future.failedFuture(t);\n+                })\n+                .onComplete(setup.succeeding(s -> {\n+                    sender = s;\n+                    setup.completeNow();\n+                }));\n+\n+        assertThat(setup.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        assertThat(setup.failed())\n+                .as(\"successfully connect to adapter\")\n+                .isFalse();\n+\n+        final VertxTestContext messageSent = new VertxTestContext();\n+        final Message msg = ProtonHelper.message(\"apFoobar\");\n+        msg.setContentType(\"text/plain\");\n+\n+        final String deviceId = helper.getRandomDeviceId(tenantId);\n+        msg.setAddress(String.format(\"%s/%s/%s\", getEndpointName(), tenantId, deviceId));\n+        sender.send(msg, delivery -> {\n+            messageSent.verify(() -> assertThat(delivery.getRemoteState()).isInstanceOf(Accepted.class));\n+            messageSent.completeNow();\n+        });\n+\n+        assertThat(messageSent.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        assertThat(emptyEventReceived.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        assertThat(telemetryReceived.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d914e1c6ce29acb636dad0d07e970ae99e47c65b"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU0MTc0NQ==", "bodyText": "one gateway, isn't it?", "url": "https://github.com/eclipse/hono/pull/2365#discussion_r557541745", "createdAt": "2021-01-14T16:50:30Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/coap/CoapTestBase.java", "diffHunk": "@@ -408,6 +410,56 @@ public void testUploadMessagesViaGateway(final VertxTestContext ctx) throws Inte\n                 });\n     }\n \n+    /**\n+     * Verifies that an edge device is auto-provisioned if it connects via a gateway equipped with the corresponding\n+     * authority.\n+     *\n+     * @param ctx The test context.\n+     * @throws InterruptedException if the test fails.\n+     */\n+    @Test\n+    public void testAutoProvisioningViaGateway(final VertxTestContext ctx) throws InterruptedException {\n+\n+        // GIVEN a device that is connected via two gateways", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d914e1c6ce29acb636dad0d07e970ae99e47c65b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU0Mzk4Mg==", "bodyText": "IMHO sending the message could/should be done in a much simpler way, e.g. as in the testUploadMessageFailsForDisabledDevice test method ...", "url": "https://github.com/eclipse/hono/pull/2365#discussion_r557543982", "createdAt": "2021-01-14T16:53:41Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/coap/CoapTestBase.java", "diffHunk": "@@ -408,6 +410,56 @@ public void testUploadMessagesViaGateway(final VertxTestContext ctx) throws Inte\n                 });\n     }\n \n+    /**\n+     * Verifies that an edge device is auto-provisioned if it connects via a gateway equipped with the corresponding\n+     * authority.\n+     *\n+     * @param ctx The test context.\n+     * @throws InterruptedException if the test fails.\n+     */\n+    @Test\n+    public void testAutoProvisioningViaGateway(final VertxTestContext ctx) throws InterruptedException {\n+\n+        // GIVEN a device that is connected via two gateways\n+        final Tenant tenant = new Tenant();\n+        final String gatewayId = helper.getRandomDeviceId(tenantId);\n+        final Device gateway = new Device()\n+                .setAuthorities(Collections.singleton(RegistryManagementConstants.AUTHORITY_AUTO_PROVISIONING_ENABLED));\n+\n+        final VertxTestContext setup = new VertxTestContext();\n+        helper.registry.addPskDeviceForTenant(tenantId, tenant, gatewayId, gateway, SECRET)\n+                .onComplete(setup.completing());\n+        ctx.verify(() -> assertThat(setup.awaitCompletion(5, TimeUnit.SECONDS)).isTrue());\n+\n+        final CoapClient gatewayClient = getCoapsClient(gatewayId, tenantId, SECRET);\n+\n+        final VertxTestContext emptyEventReceived = new VertxTestContext();\n+        helper.applicationClientFactory.createEventConsumer(tenantId,\n+                msg -> emptyEventReceived.verify( () -> {\n+                    // ignore potential events of warmup\n+                    if (MessageHelper.getDeviceId(msg).equals(deviceId)) {\n+                        assertThat(msg.getContentType()).isEqualTo(EventConstants.CONTENT_TYPE_EMPTY_NOTIFICATION);\n+                        assertThat(MessageHelper.getRegistrationStatus(msg)).isEqualTo(EventConstants.RegistrationStatus.NEW.name());\n+                        emptyEventReceived.completeNow();\n+                    }\n+                }),\n+                close -> {});\n+\n+        testUploadMessages(ctx, tenantId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d914e1c6ce29acb636dad0d07e970ae99e47c65b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzU0NDQ3Mw==", "bodyText": "same here, simply send one request and handle its outcome directly ...", "url": "https://github.com/eclipse/hono/pull/2365#discussion_r557544473", "createdAt": "2021-01-14T16:54:29Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/http/HttpTestBase.java", "diffHunk": "@@ -857,6 +859,64 @@ public void testUploadMessageFailsForUnauthorizedGateway(final VertxTestContext\n         .onComplete(ctx.completing());\n     }\n \n+    /**\n+     * Verifies that an edge device is auto-provisioned if it connects via a gateway equipped with the corresponding\n+     * authority.\n+     *\n+     * @param ctx The test context.\n+     * @throws InterruptedException if the test fails.\n+     */\n+    @Test\n+    public void testAutoProvisioningViaGateway(final VertxTestContext ctx) throws InterruptedException {\n+\n+        final Tenant tenant = new Tenant();\n+        final String gatewayId = helper.getRandomDeviceId(tenantId);\n+        final Device gateway = new Device()\n+                .setAuthorities(Collections.singleton(RegistryManagementConstants.AUTHORITY_AUTO_PROVISIONING_ENABLED));\n+\n+        final VertxTestContext setup = new VertxTestContext();\n+        helper.registry.addDeviceForTenant(tenantId, tenant, gatewayId, gateway, PWD)\n+                .onComplete(setup.completing());\n+\n+        assertThat(setup.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        if (setup.failed()) {\n+            ctx.failNow(setup.causeOfFailure());\n+            return;\n+        }\n+\n+        final MultiMap requestHeaders = MultiMap.caseInsensitiveMultiMap()\n+                .add(HttpHeaders.CONTENT_TYPE, \"text/plain\")\n+                .add(HttpHeaders.AUTHORIZATION, getBasicAuth(tenantId, gatewayId, PWD))\n+                .add(HttpHeaders.ORIGIN, ORIGIN_URI);\n+\n+        final String uri = String.format(\"%s/%s/%s\", getEndpointUri(), tenantId, helper.getRandomDeviceId(tenantId));\n+\n+        helper.applicationClientFactory.createEventConsumer(tenantId, msg -> {\n+            ctx.verify(() -> {\n+                assertThat(msg.getContentType()).isEqualTo(EventConstants.CONTENT_TYPE_EMPTY_NOTIFICATION);\n+                assertThat(MessageHelper.getRegistrationStatus(msg)).isEqualTo(EventConstants.RegistrationStatus.NEW.name());\n+            });\n+        }, remoteClose -> {});\n+\n+        testUploadMessages(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d914e1c6ce29acb636dad0d07e970ae99e47c65b"}, "originalPosition": 54}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe37ee78503ca4a286a04d9923ea103875d5ca15", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/fe37ee78503ca4a286a04d9923ea103875d5ca15", "committedDate": "2021-01-15T18:18:41Z", "message": "Review suggestions:\n- Don't make the AMQP test parameterized\n- Fix docs\n- Using Checkpoints\n- Sending message in a simpler way\n\nImprovements:\n- Also verifying if the telemetry/event message which should be send after the empty notification is received\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "6821687ed4dde97f29de615736acd3c97cd3dcf0", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/6821687ed4dde97f29de615736acd3c97cd3dcf0", "committedDate": "2021-01-18T07:54:40Z", "message": "Review suggestions:\n- Don't make the AMQP test parameterized\n- Fix docs\n- Using Checkpoints\n- Sending message in a simpler way\n\nImprovements:\n- Also verifying if the telemetry/event message which should be send after the empty notification is received\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6821687ed4dde97f29de615736acd3c97cd3dcf0", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/6821687ed4dde97f29de615736acd3c97cd3dcf0", "committedDate": "2021-01-18T07:54:40Z", "message": "Review suggestions:\n- Don't make the AMQP test parameterized\n- Fix docs\n- Using Checkpoints\n- Sending message in a simpler way\n\nImprovements:\n- Also verifying if the telemetry/event message which should be send after the empty notification is received\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "12dad65055b2b2f9af2a1d26f05035df063a3a40", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/12dad65055b2b2f9af2a1d26f05035df063a3a40", "committedDate": "2021-01-18T10:18:22Z", "message": "Review suggestions:\n- Don't make the AMQP test parameterized\n- Fix docs\n- Using Checkpoints\n- Sending message in a simpler way\n\nImprovements:\n- Also verifying if the telemetry/event message which should be send after the empty notification is received\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16202043d5107a1416aa2e5c6023942a31789cdf", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/16202043d5107a1416aa2e5c6023942a31789cdf", "committedDate": "2021-01-18T10:48:21Z", "message": "[#2053] Adding integration tests for gateway-based auto provisioning.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2092a14fcaf2243487606584f098353fe81bb33", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/d2092a14fcaf2243487606584f098353fe81bb33", "committedDate": "2021-01-18T13:40:18Z", "message": "Review suggestions:\n- Don't make the AMQP test parameterized\n- Fix docs\n- Using Checkpoints\n- Sending message in a simpler way\n\nImprovements:\n- Also verifying if the telemetry/event message which should be send after the empty notification is received\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12dad65055b2b2f9af2a1d26f05035df063a3a40", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/12dad65055b2b2f9af2a1d26f05035df063a3a40", "committedDate": "2021-01-18T10:18:22Z", "message": "Review suggestions:\n- Don't make the AMQP test parameterized\n- Fix docs\n- Using Checkpoints\n- Sending message in a simpler way\n\nImprovements:\n- Also verifying if the telemetry/event message which should be send after the empty notification is received\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "d2092a14fcaf2243487606584f098353fe81bb33", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/d2092a14fcaf2243487606584f098353fe81bb33", "committedDate": "2021-01-18T13:40:18Z", "message": "Review suggestions:\n- Don't make the AMQP test parameterized\n- Fix docs\n- Using Checkpoints\n- Sending message in a simpler way\n\nImprovements:\n- Also verifying if the telemetry/event message which should be send after the empty notification is received\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwNTYxMTMw", "url": "https://github.com/eclipse/hono/pull/2365#pullrequestreview-570561130", "createdAt": "2021-01-18T14:53:50Z", "commit": {"oid": "d2092a14fcaf2243487606584f098353fe81bb33"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 484, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}