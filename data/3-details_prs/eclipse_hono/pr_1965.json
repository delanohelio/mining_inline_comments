{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MjU5OTY5", "number": 1965, "title": "[#1951] Close all command consumers on connection close", "bodyText": "This fixes #1951.", "createdAt": "2020-05-18T05:05:51Z", "url": "https://github.com/eclipse/hono/pull/1965", "merged": true, "mergeCommit": {"oid": "cd8586f73bff6c0a8f54f3c78cfd60cf2260e274"}, "closed": true, "closedAt": "2020-05-19T12:54:39Z", "author": {"login": "calohmn"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciYq2dAH2gAyNDE5MjU5OTY5OmQ1MGFlY2VhYjhmMDAwYjMyYjdkOWU5MjJiMTM5ZDZmNjE1NWQ2Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABciz-vsAFqTQxNDQxMzAyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d50aeceab8f000b32b7d9e922b139d6f6155d638", "author": {"user": {"login": "calohmn", "name": "Carsten Lohmann"}}, "url": "https://github.com/eclipse/hono/commit/d50aeceab8f000b32b7d9e922b139d6f6155d638", "committedDate": "2020-05-18T05:04:02Z", "message": "[#1951] Close all command consumers on connection close.\n\nSigned-off-by: Carsten Lohmann <carsten.lohmann@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjIwMDA3", "url": "https://github.com/eclipse/hono/pull/1965#pullrequestreview-414220007", "createdAt": "2020-05-19T08:32:49Z", "commit": {"oid": "d50aeceab8f000b32b7d9e922b139d6f6155d638"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODozMjo0OVrOGXVnrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwODozMjo0OVrOGXVnrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEyNDY1Mw==", "bodyText": "does ProtonConnection.attachments() always return a non-null value?", "url": "https://github.com/eclipse/hono/pull/1965#discussion_r427124653", "createdAt": "2020-05-19T08:32:49Z", "author": {"login": "sophokles73"}, "path": "adapters/amqp-vertx/src/main/java/org/eclipse/hono/adapter/amqp/impl/VertxBasedAmqpProtocolAdapter.java", "diffHunk": "@@ -1250,23 +1255,37 @@ private void reportSentCommand(final TenantObject tenantObject, final CommandCon\n         }\n     }\n \n-    private static void setConnectionLossHandler(final ProtonConnection con, final Handler<Void> handler) {\n-\n-        con.attachments().set(\"connectionLossHandler\", Handler.class, handler);\n+    private static void setConnectionLossHandler(final ProtonConnection con, final String key, final Function<Span, Future<Void>> handler) {\n+        @SuppressWarnings(\"unchecked\")\n+        final Map<String, Function<Span, Future<Void>>> handlers = Optional\n+                .ofNullable(con.attachments().get(KEY_CONNECTION_LOSS_HANDLERS, Map.class))\n+                .orElse(new HashMap<>());\n+        handlers.put(key, handler);\n+        con.attachments().set(KEY_CONNECTION_LOSS_HANDLERS, Map.class, handlers);\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    private static Handler<Void> getConnectionLossHandler(final ProtonConnection con) {\n+    private static Collection<Function<Span, Future<Void>>> getConnectionLossHandlers(final ProtonConnection con) {\n+        @SuppressWarnings(\"unchecked\")\n+        final Map<String, Function<Span, Future<Void>>> handlers = con.attachments().get(KEY_CONNECTION_LOSS_HANDLERS, Map.class);\n+        return handlers != null ? handlers.values() : Collections.emptyList();\n+    }\n \n-        return con.attachments().get(\"connectionLossHandler\", Handler.class);\n+    private static boolean removeConnectionLossHandler(final ProtonConnection con, final String key) {\n+        @SuppressWarnings(\"unchecked\")\n+        final Map<String, Function<Span, Future<Void>>> handlers = con.attachments().get(KEY_CONNECTION_LOSS_HANDLERS, Map.class);\n+        return handlers != null && handlers.remove(key) != null;\n     }\n \n     private static Device getAuthenticatedDevice(final ProtonConnection con) {\n-        return Optional.ofNullable(con.attachments())\n-                .map(attachments -> attachments.get(AmqpAdapterConstants.KEY_CLIENT_DEVICE, Device.class))\n+        return Optional.ofNullable(con.attachments().get(AmqpAdapterConstants.KEY_CLIENT_DEVICE, Device.class))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50aeceab8f000b32b7d9e922b139d6f6155d638"}, "originalPosition": 176}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDEzMDI3", "url": "https://github.com/eclipse/hono/pull/1965#pullrequestreview-414413027", "createdAt": "2020-05-19T12:53:13Z", "commit": {"oid": "d50aeceab8f000b32b7d9e922b139d6f6155d638"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 620, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}