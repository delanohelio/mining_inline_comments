{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NjkzMDAz", "number": 2320, "title": "[#2288] Add integration tests verifying forwarding of QoS level in downstream messages", "bodyText": "The HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\nSigned-off-by: Florian Kaltner florian.kaltner@bosch.io", "createdAt": "2020-11-23T12:22:17Z", "url": "https://github.com/eclipse/hono/pull/2320", "merged": true, "mergeCommit": {"oid": "b5ecf44168def95e52083d6aec509cc92b70048c"}, "closed": true, "closedAt": "2020-11-24T08:45:39Z", "author": {"login": "fkaltner"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfUoL8gBqjQwMjc0OTA0NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfkhu_gH2gAyNTI1NjkzMDAzOmQ2ZjZiMWNiOWMyMmRmOTg1NmI0ZjNlYzQ1NjA0YTVlMjIyNTNhODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9aace07b7e9b6e61be5b69885aa28fdf7556188b", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/9aace07b7e9b6e61be5b69885aa28fdf7556188b", "committedDate": "2020-11-23T12:10:06Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "87e83d409e3c6cc9ae8141047385f0da7a00ebbb", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/87e83d409e3c6cc9ae8141047385f0da7a00ebbb", "committedDate": "2020-11-23T12:50:42Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87e83d409e3c6cc9ae8141047385f0da7a00ebbb", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/87e83d409e3c6cc9ae8141047385f0da7a00ebbb", "committedDate": "2020-11-23T12:50:42Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "a4e1fa586cb3fe2f81cfc066f84c662a8e24c274", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/a4e1fa586cb3fe2f81cfc066f84c662a8e24c274", "committedDate": "2020-11-23T13:21:18Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4e1fa586cb3fe2f81cfc066f84c662a8e24c274", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/a4e1fa586cb3fe2f81cfc066f84c662a8e24c274", "committedDate": "2020-11-23T13:21:18Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "50f04d004a00fa64d388dd105405113b897775be", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/50f04d004a00fa64d388dd105405113b897775be", "committedDate": "2020-11-23T14:17:20Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/11e3ff7059707b89e796039f9cfc881d04bcdac9", "committedDate": "2020-11-23T15:28:21Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50f04d004a00fa64d388dd105405113b897775be", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/50f04d004a00fa64d388dd105405113b897775be", "committedDate": "2020-11-23T14:17:20Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}, "afterCommit": {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/11e3ff7059707b89e796039f9cfc881d04bcdac9", "committedDate": "2020-11-23T15:28:21Z", "message": "[#2288] Fixing device level QoS forwarding of events for HTTP adapter\n\nThe HTTP adapter suffered from a bug when a client sent an event and set a device level QoS to something different than 1 or set no device level QoS at all. In any case the event was sent with QoS 1 but the message property indicating the device level QoS to the northbound application (which should always be 1 as this is the only supported QoS for events) was wrong.\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NjAyNTcx", "url": "https://github.com/eclipse/hono/pull/2320#pullrequestreview-536602571", "createdAt": "2020-11-23T15:49:19Z", "commit": {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo0OToxOVrOH4TijA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNTo0OToxOVrOH4TijA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwMjQ0NA==", "bodyText": "Note that there was a code change which leads to a different behaviour in Hono's AMQP adapter in 1.5.:\nPreviously the message was accepted (and the QoS was ignored), now it is rejected.\nIt's not specified as far as I can see how the adapter will react on this, but this may impact clients if they had accidentally set a qos-level HTTP header for events to AT_MOST_ONCE.", "url": "https://github.com/eclipse/hono/pull/2320#discussion_r528802444", "createdAt": "2020-11-23T15:49:19Z", "author": {"login": "fkaltner"}, "path": "tests/src/test/java/org/eclipse/hono/tests/http/EventHttpIT.java", "diffHunk": "@@ -52,4 +63,37 @@ protected void assertAdditionalMessageProperties(final Message msg) {\n \n         assertThat(msg.isDurable()).isTrue();\n     }\n+\n+    /**\n+     * Checks an event with an unsupported device QoS level is rejected.\n+     *\n+     * @param ctx The test context.\n+     *\n+     * @throws InterruptedException if the test fails.\n+     */\n+    @Test\n+    public void testEventIsRejectedForUnsupportedQosLevel(final VertxTestContext ctx) throws InterruptedException {\n+        final VertxTestContext setup = new VertxTestContext();\n+        final Tenant tenant = new Tenant();\n+        final MultiMap requestHeaders = MultiMap.caseInsensitiveMultiMap()\n+                .add(HttpHeaders.CONTENT_TYPE, \"text/plain\")\n+                .add(HttpHeaders.AUTHORIZATION, authorization)\n+                .add(HttpHeaders.ORIGIN, ORIGIN_URI)\n+                .add(Constants.HEADER_QOS_LEVEL, String.valueOf(QoS.AT_MOST_ONCE.ordinal()));\n+\n+        helper.registry.addDeviceForTenant(tenantId, tenant, deviceId, PWD).onComplete(setup.completing());\n+\n+        assertThat(setup.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        if (setup.failed()) {\n+            ctx.failNow(setup.causeOfFailure());\n+            return;\n+        }\n+\n+        httpClient.create(\n+                getEndpointUri(),\n+                Buffer.buffer(\"hello\"),\n+                requestHeaders,\n+                ResponsePredicate.status(HttpURLConnection.HTTP_BAD_REQUEST))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NjI3Njkz", "url": "https://github.com/eclipse/hono/pull/2320#pullrequestreview-536627693", "createdAt": "2020-11-23T16:13:18Z", "commit": {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjoxMzoxOVrOH4U1-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNjoxNDoyMlrOH4U48Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyMzgwMg==", "bodyText": "you mean HTTP adapter, right?", "url": "https://github.com/eclipse/hono/pull/2320#discussion_r528823802", "createdAt": "2020-11-23T16:13:19Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/http/EventHttpIT.java", "diffHunk": "@@ -52,4 +63,37 @@ protected void assertAdditionalMessageProperties(final Message msg) {\n \n         assertThat(msg.isDurable()).isTrue();\n     }\n+\n+    /**\n+     * Checks an event with an unsupported device QoS level is rejected.\n+     *\n+     * @param ctx The test context.\n+     *\n+     * @throws InterruptedException if the test fails.\n+     */\n+    @Test\n+    public void testEventIsRejectedForUnsupportedQosLevel(final VertxTestContext ctx) throws InterruptedException {\n+        final VertxTestContext setup = new VertxTestContext();\n+        final Tenant tenant = new Tenant();\n+        final MultiMap requestHeaders = MultiMap.caseInsensitiveMultiMap()\n+                .add(HttpHeaders.CONTENT_TYPE, \"text/plain\")\n+                .add(HttpHeaders.AUTHORIZATION, authorization)\n+                .add(HttpHeaders.ORIGIN, ORIGIN_URI)\n+                .add(Constants.HEADER_QOS_LEVEL, String.valueOf(QoS.AT_MOST_ONCE.ordinal()));\n+\n+        helper.registry.addDeviceForTenant(tenantId, tenant, deviceId, PWD).onComplete(setup.completing());\n+\n+        assertThat(setup.awaitCompletion(5, TimeUnit.SECONDS)).isTrue();\n+        if (setup.failed()) {\n+            ctx.failNow(setup.causeOfFailure());\n+            return;\n+        }\n+\n+        httpClient.create(\n+                getEndpointUri(),\n+                Buffer.buffer(\"hello\"),\n+                requestHeaders,\n+                ResponsePredicate.status(HttpURLConnection.HTTP_BAD_REQUEST))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgwMjQ0NA=="}, "originalCommit": {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODgyNDU2MQ==", "bodyText": "please revert this change, we are already applying a factor > 1 to this value when running on test environment", "url": "https://github.com/eclipse/hono/pull/2320#discussion_r528824561", "createdAt": "2020-11-23T16:14:22Z", "author": {"login": "sophokles73"}, "path": "tests/src/test/java/org/eclipse/hono/tests/IntegrationTestSupport.java", "diffHunk": "@@ -73,7 +73,7 @@\n     /**\n      * The default number of milliseconds to wait for a response to an AMQP 1.0 performative.\n      */\n-    public static final int DEFAULT_AMQP_TIMEOUT = 400;\n+    public static final int DEFAULT_AMQP_TIMEOUT = 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11e3ff7059707b89e796039f9cfc881d04bcdac9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f6b1cb9c22df9856b4f3ec45604a5e22253a89", "author": {"user": {"login": "fkaltner", "name": "Florian Kaltner"}}, "url": "https://github.com/eclipse/hono/commit/d6f6b1cb9c22df9856b4f3ec45604a5e22253a89", "committedDate": "2020-11-24T07:22:19Z", "message": "Review suggestions:\n- Reverting change to AMQP_TIMEOUT\n\nSigned-off-by: Florian Kaltner <florian.kaltner@bosch.io>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 457, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}