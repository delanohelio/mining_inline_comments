{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MzE3OTk0", "number": 1220, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjozMzowMlrOEFZ9BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjozODozMlrOEFzQLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTAzNTU3OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/implementation/VirtualMachineImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjozMzowMlrOGjkzGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjo0Mjo0NFrOGjlA3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NjI1MA==", "bodyText": "This makes isOSDiskFromImage true, so no need another bool.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1220#discussion_r439956250", "createdAt": "2020-06-15T06:33:02Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/implementation/VirtualMachineImpl.java", "diffHunk": "@@ -720,6 +722,16 @@ public VirtualMachineImpl withSpecializedOSDisk(Disk disk, OperatingSystemTypes\n         return this;\n     }\n \n+    @Override\n+    public VirtualMachineImpl withSpecializedGalleryImageVersion(String galleryImageVersionId) {\n+        ImageReference imageReferenceInner = new ImageReference();\n+        imageReferenceInner.withId(galleryImageVersionId);\n+        this.inner().storageProfile().osDisk().withCreateOption(DiskCreateOptionTypes.FROM_IMAGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3600ee360f10c5c5e4b3de35961aff96245282"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1OTc3Mw==", "bodyText": "Only if it is specialized, we need to set OS profile as null. If it is generalized, keep as it is.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1220#discussion_r439959773", "createdAt": "2020-06-15T06:42:44Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/implementation/VirtualMachineImpl.java", "diffHunk": "@@ -720,6 +722,16 @@ public VirtualMachineImpl withSpecializedOSDisk(Disk disk, OperatingSystemTypes\n         return this;\n     }\n \n+    @Override\n+    public VirtualMachineImpl withSpecializedGalleryImageVersion(String galleryImageVersionId) {\n+        ImageReference imageReferenceInner = new ImageReference();\n+        imageReferenceInner.withId(galleryImageVersionId);\n+        this.inner().storageProfile().osDisk().withCreateOption(DiskCreateOptionTypes.FROM_IMAGE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk1NjI1MA=="}, "originalCommit": {"oid": "1f3600ee360f10c5c5e4b3de35961aff96245282"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTE4MDYwOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjozODozMlrOGkNLIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjo0MzoyOVrOGkNTBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNzc2Mw==", "bodyText": "Suggestion: Maybe same method like withNoCredential for both windows and linux flow?\nwithout is a bit like the method in update flow, might be a bit confusing in fluent create flow.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1220#discussion_r440617763", "createdAt": "2020-06-16T06:38:32Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java", "diffHunk": "@@ -913,6 +904,14 @@\n              * @return the next stage of the definition\n              */\n             WithLinuxRootPasswordOrPublicKeyManagedOrUnmanaged withRootUsername(String rootUserName);\n+\n+            /**\n+             * Specifies to remove the information of OS profile for the Linux virtual machine.\n+             * It is required when creating from a specialized image.\n+             *\n+             * @return the next stage of the definition\n+             */\n+            WithLinuxCreateManagedOrUnmanaged withoutRootUsernameAndPassword();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc4f0fd971ff8c2249d56def1028d84a0417c252"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxOTc4Mw==", "bodyText": "In vm/vmss, it should be OK as we already have existing methods like:\nwithoutPrimaryPublicIPAddress: the VM should not have a public IP address.\nwithoutAutoUpdate: disables automatic updates.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1220#discussion_r440619783", "createdAt": "2020-06-16T06:43:29Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-compute/src/main/java/com/microsoft/azure/management/compute/VirtualMachine.java", "diffHunk": "@@ -913,6 +904,14 @@\n              * @return the next stage of the definition\n              */\n             WithLinuxRootPasswordOrPublicKeyManagedOrUnmanaged withRootUsername(String rootUserName);\n+\n+            /**\n+             * Specifies to remove the information of OS profile for the Linux virtual machine.\n+             * It is required when creating from a specialized image.\n+             *\n+             * @return the next stage of the definition\n+             */\n+            WithLinuxCreateManagedOrUnmanaged withoutRootUsernameAndPassword();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYxNzc2Mw=="}, "originalCommit": {"oid": "bc4f0fd971ff8c2249d56def1028d84a0417c252"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2555, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}