{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NTg2ODk3", "number": 1098, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDozMjowNVrODn2q7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDozMjowNVrODn2q7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTE2NzgyOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDozMjowNVrOF2F6AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNjozMzozNlrOF2YFsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI2NDE5Mw==", "bodyText": "In which case the result be null?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1098#discussion_r392264193", "createdAt": "2020-03-13T14:32:05Z", "author": {"login": "yaohaizh"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "diffHunk": "@@ -90,7 +90,8 @@ public boolean checkExistenceById(String id) {\n     public GenericResource getById(String id) {\n         Provider provider = this.manager().providers().getByName(ResourceUtils.resourceProviderFromResourceId(id));\n         String apiVersion = ResourceUtils.defaultApiVersion(id, provider);\n-        return wrapModel(this.inner().getById(id, apiVersion)).withApiVersion(apiVersion);\n+        GenericResourceImpl genericResource = wrapModel(this.inner().getById(id, apiVersion));\n+        return genericResource == null ? null : genericResource.withApiVersion(apiVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c438b537df929336631741c79c2781170d3808"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU2MjA5OA==", "bodyText": "When user request to get unavailable resource(like incorrect id or resource deleted), the server return CloudException. From SDK side, we catch the exception and return NULL inside the generated inners object.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1098#discussion_r392562098", "createdAt": "2020-03-14T06:33:36Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "diffHunk": "@@ -90,7 +90,8 @@ public boolean checkExistenceById(String id) {\n     public GenericResource getById(String id) {\n         Provider provider = this.manager().providers().getByName(ResourceUtils.resourceProviderFromResourceId(id));\n         String apiVersion = ResourceUtils.defaultApiVersion(id, provider);\n-        return wrapModel(this.inner().getById(id, apiVersion)).withApiVersion(apiVersion);\n+        GenericResourceImpl genericResource = wrapModel(this.inner().getById(id, apiVersion));\n+        return genericResource == null ? null : genericResource.withApiVersion(apiVersion);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI2NDE5Mw=="}, "originalCommit": {"oid": "66c438b537df929336631741c79c2781170d3808"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2514, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}