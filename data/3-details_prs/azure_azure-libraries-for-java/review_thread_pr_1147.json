{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTkwNDUz", "number": 1147, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzowMToxNVrODrg1dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzoyMzo1MVrODrhLVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTUzMzM1OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/QueuedBuildOperations.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzowMToxNVrOF75hCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzoyODozMlrOF76JCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1MjY0OA==", "bodyText": "why this one commented out?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398352648", "createdAt": "2020-03-26T07:01:15Z", "author": {"login": "yungezz"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/QueuedBuildOperations.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry;\n+//\n+//import com.microsoft.azure.PagedList;\n+//import com.microsoft.azure.management.apigeneration.Beta;\n+//import com.microsoft.azure.management.apigeneration.Fluent;\n+//import rx.Completable;\n+//import rx.Observable;\n+//\n+/**\n+ * Grouping of container registry queued build actions.\n+ */\n+public interface QueuedBuildOperations {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NTU0NA==", "bodyText": "I'm not sure about it. As I check in commit, it is moved from track1 and the track1 is already commented out, more than 1 year before. https://github.com/Azure/azure-libraries-for-java/blob/dea6587/azure-mgmt-containerregistry/src/main/java/com/microsoft/azure/management/containerregistry/QueuedBuildOperations.java", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398355544", "createdAt": "2020-03-26T07:09:34Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/QueuedBuildOperations.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry;\n+//\n+//import com.microsoft.azure.PagedList;\n+//import com.microsoft.azure.management.apigeneration.Beta;\n+//import com.microsoft.azure.management.apigeneration.Fluent;\n+//import rx.Completable;\n+//import rx.Observable;\n+//\n+/**\n+ * Grouping of container registry queued build actions.\n+ */\n+public interface QueuedBuildOperations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1MjY0OA=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NTg2Mw==", "bodyText": "I think it is due to the queue task was removed from swagger.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398355863", "createdAt": "2020-03-26T07:10:26Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/QueuedBuildOperations.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry;\n+//\n+//import com.microsoft.azure.PagedList;\n+//import com.microsoft.azure.management.apigeneration.Beta;\n+//import com.microsoft.azure.management.apigeneration.Fluent;\n+//import rx.Completable;\n+//import rx.Observable;\n+//\n+/**\n+ * Grouping of container registry queued build actions.\n+ */\n+public interface QueuedBuildOperations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1MjY0OA=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NjQwNw==", "bodyText": "should we remove this interface then?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398356407", "createdAt": "2020-03-26T07:11:45Z", "author": {"login": "yungezz"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/QueuedBuildOperations.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry;\n+//\n+//import com.microsoft.azure.PagedList;\n+//import com.microsoft.azure.management.apigeneration.Beta;\n+//import com.microsoft.azure.management.apigeneration.Fluent;\n+//import rx.Completable;\n+//import rx.Observable;\n+//\n+/**\n+ * Grouping of container registry queued build actions.\n+ */\n+public interface QueuedBuildOperations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1MjY0OA=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1OTQ4OQ==", "bodyText": "It could be removed. I'll remove all commented out code in track1.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398359489", "createdAt": "2020-03-26T07:19:59Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/QueuedBuildOperations.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry;\n+//\n+//import com.microsoft.azure.PagedList;\n+//import com.microsoft.azure.management.apigeneration.Beta;\n+//import com.microsoft.azure.management.apigeneration.Fluent;\n+//import rx.Completable;\n+//import rx.Observable;\n+//\n+/**\n+ * Grouping of container registry queued build actions.\n+ */\n+public interface QueuedBuildOperations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1MjY0OA=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM2Mjg4OQ==", "bodyText": "done", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398362889", "createdAt": "2020-03-26T07:28:32Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/QueuedBuildOperations.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry;\n+//\n+//import com.microsoft.azure.PagedList;\n+//import com.microsoft.azure.management.apigeneration.Beta;\n+//import com.microsoft.azure.management.apigeneration.Fluent;\n+//import rx.Completable;\n+//import rx.Observable;\n+//\n+/**\n+ * Grouping of container registry queued build actions.\n+ */\n+public interface QueuedBuildOperations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1MjY0OA=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTU1MTc3OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/RegistryEncodedTaskStepImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzowOTowMVrOF75roQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzoxMzoyMVrOF75yFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NTM2MQ==", "bodyText": "Is it same functionality before/after?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398355361", "createdAt": "2020-03-26T07:09:01Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/RegistryEncodedTaskStepImpl.java", "diffHunk": "@@ -76,7 +75,7 @@ public RegistryEncodedTaskStepImpl withBase64EncodedTaskContent(String encodedTa\n     @Override\n     public RegistryEncodedTaskStepImpl withBase64EncodedValueContent(String encodedValueContent) {\n         if (isInCreateMode()) {\n-            this.inner.withBase64EncodedValuesContent(encodedValueContent);\n+            this.inner.withEncodedValuesContent(encodedValueContent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a148a5f5352f81cae757b152cae3e54a746f164"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NzAxMw==", "bodyText": "Yes, the encoded values is always base64 encode. This difference is due to generation.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398357013", "createdAt": "2020-03-26T07:13:21Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/RegistryEncodedTaskStepImpl.java", "diffHunk": "@@ -76,7 +75,7 @@ public RegistryEncodedTaskStepImpl withBase64EncodedTaskContent(String encodedTa\n     @Override\n     public RegistryEncodedTaskStepImpl withBase64EncodedValueContent(String encodedValueContent) {\n         if (isInCreateMode()) {\n-            this.inner.withBase64EncodedValuesContent(encodedValueContent);\n+            this.inner.withEncodedValuesContent(encodedValueContent);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NTM2MQ=="}, "originalCommit": {"oid": "2a148a5f5352f81cae757b152cae3e54a746f164"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTU1Mjc0OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/RegistryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzowOToyN1rOF75sOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzoxODozM1rOF755iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NTUxMg==", "bodyText": "Is this sync or async?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398355512", "createdAt": "2020-03-26T07:09:27Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/RegistryImpl.java", "diffHunk": "@@ -94,9 +92,9 @@ public RegistryImpl update() {\n     }\n \n     @Override\n-    public Completable afterPostRunAsync(boolean isGroupFaulted) {\n+    public Mono<Void> afterPostRunAsync(boolean isGroupFaulted) {\n         this.webhooks.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a148a5f5352f81cae757b152cae3e54a746f164"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1ODkyMQ==", "bodyText": "After my check, it is a collections clear. Only clear the local map.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398358921", "createdAt": "2020-03-26T07:18:33Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/RegistryImpl.java", "diffHunk": "@@ -94,9 +92,9 @@ public RegistryImpl update() {\n     }\n \n     @Override\n-    public Completable afterPostRunAsync(boolean isGroupFaulted) {\n+    public Mono<Void> afterPostRunAsync(boolean isGroupFaulted) {\n         this.webhooks.clear();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NTUxMg=="}, "originalCommit": {"oid": "2a148a5f5352f81cae757b152cae3e54a746f164"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTU2NzYyOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/BuildArgumentImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzoxNToxMlrOF750zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzoxNzoxMVrOF753mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NzcwOA==", "bodyText": "Is this already commented in track 1?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398357708", "createdAt": "2020-03-26T07:15:12Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/BuildArgumentImpl.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry.implementation;\n+//\n+//import com.microsoft.azure.management.apigeneration.LangDefinition;\n+//import com.microsoft.azure.management.containerregistry.Build;\n+//\n+//import java.util.ArrayList;\n+//\n+/**\n+ * Implementation for container group's volume definition stages interface.\n+ */\n+public class BuildArgumentImpl {\n+\n+}\n+//@LangDefinition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1ODA3OQ==", "bodyText": "You can see the commit, all track1 is from the first commit.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398358079", "createdAt": "2020-03-26T07:16:18Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/BuildArgumentImpl.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry.implementation;\n+//\n+//import com.microsoft.azure.management.apigeneration.LangDefinition;\n+//import com.microsoft.azure.management.containerregistry.Build;\n+//\n+//import java.util.ArrayList;\n+//\n+/**\n+ * Implementation for container group's volume definition stages interface.\n+ */\n+public class BuildArgumentImpl {\n+\n+}\n+//@LangDefinition", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NzcwOA=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1ODQyNg==", "bodyText": "Yes, after I check for the commit. The BuildArgumentImpl is commented from track 1.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398358426", "createdAt": "2020-03-26T07:17:11Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/BuildArgumentImpl.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry.implementation;\n+//\n+//import com.microsoft.azure.management.apigeneration.LangDefinition;\n+//import com.microsoft.azure.management.containerregistry.Build;\n+//\n+//import java.util.ArrayList;\n+//\n+/**\n+ * Implementation for container group's volume definition stages interface.\n+ */\n+public class BuildArgumentImpl {\n+\n+}\n+//@LangDefinition", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM1NzcwOA=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTU4OTM0OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/WebhooksClientImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNzoyMzo1MVrOF76Bpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODoyNzozNFrOF7726w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM2MDk5OQ==", "bodyText": "It looks not required to have final here. You can just use return this.containerRegistryManager.inner().webhooks().....", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398360999", "createdAt": "2020-03-26T07:23:51Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/WebhooksClientImpl.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry.implementation;\n+\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.management.containerregistry.Registries;\n+import com.azure.management.containerregistry.Webhook;\n+import com.azure.management.containerregistry.models.WebhooksInner;\n+import com.azure.management.resources.fluentcore.utils.PagedConverter;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Represents a webhook collection associated with a container registry.\n+ */\n+public class WebhooksClientImpl implements Registries.WebhooksClient {\n+    private final ContainerRegistryManager containerRegistryManager;\n+    private final RegistryImpl containerRegistry;\n+\n+    WebhooksClientImpl(ContainerRegistryManager containerRegistryManager, RegistryImpl containerRegistry) {\n+        this.containerRegistryManager = containerRegistryManager;\n+        this.containerRegistry = containerRegistry;\n+    }\n+\n+    @Override\n+    public Webhook get(final String resourceGroupName, final String registryName, final String webhookName) {\n+        return this.getAsync(resourceGroupName, registryName, webhookName).block();\n+    }\n+\n+    @Override\n+    public Mono<Webhook> getAsync(final String resourceGroupName, final String registryName, final String webhookName) {\n+        final WebhooksClientImpl self = this;\n+        final WebhooksInner webhooksInner = this.containerRegistryManager.inner().webhooks();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM2MzY1NQ==", "bodyText": "This is not a compile issue, so I haven't changed such minor issue.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398363655", "createdAt": "2020-03-26T07:30:17Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/WebhooksClientImpl.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry.implementation;\n+\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.management.containerregistry.Registries;\n+import com.azure.management.containerregistry.Webhook;\n+import com.azure.management.containerregistry.models.WebhooksInner;\n+import com.azure.management.resources.fluentcore.utils.PagedConverter;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Represents a webhook collection associated with a container registry.\n+ */\n+public class WebhooksClientImpl implements Registries.WebhooksClient {\n+    private final ContainerRegistryManager containerRegistryManager;\n+    private final RegistryImpl containerRegistry;\n+\n+    WebhooksClientImpl(ContainerRegistryManager containerRegistryManager, RegistryImpl containerRegistry) {\n+        this.containerRegistryManager = containerRegistryManager;\n+        this.containerRegistry = containerRegistry;\n+    }\n+\n+    @Override\n+    public Webhook get(final String resourceGroupName, final String registryName, final String webhookName) {\n+        return this.getAsync(resourceGroupName, registryName, webhookName).block();\n+    }\n+\n+    @Override\n+    public Mono<Webhook> getAsync(final String resourceGroupName, final String registryName, final String webhookName) {\n+        final WebhooksClientImpl self = this;\n+        final WebhooksInner webhooksInner = this.containerRegistryManager.inner().webhooks();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM2MDk5OQ=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM2NDQ3NQ==", "bodyText": "Meanwhile, I think both are OK. No one is better than the other.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398364475", "createdAt": "2020-03-26T07:32:13Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/WebhooksClientImpl.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry.implementation;\n+\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.management.containerregistry.Registries;\n+import com.azure.management.containerregistry.Webhook;\n+import com.azure.management.containerregistry.models.WebhooksInner;\n+import com.azure.management.resources.fluentcore.utils.PagedConverter;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Represents a webhook collection associated with a container registry.\n+ */\n+public class WebhooksClientImpl implements Registries.WebhooksClient {\n+    private final ContainerRegistryManager containerRegistryManager;\n+    private final RegistryImpl containerRegistry;\n+\n+    WebhooksClientImpl(ContainerRegistryManager containerRegistryManager, RegistryImpl containerRegistry) {\n+        this.containerRegistryManager = containerRegistryManager;\n+        this.containerRegistry = containerRegistry;\n+    }\n+\n+    @Override\n+    public Webhook get(final String resourceGroupName, final String registryName, final String webhookName) {\n+        return this.getAsync(resourceGroupName, registryName, webhookName).block();\n+    }\n+\n+    @Override\n+    public Mono<Webhook> getAsync(final String resourceGroupName, final String registryName, final String webhookName) {\n+        final WebhooksClientImpl self = this;\n+        final WebhooksInner webhooksInner = this.containerRegistryManager.inner().webhooks();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM2MDk5OQ=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM4NzIzOQ==", "bodyText": "Yes, it's just minor one. My suggestion is to keep consistent coding style as other methods. You don't have to make changes here.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398387239", "createdAt": "2020-03-26T08:20:45Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/WebhooksClientImpl.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry.implementation;\n+\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.management.containerregistry.Registries;\n+import com.azure.management.containerregistry.Webhook;\n+import com.azure.management.containerregistry.models.WebhooksInner;\n+import com.azure.management.resources.fluentcore.utils.PagedConverter;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Represents a webhook collection associated with a container registry.\n+ */\n+public class WebhooksClientImpl implements Registries.WebhooksClient {\n+    private final ContainerRegistryManager containerRegistryManager;\n+    private final RegistryImpl containerRegistry;\n+\n+    WebhooksClientImpl(ContainerRegistryManager containerRegistryManager, RegistryImpl containerRegistry) {\n+        this.containerRegistryManager = containerRegistryManager;\n+        this.containerRegistry = containerRegistry;\n+    }\n+\n+    @Override\n+    public Webhook get(final String resourceGroupName, final String registryName, final String webhookName) {\n+        return this.getAsync(resourceGroupName, registryName, webhookName).block();\n+    }\n+\n+    @Override\n+    public Mono<Webhook> getAsync(final String resourceGroupName, final String registryName, final String webhookName) {\n+        final WebhooksClientImpl self = this;\n+        final WebhooksInner webhooksInner = this.containerRegistryManager.inner().webhooks();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM2MDk5OQ=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM5MTAxOQ==", "bodyText": "Oh, yes, it is better for same style. Maybe will change it in refactor", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1147#discussion_r398391019", "createdAt": "2020-03-26T08:27:34Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-containerregistry/src/main/java/com/azure/management/containerregistry/implementation/WebhooksClientImpl.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) Microsoft Corporation. All rights reserved.\n+ * Licensed under the MIT License. See License.txt in the project root for\n+ * license information.\n+ */\n+package com.azure.management.containerregistry.implementation;\n+\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.management.containerregistry.Registries;\n+import com.azure.management.containerregistry.Webhook;\n+import com.azure.management.containerregistry.models.WebhooksInner;\n+import com.azure.management.resources.fluentcore.utils.PagedConverter;\n+import reactor.core.publisher.Mono;\n+\n+/**\n+ * Represents a webhook collection associated with a container registry.\n+ */\n+public class WebhooksClientImpl implements Registries.WebhooksClient {\n+    private final ContainerRegistryManager containerRegistryManager;\n+    private final RegistryImpl containerRegistry;\n+\n+    WebhooksClientImpl(ContainerRegistryManager containerRegistryManager, RegistryImpl containerRegistry) {\n+        this.containerRegistryManager = containerRegistryManager;\n+        this.containerRegistry = containerRegistry;\n+    }\n+\n+    @Override\n+    public Webhook get(final String resourceGroupName, final String registryName, final String webhookName) {\n+        return this.getAsync(resourceGroupName, registryName, webhookName).block();\n+    }\n+\n+    @Override\n+    public Mono<Webhook> getAsync(final String resourceGroupName, final String registryName, final String webhookName) {\n+        final WebhooksClientImpl self = this;\n+        final WebhooksInner webhooksInner = this.containerRegistryManager.inner().webhooks();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODM2MDk5OQ=="}, "originalCommit": {"oid": "31459c066d1405ef30ecd1a8b074d3257bdced73"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2536, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}