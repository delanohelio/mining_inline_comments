{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NDczMTIx", "number": 1079, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODo1OToyOVrODpBTkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTowMTo1NFrODpwFRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzM5NjAwOnYy", "diffSide": "RIGHT", "path": ".azure-pipelines/fluentJavaMgmt.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwODo1OToyOVrOF37i0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxMzo1MVrOF38CnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5MTU3MQ==", "bodyText": "why comment out stylecheck", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394191571", "createdAt": "2020-03-18T08:59:29Z", "author": {"login": "yungezz"}, "path": ".azure-pipelines/fluentJavaMgmt.yml", "diffHunk": "@@ -40,41 +49,19 @@ jobs:\n           jdkArchitectureOption: 'x64'\n           publishJUnitResults: false\n           goals: 'install'\n-          \n-      - task: JavaToolInstaller@0\n-        displayName: 'Install Azul JDK 1.7'\n-        inputs:\n-          versionSpec: '7'\n-          jdkArchitectureOption: 'x64'\n-          jdkSourceOption: LocalDirectory\n-          jdkFile: \"ci/zulu-7-azure-jdk_7.29.0.5-7.0.222-win_x64.zip\"\n-          jdkDestinationDirectory: '$(Agent.ToolsDirectory)/jdk7'\n-          cleanDestinationDirectory: true\n-          \n-      - task: Maven@3\n-        displayName: 'Run StyleCheck'\n-        inputs:\n-          mavenPomFile: pom.xml\n-          options: '$(DefaultOptions) $(ProfileFlag)'\n-          mavenOptions: '$(LoggingOptions)'\n-          javaHomeOption: 'JDKVersion'\n-          jdkVersionOption: $(JavaVersion)\n-          jdkArchitectureOption: 'x64'\n-          publishJUnitResults: false\n-          goals: 'checkstyle:check'\n \n-      - task: Maven@3\n-        displayName: 'Start Jetty'\n-        inputs:\n-          mavenPomFile: pom.xml\n-          options: '$(ProfileFlag)'\n-          mavenOptions: '$(LoggingOptions)'\n-          javaHomeOption: 'JDKVersion'\n-          jdkVersionOption: $(JavaVersion)\n-          jdkArchitectureOption: 'x64'\n-          publishJUnitResults: false\n-          goals: 'jetty:run-forked'\n-          \n+      # - task: Maven@3\n+      #   displayName: 'Run StyleCheck'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5OTcwOQ==", "bodyText": "The stylecheck has many error with auto-gen code, I firstly fix the unit test, so comment it first.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394199709", "createdAt": "2020-03-18T09:13:51Z", "author": {"login": "ChenTanyi"}, "path": ".azure-pipelines/fluentJavaMgmt.yml", "diffHunk": "@@ -40,41 +49,19 @@ jobs:\n           jdkArchitectureOption: 'x64'\n           publishJUnitResults: false\n           goals: 'install'\n-          \n-      - task: JavaToolInstaller@0\n-        displayName: 'Install Azul JDK 1.7'\n-        inputs:\n-          versionSpec: '7'\n-          jdkArchitectureOption: 'x64'\n-          jdkSourceOption: LocalDirectory\n-          jdkFile: \"ci/zulu-7-azure-jdk_7.29.0.5-7.0.222-win_x64.zip\"\n-          jdkDestinationDirectory: '$(Agent.ToolsDirectory)/jdk7'\n-          cleanDestinationDirectory: true\n-          \n-      - task: Maven@3\n-        displayName: 'Run StyleCheck'\n-        inputs:\n-          mavenPomFile: pom.xml\n-          options: '$(DefaultOptions) $(ProfileFlag)'\n-          mavenOptions: '$(LoggingOptions)'\n-          javaHomeOption: 'JDKVersion'\n-          jdkVersionOption: $(JavaVersion)\n-          jdkArchitectureOption: 'x64'\n-          publishJUnitResults: false\n-          goals: 'checkstyle:check'\n \n-      - task: Maven@3\n-        displayName: 'Start Jetty'\n-        inputs:\n-          mavenPomFile: pom.xml\n-          options: '$(ProfileFlag)'\n-          mavenOptions: '$(LoggingOptions)'\n-          javaHomeOption: 'JDKVersion'\n-          jdkVersionOption: $(JavaVersion)\n-          jdkArchitectureOption: 'x64'\n-          publishJUnitResults: false\n-          goals: 'jetty:run-forked'\n-          \n+      # - task: Maven@3\n+      #   displayName: 'Run StyleCheck'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5MTU3MQ=="}, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzQyNTQ3OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-network/src/main/java/com/azure/management/network/NetworkSecurityGroup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOTowODoxMFrOF371ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxODoxOVrOF38Mnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5NjM2Mg==", "bodyText": "Is these import necessary, given it is already compile pass?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394196362", "createdAt": "2020-03-18T09:08:10Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-network/src/main/java/com/azure/management/network/NetworkSecurityGroup.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.azure.management.resources.fluentcore.arm.models.GroupableResource;\n import com.azure.management.resources.fluentcore.arm.models.Resource;\n import com.azure.management.resources.fluentcore.model.Appliable;\n+import com.azure.management.resources.fluentcore.model.Attachable;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIwMjI3MQ==", "bodyText": "It fixes a warning for https://github.com/azure/azure-libraries-for-java/blob/a3595380aabbcc6e2fa97e6f52480a6d5d0d6393/azure-mgmt-network/src/main/java/com/azure/management/network/NetworkSecurityGroup.java#L85", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394202271", "createdAt": "2020-03-18T09:18:19Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-network/src/main/java/com/azure/management/network/NetworkSecurityGroup.java", "diffHunk": "@@ -16,6 +16,7 @@\n import com.azure.management.resources.fluentcore.arm.models.GroupableResource;\n import com.azure.management.resources.fluentcore.arm.models.Resource;\n import com.azure.management.resources.fluentcore.model.Appliable;\n+import com.azure.management.resources.fluentcore.model.Attachable;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5NjM2Mg=="}, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0Mzg5NTI3OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMToyMDoxNFrOF4AigQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQwMzoyNDo1MlrOF4e2DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ==", "bodyText": "Why we are having such kind of change from void to Mono?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394273409", "createdAt": "2020-03-18T11:20:14Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -1468,14 +1468,15 @@ public VirtualMachineScaleSetImpl withoutUserAssignedManagedServiceIdentity(Stri\n     // Create Update specific methods\n     //\n     @Override\n-    protected void beforeCreating() {\n+    protected Mono<Void> beforeCreating() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0MDM1MQ==", "bodyText": "Because this function could be implemented with blocking, which is not allowed during creation, so I change to Mono which can be chained.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394740351", "createdAt": "2020-03-19T01:35:55Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -1468,14 +1468,15 @@ public VirtualMachineScaleSetImpl withoutUserAssignedManagedServiceIdentity(Stri\n     // Create Update specific methods\n     //\n     @Override\n-    protected void beforeCreating() {\n+    protected Mono<Void> beforeCreating() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc1MzM3OA==", "bodyText": "But in that case, you could wrap in createResourceAsync when it's required. I doubt if it is good style to do like this. After your changes, a lot of code snippet will work as it is while it just returns Mono.empty().", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394753378", "createdAt": "2020-03-19T02:17:16Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -1468,14 +1468,15 @@ public VirtualMachineScaleSetImpl withoutUserAssignedManagedServiceIdentity(Stri\n     // Create Update specific methods\n     //\n     @Override\n-    protected void beforeCreating() {\n+    protected Mono<Void> beforeCreating() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc1NzMwOQ==", "bodyText": "Yes, but I'm afraid something bad happened if I change the blocking into createResourceAsync. The framework is not written by me, I can't guarantee to change everywhere. Anyway, I could try to change it. And actually, for this implementation, createResourceAsync is not necessary, it is splited into beforeCreating, createInner and afterCreating three necessary function. It could be strange when implement them all.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394757309", "createdAt": "2020-03-19T02:32:14Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -1468,14 +1468,15 @@ public VirtualMachineScaleSetImpl withoutUserAssignedManagedServiceIdentity(Stri\n     // Create Update specific methods\n     //\n     @Override\n-    protected void beforeCreating() {\n+    protected Mono<Void> beforeCreating() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2OTM2NA==", "bodyText": "I am not sure but from v1 code in GroupableParentResourceImpl it seems the intention for beforeCreating and afterCreating is do things no blocking (so no request). But we have bug in v1 that do block.\nSo it fails in v2 after migration.\nAgree it might be better for us to fix the blocking issue in before/after if possible, as done in latest commit.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394769364", "createdAt": "2020-03-19T03:22:21Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -1468,14 +1468,15 @@ public VirtualMachineScaleSetImpl withoutUserAssignedManagedServiceIdentity(Stri\n     // Create Update specific methods\n     //\n     @Override\n-    protected void beforeCreating() {\n+    protected Mono<Void> beforeCreating() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc2OTkzMw==", "bodyText": "Change it back, and use non-blocking chaining in another way.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r394769933", "createdAt": "2020-03-19T03:24:52Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-compute/src/main/java/com/azure/management/compute/implementation/VirtualMachineScaleSetImpl.java", "diffHunk": "@@ -1468,14 +1468,15 @@ public VirtualMachineScaleSetImpl withoutUserAssignedManagedServiceIdentity(Stri\n     // Create Update specific methods\n     //\n     @Override\n-    protected void beforeCreating() {\n+    protected Mono<Void> beforeCreating() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI3MzQwOQ=="}, "originalCommit": {"oid": "f73f7ab2b09e332ab6dab2b1ff92d6f6b15ae0c4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTAyNzQxOnYy", "diffSide": "LEFT", "path": "azure-mgmt-network/src/main/java/com/azure/management/network/implementation/RouteTableImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNDozMToxM1rOF5HcvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTowMzo1MFrOF5HxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNTE5Nw==", "bodyText": "Is it called somewhere instead?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395435197", "createdAt": "2020-03-20T04:31:13Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-network/src/main/java/com/azure/management/network/implementation/RouteTableImpl.java", "diffHunk": "@@ -132,11 +132,6 @@ protected void beforeCreating() {\n         this.inner().withRoutes(innersFromWrappers(this.routes.values()));\n     }\n \n-    @Override\n-    protected void afterCreating() {\n-        initializeChildrenFromInner();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDQ0MA==", "bodyText": "The initializeChildrenFromInner is call before afterCreating in GroupableParentResourceImpl.createResourceAsync, https://github.com/azure/azure-libraries-for-java/blob/95bc556/azure-mgmt-resources/src/main/java/com/azure/management/resources/fluentcore/arm/models/implementation/GroupableParentResourceImpl.java#L57", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440440", "createdAt": "2020-03-20T05:03:50Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-network/src/main/java/com/azure/management/network/implementation/RouteTableImpl.java", "diffHunk": "@@ -132,11 +132,6 @@ protected void beforeCreating() {\n         this.inner().withRoutes(innersFromWrappers(this.routes.values()));\n     }\n \n-    @Override\n-    protected void afterCreating() {\n-        initializeChildrenFromInner();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNTE5Nw=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTAyOTk0OnYy", "diffSide": "LEFT", "path": "azure-mgmt-network/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNDozMzoyMVrOF5HeMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTowMzo1OVrOF5HxYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNTU2OA==", "bodyText": "Is it called somewhere instead?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395435568", "createdAt": "2020-03-20T04:33:21Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-network/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "diffHunk": "@@ -329,11 +327,6 @@ protected void beforeCreating() {\n         this.inner().withIpConfigurations(innersFromWrappers(this.ipConfigs.values()));\n     }\n \n-    @Override\n-    protected void afterCreating() {\n-        initializeChildrenFromInner();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDQ4Mg==", "bodyText": "same above.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440482", "createdAt": "2020-03-20T05:03:59Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-network/src/main/java/com/azure/management/network/implementation/VirtualNetworkGatewayImpl.java", "diffHunk": "@@ -329,11 +327,6 @@ protected void beforeCreating() {\n         this.inner().withIpConfigurations(innersFromWrappers(this.ipConfigs.values()));\n     }\n \n-    @Override\n-    protected void afterCreating() {\n-        initializeChildrenFromInner();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNTU2OA=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTAzMzY2OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNDozNjozMFrOF5HgWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTowNToxM1rOF5HyFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjEyMw==", "bodyText": "Would you let us know why it need synchronized. This method seems not sharing anything (and almost just a static method)?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395436123", "createdAt": "2020-03-20T04:36:30Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestBase.java", "diffHunk": "@@ -290,7 +290,7 @@ protected String baseUri() {\n         }\n     }\n \n-    protected RestClient buildRestClient(RestClientBuilder builder, boolean isMocked) {\n+    protected synchronized RestClient buildRestClient(RestClientBuilder builder, boolean isMocked) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDY2MQ==", "bodyText": "It call a static function in RetryPolicy, which will cause iterator error if not synchronized.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440661", "createdAt": "2020-03-20T05:05:13Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestBase.java", "diffHunk": "@@ -290,7 +290,7 @@ protected String baseUri() {\n         }\n     }\n \n-    protected RestClient buildRestClient(RestClientBuilder builder, boolean isMocked) {\n+    protected synchronized RestClient buildRestClient(RestClientBuilder builder, boolean isMocked) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjEyMw=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTAzNTQ0OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNDozODowM1rOF5HhWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjoyNjowMFrOF5IrHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjM3Nw==", "bodyText": "Same question. These are static method sharing nothing?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395436377", "createdAt": "2020-03-20T04:38:03Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java", "diffHunk": "@@ -19,7 +19,7 @@\n      *\n      * @param milliseconds time in milliseconds for which to sleep.\n      */\n-    public static void sleep(int milliseconds, boolean isRecordMode) {\n+    public synchronized static void sleep(int milliseconds, boolean isRecordMode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDkzNQ==", "bodyText": "Maybe this synchronized could be removed, I just add it to most static method, since they are dangerous in parallel test.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440935", "createdAt": "2020-03-20T05:06:51Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java", "diffHunk": "@@ -19,7 +19,7 @@\n      *\n      * @param milliseconds time in milliseconds for which to sleep.\n      */\n-    public static void sleep(int milliseconds, boolean isRecordMode) {\n+    public synchronized static void sleep(int milliseconds, boolean isRecordMode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjM3Nw=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1NTI2Mw==", "bodyText": "Removed some unnecessary synchronized.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395455263", "createdAt": "2020-03-20T06:26:00Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestUtilities.java", "diffHunk": "@@ -19,7 +19,7 @@\n      *\n      * @param milliseconds time in milliseconds for which to sleep.\n      */\n-    public static void sleep(int milliseconds, boolean isRecordMode) {\n+    public synchronized static void sleep(int milliseconds, boolean isRecordMode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjM3Nw=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTAzNzQ5OnYy", "diffSide": "LEFT", "path": "azure-samples/src/main/java/com/azure/management/network/samples/ManageVirtualNetworkAsync.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNDo0MDoyMVrOF5HitQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTozNToyNlrOF5IGsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjcyNQ==", "bodyText": "Eh... stdout also considered IO blocking operation?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395436725", "createdAt": "2020-03-20T04:40:21Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-samples/src/main/java/com/azure/management/network/samples/ManageVirtualNetworkAsync.java", "diffHunk": "@@ -131,15 +143,9 @@ public static boolean runSample(final Azure azure) {\n             ).map(indexable -> {\n                 if (indexable instanceof NetworkSecurityGroup) {\n                     NetworkSecurityGroup nsg = (NetworkSecurityGroup) indexable;\n-                    System.out.println(\"Created network security group\");\n-                    // Print the network security group\n-                    Utils.print(nsg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NDAzNA==", "bodyText": "Blocking operation is in the Utils.print, it call some get function.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395444034", "createdAt": "2020-03-20T05:25:08Z", "author": {"login": "ChenTanyi"}, "path": "azure-samples/src/main/java/com/azure/management/network/samples/ManageVirtualNetworkAsync.java", "diffHunk": "@@ -131,15 +143,9 @@ public static boolean runSample(final Azure azure) {\n             ).map(indexable -> {\n                 if (indexable instanceof NetworkSecurityGroup) {\n                     NetworkSecurityGroup nsg = (NetworkSecurityGroup) indexable;\n-                    System.out.println(\"Created network security group\");\n-                    // Print the network security group\n-                    Utils.print(nsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjcyNQ=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NTkzOQ==", "bodyText": "Got it.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395445939", "createdAt": "2020-03-20T05:35:26Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-samples/src/main/java/com/azure/management/network/samples/ManageVirtualNetworkAsync.java", "diffHunk": "@@ -131,15 +143,9 @@ public static boolean runSample(final Azure azure) {\n             ).map(indexable -> {\n                 if (indexable instanceof NetworkSecurityGroup) {\n                     NetworkSecurityGroup nsg = (NetworkSecurityGroup) indexable;\n-                    System.out.println(\"Created network security group\");\n-                    // Print the network security group\n-                    Utils.print(nsg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQzNjcyNQ=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTA1OTg4OnYy", "diffSide": "RIGHT", "path": "azure-samples/src/main/java/com/azure/management/samples/Utils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTowMTo1NFrOF5HwAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjoxMzoxNlrOF5IhaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDEyOA==", "bodyText": "There is a Collectors.joining as well.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395440128", "createdAt": "2020-03-20T05:01:54Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-samples/src/main/java/com/azure/management/samples/Utils.java", "diffHunk": "@@ -463,8 +463,8 @@ public static void print(Vault vault) {\n                 .append(\"\\n\\tAccess policies: \");\n         for (AccessPolicy accessPolicy : vault.accessPolicies()) {\n             info.append(\"\\n\\t\\tIdentity:\").append(accessPolicy.objectId())\n-                    .append(\"\\n\\t\\tKey permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getKeys()))\n-                    .append(\"\\n\\t\\tSecret permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getSecrets()));\n+                    .append(\"\\n\\t\\tKey permissions: \").append(String.join(\", \", accessPolicy.permissions().getKeys().stream().map(key -> key.toString()).collect(Collectors.toList())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NDg0MQ==", "bodyText": "I'll test it later.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395444841", "createdAt": "2020-03-20T05:29:00Z", "author": {"login": "ChenTanyi"}, "path": "azure-samples/src/main/java/com/azure/management/samples/Utils.java", "diffHunk": "@@ -463,8 +463,8 @@ public static void print(Vault vault) {\n                 .append(\"\\n\\tAccess policies: \");\n         for (AccessPolicy accessPolicy : vault.accessPolicies()) {\n             info.append(\"\\n\\t\\tIdentity:\").append(accessPolicy.objectId())\n-                    .append(\"\\n\\t\\tKey permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getKeys()))\n-                    .append(\"\\n\\t\\tSecret permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getSecrets()));\n+                    .append(\"\\n\\t\\tKey permissions: \").append(String.join(\", \", accessPolicy.permissions().getKeys().stream().map(key -> key.toString()).collect(Collectors.toList())))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDEyOA=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0NTkxOA==", "bodyText": "No need to change now. Just a heads-up.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395445918", "createdAt": "2020-03-20T05:35:16Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-samples/src/main/java/com/azure/management/samples/Utils.java", "diffHunk": "@@ -463,8 +463,8 @@ public static void print(Vault vault) {\n                 .append(\"\\n\\tAccess policies: \");\n         for (AccessPolicy accessPolicy : vault.accessPolicies()) {\n             info.append(\"\\n\\t\\tIdentity:\").append(accessPolicy.objectId())\n-                    .append(\"\\n\\t\\tKey permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getKeys()))\n-                    .append(\"\\n\\t\\tSecret permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getSecrets()));\n+                    .append(\"\\n\\t\\tKey permissions: \").append(String.join(\", \", accessPolicy.permissions().getKeys().stream().map(key -> key.toString()).collect(Collectors.toList())))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDEyOA=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1Mjc3Nw==", "bodyText": "I've added it for test, since it could shorten the code.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1079#discussion_r395452777", "createdAt": "2020-03-20T06:13:16Z", "author": {"login": "ChenTanyi"}, "path": "azure-samples/src/main/java/com/azure/management/samples/Utils.java", "diffHunk": "@@ -463,8 +463,8 @@ public static void print(Vault vault) {\n                 .append(\"\\n\\tAccess policies: \");\n         for (AccessPolicy accessPolicy : vault.accessPolicies()) {\n             info.append(\"\\n\\t\\tIdentity:\").append(accessPolicy.objectId())\n-                    .append(\"\\n\\t\\tKey permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getKeys()))\n-                    .append(\"\\n\\t\\tSecret permissions: \").append(Joiner.on(\", \").join(accessPolicy.permissions().getSecrets()));\n+                    .append(\"\\n\\t\\tKey permissions: \").append(String.join(\", \", accessPolicy.permissions().getKeys().stream().map(key -> key.toString()).collect(Collectors.toList())))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MDEyOA=="}, "originalCommit": {"oid": "b6936fc58e60b99786d01a5bcbafa59ee9ce0e0e"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2500, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}