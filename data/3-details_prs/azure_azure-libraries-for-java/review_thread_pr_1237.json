{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NDU4ODc3", "number": 1237, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjo1MDo0NlrOEOq34Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjozOTo0OVrOEO8LUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODE3OTUzOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/test/java/com/microsoft/azure/management/resources/implementation/TypeSerializationTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjo1MDo0NlrOGx8lrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMjo1NlrOGybeTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNjA5Mw==", "bodyText": "This is not valid change as template got removed from return type. Need to check with @weidongxu-microsoft  if we can have alternative inner classes.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455026093", "createdAt": "2020-07-15T12:50:46Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-resources/src/test/java/com/microsoft/azure/management/resources/implementation/TypeSerializationTests.java", "diffHunk": "@@ -29,7 +29,7 @@ private static DeploymentInner createRequestFromInner(DeploymentImpl deployment)\n         DeploymentInner inner = new DeploymentInner()\n                 .withProperties(new DeploymentProperties());\n         inner.properties().withMode(deployment.mode());\n-        inner.properties().withTemplate(deployment.template());\n+        inner.properties().withTemplate(\"{\\\"$schema\\\":\\\"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\\\",\\\"contentVersion\\\":\\\"1.0.0.0\\\",\\\"parameters\\\":{\\\"vnetName\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"VNet2\\\",\\\"metadata\\\":{\\\"description\\\":\\\"VNet name\\\"}},\\\"vnetAddressPrefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.0.0/16\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Address prefix\\\"}},\\\"subnet1Prefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.0.0/24\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 1 Prefix\\\"}},\\\"subnet1Name\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"Subnet1\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 1 Name\\\"}},\\\"subnet2Prefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.1.0/24\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 2 Prefix\\\"}},\\\"subnet2Name\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"Subnet222\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 2 Name\\\"}}},\\\"variables\\\":{\\\"apiVersion\\\":\\\"2015-06-15\\\"},\\\"resources\\\":[{\\\"apiVersion\\\":\\\"[variables('apiVersion')]\\\",\\\"type\\\":\\\"Microsoft.Network/virtualNetworks\\\",\\\"name\\\":\\\"[parameters('vnetName')]\\\",\\\"location\\\":\\\"[resourceGroup().location]\\\",\\\"properties\\\":{\\\"addressSpace\\\":{\\\"addressPrefixes\\\":[\\\"[parameters('vnetAddressPrefix')]\\\"]},\\\"subnets\\\":[{\\\"name\\\":\\\"[parameters('subnet1Name')]\\\",\\\"properties\\\":{\\\"addressPrefix\\\":\\\"[parameters('subnet1Prefix')]\\\"}},{\\\"name\\\":\\\"[parameters('subnet2Name')]\\\",\\\"properties\\\":{\\\"addressPrefix\\\":\\\"[parameters('subnet2Prefix')]\\\"}}]}}]}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQzMTQ3MQ==", "bodyText": "This test is only for request POJO.\nIf you have problem with it, you can comment out the test. I will try fix it after your PR.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455431471", "createdAt": "2020-07-15T23:57:51Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/test/java/com/microsoft/azure/management/resources/implementation/TypeSerializationTests.java", "diffHunk": "@@ -29,7 +29,7 @@ private static DeploymentInner createRequestFromInner(DeploymentImpl deployment)\n         DeploymentInner inner = new DeploymentInner()\n                 .withProperties(new DeploymentProperties());\n         inner.properties().withMode(deployment.mode());\n-        inner.properties().withTemplate(deployment.template());\n+        inner.properties().withTemplate(\"{\\\"$schema\\\":\\\"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\\\",\\\"contentVersion\\\":\\\"1.0.0.0\\\",\\\"parameters\\\":{\\\"vnetName\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"VNet2\\\",\\\"metadata\\\":{\\\"description\\\":\\\"VNet name\\\"}},\\\"vnetAddressPrefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.0.0/16\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Address prefix\\\"}},\\\"subnet1Prefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.0.0/24\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 1 Prefix\\\"}},\\\"subnet1Name\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"Subnet1\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 1 Name\\\"}},\\\"subnet2Prefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.1.0/24\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 2 Prefix\\\"}},\\\"subnet2Name\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"Subnet222\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 2 Name\\\"}}},\\\"variables\\\":{\\\"apiVersion\\\":\\\"2015-06-15\\\"},\\\"resources\\\":[{\\\"apiVersion\\\":\\\"[variables('apiVersion')]\\\",\\\"type\\\":\\\"Microsoft.Network/virtualNetworks\\\",\\\"name\\\":\\\"[parameters('vnetName')]\\\",\\\"location\\\":\\\"[resourceGroup().location]\\\",\\\"properties\\\":{\\\"addressSpace\\\":{\\\"addressPrefixes\\\":[\\\"[parameters('vnetAddressPrefix')]\\\"]},\\\"subnets\\\":[{\\\"name\\\":\\\"[parameters('subnet1Name')]\\\",\\\"properties\\\":{\\\"addressPrefix\\\":\\\"[parameters('subnet1Prefix')]\\\"}},{\\\"name\\\":\\\"[parameters('subnet2Name')]\\\",\\\"properties\\\":{\\\"addressPrefix\\\":\\\"[parameters('subnet2Prefix')]\\\"}}]}}]}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNjA5Mw=="}, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMjExMQ==", "bodyText": "Marked by Ignore to skip for now.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455532111", "createdAt": "2020-07-16T06:12:56Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-resources/src/test/java/com/microsoft/azure/management/resources/implementation/TypeSerializationTests.java", "diffHunk": "@@ -29,7 +29,7 @@ private static DeploymentInner createRequestFromInner(DeploymentImpl deployment)\n         DeploymentInner inner = new DeploymentInner()\n                 .withProperties(new DeploymentProperties());\n         inner.properties().withMode(deployment.mode());\n-        inner.properties().withTemplate(deployment.template());\n+        inner.properties().withTemplate(\"{\\\"$schema\\\":\\\"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\\\",\\\"contentVersion\\\":\\\"1.0.0.0\\\",\\\"parameters\\\":{\\\"vnetName\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"VNet2\\\",\\\"metadata\\\":{\\\"description\\\":\\\"VNet name\\\"}},\\\"vnetAddressPrefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.0.0/16\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Address prefix\\\"}},\\\"subnet1Prefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.0.0/24\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 1 Prefix\\\"}},\\\"subnet1Name\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"Subnet1\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 1 Name\\\"}},\\\"subnet2Prefix\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"10.0.1.0/24\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 2 Prefix\\\"}},\\\"subnet2Name\\\":{\\\"type\\\":\\\"string\\\",\\\"defaultValue\\\":\\\"Subnet222\\\",\\\"metadata\\\":{\\\"description\\\":\\\"Subnet 2 Name\\\"}}},\\\"variables\\\":{\\\"apiVersion\\\":\\\"2015-06-15\\\"},\\\"resources\\\":[{\\\"apiVersion\\\":\\\"[variables('apiVersion')]\\\",\\\"type\\\":\\\"Microsoft.Network/virtualNetworks\\\",\\\"name\\\":\\\"[parameters('vnetName')]\\\",\\\"location\\\":\\\"[resourceGroup().location]\\\",\\\"properties\\\":{\\\"addressSpace\\\":{\\\"addressPrefixes\\\":[\\\"[parameters('vnetAddressPrefix')]\\\"]},\\\"subnets\\\":[{\\\"name\\\":\\\"[parameters('subnet1Name')]\\\",\\\"properties\\\":{\\\"addressPrefix\\\":\\\"[parameters('subnet1Prefix')]\\\"}},{\\\"name\\\":\\\"[parameters('subnet2Name')]\\\",\\\"properties\\\":{\\\"addressPrefix\\\":\\\"[parameters('subnet2Prefix')]\\\"}}]}}]}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyNjA5Mw=="}, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDcyMzc1OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/DeploymentImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMDowMDozMFrOGyVYWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMzoxMVrOGyberg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQzMjI4Mg==", "bodyText": "If deleting this method does not affect compilation, you can delete it.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455432282", "createdAt": "2020-07-16T00:00:30Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/DeploymentImpl.java", "diffHunk": "@@ -355,16 +354,6 @@ public DeploymentImpl beginCreate() {\n \n     @Override\n     public Observable<Deployment> updateResourceAsync() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMjIwNg==", "bodyText": "Deleted.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455532206", "createdAt": "2020-07-16T06:13:11Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/DeploymentImpl.java", "diffHunk": "@@ -355,16 +354,6 @@ public DeploymentImpl beginCreate() {\n \n     @Override\n     public Observable<Deployment> updateResourceAsync() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQzMjI4Mg=="}, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDcyODA2OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/DeploymentImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMDowMjoyN1rOGyVarw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoxMzoyOFrOGybe7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQzMjg3OQ==", "bodyText": "Maybe better name it as deploymentCreateUpdateParameters. And you need to reset it after create/update (so next update will start clean).\nFor update, you might check if some fields need to be copied from inner() to this object (region etc.).", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455432879", "createdAt": "2020-07-16T00:02:27Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/DeploymentImpl.java", "diffHunk": "@@ -58,13 +58,15 @@\n     private Creatable<ResourceGroup> creatableResourceGroup;\n     private ObjectMapper objectMapper;\n     private DeploymentWhatIf deploymentWhatIf;\n+    private DeploymentInner deploymentInner;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzMjI3MA==", "bodyText": "Done.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455532270", "createdAt": "2020-07-16T06:13:28Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/DeploymentImpl.java", "diffHunk": "@@ -58,13 +58,15 @@\n     private Creatable<ResourceGroup> creatableResourceGroup;\n     private ObjectMapper objectMapper;\n     private DeploymentWhatIf deploymentWhatIf;\n+    private DeploymentInner deploymentInner;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQzMjg3OQ=="}, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTAxNDU4OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjozOTo0OVrOGyYAnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNTo0MDowMlrOGya1Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3NTM1OQ==", "bodyText": "No. This losses information.\nIf service do this intentionally, the right approach is to had GenericResource wraps GenericResourceExpandedInner (when by get, there additional properties be null).", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455475359", "createdAt": "2020-07-16T02:39:49Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "diffHunk": "@@ -35,29 +37,37 @@\n         ResourceManager>\n     implements GenericResources {\n \n-    GenericResourcesImpl(ResourceManager resourceManager) {\n+    private PagedListConverter<GenericResourceExpandedInner, GenericResource> converter;\n+\n+    GenericResourcesImpl(final ResourceManager resourceManager) {\n         super(resourceManager.inner().resources(), resourceManager);\n+        converter = new PagedListConverter<GenericResourceExpandedInner, GenericResource>() {\n+            @Override\n+            public Observable<GenericResource> typeConvertAsync(GenericResourceExpandedInner inner) {\n+                return Observable.just((GenericResource) new GenericResourceImpl(inner.name(), inner, manager()));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3NTgzMA==", "bodyText": "It might be OK if we determined not to maintain it anymore...", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455475830", "createdAt": "2020-07-16T02:41:34Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "diffHunk": "@@ -35,29 +37,37 @@\n         ResourceManager>\n     implements GenericResources {\n \n-    GenericResourcesImpl(ResourceManager resourceManager) {\n+    private PagedListConverter<GenericResourceExpandedInner, GenericResource> converter;\n+\n+    GenericResourcesImpl(final ResourceManager resourceManager) {\n         super(resourceManager.inner().resources(), resourceManager);\n+        converter = new PagedListConverter<GenericResourceExpandedInner, GenericResource>() {\n+            @Override\n+            public Observable<GenericResource> typeConvertAsync(GenericResourceExpandedInner inner) {\n+                return Observable.just((GenericResource) new GenericResourceImpl(inner.name(), inner, manager()));\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3NTM1OQ=="}, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxMTA2Ng==", "bodyText": "Maybe it is OK.\nEven if we later need to expose createdTime etc., we can hack by first check inner instanceof GenericResourceExpandedInner , if yet, cast and return value, if not, return null.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455511066", "createdAt": "2020-07-16T05:01:14Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "diffHunk": "@@ -35,29 +37,37 @@\n         ResourceManager>\n     implements GenericResources {\n \n-    GenericResourcesImpl(ResourceManager resourceManager) {\n+    private PagedListConverter<GenericResourceExpandedInner, GenericResource> converter;\n+\n+    GenericResourcesImpl(final ResourceManager resourceManager) {\n         super(resourceManager.inner().resources(), resourceManager);\n+        converter = new PagedListConverter<GenericResourceExpandedInner, GenericResource>() {\n+            @Override\n+            public Observable<GenericResource> typeConvertAsync(GenericResourceExpandedInner inner) {\n+                return Observable.just((GenericResource) new GenericResourceImpl(inner.name(), inner, manager()));\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3NTM1OQ=="}, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUxODAyNQ==", "bodyText": "Now I'm not sure if we should expose filter/expand in APIs. For the solution, I agree we can do in that way by checking instanceof.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455518025", "createdAt": "2020-07-16T05:27:17Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "diffHunk": "@@ -35,29 +37,37 @@\n         ResourceManager>\n     implements GenericResources {\n \n-    GenericResourcesImpl(ResourceManager resourceManager) {\n+    private PagedListConverter<GenericResourceExpandedInner, GenericResource> converter;\n+\n+    GenericResourcesImpl(final ResourceManager resourceManager) {\n         super(resourceManager.inner().resources(), resourceManager);\n+        converter = new PagedListConverter<GenericResourceExpandedInner, GenericResource>() {\n+            @Override\n+            public Observable<GenericResource> typeConvertAsync(GenericResourceExpandedInner inner) {\n+                return Observable.just((GenericResource) new GenericResourceImpl(inner.name(), inner, manager()));\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3NTM1OQ=="}, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUyMTYxMA==", "bodyText": "Generally speaking, we should expose as overloaded method. But for track1, I think we will not expose them, until requested by customer.\nFor track2, I think the question is whether we expose a simple string (and let user compose it based on description), or try standardize it a bit.\nWe likely need to gather more info on existing ones.\nE.g. description on compute\n     * @param filter The filter to apply to the operation. Allowed values are 'startswith(instanceView/statuses/code,\n     *     'PowerState') eq true', 'properties/latestModelApplied eq true', 'properties/latestModelApplied eq false'.\n\nSo I think most is using odata $filter $expand. We need first investigate on existing support on odata.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1237#discussion_r455521610", "createdAt": "2020-07-16T05:40:02Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/implementation/GenericResourcesImpl.java", "diffHunk": "@@ -35,29 +37,37 @@\n         ResourceManager>\n     implements GenericResources {\n \n-    GenericResourcesImpl(ResourceManager resourceManager) {\n+    private PagedListConverter<GenericResourceExpandedInner, GenericResource> converter;\n+\n+    GenericResourcesImpl(final ResourceManager resourceManager) {\n         super(resourceManager.inner().resources(), resourceManager);\n+        converter = new PagedListConverter<GenericResourceExpandedInner, GenericResource>() {\n+            @Override\n+            public Observable<GenericResource> typeConvertAsync(GenericResourceExpandedInner inner) {\n+                return Observable.just((GenericResource) new GenericResourceImpl(inner.name(), inner, manager()));\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ3NTM1OQ=="}, "originalCommit": {"oid": "4708f4a57d0f22ce7eaca45038855182452c1d2a"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2557, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}