{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NjEwMDg2", "number": 1099, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozNDozM1rODnxIHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozNDozM1rODnxIHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDI1OTUxOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-keyvault/src/main/java/com/microsoft/azure/management/keyvault/implementation/SecretImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozNDozM1rOF19AVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTo0OTozOFrOF19dOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODM1OA==", "bodyText": "What would be the difference if we create SecretBundle this way?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1099#discussion_r392118358", "createdAt": "2020-03-13T09:34:33Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-keyvault/src/main/java/com/microsoft/azure/management/keyvault/implementation/SecretImpl.java", "diffHunk": "@@ -97,7 +97,16 @@ public boolean managed() {\n \n                     @Override\n                     protected ServiceFuture<SecretBundle> callAsync() {\n-                        return vault.client().getSecretAsync(secretItem.identifier().identifier(), null);\n+                        if (secretItem.attributes().enabled()) {\n+                            return vault.client().getSecretAsync(secretItem.identifier().identifier(), null);\n+                        } else {\n+                            SecretBundle secretBundle = new SecretBundle()\n+                                    .withId(secretItem.id())\n+                                    .withAttributes(secretItem.attributes())\n+                                    .withContentType(secretItem.contentType())\n+                                    .withTags(secretItem.tags());\n+                            return ServiceFuture.fromBody(Observable.just(secretBundle), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d68b9341b450c56dc3cdbcd01d383e275c4bcb59"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyMDQwNQ==", "bodyText": "The property secretBundle.value() will be NULL. For the enabled secrets, value will be returned by server side.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1099#discussion_r392120405", "createdAt": "2020-03-13T09:38:43Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-keyvault/src/main/java/com/microsoft/azure/management/keyvault/implementation/SecretImpl.java", "diffHunk": "@@ -97,7 +97,16 @@ public boolean managed() {\n \n                     @Override\n                     protected ServiceFuture<SecretBundle> callAsync() {\n-                        return vault.client().getSecretAsync(secretItem.identifier().identifier(), null);\n+                        if (secretItem.attributes().enabled()) {\n+                            return vault.client().getSecretAsync(secretItem.identifier().identifier(), null);\n+                        } else {\n+                            SecretBundle secretBundle = new SecretBundle()\n+                                    .withId(secretItem.id())\n+                                    .withAttributes(secretItem.attributes())\n+                                    .withContentType(secretItem.contentType())\n+                                    .withTags(secretItem.tags());\n+                            return ServiceFuture.fromBody(Observable.just(secretBundle), null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODM1OA=="}, "originalCommit": {"oid": "d68b9341b450c56dc3cdbcd01d383e275c4bcb59"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyMjg4Ng==", "bodyText": "That probably is acceptable. From our API user can know it is disabled, correct?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1099#discussion_r392122886", "createdAt": "2020-03-13T09:43:48Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-keyvault/src/main/java/com/microsoft/azure/management/keyvault/implementation/SecretImpl.java", "diffHunk": "@@ -97,7 +97,16 @@ public boolean managed() {\n \n                     @Override\n                     protected ServiceFuture<SecretBundle> callAsync() {\n-                        return vault.client().getSecretAsync(secretItem.identifier().identifier(), null);\n+                        if (secretItem.attributes().enabled()) {\n+                            return vault.client().getSecretAsync(secretItem.identifier().identifier(), null);\n+                        } else {\n+                            SecretBundle secretBundle = new SecretBundle()\n+                                    .withId(secretItem.id())\n+                                    .withAttributes(secretItem.attributes())\n+                                    .withContentType(secretItem.contentType())\n+                                    .withTags(secretItem.tags());\n+                            return ServiceFuture.fromBody(Observable.just(secretBundle), null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODM1OA=="}, "originalCommit": {"oid": "d68b9341b450c56dc3cdbcd01d383e275c4bcb59"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjEyNTc1Mg==", "bodyText": "I update the comments at Secret interface. Meanwhile, the status of enabled/disabled can be found via secret.attributes().enabled().", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1099#discussion_r392125752", "createdAt": "2020-03-13T09:49:38Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-keyvault/src/main/java/com/microsoft/azure/management/keyvault/implementation/SecretImpl.java", "diffHunk": "@@ -97,7 +97,16 @@ public boolean managed() {\n \n                     @Override\n                     protected ServiceFuture<SecretBundle> callAsync() {\n-                        return vault.client().getSecretAsync(secretItem.identifier().identifier(), null);\n+                        if (secretItem.attributes().enabled()) {\n+                            return vault.client().getSecretAsync(secretItem.identifier().identifier(), null);\n+                        } else {\n+                            SecretBundle secretBundle = new SecretBundle()\n+                                    .withId(secretItem.id())\n+                                    .withAttributes(secretItem.attributes())\n+                                    .withContentType(secretItem.contentType())\n+                                    .withTags(secretItem.tags());\n+                            return ServiceFuture.fromBody(Observable.just(secretBundle), null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODM1OA=="}, "originalCommit": {"oid": "d68b9341b450c56dc3cdbcd01d383e275c4bcb59"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2517, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}