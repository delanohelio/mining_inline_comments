{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNzE5ODUx", "number": 1057, "title": "feat: add test case use netty with system proxy", "bodyText": "", "createdAt": "2020-02-27T09:08:57Z", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1057", "merged": true, "mergeCommit": {"oid": "baa3a41b2df9a743aa373b5adbfb3a20d1183b76"}, "closed": true, "closedAt": "2020-02-27T09:34:02Z", "author": {"login": "ChenTanyi"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIXkDEAH2gAyMzgwNzE5ODUxOjc1NWVhZWIyZGVkMTI1NTdkM2U1MjM5NDAzM2QxMzNiYzFmMjdjMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIX7i-AH2gAyMzgwNzE5ODUxOmFmNjE3ZjMxYmRjNGE3NjVmZmMwZmRlNDk5ZjZmMmVjZDhlZTEzYWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "755eaeb2ded12557d3e52394033d133bc1f27c12", "author": {"user": {"login": "ChenTanyi", "name": "Tanyi Chen"}}, "url": "https://github.com/Azure/azure-libraries-for-java/commit/755eaeb2ded12557d3e52394033d133bc1f27c12", "committedDate": "2020-02-27T09:04:40Z", "message": "feat: add test case use netty with system proxy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTIxNjc1", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1057#pullrequestreview-365521675", "createdAt": "2020-02-27T09:21:49Z", "commit": {"oid": "755eaeb2ded12557d3e52394033d133bc1f27c12"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyMTo0OVrOFvKkcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOToyMzozOVrOFvKobQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMDU2Mg==", "bodyText": "http.proxyHost?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1057#discussion_r385000562", "createdAt": "2020-02-27T09:21:49Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestBase.java", "diffHunk": "@@ -224,6 +234,44 @@ public void afterTest() throws IOException {\n         interceptorManager.finalizeInterceptor();\n     }\n \n+    protected HttpClient generateHttpClientWithProxy(ProxyOptions proxyOptions) {\n+        NettyAsyncHttpClientBuilder clientBuilder = new NettyAsyncHttpClientBuilder();\n+        if (proxyOptions != null) {\n+            clientBuilder.proxy(proxyOptions);\n+        } else {\n+            try {\n+                System.setProperty(\"java.net.useSystemProxies\", \"true\");\n+                List<Proxy> proxies = ProxySelector.getDefault().select(new URI(AzureEnvironment.AZURE.getResourceManagerEndpoint()));\n+                if (!proxies.isEmpty()) {\n+                    for (Proxy proxy : proxies) {\n+                        if (proxy.address() instanceof InetSocketAddress) {\n+                            switch (proxy.type()) {\n+                                case HTTP:\n+                                    return clientBuilder.proxy(new ProxyOptions(ProxyOptions.Type.HTTP, (InetSocketAddress) proxy.address())).build();\n+                                case SOCKS:\n+                                    return clientBuilder.proxy(new ProxyOptions(ProxyOptions.Type.SOCKS5, (InetSocketAddress)proxy.address())).build();\n+                                default:\n+                            }\n+                        }\n+                    }\n+                }\n+                String host = null;\n+                int port = 0;\n+                if (System.getProperty(\"https.proxyHost\") != null && System.getProperty(\"https.proxyPort\") != null) {\n+                    host = System.getProperty(\"https.proxyHost\");\n+                    port = Integer.parseInt(System.getProperty(\"https.proxyPort\"));\n+                } else if (System.getProperty(\"http.proxyHost\") != null && System.getProperty(\"http.proxyPort\") != null) {\n+                    host = System.getProperty(\"https.proxyHost\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "755eaeb2ded12557d3e52394033d133bc1f27c12"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAwMTU4MQ==", "bodyText": "Why http/https both map to HTTP, not HTTPS?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1057#discussion_r385001581", "createdAt": "2020-02-27T09:23:39Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/TestBase.java", "diffHunk": "@@ -224,6 +234,44 @@ public void afterTest() throws IOException {\n         interceptorManager.finalizeInterceptor();\n     }\n \n+    protected HttpClient generateHttpClientWithProxy(ProxyOptions proxyOptions) {\n+        NettyAsyncHttpClientBuilder clientBuilder = new NettyAsyncHttpClientBuilder();\n+        if (proxyOptions != null) {\n+            clientBuilder.proxy(proxyOptions);\n+        } else {\n+            try {\n+                System.setProperty(\"java.net.useSystemProxies\", \"true\");\n+                List<Proxy> proxies = ProxySelector.getDefault().select(new URI(AzureEnvironment.AZURE.getResourceManagerEndpoint()));\n+                if (!proxies.isEmpty()) {\n+                    for (Proxy proxy : proxies) {\n+                        if (proxy.address() instanceof InetSocketAddress) {\n+                            switch (proxy.type()) {\n+                                case HTTP:\n+                                    return clientBuilder.proxy(new ProxyOptions(ProxyOptions.Type.HTTP, (InetSocketAddress) proxy.address())).build();\n+                                case SOCKS:\n+                                    return clientBuilder.proxy(new ProxyOptions(ProxyOptions.Type.SOCKS5, (InetSocketAddress)proxy.address())).build();\n+                                default:\n+                            }\n+                        }\n+                    }\n+                }\n+                String host = null;\n+                int port = 0;\n+                if (System.getProperty(\"https.proxyHost\") != null && System.getProperty(\"https.proxyPort\") != null) {\n+                    host = System.getProperty(\"https.proxyHost\");\n+                    port = Integer.parseInt(System.getProperty(\"https.proxyPort\"));\n+                } else if (System.getProperty(\"http.proxyHost\") != null && System.getProperty(\"http.proxyPort\") != null) {\n+                    host = System.getProperty(\"https.proxyHost\");\n+                    port = Integer.parseInt(System.getProperty(\"http.proxyPort\"));\n+                }\n+                if (host != null) {\n+                    clientBuilder.proxy(new ProxyOptions(ProxyOptions.Type.HTTP, new InetSocketAddress(host, port)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "755eaeb2ded12557d3e52394033d133bc1f27c12"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af617f31bdc4a765ffc0fde499f6f2ecd8ee13af", "author": {"user": {"login": "ChenTanyi", "name": "Tanyi Chen"}}, "url": "https://github.com/Azure/azure-libraries-for-java/commit/af617f31bdc4a765ffc0fde499f6f2ecd8ee13af", "committedDate": "2020-02-27T09:30:20Z", "message": "fix: name error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1400, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}