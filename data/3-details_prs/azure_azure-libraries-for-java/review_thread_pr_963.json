{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyOTY1NTY0", "number": 963, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNjowODo0NFrODYEk1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1ODozOFrODc5nvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTY3MzgzOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNjowODo0NFrOFduHZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNjowODo0NFrOFduHZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjcwODU4Mg==", "bodyText": "Need a bit more discussion on this interface, whether need to group into withCredential?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r366708582", "createdAt": "2020-01-15T06:08:44Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java", "diffHunk": "@@ -144,6 +148,11 @@ public RestClientBuilder withConfiguration(Configuration configuration) {\n         return this;\r\n     }\r\n \r\n+    public RestClientBuilder withClientId(String clientId) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ac5bab5fff36ab65afb8d2097c49eeda8c91ea5"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzA5ODM2OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNToxMzo0NFrOFd7pBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNToxMzo0NFrOFd7pBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkzMDE4Mg==", "bodyText": "The second part should be factor out and make it clear of the meaning.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r366930182", "createdAt": "2020-01-15T15:13:44Z", "author": {"login": "yaohaizh"}, "path": "azure-mgmt-resources/src/main/java/com/azure/management/RestClientBuilder.java", "diffHunk": "@@ -66,7 +69,8 @@ public RestClient buildClient() {\n         // Closest to API goes first, closest to wire goes last.\r\n         final List<HttpPipelinePolicy> policies = new ArrayList<>();\r\n         // TODO: Add UserAgent\r\n-        // TODO Add credential policy\r\n+        // policies.add(new UserAgentPolicy(\"test\", this.getClass().getPackage().getName(), this.getClass().getPackage().getImplementationVersion(), Configuration.getGlobalConfiguration()));\r\n+        policies.add(new BearerTokenAuthenticationPolicy(this.credential, (this.clientId == null ? \"\" : this.clientId) + \"/.default\"));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e28004c91665f3c73f9a29e2b48769a267d262"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjMwMzg1OnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1NzoyOVrOFlMTFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTozMzo1NlrOFlNYoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzEyNw==", "bodyText": "just int?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374543127", "createdAt": "2020-02-04T08:57:29Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java", "diffHunk": "@@ -37,7 +36,8 @@\n public class InterceptorManager {\n \n     private final static String RECORD_FOLDER = \"session-records/\";\n-    private static final String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static Integer HTTP_TEMPORARY_REDIRECT = 307; // HTTP Status Code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MTgwNg==", "bodyText": "The original one is int https://hc.apache.org/httpcomponents-core-4.4.x/httpcore/apidocs/org/apache/http/HttpStatus.html", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374551806", "createdAt": "2020-02-04T09:16:15Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java", "diffHunk": "@@ -37,7 +36,8 @@\n public class InterceptorManager {\n \n     private final static String RECORD_FOLDER = \"session-records/\";\n-    private static final String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static Integer HTTP_TEMPORARY_REDIRECT = 307; // HTTP Status Code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzEyNw=="}, "originalCommit": {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1ODQwNg==", "bodyText": "Got it. I mean just use int should be OK, no need for Integer (which could have problem when using ==).", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374558406", "createdAt": "2020-02-04T09:29:07Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java", "diffHunk": "@@ -37,7 +36,8 @@\n public class InterceptorManager {\n \n     private final static String RECORD_FOLDER = \"session-records/\";\n-    private static final String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static Integer HTTP_TEMPORARY_REDIRECT = 307; // HTTP Status Code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzEyNw=="}, "originalCommit": {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MDkyOA==", "bodyText": "Got it, I have seen the Integer.ParseInt, so I thought it would get Integer before.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374560928", "createdAt": "2020-02-04T09:33:56Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-resources/src/test/java/com/azure/management/resources/core/InterceptorManager.java", "diffHunk": "@@ -37,7 +36,8 @@\n public class InterceptorManager {\n \n     private final static String RECORD_FOLDER = \"session-records/\";\n-    private static final String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static String BODY_LOGGING = \"x-ms-body-logging\";\n+    private final static Integer HTTP_TEMPORARY_REDIRECT = 307; // HTTP Status Code", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzEyNw=="}, "originalCommit": {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjMwNzgyOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODo1ODozOFrOFlMVbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOTo1Mzo0MFrOFlOA0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzcyNg==", "bodyText": "Try see if we can have another solution? It seems not reasonable to change product code because of test reason.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374543726", "createdAt": "2020-02-04T08:58:38Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java", "diffHunk": "@@ -72,7 +72,8 @@ private String getDefaultScopeFromRequest(HttpRequest request) {\n \n     @Override\n     public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n-        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase())) {\n+        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase()) &&\n+            !\"localhost\".equals(context.getHttpRequest().getUrl().getHost().toLowerCase().split(\":\")[0])) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MTEwMg==", "bodyText": "I use it due to I thought the localhost should not be blocked even there is user use it in real request. And the request for localhost usually doesn't have https.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374551102", "createdAt": "2020-02-04T09:14:43Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java", "diffHunk": "@@ -72,7 +72,8 @@ private String getDefaultScopeFromRequest(HttpRequest request) {\n \n     @Override\n     public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n-        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase())) {\n+        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase()) &&\n+            !\"localhost\".equals(context.getHttpRequest().getUrl().getHost().toLowerCase().split(\":\")[0])) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzcyNg=="}, "originalCommit": {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU2MTgwMg==", "bodyText": "Yes, probably OK. Just check whether we could say use an overloaded BearerTokenPolicy for playback (or do we need Auth on playback at all?).", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374561802", "createdAt": "2020-02-04T09:35:43Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java", "diffHunk": "@@ -72,7 +72,8 @@ private String getDefaultScopeFromRequest(HttpRequest request) {\n \n     @Override\n     public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n-        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase())) {\n+        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase()) &&\n+            !\"localhost\".equals(context.getHttpRequest().getUrl().getHost().toLowerCase().split(\":\")[0])) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzcyNg=="}, "originalCommit": {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU3MTIxNw==", "bodyText": "I think we could add a skipAuthetication for restClientBuilder.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/963#discussion_r374571217", "createdAt": "2020-02-04T09:53:40Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-resources/src/main/java/com/azure/management/BearerTokenAuthenticationPolicy.java", "diffHunk": "@@ -72,7 +72,8 @@ private String getDefaultScopeFromRequest(HttpRequest request) {\n \n     @Override\n     public Mono<HttpResponse> process(HttpPipelineCallContext context, HttpPipelineNextPolicy next) {\n-        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase())) {\n+        if (\"http\".equals(context.getHttpRequest().getUrl().getProtocol().toLowerCase()) &&\n+            !\"localhost\".equals(context.getHttpRequest().getUrl().getHost().toLowerCase().split(\":\")[0])) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU0MzcyNg=="}, "originalCommit": {"oid": "47df65ab9bf0a6deb57b3f15016b48a329da2cd6"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2567, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}