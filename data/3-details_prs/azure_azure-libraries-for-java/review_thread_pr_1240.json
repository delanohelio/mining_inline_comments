{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0ODUxNjAz", "number": 1240, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTowNjoxNFrOEQ4_yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTowNjoxNFrOEQ4_yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTQ2NTA1OnYy", "diffSide": "LEFT", "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/utils/AuxiliaryCredentialsInterceptor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTowNjoxNFrOG1S2oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjoyNDozOFrOG1UYbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzNjYwOQ==", "bodyText": "For DeploymentFailed, the LINKED_AUTHORIZATION_FAILED could be found via cloudError.details().get(index).code(). It would be better to traverse inside details() if the code() is not LINKED_AUTHORIZATION_FAILED, instead of deleting the check logic directly.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1240#discussion_r458536609", "createdAt": "2020-07-22T05:06:14Z", "author": {"login": "xseeseesee"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/utils/AuxiliaryCredentialsInterceptor.java", "diffHunk": "@@ -42,36 +42,21 @@ public AuxiliaryCredentialsInterceptor(AzureTokenCredentials... credentials) {\n     public Response intercept(Chain chain) throws IOException {\r\n         Response response = chain.proceed(chain.request());\r\n         if (!response.isSuccessful() && tokenCredentials != null && this.tokenCredentials.length > 0) {\r\n-            String content = errorBody(response.body());\r\n-            AzureJacksonAdapter jacksonAdapter = new AzureJacksonAdapter();\r\n-            CloudError cloudError = jacksonAdapter.deserialize(content, CloudError.class);\r\n-            if (cloudError != null && LINKED_AUTHORIZATION_FAILED.equals(cloudError.code())) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "324ee4839331958031d349d6f6964c6f866006d0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU2MDIxMQ==", "bodyText": "LINKED_AUTHORIZATION_FAILED needs to parse details().get(index).message(), rather than in code()", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1240#discussion_r458560211", "createdAt": "2020-07-22T06:20:53Z", "author": {"login": "ChenTanyi"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/utils/AuxiliaryCredentialsInterceptor.java", "diffHunk": "@@ -42,36 +42,21 @@ public AuxiliaryCredentialsInterceptor(AzureTokenCredentials... credentials) {\n     public Response intercept(Chain chain) throws IOException {\r\n         Response response = chain.proceed(chain.request());\r\n         if (!response.isSuccessful() && tokenCredentials != null && this.tokenCredentials.length > 0) {\r\n-            String content = errorBody(response.body());\r\n-            AzureJacksonAdapter jacksonAdapter = new AzureJacksonAdapter();\r\n-            CloudError cloudError = jacksonAdapter.deserialize(content, CloudError.class);\r\n-            if (cloudError != null && LINKED_AUTHORIZATION_FAILED.equals(cloudError.code())) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzNjYwOQ=="}, "originalCommit": {"oid": "324ee4839331958031d349d6f6964c6f866006d0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU2MTY0Ng==", "bodyText": "The problem maybe is how much we can trust service error message and its detail, and whether service might change it in future, without our knowledge. Hence it probably much safer to just go with the auxiliary if it is provided.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1240#discussion_r458561646", "createdAt": "2020-07-22T06:24:38Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-resources/src/main/java/com/microsoft/azure/management/resources/fluentcore/utils/AuxiliaryCredentialsInterceptor.java", "diffHunk": "@@ -42,36 +42,21 @@ public AuxiliaryCredentialsInterceptor(AzureTokenCredentials... credentials) {\n     public Response intercept(Chain chain) throws IOException {\r\n         Response response = chain.proceed(chain.request());\r\n         if (!response.isSuccessful() && tokenCredentials != null && this.tokenCredentials.length > 0) {\r\n-            String content = errorBody(response.body());\r\n-            AzureJacksonAdapter jacksonAdapter = new AzureJacksonAdapter();\r\n-            CloudError cloudError = jacksonAdapter.deserialize(content, CloudError.class);\r\n-            if (cloudError != null && LINKED_AUTHORIZATION_FAILED.equals(cloudError.code())) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzNjYwOQ=="}, "originalCommit": {"oid": "324ee4839331958031d349d6f6964c6f866006d0"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2559, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}