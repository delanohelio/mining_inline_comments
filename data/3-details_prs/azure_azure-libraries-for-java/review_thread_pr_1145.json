{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTU0MDU4", "number": 1145, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzoxMTo1M1rODrNH5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzoxNjo1MlrODrNQtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjMwMzcyOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-appservice/src/test/resources/session-records/canCRUDFunctionApp.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzoxMTo1M1rOF7aRPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzozMToxMFrOF7bF0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0MDcwMw==", "bodyText": "just curious, what's the query param expand=kerb used for", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1145#discussion_r397840703", "createdAt": "2020-03-25T13:11:53Z", "author": {"login": "yungezz"}, "path": "azure-mgmt-appservice/src/test/resources/session-records/canCRUDFunctionApp.json", "diffHunk": "@@ -189,7 +189,7 @@\n     }\n   }, {\n     \"Method\" : \"POST\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20a80a339784a19e24fa69b42dba094a23a83b42"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg1NDE2MA==", "bodyText": "kerb likely stands for \"Kerberos keys\", to include Kerberos keys in the response (when the storage account in AD identity-based authentication).\nPersonally never configured that...", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1145#discussion_r397854160", "createdAt": "2020-03-25T13:31:10Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-appservice/src/test/resources/session-records/canCRUDFunctionApp.json", "diffHunk": "@@ -189,7 +189,7 @@\n     }\n   }, {\n     \"Method\" : \"POST\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0MDcwMw=="}, "originalCommit": {"oid": "20a80a339784a19e24fa69b42dba094a23a83b42"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjMxMDgyOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-storage/src/main/java/com/azure/management/storage/Action.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzoxMzoxOFrOF7aVZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzoxOTo0MVrOF7al_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0MTc2Nw==", "bodyText": "why this new file not in preview generation? swagger change?", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1145#discussion_r397841767", "createdAt": "2020-03-25T13:13:18Z", "author": {"login": "yungezz"}, "path": "azure-mgmt-storage/src/main/java/com/azure/management/storage/Action.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.management.storage;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonValue;\n+\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20a80a339784a19e24fa69b42dba094a23a83b42"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0NjAxNQ==", "bodyText": "This is the fix on non-required constant. This enum got only one value. But since it is non-required, user could still choose between null and Action.ALLOW.\nIf it is treated as constant, the Allow will be directly inserted, and no user input needed, hence the class was not needed before.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1145#discussion_r397846015", "createdAt": "2020-03-25T13:19:41Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-storage/src/main/java/com/azure/management/storage/Action.java", "diffHunk": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.management.storage;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonValue;\n+\n+/**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0MTc2Nw=="}, "originalCommit": {"oid": "20a80a339784a19e24fa69b42dba094a23a83b42"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjMyNjMwOnYy", "diffSide": "RIGHT", "path": "azure-mgmt-storage/src/main/java/com/azure/management/storage/models/BlobServicesInner.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzoxNjo1MlrOF7ae3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDowODoxMlrOF72tnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0NDE4OQ==", "bodyText": "this raises a little concern, curious why order of params changed", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1145#discussion_r397844189", "createdAt": "2020-03-25T13:16:52Z", "author": {"login": "yungezz"}, "path": "azure-mgmt-storage/src/main/java/com/azure/management/storage/models/BlobServicesInner.java", "diffHunk": "@@ -181,23 +184,23 @@ public BlobServicePropertiesInner setServiceProperties(String resourceGroupName,\n     /**\r\n      * Gets the properties of a storage account\u2019s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\r\n      * \r\n-     * @param resourceGroupName \r\n-     * @param accountName \r\n+     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.\r\n+     * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.\r\n      * @throws IllegalArgumentException thrown if parameters fail the validation.\r\n      * @throws CloudException thrown if the request is rejected by server.\r\n      * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\r\n      */\r\n     @ServiceMethod(returns = ReturnType.SINGLE)\r\n     public Mono<SimpleResponse<BlobServicePropertiesInner>> getServicePropertiesWithResponseAsync(String resourceGroupName, String accountName) {\r\n         final String blobServicesName = \"default\";\r\n-        return service.getServiceProperties(this.client.getHost(), resourceGroupName, accountName, this.client.getSubscriptionId(), blobServicesName, this.client.getApiVersion());\r\n+        return service.getServiceProperties(this.client.getHost(), resourceGroupName, accountName, this.client.getApiVersion(), this.client.getSubscriptionId(), blobServicesName);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20a80a339784a19e24fa69b42dba094a23a83b42"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0NTQ2OA==", "bodyText": "change in modelerfour. currently there is no strict order on parameters, only non-required parameter after required parameter.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1145#discussion_r397845468", "createdAt": "2020-03-25T13:18:47Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-storage/src/main/java/com/azure/management/storage/models/BlobServicesInner.java", "diffHunk": "@@ -181,23 +184,23 @@ public BlobServicePropertiesInner setServiceProperties(String resourceGroupName,\n     /**\r\n      * Gets the properties of a storage account\u2019s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\r\n      * \r\n-     * @param resourceGroupName \r\n-     * @param accountName \r\n+     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.\r\n+     * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.\r\n      * @throws IllegalArgumentException thrown if parameters fail the validation.\r\n      * @throws CloudException thrown if the request is rejected by server.\r\n      * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\r\n      */\r\n     @ServiceMethod(returns = ReturnType.SINGLE)\r\n     public Mono<SimpleResponse<BlobServicePropertiesInner>> getServicePropertiesWithResponseAsync(String resourceGroupName, String accountName) {\r\n         final String blobServicesName = \"default\";\r\n-        return service.getServiceProperties(this.client.getHost(), resourceGroupName, accountName, this.client.getSubscriptionId(), blobServicesName, this.client.getApiVersion());\r\n+        return service.getServiceProperties(this.client.getHost(), resourceGroupName, accountName, this.client.getApiVersion(), this.client.getSubscriptionId(), blobServicesName);\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0NDE4OQ=="}, "originalCommit": {"oid": "20a80a339784a19e24fa69b42dba094a23a83b42"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMwNjcxNg==", "bodyText": "Also since apiVersion and subscriptionId is filled internally, the method signature remain unchanged as the public client method. (method is service is not public hence user cannot use them)", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1145#discussion_r398306716", "createdAt": "2020-03-26T04:08:12Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure-mgmt-storage/src/main/java/com/azure/management/storage/models/BlobServicesInner.java", "diffHunk": "@@ -181,23 +184,23 @@ public BlobServicePropertiesInner setServiceProperties(String resourceGroupName,\n     /**\r\n      * Gets the properties of a storage account\u2019s Blob service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\r\n      * \r\n-     * @param resourceGroupName \r\n-     * @param accountName \r\n+     * @param resourceGroupName The name of the resource group within the user's subscription. The name is case insensitive.\r\n+     * @param accountName The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.\r\n      * @throws IllegalArgumentException thrown if parameters fail the validation.\r\n      * @throws CloudException thrown if the request is rejected by server.\r\n      * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\r\n      */\r\n     @ServiceMethod(returns = ReturnType.SINGLE)\r\n     public Mono<SimpleResponse<BlobServicePropertiesInner>> getServicePropertiesWithResponseAsync(String resourceGroupName, String accountName) {\r\n         final String blobServicesName = \"default\";\r\n-        return service.getServiceProperties(this.client.getHost(), resourceGroupName, accountName, this.client.getSubscriptionId(), blobServicesName, this.client.getApiVersion());\r\n+        return service.getServiceProperties(this.client.getHost(), resourceGroupName, accountName, this.client.getApiVersion(), this.client.getSubscriptionId(), blobServicesName);\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg0NDE4OQ=="}, "originalCommit": {"oid": "20a80a339784a19e24fa69b42dba094a23a83b42"}, "originalPosition": 159}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2532, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}