{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MDU4MzEx", "number": 1151, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo0NjoyN1rODrkMeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo0NjoyN1rODrkMeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDA4Mzc4OnYy", "diffSide": "RIGHT", "path": "azure/src/test/java/com/azure/management/TestKubernetesCluster.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo0NjoyN1rOF7-w5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTo0OToxOFrOF7-4HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzODYzMQ==", "bodyText": "Please double check the recorded json for id and secret.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1151#discussion_r398438631", "createdAt": "2020-03-26T09:46:27Z", "author": {"login": "weidongxu-microsoft"}, "path": "azure/src/test/java/com/azure/management/TestKubernetesCluster.java", "diffHunk": "@@ -27,8 +35,21 @@ public KubernetesCluster createResource(KubernetesClusters kubernetesClusters) t\n         final String newName = \"aks\" + kubernetesClusters.manager().getSdkContext().randomResourceName(\"\", 8);\n         final String dnsPrefix = \"dns\" + newName;\n         final String agentPoolName = \"ap\" + newName;\n-        final String clientId = \"clientId\";\n-        final String secret = \"secret\";\n+        String clientId = \"clientId\";\n+        String secret = \"secret\";\n+\n+        // aks can use another azure auth rather than original client auth to access azure service.\n+        // Thus, set it to AZURE_AUTH_LOCATION_2 when you want.\n+        String envSecondaryServicePrincipal = System.getenv(\"AZURE_AUTH_LOCATION_2\");\n+        if (envSecondaryServicePrincipal == null || envSecondaryServicePrincipal.isEmpty() || !(new File(envSecondaryServicePrincipal).exists())) {\n+            envSecondaryServicePrincipal = System.getenv(\"AZURE_AUTH_LOCATION\");\n+        }\n+\n+        try {\n+            HashMap<String, String> credentialsMap = ParseAuthFile(envSecondaryServicePrincipal);\n+            clientId = credentialsMap.get(\"clientId\");\n+            secret = credentialsMap.get(\"clientSecret\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29e609574e2d51239c45fe0cfa35d413c7170be0"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MDIzOA==", "bodyText": "Yes, I've check for it. The clientId will be contained in record, and the secret will not. Secret is in the PUT body, and the record didn't record the request body.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1151#discussion_r398440238", "createdAt": "2020-03-26T09:48:57Z", "author": {"login": "ChenTanyi"}, "path": "azure/src/test/java/com/azure/management/TestKubernetesCluster.java", "diffHunk": "@@ -27,8 +35,21 @@ public KubernetesCluster createResource(KubernetesClusters kubernetesClusters) t\n         final String newName = \"aks\" + kubernetesClusters.manager().getSdkContext().randomResourceName(\"\", 8);\n         final String dnsPrefix = \"dns\" + newName;\n         final String agentPoolName = \"ap\" + newName;\n-        final String clientId = \"clientId\";\n-        final String secret = \"secret\";\n+        String clientId = \"clientId\";\n+        String secret = \"secret\";\n+\n+        // aks can use another azure auth rather than original client auth to access azure service.\n+        // Thus, set it to AZURE_AUTH_LOCATION_2 when you want.\n+        String envSecondaryServicePrincipal = System.getenv(\"AZURE_AUTH_LOCATION_2\");\n+        if (envSecondaryServicePrincipal == null || envSecondaryServicePrincipal.isEmpty() || !(new File(envSecondaryServicePrincipal).exists())) {\n+            envSecondaryServicePrincipal = System.getenv(\"AZURE_AUTH_LOCATION\");\n+        }\n+\n+        try {\n+            HashMap<String, String> credentialsMap = ParseAuthFile(envSecondaryServicePrincipal);\n+            clientId = credentialsMap.get(\"clientId\");\n+            secret = credentialsMap.get(\"clientSecret\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzODYzMQ=="}, "originalCommit": {"oid": "29e609574e2d51239c45fe0cfa35d413c7170be0"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0MDQ3Ng==", "bodyText": "Like previous in the AKS test.", "url": "https://github.com/Azure/azure-libraries-for-java/pull/1151#discussion_r398440476", "createdAt": "2020-03-26T09:49:18Z", "author": {"login": "ChenTanyi"}, "path": "azure/src/test/java/com/azure/management/TestKubernetesCluster.java", "diffHunk": "@@ -27,8 +35,21 @@ public KubernetesCluster createResource(KubernetesClusters kubernetesClusters) t\n         final String newName = \"aks\" + kubernetesClusters.manager().getSdkContext().randomResourceName(\"\", 8);\n         final String dnsPrefix = \"dns\" + newName;\n         final String agentPoolName = \"ap\" + newName;\n-        final String clientId = \"clientId\";\n-        final String secret = \"secret\";\n+        String clientId = \"clientId\";\n+        String secret = \"secret\";\n+\n+        // aks can use another azure auth rather than original client auth to access azure service.\n+        // Thus, set it to AZURE_AUTH_LOCATION_2 when you want.\n+        String envSecondaryServicePrincipal = System.getenv(\"AZURE_AUTH_LOCATION_2\");\n+        if (envSecondaryServicePrincipal == null || envSecondaryServicePrincipal.isEmpty() || !(new File(envSecondaryServicePrincipal).exists())) {\n+            envSecondaryServicePrincipal = System.getenv(\"AZURE_AUTH_LOCATION\");\n+        }\n+\n+        try {\n+            HashMap<String, String> credentialsMap = ParseAuthFile(envSecondaryServicePrincipal);\n+            clientId = credentialsMap.get(\"clientId\");\n+            secret = credentialsMap.get(\"clientSecret\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzODYzMQ=="}, "originalCommit": {"oid": "29e609574e2d51239c45fe0cfa35d413c7170be0"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2539, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}