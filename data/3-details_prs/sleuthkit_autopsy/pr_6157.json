{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMDM2ODQ0", "number": 6157, "title": "6660 - HEIC Ingest Module", "bodyText": "", "createdAt": "2020-08-04T22:11:39Z", "url": "https://github.com/sleuthkit/autopsy/pull/6157", "merged": true, "mergeCommit": {"oid": "f378b97b3e9548b8473795fd6ead11d9f66399a6"}, "closed": true, "closedAt": "2020-08-19T14:28:36Z", "author": {"login": "dannysmyda"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7tXy8AH2gAyNDYzMDM2ODQ0OjNmYjNlNjhjNmI5MzQ5YTc3ODgxNTFiZmY3ZjE1YjExY2JkOWY3Y2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAcHmsgFqTQ3MDQ4OTk4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3fb3e68c6b9349a7788151bff7f15b11cbd9f7cd", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/3fb3e68c6b9349a7788151bff7f15b11cbd9f7cd", "committedDate": "2020-08-04T21:19:20Z", "message": "Added support for HEIC files and merged EXIF into the Picture Analysis module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac62a079d051ef7e59744c0ccfe6d9b83ded3dbd", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/ac62a079d051ef7e59744c0ccfe6d9b83ded3dbd", "committedDate": "2020-08-05T16:48:25Z", "message": "Codacy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MDU4NzQz", "url": "https://github.com/sleuthkit/autopsy/pull/6157#pullrequestreview-465058743", "createdAt": "2020-08-11T13:23:05Z", "commit": {"oid": "ac62a079d051ef7e59744c0ccfe6d9b83ded3dbd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMzoyMzowNlrOG-3iyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMzoyMzowNlrOG-3iyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU3NDkyMg==", "bodyText": "Could you add a redirectError to processBuilder so that it will redirect the error to the temp directory for the file.  This will make debugging easier in the future when issues happen.", "url": "https://github.com/sleuthkit/autopsy/pull/6157#discussion_r468574922", "createdAt": "2020-08-11T13:23:06Z", "author": {"login": "markmckinnon"}, "path": "Core/src/org/sleuthkit/autopsy/modules/pictureanalysis/impls/HEICProcessor.java", "diffHunk": "@@ -0,0 +1,245 @@\n+/*\n+ * Autopsy Forensic Browser\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.modules.pictureanalysis.impls;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.Arrays;\n+import java.util.concurrent.TimeUnit;\n+\n+import java.io.BufferedInputStream;\n+import java.io.File;\n+import java.io.IOException;\n+\n+import java.nio.file.DirectoryIteratorException;\n+import java.nio.file.DirectoryStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.nio.file.StandardCopyOption;\n+import java.nio.file.attribute.BasicFileAttributes;\n+\n+import org.apache.commons.io.FilenameUtils;\n+\n+import org.openide.modules.InstalledFileLocator;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+import org.sleuthkit.autopsy.modules.pictureanalysis.spi.PictureProcessor;\n+import org.sleuthkit.autopsy.casemodule.Case;\n+import org.sleuthkit.autopsy.casemodule.NoCurrentCaseException;\n+import org.sleuthkit.autopsy.coreutils.ExecUtil;\n+import org.sleuthkit.autopsy.coreutils.FileUtil;\n+import org.sleuthkit.autopsy.coreutils.Logger;\n+import org.sleuthkit.autopsy.coreutils.PlatformUtil;\n+import org.sleuthkit.autopsy.ingest.IngestJobContext;\n+import org.sleuthkit.autopsy.ingest.IngestServices;\n+import org.sleuthkit.autopsy.ingest.ModuleContentEvent;\n+\n+import org.sleuthkit.datamodel.AbstractFile;\n+import org.sleuthkit.datamodel.DerivedFile;\n+import org.sleuthkit.datamodel.ReadContentInputStream;\n+import org.sleuthkit.datamodel.TskCoreException;\n+import org.sleuthkit.datamodel.TskData;\n+\n+/**\n+ * Processes HEIC containers by extracting and converting all internal photos to\n+ * JPEGs, which are then added as derived files of the container.\n+ *\n+ * All of this work is serviced by ImageMagick, a third party executable.\n+ */\n+@ServiceProvider(service = PictureProcessor.class)\n+public class HEICProcessor implements PictureProcessor {\n+\n+    private static final Logger logger = Logger.getLogger(HEICProcessor.class.getName());\n+\n+    private static final int EXIT_SUCCESS = 0;\n+    private static final String HEIC_MODULE_FOLDER = \"HEIC\";\n+    private static final long TIMEOUT_IN_MS = TimeUnit.MILLISECONDS.convert(2, TimeUnit.MINUTES);\n+\n+    // Windows location\n+    private static final String IMAGE_MAGICK_FOLDER = \"ImageMagick-7.0.10-Q16-HDRI\";\n+    private static final String IMAGE_MAGICK_EXE = \"magick.exe\";\n+\n+    // Actual path of ImageMagick on the system\n+    private final Path IMAGE_MAGICK_PATH;\n+\n+    public HEICProcessor() {\n+        IMAGE_MAGICK_PATH = findImageMagick();\n+\n+        if (IMAGE_MAGICK_PATH == null) {\n+            logger.log(Level.WARNING, \"ImageMagick executable not found. \"\n+                    + \"HEIC functionality will be automatically disabled.\");\n+        }\n+    }\n+\n+    private Path findImageMagick() {\n+        final Path windowsLocation = Paths.get(IMAGE_MAGICK_FOLDER, IMAGE_MAGICK_EXE);\n+        final Path linuxLocation = Paths.get(\"usr\", \"bin\", \"magick\");\n+        final Path macOsLocation = Paths.get(\"usr\", \"local\", \"bin\", \"magick\");\n+\n+        if (PlatformUtil.isWindowsOS() && PlatformUtil.is64BitJVM()) {\n+            final File locatedExec = InstalledFileLocator.getDefault().locate(windowsLocation.toString(),\n+                    HEICProcessor.class.getPackage().getName(), false);\n+\n+            return (locatedExec != null) ? locatedExec.toPath() : null;\n+        } else if (Files.isExecutable(linuxLocation) && !Files.isDirectory(linuxLocation)) {\n+            return linuxLocation;\n+        } else if (Files.isExecutable(macOsLocation) && !Files.isDirectory(macOsLocation)) {\n+            return macOsLocation;\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    /**\n+     * Give each file its own folder in module output. This makes scanning for\n+     * ImageMagick output fast.\n+     */\n+    private Path getModuleOutputFolder(AbstractFile file) throws NoCurrentCaseException {\n+        final String moduleOutputDirectory = Case.getCurrentCaseThrows().getModuleDirectory();\n+\n+        return Paths.get(moduleOutputDirectory,\n+                HEIC_MODULE_FOLDER,\n+                String.valueOf(file.getId()));\n+    }\n+\n+    /**\n+     * Create any sub directories within the module output folder.\n+     */\n+    private void createModuleOutputFolder(AbstractFile file) throws IOException, NoCurrentCaseException {\n+        final Path moduleOutputFolder = getModuleOutputFolder(file);\n+\n+        if (!Files.exists(moduleOutputFolder)) {\n+            Files.createDirectories(moduleOutputFolder);\n+        }\n+    }\n+\n+    @Override\n+    public void process(IngestJobContext context, AbstractFile file) {\n+        try {\n+            if (IMAGE_MAGICK_PATH == null) {\n+                return;\n+            }\n+            createModuleOutputFolder(file);\n+\n+            if (context.fileIngestIsCancelled()) {\n+                return;\n+            }\n+\n+            final Path localDiskCopy = extractToDisk(file);\n+\n+            convertToJPEG(context, localDiskCopy, file);\n+        } catch (IOException ex) {\n+            logger.log(Level.WARNING, \"I/O error encountered during HEIC photo processing.\", ex);\n+        } catch (TskCoreException ex) {\n+            logger.log(Level.SEVERE, \"Unable to add pictures as derived files.\", ex);\n+        } catch (NoCurrentCaseException ex) {\n+            logger.log(Level.WARNING, \"No open case!\", ex);\n+        }\n+    }\n+\n+    /**\n+     * Copies the HEIC container to disk in order to run ImageMagick.\n+     */\n+    private Path extractToDisk(AbstractFile heicFile) throws IOException {\n+        final String tempDir = Case.getCurrentCase().getTempDirectory();\n+        final String heicFileName = FileUtil.escapeFileName(heicFile.getName());\n+\n+        final Path localDiskCopy = Paths.get(tempDir, heicFileName);\n+\n+        try (BufferedInputStream heicInputStream = new BufferedInputStream(new ReadContentInputStream(heicFile))) {\n+            Files.copy(heicInputStream, localDiskCopy, StandardCopyOption.REPLACE_EXISTING);\n+            return localDiskCopy;\n+        }\n+    }\n+\n+    private void convertToJPEG(IngestJobContext context, Path localDiskCopy,\n+            AbstractFile heicFile) throws IOException, TskCoreException, NoCurrentCaseException {\n+\n+        // First step, run ImageMagick against this heic container.\n+        final Path moduleOutputFolder = getModuleOutputFolder(heicFile);\n+\n+        final String baseFileName = FilenameUtils.getBaseName(FileUtil.escapeFileName(heicFile.getName()));\n+        final Path outputFile = moduleOutputFolder.resolve(baseFileName + \".jpg\");\n+\n+        // ImageMagick will write the primary image to the output file.\n+        // Any additional images found within the HEIC container will be\n+        // formatted as fileName-1.jpg, fileName-2.jpg, etc.\n+        final ProcessBuilder processBuilder = new ProcessBuilder()\n+                .command(IMAGE_MAGICK_PATH.toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac62a079d051ef7e59744c0ccfe6d9b83ded3dbd"}, "originalPosition": 186}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa5980d8c25501ad121e7d2605dae2b13f9348eb", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/fa5980d8c25501ad121e7d2605dae2b13f9348eb", "committedDate": "2020-08-13T15:11:45Z", "message": "Removed the dynamic version of ImageMagick from thirdparty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e55010176e38c290a97d46c1307fe42a50c8d3a", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/3e55010176e38c290a97d46c1307fe42a50c8d3a", "committedDate": "2020-08-13T15:12:36Z", "message": "Added the portable version (static) of ImageMagick to thirdparty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "534c110513f9e402059cde14a27cfa25d44c2050", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/534c110513f9e402059cde14a27cfa25d44c2050", "committedDate": "2020-08-14T16:30:40Z", "message": "Updated the image magick folder name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f96f235766f176b9337060d9ebf2613d968ab40e", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/f96f235766f176b9337060d9ebf2613d968ab40e", "committedDate": "2020-08-18T05:50:54Z", "message": "Fixed linux and mac suport, updated build documentation and renamed the module to Picture Analyzer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf55f0ea0314723e56348d4668c7c32f3427653d", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/bf55f0ea0314723e56348d4668c7c32f3427653d", "committedDate": "2020-08-18T14:11:52Z", "message": "Updated IngestJobSettings with the module name change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6f5a166ba18bae0f4ce5f19f4882f8d89b15d55", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/b6f5a166ba18bae0f4ce5f19f4882f8d89b15d55", "committedDate": "2020-08-19T02:27:54Z", "message": "Added in error redirecting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNDg5OTgw", "url": "https://github.com/sleuthkit/autopsy/pull/6157#pullrequestreview-470489980", "createdAt": "2020-08-19T14:02:53Z", "commit": {"oid": "b6f5a166ba18bae0f4ce5f19f4882f8d89b15d55"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2907, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}