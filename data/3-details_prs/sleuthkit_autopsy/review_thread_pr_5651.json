{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NjY5MDMz", "number": 5651, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo1ODo0NVrODgxqDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzozMjo0NFrODgyaqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Njk0NjA1OnYy", "diffSide": "RIGHT", "path": "RecentActivity/src/org/sleuthkit/autopsy/recentactivity/ExtractRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo1ODo0NVrOFrKjfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzo0NDo0N1rOFrMJ3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwNjAxNA==", "bodyText": "good catch on realizing it can't be null but could be empty fixing an existing bug.\nHowever, I think we want a not empty here like you have below.", "url": "https://github.com/sleuthkit/autopsy/pull/5651#discussion_r380806014", "createdAt": "2020-02-18T16:58:45Z", "author": {"login": "wschaeferB"}, "path": "RecentActivity/src/org/sleuthkit/autopsy/recentactivity/ExtractRegistry.java", "diffHunk": "@@ -1238,7 +1250,7 @@ private void parseAdobeMRUList(String regFileName, AbstractFile regFile, Buffere\n                 line = line.trim();\n             }\n         }    \n-        if (bbartifacts != null) {\n+        if (bbartifacts.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f822c767be24f3f05f61dd214202e3c4e7a171f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMjIyMA==", "bodyText": "Fixed", "url": "https://github.com/sleuthkit/autopsy/pull/5651#discussion_r380832220", "createdAt": "2020-02-18T17:44:47Z", "author": {"login": "markmckinnon"}, "path": "RecentActivity/src/org/sleuthkit/autopsy/recentactivity/ExtractRegistry.java", "diffHunk": "@@ -1238,7 +1250,7 @@ private void parseAdobeMRUList(String regFileName, AbstractFile regFile, Buffere\n                 line = line.trim();\n             }\n         }    \n-        if (bbartifacts != null) {\n+        if (bbartifacts.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgwNjAxNA=="}, "originalCommit": {"oid": "5f822c767be24f3f05f61dd214202e3c4e7a171f"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NzA3MDUxOnYy", "diffSide": "RIGHT", "path": "RecentActivity/src/org/sleuthkit/autopsy/recentactivity/ExtractRegistry.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzozMjo0NFrOFrLwhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNzo0NDo1NlrOFrMKKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyNTczMw==", "bodyText": "The regFileName argument of all of these methods seems to be unused now, and could be removed.", "url": "https://github.com/sleuthkit/autopsy/pull/5651#discussion_r380825733", "createdAt": "2020-02-18T17:32:44Z", "author": {"login": "wschaeferB"}, "path": "RecentActivity/src/org/sleuthkit/autopsy/recentactivity/ExtractRegistry.java", "diffHunk": "@@ -1279,7 +1291,225 @@ private void parseMediaPlayerMRUList(String regFileName, AbstractFile regFile, B\n                 line = line.trim();\n             }\n         }\n-        if (bbartifacts != null) {\n+        if (!bbartifacts.isEmpty()) {\n+            postArtifacts(bbartifacts);\n+        }\n+    }\n+    \n+     /**\n+     * Create recently used artifacts to parse the regripper output\n+     * \n+     * @param regFileName name of the regripper output file\n+     * \n+     * @param regFile registry file the artifact is associated with\n+     * \n+     * @param reader buffered reader to parse adobemru records\n+     * \n+     * @throws FileNotFound and IOException\n+     */\n+    private void parseGenericMRUList(String regFileName, AbstractFile regFile, BufferedReader reader) throws FileNotFoundException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f822c767be24f3f05f61dd214202e3c4e7a171f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgzMjI5OQ==", "bodyText": "Removed", "url": "https://github.com/sleuthkit/autopsy/pull/5651#discussion_r380832299", "createdAt": "2020-02-18T17:44:56Z", "author": {"login": "markmckinnon"}, "path": "RecentActivity/src/org/sleuthkit/autopsy/recentactivity/ExtractRegistry.java", "diffHunk": "@@ -1279,7 +1291,225 @@ private void parseMediaPlayerMRUList(String regFileName, AbstractFile regFile, B\n                 line = line.trim();\n             }\n         }\n-        if (bbartifacts != null) {\n+        if (!bbartifacts.isEmpty()) {\n+            postArtifacts(bbartifacts);\n+        }\n+    }\n+    \n+     /**\n+     * Create recently used artifacts to parse the regripper output\n+     * \n+     * @param regFileName name of the regripper output file\n+     * \n+     * @param regFile registry file the artifact is associated with\n+     * \n+     * @param reader buffered reader to parse adobemru records\n+     * \n+     * @throws FileNotFound and IOException\n+     */\n+    private void parseGenericMRUList(String regFileName, AbstractFile regFile, BufferedReader reader) throws FileNotFoundException, IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDgyNTczMw=="}, "originalCommit": {"oid": "5f822c767be24f3f05f61dd214202e3c4e7a171f"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 735, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}