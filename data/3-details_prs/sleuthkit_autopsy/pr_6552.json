{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNzQ0NjM0", "number": 6552, "title": "6735 embedded file extractor retries", "bodyText": "", "createdAt": "2020-12-15T21:56:55Z", "url": "https://github.com/sleuthkit/autopsy/pull/6552", "merged": true, "mergeCommit": {"oid": "80b5291ed4f669102eb67b29a60555af36e1ad37"}, "closed": true, "closedAt": "2021-01-05T17:18:05Z", "author": {"login": "rcordovano"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj5uIvAH2gAyNTQwNzQ0NjM0OmJkMmI1MGQ1NmE1MTMyNTE5YWVlOTZiNzE1Y2Q5NGJjMTQ1MzI1NDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtOMqqAFqTU2MTk3NzQxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bd2b50d56a5132519aee96b715cd94bc14532547", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/bd2b50d56a5132519aee96b715cd94bc14532547", "committedDate": "2020-12-07T18:19:34Z", "message": "Initial changes for EFE retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59c1be114cad16e6c2f4a840f204902caff3b700", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/59c1be114cad16e6c2f4a840f204902caff3b700", "committedDate": "2020-12-08T21:45:58Z", "message": "Merge remote-tracking branch 'upstream/develop' into 6735-embedded-file-extractor-retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "230eec39a42434ff1ef9ac44afecd09a78703792", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/230eec39a42434ff1ef9ac44afecd09a78703792", "committedDate": "2020-12-09T22:06:59Z", "message": "Interim check in for EFE retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cb19bf4b9b561b2364c2378c036c8ca8bef4395", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/5cb19bf4b9b561b2364c2378c036c8ca8bef4395", "committedDate": "2020-12-10T16:46:40Z", "message": "Merge remote-tracking branch 'upstream/develop' into 6735-embedded-file-extractor-retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30f89ee797be572cf68e8b6a47d2a91da1192adf", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/30f89ee797be572cf68e8b6a47d2a91da1192adf", "committedDate": "2020-12-10T20:44:46Z", "message": "Merge remote-tracking branch 'upstream/develop' into 6735-embedded-file-extractor-retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bee3eeea94a33202ae190ed89cd002b135a9373", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/5bee3eeea94a33202ae190ed89cd002b135a9373", "committedDate": "2020-12-11T16:40:56Z", "message": "Merge remote-tracking branch 'upstream/develop' into 6735-embedded-file-extractor-retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f03643b59f01646b58319b3eeaab2ce839708922", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/f03643b59f01646b58319b3eeaab2ce839708922", "committedDate": "2020-12-15T21:56:04Z", "message": "Interim check in of embedded file extrator hang fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79cee4d09aaa3844812706e835c5c9377726cf1f", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/79cee4d09aaa3844812706e835c5c9377726cf1f", "committedDate": "2020-12-16T14:59:05Z", "message": "Tidying EFE for java,io,File retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87a2cb740e39962c5cafb2f3483fd37227fa7f59", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/87a2cb740e39962c5cafb2f3483fd37227fa7f59", "committedDate": "2020-12-16T17:35:00Z", "message": "Tidying EFE class changes for java.io.File retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b3ec602b57b5ac9622d80af4e1babaebc4ebebe", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/1b3ec602b57b5ac9622d80af4e1babaebc4ebebe", "committedDate": "2020-12-16T17:53:46Z", "message": "Tidying EFE class changes for java.io.File retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "724c7a639dba2475a6df9bca9d805d8d5737dca8", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/724c7a639dba2475a6df9bca9d805d8d5737dca8", "committedDate": "2020-12-17T14:28:16Z", "message": "Interim check in for EFE hang solution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37de3ddb46a3b890d55be5deabfc385579a8b600", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/37de3ddb46a3b890d55be5deabfc385579a8b600", "committedDate": "2020-12-17T14:29:16Z", "message": "Merge remote-tracking branch 'upstream/develop' into 6735-embedded-file-extractor-retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b36eebe70086bcba507f6ef531d82deb72ca3b2", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/8b36eebe70086bcba507f6ef531d82deb72ca3b2", "committedDate": "2020-12-18T20:08:48Z", "message": "Interim check in for EFE hang solution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3482aa70d4cf961eb7054fad8b4edfc4891f7b06", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/3482aa70d4cf961eb7054fad8b4edfc4891f7b06", "committedDate": "2020-12-22T21:19:47Z", "message": "Merge remote-tracking branch 'upstream/develop' into 6735-embedded-file-extractor-retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ab02aa2b95988e3b83f63229dabacbbfb171ef0", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/8ab02aa2b95988e3b83f63229dabacbbfb171ef0", "committedDate": "2020-12-28T17:09:39Z", "message": "Merge remote-tracking branch 'upstream/develop' into 6735-embedded-file-extractor-retries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjMzMzc5", "url": "https://github.com/sleuthkit/autopsy/pull/6552#pullrequestreview-559233379", "createdAt": "2020-12-28T17:26:01Z", "commit": {"oid": "8ab02aa2b95988e3b83f63229dabacbbfb171ef0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoyNjowMVrOIL-L7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoyNjowMVrOIL-L7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQyNDEwOA==", "bodyText": "This duplicated error message, displayed to the user, was updated and moved into an annotation.", "url": "https://github.com/sleuthkit/autopsy/pull/6552#discussion_r549424108", "createdAt": "2020-12-28T17:26:01Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/modules/embeddedfileextractor/Bundle.properties", "diffHunk": "@@ -31,8 +31,6 @@ EmbeddedFileExtractorIngestModule.ImageExtractor.pptxContainer.init.err=Pptx con\n EmbeddedFileExtractorIngestModule.ImageExtractor.xlsContainer.init.err=Xls container could not be initialized while reading: {0}\n EmbeddedFileExtractorIngestModule.ImageExtractor.xlsxContainer.init.err=Xlsx container could not be initialized while reading: {0}\n EmbeddedFileExtractorIngestModule.ImageExtractor.extractImage.addToDB.exception.msg=Unable to add the derived files to the database.\n-EmbeddedFileExtractorIngestModule.ImageExtractor.getOutputFolderPath.exception.msg=Could not get path for image extraction from Abstract File: {0}\n-EmbeddedFileExtractorIngestModule.ImageExtractor.getOutputFolderPath.exception.msg=Could not get path for image extraction from Abstract File: {0}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ab02aa2b95988e3b83f63229dabacbbfb171ef0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjMzOTA3", "url": "https://github.com/sleuthkit/autopsy/pull/6552#pullrequestreview-559233907", "createdAt": "2020-12-28T17:27:44Z", "commit": {"oid": "8ab02aa2b95988e3b83f63229dabacbbfb171ef0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoyNzo0NFrOIL-N2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoyNzo0NFrOIL-N2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQyNDYwMQ==", "bodyText": "This message is for an ingest module start up exception that is display to the user, so it must be both localized and user friendly.", "url": "https://github.com/sleuthkit/autopsy/pull/6552#discussion_r549424601", "createdAt": "2020-12-28T17:27:44Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/modules/embeddedfileextractor/Bundle.properties-MERGED", "diffHunk": "@@ -1,5 +1,6 @@\n CannotCreateOutputFolder=Unable to create output folder.\n CannotRunFileTypeDetection=Unable to run file type detection.\n+EmbeddedFileExtractor_make_output_dir_err=Failed to create module output directory for Embedded File Extractor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ab02aa2b95988e3b83f63229dabacbbfb171ef0"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dc6507715c9a28ce44f289d3d7a581d4b0d456d", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/6dc6507715c9a28ce44f289d3d7a581d4b0d456d", "committedDate": "2020-12-28T18:19:37Z", "message": "EFE retry handling refinements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjU2MjE5", "url": "https://github.com/sleuthkit/autopsy/pull/6552#pullrequestreview-559256219", "createdAt": "2020-12-28T18:30:22Z", "commit": {"oid": "6dc6507715c9a28ce44f289d3d7a581d4b0d456d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODozMDoyMlrOIL_gsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODozMDoyMlrOIL_gsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0NTgwOA==", "bodyText": "This duplicated error message, displayed to the user, was updated and moved into an annotation.", "url": "https://github.com/sleuthkit/autopsy/pull/6552#discussion_r549445808", "createdAt": "2020-12-28T18:30:22Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/modules/embeddedfileextractor/Bundle_ja.properties", "diffHunk": "@@ -22,7 +22,6 @@ EmbeddedFileExtractorIngestModule.ArchiveExtractor.unpack.warnMsg.zipBomb=ZIP\\u7\n EmbeddedFileExtractorIngestModule.ImageExtractor.docContainer.init.err=\\u8aad\\u307f\\u53d6\\u308a\\u4e2d\\u306bDOC\\u30b3\\u30f3\\u30c6\\u30ca\\u30fc\\u3092\\u521d\\u671f\\u5316\\u3067\\u304d\\u307e\\u305b\\u3093\\u3067\\u3057\\u305f \n EmbeddedFileExtractorIngestModule.ImageExtractor.docxContainer.init.err=\\u6b21\\u3092\\u8aad\\u307f\\u53d6\\u308a\\u4e2d\\u306bDOCX\\u30b3\\u30f3\\u30c6\\u30ca\\u30fc\\u3092\\u521d\\u671f\\u5316\\u3067\\u304d\\u307e\\u305b\\u3093\\u3067\\u3057\\u305f\\: {0}\n EmbeddedFileExtractorIngestModule.ImageExtractor.extractImage.addToDB.exception.msg=\\u6d3e\\u751f\\u30d5\\u30a1\\u30a4\\u30eb\\u3092\\u30c7\\u30fc\\u30bf\\u30d9\\u30fc\\u30b9\\u306b\\u8ffd\\u52a0\\u3067\\u304d\\u307e\\u305b\\u3093.\n-EmbeddedFileExtractorIngestModule.ImageExtractor.getOutputFolderPath.exception.msg=\\u6b21\\u306e\\u62bd\\u8c61\\u30d5\\u30a1\\u30a4\\u30eb\\u304b\\u3089\\u306e\\u30a4\\u30e1\\u30fc\\u30b8\\u62bd\\u51fa\\u30d1\\u30b9\\u3092\\u53d6\\u5f97\\u3067\\u304d\\u307e\\u305b\\u3093\\u3067\\u3057\\u305f\\: {0}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dc6507715c9a28ce44f289d3d7a581d4b0d456d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f96111669a85c5cd755eef1bc3b1a8516c8976b", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/7f96111669a85c5cd755eef1bc3b1a8516c8976b", "committedDate": "2020-12-28T19:06:00Z", "message": "EFE retry handling refinements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjY3NDMx", "url": "https://github.com/sleuthkit/autopsy/pull/6552#pullrequestreview-559267431", "createdAt": "2020-12-28T19:06:57Z", "commit": {"oid": "7f96111669a85c5cd755eef1bc3b1a8516c8976b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTowNjo1N1rOIMAHrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTowNjo1N1rOIMAHrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1NTc4OQ==", "bodyText": "This duplicated error message, displayed to the user, was updated and moved into an annotation.", "url": "https://github.com/sleuthkit/autopsy/pull/6552#discussion_r549455789", "createdAt": "2020-12-28T19:06:57Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/modules/embeddedfileextractor/Bundle.properties-MERGED", "diffHunk": "@@ -43,8 +44,6 @@ EmbeddedFileExtractorIngestModule.ImageExtractor.pptxContainer.init.err=Pptx con\n EmbeddedFileExtractorIngestModule.ImageExtractor.xlsContainer.init.err=Xls container could not be initialized while reading: {0}\n EmbeddedFileExtractorIngestModule.ImageExtractor.xlsxContainer.init.err=Xlsx container could not be initialized while reading: {0}\n EmbeddedFileExtractorIngestModule.ImageExtractor.extractImage.addToDB.exception.msg=Unable to add the derived files to the database.\n-EmbeddedFileExtractorIngestModule.ImageExtractor.getOutputFolderPath.exception.msg=Could not get path for image extraction from Abstract File: {0}\n-EmbeddedFileExtractorIngestModule.ImageExtractor.getOutputFolderPath.exception.msg=Could not get path for image extraction from Abstract File: {0}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f96111669a85c5cd755eef1bc3b1a8516c8976b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "054b0dfa06d43db9eba73f8fed700d24d46bdcc4", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/054b0dfa06d43db9eba73f8fed700d24d46bdcc4", "committedDate": "2020-12-28T19:49:16Z", "message": "EFE retry handling refinements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0082c71a2a96ae78c911a2dd232f7d9aaca46982", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/0082c71a2a96ae78c911a2dd232f7d9aaca46982", "committedDate": "2020-12-29T15:11:04Z", "message": "Refinements to EFE file tasks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07597cff12f09d8e65ab29b374f410f215281f45", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/07597cff12f09d8e65ab29b374f410f215281f45", "committedDate": "2020-12-30T15:11:31Z", "message": "Refinements to EFE retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85739a82925d55119786abc2dbea0ad8641f8938", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/85739a82925d55119786abc2dbea0ad8641f8938", "committedDate": "2020-12-31T17:00:38Z", "message": "Bug fixes for EFE file task retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd91b15838200498b61b0ee429df58cfdcdac1ef", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/dd91b15838200498b61b0ee429df58cfdcdac1ef", "committedDate": "2021-01-04T17:45:13Z", "message": "Comment out test code in EFE FileTaskExecutor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjM2MTU0", "url": "https://github.com/sleuthkit/autopsy/pull/6552#pullrequestreview-561236154", "createdAt": "2021-01-04T18:15:24Z", "commit": {"oid": "dd91b15838200498b61b0ee429df58cfdcdac1ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxODoxNToyNFrOIN71lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxODoxNjoxMVrOIN73aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ4Mjc3Mg==", "bodyText": "I think I would note here that the units for the delay (and the timeout in the next getter) come from getTimeUnit()", "url": "https://github.com/sleuthkit/autopsy/pull/6552#discussion_r551482772", "createdAt": "2021-01-04T18:15:24Z", "author": {"login": "APriestman"}, "path": "Core/src/org/sleuthkit/autopsy/threadutils/TaskRetryUtil.java", "diffHunk": "@@ -0,0 +1,280 @@\n+/*\n+ * Autopsy Forensic Browser\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.threadutils;\n+\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.ScheduledThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+/**\n+ * A utility that attempts a task a specified number of times with a specified\n+ * delay before each attempt and an optional timeout for each attempt. If an\n+ * attempt times out, the attempt will be cancelled and the next attempt, if\n+ * any, will begin.\n+ */\n+public class TaskRetryUtil {\n+\n+    private static final AtomicLong totalTasks = new AtomicLong();\n+    private static final AtomicLong totalTaskRetries = new AtomicLong();\n+    private static final AtomicLong totalTaskAttemptTimeOuts = new AtomicLong();\n+    private static final AtomicLong totalFailedTasks = new AtomicLong();\n+\n+    /**\n+     * Encapsulates the specification of a task attempt for the attemptTask()\n+     * utility.\n+     */\n+    public static class TaskAttempt {\n+\n+        private final Long delay;\n+        private final Long timeOut;\n+        private final TimeUnit timeUnit;\n+\n+        /**\n+         * Constructs an object that encapsulates the specification of a task\n+         * attempt for the attemptTask() utility. The attempt will have neither\n+         * a delay nor a time out.\n+         *\n+         * @param delay         The delay before the task should be attempted,\n+         *                      may be zero or any positive integer.\n+         * @param delayTimeUnit The time unit for the delay before the task\n+         *                      should be attempted.\n+         */\n+        public TaskAttempt() {\n+            this.delay = 0L;\n+            this.timeOut = 0L;\n+            this.timeUnit = TimeUnit.SECONDS;\n+        }\n+\n+        /**\n+         * Constructs an object that encapsulates the specification of a task\n+         * attempt for the attemptTask() utility.\n+         *\n+         * @param delay    The delay before the task should be attempted, may be\n+         *                 zero or any positive integer.\n+         * @param timeUnit The time unit for the delay before the task should be\n+         *                 attempted.\n+         */\n+        public TaskAttempt(Long delay, TimeUnit timeUnit) {\n+            if (delay == null || delay < 0) {\n+                throw new IllegalArgumentException(String.format(\"Argument for delay parameter = %d, must be zero or any positive integer\", delay));\n+            }\n+            if (timeUnit == null) {\n+                throw new IllegalArgumentException(\"Argument for timeUnit parameter is null\");\n+            }\n+            this.delay = delay;\n+            this.timeOut = 0L;\n+            this.timeUnit = TimeUnit.SECONDS;\n+        }\n+\n+        /**\n+         * Constructs an object that encapsulates the specification of a task\n+         * attempt for the attemptTask() utility.\n+         *\n+         * @param delay    The delay before the task should be attempted, must\n+         *                 be zero or any positive integer.\n+         * @param timeOut  The timeout for the task attempt, must be zero or any\n+         *                 positive integer.\n+         * @param timeUnit The time unit for the delay before the task should be\n+         *                 attempted and the time out.\n+         */\n+        public TaskAttempt(Long delay, Long timeOut, TimeUnit timeUnit) {\n+            if (delay == null || delay < 0) {\n+                throw new IllegalArgumentException(String.format(\"Argument for delay parameter = %d, must be zero or any positive integer\", delay));\n+            }\n+            if (timeOut == null || timeOut < 0) {\n+                throw new IllegalArgumentException(String.format(\"Argument for timeOut parameter = %d, must be zero or any positive integer\", delay));\n+            }\n+            if (timeUnit == null) {\n+                throw new IllegalArgumentException(\"Argument for timeUnit parameter is null\");\n+            }\n+            this.delay = delay;\n+            this.timeOut = timeOut;\n+            this.timeUnit = timeUnit;\n+        }\n+\n+        /**\n+         * Gets the optional delay before the task should be attempted, may be\n+         * zero.\n+         *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd91b15838200498b61b0ee429df58cfdcdac1ef"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ4MzI0MQ==", "bodyText": "I think this should be saving the passed in timeUnit", "url": "https://github.com/sleuthkit/autopsy/pull/6552#discussion_r551483241", "createdAt": "2021-01-04T18:16:11Z", "author": {"login": "APriestman"}, "path": "Core/src/org/sleuthkit/autopsy/threadutils/TaskRetryUtil.java", "diffHunk": "@@ -0,0 +1,280 @@\n+/*\n+ * Autopsy Forensic Browser\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.threadutils;\n+\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ScheduledFuture;\n+import java.util.concurrent.ScheduledThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+/**\n+ * A utility that attempts a task a specified number of times with a specified\n+ * delay before each attempt and an optional timeout for each attempt. If an\n+ * attempt times out, the attempt will be cancelled and the next attempt, if\n+ * any, will begin.\n+ */\n+public class TaskRetryUtil {\n+\n+    private static final AtomicLong totalTasks = new AtomicLong();\n+    private static final AtomicLong totalTaskRetries = new AtomicLong();\n+    private static final AtomicLong totalTaskAttemptTimeOuts = new AtomicLong();\n+    private static final AtomicLong totalFailedTasks = new AtomicLong();\n+\n+    /**\n+     * Encapsulates the specification of a task attempt for the attemptTask()\n+     * utility.\n+     */\n+    public static class TaskAttempt {\n+\n+        private final Long delay;\n+        private final Long timeOut;\n+        private final TimeUnit timeUnit;\n+\n+        /**\n+         * Constructs an object that encapsulates the specification of a task\n+         * attempt for the attemptTask() utility. The attempt will have neither\n+         * a delay nor a time out.\n+         *\n+         * @param delay         The delay before the task should be attempted,\n+         *                      may be zero or any positive integer.\n+         * @param delayTimeUnit The time unit for the delay before the task\n+         *                      should be attempted.\n+         */\n+        public TaskAttempt() {\n+            this.delay = 0L;\n+            this.timeOut = 0L;\n+            this.timeUnit = TimeUnit.SECONDS;\n+        }\n+\n+        /**\n+         * Constructs an object that encapsulates the specification of a task\n+         * attempt for the attemptTask() utility.\n+         *\n+         * @param delay    The delay before the task should be attempted, may be\n+         *                 zero or any positive integer.\n+         * @param timeUnit The time unit for the delay before the task should be\n+         *                 attempted.\n+         */\n+        public TaskAttempt(Long delay, TimeUnit timeUnit) {\n+            if (delay == null || delay < 0) {\n+                throw new IllegalArgumentException(String.format(\"Argument for delay parameter = %d, must be zero or any positive integer\", delay));\n+            }\n+            if (timeUnit == null) {\n+                throw new IllegalArgumentException(\"Argument for timeUnit parameter is null\");\n+            }\n+            this.delay = delay;\n+            this.timeOut = 0L;\n+            this.timeUnit = TimeUnit.SECONDS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd91b15838200498b61b0ee429df58cfdcdac1ef"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cc9802024bb0d83393e86bf4ca6218c5984ebe2", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/6cc9802024bb0d83393e86bf4ca6218c5984ebe2", "committedDate": "2021-01-04T18:39:13Z", "message": "Fix ctor field init bug, add comments for TaskRetryUtil"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9855533775c13f636ce7017f10a148a85781ce75", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/9855533775c13f636ce7017f10a148a85781ce75", "committedDate": "2021-01-04T23:09:22Z", "message": "Bug fix for EFE file ops with retries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7522caab384abcf6aa48cab83b10e72d0d3d109e", "author": {"user": {"login": "rcordovano", "name": "Richard Cordovano"}}, "url": "https://github.com/sleuthkit/autopsy/commit/7522caab384abcf6aa48cab83b10e72d0d3d109e", "committedDate": "2021-01-05T17:06:34Z", "message": "Remove test code from EFE file task executor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxOTc3NDE1", "url": "https://github.com/sleuthkit/autopsy/pull/6552#pullrequestreview-561977415", "createdAt": "2021-01-05T17:16:20Z", "commit": {"oid": "7522caab384abcf6aa48cab83b10e72d0d3d109e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2815, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}