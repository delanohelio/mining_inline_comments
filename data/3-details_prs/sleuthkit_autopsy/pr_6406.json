{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4OTk4NDIz", "number": 6406, "title": "6773 web history discovery details viewer", "bodyText": "", "createdAt": "2020-10-23T14:19:24Z", "url": "https://github.com/sleuthkit/autopsy/pull/6406", "merged": true, "mergeCommit": {"oid": "13b4ede7909d915a99d01aeae71091004c19fd45"}, "closed": true, "closedAt": "2020-11-12T21:09:29Z", "author": {"login": "wschaeferB"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOEFLVgH2gAyNTA4OTk4NDIzOmZkNDU0YmJmYWI1YzEwNTYxYWRjMmYxNWM4NGEyNTc0MmUzNGZjZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdb5Kn7gFqTUyOTQ5OTEzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd454bbfab5c10561adc2f15c84a25742e34fcd4", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/fd454bbfab5c10561adc2f15c84a25742e34fcd4", "committedDate": "2020-09-30T21:57:27Z", "message": "6773 initial commit of code for Domain details viewers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b83ecab236a910564fa74e7f923dc85861b2927", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/0b83ecab236a910564fa74e7f923dc85861b2927", "committedDate": "2020-10-06T14:25:19Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd87146065e21f26b92ef15632776f34b53f0aa6", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/dd87146065e21f26b92ef15632776f34b53f0aa6", "committedDate": "2020-10-22T22:26:17Z", "message": "6773 web history working"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f179d3274b1582281d9f08c9c8c186c17563259", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/6f179d3274b1582281d9f08c9c8c186c17563259", "committedDate": "2020-10-22T22:41:04Z", "message": "6773 improve date column:"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33dc3a8ad91b36cece031b571112510a1bc114ee", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/33dc3a8ad91b36cece031b571112510a1bc114ee", "committedDate": "2020-10-23T13:47:49Z", "message": "6773 fix unselection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "240ab041134eabb9ac968d3920023801bc9a051d", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/240ab041134eabb9ac968d3920023801bc9a051d", "committedDate": "2020-10-23T13:48:59Z", "message": "6773 changes to artifact Viewers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d649931c369f66432160ca77f2a3879bb8945350", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/d649931c369f66432160ca77f2a3879bb8945350", "committedDate": "2020-10-23T13:59:40Z", "message": "6773 fix unselection again and refactor method name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4168cb1c49f261d36f3f3d4464b85d3c4e9cecb8", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/4168cb1c49f261d36f3f3d4464b85d3c4e9cecb8", "committedDate": "2020-10-23T14:19:07Z", "message": "6773 clean up comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "424fb9759989afb35b31b760a2c504be15c89c06", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/424fb9759989afb35b31b760a2c504be15c89c06", "committedDate": "2020-10-23T16:31:30Z", "message": "6773 codacy clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "492378b3d3ab099d605b2c5fbb17e85ef75e7ad3", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/492378b3d3ab099d605b2c5fbb17e85ef75e7ad3", "committedDate": "2020-10-23T16:31:37Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02d309b26d89be70fe3a34d8d4aca6ba9ee34595", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/02d309b26d89be70fe3a34d8d4aca6ba9ee34595", "committedDate": "2020-10-23T18:57:52Z", "message": "6773 reduce npcomplexity of method for codacy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0bbfffdb216fd95eff28b07714bcf87beac42ad", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/b0bbfffdb216fd95eff28b07714bcf87beac42ad", "committedDate": "2020-10-23T19:02:26Z", "message": "6773 use logger instead of printstacktrace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4830580422c1f48948ec9bd23ac817139ac1cdf", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/f4830580422c1f48948ec9bd23ac817139ac1cdf", "committedDate": "2020-10-23T20:31:59Z", "message": "6773 fix index when sorted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26144984d895711c15b5943368c75d604dfc8e57", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/26144984d895711c15b5943368c75d604dfc8e57", "committedDate": "2020-10-23T21:09:26Z", "message": "6773 fix saving of selected tab and resizing of list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcf8da3bfeee0c9e7df3b577befe1ba3ee46ad09", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/dcf8da3bfeee0c9e7df3b577befe1ba3ee46ad09", "committedDate": "2020-10-23T21:13:56Z", "message": "6773 remove titled border used for debugging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1db593e212491c86548e7eee542a0099b421704a", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/1db593e212491c86548e7eee542a0099b421704a", "committedDate": "2020-10-26T12:32:27Z", "message": "6773 update MERGED file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90344f0358ce05b2c777eabab067b0bfa33cfe1a", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/90344f0358ce05b2c777eabab067b0bfa33cfe1a", "committedDate": "2020-10-26T17:59:22Z", "message": "6773 fix population of tabs for domains after first selected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1606da87a444e462534de146761a34b660808fb0", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/1606da87a444e462534de146761a34b660808fb0", "committedDate": "2020-10-26T18:28:26Z", "message": "6773 fix selection clearing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "993c620455b4bbc8978940511266ee1e5fda48f2", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/993c620455b4bbc8978940511266ee1e5fda48f2", "committedDate": "2020-10-26T19:04:44Z", "message": "6773 fix resetting of details panel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a76f253bef9d48bd56707a33e64f331161cb22a", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/7a76f253bef9d48bd56707a33e64f331161cb22a", "committedDate": "2020-10-26T20:41:53Z", "message": "6773 fix indexing into model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "377eae975098dd6199edd486d160cd86fb105a38", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/377eae975098dd6199edd486d160cd86fb105a38", "committedDate": "2020-10-27T17:01:46Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7", "committedDate": "2020-10-27T17:08:18Z", "message": "6773 adjust comments remove unnecessary code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDY0OTQx", "url": "https://github.com/sleuthkit/autopsy/pull/6406#pullrequestreview-521064941", "createdAt": "2020-10-30T22:15:50Z", "commit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMjoxNTo1MFrOHrh4gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMTo1OToyMlrOHsXMEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNTk1NQ==", "bodyText": "\"Constrains\" => \"Constraints\"", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r515405955", "createdAt": "2020-10-30T22:15:50Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/CommunicationArtifactViewerHelper.java", "diffHunk": "@@ -109,6 +109,23 @@ static JLabel addHeader(JPanel panel, GridBagLayout gridbagLayout, GridBagConstr\n         return headingLabel;\n     }\n \n+    /**\n+     * Add a key value row to the specified panel with the specified layout and\n+     * constraints.\n+     *\n+     *\n+     * @param panel         Panel to update.\n+     * @param gridbagLayout Layout to use.\n+     * @param constraints   Constrains to use.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQwNjc0MQ==", "bodyText": "\"it's\" => \"its\" or even the simpler \"...as a table listing all it's attributes names and values\" => \"...as a table of its attributes\"", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r515406741", "createdAt": "2020-10-30T22:19:05Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/contentviewers/artifactviewers/DefaultArtifactContentViewer.java", "diffHunk": "@@ -54,15 +54,15 @@\n import java.util.Locale;\n import java.util.Map;\n import javax.swing.SwingUtilities;\n+import org.sleuthkit.autopsy.discovery.ui.AbstractArtifactDetailsPanel;\n //import org.sleuthkit.autopsy.contentviewers.Bundle;\n \n /**\n- * This class displays a Blackboard artifact as a table listing all it's \n+ * This class displays a Blackboard artifact as a table listing all it's", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIyNzMwMw==", "bodyText": "If the task is cancelled inside the conditional that starts on line 66, we'll get a CancellationException. I believe it will be caught (and logged) by Swing if we don't catch it ourselves. I think we should add a catch clause for CancellationException (we can ignore the actual exception) just to keep the log cleaner.", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516227303", "createdAt": "2020-11-02T20:11:46Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/ui/ArtifactsWorker.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Autopsy\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.discovery.ui;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+import java.util.logging.Level;\n+import javax.swing.SwingWorker;\n+import org.apache.commons.lang3.StringUtils;\n+import org.sleuthkit.autopsy.casemodule.Case;\n+import org.sleuthkit.autopsy.coreutils.Logger;\n+import org.sleuthkit.autopsy.discovery.search.DiscoveryEventUtils;\n+import org.sleuthkit.autopsy.discovery.search.DomainSearch;\n+import org.sleuthkit.autopsy.discovery.search.DomainSearchArtifactsRequest;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+\n+/**\n+ * SwingWorker to retrieve a list of artifacts for a specified type and domain.\n+ */\n+class ArtifactsWorker extends SwingWorker<List<BlackboardArtifact>, Void> {\n+\n+    private final BlackboardArtifact.ARTIFACT_TYPE artifactType;\n+    private final static Logger logger = Logger.getLogger(ArtifactsWorker.class.getName());\n+    private final String domain;\n+\n+    /**\n+     * Construct a new ArtifactsWorker.\n+     *\n+     * @param artifactType The type of artifact being retrieved.\n+     * @param domain       The domain the artifacts should have as an attribute.\n+     */\n+    ArtifactsWorker(BlackboardArtifact.ARTIFACT_TYPE artifactType, String domain) {\n+        this.artifactType = artifactType;\n+        this.domain = domain;\n+    }\n+\n+    @Override\n+    protected List<BlackboardArtifact> doInBackground() throws Exception {\n+        if (artifactType != null && !StringUtils.isBlank(domain)) {\n+            DomainSearch domainSearch = new DomainSearch();\n+            return domainSearch.getArtifacts(new DomainSearchArtifactsRequest(Case.getCurrentCase().getSleuthkitCase(), domain, artifactType));\n+        }\n+        return new ArrayList<>();\n+    }\n+\n+    @Override\n+    protected void done() {\n+        List<BlackboardArtifact> listOfArtifacts = new ArrayList<>();\n+        if (!isCancelled()) {\n+            try {\n+                listOfArtifacts.addAll(get());\n+            } catch (InterruptedException | ExecutionException ex) {\n+                logger.log(Level.SEVERE, \"Exception while trying to get list of artifacts for Domain details for artifact type: \"\n+                        + artifactType.getDisplayName() + \" and domain: \" + domain, ex);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzNjQwOQ==", "bodyText": "Why are detailsWorker, domain and selectedTabName class variables instead of instance variables?\nIf they need to be class variables I recommend adding\n@ThreadConfined(type = ThreadConfined.ThreadType.AWT) \nannotations to make the thread safety policy for variables clear.", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516236409", "createdAt": "2020-11-02T20:30:30Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/ui/DomainDetailsPanel.java", "diffHunk": "@@ -0,0 +1,158 @@\n+/*\n+ * Autopsy\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.discovery.ui;\n+\n+import com.google.common.eventbus.Subscribe;\n+import java.awt.Component;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import org.apache.commons.lang.StringUtils;\n+import org.sleuthkit.autopsy.discovery.search.DiscoveryEventUtils;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.autopsy.discovery.search.SearchData;\n+\n+/**\n+ * Panel to display details area for domain discovery results.\n+ *\n+ */\n+final class DomainDetailsPanel extends JPanel {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static ArtifactsWorker detailsWorker;\n+    private static String domain;\n+    private static String selectedTabName;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3NjIzOQ==", "bodyText": "It seems that it is valid for this event to be published with an empty list, with the effect of clearing the GUI. If I have interpreted this correctly, I suggest we name this class something like \"ArtifactSearchResult.\"", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516276239", "createdAt": "2020-11-02T21:53:00Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/search/DiscoveryEventUtils.java", "diffHunk": "@@ -203,6 +229,47 @@ public SearchCompleteEvent(Map<GroupKey, Integer> groupMap, List<AbstractFilter>\n \n     }\n \n+    /**\n+     * Event to signal the completion of a search being performed.\n+     */\n+    public static final class ArtifactListRetrievedEvent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3ODQzOQ==", "bodyText": "I'm not sure why this code is synchronized. Is this method used?", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516278439", "createdAt": "2020-11-02T21:57:38Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/ui/DomainSummaryViewer.java", "diffHunk": "@@ -83,4 +85,31 @@ void addDomain(DomainWrapper domainWrapper) {\n             domainListModel.addElement(domainWrapper);\n         }\n     }\n+\n+    /**\n+     * Get the list of AbstractFiles which are represented by the selected\n+     * document preview.\n+     *\n+     * @return The list of AbstractFiles which are represented by the selected\n+     *         document preview.\n+     */\n+    String getDomainForSelected() {\n+        synchronized (this) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjI3OTMxMg==", "bodyText": "\"artifacts details\" => \"artifact's details\"", "url": "https://github.com/sleuthkit/autopsy/pull/6406#discussion_r516279312", "createdAt": "2020-11-02T21:59:22Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/ui/WebHistoryDetailsPanel.java", "diffHunk": "@@ -0,0 +1,218 @@\n+/*\n+ * Autopsy\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.discovery.ui;\n+\n+import java.awt.Component;\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.logging.Level;\n+import javax.swing.JScrollPane;\n+import org.openide.util.NbBundle;\n+import org.openide.util.lookup.ServiceProvider;\n+import org.sleuthkit.autopsy.contentviewers.artifactviewers.ArtifactContentViewer;\n+import org.sleuthkit.autopsy.contentviewers.artifactviewers.CommunicationArtifactViewerHelper;\n+import org.sleuthkit.autopsy.coreutils.Logger;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.datamodel.BlackboardAttribute;\n+import org.sleuthkit.datamodel.TskCoreException;\n+\n+/**\n+ * Panel to display the details for a Web History Artifact.\n+ */\n+@ServiceProvider(service = ArtifactContentViewer.class)\n+public class WebHistoryDetailsPanel extends AbstractArtifactDetailsPanel implements ArtifactContentViewer {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static final Logger logger = Logger.getLogger(WebHistoryDetailsPanel.class.getName());\n+    private BlackboardArtifact webHistoryArtifact;\n+    private final GridBagLayout gridBagLayout = new GridBagLayout();\n+    private final List<BlackboardAttribute> urlList = new ArrayList<>();\n+    private final List<BlackboardAttribute> dateAccessedList = new ArrayList<>();\n+    private final List<BlackboardAttribute> referrerUrlList = new ArrayList<>();\n+    private final List<BlackboardAttribute> titleList = new ArrayList<>();\n+    private final List<BlackboardAttribute> programNameList = new ArrayList<>();\n+    private final List<BlackboardAttribute> domainList = new ArrayList<>();\n+    private final List<BlackboardAttribute> otherList = new ArrayList<>();\n+    private final List<BlackboardAttribute> artifactAttributesList = new ArrayList<>();\n+    private final GridBagConstraints gridBagConstraints = new GridBagConstraints();\n+    private String dataSourceName;\n+    private String sourceFileName;\n+\n+    /**\n+     * Creates new form WebHistoryDetailsPanel.\n+     */\n+    public WebHistoryDetailsPanel() {\n+        initComponents();\n+    }\n+\n+    @Override\n+    public void setArtifact(BlackboardArtifact artifact) {\n+        resetComponent();\n+        if (artifact != null) {\n+            try {\n+                extractArtifactData(artifact);\n+            } catch (TskCoreException ex) {\n+                logger.log(Level.WARNING, \"Unable to get attributes for artifact \" + artifact.getArtifactID(), ex);\n+            }\n+            updateView();\n+        }\n+        this.setLayout(this.gridBagLayout);\n+        this.revalidate();\n+        this.repaint();\n+    }\n+\n+    /**\n+     * Extracts data from the artifact to be displayed in the panel.\n+     *\n+     * @param artifact Artifact to show.\n+     *\n+     * @throws TskCoreException\n+     */\n+    private void extractArtifactData(BlackboardArtifact artifact) throws TskCoreException {\n+\n+        webHistoryArtifact = artifact;\n+        artifactAttributesList.addAll(webHistoryArtifact.getAttributes());\n+        // Get all the attributes and group them by the section panels they go in\n+        for (BlackboardAttribute bba : artifactAttributesList) {\n+            if (bba.getAttributeType().getTypeName().startsWith(\"TSK_URL\")) {\n+                urlList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_PROG_NAME\")) {\n+                programNameList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_DOMAIN\")) {\n+                domainList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_REFERRER\")) {\n+                referrerUrlList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_DATETIME_ACCESSED\")) {\n+                dateAccessedList.add(bba);\n+            } else if (bba.getAttributeType().getTypeName().startsWith(\"TSK_TITLE\")) {\n+                titleList.add(bba);\n+            } else {\n+                otherList.add(bba);\n+            }\n+\n+        }\n+\n+        dataSourceName = webHistoryArtifact.getDataSource().getName();\n+        sourceFileName = webHistoryArtifact.getParent().getName();\n+    }\n+\n+    /**\n+     * Reset the panel so that it is empty.\n+     */\n+    private void resetComponent() {\n+        // clear the panel \n+        this.removeAll();\n+        gridBagConstraints.anchor = GridBagConstraints.FIRST_LINE_START;\n+        gridBagConstraints.gridy = 0;\n+        gridBagConstraints.gridx = 0;\n+        gridBagConstraints.weighty = 0.0;\n+        gridBagConstraints.weightx = 0.0;    // keep components fixed horizontally.\n+        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);\n+        gridBagConstraints.fill = GridBagConstraints.NONE;\n+        webHistoryArtifact = null;\n+        dataSourceName = null;\n+        sourceFileName = null;\n+        urlList.clear();\n+        dateAccessedList.clear();\n+        referrerUrlList.clear();\n+        titleList.clear();\n+        programNameList.clear();\n+        domainList.clear();\n+        otherList.clear();\n+        artifactAttributesList.clear();\n+\n+    }\n+\n+    @Override\n+    public Component getComponent() {\n+        // Slap a vertical scrollbar on the panel.\n+        return new JScrollPane(this, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n+    }\n+\n+    @Override\n+    public boolean isSupported(BlackboardArtifact artifact) {\n+        return (artifact != null)\n+                && (artifact.getArtifactTypeID() == BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY.getTypeID());\n+    }\n+\n+    @NbBundle.Messages({\"WebHistoryDetailsPanel.details.attrHeader=Attributes\",\n+        \"WebHistoryDetailsPanel.details.sourceHeader=Source\",\n+        \"WebHistoryDetailsPanel.details.dataSource=Data Source\",\n+        \"WebHistoryDetailsPanel.details.file=File\"})\n+    /**\n+     * This method is called from within the constructor to initialize the form.\n+     * WARNING: Do NOT modify this code. The content of this method is always\n+     * regenerated by the Form Editor.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n+    private void initComponents() {\n+\n+        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n+        this.setLayout(layout);\n+        layout.setHorizontalGroup(\n+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+            .addGap(0, 400, Short.MAX_VALUE)\n+        );\n+        layout.setVerticalGroup(\n+            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n+            .addGap(0, 300, Short.MAX_VALUE)\n+        );\n+    }// </editor-fold>//GEN-END:initComponents\n+\n+    /**\n+     * Update the view to reflect the current artifacts details.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6fa07b5d5bb31fe7d69a825ef63bce8dae249f7"}, "originalPosition": 182}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "988d1a1427c334a5606e1db96cf84f9641884718", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/988d1a1427c334a5606e1db96cf84f9641884718", "committedDate": "2020-11-03T18:51:10Z", "message": "6773 fix spelling of constraints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56b095046c99ab818b28cf1237f53b0dd9441ff9", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/56b095046c99ab818b28cf1237f53b0dd9441ff9", "committedDate": "2020-11-03T18:53:19Z", "message": "6773 fix apostraphe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fe134cf45acc9d1055858b94a6f3b1a8ea53935", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/8fe134cf45acc9d1055858b94a6f3b1a8ea53935", "committedDate": "2020-11-03T18:55:43Z", "message": "6773 fix comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d83bd002300130dd761f1ce279f5c3e84bd16baf", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/d83bd002300130dd761f1ce279f5c3e84bd16baf", "committedDate": "2020-11-03T19:34:23Z", "message": "6773 refactor code for clarity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "629f9abf7332dbe8d9344c3a9b4219ba54da8547", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/629f9abf7332dbe8d9344c3a9b4219ba54da8547", "committedDate": "2020-11-04T01:35:59Z", "message": "6773 catch cancelation exception, instance variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c98c2838dee2ac604a047ad0e4d592b987d388e8", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/c98c2838dee2ac604a047ad0e4d592b987d388e8", "committedDate": "2020-11-04T01:37:16Z", "message": "6773 add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a791c437bc5f14188df7fa83948538cb6120971", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/1a791c437bc5f14188df7fa83948538cb6120971", "committedDate": "2020-11-04T01:40:39Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8363f220999e7955af064b9a16d68d0966480f05", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/8363f220999e7955af064b9a16d68d0966480f05", "committedDate": "2020-11-05T17:49:30Z", "message": "6773 remove ui synchronization annotate thread confined"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a019896f12e1f92a3318116ca398e5e376d71f9", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/5a019896f12e1f92a3318116ca398e5e376d71f9", "committedDate": "2020-11-05T17:57:21Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6773-WebHistoryDiscoveryDetailsViewer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2634a4535b1054835d6725bdd8224d5ee8ff8a5", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/e2634a4535b1054835d6725bdd8224d5ee8ff8a5", "committedDate": "2020-11-05T20:24:42Z", "message": "6773 fix annotations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NDk5MTMz", "url": "https://github.com/sleuthkit/autopsy/pull/6406#pullrequestreview-529499133", "createdAt": "2020-11-12T21:09:23Z", "commit": {"oid": "e2634a4535b1054835d6725bdd8224d5ee8ff8a5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2819, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}