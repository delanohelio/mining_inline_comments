{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTE2Nzk5", "number": 5683, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMDozOVrODmVZWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo0Njo1NFrODoI0IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTIzMDM0OnYy", "diffSide": "RIGHT", "path": "InternalPythonModules/android/viber.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMDozOVrOFzsTXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxMTozMVrOF07ZUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0NzU0OA==", "bodyText": "If this value is a String, I think we should check for blankness too. Blankness can be described as the following conditions:\nis_blank(None) //True\nis_blank(\"\") //True\nis_blank(\"   \") //True", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r389747548", "createdAt": "2020-03-09T15:00:39Z", "author": {"login": "dannysmyda"}, "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,28 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if contacts_parser.get_phone() is not None:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d73e04348572539f174820c5888450b8015787"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzQxMA==", "bodyText": "using isspace() to check for \"\", \" \", and special characters as well as None", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r391043410", "createdAt": "2020-03-11T15:11:31Z", "author": {"login": "markmckinnon"}, "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,28 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if contacts_parser.get_phone() is not None:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0NzU0OA=="}, "originalCommit": {"oid": "64d73e04348572539f174820c5888450b8015787"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTIzODAxOnYy", "diffSide": "RIGHT", "path": "InternalPythonModules/android/viber.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNTowMjoyNFrOFzsYPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxMTo0MVrOF07ZvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0ODc5Ng==", "bodyText": "I think this should check for blankness as well.\nelif not is_blank(contacts_parser.get_contact_name())", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r389748796", "createdAt": "2020-03-09T15:02:24Z", "author": {"login": "dannysmyda"}, "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,28 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if contacts_parser.get_phone() is not None:\n+                    helper.addContact( \n+                        contacts_parser.get_contact_name(), \n+                        contacts_parser.get_phone(),\n+                        contacts_parser.get_home_phone(),\n+                        contacts_parser.get_mobile_phone(),\n+                        contacts_parser.get_email()\n+                    )\n+                else:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d73e04348572539f174820c5888450b8015787"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzUxNw==", "bodyText": "using isspace() to check for \"\", \" \", and special characters as well as None", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r391043517", "createdAt": "2020-03-11T15:11:41Z", "author": {"login": "markmckinnon"}, "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,28 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if contacts_parser.get_phone() is not None:\n+                    helper.addContact( \n+                        contacts_parser.get_contact_name(), \n+                        contacts_parser.get_phone(),\n+                        contacts_parser.get_home_phone(),\n+                        contacts_parser.get_mobile_phone(),\n+                        contacts_parser.get_email()\n+                    )\n+                else:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTc0ODc5Ng=="}, "originalCommit": {"oid": "64d73e04348572539f174820c5888450b8015787"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDE0MDQ5OnYy", "diffSide": "RIGHT", "path": "InternalPythonModules/android/viber.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo0Njo1NFrOF2g3cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwMTowODoyN1rOF2iuqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNTkwNg==", "bodyText": "I think we should use the catch block around the while loop or, in other words, just omit the block here.", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r392705906", "createdAt": "2020-03-15T19:46:54Z", "author": {"login": "dannysmyda"}, "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,29 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if (not(not contacts_parser.get_phone() or contacts_parser.get_phone().isspace())):\n+                    helper.addContact( \n+                        contacts_parser.get_contact_name(), \n+                        contacts_parser.get_phone(),\n+                        contacts_parser.get_home_phone(),\n+                        contacts_parser.get_mobile_phone(),\n+                        contacts_parser.get_email()\n+                    )\n+                # Check if contact_name is blank and if it is not create a TSK_CONTACT otherwise ignore as not Contact Info\n+                elif (not(not contacts_parser.get_contact_name() or contacts_parser.get_contact_name().isspace())):\n+                    current_case = Case.getCurrentCase().getSleuthkitCase()\n+                    attributes = ArrayList()\n+                    artifact = contacts_db.getDBFile().newArtifact(BlackboardArtifact.ARTIFACT_TYPE.TSK_CONTACT)\n+                    attributes.add(BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), self._PARSER_NAME, contacts_parser.get_contact_name()))\n+                    artifact.addAttributes(attributes)\n+                    \n+                    try:\n+                    # Post the artifact to blackboard\n+                       current_case.getBlackboard().postArtifact(artifact, self._PARSER_NAME)\n+                    except Blackboard.BlackboardException as e:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "276242d3192a029064869020b91a35fcb1c42e33"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjczNjQyNw==", "bodyText": "Removed inner try block.", "url": "https://github.com/sleuthkit/autopsy/pull/5683#discussion_r392736427", "createdAt": "2020-03-16T01:08:27Z", "author": {"login": "markmckinnon"}, "path": "InternalPythonModules/android/viber.py", "diffHunk": "@@ -117,13 +117,29 @@ def parse_contacts(self, contacts_db, helper):\n         try:\n             contacts_parser = ViberContactsParser(contacts_db)\n             while contacts_parser.next():\n-                helper.addContact( \n-                    contacts_parser.get_contact_name(), \n-                    contacts_parser.get_phone(),\n-                    contacts_parser.get_home_phone(),\n-                    contacts_parser.get_mobile_phone(),\n-                    contacts_parser.get_email()\n-                )\n+                if (not(not contacts_parser.get_phone() or contacts_parser.get_phone().isspace())):\n+                    helper.addContact( \n+                        contacts_parser.get_contact_name(), \n+                        contacts_parser.get_phone(),\n+                        contacts_parser.get_home_phone(),\n+                        contacts_parser.get_mobile_phone(),\n+                        contacts_parser.get_email()\n+                    )\n+                # Check if contact_name is blank and if it is not create a TSK_CONTACT otherwise ignore as not Contact Info\n+                elif (not(not contacts_parser.get_contact_name() or contacts_parser.get_contact_name().isspace())):\n+                    current_case = Case.getCurrentCase().getSleuthkitCase()\n+                    attributes = ArrayList()\n+                    artifact = contacts_db.getDBFile().newArtifact(BlackboardArtifact.ARTIFACT_TYPE.TSK_CONTACT)\n+                    attributes.add(BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_NAME.getTypeID(), self._PARSER_NAME, contacts_parser.get_contact_name()))\n+                    artifact.addAttributes(attributes)\n+                    \n+                    try:\n+                    # Post the artifact to blackboard\n+                       current_case.getBlackboard().postArtifact(artifact, self._PARSER_NAME)\n+                    except Blackboard.BlackboardException as e:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNTkwNg=="}, "originalCommit": {"oid": "276242d3192a029064869020b91a35fcb1c42e33"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 757, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}