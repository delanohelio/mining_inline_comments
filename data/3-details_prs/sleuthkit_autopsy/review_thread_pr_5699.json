{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2Nzg3MDc2", "number": 5699, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo1NDoyNlrODoI19A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo1NzowOVrODoI2mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDE0NTE2OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/communications/relationships/CallLogNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo1NDoyNlrOF2g5yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo1NDoyNlrOF2g5yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjUwNw==", "bodyText": "Nice! This is known as coalescing.", "url": "https://github.com/sleuthkit/autopsy/pull/5699#discussion_r392706507", "createdAt": "2020-03-15T19:54:26Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/communications/relationships/CallLogNode.java", "diffHunk": "@@ -107,6 +100,59 @@ long getCallDuration(BlackboardArtifact artifact) throws TskCoreException {\n         return endAttribute.getValueLong() - startAttribute.getValueLong();\n     }\n     \n+    /**\n+     * Returns the phone number to display in the To/From column. The number is\n+     * picked from one of the 3 possible phone number attributes, based on the\n+     * direction of the call.\n+     *\n+     * @param artifact Call log artifact.\n+     *\n+     * @return Phone number to display.\n+     */\n+    private String getPhoneNumber(BlackboardArtifact artifact) {\n+        String direction = getAttributeDisplayString(artifact, TSK_DIRECTION);\n+\n+        String phoneNumberToReturn;\n+        String fromPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_FROM);\n+        String toPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_TO);\n+        String phoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER);\n+        switch (direction.toLowerCase()) {\n+            case \"incoming\": // NON-NLS \n+                phoneNumberToReturn = getFirstNonBlank(fromPhoneNumber, phoneNumber, toPhoneNumber);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDE0NjgzOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/communications/relationships/CallLogNode.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo1NzowOVrOF2g6qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxOTo1ODoyOFrOF3Dyaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjczMA==", "bodyText": "Coalescing blankness is a very common operation. Since you are using commons lang, they've already implemented this for you.\nhttps://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#firstNonBlank-T...-\nI suggest replacing the above getFirstNonBlank calls with StringUtils.firstNonBlank(...) and then, before returning, check if phoneNumberToReturn is null. If so, you can sub an empty value like you're doing here.", "url": "https://github.com/sleuthkit/autopsy/pull/5699#discussion_r392706730", "createdAt": "2020-03-15T19:57:09Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/communications/relationships/CallLogNode.java", "diffHunk": "@@ -107,6 +100,59 @@ long getCallDuration(BlackboardArtifact artifact) throws TskCoreException {\n         return endAttribute.getValueLong() - startAttribute.getValueLong();\n     }\n     \n+    /**\n+     * Returns the phone number to display in the To/From column. The number is\n+     * picked from one of the 3 possible phone number attributes, based on the\n+     * direction of the call.\n+     *\n+     * @param artifact Call log artifact.\n+     *\n+     * @return Phone number to display.\n+     */\n+    private String getPhoneNumber(BlackboardArtifact artifact) {\n+        String direction = getAttributeDisplayString(artifact, TSK_DIRECTION);\n+\n+        String phoneNumberToReturn;\n+        String fromPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_FROM);\n+        String toPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_TO);\n+        String phoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER);\n+        switch (direction.toLowerCase()) {\n+            case \"incoming\": // NON-NLS \n+                phoneNumberToReturn = getFirstNonBlank(fromPhoneNumber, phoneNumber, toPhoneNumber);\n+                break;\n+            case \"outgoing\": // NON-NLS\n+                phoneNumberToReturn = getFirstNonBlank(toPhoneNumber, phoneNumber, fromPhoneNumber);\n+                break;\n+            default:\n+                phoneNumberToReturn = getFirstNonBlank(toPhoneNumber, fromPhoneNumber, phoneNumber );\n+                break;\n+        }\n+\n+        return phoneNumberToReturn;\n+    }\n+    \n+    /**\n+     * Checks the given string arguments in order and returns the first non blank string.\n+     * Returns a blank string if all the input strings are blank.\n+     * \n+     * @param string1 First string to check\n+     * @param string2 Second string to check\n+     * @param string3 Third string to check\n+     * \n+     * @retunr first non blank string if there is one, blank string otherwise.\n+     * \n+     */\n+    private String getFirstNonBlank(String string1, String string2, String string3 ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk5NTA2NA==", "bodyText": "The firstNonBlank() method in StringUtils is available from version 3.8 of commons-lang3.\nWe are currently using 3.0 (but Thunderbird uses 3.8.1)\n@rcordovano: is it ok to update the commons-lang3 to latest ?", "url": "https://github.com/sleuthkit/autopsy/pull/5699#discussion_r392995064", "createdAt": "2020-03-16T12:43:16Z", "author": {"login": "raman-bt"}, "path": "Core/src/org/sleuthkit/autopsy/communications/relationships/CallLogNode.java", "diffHunk": "@@ -107,6 +100,59 @@ long getCallDuration(BlackboardArtifact artifact) throws TskCoreException {\n         return endAttribute.getValueLong() - startAttribute.getValueLong();\n     }\n     \n+    /**\n+     * Returns the phone number to display in the To/From column. The number is\n+     * picked from one of the 3 possible phone number attributes, based on the\n+     * direction of the call.\n+     *\n+     * @param artifact Call log artifact.\n+     *\n+     * @return Phone number to display.\n+     */\n+    private String getPhoneNumber(BlackboardArtifact artifact) {\n+        String direction = getAttributeDisplayString(artifact, TSK_DIRECTION);\n+\n+        String phoneNumberToReturn;\n+        String fromPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_FROM);\n+        String toPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_TO);\n+        String phoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER);\n+        switch (direction.toLowerCase()) {\n+            case \"incoming\": // NON-NLS \n+                phoneNumberToReturn = getFirstNonBlank(fromPhoneNumber, phoneNumber, toPhoneNumber);\n+                break;\n+            case \"outgoing\": // NON-NLS\n+                phoneNumberToReturn = getFirstNonBlank(toPhoneNumber, phoneNumber, fromPhoneNumber);\n+                break;\n+            default:\n+                phoneNumberToReturn = getFirstNonBlank(toPhoneNumber, fromPhoneNumber, phoneNumber );\n+                break;\n+        }\n+\n+        return phoneNumberToReturn;\n+    }\n+    \n+    /**\n+     * Checks the given string arguments in order and returns the first non blank string.\n+     * Returns a blank string if all the input strings are blank.\n+     * \n+     * @param string1 First string to check\n+     * @param string2 Second string to check\n+     * @param string3 Third string to check\n+     * \n+     * @retunr first non blank string if there is one, blank string otherwise.\n+     * \n+     */\n+    private String getFirstNonBlank(String string1, String string2, String string3 ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjczMA=="}, "originalCommit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzI3ODA1OQ==", "bodyText": "Yes.", "url": "https://github.com/sleuthkit/autopsy/pull/5699#discussion_r393278059", "createdAt": "2020-03-16T19:58:28Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/communications/relationships/CallLogNode.java", "diffHunk": "@@ -107,6 +100,59 @@ long getCallDuration(BlackboardArtifact artifact) throws TskCoreException {\n         return endAttribute.getValueLong() - startAttribute.getValueLong();\n     }\n     \n+    /**\n+     * Returns the phone number to display in the To/From column. The number is\n+     * picked from one of the 3 possible phone number attributes, based on the\n+     * direction of the call.\n+     *\n+     * @param artifact Call log artifact.\n+     *\n+     * @return Phone number to display.\n+     */\n+    private String getPhoneNumber(BlackboardArtifact artifact) {\n+        String direction = getAttributeDisplayString(artifact, TSK_DIRECTION);\n+\n+        String phoneNumberToReturn;\n+        String fromPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_FROM);\n+        String toPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_TO);\n+        String phoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER);\n+        switch (direction.toLowerCase()) {\n+            case \"incoming\": // NON-NLS \n+                phoneNumberToReturn = getFirstNonBlank(fromPhoneNumber, phoneNumber, toPhoneNumber);\n+                break;\n+            case \"outgoing\": // NON-NLS\n+                phoneNumberToReturn = getFirstNonBlank(toPhoneNumber, phoneNumber, fromPhoneNumber);\n+                break;\n+            default:\n+                phoneNumberToReturn = getFirstNonBlank(toPhoneNumber, fromPhoneNumber, phoneNumber );\n+                break;\n+        }\n+\n+        return phoneNumberToReturn;\n+    }\n+    \n+    /**\n+     * Checks the given string arguments in order and returns the first non blank string.\n+     * Returns a blank string if all the input strings are blank.\n+     * \n+     * @param string1 First string to check\n+     * @param string2 Second string to check\n+     * @param string3 Third string to check\n+     * \n+     * @retunr first non blank string if there is one, blank string otherwise.\n+     * \n+     */\n+    private String getFirstNonBlank(String string1, String string2, String string3 ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjczMA=="}, "originalCommit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 769, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}