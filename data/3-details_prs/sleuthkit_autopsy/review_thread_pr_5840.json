{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MzY1NTcx", "number": 5840, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozMDoyMFrOD0PsXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozMjo0N1rOD2v6Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTA5NjYyOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozMDoyMFrOGJF0Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozMDoyMFrOGJF0Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE4NTY5MQ==", "bodyText": "TAG_SETTINGS_NAME_VERSION -> TAG_SETTINGS_VERSION", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r412185691", "createdAt": "2020-04-21T13:30:20Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "diffHunk": "@@ -46,20 +48,43 @@\n     private static final Logger LOGGER = Logger.getLogger(TagNameDefinition.class.getName());\n     @NbBundle.Messages({\"TagNameDefinition.predefTagNames.bookmark.text=Bookmark\",\n         \"TagNameDefinition.predefTagNames.followUp.text=Follow Up\",\n-        \"TagNameDefinition.predefTagNames.notableItem.text=Notable Item\"})\n+        \"TagNameDefinition.predefTagNames.notableItem.text=Notable Item\",\n+        \"Category.one=CAT-1: Child Exploitation (Illegal)\",\n+        \"Category.two=CAT-2: Child Exploitation (Non-Illegal/Age Difficult)\",\n+        \"Category.three=CAT-3: CGI/Animation (Child Exploitive)\",\n+        \"Category.four=CAT-4: Exemplar/Comparison (Internal Use Only)\",\n+        \"Category.five=CAT-5: Non-pertinent\",\n+        \"Category.zero=CAT-0: Uncategorized\"})\n+\n     private static final String TAGS_SETTINGS_NAME = \"Tags\"; //NON-NLS\n-    private static final String TAG_NAMES_SETTING_KEY = \"TagNames\"; //NON-NLS    \n+    private static final String TAG_NAMES_SETTING_KEY = \"TagNames\"; //NON-NLS \n+    private static final String TAG_NAMES_SETTING_VERSION_KEY = \"CustomTagNameVersion\";\n+    private static final String TAG_SETTINGS_NAME_VERSION = \"1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbaaa7efaeec9eec076537b5116bb8d4c3a56c68"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTA5OTU4OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozMDo1OVrOGJF2WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzozMDo1OVrOGJF2WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE4NjIwMQ==", "bodyText": "TAG_NAMES_SETTING_VERSION_KEY -> TAG_SETTING_VERSION_KEY", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r412186201", "createdAt": "2020-04-21T13:30:59Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "diffHunk": "@@ -46,20 +48,43 @@\n     private static final Logger LOGGER = Logger.getLogger(TagNameDefinition.class.getName());\n     @NbBundle.Messages({\"TagNameDefinition.predefTagNames.bookmark.text=Bookmark\",\n         \"TagNameDefinition.predefTagNames.followUp.text=Follow Up\",\n-        \"TagNameDefinition.predefTagNames.notableItem.text=Notable Item\"})\n+        \"TagNameDefinition.predefTagNames.notableItem.text=Notable Item\",\n+        \"Category.one=CAT-1: Child Exploitation (Illegal)\",\n+        \"Category.two=CAT-2: Child Exploitation (Non-Illegal/Age Difficult)\",\n+        \"Category.three=CAT-3: CGI/Animation (Child Exploitive)\",\n+        \"Category.four=CAT-4: Exemplar/Comparison (Internal Use Only)\",\n+        \"Category.five=CAT-5: Non-pertinent\",\n+        \"Category.zero=CAT-0: Uncategorized\"})\n+\n     private static final String TAGS_SETTINGS_NAME = \"Tags\"; //NON-NLS\n-    private static final String TAG_NAMES_SETTING_KEY = \"TagNames\"; //NON-NLS    \n+    private static final String TAG_NAMES_SETTING_KEY = \"TagNames\"; //NON-NLS \n+    private static final String TAG_NAMES_SETTING_VERSION_KEY = \"CustomTagNameVersion\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbaaa7efaeec9eec076537b5116bb8d4c3a56c68"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTE1MDY0OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0MDo1OVrOGJGVWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo0MDo1OVrOGJGVWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE5NDEzOA==", "bodyText": "Let's add package private getters for these collections and make the fields private. Perhaps add _DEFS suffixes to the variable names for clarity.", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r412194138", "createdAt": "2020-04-21T13:40:59Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "diffHunk": "@@ -46,20 +48,43 @@\n     private static final Logger LOGGER = Logger.getLogger(TagNameDefinition.class.getName());\n     @NbBundle.Messages({\"TagNameDefinition.predefTagNames.bookmark.text=Bookmark\",\n         \"TagNameDefinition.predefTagNames.followUp.text=Follow Up\",\n-        \"TagNameDefinition.predefTagNames.notableItem.text=Notable Item\"})\n+        \"TagNameDefinition.predefTagNames.notableItem.text=Notable Item\",\n+        \"Category.one=CAT-1: Child Exploitation (Illegal)\",\n+        \"Category.two=CAT-2: Child Exploitation (Non-Illegal/Age Difficult)\",\n+        \"Category.three=CAT-3: CGI/Animation (Child Exploitive)\",\n+        \"Category.four=CAT-4: Exemplar/Comparison (Internal Use Only)\",\n+        \"Category.five=CAT-5: Non-pertinent\",\n+        \"Category.zero=CAT-0: Uncategorized\"})\n+\n     private static final String TAGS_SETTINGS_NAME = \"Tags\"; //NON-NLS\n-    private static final String TAG_NAMES_SETTING_KEY = \"TagNames\"; //NON-NLS    \n+    private static final String TAG_NAMES_SETTING_KEY = \"TagNames\"; //NON-NLS \n+    private static final String TAG_NAMES_SETTING_VERSION_KEY = \"CustomTagNameVersion\";\n+    private static final String TAG_SETTINGS_NAME_VERSION = \"1\";\n \n-    private static final List<String> STANDARD_NOTABLE_TAG_DISPLAY_NAMES = Arrays.asList(Bundle.TagNameDefinition_predefTagNames_notableItem_text(), DhsImageCategory.ONE.getDisplayName(), DhsImageCategory.TWO.getDisplayName(), DhsImageCategory.THREE.getDisplayName());  // NON-NLS\n-    private static final List<String> STANDARD_TAG_DISPLAY_NAMES = Arrays.asList(Bundle.TagNameDefinition_predefTagNames_bookmark_text(), Bundle.TagNameDefinition_predefTagNames_followUp_text(),\n-            Bundle.TagNameDefinition_predefTagNames_notableItem_text(), DhsImageCategory.ONE.getDisplayName(),\n-            DhsImageCategory.TWO.getDisplayName(), DhsImageCategory.THREE.getDisplayName(),\n-            DhsImageCategory.FOUR.getDisplayName(), DhsImageCategory.FIVE.getDisplayName(), DhsImageCategory.ZERO.getDisplayName());\n     private final String displayName;\n     private final String description;\n     private final TagName.HTML_COLOR color;\n     private final TskData.FileKnown knownStatus;\n \n+    static final Map<String, TagNameDefinition> STANDARD_TAGS = new HashMap<>();\n+    static final Map<String, TagNameDefinition> PROJECT_VIC_DEFAULT_TAGS = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbaaa7efaeec9eec076537b5116bb8d4c3a56c68"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzI4NTQ0OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1MjozMVrOGJaDTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1MjozMVrOGJaDTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxNzE5OQ==", "bodyText": "I think we still need a check here to make sure the user is not trying to make a tag definition with a tag name already used by the one of the standard tag definitions.", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r412517199", "createdAt": "2020-04-21T21:52:31Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDialog.java", "diffHunk": "@@ -140,7 +140,7 @@ private void doButtonAction(boolean okPressed) {\n                 return;\n             }\n             //if a tag name contains illegal characters and is not the name of one of the standard tags\n-            if (TagsManager.containsIllegalCharacters(newTagDisplayName) && !TagNameDefinition.getStandardTagNames().contains(newTagDisplayName)) {\n+            if (TagsManager.containsIllegalCharacters(newTagDisplayName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98151b1de8791fe3aeb64981a2aa035087fcbb19"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzI5MTMzOnYy", "diffSide": "LEFT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagOptionsPanel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1NDoxNFrOGJaGrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1NDoxNFrOGJaGrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxODA2Mw==", "bodyText": "By removing this altogether are we now allowing deletion of tags when ingest is running where we were not permitting this before?", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r412518063", "createdAt": "2020-04-21T21:54:14Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagOptionsPanel.java", "diffHunk": "@@ -446,8 +446,6 @@ private void updatePanel() {\n         boolean isSelected = tagNamesList.getSelectedIndex() != -1;\n         boolean enableEdit = !ingestIsRunning && isSelected;\n         editTagNameButton.setEnabled(enableEdit);\n-        boolean enableDelete = enableEdit && !TagNameDefinition.getStandardTagNames().contains(tagNamesList.getSelectedValue().getDisplayName());\n-        deleteTagNameButton.setEnabled(enableDelete);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98151b1de8791fe3aeb64981a2aa035087fcbb19"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzI5ODE5OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagsManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1NjowM1rOGJaKlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1NjowM1rOGJaKlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUxOTA2MA==", "bodyText": "In TagNameDefinition, we have the default Project VIC tag set name as a localizable string, where it is just hard-coded here.", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r412519060", "createdAt": "2020-04-21T21:56:03Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagsManager.java", "diffHunk": "@@ -168,6 +171,28 @@ public static String getNotableTagLabel() {\n      */\n     TagsManager(SleuthkitCase caseDb) {\n         this.caseDb = caseDb;\n+\n+        // Add standard tags and  the Project VIC default tag set and tags.\n+        TaggingManager taggingMgr = caseDb.getTaggingManager();\n+        try {\n+            List<TagSet> setList = taggingMgr.getTagSets();\n+            if (setList.isEmpty()) {\n+                //Assume new case and add Project VIC tags.\n+                TagSet set = taggingMgr.addTagSet(\"Project VIC (United States)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98151b1de8791fe3aeb64981a2aa035087fcbb19"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzMwODA3OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagsManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1ODo0N1rOGJaQHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTo1ODo0N1rOGJaQHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUyMDQ3Nw==", "bodyText": "We only want to fire one tag added event, with the added tag as the newValue and the list of deleted tags as the oldValue. Other wise we will trigger multiple GUI refreshes, etc.", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r412520477", "createdAt": "2020-04-21T21:58:47Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagsManager.java", "diffHunk": "@@ -449,14 +475,19 @@ public ContentTag addContentTag(Content content, TagName tagName, String comment\n      *                          database.\n      */\n     public ContentTag addContentTag(Content content, TagName tagName, String comment, long beginByteOffset, long endByteOffset) throws TskCoreException {\n-        ContentTag tag;\n-        tag = caseDb.addContentTag(content, tagName, comment, beginByteOffset, endByteOffset);\n+        TaggingManager.ContentTagChange tagChange = caseDb.getTaggingManager().addContentTag(content, tagName, comment, beginByteOffset, endByteOffset);\n         try {\n-            Case.getCurrentCaseThrows().notifyContentTagAdded(tag);\n+            Case currentCase = Case.getCurrentCaseThrows();\n+\n+            for (ContentTag tag : tagChange.getRemovedTags()) {\n+                currentCase.notifyContentTagDeleted(tag);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98151b1de8791fe3aeb64981a2aa035087fcbb19"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzQyNzAzOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjozNDoyN1rOGJbSnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMjozNDoyN1rOGJbSnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUzNzUwMw==", "bodyText": "See comment on this method in Jira.", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r412537503", "createdAt": "2020-04-21T22:34:27Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "diffHunk": "@@ -194,94 +227,101 @@ TagName saveToCase(SleuthkitCase caseDb) {\n      * Gets tag name definitions from the tag settings file as well as the\n      * default tag name definitions.\n      *\n+     * The currently custom tags properties are stored in one string property\n+     * value separated by ;. The properties of an individual tag are comma\n+     * separated in the format of:\n+     * tag_name,tag_description,tag_color,known_status\n+     *\n+     * In prior versions of autopsy the known_status was stored in the central\n+     * repository, therefore the properties file only had three values.\n+     *\n      * @return A set of tag name definition objects.\n      */\n     static synchronized Set<TagNameDefinition> getTagNameDefinitions() {\n         Set<TagNameDefinition> tagNames = new LinkedHashSet<>();\n-        //modifiable copy of default tags list for us to keep track of which default tags have already been created\n-        Set<String> standardTags = new LinkedHashSet<>(STANDARD_TAG_DISPLAY_NAMES);\n-        String setting = ModuleSettings.getConfigSetting(TAGS_SETTINGS_NAME, TAG_NAMES_SETTING_KEY);\n-        if (null != setting && !setting.isEmpty()) {\n-            List<String> tagNameTuples = Arrays.asList(setting.split(\";\"));\n+        String customTagsList = ModuleSettings.getConfigSetting(TAGS_SETTINGS_NAME, TAG_NAMES_SETTING_KEY);\n+        if (null != customTagsList && !customTagsList.isEmpty()) {\n+            List<String> customTagDefinitions = Arrays.asList(customTagsList.split(\";\"));\n             int numberOfAttributes = 0;\n-            if (tagNameTuples.size() > 0) {\n-                // Determine if Tags.properties file needs to be upgraded\n-                numberOfAttributes = tagNameTuples.get(0).split(\",\").length;\n+            List<TagNameDefinition> tagDefinitions = new ArrayList<>();\n+            if (!customTagDefinitions.isEmpty()) {\n+                // Use the first entry in the list to figure out if there are 3 \n+                // or four tag attributes in the file.\n+                numberOfAttributes = customTagDefinitions.get(0).split(\",\").length;\n             }\n             if (numberOfAttributes == 3) {\n-                // Upgrade Tags.Properties with the settings in Central Repository Settings if necessary\n-                tagNames.addAll(upgradeTagPropertiesFile(tagNameTuples, standardTags));\n+                // Get the known status from the Central Repository\n+                String crTagKnownProp = ModuleSettings.getConfigSetting(\"CentralRepository\", \"db.badTags\"); // NON-NLS\n+                List<String> knownTagNameList = new ArrayList<>();\n+                if (crTagKnownProp != null && !crTagKnownProp.isEmpty()) {\n+                    knownTagNameList.addAll(Arrays.asList(crTagKnownProp.split(\",\")));\n+                }\n+\n+                tagDefinitions = buildTagNameDefinitions(customTagDefinitions, knownTagNameList);\n             } else if (numberOfAttributes == 4) {\n-                // if the Tags.Properties file is up to date parse it\n-                tagNames.addAll(readCurrentTagPropertiesFile(tagNameTuples, standardTags));\n+                tagDefinitions = buildTagNameDefinitions(customTagDefinitions);\n             }\n-        }\n-        //create standard tags which should always exist which were not already created for whatever reason, such as upgrade\n-        for (String standardTagName : standardTags) {\n-            if (STANDARD_NOTABLE_TAG_DISPLAY_NAMES.contains(standardTagName)) {\n-                tagNames.add(new TagNameDefinition(standardTagName, \"\", TagName.HTML_COLOR.NONE, TskData.FileKnown.BAD));\n-            } else {\n-                tagNames.add(new TagNameDefinition(standardTagName, \"\", TagName.HTML_COLOR.NONE, TskData.FileKnown.UNKNOWN));\n+\n+            // Remove the standard and project vic tags.\n+            List<String> standardTagNames = getStandardTagNames();\n+            for (TagNameDefinition def : tagDefinitions) {\n+                if (!standardTagNames.contains(def.getDisplayName())) {\n+                    tagNames.add(def);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98151b1de8791fe3aeb64981a2aa035087fcbb19"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzI5NjExOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/Bundle.properties-MERGED", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyMzo1MlrOGMpB5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyMzo1MlrOGMpB5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkwODMyNQ==", "bodyText": "Is this perhaps a leftover from when we thought we were going to localize these?", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r415908325", "createdAt": "2020-04-27T15:23:52Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/Bundle.properties-MERGED", "diffHunk": "@@ -1,3 +1,9 @@\n+Category.five=CAT-5: Non-pertinent\n+Category.four=CAT-4: Exemplar/Comparison (Internal Use Only)\n+Category.one=CAT-1: Child Exploitation (Illegal)\n+Category.three=CAT-3: CGI/Animation (Child Exploitive)\n+Category.two=CAT-2: Child Exploitation (Non-Illegal/Age Difficult)\n+Category.zero=CAT-0: Uncategorized", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ef944becf4214684b68d67202236e51268bc49"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzMyNzczOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyOTozMVrOGMpUaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNToyOTozMVrOGMpUaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxMzA2Nw==", "bodyText": "It would be better to not hand out a reference to the internal data structure. The TagName objects are immutable, but the  collections are not.", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r415913067", "createdAt": "2020-04-27T15:29:31Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "diffHunk": "@@ -76,8 +98,20 @@\n         this.knownStatus = status;\n     }\n \n+    static Collection<TagNameDefinition> getStandardTagNameDefinitions() {\n+        return STANDARD_TAGS_DEFINITIONS.values();\n+    }\n+\n+    static Collection<TagNameDefinition> getProjectVICDefaultDefinitions() {\n+        return PROJECT_VIC_TAG_DEFINITIONS.values();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ef944becf4214684b68d67202236e51268bc49"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzMzOTA5OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozMToyN1rOGMpa-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozMToyN1rOGMpa-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNDc0NA==", "bodyText": "Nice additions to the commenting!", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r415914744", "createdAt": "2020-04-27T15:31:27Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "diffHunk": "@@ -194,94 +228,41 @@ TagName saveToCase(SleuthkitCase caseDb) {\n      * Gets tag name definitions from the tag settings file as well as the\n      * default tag name definitions.\n      *\n+     * The currently custom tags properties are stored in one string property\n+     * value separated by ;. The properties of an individual tag are comma\n+     * separated in the format of:\n+     * tag_name,tag_description,tag_color,known_status\n+     *\n+     * In prior versions of autopsy the known_status was stored in the central\n+     * repository, therefore the properties file only had three values.\n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ef944becf4214684b68d67202236e51268bc49"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzM0NjYyOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozMjo0N1rOGMpfYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTozMjo0N1rOGMpfYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTkxNTg3Mw==", "bodyText": "Base => Based", "url": "https://github.com/sleuthkit/autopsy/pull/5840#discussion_r415915873", "createdAt": "2020-04-27T15:32:47Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/casemodule/services/TagNameDefinition.java", "diffHunk": "@@ -303,7 +284,113 @@ static synchronized void setTagNameDefinitions(Set<TagNameDefinition> tagNames)\n                 LOGGER.log(Level.SEVERE, \"Exception while getting open case.\", ex);\n             }\n         }\n+\n+        ModuleSettings.setConfigSetting(TAGS_SETTINGS_NAME, TAG_SETTING_VERSION_KEY, Integer.toString(TAG_SETTINGS_VERSION));\n         ModuleSettings.setConfigSetting(TAGS_SETTINGS_NAME, TAG_NAMES_SETTING_KEY, setting.toString());\n     }\n \n+    /**\n+     * Updates the Tag Definition file to the current format.\n+     */\n+    private static void updateTagDefinitions() {\n+        Integer version = getPropertyFileVersion();\n+        List<TagNameDefinition> definitions = new ArrayList<>();\n+\n+        if (version == null) {\n+            String tagsProperty = ModuleSettings.getConfigSetting(TAGS_SETTINGS_NAME, TAG_NAMES_SETTING_KEY);\n+            if (tagsProperty == null || tagsProperty.isEmpty()) {\n+                return;\n+            }\n+\n+            List<String> individualTags = Arrays.asList(tagsProperty.split(\";\"));\n+\n+            if (individualTags == null || individualTags.isEmpty()) {\n+                return;\n+            }\n+\n+            List<String> notableTagList = null;\n+            for (String tagProps : individualTags) {\n+                String[] attributes = tagProps.split(\",\");\n+                TskData.FileKnown fileKnown = TskData.FileKnown.UNKNOWN;\n+                if (attributes.length == 3) {\n+                    // If notableTagList is null load it from the CR.\n+                    if (notableTagList == null) {\n+                        notableTagList = getCRNotableList();\n+                    } else {\n+                        if (notableTagList.contains(attributes[0])) {\n+                            fileKnown = TskData.FileKnown.BAD;\n+                        }\n+                    }\n+                } else {\n+                    fileKnown = TskData.FileKnown.valueOf(attributes[3]);\n+                }\n+\n+                definitions.add(new TagNameDefinition(attributes[0], attributes[1],\n+                        TagName.HTML_COLOR.valueOf(attributes[2]), fileKnown));\n+            }\n+        } \n+        \n+        if (definitions.isEmpty()) {\n+            return;\n+        }\n+\n+        // Remove the standard and Project VIC tags from the list\n+        List<String> tagStrings = new ArrayList<>();\n+        List<String> standardTags = getStandardTagNames();\n+        for (TagNameDefinition def : definitions) {\n+            if (!standardTags.contains(def.getDisplayName())) {\n+                tagStrings.add(def.toSettingsFormat());\n+            }\n+        }\n+\n+        // Write out the version and the new tag list.\n+        ModuleSettings.setConfigSetting(TAGS_SETTINGS_NAME, TAG_SETTING_VERSION_KEY, Integer.toString(TAG_SETTINGS_VERSION));\n+        ModuleSettings.setConfigSetting(TAGS_SETTINGS_NAME, TAG_NAMES_SETTING_KEY, String.join(\";\", tagStrings));\n+    }\n+    \n+    /**\n+     * Returns a list notable tag names from the CR bagTag list.\n+     * \n+     * @return A list of tag names, or empty list if none were found.\n+     */\n+    private static  List<String> getCRNotableList() {\n+        String notableTagsProp = ModuleSettings.getConfigSetting(\"CentralRepository\", \"db.badTags\"); // NON-NLS\n+        if (notableTagsProp != null && !notableTagsProp.isEmpty()) {\n+            return Arrays.asList(notableTagsProp.split(\",\"));\n+        }\n+\n+        return new ArrayList<>();\n+    }\n+\n+    /**\n+     * Base on the version in the Tags property file, returns whether or not the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ef944becf4214684b68d67202236e51268bc49"}, "originalPosition": 294}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 581, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}