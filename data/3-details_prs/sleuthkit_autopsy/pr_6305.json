{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNDY5OTY2", "number": 6305, "title": "6865 fix past occurrences discovery", "bodyText": "", "createdAt": "2020-09-21T18:05:58Z", "url": "https://github.com/sleuthkit/autopsy/pull/6305", "merged": true, "mergeCommit": {"oid": "66fbc674b7ef9a3ba50fcd4db2c5c31fed3b1863"}, "closed": true, "closedAt": "2020-09-24T22:48:51Z", "author": {"login": "wschaeferB"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLHKwOgH2gAyNDkwNDY5OTY2OjdjNjUyYjM4NGNkYTFjOWI2YTY4ODE5OGE1N2E1NmNjNGJkZGMzZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMH650AFqTQ5NTk1Nzk4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7c652b384cda1c9b6a688198a57a56cc4bddc3d8", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/7c652b384cda1c9b6a688198a57a56cc4bddc3d8", "committedDate": "2020-09-21T17:51:29Z", "message": "6865 fix other occurrences for files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f0f7022b77f8f1515147c71cce53fd66f549adf", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/0f0f7022b77f8f1515147c71cce53fd66f549adf", "committedDate": "2020-09-21T17:57:11Z", "message": "6865 fix alternate filter use for domains"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1d6e36dba2bafaf854a05a600c659e9f8afe483", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/a1d6e36dba2bafaf854a05a600c659e9f8afe483", "committedDate": "2020-09-21T18:04:21Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6865-FixPastOccurrencesDiscovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55b1ff2809ae6b0013520ec2672c0f3b6cab0007", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/55b1ff2809ae6b0013520ec2672c0f3b6cab0007", "committedDate": "2020-09-21T18:11:28Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6865-FixPastOccurrencesDiscovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cb278473dfdffdc36e2e52d3f47917764e67227", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/8cb278473dfdffdc36e2e52d3f47917764e67227", "committedDate": "2020-09-21T18:49:06Z", "message": "6865 resolve merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NzQ0OTQy", "url": "https://github.com/sleuthkit/autopsy/pull/6305#pullrequestreview-494744942", "createdAt": "2020-09-23T14:49:43Z", "commit": {"oid": "8cb278473dfdffdc36e2e52d3f47917764e67227"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDo0OTo0NFrOHWyYmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTowMDowOVrOHWy6Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1NjIxOQ==", "bodyText": "I don't think we should run the CR for every query.", "url": "https://github.com/sleuthkit/autopsy/pull/6305#discussion_r493656219", "createdAt": "2020-09-23T14:49:44Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/search/DomainSearchCacheLoader.java", "diffHunk": "@@ -59,23 +59,25 @@\n     public Map<GroupKey, List<Result>> load(SearchKey key) throws DiscoveryException, SQLException, TskCoreException {\n \n         List<Result> domainResults = getResultDomainsFromDatabase(key);\n-\n+        //manually add the attributes for filters which use alternate non filters and could be used by grouping or sorting\n+        DiscoveryAttributes.FrequencyAttribute freqAttr = new DiscoveryAttributes.FrequencyAttribute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb278473dfdffdc36e2e52d3f47917764e67227"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY1ODU5Nw==", "bodyText": "I think the mistake here on my part was not adding attributes to results before running the filters. So, I think this block of code should be moved before the filters are applied. That way, only the frequency attribute will run when it's selected.", "url": "https://github.com/sleuthkit/autopsy/pull/6305#discussion_r493658597", "createdAt": "2020-09-23T14:52:35Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/search/DomainSearchCacheLoader.java", "diffHunk": "@@ -59,23 +59,25 @@\n     public Map<GroupKey, List<Result>> load(SearchKey key) throws DiscoveryException, SQLException, TskCoreException {\n \n         List<Result> domainResults = getResultDomainsFromDatabase(key);\n-\n+        //manually add the attributes for filters which use alternate non filters and could be used by grouping or sorting\n+        DiscoveryAttributes.FrequencyAttribute freqAttr = new DiscoveryAttributes.FrequencyAttribute();\n+        freqAttr.addAttributeToResults(domainResults, key.getSleuthkitCase(), key.getCentralRepository());\n         // Apply secondary in memory filters\n         for (AbstractFilter filter : key.getFilters()) {\n             if (filter.useAlternateFilter()) {\n                 domainResults = filter.applyAlternateFilter(domainResults, key.getSleuthkitCase(), key.getCentralRepository());\n             }\n         }\n-        \n+\n         // Grouping by CR Frequency, for example, will require further processing\n         // in order to make the correct decision. The attribute types that require\n         // more information implement their logic by overriding `addAttributeToResults`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb278473dfdffdc36e2e52d3f47917764e67227"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2MDI3OQ==", "bodyText": "I think this should stay, so that if only the frequency filter is selected it'll work.", "url": "https://github.com/sleuthkit/autopsy/pull/6305#discussion_r493660279", "createdAt": "2020-09-23T14:54:38Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/search/SearchFiltering.java", "diffHunk": "@@ -649,10 +652,6 @@ public boolean useAlternateFilter() {\n         @Override\n         public List<Result> applyAlternateFilter(List<Result> currentResults, SleuthkitCase caseDb,\n                 CentralRepository centralRepoDb) throws DiscoveryException {\n-            // Set the frequency for each file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb278473dfdffdc36e2e52d3f47917764e67227"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2MTUzNw==", "bodyText": "Wouldn't you need to do this https://github.com/sleuthkit/autopsy/blob/develop/Core/src/org/sleuthkit/autopsy/discovery/search/DomainSearchCacheLoader.java#L73, before applying filters? Also just for grouping in general if the selected attribute needs it.", "url": "https://github.com/sleuthkit/autopsy/pull/6305#discussion_r493661537", "createdAt": "2020-09-23T14:56:08Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/search/SearchFiltering.java", "diffHunk": "@@ -116,6 +116,9 @@\n             resultList.add(new ResultFile(abstractFile));\n         }\n \n+        //manually add the attributes for filters which use alternate non filters and could be used by grouping or sorting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb278473dfdffdc36e2e52d3f47917764e67227"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2NDgwMw==", "bodyText": "This is important for not re-calculating frequencies. I think it should stay.", "url": "https://github.com/sleuthkit/autopsy/pull/6305#discussion_r493664803", "createdAt": "2020-09-23T15:00:09Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/search/DiscoveryAttributes.java", "diffHunk": "@@ -258,37 +258,33 @@ private void processResultFilesForCR(List<Result> results,\n             Set<String> hashesToLookUp = new HashSet<>();\n             List<ResultDomain> domainsToQuery = new ArrayList<>();\n             for (Result result : results) {\n-                if (result.getKnown() == TskData.FileKnown.KNOWN) {\n-                    result.setFrequency(SearchData.Frequency.KNOWN);\n-                }\n-\n-                if (result.getType() != SearchData.Type.DOMAIN) {\n-                    ResultFile file = (ResultFile) result;\n-                    if (file.getFrequency() == SearchData.Frequency.UNKNOWN\n-                            && file.getFirstInstance().getMd5Hash() != null\n-                            && !file.getFirstInstance().getMd5Hash().isEmpty()) {\n-                        hashesToLookUp.add(file.getFirstInstance().getMd5Hash());\n-                        currentFiles.add(file);\n+                // If frequency was already calculated, skip...\n+                if (result.getFrequency() == SearchData.Frequency.UNKNOWN) {\n+                    if (result.getKnown() == TskData.FileKnown.KNOWN) {\n+                        result.setFrequency(SearchData.Frequency.KNOWN);\n                     }\n \n-                    if (hashesToLookUp.size() >= BATCH_SIZE) {\n-                        computeFrequency(hashesToLookUp, currentFiles, centralRepoDb);\n+                    if (result.getType() != SearchData.Type.DOMAIN) {\n+                        ResultFile file = (ResultFile) result;\n+                        if (file.getFirstInstance().getMd5Hash() != null\n+                                && !file.getFirstInstance().getMd5Hash().isEmpty()) {\n+                            hashesToLookUp.add(file.getFirstInstance().getMd5Hash());\n+                            currentFiles.add(file);\n+                        }\n \n-                        hashesToLookUp.clear();\n-                        currentFiles.clear();\n-                    }\n-                } else {\n-                    ResultDomain domainInstance = (ResultDomain) result;\n-                    if (domainInstance.getFrequency() != SearchData.Frequency.UNKNOWN) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cb278473dfdffdc36e2e52d3f47917764e67227"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fd17fa52140c2f6d055dc6f7ac0c9b7e888ab84", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/1fd17fa52140c2f6d055dc6f7ac0c9b7e888ab84", "committedDate": "2020-09-23T15:20:09Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6865-FixPastOccurrencesDiscovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14de7eda35ed9f1aba0edc69bf267e5571eb71fb", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/14de7eda35ed9f1aba0edc69bf267e5571eb71fb", "committedDate": "2020-09-23T21:55:30Z", "message": "6865 changes to address feedback and help performance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb57c45be5cdfdf7713f0eba14729664e514b9aa", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/fb57c45be5cdfdf7713f0eba14729664e514b9aa", "committedDate": "2020-09-23T22:05:22Z", "message": "6865 resolve merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjE1NTA3", "url": "https://github.com/sleuthkit/autopsy/pull/6305#pullrequestreview-495615507", "createdAt": "2020-09-24T14:10:49Z", "commit": {"oid": "fb57c45be5cdfdf7713f0eba14729664e514b9aa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoxMDo0OVrOHXc2gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDoxMDo0OVrOHXc2gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM1MjAwMA==", "bodyText": "There was a thread interrupt check here that got removed with the merge conflict.", "url": "https://github.com/sleuthkit/autopsy/pull/6305#discussion_r494352000", "createdAt": "2020-09-24T14:10:49Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/search/DomainSearchCacheLoader.java", "diffHunk": "@@ -57,36 +57,35 @@\n \n     @Override\n     public Map<GroupKey, List<Result>> load(SearchKey key) throws DiscoveryException, SQLException, TskCoreException, InterruptedException {\n-\n         List<Result> domainResults = getResultDomainsFromDatabase(key);\n-\n         // Apply secondary in memory filters\n         for (AbstractFilter filter : key.getFilters()) {\n             if(Thread.currentThread().isInterrupted()) {\n                 throw new InterruptedException();\n-            }\n-            \n+            }      \n             if (filter.useAlternateFilter()) {\n                 domainResults = filter.applyAlternateFilter(domainResults, key.getSleuthkitCase(), key.getCentralRepository());\n             }\n         }\n-        \n         // Grouping by CR Frequency, for example, will require further processing\n         // in order to make the correct decision. The attribute types that require\n         // more information implement their logic by overriding `addAttributeToResults`.\n         List<AttributeType> searchAttributes = new ArrayList<>();\n         searchAttributes.add(key.getGroupAttributeType());\n         searchAttributes.addAll(key.getFileSortingMethod().getRequiredAttributes());\n-        \n         for (AttributeType attr : searchAttributes) {\n             if(Thread.currentThread().isInterrupted()) {\n                 throw new InterruptedException();\n-            }\n-            \n+            }       \n             attr.addAttributeToResults(domainResults, \n                     key.getSleuthkitCase(), key.getCentralRepository());\n         }\n-\n+        // Apply secondary in memory filters\n+        for (AbstractFilter filter : key.getFilters()) {\n+            if (filter.useAlternateFilter()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb57c45be5cdfdf7713f0eba14729664e514b9aa"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8098b7c1e9ac43447ca5a1377d7a54d0c39cf814", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/8098b7c1e9ac43447ca5a1377d7a54d0c39cf814", "committedDate": "2020-09-24T14:55:10Z", "message": "6865 add back interrupted check after bad merge conflict resolution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f64357034a879dd2ecc6b6d3dabbaf405b31a9f", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/5f64357034a879dd2ecc6b6d3dabbaf405b31a9f", "committedDate": "2020-09-24T14:56:19Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6865-FixPastOccurrencesDiscovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ad93614adda628edbd2d61574770af1228088f6", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/8ad93614adda628edbd2d61574770af1228088f6", "committedDate": "2020-09-24T15:23:31Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6865-FixPastOccurrencesDiscovery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1ODk1NDUx", "url": "https://github.com/sleuthkit/autopsy/pull/6305#pullrequestreview-495895451", "createdAt": "2020-09-24T19:40:24Z", "commit": {"oid": "8ad93614adda628edbd2d61574770af1228088f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxOTo0MDoyNFrOHXp8XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxOTo0MDoyNFrOHXp8XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU2NjQ5Mg==", "bodyText": "This code is now duplicated.", "url": "https://github.com/sleuthkit/autopsy/pull/6305#discussion_r494566492", "createdAt": "2020-09-24T19:40:24Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/discovery/search/DomainSearchCacheLoader.java", "diffHunk": "@@ -57,36 +57,38 @@\n \n     @Override\n     public Map<GroupKey, List<Result>> load(SearchKey key) throws DiscoveryException, SQLException, TskCoreException, InterruptedException {\n-\n         List<Result> domainResults = getResultDomainsFromDatabase(key);\n-\n         // Apply secondary in memory filters\n         for (AbstractFilter filter : key.getFilters()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad93614adda628edbd2d61574770af1228088f6"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bd138cdc529e08b87df24b64c3c79ee9bf919eb", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/6bd138cdc529e08b87df24b64c3c79ee9bf919eb", "committedDate": "2020-09-24T20:29:26Z", "message": "Merge branch 'develop' of https://github.com/sleuthkit/autopsy into 6865-FixPastOccurrencesDiscovery"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05f8806c5a19ff9d17ba6c1e1fa0ab80813c52f8", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/05f8806c5a19ff9d17ba6c1e1fa0ab80813c52f8", "committedDate": "2020-09-24T20:29:52Z", "message": "6865 remove duplicated code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1OTU3OTg5", "url": "https://github.com/sleuthkit/autopsy/pull/6305#pullrequestreview-495957989", "createdAt": "2020-09-24T21:18:00Z", "commit": {"oid": "05f8806c5a19ff9d17ba6c1e1fa0ab80813c52f8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2851, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}