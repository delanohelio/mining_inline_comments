{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NzcxNzE4", "number": 5690, "title": "6015: Upgrade existing central repositories to reflect accounts schema", "bodyText": "", "createdAt": "2020-03-09T19:18:20Z", "url": "https://github.com/sleuthkit/autopsy/pull/5690", "merged": true, "mergeCommit": {"oid": "f5a75277bd95dd03e085933111050a53ff2888ba"}, "closed": true, "closedAt": "2020-03-13T15:36:37Z", "author": {"login": "raman-bt"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMC7JJgH2gAyMzg1NzcxNzE4OmU4NTk2OGI4OTdlYTgxMzQwZDhmNDc5NmE1ZjMxZTBkN2NjZTg5ZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNSJ8ZgFqTM3NDQwMDM1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8", "author": {"user": {"login": "raman-bt", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/e85968b897ea81340d8f4796a5f31e0d7cce89d8", "committedDate": "2020-03-09T19:17:35Z", "message": "6015: Upgrade existing central repositories to reflect accounts schema"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTIzNzIx", "url": "https://github.com/sleuthkit/autopsy/pull/5690#pullrequestreview-373123721", "createdAt": "2020-03-11T21:03:39Z", "commit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMTowMzozOVrOF1JBXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjoyNDo1OVrOF1LYIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI2NjY1NA==", "bodyText": "If this method does not do any work, i.e., if the current schema is already 1.4 or greater, this method should return the schema version number passed in. See SleuthKitCase.", "url": "https://github.com/sleuthkit/autopsy/pull/5690#discussion_r391266654", "createdAt": "2020-03-11T21:03:39Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/CentralRepoDbUpgrader13To14.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Central Repository\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.centralrepository.datamodel;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import org.sleuthkit.datamodel.CaseDbSchemaVersionNumber;\n+\n+\n+/**\n+ * This class updates CR schema to 1.4\n+ * \n+ *  New correlation types for accounts are added, as well as some accounts related new tables are added in this version.\n+ * \n+ */\n+public class CentralRepoDbUpgrader13To14 implements CentralRepoDbUpgrader {\n+\n+    @Override\n+    public CaseDbSchemaVersionNumber upgradeSchema(CaseDbSchemaVersionNumber dbSchemaVersion, Connection connection) throws CentralRepoException, SQLException {\n+\n+        if (dbSchemaVersion.compareTo(new CaseDbSchemaVersionNumber(1, 4)) < 0) {\n+\n+            try (Statement statement = connection.createStatement();) {\n+\n+                CentralRepoPlatforms selectedPlatform = CentralRepoPlatforms.getSelectedPlatform();\n+\n+                // Create account_types and accounts tables which are referred by X_instances tables\n+                statement.execute(RdbmsCentralRepoFactory.getCreateAccountTypesTableStatement(selectedPlatform));\n+                statement.execute(RdbmsCentralRepoFactory.getCreateAccountsTableStatement(selectedPlatform));\n+\n+                for (CorrelationAttributeInstance.Type type : CorrelationAttributeInstance.getDefaultCorrelationTypes()) {\n+                    String instance_type_dbname = CentralRepoDbUtil.correlationTypeToInstanceTableName(type);\n+\n+                    if (type.getId() >= CorrelationAttributeInstance.ADDITIONAL_TYPES_BASE_ID) {\n+\n+                        // these are new Correlation types - new tables need to be created\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getCreateArtifactInstancesTableTemplate(selectedPlatform), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddCaseIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddDataSourceIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddValueIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddKnownStatusIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddObjectIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+\n+                        // add new correlation type\n+                        CentralRepoDbUtil.insertCorrelationType(connection, type);\n+\n+                    } else {\n+\n+                        // Alter the existing X_Instance tables to add account_id column \n+                        String sqlStr = String.format(getAlterArtifactInstancesAddAccountIdTemplate(selectedPlatform), instance_type_dbname);\n+                        statement.execute(sqlStr);\n+\n+                        // SQLite does NOT allow adding a constraint with Alter Table statement.\n+                        if (selectedPlatform == CentralRepoPlatforms.POSTGRESQL) {\n+                            sqlStr = String.format(getAlterArtifactInstancesAddAccountIdConstraintTemplate(), instance_type_dbname);\n+                            statement.execute(sqlStr);\n+                        }\n+                    }\n+                }\n+\n+                // insert default data\n+                RdbmsCentralRepoFactory.insertDefaultAccountsTablesContent(connection, selectedPlatform);\n+            }\n+        }\n+\n+        return new CaseDbSchemaVersionNumber(1, 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI3MDMzMQ==", "bodyText": "The API in this interface reflects the way schema updates are done in SleuthkitCase, where the returned version number is used to update the version number stored in the database. The CR code uses a different approach that seems simpler. As a result the return value is not used. See call in RdbmsCentralRepo below. It seems like we don't need the return value.", "url": "https://github.com/sleuthkit/autopsy/pull/5690#discussion_r391270331", "createdAt": "2020-03-11T21:11:12Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/CentralRepoDbUpgrader.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Central Repository\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.centralrepository.datamodel;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import org.sleuthkit.datamodel.CaseDbSchemaVersionNumber;\n+\n+/**\n+ * Common interface to upgrade central repository database schema\n+ */\n+public interface CentralRepoDbUpgrader {\n+    \n+    /**\n+     * Updates the Central Repository schema using the given open connection.\n+     * \n+     * @param dbSchemaVersion Current schema version.\n+     * @param connection Connection to use for upgrade\n+     * \n+     * @return New schema version.\n+     * \n+     * @throws CentralRepoException If there is an error in upgrade.\n+     * @throws SQLException in case of any SQL errors.\n+     */\n+    CaseDbSchemaVersionNumber upgradeSchema(CaseDbSchemaVersionNumber dbSchemaVersion, Connection connection) throws CentralRepoException, SQLException;\n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI3MTQ5Ng==", "bodyText": "If we were to follow the SleuthkitCase model, we would only return the new version number if the update was completed. This code appears to be wrong, since the CR schema might already be at a more recent version. However, as noted in a comment to the interface, the CR does not use the return value anyway.", "url": "https://github.com/sleuthkit/autopsy/pull/5690#discussion_r391271496", "createdAt": "2020-03-11T21:13:43Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/CentralRepoDbUpgrader13To14.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Central Repository\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.centralrepository.datamodel;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import org.sleuthkit.datamodel.CaseDbSchemaVersionNumber;\n+\n+\n+/**\n+ * This class updates CR schema to 1.4\n+ * \n+ *  New correlation types for accounts are added, as well as some accounts related new tables are added in this version.\n+ * \n+ */\n+public class CentralRepoDbUpgrader13To14 implements CentralRepoDbUpgrader {\n+\n+    @Override\n+    public CaseDbSchemaVersionNumber upgradeSchema(CaseDbSchemaVersionNumber dbSchemaVersion, Connection connection) throws CentralRepoException, SQLException {\n+\n+        if (dbSchemaVersion.compareTo(new CaseDbSchemaVersionNumber(1, 4)) < 0) {\n+\n+            try (Statement statement = connection.createStatement();) {\n+\n+                CentralRepoPlatforms selectedPlatform = CentralRepoPlatforms.getSelectedPlatform();\n+\n+                // Create account_types and accounts tables which are referred by X_instances tables\n+                statement.execute(RdbmsCentralRepoFactory.getCreateAccountTypesTableStatement(selectedPlatform));\n+                statement.execute(RdbmsCentralRepoFactory.getCreateAccountsTableStatement(selectedPlatform));\n+\n+                for (CorrelationAttributeInstance.Type type : CorrelationAttributeInstance.getDefaultCorrelationTypes()) {\n+                    String instance_type_dbname = CentralRepoDbUtil.correlationTypeToInstanceTableName(type);\n+\n+                    if (type.getId() >= CorrelationAttributeInstance.ADDITIONAL_TYPES_BASE_ID) {\n+\n+                        // these are new Correlation types - new tables need to be created\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getCreateArtifactInstancesTableTemplate(selectedPlatform), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddCaseIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddDataSourceIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddValueIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddKnownStatusIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddObjectIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+\n+                        // add new correlation type\n+                        CentralRepoDbUtil.insertCorrelationType(connection, type);\n+\n+                    } else {\n+\n+                        // Alter the existing X_Instance tables to add account_id column \n+                        String sqlStr = String.format(getAlterArtifactInstancesAddAccountIdTemplate(selectedPlatform), instance_type_dbname);\n+                        statement.execute(sqlStr);\n+\n+                        // SQLite does NOT allow adding a constraint with Alter Table statement.\n+                        if (selectedPlatform == CentralRepoPlatforms.POSTGRESQL) {\n+                            sqlStr = String.format(getAlterArtifactInstancesAddAccountIdConstraintTemplate(), instance_type_dbname);\n+                            statement.execute(sqlStr);\n+                        }\n+                    }\n+                }\n+\n+                // insert default data\n+                RdbmsCentralRepoFactory.insertDefaultAccountsTablesContent(connection, selectedPlatform);\n+            }\n+        }\n+\n+        return new CaseDbSchemaVersionNumber(1, 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI3NDQyOA==", "bodyText": "We should comment on the decision to not add the constraint during SQLite upgrades because of the lack of ALTER TABLE support and the cost of doing the upgrade. Without the comment, it could look to a maintainer like we have a bug.", "url": "https://github.com/sleuthkit/autopsy/pull/5690#discussion_r391274428", "createdAt": "2020-03-11T21:19:42Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/CentralRepoDbUpgrader13To14.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Central Repository\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.centralrepository.datamodel;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import org.sleuthkit.datamodel.CaseDbSchemaVersionNumber;\n+\n+\n+/**\n+ * This class updates CR schema to 1.4\n+ * \n+ *  New correlation types for accounts are added, as well as some accounts related new tables are added in this version.\n+ * \n+ */\n+public class CentralRepoDbUpgrader13To14 implements CentralRepoDbUpgrader {\n+\n+    @Override\n+    public CaseDbSchemaVersionNumber upgradeSchema(CaseDbSchemaVersionNumber dbSchemaVersion, Connection connection) throws CentralRepoException, SQLException {\n+\n+        if (dbSchemaVersion.compareTo(new CaseDbSchemaVersionNumber(1, 4)) < 0) {\n+\n+            try (Statement statement = connection.createStatement();) {\n+\n+                CentralRepoPlatforms selectedPlatform = CentralRepoPlatforms.getSelectedPlatform();\n+\n+                // Create account_types and accounts tables which are referred by X_instances tables\n+                statement.execute(RdbmsCentralRepoFactory.getCreateAccountTypesTableStatement(selectedPlatform));\n+                statement.execute(RdbmsCentralRepoFactory.getCreateAccountsTableStatement(selectedPlatform));\n+\n+                for (CorrelationAttributeInstance.Type type : CorrelationAttributeInstance.getDefaultCorrelationTypes()) {\n+                    String instance_type_dbname = CentralRepoDbUtil.correlationTypeToInstanceTableName(type);\n+\n+                    if (type.getId() >= CorrelationAttributeInstance.ADDITIONAL_TYPES_BASE_ID) {\n+\n+                        // these are new Correlation types - new tables need to be created\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getCreateArtifactInstancesTableTemplate(selectedPlatform), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddCaseIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddDataSourceIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddValueIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddKnownStatusIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+                        statement.execute(String.format(RdbmsCentralRepoFactory.getAddObjectIdIndexTemplate(), instance_type_dbname, instance_type_dbname));\n+\n+                        // add new correlation type\n+                        CentralRepoDbUtil.insertCorrelationType(connection, type);\n+\n+                    } else {\n+\n+                        // Alter the existing X_Instance tables to add account_id column \n+                        String sqlStr = String.format(getAlterArtifactInstancesAddAccountIdTemplate(selectedPlatform), instance_type_dbname);\n+                        statement.execute(sqlStr);\n+\n+                        // SQLite does NOT allow adding a constraint with Alter Table statement.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI3NTQwNA==", "bodyText": "This error message has a copy-paste error.", "url": "https://github.com/sleuthkit/autopsy/pull/5690#discussion_r391275404", "createdAt": "2020-03-11T21:21:46Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/RdbmsCentralRepoFactory.java", "diffHunk": "@@ -825,6 +825,35 @@ private boolean insertDefaultPersonaTablesContent(Connection conn) {\n         return true;\n     }\n     \n+      /**\n+      * Inserts the default content in accounts related tables.\n+      * \n+      * @param conn Database connection to use.\n+      * \n+      * @return True if success, false otherwise.\n+      */\n+    static boolean insertDefaultAccountsTablesContent(Connection conn, CentralRepoPlatforms selectedPlatform) {\n+\n+        try (Statement stmt = conn.createStatement();) {\n+\n+            // Populate the account_types table\n+            for (Account.Type type : Account.Type.PREDEFINED_ACCOUNT_TYPES) {\n+                int correlationTypeId = getCorrelationTypeIdForAccountType(conn, type);\n+                if (correlationTypeId > 0) {\n+                    String sqlString = String.format(\"INSERT INTO account_types (type_name, display_name, correlation_type_id) VALUES ('%s', '%s', %d)\" + getOnConflictDoNothingClause(selectedPlatform),\n+                            type.getTypeName(), type.getDisplayName(), correlationTypeId);\n+                    stmt.execute(sqlString);\n+                }\n+            }\n+\n+        } catch (SQLException ex) {\n+            LOGGER.log(Level.SEVERE, String.format(\"Failed to populate default data in Persona tables.\"), ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI5OTI5Ng==", "bodyText": "I think it would be more accurate to say \"...referenced by the X_acct_instances tables.\"", "url": "https://github.com/sleuthkit/autopsy/pull/5690#discussion_r391299296", "createdAt": "2020-03-11T22:14:22Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/CentralRepoDbUpgrader13To14.java", "diffHunk": "@@ -0,0 +1,114 @@\n+/*\n+ * Central Repository\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.centralrepository.datamodel;\n+\n+import java.sql.Connection;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+import org.sleuthkit.datamodel.CaseDbSchemaVersionNumber;\n+\n+\n+/**\n+ * This class updates CR schema to 1.4\n+ * \n+ *  New correlation types for accounts are added, as well as some accounts related new tables are added in this version.\n+ * \n+ */\n+public class CentralRepoDbUpgrader13To14 implements CentralRepoDbUpgrader {\n+\n+    @Override\n+    public CaseDbSchemaVersionNumber upgradeSchema(CaseDbSchemaVersionNumber dbSchemaVersion, Connection connection) throws CentralRepoException, SQLException {\n+\n+        if (dbSchemaVersion.compareTo(new CaseDbSchemaVersionNumber(1, 4)) < 0) {\n+\n+            try (Statement statement = connection.createStatement();) {\n+\n+                CentralRepoPlatforms selectedPlatform = CentralRepoPlatforms.getSelectedPlatform();\n+\n+                // Create account_types and accounts tables which are referred by X_instances tables", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwNTI1MA==", "bodyText": "As noted in previous comments, newVer is not used.", "url": "https://github.com/sleuthkit/autopsy/pull/5690#discussion_r391305250", "createdAt": "2020-03-11T22:24:59Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/RdbmsCentralRepo.java", "diffHunk": "@@ -3808,6 +3808,10 @@ public void upgradeSchema() throws CentralRepoException, SQLException, Incompati\n                         throw new CentralRepoException(\"Currently selected database platform \\\"\" + selectedPlatform.name() + \"\\\" can not be upgraded.\", Bundle.AbstractSqlEamDb_cannotUpgrage_message(selectedPlatform.name()));\n                 }\n             }\n+\n+            // Upgrade to 1.4\n+            CaseDbSchemaVersionNumber newVer = new CentralRepoDbUpgrader13To14().upgradeSchema(dbSchemaVersion, conn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e85968b897ea81340d8f4796a5f31e0d7cce89d8"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af551fbed0f1276a354c94e47a9d5e21452f4374", "author": {"user": {"login": "raman-bt", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/af551fbed0f1276a354c94e47a9d5e21452f4374", "committedDate": "2020-03-12T15:45:55Z", "message": "Addressed review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NDAwMzUw", "url": "https://github.com/sleuthkit/autopsy/pull/5690#pullrequestreview-374400350", "createdAt": "2020-03-13T15:36:15Z", "commit": {"oid": "af551fbed0f1276a354c94e47a9d5e21452f4374"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2792, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}