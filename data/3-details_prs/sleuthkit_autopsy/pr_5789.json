{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTA1NjY4", "number": 5789, "title": "6251 is supported NPE", "bodyText": "", "createdAt": "2020-04-08T15:04:13Z", "url": "https://github.com/sleuthkit/autopsy/pull/5789", "merged": true, "mergeCommit": {"oid": "b1e62b318abd70e8db832f9848ece1c5266d3c0f"}, "closed": true, "closedAt": "2020-04-15T16:31:15Z", "author": {"login": "gdicristofaro"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVZGVLAH2gAyNDAwOTA1NjY4Ojc2ZDcyOTJlYTJjZjkyNzIyNTRmOGJlMjM2YjBlZDg3MzM5OGY1MmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWIO5uAFqTM5MTI0NjEwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "76d7292ea2cf9272254f8be236b0ed873398f52a", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/76d7292ea2cf9272254f8be236b0ed873398f52a", "committedDate": "2020-04-07T20:13:02Z", "message": "initial implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c47c8b5f69448f29f231b7370358c90e9eb0069", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/3c47c8b5f69448f29f231b7370358c90e9eb0069", "committedDate": "2020-04-07T20:13:20Z", "message": "initial implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a89c431a6ec1905fe20b359edc04edf8ddeca91", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/5a89c431a6ec1905fe20b359edc04edf8ddeca91", "committedDate": "2020-04-08T13:13:02Z", "message": "updates to TextFileExtractor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98933985031dc8ad8759959b716fbb91f48bb76a", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/98933985031dc8ad8759959b716fbb91f48bb76a", "committedDate": "2020-04-08T15:02:29Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMTc2MzAy", "url": "https://github.com/sleuthkit/autopsy/pull/5789#pullrequestreview-390176302", "createdAt": "2020-04-08T17:19:07Z", "commit": {"oid": "98933985031dc8ad8759959b716fbb91f48bb76a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxOTowOFrOGC5K6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxOTowOFrOGC5K6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NzAxNg==", "bodyText": "@rcordovano I'm wondering if we should log this as severe? I know that typically we try to reserve severe for errors that compromise the case, but I think if we are unable to instantiate FileTypeDetector class, then it definitely needs to be investigated.", "url": "https://github.com/sleuthkit/autopsy/pull/5789#discussion_r405687016", "createdAt": "2020-04-08T17:19:08Z", "author": {"login": "eugene7646"}, "path": "Core/src/org/sleuthkit/autopsy/textextractors/TextFileExtractor.java", "diffHunk": "@@ -73,7 +76,26 @@ private Reader getReader(Charset encoding) {\n     }\n \n     @Override\n-    public boolean isSupported() {\n-        return file.getMIMEType().equals(\"text/plain\");\n+    public boolean isSupported() {        \n+        // get the MIME type\n+        String mimeType = file.getMIMEType();\n+        \n+        // if it is not present, attempt to use the FileTypeDetector to determine\n+        if (StringUtils.isEmpty(mimeType)) {\n+            FileTypeDetector fileTypeDetector = null;\n+            try {\n+                fileTypeDetector = new FileTypeDetector();\n+            } catch (FileTypeDetector.FileTypeDetectorInitException ex) {\n+                logger.log(Level.WARNING, \"Unable to create file type detector for determining MIME type.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98933985031dc8ad8759959b716fbb91f48bb76a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b238183046b0f25e83d7f4322e314076d59e4a8", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/1b238183046b0f25e83d7f4322e314076d59e4a8", "committedDate": "2020-04-08T17:51:25Z", "message": "update log entry to severe"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjA0NTM1", "url": "https://github.com/sleuthkit/autopsy/pull/5789#pullrequestreview-390204535", "createdAt": "2020-04-08T17:58:23Z", "commit": {"oid": "1b238183046b0f25e83d7f4322e314076d59e4a8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjU5NDgx", "url": "https://github.com/sleuthkit/autopsy/pull/5789#pullrequestreview-390259481", "createdAt": "2020-04-08T19:15:59Z", "commit": {"oid": "1b238183046b0f25e83d7f4322e314076d59e4a8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNTo1OVrOGC9Vyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOToxNTo1OVrOGC9Vyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1NTMzOQ==", "bodyText": "@eugene7646 and @gdicristofaro...\nDo you gentlemen realize that AbstractFile.setMIMEType only stores the result in the object, not in the case database? I suspect that is not what was intended here. I'm no longer sure what our policy is: do we save or throw away such calculations? We should check what we do elsewhere, and if the intent is to save here, call AbstractFile.save here.", "url": "https://github.com/sleuthkit/autopsy/pull/5789#discussion_r405755339", "createdAt": "2020-04-08T19:15:59Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/textextractors/TextFileExtractor.java", "diffHunk": "@@ -73,7 +76,26 @@ private Reader getReader(Charset encoding) {\n     }\n \n     @Override\n-    public boolean isSupported() {\n-        return file.getMIMEType().equals(\"text/plain\");\n+    public boolean isSupported() {        \n+        // get the MIME type\n+        String mimeType = file.getMIMEType();\n+        \n+        // if it is not present, attempt to use the FileTypeDetector to determine\n+        if (StringUtils.isEmpty(mimeType)) {\n+            FileTypeDetector fileTypeDetector = null;\n+            try {\n+                fileTypeDetector = new FileTypeDetector();\n+            } catch (FileTypeDetector.FileTypeDetectorInitException ex) {\n+                logger.log(Level.SEVERE, \"Unable to create file type detector for determining MIME type.\");\n+                return false;\n+            }\n+            mimeType = fileTypeDetector.getMIMEType(file);\n+            \n+            // if able to determine mime type, \n+            if (!StringUtils.isEmpty(mimeType))\n+                file.setMIMEType(mimeType);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b238183046b0f25e83d7f4322e314076d59e4a8"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "797b4a99060ac555b8f0c09feb5af6b228fbe819", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/797b4a99060ac555b8f0c09feb5af6b228fbe819", "committedDate": "2020-04-09T11:54:25Z", "message": "remove in-memory mime type change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMjQ1ODkw", "url": "https://github.com/sleuthkit/autopsy/pull/5789#pullrequestreview-391245890", "createdAt": "2020-04-10T03:06:36Z", "commit": {"oid": "797b4a99060ac555b8f0c09feb5af6b228fbe819"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMjQ2MTAz", "url": "https://github.com/sleuthkit/autopsy/pull/5789#pullrequestreview-391246103", "createdAt": "2020-04-10T03:07:41Z", "commit": {"oid": "797b4a99060ac555b8f0c09feb5af6b228fbe819"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMzowNzo0MVrOGDv0bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMzowNzo0MVrOGDv0bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU4MjM4MQ==", "bodyText": "We should pass the exception to the logger as the third argument so that a stack trace is logged.", "url": "https://github.com/sleuthkit/autopsy/pull/5789#discussion_r406582381", "createdAt": "2020-04-10T03:07:41Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/textextractors/TextFileExtractor.java", "diffHunk": "@@ -73,7 +76,22 @@ private Reader getReader(Charset encoding) {\n     }\n \n     @Override\n-    public boolean isSupported() {\n-        return file.getMIMEType().equals(\"text/plain\");\n+    public boolean isSupported() {        \n+        // get the MIME type\n+        String mimeType = file.getMIMEType();\n+        \n+        // if it is not present, attempt to use the FileTypeDetector to determine\n+        if (StringUtils.isEmpty(mimeType)) {\n+            FileTypeDetector fileTypeDetector = null;\n+            try {\n+                fileTypeDetector = new FileTypeDetector();\n+            } catch (FileTypeDetector.FileTypeDetectorInitException ex) {\n+                logger.log(Level.SEVERE, \"Unable to create file type detector for determining MIME type.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "797b4a99060ac555b8f0c09feb5af6b228fbe819"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2753, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}