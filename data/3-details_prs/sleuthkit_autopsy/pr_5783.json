{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDA5NzAw", "number": 5783, "title": "5545 znodes confirm", "bodyText": "", "createdAt": "2020-04-07T17:41:24Z", "url": "https://github.com/sleuthkit/autopsy/pull/5783", "merged": true, "mergeCommit": {"oid": "16934e64a04f25157924c34eff9da7a0f73cfeb8"}, "closed": true, "closedAt": "2020-04-15T20:07:42Z", "author": {"login": "gdicristofaro"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUGGRfgH2gAyNDAwNDA5NzAwOjdkM2E5ZDZkMDIzYzE0MDBlYTAzMTY4MjUzMjUxYzFmNzQ4NGEwNjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV7XXqgH2gAyNDAwNDA5NzAwOjRkNzJhZTE0YjBiOTQwMGNkNWNkYjkyOTRiZmM3ZWRkMDk5ZTc1MDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7d3a9d6d023c1400ea03168253251c1f7484a068", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/7d3a9d6d023c1400ea03168253251c1f7484a068", "committedDate": "2020-04-03T19:30:51Z", "message": "begin refactoring delete orphan nodes to accomodate changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73310566332a1394c374cbc29ebe03ec9bc434c0", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/73310566332a1394c374cbc29ebe03ec9bc434c0", "committedDate": "2020-04-03T19:33:30Z", "message": "removed unnecessary code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6a317ece00c0f6f764548cdb368819fa2ba4ed9", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/c6a317ece00c0f6f764548cdb368819fa2ba4ed9", "committedDate": "2020-04-06T13:13:39Z", "message": "added dialog for orphaned nodes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "499f9d84d7f4095e100713f1221db8caf764463b", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/499f9d84d7f4095e100713f1221db8caf764463b", "committedDate": "2020-04-06T16:22:49Z", "message": "Merge branch 'develop' into 5545-znodesConfirm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "664997021661cf2040ef62f1b234aeddf130bd3e", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/664997021661cf2040ef62f1b234aeddf130bd3e", "committedDate": "2020-04-06T20:21:27Z", "message": "updated dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff4702c2b486c57b2c0fce689d060b7a7602fae", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/7ff4702c2b486c57b2c0fce689d060b7a7602fae", "committedDate": "2020-04-07T17:39:08Z", "message": "updated jdialog format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "961ef57c3392ec9ea663238d49e97e611885da7c", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/961ef57c3392ec9ea663238d49e97e611885da7c", "committedDate": "2020-04-07T17:41:02Z", "message": "Merge branch 'develop' into 5545-znodesConfirm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf18ee70cb7cb66f110c716f45ead0af08782333", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/bf18ee70cb7cb66f110c716f45ead0af08782333", "committedDate": "2020-04-07T17:48:07Z", "message": "address codacy review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd06d740140a2ef3119321c319a3933b1e542536", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/bd06d740140a2ef3119321c319a3933b1e542536", "committedDate": "2020-04-07T18:02:24Z", "message": "fix typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMjUzNjkx", "url": "https://github.com/sleuthkit/autopsy/pull/5783#pullrequestreview-390253691", "createdAt": "2020-04-08T19:07:19Z", "commit": {"oid": "bd06d740140a2ef3119321c319a3933b1e542536"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTowNzoyMFrOGC9DVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTowNzoyMFrOGC9DVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc1MDYxMw==", "bodyText": "Spelling error in the comment - confirmingg", "url": "https://github.com/sleuthkit/autopsy/pull/5783#discussion_r405750613", "createdAt": "2020-04-08T19:07:20Z", "author": {"login": "eugene7646"}, "path": "Experimental/src/org/sleuthkit/autopsy/experimental/autoingest/DeleteOrphanCaseNodesTask.java", "diffHunk": "@@ -53,6 +60,130 @@\n         this.progress = progress;\n     }\n \n+    /**\n+     * Retrieves an instance of the coordination service in order to fetch\n+     * znodes and potentially delete.\n+     *\n+     * @return The coordination service or null on error.\n+     */\n+    private CoordinationService getCoordinationService() {\n+        progress.progress(Bundle.DeleteOrphanCaseNodesTask_progress_connectingToCoordSvc());\n+        logger.log(Level.INFO, Bundle.DeleteOrphanCaseNodesTask_progress_connectingToCoordSvc());\n+        CoordinationService coordinationService = null;\n+        try {\n+            coordinationService = CoordinationService.getInstance();\n+        } catch (CoordinationService.CoordinationServiceException ex) {\n+            logger.log(Level.SEVERE, \"Error connecting to the coordination service\", ex); //NON-NLS\n+        }\n+        return coordinationService;\n+    }\n+\n+    /**\n+     * Retrieves node paths for cases.\n+     *\n+     * @param coordinationService The coordination service to use in order to\n+     *                            fetch the node paths.\n+     *\n+     * @return The list of node paths for cases.\n+     */\n+    private List<String> getNodePaths(CoordinationService coordinationService) {\n+        progress.progress(Bundle.DeleteOrphanCaseNodesTask_progress_gettingCaseZnodes());\n+        logger.log(Level.INFO, Bundle.DeleteOrphanCaseNodesTask_progress_gettingCaseZnodes());\n+        List<String> nodePaths = null;\n+        try {\n+            nodePaths = coordinationService.getNodeList(CoordinationService.CategoryNode.CASES);\n+            // in the event that getNodeList returns null (but still successful) return empty list\n+            if (nodePaths == null) {\n+                return new ArrayList<String>();\n+            }\n+        } catch (CoordinationService.CoordinationServiceException ex) {\n+            logger.log(Level.SEVERE, \"Error getting case znode list\", ex); //NON-NLS\n+        } catch (InterruptedException unused) {\n+            logger.log(Level.WARNING, \"Task cancelled while getting case znode list\"); //NON-NLS\n+        }\n+\n+        return nodePaths;\n+    }\n+\n+    private void addIfExists(List<String> paths, String path) {\n+        if (path != null && !path.isEmpty()) {\n+            paths.add(path);\n+        }\n+    }\n+\n+    /**\n+     * Determines orphaned znode paths.\n+     *\n+     * @param nodePaths The list of case node paths.\n+     *\n+     * @return The list of orphaned node paths.\n+     */\n+    private Map<String, List<String>> getOrphanedNodes(List<String> nodePaths) {\n+        progress.progress(Bundle.DeleteOrphanCaseNodesTask_progress_lookingForOrphanedCaseZnodes());\n+        logger.log(Level.INFO, Bundle.DeleteOrphanCaseNodesTask_progress_lookingForOrphanedCaseZnodes());\n+        Map<String, List<String>> nodePathsToDelete = new HashMap<>();\n+        for (String caseNodePath : nodePaths) {\n+            if (isCaseNameNodePath(caseNodePath) || isCaseResourcesNodePath(caseNodePath) || isCaseAutoIngestLogNodePath(caseNodePath)) {\n+                continue;\n+            }\n+\n+            final Path caseDirectoryPath = Paths.get(caseNodePath);\n+            final File caseDirectory = caseDirectoryPath.toFile();\n+            if (!caseDirectory.exists()) {\n+                String caseName = CoordinationServiceUtils.getCaseNameNodePath(caseDirectoryPath);\n+                List<String> paths = new ArrayList<>();\n+\n+                addIfExists(paths, CoordinationServiceUtils.getCaseNameNodePath(caseDirectoryPath));\n+                addIfExists(paths, CoordinationServiceUtils.getCaseResourcesNodePath(caseDirectoryPath));\n+                addIfExists(paths, CoordinationServiceUtils.getCaseAutoIngestLogNodePath(caseDirectoryPath));\n+                addIfExists(paths, CoordinationServiceUtils.getCaseDirectoryNodePath(caseDirectoryPath));\n+                nodePathsToDelete.put(caseName, paths);\n+            }\n+        }\n+        return nodePathsToDelete;\n+    }\n+\n+    /**\n+     * Boxed boolean so that promptUser method can set a value on a final object\n+     * from custom jdialog message.\n+     */\n+    private class PromptResult {\n+\n+        private boolean value = false;\n+\n+        boolean isValue() {\n+            return value;\n+        }\n+\n+        void setValue(boolean value) {\n+            this.value = value;\n+        }\n+\n+    }\n+\n+    /**\n+     * prompts the user with a list of orphaned znodes.\n+     *\n+     * @param orphanedNodes The orphaned znode cases.\n+     *\n+     * @return True if the user would like to proceed deleting the znodes.\n+     */\n+    private boolean promptUser(Collection<String> orphanedNodes) {\n+        final PromptResult dialogResult = new PromptResult();\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                DeleteOrphanCaseNodesDialog dialog = new DeleteOrphanCaseNodesDialog(orphanedNodes);\n+                dialog.display();\n+                dialogResult.setValue(dialog.isOkSelected());\n+            });\n+\n+            return dialogResult.isValue();\n+        } catch (InterruptedException | InvocationTargetException e) {\n+            logger.log(Level.WARNING, \"Task cancelled while confirmingg case znodes to delete\"); //NON-NLS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd06d740140a2ef3119321c319a3933b1e542536"}, "originalPosition": 161}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d72ae14b0b9400cd5cdb9294bfc7edd099e7509", "author": {"user": {"login": "gdicristofaro", "name": "Greg DiCristofaro"}}, "url": "https://github.com/sleuthkit/autopsy/commit/4d72ae14b0b9400cd5cdb9294bfc7edd099e7509", "committedDate": "2020-04-09T12:08:25Z", "message": "changed spelling error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2748, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}