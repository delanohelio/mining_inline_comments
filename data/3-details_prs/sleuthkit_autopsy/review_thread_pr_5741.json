{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODMwMTY5", "number": 5741, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNjowMlrODsoZJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTozODoxNFrODtKy4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTI1NzM0OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxJList.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNjowMlrOF9liZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNjowMlrOF9liZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMjQ2OQ==", "bodyText": "the state of checkbox and label enabled should be the same as list.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400122469", "createdAt": "2020-03-30T11:36:02Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxJList.java", "diffHunk": "@@ -91,18 +109,33 @@ public void mousePressed(MouseEvent e) {\n     /**\n      * A ListCellRenderer that renders list elements as check boxes.\n      */\n-    class CellRenderer extends JCheckBox implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n+    class CellRenderer extends JPanel implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n \n         private static final long serialVersionUID = 1L;\n \n+        private final JCheckBox checkbox = new JCheckBox();\n+        private final JLabel label = new JLabel();\n+\n+        public CellRenderer() {\n+            setLayout(new BorderLayout(2, 0));\n+            add(checkbox, BorderLayout.WEST);\n+            add(label, BorderLayout.CENTER);\n+        }\n+\n         @Override\n         public Component getListCellRendererComponent(\n                 JList<? extends CheckBoxJList.CheckboxListItem> list, CheckBoxJList.CheckboxListItem value, int index,\n                 boolean isSelected, boolean cellHasFocus) {\n \n             setBackground(list.getBackground());\n-            setSelected(value.isChecked());\n-            setText(value.getDisplayName());\n+\n+            checkbox.setSelected(value.isChecked());\n+            checkbox.setBackground(list.getBackground());\n+            label.setText(value.getDisplayName());\n+            if (value.hasIcon()) {\n+                label.setIcon(value.getIcon());\n+            }\n+\n             setEnabled(list.isEnabled());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTI2MTIyOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxListPanel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNzoxNFrOF9lk7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTozNzoxNFrOF9lk7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEyMzExOA==", "bodyText": "Make sure to note in the method header that Icon maybe null.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400123118", "createdAt": "2020-03-30T11:37:14Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxListPanel.java", "diffHunk": "@@ -220,17 +220,20 @@ private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-F\n \n         private final T object;\n         private final String displayName;\n+        private final Icon icon;\n         private boolean checked;\n \n         /**\n          * Constructs a new ObjectCheckBox\n          * \n          * @param displayName String to show as the check box label\n+         * @param icon Icon to show before the check box", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTMxODU1OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxJList.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTo1NDoxMlrOF9mIag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzozMzo1NFrOF9p6tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMjIwMg==", "bodyText": "Just to appease netbeans create a private init function and put setLayout and the adds in that function.  That will make the light bulbs in netbeans go away.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400132202", "createdAt": "2020-03-30T11:54:12Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxJList.java", "diffHunk": "@@ -91,18 +109,33 @@ public void mousePressed(MouseEvent e) {\n     /**\n      * A ListCellRenderer that renders list elements as check boxes.\n      */\n-    class CellRenderer extends JCheckBox implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n+    class CellRenderer extends JPanel implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n \n         private static final long serialVersionUID = 1L;\n \n+        private final JCheckBox checkbox = new JCheckBox();\n+        private final JLabel label = new JLabel();\n+\n+        public CellRenderer() {\n+            setLayout(new BorderLayout(2, 0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE3NTI2Nw==", "bodyText": "@kellykelly3 and @ethteck, if the issue is a leaking this pointer, you need a method to create instances of the class via two stage construction.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400175267", "createdAt": "2020-03-30T13:06:28Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxJList.java", "diffHunk": "@@ -91,18 +109,33 @@ public void mousePressed(MouseEvent e) {\n     /**\n      * A ListCellRenderer that renders list elements as check boxes.\n      */\n-    class CellRenderer extends JCheckBox implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n+    class CellRenderer extends JPanel implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n \n         private static final long serialVersionUID = 1L;\n \n+        private final JCheckBox checkbox = new JCheckBox();\n+        private final JLabel label = new JLabel();\n+\n+        public CellRenderer() {\n+            setLayout(new BorderLayout(2, 0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMjIwMg=="}, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE4NzA2OA==", "bodyText": "The issue complaining about  is calling functions that can be overridden in the constructor.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400187068", "createdAt": "2020-03-30T13:24:01Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxJList.java", "diffHunk": "@@ -91,18 +109,33 @@ public void mousePressed(MouseEvent e) {\n     /**\n      * A ListCellRenderer that renders list elements as check boxes.\n      */\n-    class CellRenderer extends JCheckBox implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n+    class CellRenderer extends JPanel implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n \n         private static final long serialVersionUID = 1L;\n \n+        private final JCheckBox checkbox = new JCheckBox();\n+        private final JLabel label = new JLabel();\n+\n+        public CellRenderer() {\n+            setLayout(new BorderLayout(2, 0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMjIwMg=="}, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE5NDIzMA==", "bodyText": "Similar issue, same solution.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400194230", "createdAt": "2020-03-30T13:33:54Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/CheckBoxJList.java", "diffHunk": "@@ -91,18 +109,33 @@ public void mousePressed(MouseEvent e) {\n     /**\n      * A ListCellRenderer that renders list elements as check boxes.\n      */\n-    class CellRenderer extends JCheckBox implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n+    class CellRenderer extends JPanel implements ListCellRenderer<CheckBoxJList.CheckboxListItem> {\n \n         private static final long serialVersionUID = 1L;\n \n+        private final JCheckBox checkbox = new JCheckBox();\n+        private final JLabel label = new JLabel();\n+\n+        public CellRenderer() {\n+            setLayout(new BorderLayout(2, 0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMjIwMg=="}, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTMyNTI2OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTo1NjoxMlrOF9mMeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTo1NjoxMlrOF9mMeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzMzI0MA==", "bodyText": "My mistake, please change comment to \"Update if other GPS artifacts are added\"", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400133240", "createdAt": "2020-03-30T11:56:12Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -49,24 +54,26 @@\n     private static final Logger logger = Logger.getLogger(GeoFilterPanel.class.getName());\n \n     private final SpinnerNumberModel numberModel;\n-    private final CheckBoxListPanel<DataSource> checkboxPanel;\n+    private final CheckBoxListPanel<DataSource> dsCheckboxPanel;\n+    private final CheckBoxListPanel<ARTIFACT_TYPE> atCheckboxPanel;\n \n     // Make sure to update if ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTM0OTgzOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjowMzo0M1rOF9mcFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjowMzo0M1rOF9mcFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEzNzIzNw==", "bodyText": "Update method header.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400137237", "createdAt": "2020-03-30T12:03:43Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -415,19 +490,20 @@ int getMostRecentNumDays() {\n          * \n          * @throws TskCoreException \n          */\n-        private boolean isGPSDataSource(SleuthkitCase sleuthkitCase, DataSource dataSource) throws TskCoreException {\n+        private Map<ARTIFACT_TYPE, Long> getGPSDataSources(SleuthkitCase sleuthkitCase, DataSource dataSource) throws TskCoreException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 329}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTM3OTUzOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxMjoxNlrOF9muEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDoyODoyOVrOF9se8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MTg0MA==", "bodyText": "Why are you keeping count?  You are not adding the type unless count is greater than one.  I just don't think you need to keep count.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400141840", "createdAt": "2020-03-30T12:12:16Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -415,19 +490,20 @@ int getMostRecentNumDays() {\n          * \n          * @throws TskCoreException \n          */\n-        private boolean isGPSDataSource(SleuthkitCase sleuthkitCase, DataSource dataSource) throws TskCoreException {\n+        private Map<ARTIFACT_TYPE, Long> getGPSDataSources(SleuthkitCase sleuthkitCase, DataSource dataSource) throws TskCoreException {\n+            HashMap<ARTIFACT_TYPE, Long> ret = new HashMap<>();\n             for (BlackboardArtifact.ARTIFACT_TYPE type : GPS_ARTIFACT_TYPES) {\n-                if (sleuthkitCase.getBlackboardArtifactsTypeCount(type.getTypeID(), dataSource.getId()) > 0) {\n-                    return true;\n+                long count = sleuthkitCase.getBlackboardArtifactsTypeCount(type.getTypeID(), dataSource.getId());\n+                if (count > 0) {\n+                    ret.put(type, count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 336}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzNjI3Mw==", "bodyText": "We display the count for each artifact type in the UI, so that's why I'm keeping count here.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400236273", "createdAt": "2020-03-30T14:28:29Z", "author": {"login": "ethteck"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -415,19 +490,20 @@ int getMostRecentNumDays() {\n          * \n          * @throws TskCoreException \n          */\n-        private boolean isGPSDataSource(SleuthkitCase sleuthkitCase, DataSource dataSource) throws TskCoreException {\n+        private Map<ARTIFACT_TYPE, Long> getGPSDataSources(SleuthkitCase sleuthkitCase, DataSource dataSource) throws TskCoreException {\n+            HashMap<ARTIFACT_TYPE, Long> ret = new HashMap<>();\n             for (BlackboardArtifact.ARTIFACT_TYPE type : GPS_ARTIFACT_TYPES) {\n-                if (sleuthkitCase.getBlackboardArtifactsTypeCount(type.getTypeID(), dataSource.getId()) > 0) {\n-                    return true;\n+                long count = sleuthkitCase.getBlackboardArtifactsTypeCount(type.getTypeID(), dataSource.getId());\n+                if (count > 0) {\n+                    ret.put(type, count);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MTg0MA=="}, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 336}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTM4ODQzOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxNDoyM1rOF9mzPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxNDoyM1rOF9mzPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MzE2Ng==", "bodyText": "Different OSs use different path separators, ie \\ vs /.  use Paths.get instead", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400143166", "createdAt": "2020-03-30T12:14:23Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -440,8 +516,14 @@ public void done() {\n             }\n \n             if (sources != null) {\n-                for (Pair<String, DataSource> source : sources) {\n-                    checkboxPanel.addElement(source.getKey(), source.getValue());\n+                for (Pair<String, DataSource> source : sources.dataSources) {\n+                    dsCheckboxPanel.addElement(source.getKey(), null, source.getValue());\n+                }\n+                for (Map.Entry<ARTIFACT_TYPE, Long> entry : sources.artifactTypes.entrySet()) {\n+                    String dispName = entry.getKey().getDisplayName() + \" (\" + entry.getValue() + \")\";\n+                    String iconPath = \"/\" + IconsUtil.getIconFilePath(entry.getKey().getTypeID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 362}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTQ1NjE4OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/WaypointBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjozMTo1MlrOF9ncQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjozMTo1MlrOF9ncQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1MzY2NQ==", "bodyText": "Make sure the method header is updated.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400153665", "createdAt": "2020-03-30T12:31:52Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/WaypointBuilder.java", "diffHunk": "@@ -459,7 +460,7 @@ private WaypointBuilder() {\n      *\n      * @throws GeoLocationDataException\n      */\n-    static public void getAllWaypoints(SleuthkitCase skCase, List<DataSource> dataSources, boolean showAll, int cntDaysFromRecent, boolean noTimeStamp, WaypointFilterQueryCallBack queryCallBack) throws GeoLocationDataException {\n+    static public void getAllWaypoints(SleuthkitCase skCase, List<DataSource> dataSources, List<ARTIFACT_TYPE> artifactTypes, boolean showAll, int cntDaysFromRecent, boolean noTimeStamp, WaypointFilterQueryCallBack queryCallBack) throws GeoLocationDataException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTQ3NDc0OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/WaypointBuilder.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjozNjo1N1rOF9nn0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDowNjoyOVrOF-Xh0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1NjYyNw==", "bodyText": "I am a little torn about whether to do this or include the types in the query.  Was there a reason that you didn't look at extending the query?  It might be too messy.  That figuring out the query was a pain.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400156627", "createdAt": "2020-03-30T12:36:57Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/WaypointBuilder.java", "diffHunk": "@@ -480,9 +481,10 @@ public void process(ResultSet rs) {\n                             int artifact_type_id = rs.getInt(\"artifact_type_id\"); //NON-NLS\n                             long artifact_id = rs.getLong(\"artifact_id\"); //NON-NLS\n \n-                            BlackboardArtifact.ARTIFACT_TYPE type = BlackboardArtifact.ARTIFACT_TYPE.fromID(artifact_type_id);\n-\n-                            waypoints.addAll(getWaypointForArtifact(skCase.getBlackboardArtifact(artifact_id), type));\n+                            ARTIFACT_TYPE type = ARTIFACT_TYPE.fromID(artifact_type_id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzMzMwMA==", "bodyText": "This just seemed like the right place to do type filtering. I don't really have a specific reason other than this seeming to be a good way to do it to me.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400233300", "createdAt": "2020-03-30T14:24:51Z", "author": {"login": "ethteck"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/WaypointBuilder.java", "diffHunk": "@@ -480,9 +481,10 @@ public void process(ResultSet rs) {\n                             int artifact_type_id = rs.getInt(\"artifact_type_id\"); //NON-NLS\n                             long artifact_id = rs.getLong(\"artifact_id\"); //NON-NLS\n \n-                            BlackboardArtifact.ARTIFACT_TYPE type = BlackboardArtifact.ARTIFACT_TYPE.fromID(artifact_type_id);\n-\n-                            waypoints.addAll(getWaypointForArtifact(skCase.getBlackboardArtifact(artifact_id), type));\n+                            ARTIFACT_TYPE type = ARTIFACT_TYPE.fromID(artifact_type_id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1NjYyNw=="}, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg1MDUxNg==", "bodyText": "So you didn't look into adjusting the query at all?", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400850516", "createdAt": "2020-03-31T11:51:33Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/WaypointBuilder.java", "diffHunk": "@@ -480,9 +481,10 @@ public void process(ResultSet rs) {\n                             int artifact_type_id = rs.getInt(\"artifact_type_id\"); //NON-NLS\n                             long artifact_id = rs.getLong(\"artifact_id\"); //NON-NLS\n \n-                            BlackboardArtifact.ARTIFACT_TYPE type = BlackboardArtifact.ARTIFACT_TYPE.fromID(artifact_type_id);\n-\n-                            waypoints.addAll(getWaypointForArtifact(skCase.getBlackboardArtifact(artifact_id), type));\n+                            ARTIFACT_TYPE type = ARTIFACT_TYPE.fromID(artifact_type_id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1NjYyNw=="}, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyOTUxNQ==", "bodyText": "I did, but I just settled on this. It sounds like you prefer I do the logic in the query?", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400929515", "createdAt": "2020-03-31T13:50:59Z", "author": {"login": "ethteck"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/WaypointBuilder.java", "diffHunk": "@@ -480,9 +481,10 @@ public void process(ResultSet rs) {\n                             int artifact_type_id = rs.getInt(\"artifact_type_id\"); //NON-NLS\n                             long artifact_id = rs.getLong(\"artifact_id\"); //NON-NLS\n \n-                            BlackboardArtifact.ARTIFACT_TYPE type = BlackboardArtifact.ARTIFACT_TYPE.fromID(artifact_type_id);\n-\n-                            waypoints.addAll(getWaypointForArtifact(skCase.getBlackboardArtifact(artifact_id), type));\n+                            ARTIFACT_TYPE type = ARTIFACT_TYPE.fromID(artifact_type_id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1NjYyNw=="}, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk0MTUyMQ==", "bodyText": "After talking with Richard about issues related to the support of custom artifacts I think they way you are doing this sufficient for now.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400941521", "createdAt": "2020-03-31T14:06:29Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/WaypointBuilder.java", "diffHunk": "@@ -480,9 +481,10 @@ public void process(ResultSet rs) {\n                             int artifact_type_id = rs.getInt(\"artifact_type_id\"); //NON-NLS\n                             long artifact_id = rs.getLong(\"artifact_id\"); //NON-NLS\n \n-                            BlackboardArtifact.ARTIFACT_TYPE type = BlackboardArtifact.ARTIFACT_TYPE.fromID(artifact_type_id);\n-\n-                            waypoints.addAll(getWaypointForArtifact(skCase.getBlackboardArtifact(artifact_id), type));\n+                            ARTIFACT_TYPE type = ARTIFACT_TYPE.fromID(artifact_type_id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1NjYyNw=="}, "originalCommit": {"oid": "ec343d32db0fc2d4b1c8dd6a2b6c14a2c2a98cc9"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjAzMzkyOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjozMjo1OFrOF-TgAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzoxMjo0N1rOF-f5AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg3NTUyMg==", "bodyText": "This is missing TSK_EXIF_METADATA\nAlso as Ann points out in the Jira, using these hardcode types (which is my fault) makes it so that we cannot support custom artifacts).", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r400875522", "createdAt": "2020-03-31T12:32:58Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -49,24 +55,26 @@\n     private static final Logger logger = Logger.getLogger(GeoFilterPanel.class.getName());\n \n     private final SpinnerNumberModel numberModel;\n-    private final CheckBoxListPanel<DataSource> checkboxPanel;\n+    private final CheckBoxListPanel<DataSource> dsCheckboxPanel;\n+    private final CheckBoxListPanel<ARTIFACT_TYPE> atCheckboxPanel;\n \n-    // Make sure to update if \n+    // Make sure to update if other GPS artifacts are added\n     @SuppressWarnings(\"deprecation\")\n-    private static final BlackboardArtifact.ARTIFACT_TYPE[] GPS_ARTIFACT_TYPES = {\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_BOOKMARK,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_LAST_KNOWN_LOCATION,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_ROUTE,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_SEARCH,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_TRACK,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_TRACKPOINT\n+    private static final ARTIFACT_TYPE[] GPS_ARTIFACT_TYPES = {\n+        ARTIFACT_TYPE.TSK_GPS_BOOKMARK,\n+        ARTIFACT_TYPE.TSK_GPS_LAST_KNOWN_LOCATION,\n+        ARTIFACT_TYPE.TSK_GPS_ROUTE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4c28bca74a9eb1ae673339cf544c468bc8df537"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA3ODUyOQ==", "bodyText": "I'll add the other type for now. I guess we'll want to rethink this approach going forward", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r401078529", "createdAt": "2020-03-31T17:12:47Z", "author": {"login": "ethteck"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -49,24 +55,26 @@\n     private static final Logger logger = Logger.getLogger(GeoFilterPanel.class.getName());\n \n     private final SpinnerNumberModel numberModel;\n-    private final CheckBoxListPanel<DataSource> checkboxPanel;\n+    private final CheckBoxListPanel<DataSource> dsCheckboxPanel;\n+    private final CheckBoxListPanel<ARTIFACT_TYPE> atCheckboxPanel;\n \n-    // Make sure to update if \n+    // Make sure to update if other GPS artifacts are added\n     @SuppressWarnings(\"deprecation\")\n-    private static final BlackboardArtifact.ARTIFACT_TYPE[] GPS_ARTIFACT_TYPES = {\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_BOOKMARK,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_LAST_KNOWN_LOCATION,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_ROUTE,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_SEARCH,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_TRACK,\n-        BlackboardArtifact.ARTIFACT_TYPE.TSK_GPS_TRACKPOINT\n+    private static final ARTIFACT_TYPE[] GPS_ARTIFACT_TYPES = {\n+        ARTIFACT_TYPE.TSK_GPS_BOOKMARK,\n+        ARTIFACT_TYPE.TSK_GPS_LAST_KNOWN_LOCATION,\n+        ARTIFACT_TYPE.TSK_GPS_ROUTE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg3NTUyMg=="}, "originalCommit": {"oid": "b4c28bca74a9eb1ae673339cf544c468bc8df537"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Njg5Mzc4OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTozODoxNFrOF-b7_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzoyOToxN1rOF-giTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxMzc1OA==", "bodyText": "There are two issues there.   I get a NPE here.  When I step through the code icon path was\n\nThe use of File.separator is not correct here.  Since you are loading a resource from the jar file I don't believe that the direction of the slash is file dependent.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r401013758", "createdAt": "2020-03-31T15:38:14Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -440,8 +518,14 @@ public void done() {\n             }\n \n             if (sources != null) {\n-                for (Pair<String, DataSource> source : sources) {\n-                    checkboxPanel.addElement(source.getKey(), source.getValue());\n+                for (Pair<String, DataSource> source : sources.dataSources) {\n+                    dsCheckboxPanel.addElement(source.getKey(), null, source.getValue());\n+                }\n+                for (Map.Entry<ARTIFACT_TYPE, Long> entry : sources.artifactTypes.entrySet()) {\n+                    String dispName = entry.getKey().getDisplayName() + \" (\" + entry.getValue() + \")\";\n+                    String iconPath = File.separator + IconsUtil.getIconFilePath(entry.getKey().getTypeID());\n+                    Icon icon = new ImageIcon(getClass().getResource(iconPath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4c28bca74a9eb1ae673339cf544c468bc8df537"}, "originalPosition": 373}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAyMDQ4NA==", "bodyText": "If you need to put that / at the beginning of the image file path why is it not being done in getIconFilePath?  It does make sense that ever that calls that function would have to add a / at the beginning of the path.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r401020484", "createdAt": "2020-03-31T15:46:59Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -440,8 +518,14 @@ public void done() {\n             }\n \n             if (sources != null) {\n-                for (Pair<String, DataSource> source : sources) {\n-                    checkboxPanel.addElement(source.getKey(), source.getValue());\n+                for (Pair<String, DataSource> source : sources.dataSources) {\n+                    dsCheckboxPanel.addElement(source.getKey(), null, source.getValue());\n+                }\n+                for (Map.Entry<ARTIFACT_TYPE, Long> entry : sources.artifactTypes.entrySet()) {\n+                    String dispName = entry.getKey().getDisplayName() + \" (\" + entry.getValue() + \")\";\n+                    String iconPath = File.separator + IconsUtil.getIconFilePath(entry.getKey().getTypeID());\n+                    Icon icon = new ImageIcon(getClass().getResource(iconPath));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxMzc1OA=="}, "originalCommit": {"oid": "b4c28bca74a9eb1ae673339cf544c468bc8df537"}, "originalPosition": 373}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA2MTA2OQ==", "bodyText": "Ah, I see. I'll look into this, thanks. Yeah the slash should be \"/\" and it should probably just happen in getIconFilePath. I excluded it from that because the original caller seemed to break when I added it there. But I'll dig into it more.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r401061069", "createdAt": "2020-03-31T16:45:41Z", "author": {"login": "ethteck"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -440,8 +518,14 @@ public void done() {\n             }\n \n             if (sources != null) {\n-                for (Pair<String, DataSource> source : sources) {\n-                    checkboxPanel.addElement(source.getKey(), source.getValue());\n+                for (Pair<String, DataSource> source : sources.dataSources) {\n+                    dsCheckboxPanel.addElement(source.getKey(), null, source.getValue());\n+                }\n+                for (Map.Entry<ARTIFACT_TYPE, Long> entry : sources.artifactTypes.entrySet()) {\n+                    String dispName = entry.getKey().getDisplayName() + \" (\" + entry.getValue() + \")\";\n+                    String iconPath = File.separator + IconsUtil.getIconFilePath(entry.getKey().getTypeID());\n+                    Icon icon = new ImageIcon(getClass().getResource(iconPath));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxMzc1OA=="}, "originalCommit": {"oid": "b4c28bca74a9eb1ae673339cf544c468bc8df537"}, "originalPosition": 373}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4OTEwMA==", "bodyText": "I believe I have fixed this @kellykelly3. Let me know if you continue to see the NPE.", "url": "https://github.com/sleuthkit/autopsy/pull/5741#discussion_r401089100", "createdAt": "2020-03-31T17:29:17Z", "author": {"login": "ethteck"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/GeoFilterPanel.java", "diffHunk": "@@ -440,8 +518,14 @@ public void done() {\n             }\n \n             if (sources != null) {\n-                for (Pair<String, DataSource> source : sources) {\n-                    checkboxPanel.addElement(source.getKey(), source.getValue());\n+                for (Pair<String, DataSource> source : sources.dataSources) {\n+                    dsCheckboxPanel.addElement(source.getKey(), null, source.getValue());\n+                }\n+                for (Map.Entry<ARTIFACT_TYPE, Long> entry : sources.artifactTypes.entrySet()) {\n+                    String dispName = entry.getKey().getDisplayName() + \" (\" + entry.getValue() + \")\";\n+                    String iconPath = File.separator + IconsUtil.getIconFilePath(entry.getKey().getTypeID());\n+                    Icon icon = new ImageIcon(getClass().getResource(iconPath));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxMzc1OA=="}, "originalCommit": {"oid": "b4c28bca74a9eb1ae673339cf544c468bc8df537"}, "originalPosition": 373}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 672, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}