{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MDg2NjI4", "number": 5824, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMDozNlrOD0Rs2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMDozNlrOD0Rs2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTQyNTUzOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/datamodel/accounts/Accounts.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDozMDozNlrOGJI7FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNTowNDoxNlrOGJKufA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNjU2NQ==", "bodyText": "This method causes several build warning.", "url": "https://github.com/sleuthkit/autopsy/pull/5824#discussion_r412236565", "createdAt": "2020-04-21T14:30:36Z", "author": {"login": "wschaeferB"}, "path": "Core/src/org/sleuthkit/autopsy/datamodel/accounts/Accounts.java", "diffHunk": "@@ -249,12 +255,69 @@ public String getItemType() {\n             return getClass().getName();\n         }\n     }\n+    \n+    /**\n+     * Tracks the account types and the number of account types found.\n+     */\n+    private class AccountTypeResults {\n+        private final Map<String, Long> counts = new HashMap<>();\n+        \n+        AccountTypeResults() {\n+            update();\n+        }\n+        \n+        /**\n+         * Given the type name of the Account.Type, provides the count of those type.\n+         * @param accountType   The type name of the Account.Type.\n+         * @return              The number of results found for the given account type.\n+         */\n+        Long getCount(String accountType) {\n+            return counts.get(accountType);\n+        }\n+        \n+        /**\n+         * Retrieves an alphabetically organized list of all the account types.\n+         * @return      An alphabetically organized list of all the account types.\n+         */\n+        List<String> getTypes() {\n+            List<String> types = new ArrayList(counts.keySet());\n+            Collections.sort(types);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6e8b8dadd178e1f13e65c72714a6fb4da2e517"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI2NjEwOA==", "bodyText": "Ok.  I believed this is fixed.", "url": "https://github.com/sleuthkit/autopsy/pull/5824#discussion_r412266108", "createdAt": "2020-04-21T15:04:16Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/datamodel/accounts/Accounts.java", "diffHunk": "@@ -249,12 +255,69 @@ public String getItemType() {\n             return getClass().getName();\n         }\n     }\n+    \n+    /**\n+     * Tracks the account types and the number of account types found.\n+     */\n+    private class AccountTypeResults {\n+        private final Map<String, Long> counts = new HashMap<>();\n+        \n+        AccountTypeResults() {\n+            update();\n+        }\n+        \n+        /**\n+         * Given the type name of the Account.Type, provides the count of those type.\n+         * @param accountType   The type name of the Account.Type.\n+         * @return              The number of results found for the given account type.\n+         */\n+        Long getCount(String accountType) {\n+            return counts.get(accountType);\n+        }\n+        \n+        /**\n+         * Retrieves an alphabetically organized list of all the account types.\n+         * @return      An alphabetically organized list of all the account types.\n+         */\n+        List<String> getTypes() {\n+            List<String> types = new ArrayList(counts.keySet());\n+            Collections.sort(types);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIzNjU2NQ=="}, "originalCommit": {"oid": "9a6e8b8dadd178e1f13e65c72714a6fb4da2e517"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 575, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}