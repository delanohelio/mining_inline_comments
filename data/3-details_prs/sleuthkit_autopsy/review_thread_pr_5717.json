{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMDU1NjE5", "number": 5717, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjo0NDo0NFrODpMXsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjo0NDo0NFrODpMXsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTIwODgxOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/CentralRepoDbUpgrader13To14.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjo0NDo0NFrOF4Nz3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTowOTo1M1rOF4TNYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MDg0NA==", "bodyText": "You could flatten this logic a bit by combining the else and the first conditional statement since everything in the else block also requires the first conditional to be true to happen.\nThis would likely make codacy not complain about the deeply nested inner conditional.", "url": "https://github.com/sleuthkit/autopsy/pull/5717#discussion_r394490844", "createdAt": "2020-03-18T16:44:44Z", "author": {"login": "wschaeferB"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/CentralRepoDbUpgrader13To14.java", "diffHunk": "@@ -61,18 +61,19 @@ public void upgradeSchema(CaseDbSchemaVersionNumber dbSchemaVersion, Connection\n                         // add new correlation type\n                         CentralRepoDbUtil.insertCorrelationType(connection, type);\n \n-                    } else {\n-\n-                        // Alter the existing X_Instance tables to add account_id column \n-                        String sqlStr = String.format(getAlterArtifactInstancesAddAccountIdTemplate(selectedPlatform), instance_type_dbname);\n-                        statement.execute(sqlStr);\n-\n-                        // SQLite does NOT allow adding a constraint with Alter Table statement.\n-                        // The alternative would be to create new tables, copy all data over, and delete old tables - potentially a time consuming process. \n-                        // We decided to not add this constraint for SQLite, since there likely aren't many users using SQLite based Central Repo.\n-                        if (selectedPlatform == CentralRepoPlatforms.POSTGRESQL) {\n-                            sqlStr = String.format(getAlterArtifactInstancesAddAccountIdConstraintTemplate(), instance_type_dbname);\n+                    } else {    // existing attributes \n+                        // Alter the existing _instance tables for Phone and Email attributes to add account_id column \n+                        if (type.getId() == CorrelationAttributeInstance.EMAIL_TYPE_ID || type.getId() == CorrelationAttributeInstance.PHONE_TYPE_ID) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291d778ee2a96bf2d36e15f08ebe50650ed719f7"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3OTI5Ng==", "bodyText": "Uhh, I'd done just that, yesterday evening.  But apparently I did not push that commit up, as I though I had.", "url": "https://github.com/sleuthkit/autopsy/pull/5717#discussion_r394579296", "createdAt": "2020-03-18T19:09:53Z", "author": {"login": "raman-bt"}, "path": "Core/src/org/sleuthkit/autopsy/centralrepository/datamodel/CentralRepoDbUpgrader13To14.java", "diffHunk": "@@ -61,18 +61,19 @@ public void upgradeSchema(CaseDbSchemaVersionNumber dbSchemaVersion, Connection\n                         // add new correlation type\n                         CentralRepoDbUtil.insertCorrelationType(connection, type);\n \n-                    } else {\n-\n-                        // Alter the existing X_Instance tables to add account_id column \n-                        String sqlStr = String.format(getAlterArtifactInstancesAddAccountIdTemplate(selectedPlatform), instance_type_dbname);\n-                        statement.execute(sqlStr);\n-\n-                        // SQLite does NOT allow adding a constraint with Alter Table statement.\n-                        // The alternative would be to create new tables, copy all data over, and delete old tables - potentially a time consuming process. \n-                        // We decided to not add this constraint for SQLite, since there likely aren't many users using SQLite based Central Repo.\n-                        if (selectedPlatform == CentralRepoPlatforms.POSTGRESQL) {\n-                            sqlStr = String.format(getAlterArtifactInstancesAddAccountIdConstraintTemplate(), instance_type_dbname);\n+                    } else {    // existing attributes \n+                        // Alter the existing _instance tables for Phone and Email attributes to add account_id column \n+                        if (type.getId() == CorrelationAttributeInstance.EMAIL_TYPE_ID || type.getId() == CorrelationAttributeInstance.PHONE_TYPE_ID) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5MDg0NA=="}, "originalCommit": {"oid": "291d778ee2a96bf2d36e15f08ebe50650ed719f7"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 661, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}