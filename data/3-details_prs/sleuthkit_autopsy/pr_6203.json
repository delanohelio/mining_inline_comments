{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxODQ3MjEy", "number": 6203, "title": "6732 - Added getArtifact method to DataSourceInfoUtilities", "bodyText": "", "createdAt": "2020-08-21T20:43:39Z", "url": "https://github.com/sleuthkit/autopsy/pull/6203", "merged": true, "mergeCommit": {"oid": "278fa30e417b7a596cf40baea1bc566fae3c1d12"}, "closed": true, "closedAt": "2020-08-28T15:52:17Z", "author": {"login": "kellykelly3"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdBLCbXAH2gAyNDcxODQ3MjEyOjZlMTY0ZGNmZGE5YzVmOGFhMjkxMmY5NTkyZjNiYTM5MDg2NjM5YTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDXCqcAFqTQ3NzgzOTcwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6e164dcfda9c5f8aa2912f9592f3ba39086639a5", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/6e164dcfda9c5f8aa2912f9592f3ba39086639a5", "committedDate": "2020-08-21T20:42:46Z", "message": "Added getArtifact method to DataSourceInfoUtilities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b697a4472c2c4df2a5bd1d68d4822fe631e922bd", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/b697a4472c2c4df2a5bd1d68d4822fe631e922bd", "committedDate": "2020-08-24T14:24:55Z", "message": "Fixed codacy issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNzcyMDY5", "url": "https://github.com/sleuthkit/autopsy/pull/6203#pullrequestreview-473772069", "createdAt": "2020-08-24T18:54:51Z", "commit": {"oid": "b697a4472c2c4df2a5bd1d68d4822fe631e922bd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODo1NDo1MVrOHFyLKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODo1NzoxNFrOHFyQZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgyNjk4NQ==", "bodyText": "I think this is 'DESCENDING'", "url": "https://github.com/sleuthkit/autopsy/pull/6203#discussion_r475826985", "createdAt": "2020-08-24T18:54:51Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/datasourcesummary/datamodel/DataSourceInfoUtilities.java", "diffHunk": "@@ -133,9 +139,126 @@ static String getMetaFlagsContainsStatement(TSK_FS_META_FLAG_ENUM flag) {\n         return \"meta_flags & \" + flag.getValue() + \" > 0\";\n     }\n \n+    /**\n+     * Enum for specifying the sort order for getAttributes.\n+     */\n+    enum SortOrder {\n+        DECENDING,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b697a4472c2c4df2a5bd1d68d4822fe631e922bd"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgyODMyNA==", "bodyText": "I think this may need to be a different data structure.  Right now, artifacts that have a null value for the attribute being sorted on are removed.  Also, if two items have the same sort value, then I believe only one is stored.", "url": "https://github.com/sleuthkit/autopsy/pull/6203#discussion_r475828324", "createdAt": "2020-08-24T18:57:14Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/datasourcesummary/datamodel/DataSourceInfoUtilities.java", "diffHunk": "@@ -133,9 +139,126 @@ static String getMetaFlagsContainsStatement(TSK_FS_META_FLAG_ENUM flag) {\n         return \"meta_flags & \" + flag.getValue() + \" > 0\";\n     }\n \n+    /**\n+     * Enum for specifying the sort order for getAttributes.\n+     */\n+    enum SortOrder {\n+        DECENDING,\n+        ASCENDING\n+    }\n+\n+    /**\n+     * Return a list of artifacts that have been sorted by their attribute of\n+     * attributeType.\n+     *\n+     * Sorting on attributes of type byte[] and JSON is not currently supported.\n+     *\n+     * @param skCase        SleuthkitCase instance.\n+     * @param artifactType  Type of artifacts to sort.\n+     * @param dataSource    Data Source that the artifact belongs to.\n+     * @param attributeType Attribute type to sort by.\n+     * @param sortOrder     Sort order of the attributes, either ascending or\n+     *                      descending.\n+     * @param maxCount      Maximum number of results to return. To return all\n+     *                      values maxCount should be -1.\n+     *\n+     * @return A list of artifacts of type artifactType sorted by the attribute\n+     *         of attributeType in the given sortOrder. If no artifacts are\n+     *         found an empty list will be returned.\n+     *\n+     * @throws TskCoreException\n+     */\n+    static List<BlackboardArtifact> getArtifacts(SleuthkitCase skCase, BlackboardArtifact.Type artifactType, DataSource dataSource, BlackboardAttribute.Type attributeType, SortOrder sortOrder, int maxCount) throws TskCoreException {\n+        if (maxCount < 1 && maxCount != -1) {\n+            throw new IllegalArgumentException(\"Invalid maxCount passed to getArtifacts, value must be at greater 0\");\n+        }\n+\n+        TreeMap<BlackboardAttribute, BlackboardArtifact> sortedMap = new TreeMap<>(new AttributeComparator(sortOrder));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b697a4472c2c4df2a5bd1d68d4822fe631e922bd"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cfbe6d18b0d9f5a498da9e0bd2d1f5cf7fc72ae", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/4cfbe6d18b0d9f5a498da9e0bd2d1f5cf7fc72ae", "committedDate": "2020-08-25T18:58:12Z", "message": "Fixed bug and addressed review comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NzQ3NjQ0", "url": "https://github.com/sleuthkit/autopsy/pull/6203#pullrequestreview-476747644", "createdAt": "2020-08-27T13:57:40Z", "commit": {"oid": "4cfbe6d18b0d9f5a498da9e0bd2d1f5cf7fc72ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf3bd7c831bcc2cb284706adb4db59f12ed3887f", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/cf3bd7c831bcc2cb284706adb4db59f12ed3887f", "committedDate": "2020-08-27T14:32:23Z", "message": "fixed codacy issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2OTg4MjQ5", "url": "https://github.com/sleuthkit/autopsy/pull/6203#pullrequestreview-476988249", "createdAt": "2020-08-27T18:44:08Z", "commit": {"oid": "cf3bd7c831bcc2cb284706adb4db59f12ed3887f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c455f728d079309c0ae764294c9c7e4668036a9", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/9c455f728d079309c0ae764294c9c7e4668036a9", "committedDate": "2020-08-27T19:16:17Z", "message": "Fixed another codacy issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTYxNDA2", "url": "https://github.com/sleuthkit/autopsy/pull/6203#pullrequestreview-477161406", "createdAt": "2020-08-28T00:08:22Z", "commit": {"oid": "9c455f728d079309c0ae764294c9c7e4668036a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMDowODoyMlrOHIlPnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMDowOTowOVrOHIlQZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDg2MA==", "bodyText": "I think this is an unused import causing a codacy issue.", "url": "https://github.com/sleuthkit/autopsy/pull/6203#discussion_r478760860", "createdAt": "2020-08-28T00:08:22Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/datasourcesummary/datamodel/DataSourceInfoUtilities.java", "diffHunk": "@@ -20,13 +20,21 @@\n \n import java.sql.ResultSet;\n import java.sql.SQLException;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c455f728d079309c0ae764294c9c7e4668036a9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTA2Mw==", "bodyText": "I think this is supposed to be \"Invalid maxCount passed to getArtifacts; value must be greater than or equal to 0.\"", "url": "https://github.com/sleuthkit/autopsy/pull/6203#discussion_r478761063", "createdAt": "2020-08-28T00:09:09Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/datasourcesummary/datamodel/DataSourceInfoUtilities.java", "diffHunk": "@@ -133,9 +141,204 @@ static String getMetaFlagsContainsStatement(TSK_FS_META_FLAG_ENUM flag) {\n         return \"meta_flags & \" + flag.getValue() + \" > 0\";\n     }\n \n+    /**\n+     * Enum for specifying the sort order for getAttributes.\n+     */\n+    enum SortOrder {\n+        DESCENDING,\n+        ASCENDING\n+    }\n+\n+    /**\n+     * Returns a list of all artifacts of the given type that have an attribute\n+     * of the given type sorted by given attribute type value. Artifacts that do\n+     * not have the given attribute will not be included in the list.\n+     *\n+     * Sorting on attributes of type byte[] and JSON is not currently supported.\n+     *\n+     * @param skCase        SleuthkitCase instance.\n+     * @param artifactType  Type of artifacts to sort.\n+     * @param dataSource    Data Source that the artifact belongs to.\n+     * @param attributeType Attribute type to sort by.\n+     * @param sortOrder     Sort order of the attributes, either ascending or\n+     *                      descending.\n+     *\n+     * @return A list of artifacts of type artifactType sorted by the attribute\n+     *         of attributeType in the given sortOrder. If no artifacts are\n+     *         found an empty list will be returned.\n+     *\n+     * @throws TskCoreException\n+     */\n+    static List<BlackboardArtifact> getArtifacts(SleuthkitCase skCase, BlackboardArtifact.Type artifactType, DataSource dataSource, BlackboardAttribute.Type attributeType, SortOrder sortOrder) throws TskCoreException {\n+        return getArtifacts(skCase, artifactType, dataSource, attributeType, sortOrder, 0);\n+    }\n+\n+    /**\n+     * Return a list of artifacts that have been sorted by their attribute of\n+     * attributeType. If an artifact of the given type does not have the given\n+     * attribute it will not be included in the returned list.\n+     *\n+     * Sorting on attributes of type byte[] and JSON is not currently supported.\n+     *\n+     * @param skCase        SleuthkitCase instance.\n+     * @param artifactType  Type of artifacts to sort.\n+     * @param dataSource    Data Source that the artifact belongs to.\n+     * @param attributeType Attribute type to sort by.\n+     * @param sortOrder     Sort order of the attributes, either ascending or\n+     *                      descending.\n+     * @param maxCount      Maximum number of results to return. To return all\n+     *                      values maxCount should be 0.\n+     *\n+     * @return A list of artifacts of type artifactType sorted by the attribute\n+     *         of attributeType in the given sortOrder. If no artifacts are\n+     *         found an empty list will be returned.\n+     *\n+     * @throws TskCoreException\n+     */\n+    static List<BlackboardArtifact> getArtifacts(SleuthkitCase skCase, BlackboardArtifact.Type artifactType, DataSource dataSource, BlackboardAttribute.Type attributeType, SortOrder sortOrder, int maxCount) throws TskCoreException {\n+        if (maxCount < 0) {\n+            throw new IllegalArgumentException(\"Invalid maxCount passed to getArtifacts, value must be at greater 0\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c455f728d079309c0ae764294c9c7e4668036a9"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NjkyOTEz", "url": "https://github.com/sleuthkit/autopsy/pull/6203#pullrequestreview-477692913", "createdAt": "2020-08-28T12:39:03Z", "commit": {"oid": "9c455f728d079309c0ae764294c9c7e4668036a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjozOTowNFrOHJCw7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjozOTowNFrOHJCw7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI0NDUyNg==", "bodyText": "I believe the intent is that if maxCount is zero, return all records.  It looks like this line causes no records to be returned in that event.", "url": "https://github.com/sleuthkit/autopsy/pull/6203#discussion_r479244526", "createdAt": "2020-08-28T12:39:04Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/datasourcesummary/datamodel/DataSourceInfoUtilities.java", "diffHunk": "@@ -133,9 +141,204 @@ static String getMetaFlagsContainsStatement(TSK_FS_META_FLAG_ENUM flag) {\n         return \"meta_flags & \" + flag.getValue() + \" > 0\";\n     }\n \n+    /**\n+     * Enum for specifying the sort order for getAttributes.\n+     */\n+    enum SortOrder {\n+        DESCENDING,\n+        ASCENDING\n+    }\n+\n+    /**\n+     * Returns a list of all artifacts of the given type that have an attribute\n+     * of the given type sorted by given attribute type value. Artifacts that do\n+     * not have the given attribute will not be included in the list.\n+     *\n+     * Sorting on attributes of type byte[] and JSON is not currently supported.\n+     *\n+     * @param skCase        SleuthkitCase instance.\n+     * @param artifactType  Type of artifacts to sort.\n+     * @param dataSource    Data Source that the artifact belongs to.\n+     * @param attributeType Attribute type to sort by.\n+     * @param sortOrder     Sort order of the attributes, either ascending or\n+     *                      descending.\n+     *\n+     * @return A list of artifacts of type artifactType sorted by the attribute\n+     *         of attributeType in the given sortOrder. If no artifacts are\n+     *         found an empty list will be returned.\n+     *\n+     * @throws TskCoreException\n+     */\n+    static List<BlackboardArtifact> getArtifacts(SleuthkitCase skCase, BlackboardArtifact.Type artifactType, DataSource dataSource, BlackboardAttribute.Type attributeType, SortOrder sortOrder) throws TskCoreException {\n+        return getArtifacts(skCase, artifactType, dataSource, attributeType, sortOrder, 0);\n+    }\n+\n+    /**\n+     * Return a list of artifacts that have been sorted by their attribute of\n+     * attributeType. If an artifact of the given type does not have the given\n+     * attribute it will not be included in the returned list.\n+     *\n+     * Sorting on attributes of type byte[] and JSON is not currently supported.\n+     *\n+     * @param skCase        SleuthkitCase instance.\n+     * @param artifactType  Type of artifacts to sort.\n+     * @param dataSource    Data Source that the artifact belongs to.\n+     * @param attributeType Attribute type to sort by.\n+     * @param sortOrder     Sort order of the attributes, either ascending or\n+     *                      descending.\n+     * @param maxCount      Maximum number of results to return. To return all\n+     *                      values maxCount should be 0.\n+     *\n+     * @return A list of artifacts of type artifactType sorted by the attribute\n+     *         of attributeType in the given sortOrder. If no artifacts are\n+     *         found an empty list will be returned.\n+     *\n+     * @throws TskCoreException\n+     */\n+    static List<BlackboardArtifact> getArtifacts(SleuthkitCase skCase, BlackboardArtifact.Type artifactType, DataSource dataSource, BlackboardAttribute.Type attributeType, SortOrder sortOrder, int maxCount) throws TskCoreException {\n+        if (maxCount < 0) {\n+            throw new IllegalArgumentException(\"Invalid maxCount passed to getArtifacts, value must be at greater 0\");\n+        }\n+\n+        return createListFromMap(getArtifactMap(skCase, artifactType, dataSource, attributeType, sortOrder), maxCount);\n+    }\n+\n     /**\n      * Empty private constructor\n      */\n     private DataSourceInfoUtilities() {\n     }\n+    \n+     /**\n+     * Create a Map of lists of artifacts sorted by the given attribute.\n+     *\n+     * @param skCase        SleuthkitCase instance.\n+     * @param artifactType  Type of artifacts to sort.\n+     * @param dataSource    Data Source that the artifact belongs to.\n+     * @param attributeType Attribute type to sort by.\n+     * @param sortOrder     Sort order of the attributes, either ascending or\n+     *                      descending.\n+     *\n+     * @return A Map of lists of artifacts sorted by the value of attribute\n+     *         given type. Artifacts that do not have an attribute of the given\n+     *         type will not be included.\n+     *\n+     * @throws TskCoreException\n+     */\n+    static private SortedMap<BlackboardAttribute, List<BlackboardArtifact>> getArtifactMap(SleuthkitCase skCase, BlackboardArtifact.Type artifactType, DataSource dataSource, BlackboardAttribute.Type attributeType, SortOrder sortOrder) throws TskCoreException {\n+        SortedMap<BlackboardAttribute, List<BlackboardArtifact>> sortedMap = new TreeMap<>(new AttributeComparator(sortOrder));\n+        List<BlackboardArtifact> artifactList = skCase.getBlackboard().getArtifacts(artifactType.getTypeID(), dataSource.getId());\n+\n+        for (BlackboardArtifact artifact : artifactList) {\n+            BlackboardAttribute attribute = artifact.getAttribute(attributeType);\n+            if (attribute == null) {\n+                continue;\n+            }\n+\n+            List<BlackboardArtifact> mapArtifactList = sortedMap.get(attribute);\n+            if (mapArtifactList == null) {\n+                mapArtifactList = new ArrayList<>();\n+                sortedMap.put(attribute, mapArtifactList);\n+            }\n+\n+            mapArtifactList.add(artifact);\n+        }\n+\n+        return sortedMap;\n+    }\n+\n+    /**\n+     * Creates the list of artifacts from the sorted map and the given count.\n+     *\n+     * @param sortedMap Sorted map of artifact lists.\n+     * @param maxCount  Maximum number of artifacts to return.\n+     *\n+     * @return List of artifacts, list will be empty if none were found.\n+     */\n+    static private List<BlackboardArtifact> createListFromMap(SortedMap<BlackboardAttribute, List<BlackboardArtifact>> sortedMap, int maxCount) {\n+        List<BlackboardArtifact> artifactList = new ArrayList<>();\n+\n+        for (List<BlackboardArtifact> mapArtifactList : sortedMap.values()) {\n+\n+            if (maxCount == artifactList.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c455f728d079309c0ae764294c9c7e4668036a9"}, "originalPosition": 145}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "024fb9325162380a1d4043895219bc389ab2a7d5", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/024fb9325162380a1d4043895219bc389ab2a7d5", "committedDate": "2020-08-28T14:12:06Z", "message": "Fixed codacy issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "964a06c37cedee96009d0a48c528e8da3bd92a8b", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/964a06c37cedee96009d0a48c528e8da3bd92a8b", "committedDate": "2020-08-28T14:38:53Z", "message": "Merge branch 'develop' into 6732-getArtifact-datasourcesummary"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1ad8398a1f4855595eb62ddc7fb62ce0823ce29", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/a1ad8398a1f4855595eb62ddc7fb62ce0823ce29", "committedDate": "2020-08-28T14:52:42Z", "message": "Merged in develop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODM5NzA1", "url": "https://github.com/sleuthkit/autopsy/pull/6203#pullrequestreview-477839705", "createdAt": "2020-08-28T15:49:44Z", "commit": {"oid": "a1ad8398a1f4855595eb62ddc7fb62ce0823ce29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2863, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}