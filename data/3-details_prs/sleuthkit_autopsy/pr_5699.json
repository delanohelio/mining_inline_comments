{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2Nzg3MDc2", "number": 5699, "title": "6111: CVT displays incorrect To phone number for Outgoing calls.", "bodyText": "", "createdAt": "2020-03-11T16:15:01Z", "url": "https://github.com/sleuthkit/autopsy/pull/5699", "merged": true, "mergeCommit": {"oid": "916c0ed14a0c207dd122da8b357924e4ffc55d86"}, "closed": true, "closedAt": "2020-03-18T12:23:53Z", "author": {"login": "raman-bt"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMpZ0egH2gAyMzg2Nzg3MDc2OmM2NGNiYjM1MWYwMjNjODQ0ZWJkNzc5NzIwYTc5MGE1MWJkZGM1M2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOour0gFqTM3NjM4MDQzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c64cbb351f023c844ebd779720a790a51bddc53e", "author": {"user": {"login": "raman-bt", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/c64cbb351f023c844ebd779720a790a51bddc53e", "committedDate": "2020-03-11T16:07:29Z", "message": "6111: CVT displays incorrect To phone number for Outgoing calls."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b", "author": {"user": {"login": "raman-bt", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/ad5106d7d431aaf4d1eba68aff3c737b83d65c7b", "committedDate": "2020-03-11T17:43:31Z", "message": "Addressed Codacy comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0ODI4NDA5", "url": "https://github.com/sleuthkit/autopsy/pull/5699#pullrequestreview-374828409", "createdAt": "2020-03-15T19:54:26Z", "commit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo1NDoyNlrOF2g5yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNVQxOTo1NzowOVrOF2g6qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjUwNw==", "bodyText": "Nice! This is known as coalescing.", "url": "https://github.com/sleuthkit/autopsy/pull/5699#discussion_r392706507", "createdAt": "2020-03-15T19:54:26Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/communications/relationships/CallLogNode.java", "diffHunk": "@@ -107,6 +100,59 @@ long getCallDuration(BlackboardArtifact artifact) throws TskCoreException {\n         return endAttribute.getValueLong() - startAttribute.getValueLong();\n     }\n     \n+    /**\n+     * Returns the phone number to display in the To/From column. The number is\n+     * picked from one of the 3 possible phone number attributes, based on the\n+     * direction of the call.\n+     *\n+     * @param artifact Call log artifact.\n+     *\n+     * @return Phone number to display.\n+     */\n+    private String getPhoneNumber(BlackboardArtifact artifact) {\n+        String direction = getAttributeDisplayString(artifact, TSK_DIRECTION);\n+\n+        String phoneNumberToReturn;\n+        String fromPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_FROM);\n+        String toPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_TO);\n+        String phoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER);\n+        switch (direction.toLowerCase()) {\n+            case \"incoming\": // NON-NLS \n+                phoneNumberToReturn = getFirstNonBlank(fromPhoneNumber, phoneNumber, toPhoneNumber);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcwNjczMA==", "bodyText": "Coalescing blankness is a very common operation. Since you are using commons lang, they've already implemented this for you.\nhttps://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#firstNonBlank-T...-\nI suggest replacing the above getFirstNonBlank calls with StringUtils.firstNonBlank(...) and then, before returning, check if phoneNumberToReturn is null. If so, you can sub an empty value like you're doing here.", "url": "https://github.com/sleuthkit/autopsy/pull/5699#discussion_r392706730", "createdAt": "2020-03-15T19:57:09Z", "author": {"login": "dannysmyda"}, "path": "Core/src/org/sleuthkit/autopsy/communications/relationships/CallLogNode.java", "diffHunk": "@@ -107,6 +100,59 @@ long getCallDuration(BlackboardArtifact artifact) throws TskCoreException {\n         return endAttribute.getValueLong() - startAttribute.getValueLong();\n     }\n     \n+    /**\n+     * Returns the phone number to display in the To/From column. The number is\n+     * picked from one of the 3 possible phone number attributes, based on the\n+     * direction of the call.\n+     *\n+     * @param artifact Call log artifact.\n+     *\n+     * @return Phone number to display.\n+     */\n+    private String getPhoneNumber(BlackboardArtifact artifact) {\n+        String direction = getAttributeDisplayString(artifact, TSK_DIRECTION);\n+\n+        String phoneNumberToReturn;\n+        String fromPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_FROM);\n+        String toPhoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER_TO);\n+        String phoneNumber = getAttributeDisplayString(artifact, TSK_PHONE_NUMBER);\n+        switch (direction.toLowerCase()) {\n+            case \"incoming\": // NON-NLS \n+                phoneNumberToReturn = getFirstNonBlank(fromPhoneNumber, phoneNumber, toPhoneNumber);\n+                break;\n+            case \"outgoing\": // NON-NLS\n+                phoneNumberToReturn = getFirstNonBlank(toPhoneNumber, phoneNumber, fromPhoneNumber);\n+                break;\n+            default:\n+                phoneNumberToReturn = getFirstNonBlank(toPhoneNumber, fromPhoneNumber, phoneNumber );\n+                break;\n+        }\n+\n+        return phoneNumberToReturn;\n+    }\n+    \n+    /**\n+     * Checks the given string arguments in order and returns the first non blank string.\n+     * Returns a blank string if all the input strings are blank.\n+     * \n+     * @param string1 First string to check\n+     * @param string2 Second string to check\n+     * @param string3 Third string to check\n+     * \n+     * @retunr first non blank string if there is one, blank string otherwise.\n+     * \n+     */\n+    private String getFirstNonBlank(String string1, String string2, String string3 ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzgwNDMw", "url": "https://github.com/sleuthkit/autopsy/pull/5699#pullrequestreview-376380430", "createdAt": "2020-03-17T20:28:13Z", "commit": {"oid": "ad5106d7d431aaf4d1eba68aff3c737b83d65c7b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2799, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}