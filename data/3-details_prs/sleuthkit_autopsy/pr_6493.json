{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NDg3NDAx", "number": 6493, "title": "6984 Add support for GPS area artifacts", "bodyText": "", "createdAt": "2020-11-24T13:41:33Z", "url": "https://github.com/sleuthkit/autopsy/pull/6493", "merged": true, "mergeCommit": {"oid": "3acada9c25ebfe491a09652a78113539fc5315fb"}, "closed": true, "closedAt": "2020-12-01T22:35:42Z", "author": {"login": "APriestman"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfprSygH2gAyNTI2NDg3NDAxOjk4ZjNkMmE5NzRkOTZhMzUzMTRlNzRiOTI4ZjAzYTdlMTRhMzE4ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiA4LGgFqTU0MjMxMzMwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "98f3d2a974d96a35314e74b928f03a7e14a318d3", "author": {"user": {"login": "APriestman", "name": "Ann Priestman"}}, "url": "https://github.com/sleuthkit/autopsy/commit/98f3d2a974d96a35314e74b928f03a7e14a318d3", "committedDate": "2020-11-24T13:22:17Z", "message": "Add support for GPS area artifacts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "821b733428c258b2600b4938a89bfad9cfa7293d", "author": {"user": {"login": "APriestman", "name": "Ann Priestman"}}, "url": "https://github.com/sleuthkit/autopsy/commit/821b733428c258b2600b4938a89bfad9cfa7293d", "committedDate": "2020-11-24T13:40:55Z", "message": "Cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODg3NTAz", "url": "https://github.com/sleuthkit/autopsy/pull/6493#pullrequestreview-537887503", "createdAt": "2020-11-24T20:42:28Z", "commit": {"oid": "821b733428c258b2600b4938a89bfad9cfa7293d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo0MjoyOVrOH5UaWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMDo0NTowOFrOH5UfeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NTMwNA==", "bodyText": "Missing method header.", "url": "https://github.com/sleuthkit/autopsy/pull/6493#discussion_r529865304", "createdAt": "2020-11-24T20:42:29Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/MapPanel.java", "diffHunk": "@@ -903,4 +943,66 @@ public void paint(Graphics2D g, JXMapViewer map, int w, int h) {\n             g2d.dispose();\n         }\n     }\n+    \n+    /**\n+     * Renderer for map areas\n+     */\n+    private class MapAreaRenderer implements Painter<JXMapViewer> {\n+\n+        private final List<Set<MapWaypoint>> areas;\n+\n+        MapAreaRenderer(List<Set<MapWaypoint>> areas) {\n+            this.areas = areas;\n+        }\n+\n+        private void drawArea(Set<MapWaypoint> area, Graphics2D g, JXMapViewer map) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "821b733428c258b2600b4938a89bfad9cfa7293d"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NTYzOA==", "bodyText": "Put 255.0 into constant.", "url": "https://github.com/sleuthkit/autopsy/pull/6493#discussion_r529865638", "createdAt": "2020-11-24T20:43:12Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/MapPanel.java", "diffHunk": "@@ -903,4 +943,66 @@ public void paint(Graphics2D g, JXMapViewer map, int w, int h) {\n             g2d.dispose();\n         }\n     }\n+    \n+    /**\n+     * Renderer for map areas\n+     */\n+    private class MapAreaRenderer implements Painter<JXMapViewer> {\n+\n+        private final List<Set<MapWaypoint>> areas;\n+\n+        MapAreaRenderer(List<Set<MapWaypoint>> areas) {\n+            this.areas = areas;\n+        }\n+\n+        private void drawArea(Set<MapWaypoint> area, Graphics2D g, JXMapViewer map) {\n+            if (area.isEmpty()) {\n+                return;\n+            }\n+            boolean first = true;\n+            \n+            GeneralPath polygon = new GeneralPath(GeneralPath.WIND_EVEN_ODD, area.size());\n+\n+            for (MapWaypoint wp : area) {\n+                Point2D p = map.getTileFactory().geoToPixel(wp.getPosition(), map.getZoom());\n+                int thisX = (int) p.getX();\n+                int thisY = (int) p.getY();\n+\n+                if (first) {\n+                    polygon.moveTo(thisX, thisY);\n+                    first = false;\n+                } else {\n+                    polygon.lineTo(thisX, thisY);\n+                }\n+            }\n+            polygon.closePath();\n+            \n+            Color areaColor = area.iterator().next().getColor();\n+            g.setPaint(new Color((float)(areaColor.getRed() / 255.0), ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "821b733428c258b2600b4938a89bfad9cfa7293d"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NTg4Nw==", "bodyText": "Should the class for the logger be Track or Area?", "url": "https://github.com/sleuthkit/autopsy/pull/6493#discussion_r529865887", "createdAt": "2020-11-24T20:43:43Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/Area.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Autopsy Forensic Browser\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.geolocation.datamodel;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.logging.Level;\n+import org.openide.util.NbBundle.Messages;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.datamodel.BlackboardAttribute;\n+import org.sleuthkit.datamodel.blackboardutils.attributes.BlackboardJsonAttrUtil;\n+import org.sleuthkit.datamodel.blackboardutils.attributes.BlackboardJsonAttrUtil.InvalidJsonException;\n+import org.sleuthkit.datamodel.blackboardutils.attributes.GeoAreaPoints;\n+import org.sleuthkit.autopsy.coreutils.Logger;\n+\n+/**\n+ * A GPS track with which wraps the TSK_GPS_AREA artifact.\n+ */\n+public final class Area extends GeoPath {\n+    private static final Logger LOGGER = Logger.getLogger(Track.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "821b733428c258b2600b4938a89bfad9cfa7293d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2NjYxNw==", "bodyText": "Do we need to log the error and throw an exception?  Will the calling code write an error too?", "url": "https://github.com/sleuthkit/autopsy/pull/6493#discussion_r529866617", "createdAt": "2020-11-24T20:45:08Z", "author": {"login": "kellykelly3"}, "path": "Core/src/org/sleuthkit/autopsy/geolocation/datamodel/Area.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*\n+ * Autopsy Forensic Browser\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.geolocation.datamodel;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.logging.Level;\n+import org.openide.util.NbBundle.Messages;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.datamodel.BlackboardAttribute;\n+import org.sleuthkit.datamodel.blackboardutils.attributes.BlackboardJsonAttrUtil;\n+import org.sleuthkit.datamodel.blackboardutils.attributes.BlackboardJsonAttrUtil.InvalidJsonException;\n+import org.sleuthkit.datamodel.blackboardutils.attributes.GeoAreaPoints;\n+import org.sleuthkit.autopsy.coreutils.Logger;\n+\n+/**\n+ * A GPS track with which wraps the TSK_GPS_AREA artifact.\n+ */\n+public final class Area extends GeoPath {\n+    private static final Logger LOGGER = Logger.getLogger(Track.class.getName());\n+\n+    /**\n+     * Construct a new Area for the given artifact.\n+     *\n+     * @param artifact\n+     *\n+     * @throws GeoLocationDataException\n+     */\n+    public Area(BlackboardArtifact artifact) throws GeoLocationDataException {\n+        this(artifact, Waypoint.getAttributesFromArtifactAsMap(artifact));\n+    }\n+\n+    /**\n+     * Construct an Area for the given artifact and attributeMap.\n+     *\n+     * @param artifact     TSK_GPD_TRACK artifact\n+     * @param attributeMap Map of the artifact attributes\n+     *\n+     * @throws GeoLocationDataException\n+     */\n+    private Area(BlackboardArtifact artifact, Map<BlackboardAttribute.ATTRIBUTE_TYPE, BlackboardAttribute> attributeMap) throws GeoLocationDataException {\n+        super(artifact, getAreaName(attributeMap));\n+\n+        GeoAreaPoints points = getPointsList(attributeMap);\n+        buildPath(points, artifact);\n+    }\n+\n+    /**\n+     * Return the name of the area from the attributeMap. Track name is stored\n+     * in the attribute TSK_NAME\n+     *\n+     * @param attributeMap\n+     *\n+     * @return Area name or empty string if none was available.\n+     */\n+    private static String getAreaName(Map<BlackboardAttribute.ATTRIBUTE_TYPE, BlackboardAttribute> attributeMap) {\n+        BlackboardAttribute attribute = attributeMap.get(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_NAME);\n+\n+        return attribute != null ? attribute.getValueString() : \"\";\n+    }\n+\n+    /**\n+     * Create the list of AreaWaypoints from the GeoTrackPoint list.\n+     *\n+     * @param points   GeoAreaPoints object.\n+     * @param artifact The artifact to which these points belong\n+     *\n+     * @throws GeoLocationDataException\n+     */\n+    @Messages({\n+        \"# {0} - area name\",\n+        \"GEOArea_point_label_header=Area outline point for area: {0}\"\n+    })\n+    private void buildPath(GeoAreaPoints points, BlackboardArtifact artifact) throws GeoLocationDataException {\n+        for (GeoAreaPoints.AreaPoint point : points) {\n+            addToPath(new AreaWaypoint(artifact, Bundle.GEOArea_point_label_header(getLabel()), point));\n+        }\n+    }\n+\n+    /**\n+     * Returns the list of GeoAreaPoints from the attributeMap. Creates the\n+     * GeoAreaPoint list from the TSK_GEO_AREAPOINTS attribute.\n+     *\n+     * @param attributeMap Map of artifact attributes.\n+     *\n+     * @return GeoTrackPoint list empty list if the attribute was not found.\n+     *\n+     * @throws GeoLocationDataException\n+     */\n+    private GeoAreaPoints getPointsList(Map<BlackboardAttribute.ATTRIBUTE_TYPE, BlackboardAttribute> attributeMap) throws GeoLocationDataException {\n+        BlackboardAttribute attribute = attributeMap.get(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_GEO_AREAPOINTS);\n+        if (attribute == null) {\n+            LOGGER.log(Level.SEVERE, \"No TSK_GEO_AREAPOINTS attribute was present on the artifact.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "821b733428c258b2600b4938a89bfad9cfa7293d"}, "originalPosition": 111}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37756a5f908fcfc0bc4c48d9c1dd9eed0d9469ee", "author": {"user": {"login": "APriestman", "name": "Ann Priestman"}}, "url": "https://github.com/sleuthkit/autopsy/commit/37756a5f908fcfc0bc4c48d9c1dd9eed0d9469ee", "committedDate": "2020-11-25T13:00:10Z", "message": "Review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMzEzMzA3", "url": "https://github.com/sleuthkit/autopsy/pull/6493#pullrequestreview-542313307", "createdAt": "2020-12-01T21:32:01Z", "commit": {"oid": "37756a5f908fcfc0bc4c48d9c1dd9eed0d9469ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2838, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}