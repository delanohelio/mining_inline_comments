{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0Mzg2MTc2", "number": 6393, "title": "6951 - Fix for Nightly TIFF failures", "bodyText": "", "createdAt": "2020-10-15T21:03:18Z", "url": "https://github.com/sleuthkit/autopsy/pull/6393", "merged": true, "mergeCommit": {"oid": "ec74f7b42bcc244ee9e7f3179b7ab2db1743da49"}, "closed": true, "closedAt": "2020-10-19T22:03:52Z", "author": {"login": "dannysmyda"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS4QLzAH2gAyNTA0Mzg2MTc2OjQ2ZWY4NGQ0MGI2MDI2YzE3MTJhMTE4NTBhNDQ3NDVmZGI0NTNlMWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUEVMAgFqTUxMTc2OTQ2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "46ef84d40b6026c1712a11850a44745fdb453e1f", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/46ef84d40b6026c1712a11850a44745fdb453e1f", "committedDate": "2020-10-15T21:00:14Z", "message": "Fixed the nightly tiff bug by adding a consistent ordering to the image providers of ImageIO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwMzk5OTEx", "url": "https://github.com/sleuthkit/autopsy/pull/6393#pullrequestreview-510399911", "createdAt": "2020-10-16T11:55:21Z", "commit": {"oid": "46ef84d40b6026c1712a11850a44745fdb453e1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMTo1NToyMVrOHi4dCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMTo1NToyMVrOHi4dCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMzODU2OQ==", "bodyText": "Could change to size - 1", "url": "https://github.com/sleuthkit/autopsy/pull/6393#discussion_r506338569", "createdAt": "2020-10-16T11:55:21Z", "author": {"login": "APriestman"}, "path": "Core/src/org/sleuthkit/autopsy/ingest/IngestManager.java", "diffHunk": "@@ -887,6 +897,44 @@ long getFreeDiskSpace() {\n         }\n     }\n \n+    /**\n+     * Initializes the ImageIO API and sorts the providers for\n+     * deterministic image reading and writing.\n+     */\n+    private void initializeImageIO() {\n+        ImageIO.scanForPlugins();\n+        \n+        // Sift through each registry category and sort category providers by\n+        // their canonical class name.\n+        IIORegistry pluginRegistry = IIORegistry.getDefaultInstance();\n+        Iterator<Class<?>> categories = pluginRegistry.getCategories();\n+        while(categories.hasNext()) {\n+            sortPluginsInCategory(pluginRegistry, categories.next());\n+        }\n+    }\n+    \n+    /**\n+     * Sorts all ImageIO SPI providers by their class name.\n+     */\n+    private <T> void sortPluginsInCategory(IIORegistry pluginRegistry, Class<T> category) {\n+        Iterator<T> serviceProviderIter = pluginRegistry.getServiceProviders(category, false);\n+        ArrayList<T> providers = new ArrayList<>();\n+        while (serviceProviderIter.hasNext()) {\n+            providers.add(serviceProviderIter.next());\n+        }\n+        Collections.sort(providers, (first, second) -> {\n+            return first.getClass().getCanonicalName().compareToIgnoreCase(second.getClass().getCanonicalName());\n+        });\n+        for(int i = 0; i < providers.size(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46ef84d40b6026c1712a11850a44745fdb453e1f"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67dc05956dfb1821184dcbd43d5e890dd826830b", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/67dc05956dfb1821184dcbd43d5e890dd826830b", "committedDate": "2020-10-16T18:32:24Z", "message": "Removed the init code from ingest and added it to the embedded file extractors start up code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "600585ebab44734c68225cc7fbd529b3dc1caa2b", "author": {"user": null}, "url": "https://github.com/sleuthkit/autopsy/commit/600585ebab44734c68225cc7fbd529b3dc1caa2b", "committedDate": "2020-10-16T18:33:26Z", "message": "Removed unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNzU5NDg0", "url": "https://github.com/sleuthkit/autopsy/pull/6393#pullrequestreview-510759484", "createdAt": "2020-10-16T19:52:59Z", "commit": {"oid": "600585ebab44734c68225cc7fbd529b3dc1caa2b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOTo1Mjo1OVrOHjN9mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOTo1Mjo1OVrOHjN9mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY5MDk2OA==", "bodyText": "We don't need to do this on every thread, i.e., in every ingest module instance startUp() call in an ingest job, do we? In fact, we should only need to do this once per application session, right?", "url": "https://github.com/sleuthkit/autopsy/pull/6393#discussion_r506690968", "createdAt": "2020-10-16T19:52:59Z", "author": {"login": "rcordovano"}, "path": "Core/src/org/sleuthkit/autopsy/modules/embeddedfileextractor/EmbeddedFileExtractorIngestModule.java", "diffHunk": "@@ -122,8 +127,53 @@ public void startUp(IngestJobContext context) throws IngestModuleException {\n         } catch (NoCurrentCaseException ex) {\n             throw new IngestModuleException(Bundle.EmbeddedFileExtractorIngestModule_UnableToGetMSOfficeExtractor_errMsg(), ex);\n         }\n+        \n+        /**\n+         * Initialize Java's Image I/O API so that image reading and writing \n+         * (needed for image extraction) happens consistently through the \n+         * same providers. See JIRA-6951 for more details.\n+         */\n+        initializeImageIO();        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "600585ebab44734c68225cc7fbd529b3dc1caa2b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzY5NDYz", "url": "https://github.com/sleuthkit/autopsy/pull/6393#pullrequestreview-511769463", "createdAt": "2020-10-19T13:38:29Z", "commit": {"oid": "600585ebab44734c68225cc7fbd529b3dc1caa2b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2857, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}