{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDQ3ODU5", "number": 5648, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDowMDozNVrODgAIHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDowMDozNVrODgAIHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODgzMTAwOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/filequery/FileSearch.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDowMDozNVrOFqCHXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDowMDozNVrOFqCHXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYxOTE2Nw==", "bodyText": "Perhaps it would be better to return null instead of throwing an exception? Nothing has really gone wrong. And then you wouldn't need that empty catch block.", "url": "https://github.com/sleuthkit/autopsy/pull/5648#discussion_r379619167", "createdAt": "2020-02-14T20:00:35Z", "author": {"login": "APriestman"}, "path": "Core/src/org/sleuthkit/autopsy/filequery/FileSearch.java", "diffHunk": "@@ -239,6 +247,80 @@ static SearchResults runFileSearchDebug(String userName,\n         return page;\n     }\n \n+    /**\n+     * Get a summary for the specified AbstractFile if no TextSummarizers exist get\n+     * the first bit of the file.\n+     *\n+     * @param file The AbstractFile to summarize.\n+     *\n+     * @return The summary or first bit of the specified file as a String.\n+     */\n+    @NbBundle.Messages({\"FileSearch.documentSummary.noPreview=No preview available.\",\n+        \"FileSearch.documentSummary.noBytes=No bytes read for document, unable to display preview.\"})\n+    static String summarize(AbstractFile file) {\n+        TextSummarizer localSummarizer = summarizerToUse;\n+        if (localSummarizer == null) {\n+            synchronized (searchCache) {\n+                if (localSummarizer == null) {\n+                    try {\n+                        localSummarizer = getLocalSummarizer();\n+                    } catch (IOException ignored) {\n+                        //no summarizers being present is not unexpected\n+                    }\n+                }\n+            }\n+        }\n+        if (localSummarizer == null) {\n+            //no summarizer was found just grab the first bit of the file\n+            return getFirstLines(file);\n+        } else {\n+            try {\n+                //a summary of length 40 seems to fit without vertical scroll bars\n+                return localSummarizer.summarize(file, 40);\n+            } catch (IOException ex) {\n+                return Bundle.FileSearch_documentSummary_noPreview();\n+            }\n+        }\n+\n+    }\n+\n+    /**\n+     * Get the first bit of text from the specified AbstractFile.\n+     *\n+     * @param file The AbstractFile to get text from.\n+     *\n+     * @return The first bit of text from the specified AbstractFile.\n+     */\n+    private static String getFirstLines(AbstractFile file) {\n+        try (Reader reader = TextExtractorFactory.getExtractor(file, null).getReader()) {\n+            char[] cbuf = new char[PREVIEW_SIZE];\n+            reader.read(cbuf, 0, PREVIEW_SIZE);\n+            return Arrays.toString(cbuf);\n+        } catch (IOException ex) {\n+            return Bundle.FileSearch_documentSummary_noBytes();\n+        } catch (TextExtractorFactory.NoTextExtractorFound | TextExtractor.InitReaderException ex) {\n+            return Bundle.FileSearch_documentSummary_noPreview();\n+        }\n+    }\n+\n+    /**\n+     * Get the first TextSummarizer found by a lookup of TextSummarizers.\n+     *\n+     * @return The first TextSummarizer found by a lookup of TextSummarizers.\n+     *\n+     * @throws IOException\n+     */\n+    private static TextSummarizer getLocalSummarizer() throws IOException {\n+        Collection<? extends TextSummarizer> summarizers\n+                = Lookup.getDefault().lookupAll(TextSummarizer.class\n+                );\n+        if (!summarizers.isEmpty()) {\n+            summarizerToUse = summarizers.iterator().next();\n+            return summarizerToUse;\n+        }\n+        throw new IOException(\"No summarizers found\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f25a126f1facae30b5048564287773c22440571"}, "originalPosition": 125}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 730, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}