{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzI2MDc5", "number": 5990, "title": "1483-Modified persona thread to use new CommunicationsManager method", "bodyText": "", "createdAt": "2020-06-18T19:42:39Z", "url": "https://github.com/sleuthkit/autopsy/pull/5990", "merged": true, "mergeCommit": {"oid": "2655a5c18a5454aeaacaea93aca40da4fc90d3ba"}, "closed": true, "closedAt": "2020-06-23T15:41:23Z", "author": {"login": "kellykelly3"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsjzfSAH2gAyNDM2NzI2MDc5OmM5ZWIwOWU2MzcwMzgzYzNmZmIxNDFiNDUyY2E3MmU4OGQ5ZDIyYzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs32higFqTQzNDI4NzMzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c9eb09e6370383c3ffb141b452ca72e88d9d22c2", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/c9eb09e6370383c3ffb141b452ca72e88d9d22c2", "committedDate": "2020-06-18T19:41:40Z", "message": "Modified persona thread to use new CommunicationsManager method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTY4NTg3", "url": "https://github.com/sleuthkit/autopsy/pull/5990#pullrequestreview-434168587", "createdAt": "2020-06-19T15:32:31Z", "commit": {"oid": "c9eb09e6370383c3ffb141b452ca72e88d9d22c2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNTozMjozMVrOGmY8zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNTo0MTowNFrOGmZN3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwNzg1Mg==", "bodyText": "There's an unused import left now.", "url": "https://github.com/sleuthkit/autopsy/pull/5990#discussion_r442907852", "createdAt": "2020-06-19T15:32:31Z", "author": {"login": "raman-bt"}, "path": "Core/src/org/sleuthkit/autopsy/contentviewers/CommunicationArtifactViewerHelper.java", "diffHunk": "@@ -27,6 +27,8 @@\n import java.awt.datatransfer.StringSelection;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n+import java.util.ArrayList;\n+import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9eb09e6370383c3ffb141b452ca72e88d9d22c2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwODUxNA==", "bodyText": "Update method header to reflect new return type.", "url": "https://github.com/sleuthkit/autopsy/pull/5990#discussion_r442908514", "createdAt": "2020-06-19T15:33:48Z", "author": {"login": "raman-bt"}, "path": "Core/src/org/sleuthkit/autopsy/contentviewers/CallLogArtifactViewer.java", "diffHunk": "@@ -288,10 +293,11 @@ private void extractTimeAndDuration(BlackboardArtifact artifact, CallLogViewData\n         \"CallLogArtifactViewer_label_from=From\",\n         \"CallLogArtifactViewer_label_to=To\"\n     })\n-    private void updateView(CallLogViewData callLogViewData) {\n+    private List<AccountPersonaSearcherData> updateView(CallLogViewData callLogViewData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9eb09e6370383c3ffb141b452ca72e88d9d22c2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkwOTE2Mw==", "bodyText": "I guess we can remove  the old code here.", "url": "https://github.com/sleuthkit/autopsy/pull/5990#discussion_r442909163", "createdAt": "2020-06-19T15:35:04Z", "author": {"login": "raman-bt"}, "path": "Core/src/org/sleuthkit/autopsy/contentviewers/CommunicationArtifactViewerHelper.java", "diffHunk": "@@ -301,15 +303,14 @@ public void mouseClicked(java.awt.event.MouseEvent evt) {\n \n         if (CentralRepository.isEnabled()) {\n             // kick off a task to find the persona for this account\n-            personaTask = new PersonaSearchAndDisplayTask(panel, new AccountPersonaSearcherData(accountIdentifier, personaLabel, personaButton));\n-            personaTask.execute();\n+            dataList.add(new AccountPersonaSearcherData(accountIdentifier, personaLabel, personaButton));\n         } else {\n             personaLabel.setEnabled(false);\n         }\n \n         addLineEndGlue(panel, gridbagLayout, constraints);\n \n-        return Optional.ofNullable(personaTask);\n+        return dataList; ///Optional.ofNullable(personaTask);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9eb09e6370383c3ffb141b452ca72e88d9d22c2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkxMjIyMg==", "bodyText": "I'd recommend to change the name of this method, updateDataObject is very vague as to what its updating.\nmaybe updatePersonaControls() or some such.", "url": "https://github.com/sleuthkit/autopsy/pull/5990#discussion_r442912222", "createdAt": "2020-06-19T15:41:04Z", "author": {"login": "raman-bt"}, "path": "Core/src/org/sleuthkit/autopsy/contentviewers/PersonaAccountFetcher.java", "diffHunk": "@@ -22,116 +22,138 @@\n import java.awt.event.ActionListener;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.CancellationException;\n import java.util.concurrent.ExecutionException;\n import java.util.logging.Level;\n-import java.util.stream.Collectors;\n import javax.swing.JButton;\n import javax.swing.SwingWorker;\n-import org.openide.util.NbBundle;\n-import org.sleuthkit.autopsy.centralrepository.datamodel.CentralRepoAccount;\n-import org.sleuthkit.autopsy.centralrepository.datamodel.CentralRepository;\n+import org.sleuthkit.autopsy.casemodule.Case;\n import org.sleuthkit.autopsy.centralrepository.datamodel.Persona;\n import org.sleuthkit.autopsy.centralrepository.datamodel.PersonaAccount;\n import org.sleuthkit.autopsy.centralrepository.persona.PersonaDetailsDialog;\n import org.sleuthkit.autopsy.centralrepository.persona.PersonaDetailsDialogCallback;\n import org.sleuthkit.autopsy.centralrepository.persona.PersonaDetailsMode;\n import org.sleuthkit.autopsy.coreutils.Logger;\n+import org.sleuthkit.datamodel.Account;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.datamodel.CommunicationsManager;\n \n /**\n- * Background task to search for a persona for a given account.\n- * \n- * When the search is complete, it updates the UI components \n- * for the persona appropriately.\n- * \n- */    \n-\n- @NbBundle.Messages({\n-        \"# {0} - Persona count\",\n-        \"PersonaDisplayTask_persona_count_suffix=(1 of {0})\"\n-    })\n-class PersonaSearchAndDisplayTask extends SwingWorker<Collection<Persona>, Void> {\n-\n-    private final static Logger logger = Logger.getLogger(PersonaSearchAndDisplayTask.class.getName());\n-    \n-        private final Component parentComponent;\n-        private final AccountPersonaSearcherData personaSearcherData;\n+ * SwingWorker for fetching and updating Persona controls.\n+ */\n+class PersonaAccountFetcher extends SwingWorker<Map<String, Collection<Persona>>, Void> {\n \n-        PersonaSearchAndDisplayTask(Component parentComponent, AccountPersonaSearcherData personaSearcherData) {\n-            this.parentComponent = parentComponent;\n-            this.personaSearcherData = personaSearcherData;\n-        }\n+    private final static Logger logger = Logger.getLogger(PersonaAccountFetcher.class.getName());\n \n-        @Override\n-        protected Collection<Persona> doInBackground() throws Exception {\n+    private final BlackboardArtifact artifact;\n+    private final List<AccountPersonaSearcherData> personaSearchDataList;\n+    private final Component parentComponent;\n+\n+    /**\n+     * Construct the SwingWorker.\n+     *\n+     * @param artifact              The artifact to search account for.\n+     * @param personaSearchDataList List of PersonaSerarcherData objects.\n+     * @param parentComponent       The parent panel.\n+     */\n+    PersonaAccountFetcher(BlackboardArtifact artifact, List<AccountPersonaSearcherData> personaSearchDataList, Component parentComponent) {\n+        this.artifact = artifact;\n+        this.personaSearchDataList = personaSearchDataList;\n+        this.parentComponent = parentComponent;\n+    }\n \n-            Collection<Persona> personas = new ArrayList<>();\n+    @Override\n+    protected Map<String, Collection<Persona>> doInBackground() throws Exception {\n+        Map<String, Collection<Persona>> accountMap = new HashMap<>();\n \n-            if (CentralRepository.isEnabled()) {\n-                Collection<CentralRepoAccount> accountCandidates\n-                        = CentralRepoAccount.getAccountsWithIdentifier(personaSearcherData.getAccountIdentifer());\n+        CommunicationsManager commManager = Case.getCurrentCase().getSleuthkitCase().getCommunicationsManager();\n \n-                if (accountCandidates.isEmpty() == false) {\n-                    CentralRepoAccount account = accountCandidates.iterator().next();\n+        List<Account> relatedAccountList = commManager.getAccountsRelatedToArtifact(artifact);\n \n-                    // get personas for the account\n-                    Collection<PersonaAccount> personaAccountsList = PersonaAccount.getPersonaAccountsForAccount(account.getId());\n-                    personas = personaAccountsList.stream().map(PersonaAccount::getPersona)\n-                            .collect(Collectors.toList());\n-                }\n+        for (Account account : relatedAccountList) {\n+\n+            if (isCancelled()) {\n+                return new HashMap<>();\n             }\n-            return personas;\n+\n+            Collection<PersonaAccount> personaAccountList = PersonaAccount.getPersonaAccountsForAccount(account);\n+            Collection<Persona> personaList = new ArrayList<>();\n+            for (PersonaAccount pAccount : personaAccountList) {\n+                personaList.add(pAccount.getPersona());\n+            }\n+\n+            accountMap.put(account.getTypeSpecificID(), personaList);\n         }\n \n-        @Override\n-        protected void done() {\n-            Collection<Persona> personas;\n-            try {\n-                personas = super.get();\n+        return accountMap;\n+    }\n \n-                if (this.isCancelled()) {\n-                    return;\n-                }\n+    @Override\n+    protected void done() {\n+        if (isCancelled()) {\n+            return;\n+        }\n \n-                //Update the Persona label and button based on the search result\n-                String personaLabelText = Bundle.CommunicationArtifactViewerHelper_persona_label();\n-                String personaButtonText;\n-                ActionListener buttonActionListener;\n-\n-                if (personas.isEmpty()) {\n-                    // No persona found\n-                    personaLabelText += Bundle.CommunicationArtifactViewerHelper_persona_unknown();\n-\n-                    // show a 'Create' button\n-                    personaButtonText = Bundle.CommunicationArtifactViewerHelper_persona_button_create();\n-                    buttonActionListener = new CreatePersonaButtonListener(parentComponent, personaSearcherData);\n-                } else {\n-                    Persona persona = personas.iterator().next();\n-                    personaLabelText += persona.getName();\n-                    if (personas.size() > 1) {\n-                        personaLabelText += Bundle.PersonaDisplayTask_persona_count_suffix(Integer.toString(personas.size()));\n-                    }\n-                    // Show a 'View' button\n-                    personaButtonText = Bundle.CommunicationArtifactViewerHelper_persona_button_view();\n-                    buttonActionListener = new ViewPersonaButtonListener(parentComponent, persona);\n-                }\n+        try {\n+            Map<String, Collection<Persona>> accountMap = get();\n \n-                personaSearcherData.getPersonaNameLabel().setText(personaLabelText);\n-                personaSearcherData.getPersonaActionButton().setText(personaButtonText);\n-                personaSearcherData.getPersonaActionButton().setEnabled(true);\n-\n-                // set button action\n-                personaSearcherData.getPersonaActionButton().addActionListener(buttonActionListener);\n-            } catch (CancellationException ex) {\n-                logger.log(Level.INFO, \"Persona searching was canceled.\"); //NON-NLS\n-            } catch (InterruptedException ex) {\n-                logger.log(Level.INFO, \"Persona searching was interrupted.\"); //NON-NLS\n-            } catch (ExecutionException ex) {\n-                logger.log(Level.SEVERE, \"Fatal error during Persona search.\", ex); //NON-NLS\n+            for (AccountPersonaSearcherData searcherData : personaSearchDataList) {\n+                Collection<Persona> persona = accountMap.get(searcherData.getAccountIdentifer());\n+                updateDataObject(searcherData, persona);\n             }\n \n+        } catch (CancellationException ex) {\n+            logger.log(Level.INFO, \"Persona searching was canceled.\"); //NON-NLS\n+        } catch (InterruptedException ex) {\n+            logger.log(Level.INFO, \"Persona searching was interrupted.\"); //NON-NLS\n+        } catch (ExecutionException ex) {\n+            logger.log(Level.SEVERE, \"Fatal error during Persona search.\", ex); //NON-NLS\n         }\n-        \n+\n+        parentComponent.repaint();\n+    }\n+\n+    /**\n+     * Update the Persona gui controls.\n+     *\n+     * @param personaSearcherData The data objects with persona controls\n+     * @param personas            Collection of persona objects\n+     */\n+    private void updateDataObject(AccountPersonaSearcherData personaSearcherData, Collection<Persona> personas) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9eb09e6370383c3ffb141b452ca72e88d9d22c2"}, "originalPosition": 192}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52ee90133220501e9e58b76c61a32d12fa93e52a", "author": {"user": {"login": "kellykelly3", "name": null}}, "url": "https://github.com/sleuthkit/autopsy/commit/52ee90133220501e9e58b76c61a32d12fa93e52a", "committedDate": "2020-06-19T18:39:05Z", "message": "Fixed based on review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0Mjg3MzM0", "url": "https://github.com/sleuthkit/autopsy/pull/5990#pullrequestreview-434287334", "createdAt": "2020-06-19T19:03:05Z", "commit": {"oid": "52ee90133220501e9e58b76c61a32d12fa93e52a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2641, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}