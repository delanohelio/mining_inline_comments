{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMzU1MDUy", "number": 6152, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzo1NzoyNVrOEVAtQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozMDozMlrOEV1EuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDY3MTM5OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/modules/photoreccarver/PhotoRecCarverIngestJobSettings.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzo1NzoyNVrOG7hlHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDoyNzowNVrOG7i-ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA2OTM0MQ==", "bodyText": "Does this need to be public? Or any of the other new public methods in this file?", "url": "https://github.com/sleuthkit/autopsy/pull/6152#discussion_r465069341", "createdAt": "2020-08-04T13:57:25Z", "author": {"login": "APriestman"}, "path": "Core/src/org/sleuthkit/autopsy/modules/photoreccarver/PhotoRecCarverIngestJobSettings.java", "diffHunk": "@@ -18,53 +18,146 @@\n  */\n package org.sleuthkit.autopsy.modules.photoreccarver;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n import org.sleuthkit.autopsy.ingest.IngestModuleIngestJobSettings;\n+import java.util.List;\n \n /**\n  * Ingest job settings for the PhotoRec Carver module.\n  */\n final class PhotoRecCarverIngestJobSettings implements IngestModuleIngestJobSettings {\n \n     private static final long serialVersionUID = 1L;\n-    \n+\n     private boolean keepCorruptedFiles;\n-    \n+    private List<String> includeExcludeExtensions;\n+    private boolean fileOptOption;\n+    private boolean includeElseExclude;\n+\n     /**\n      * Instantiate the ingest job settings with default values.\n      */\n     PhotoRecCarverIngestJobSettings() {\n-        this.keepCorruptedFiles = PhotoRecCarverFileIngestModule.DEFAULT_CONFIG_KEEP_CORRUPTED_FILES;\n+        this(PhotoRecCarverFileIngestModule.DEFAULT_CONFIG_KEEP_CORRUPTED_FILES,\n+                PhotoRecCarverFileIngestModule.DEFAULT_CONFIG_FILE_OPT_OPTIONS,\n+                PhotoRecCarverFileIngestModule.DEFAULT_CONFIG_INCLUDE_ELSE_EXCLUDE,\n+                null);\n     }\n-    \n+\n     /**\n-     * Instantiate the ingest job settings.\n+     * Sets the photo rec settings.\n      *\n-     * @param keepCorruptedFiles Keep corrupted files.\n+     * @param keepCorruptedFiles       Whether or not to keep corrupted files.\n+     * @param fileOptOption            Whether or not the file opt options\n+     *                                 should be enabled (whether or not to\n+     *                                 include/exclude file extensions).\n+     * @param includeElseExclude       If file opt options is enabled, whether\n+     *                                 to include only the extensions listed or\n+     *                                 exclude extensions from output.\n+     * @param includeExcludeExtensions The extensions to include or exclude\n+     *                                 (i.e. jpg, gif)\n      */\n-    PhotoRecCarverIngestJobSettings(boolean keepCorruptedFiles) {\n+    public PhotoRecCarverIngestJobSettings(boolean keepCorruptedFiles, boolean fileOptOption, boolean includeElseExclude, List<String> includeExcludeExtensions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3183c8800e7946957cda31ef117c73714e41c644"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5MjIxOQ==", "bodyText": "Ok.  I just pushed up a fix to make them package private.", "url": "https://github.com/sleuthkit/autopsy/pull/6152#discussion_r465092219", "createdAt": "2020-08-04T14:27:05Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/modules/photoreccarver/PhotoRecCarverIngestJobSettings.java", "diffHunk": "@@ -18,53 +18,146 @@\n  */\n package org.sleuthkit.autopsy.modules.photoreccarver;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n import org.sleuthkit.autopsy.ingest.IngestModuleIngestJobSettings;\n+import java.util.List;\n \n /**\n  * Ingest job settings for the PhotoRec Carver module.\n  */\n final class PhotoRecCarverIngestJobSettings implements IngestModuleIngestJobSettings {\n \n     private static final long serialVersionUID = 1L;\n-    \n+\n     private boolean keepCorruptedFiles;\n-    \n+    private List<String> includeExcludeExtensions;\n+    private boolean fileOptOption;\n+    private boolean includeElseExclude;\n+\n     /**\n      * Instantiate the ingest job settings with default values.\n      */\n     PhotoRecCarverIngestJobSettings() {\n-        this.keepCorruptedFiles = PhotoRecCarverFileIngestModule.DEFAULT_CONFIG_KEEP_CORRUPTED_FILES;\n+        this(PhotoRecCarverFileIngestModule.DEFAULT_CONFIG_KEEP_CORRUPTED_FILES,\n+                PhotoRecCarverFileIngestModule.DEFAULT_CONFIG_FILE_OPT_OPTIONS,\n+                PhotoRecCarverFileIngestModule.DEFAULT_CONFIG_INCLUDE_ELSE_EXCLUDE,\n+                null);\n     }\n-    \n+\n     /**\n-     * Instantiate the ingest job settings.\n+     * Sets the photo rec settings.\n      *\n-     * @param keepCorruptedFiles Keep corrupted files.\n+     * @param keepCorruptedFiles       Whether or not to keep corrupted files.\n+     * @param fileOptOption            Whether or not the file opt options\n+     *                                 should be enabled (whether or not to\n+     *                                 include/exclude file extensions).\n+     * @param includeElseExclude       If file opt options is enabled, whether\n+     *                                 to include only the extensions listed or\n+     *                                 exclude extensions from output.\n+     * @param includeExcludeExtensions The extensions to include or exclude\n+     *                                 (i.e. jpg, gif)\n      */\n-    PhotoRecCarverIngestJobSettings(boolean keepCorruptedFiles) {\n+    public PhotoRecCarverIngestJobSettings(boolean keepCorruptedFiles, boolean fileOptOption, boolean includeElseExclude, List<String> includeExcludeExtensions) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA2OTM0MQ=="}, "originalCommit": {"oid": "3183c8800e7946957cda31ef117c73714e41c644"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzI1MTEyOnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/modules/photoreccarver/PhotoRecCarverIngestJobSettingsPanel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzozMDozMlrOG8zmtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDoxNzozN1rOG81mTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMzIzNw==", "bodyText": "Typo - hyperlink", "url": "https://github.com/sleuthkit/autopsy/pull/6152#discussion_r466413237", "createdAt": "2020-08-06T13:30:32Z", "author": {"login": "APriestman"}, "path": "Core/src/org/sleuthkit/autopsy/modules/photoreccarver/PhotoRecCarverIngestJobSettingsPanel.java", "diffHunk": "@@ -43,13 +62,91 @@ public PhotoRecCarverIngestJobSettingsPanel(PhotoRecCarverIngestJobSettings sett\n      * @param settings The ingest job settings.\n      */\n     private void customizeComponents(PhotoRecCarverIngestJobSettings settings) {\n+        includeExcludeCheckbox.setSelected(settings.hasFileOptOption());\n+        extensionListTextfield.setText(String.join(EXTENSION_LIST_SEPARATOR, settings.getIncludeExcludeExtensions()));\n+        includeRadioButton.setSelected(!settings.isIncludeElseExclude());\n+        excludeRadioButton.setSelected(!settings.isIncludeElseExclude());\n         keepCorruptedFilesCheckbox.setSelected(settings.isKeepCorruptedFiles());\n+        setupTypesHyperlink();\n+        setIncludePanelEnabled();\n+    }\n+\n+    /**\n+     * Sets up a clickable hyperlink for the different supported types for\n+     * extensions.\n+     */\n+    private void setupTypesHyperlink() {\n+        // taken from https://www.codejava.net/java-se/swing/how-to-create-hyperlink-with-jlabel-in-java-swing\n+        this.fullListOfTypesHyperlink.setForeground(Color.BLUE.darker());\n+        this.fullListOfTypesHyperlink.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n+        this.fullListOfTypesHyperlink.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent e) {\n+                try {\n+                    Desktop.getDesktop().browse(new URI(PHOTOREC_TYPES_URL));\n+                } catch (IOException | URISyntaxException ex) {\n+                    logger.log(Level.WARNING, \"There was an error going to types huperlink: \" + PHOTOREC_TYPES_URL, ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b039b9e9e7c4718412c200b985a740ebb57339f0"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ0NTkwMQ==", "bodyText": "Ok.  I think this is done now.", "url": "https://github.com/sleuthkit/autopsy/pull/6152#discussion_r466445901", "createdAt": "2020-08-06T14:17:37Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/modules/photoreccarver/PhotoRecCarverIngestJobSettingsPanel.java", "diffHunk": "@@ -43,13 +62,91 @@ public PhotoRecCarverIngestJobSettingsPanel(PhotoRecCarverIngestJobSettings sett\n      * @param settings The ingest job settings.\n      */\n     private void customizeComponents(PhotoRecCarverIngestJobSettings settings) {\n+        includeExcludeCheckbox.setSelected(settings.hasFileOptOption());\n+        extensionListTextfield.setText(String.join(EXTENSION_LIST_SEPARATOR, settings.getIncludeExcludeExtensions()));\n+        includeRadioButton.setSelected(!settings.isIncludeElseExclude());\n+        excludeRadioButton.setSelected(!settings.isIncludeElseExclude());\n         keepCorruptedFilesCheckbox.setSelected(settings.isKeepCorruptedFiles());\n+        setupTypesHyperlink();\n+        setIncludePanelEnabled();\n+    }\n+\n+    /**\n+     * Sets up a clickable hyperlink for the different supported types for\n+     * extensions.\n+     */\n+    private void setupTypesHyperlink() {\n+        // taken from https://www.codejava.net/java-se/swing/how-to-create-hyperlink-with-jlabel-in-java-swing\n+        this.fullListOfTypesHyperlink.setForeground(Color.BLUE.darker());\n+        this.fullListOfTypesHyperlink.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));\n+        this.fullListOfTypesHyperlink.addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseClicked(MouseEvent e) {\n+                try {\n+                    Desktop.getDesktop().browse(new URI(PHOTOREC_TYPES_URL));\n+                } catch (IOException | URISyntaxException ex) {\n+                    logger.log(Level.WARNING, \"There was an error going to types huperlink: \" + PHOTOREC_TYPES_URL, ex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQxMzIzNw=="}, "originalCommit": {"oid": "b039b9e9e7c4718412c200b985a740ebb57339f0"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 930, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}