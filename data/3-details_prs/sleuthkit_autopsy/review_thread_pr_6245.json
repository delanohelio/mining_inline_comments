{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMzUxMDg0", "number": 6245, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODowMTozMlrOEhyyzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODowMTozMlrOEhyyzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODcwNjY4OnYy", "diffSide": "RIGHT", "path": "Core/src/org/sleuthkit/autopsy/datasourcesummary/datamodel/DataSourceAnalysisSummary.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODowMTozMlrOHPTrUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxODowNzoyM1rOHPT3lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMzA3Mw==", "bodyText": "Remove path? (There are several of these)", "url": "https://github.com/sleuthkit/autopsy/pull/6245#discussion_r485813073", "createdAt": "2020-09-09T18:01:32Z", "author": {"login": "APriestman"}, "path": "Core/src/org/sleuthkit/autopsy/datasourcesummary/datamodel/DataSourceAnalysisSummary.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Autopsy Forensic Browser\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.datasourcesummary.datamodel;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.sleuthkit.autopsy.datasourcesummary.datamodel.SleuthkitCaseProvider.SleuthkitCaseProviderException;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE;\n+import org.sleuthkit.datamodel.BlackboardAttribute;\n+import org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE;\n+import org.sleuthkit.datamodel.DataSource;\n+import org.sleuthkit.datamodel.SleuthkitCase;\n+import org.sleuthkit.datamodel.TskCoreException;\n+\n+/**\n+ * Providing data for the data source analysis tab.\n+ */\n+public class DataSourceAnalysisSummary {\n+\n+    private static final BlackboardAttribute.Type TYPE_SET_NAME = new BlackboardAttribute.Type(ATTRIBUTE_TYPE.TSK_SET_NAME);\n+\n+    private static final Set<String> EXCLUDED_KEYWORD_SEARCH_ITEMS = new HashSet<>(Arrays.asList(\n+            \"PHONE NUMBERS\",\n+            \"IP ADDRESSES\",\n+            \"EMAIL ADDRESSES\",\n+            \"URLS\",\n+            \"CREDIT CARD NUMBERS\"\n+    ));\n+\n+    private final SleuthkitCaseProvider provider;\n+\n+    /**\n+     * Main constructor.\n+     */\n+    public DataSourceAnalysisSummary() {\n+        this(SleuthkitCaseProvider.DEFAULT);\n+    }\n+\n+    /**\n+     * Main constructor.\n+     *\n+     * @param provider The means of obtaining a sleuthkit case.\n+     */\n+    public DataSourceAnalysisSummary(SleuthkitCaseProvider provider) {\n+        this.provider = provider;\n+    }\n+\n+    /**\n+     * Gets counts for hashset hits.\n+     *\n+     * @param dataSource The datasource for which to identify hashset hits.\n+     *\n+     * @return The hashset set name with the number of hits in descending order.\n+     *\n+     * @throws\n+     * org.sleuthkit.autopsy.datasourcesummary.datamodel.SleuthkitCaseProvider.SleuthkitCaseProviderException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91613720c360b83e07ae939b839b06584c4911c1"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxNjIxMg==", "bodyText": "Sure.  So just @throws SleuthkitCaseProviderException?", "url": "https://github.com/sleuthkit/autopsy/pull/6245#discussion_r485816212", "createdAt": "2020-09-09T18:07:23Z", "author": {"login": "gdicristofaro"}, "path": "Core/src/org/sleuthkit/autopsy/datasourcesummary/datamodel/DataSourceAnalysisSummary.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Autopsy Forensic Browser\n+ *\n+ * Copyright 2020 Basis Technology Corp.\n+ * Contact: carrier <at> sleuthkit <dot> org\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.sleuthkit.autopsy.datasourcesummary.datamodel;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.tuple.Pair;\n+import org.sleuthkit.autopsy.datasourcesummary.datamodel.SleuthkitCaseProvider.SleuthkitCaseProviderException;\n+import org.sleuthkit.datamodel.BlackboardArtifact;\n+import org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE;\n+import org.sleuthkit.datamodel.BlackboardAttribute;\n+import org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE;\n+import org.sleuthkit.datamodel.DataSource;\n+import org.sleuthkit.datamodel.SleuthkitCase;\n+import org.sleuthkit.datamodel.TskCoreException;\n+\n+/**\n+ * Providing data for the data source analysis tab.\n+ */\n+public class DataSourceAnalysisSummary {\n+\n+    private static final BlackboardAttribute.Type TYPE_SET_NAME = new BlackboardAttribute.Type(ATTRIBUTE_TYPE.TSK_SET_NAME);\n+\n+    private static final Set<String> EXCLUDED_KEYWORD_SEARCH_ITEMS = new HashSet<>(Arrays.asList(\n+            \"PHONE NUMBERS\",\n+            \"IP ADDRESSES\",\n+            \"EMAIL ADDRESSES\",\n+            \"URLS\",\n+            \"CREDIT CARD NUMBERS\"\n+    ));\n+\n+    private final SleuthkitCaseProvider provider;\n+\n+    /**\n+     * Main constructor.\n+     */\n+    public DataSourceAnalysisSummary() {\n+        this(SleuthkitCaseProvider.DEFAULT);\n+    }\n+\n+    /**\n+     * Main constructor.\n+     *\n+     * @param provider The means of obtaining a sleuthkit case.\n+     */\n+    public DataSourceAnalysisSummary(SleuthkitCaseProvider provider) {\n+        this.provider = provider;\n+    }\n+\n+    /**\n+     * Gets counts for hashset hits.\n+     *\n+     * @param dataSource The datasource for which to identify hashset hits.\n+     *\n+     * @return The hashset set name with the number of hits in descending order.\n+     *\n+     * @throws\n+     * org.sleuthkit.autopsy.datasourcesummary.datamodel.SleuthkitCaseProvider.SleuthkitCaseProviderException", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgxMzA3Mw=="}, "originalCommit": {"oid": "91613720c360b83e07ae939b839b06584c4911c1"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 886, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}