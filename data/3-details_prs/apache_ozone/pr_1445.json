{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMTc0Nzc1", "number": 1445, "title": "HDDS-4272. Volume namespace: add usedNamespace and update it when create and delete bucket", "bodyText": "What changes were proposed in this pull request?\nVolume namespace: add usedNamespace and update it when create and delete bucket\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-4272\nHow was this patch tested?\nUnit Test", "createdAt": "2020-09-24T04:28:34Z", "url": "https://github.com/apache/ozone/pull/1445", "merged": true, "mergeCommit": {"oid": "1f5a965d7d295cd4182e71a61d7dc619c9a22200"}, "closed": true, "closedAt": "2020-12-14T04:35:07Z", "author": {"login": "amaliujia"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdL-HLAgFqTQ5NTI4ODg4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdl9CQ_gFqTU1MTAxODgxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Mjg4ODgy", "url": "https://github.com/apache/ozone/pull/1445#pullrequestreview-495288882", "createdAt": "2020-09-24T07:27:27Z", "commit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNzoyNzoyN1rOHXNNFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTozMzo0NVrOHXSAFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA5NTYzNg==", "bodyText": "How about we update the comment of this constructor by add @param usedNamespace - volume quota usage in counts\nThe description of the parameter is IMHO, feel free to correct it if you have an idea.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r494095636", "createdAt": "2020-09-24T07:27:27Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/helpers/OmVolumeArgs.java", "diffHunk": "@@ -68,15 +69,16 @@\n       \"builder.\"})\n   private OmVolumeArgs(String adminName, String ownerName, String volume,\n       long quotaInBytes, long quotaInCounts, Map<String, String> metadata,\n-      long usedBytes, OmOzoneAclMap aclMap, long creationTime,\n-      long modificationTime, long objectID, long updateID) {\n+      long usedBytes, long usedNamespace, OmOzoneAclMap aclMap,\n+      long creationTime, long modificationTime, long objectID, long updateID) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA5OTI2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  omClientResponse = new OMBucketCreateResponse(omResponse.build(),\n          \n          \n            \n                      omBucketInfo);\n          \n          \n            \n                          omBucketInfo, omVolumeArgs);\n          \n          \n            \n                  omClientResponse = new OMBucketCreateResponse(omResponse.build(),\n          \n          \n            \n                      omBucketInfo, omVolumeArgs);\n          \n      \n    \n    \n  \n\nIt's my nit : could we use less indent here to keep consistent with this file", "url": "https://github.com/apache/ozone/pull/1445#discussion_r494099269", "createdAt": "2020-09-24T07:33:48Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -209,7 +211,7 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       omResponse.setCreateBucketResponse(\n           CreateBucketResponse.newBuilder().build());\n       omClientResponse = new OMBucketCreateResponse(omResponse.build(),\n-          omBucketInfo);\n+              omBucketInfo, omVolumeArgs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2MTAwMg==", "bodyText": "Seems we don't use this variable,\nCould you be so kind as to let me know its usage if I miss something.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r494161002", "createdAt": "2020-09-24T09:12:06Z", "author": {"login": "cxorm"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/OzoneConsts.java", "diffHunk": "@@ -270,6 +270,7 @@ private OzoneConsts() {\n   public static final String SRC_KEY = \"srcKey\";\n   public static final String DST_KEY = \"dstKey\";\n   public static final String USED_BYTES = \"usedBytes\";\n+  public static final String USED_NAMESPACE = \"usedNamespace\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE2MjI4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          omMetadataManager.getVolumeKey(omVolumeArgs.getVolume()),\n          \n          \n            \n                          omVolumeArgs);\n          \n          \n            \n                      omMetadataManager.getVolumeKey(omVolumeArgs.getVolume()),\n          \n          \n            \n                      omVolumeArgs);\n          \n      \n    \n    \n  \n\nJust nits.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r494162287", "createdAt": "2020-09-24T09:14:16Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/bucket/OMBucketCreateResponse.java", "diffHunk": "@@ -66,6 +77,12 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n             omBucketInfo.getBucketName());\n     omMetadataManager.getBucketTable().putWithBatch(batchOperation,\n         dbBucketKey, omBucketInfo);\n+    // update volume usedNamespace\n+    if (omVolumeArgs != null) {\n+      omMetadataManager.getVolumeTable().putWithBatch(batchOperation,\n+              omMetadataManager.getVolumeKey(omVolumeArgs.getVolume()),\n+              omVolumeArgs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3MTM2Mw==", "bodyText": "How about we update it this to add quota of used namespace or the same as update used namespace for volume in OMBucketDeleteRequest  ?", "url": "https://github.com/apache/ozone/pull/1445#discussion_r494171363", "createdAt": "2020-09-24T09:29:04Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -201,6 +201,8 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       // Add default acls from volume.\n       addDefaultAcls(omBucketInfo, omVolumeArgs);\n \n+      // quotaAdd used namespace", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE3NDIzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  // update used namespace for volumn\n          \n          \n            \n                  // update used namespace for volume", "url": "https://github.com/apache/ozone/pull/1445#discussion_r494174230", "createdAt": "2020-09-24T09:33:45Z", "author": {"login": "cxorm"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketDeleteRequest.java", "diffHunk": "@@ -134,6 +135,12 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       omResponse.setDeleteBucketResponse(\n           DeleteBucketResponse.newBuilder().build());\n \n+      // update used namespace for volumn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTQzOTMx", "url": "https://github.com/apache/ozone/pull/1445#pullrequestreview-495543931", "createdAt": "2020-09-24T13:00:38Z", "commit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzowMDozOVrOHXZfug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzowMDozOVrOHXZfug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI5NzAxOA==", "bodyText": "indent", "url": "https://github.com/apache/ozone/pull/1445#discussion_r494297018", "createdAt": "2020-09-24T13:00:39Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/response/bucket/OMBucketDeleteResponse.java", "diffHunk": "@@ -64,6 +76,12 @@ public void addToDBBatch(OMMetadataManager omMetadataManager,\n         omMetadataManager.getBucketKey(volumeName, bucketName);\n     omMetadataManager.getBucketTable().deleteWithBatch(batchOperation,\n         dbBucketKey);\n+    // update volume usedNamespace\n+    if (omVolumeArgs != null) {\n+      omMetadataManager.getVolumeTable().putWithBatch(batchOperation,\n+              omMetadataManager.getVolumeKey(omVolumeArgs.getVolume()),\n+              omVolumeArgs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964463dfcb39a29e90639ae7300f992d7b2c6513"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDMxMzY5", "url": "https://github.com/apache/ozone/pull/1445#pullrequestreview-496431369", "createdAt": "2020-09-25T13:43:39Z", "commit": {"oid": "f152a2ad44f612bee960dde79ad268701023a2fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/f28ad7892f97a1f1d04c443b05340c5721d25c48", "committedDate": "2020-12-11T04:44:01Z", "message": "HDDS-4272. Volume namespace: add usedNamesapce and update it when create and delete bucket"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6be668bc9853e6c617ecedeef359d6364eba9c7", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/a6be668bc9853e6c617ecedeef359d6364eba9c7", "committedDate": "2020-10-15T06:47:19Z", "message": "fixup! add UT to test link bucket case"}, "afterCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/f28ad7892f97a1f1d04c443b05340c5721d25c48", "committedDate": "2020-12-11T04:44:01Z", "message": "HDDS-4272. Volume namespace: add usedNamesapce and update it when create and delete bucket"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5ODQxMTI4", "url": "https://github.com/apache/ozone/pull/1445#pullrequestreview-549841128", "createdAt": "2020-12-11T06:55:00Z", "commit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNjo1NTowMFrOIDriSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNjo1NTozNFrOIDri9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDcyOTkyOA==", "bodyText": "indent", "url": "https://github.com/apache/ozone/pull/1445#discussion_r540729928", "createdAt": "2020-12-11T06:55:00Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketDeleteRequest.java", "diffHunk": "@@ -134,9 +135,15 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       omResponse.setDeleteBucketResponse(\n           DeleteBucketResponse.newBuilder().build());\n \n+      // update used namespace for volume\n+      String volumeKey = omMetadataManager.getVolumeKey(volumeName);\n+      OmVolumeArgs omVolumeArgs =\n+              omMetadataManager.getVolumeTable().getReadCopy(volumeKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDczMDEwMw==", "bodyText": "indent", "url": "https://github.com/apache/ozone/pull/1445#discussion_r540730103", "createdAt": "2020-12-11T06:55:34Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -885,6 +885,42 @@ public void testCheckUsedBytesQuota() throws IOException {\n     Assert.assertEquals(3, countException);\n   }\n \n+  @Test\n+  public void testVolumnUsedNamespace() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    OzoneVolume volume = null;\n+\n+    store.createVolume(volumeName);\n+    volume = store.getVolume(volumeName);\n+    // The initial value should be 0\n+    Assert.assertEquals(0L, volume.getUsedNamespace());\n+    volume.createBucket(bucketName);\n+    // Used namespace should be 1\n+    volume = store.getVolume(volumeName);\n+    Assert.assertEquals(1L, volume.getUsedNamespace());\n+\n+    // test linked bucket\n+    String targetVolName = UUID.randomUUID().toString();\n+    store.createVolume(targetVolName);\n+    OzoneVolume volumeWithLinkedBucket = store.getVolume(targetVolName);\n+    String targetBucketName = UUID.randomUUID().toString();\n+    BucketArgs.Builder argsBuilder = new BucketArgs.Builder()\n+            .setStorageType(StorageType.DEFAULT)\n+            .setVersioning(false)\n+            .setSourceVolume(volumeName)\n+            .setSourceBucket(bucketName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjE0MDI5", "url": "https://github.com/apache/ozone/pull/1445#pullrequestreview-550214029", "createdAt": "2020-12-11T15:45:41Z", "commit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNTo0NTo0MVrOID-gDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjowMDowOFrOID_Hvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA0MDY1Mg==", "bodyText": "As I see we defined usedBytes corresponding to quotaInBytes, so quotaInCounts  expected to be  quotaInNamespace. This is just my first feeling for this variable name. We could revisit these later in a separate JIRA to make this more understandable.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r541040652", "createdAt": "2020-12-11T15:45:41Z", "author": {"login": "linyiqun"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/ozone/OzoneConsts.java", "diffHunk": "@@ -270,6 +270,7 @@ private OzoneConsts() {\n   public static final String SRC_KEY = \"srcKey\";\n   public static final String DST_KEY = \"dstKey\";\n   public static final String USED_BYTES = \"usedBytes\";\n+  public static final String USED_NAMESPACE = \"usedNamespace\";\n   public static final String QUOTA_IN_BYTES = \"quotaInBytes\";\n   public static final String QUOTA_IN_COUNTS = \"quotaInCounts\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA0MzYzNQ==", "bodyText": "Not fully get this point, why this bucket create way will not increased the namespace quota? Just curious for this.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r541043635", "createdAt": "2020-12-11T15:50:00Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -885,6 +885,42 @@ public void testCheckUsedBytesQuota() throws IOException {\n     Assert.assertEquals(3, countException);\n   }\n \n+  @Test\n+  public void testVolumnUsedNamespace() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    OzoneVolume volume = null;\n+\n+    store.createVolume(volumeName);\n+    volume = store.getVolume(volumeName);\n+    // The initial value should be 0\n+    Assert.assertEquals(0L, volume.getUsedNamespace());\n+    volume.createBucket(bucketName);\n+    // Used namespace should be 1\n+    volume = store.getVolume(volumeName);\n+    Assert.assertEquals(1L, volume.getUsedNamespace());\n+\n+    // test linked bucket\n+    String targetVolName = UUID.randomUUID().toString();\n+    store.createVolume(targetVolName);\n+    OzoneVolume volumeWithLinkedBucket = store.getVolume(targetVolName);\n+    String targetBucketName = UUID.randomUUID().toString();\n+    BucketArgs.Builder argsBuilder = new BucketArgs.Builder()\n+            .setStorageType(StorageType.DEFAULT)\n+            .setVersioning(false)\n+            .setSourceVolume(volumeName)\n+            .setSourceBucket(bucketName);\n+    volumeWithLinkedBucket.createBucket(targetBucketName, argsBuilder.build());\n+    // Used namespace should be 0 because linked bucket does not consume\n+    // namespace quota\n+    Assert.assertEquals(0L, volumeWithLinkedBucket.getUsedNamespace());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA0NDc0MQ==", "bodyText": "Can you add an empty check for omVolumeArgs before updating the namespace used?\n    if (volumeArgs == null) {\n      throw new OMException(\"Volume \" + volume + \" is not found\",\n          OMException.ResultCodes.VOLUME_NOT_FOUND);\n    }", "url": "https://github.com/apache/ozone/pull/1445#discussion_r541044741", "createdAt": "2020-12-11T15:51:31Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketDeleteRequest.java", "diffHunk": "@@ -134,9 +135,15 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       omResponse.setDeleteBucketResponse(\n           DeleteBucketResponse.newBuilder().build());\n \n+      // update used namespace for volume\n+      String volumeKey = omMetadataManager.getVolumeKey(volumeName);\n+      OmVolumeArgs omVolumeArgs =\n+              omMetadataManager.getVolumeTable().getReadCopy(volumeKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA0Nzc4NQ==", "bodyText": "We should also update the volume table cache like above, as omVolumeArgs be updated.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r541047785", "createdAt": "2020-12-11T15:55:59Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -205,14 +205,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       // Add default acls from volume.\n       addDefaultAcls(omBucketInfo, omVolumeArgs);\n \n+      // update used namespace for volume\n+      omVolumeArgs.incrUsedNamespace(1L);\n+\n       // Update table cache.\n       metadataManager.getBucketTable().addCacheEntry(new CacheKey<>(bucketKey),\n           new CacheValue<>(Optional.of(omBucketInfo), transactionLogIndex));\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA0ODM2OA==", "bodyText": "Volume  table cache also need to be updated here as we update table cache in OMBucketCreateRequest.java", "url": "https://github.com/apache/ozone/pull/1445#discussion_r541048368", "createdAt": "2020-12-11T15:56:42Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketDeleteRequest.java", "diffHunk": "@@ -134,9 +135,15 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       omResponse.setDeleteBucketResponse(\n           DeleteBucketResponse.newBuilder().build());\n \n+      // update used namespace for volume\n+      String volumeKey = omMetadataManager.getVolumeKey(volumeName);\n+      OmVolumeArgs omVolumeArgs =\n+              omMetadataManager.getVolumeTable().getReadCopy(volumeKey);\n+      omVolumeArgs.incrUsedNamespace(-1L);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA1MDgxNQ==", "bodyText": "Before this update, we need to do the namespace quota check in checkQuotaBytesValid.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r541050815", "createdAt": "2020-12-11T16:00:08Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -205,14 +205,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       // Add default acls from volume.\n       addDefaultAcls(omBucketInfo, omVolumeArgs);\n \n+      // update used namespace for volume\n+      omVolumeArgs.incrUsedNamespace(1L);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28ad7892f97a1f1d04c443b05340c5721d25c48"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "505bf7b840090cba7127b4db6506dbb85a22bddd", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/505bf7b840090cba7127b4db6506dbb85a22bddd", "committedDate": "2020-12-11T21:56:00Z", "message": "fixup! comments addressed."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNjg4NzA4", "url": "https://github.com/apache/ozone/pull/1445#pullrequestreview-550688708", "createdAt": "2020-12-12T04:21:18Z", "commit": {"oid": "505bf7b840090cba7127b4db6506dbb85a22bddd"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNDoyMToxOFrOIEaWlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwNDoyMjo0N1rOIEaXjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ5Njk4MA==", "bodyText": "Can you use omVolumeArgs.getQuotaInCounts() != OzoneConsts.QUOTA_RESET to replace above condition check? That will be the better check in case maybe OzoneConsts.QUOTA_RESET value can be changed to the positive number.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r541496980", "createdAt": "2020-12-12T04:21:18Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -301,6 +309,25 @@ private BucketEncryptionInfoProto getBeinfo(\n     return bekb.build();\n   }\n \n+  /**\n+   * Check namespace quota.\n+   */\n+  private void checkQuotaInNamespace(OmVolumeArgs omVolumeArgs,\n+      long allocatedNamespace) throws IOException {\n+    if (omVolumeArgs.getQuotaInCounts() > OzoneConsts.QUOTA_RESET) {\n+      long usedNamespace = omVolumeArgs.getUsedNamespace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505bf7b840090cba7127b4db6506dbb85a22bddd"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ5NzIyOQ==", "bodyText": "We could directly use volumeKey, don't need to invoke omMetadataManager.getVolumeKey again.", "url": "https://github.com/apache/ozone/pull/1445#discussion_r541497229", "createdAt": "2020-12-12T04:22:47Z", "author": {"login": "linyiqun"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketDeleteRequest.java", "diffHunk": "@@ -134,9 +135,23 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n       omResponse.setDeleteBucketResponse(\n           DeleteBucketResponse.newBuilder().build());\n \n+      // update used namespace for volume\n+      String volumeKey = omMetadataManager.getVolumeKey(volumeName);\n+      OmVolumeArgs omVolumeArgs =\n+          omMetadataManager.getVolumeTable().getReadCopy(volumeKey);\n+      if (omVolumeArgs == null) {\n+        throw new OMException(\"Volume \" + volumeName + \" is not found\",\n+            OMException.ResultCodes.VOLUME_NOT_FOUND);\n+      }\n+      omVolumeArgs.incrUsedNamespace(-1L);\n+      // Update table cache.\n+      omMetadataManager.getVolumeTable().addCacheEntry(\n+          new CacheKey<>(omMetadataManager.getVolumeKey(volumeName)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "505bf7b840090cba7127b4db6506dbb85a22bddd"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdfe3ba9a2307ca4c8c6b9d65576bc0e1feedabb", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/cdfe3ba9a2307ca4c8c6b9d65576bc0e1feedabb", "committedDate": "2020-12-12T07:29:21Z", "message": "fjxup! address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8b6e4822903ef6b074a7115d9cdf6bc24cd94af", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/b8b6e4822903ef6b074a7115d9cdf6bc24cd94af", "committedDate": "2020-12-12T19:55:39Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7268bec38515ea7db1d4cb2c762eeb43e62f9224", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/7268bec38515ea7db1d4cb2c762eeb43e62f9224", "committedDate": "2020-12-13T00:30:51Z", "message": "fixup! fix UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42d7b3354c0b08fd7f12e5579b5d4a390dffb64e", "author": {"user": {"login": "amaliujia", "name": "Rui Wang"}}, "url": "https://github.com/apache/ozone/commit/42d7b3354c0b08fd7f12e5579b5d4a390dffb64e", "committedDate": "2020-12-13T03:02:13Z", "message": "fixup! fix CI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDEzMjMy", "url": "https://github.com/apache/ozone/pull/1445#pullrequestreview-551013232", "createdAt": "2020-12-14T02:58:22Z", "commit": {"oid": "42d7b3354c0b08fd7f12e5579b5d4a390dffb64e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMDE4ODE4", "url": "https://github.com/apache/ozone/pull/1445#pullrequestreview-551018818", "createdAt": "2020-12-14T03:19:07Z", "commit": {"oid": "42d7b3354c0b08fd7f12e5579b5d4a390dffb64e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2566, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}