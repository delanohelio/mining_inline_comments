{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDcxMjMz", "number": 569, "title": "HDDS-3209. Recon should persist Node metadata.", "bodyText": "What changes were proposed in this pull request?\nSCM does not persist Node metadata in a persistent store like RocksDB. It is needed in Recon since its UI will be a management console, and should be able to withstand DNs shutting down while it is not running. Whenever Recon starts up, it can display all registered Nodes from this DB (even before Heartbeats) and then gradually update state based on heartbeats.\nIn addition to the above, the patch also contains the following.\n\nReview comments from #546 addressed.\nFixed issue in ReconContainerReportHandler.\n\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3029\nHow was this patch tested?\nManually tested.\nAdded unit test.", "createdAt": "2020-02-20T00:21:26Z", "url": "https://github.com/apache/ozone/pull/569", "merged": true, "mergeCommit": {"oid": "076200687f35402b0e7b84220037f90f97461bdf"}, "closed": true, "closedAt": "2020-02-21T22:57:35Z", "author": {"login": "avijayanhwx"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF_3faAH2gAyMzc3NDcxMjMzOjljNWFkODdjODA5M2M2MjA1ZDYyYzkzMTNkNzViYTIzMGE5ZDNiNGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGSkfzgH2gAyMzc3NDcxMjMzOmNmZjAxODBhMmM1ZDRkYTgxMWVmMjk5ZGFmMmYxYTZmMjRjZTg0Zjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c5ad87c8093c6205d62c9313d75ba230a9d3b4f", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/9c5ad87c8093c6205d62c9313d75ba230a9d3b4f", "committedDate": "2020-02-20T00:20:20Z", "message": "HDDS-3209. Recon should persist Node metadata."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeafa978b7af743cc6196d821552980d010e3981", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/aeafa978b7af743cc6196d821552980d010e3981", "committedDate": "2020-02-20T05:18:25Z", "message": "Fix Findbugs failure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "571d0fe4d9729533c84e6105d4253c06ac2a7b58", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/571d0fe4d9729533c84e6105d4253c06ac2a7b58", "committedDate": "2020-02-20T17:18:50Z", "message": "Fix checkstyle failure."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDcwOTM3", "url": "https://github.com/apache/ozone/pull/569#pullrequestreview-362070937", "createdAt": "2020-02-20T16:57:20Z", "commit": {"oid": "aeafa978b7af743cc6196d821552980d010e3981"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1NzoyMVrOFsbZdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoyNDowOVrOFscUcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzMDU1MQ==", "bodyText": "I think adding containerId to the message might be helpful.", "url": "https://github.com/apache/ozone/pull/569#discussion_r382130551", "createdAt": "2020-02-20T16:57:21Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconContainerManager.java", "diffHunk": "@@ -75,6 +80,7 @@ public void addNewContainer(long containerId,\n           getPipelineManager(), containerWithPipeline.getPipeline());\n       addContainerToDB(containerInfo);\n     } catch (IOException ex) {\n+      LOG.info(\"Exception while adding container.\", ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeafa978b7af743cc6196d821552980d010e3981"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0NDk2NA==", "bodyText": "Wouldn't it be safer to change the parameter type to ReconNodeManager?", "url": "https://github.com/apache/ozone/pull/569#discussion_r382144964", "createdAt": "2020-02-20T17:22:57Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconNewNodeHandler.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.scm;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.scm.node.NodeManager;\n+import org.apache.hadoop.hdds.server.events.EventHandler;\n+import org.apache.hadoop.hdds.server.events.EventPublisher;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Adds the new node to Recon Node DB. Since we are not dependent on this\n+ * update, we do this in async.\n+ */\n+public class ReconNewNodeHandler implements EventHandler<DatanodeDetails> {\n+\n+  private static final Logger LOG = LoggerFactory\n+      .getLogger(ReconNewNodeHandler.class);\n+  private ReconNodeManager nodeManager;\n+\n+  public ReconNewNodeHandler(NodeManager nodeManager) {\n+    this.nodeManager = (ReconNodeManager) nodeManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeafa978b7af743cc6196d821552980d010e3981"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0NTY1MA==", "bodyText": "Including part of datanode info and the exception might be helpful.", "url": "https://github.com/apache/ozone/pull/569#discussion_r382145650", "createdAt": "2020-02-20T17:24:09Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/recon/src/main/java/org/apache/hadoop/ozone/recon/scm/ReconNewNodeHandler.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.recon.scm;\n+\n+import java.io.IOException;\n+\n+import org.apache.hadoop.hdds.protocol.DatanodeDetails;\n+import org.apache.hadoop.hdds.scm.node.NodeManager;\n+import org.apache.hadoop.hdds.server.events.EventHandler;\n+import org.apache.hadoop.hdds.server.events.EventPublisher;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Adds the new node to Recon Node DB. Since we are not dependent on this\n+ * update, we do this in async.\n+ */\n+public class ReconNewNodeHandler implements EventHandler<DatanodeDetails> {\n+\n+  private static final Logger LOG = LoggerFactory\n+      .getLogger(ReconNewNodeHandler.class);\n+  private ReconNodeManager nodeManager;\n+\n+  public ReconNewNodeHandler(NodeManager nodeManager) {\n+    this.nodeManager = (ReconNodeManager) nodeManager;\n+  }\n+\n+  @Override\n+  public void onMessage(DatanodeDetails datanodeDetails,\n+                        EventPublisher publisher) {\n+    try {\n+      nodeManager.addNodeToDB(datanodeDetails);\n+    } catch (IOException e) {\n+      LOG.error(\"Unable to add new node to Node DB.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "571d0fe4d9729533c84e6105d4253c06ac2a7b58"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e9c27a95877113925c1446e7052c99b53c4be3d", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/2e9c27a95877113925c1446e7052c99b53c4be3d", "committedDate": "2020-02-20T21:40:50Z", "message": "Address Review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c25f4728925082679a3dae791e74276d8f00003", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/1c25f4728925082679a3dae791e74276d8f00003", "committedDate": "2020-02-20T21:41:06Z", "message": "Merge remote-tracking branch 'upstream/master' into HDDS-3029-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cff0180a2c5d4da811ef299daf2f1a6f24ce84f9", "author": {"user": {"login": "avijayanhwx", "name": null}}, "url": "https://github.com/apache/ozone/commit/cff0180a2c5d4da811ef299daf2f1a6f24ce84f9", "committedDate": "2020-02-20T22:07:47Z", "message": "Add missed out change in commit."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3594, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}