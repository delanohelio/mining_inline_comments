{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjU3NjY1", "number": 449, "title": "HDDS-2891. Apache NiFi PutFile processor is failing with secure Ozone S3G", "bodyText": "What changes were proposed in this pull request?\nMultipart upload is not working in secure environment as the OzoneClientProducer might create the the OzoneClient after executing the HeaderPreprocessor filter. HeaderPreprocessor modifies the header and the AWS signature check is not possible after executing this filter. It should be done before.\nHard to detect the problem, but if you debug both the AWS SDK under NiFi and the signature check of Ozone (OM + S3G) you can see that the canonical message (the base of the signature) contains a wrong content type (ozone/mpu) instead of the original one.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-2891\nHow was this patch tested?\nI started a local NiFi and created a flow with PutS3 processor. It worked\nWhat has been changed in this patch?\nOver the time it become a bigger patch, so here is an overview:\ndeleted:    hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/header/AuthenticationHeaderParser.java\nrenamed:    hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/AWSAuthParser.java -> hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/SignatureProcessor.java\nrenamed:    hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/AWSV4AuthParser.java -> hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/AWSV4SignatureProcessor.java\n\nThe main idea is to remove the duplicated code and use only one single class to process the signature. (Renamed to SignatureProcessor as we already have a header parser to parse the header entry).\nThe other big modification is to do a snapshot in the SignatureProcessor from the HTTP headers. Earlier it was a writable reference which made it very fragile as the HeaderPreprocessor modifies the header.\nmodified:   hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/OzoneClientProducer.java\n\nJust use the one single header parser instead of the other, old one.\nmodified:   hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/HeaderPreprocessor.java\n\nTo make it more safe, I save the original header and the SignatureProcessor can restore the original Contant-Type.-\nnew file:   hadoop-ozone/s3gateway/src/test/java/org/apache/hadoop/ozone/s3/TestAWSV4SignatureProcessor.java\n\nA new unit test to make sure the Content-Type restore is working\nmodified:   hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/util/OzoneS3Util.java\n\n\nThat's a tricky bug. We need to use toLowerCase as it's already used on the server side. Without that we can get very cryptic error. (For example during the createBucket the bucket is created but during the check at the end of the call the acl check is failing....\nmodified:   hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java\nmodified:   hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/VirtualHostStyleFilter.java\nmodified:   hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/BucketEndpoint.java\nmodified:   hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/EndpointBase.java\nmodified:   hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/header/AuthorizationHeaderV4.java\nmodified:   hadoop-ozone/s3gateway/src/test/java/org/apache/hadoop/ozone/s3/TestOzoneClientProducer.java\nmodified:   hadoop-ozone/s3gateway/src/test/java/org/apache/hadoop/ozone/s3/TestVirtualHostStyleFilter.java\nmodified:   hadoop-ozone/s3gateway/src/test/java/org/apache/hadoop/ozone/s3/endpoint/TestBucketPut.java\nmodified:   hadoop-ozone/s3gateway/src/test/java/org/apache/hadoop/ozone/s3/endpoint/TestRootList.java\nmodified:   hadoop-ozone/s3gateway/src/test/java/org/apache/hadoop/ozone/s3/header/TestAuthorizationHeaderV4.java\n\nThe remaining modifications just test updated / clarifications.\nmodified:   hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/endpoint/RootEndpoint.java\n\nThis one thing what I couldn't save. The automatic redirect to the S3 browser is removed. (Earlier if you put the s3 bucket URL to the browser it worked. We need a bigger refactor to save it.\n~\n~", "createdAt": "2020-01-16T13:54:30Z", "url": "https://github.com/apache/ozone/pull/449", "merged": true, "mergeCommit": {"oid": "9a49388cc22472b9670d222efb8e5e6d777a6bb2"}, "closed": true, "closedAt": "2020-02-11T18:06:39Z", "author": {"login": "elek"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb66e8pAH2gAyMzYzNjU3NjY1OjgzNTQwZWRhMTBjMWY3NWZkNDdkN2NlOTIwYTllYjI1NzExOWM1NGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDVsj4AFqTM1Njg3NTYxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "83540eda10c1f75fd47d7ce920a9eb257119c54b", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/83540eda10c1f75fd47d7ce920a9eb257119c54b", "committedDate": "2020-01-16T13:50:50Z", "message": "HDDS-2891. Apache NiFi PutFile processor is failing with secure Ozone S3G"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c1bcd5dfcd845014c9558401e1d6899dda1f49b", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/3c1bcd5dfcd845014c9558401e1d6899dda1f49b", "committedDate": "2020-01-17T10:40:05Z", "message": "restore the info page redirect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f4ec4ce5a0ee9e1e9faf1787de06c55bba26ec9", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/5f4ec4ce5a0ee9e1e9faf1787de06c55bba26ec9", "committedDate": "2020-01-17T11:20:23Z", "message": "adjust the acceptanc test of the root page redirect"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a", "author": {"user": {"login": "elek", "name": "Elek, M\u00e1rton"}}, "url": "https://github.com/apache/ozone/commit/258b06c177a48e9ebc641a031ae1ff0cadf73a3a", "committedDate": "2020-01-18T09:54:51Z", "message": "rat fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODc3ODIz", "url": "https://github.com/apache/ozone/pull/449#pullrequestreview-349877823", "createdAt": "2020-01-29T06:02:34Z", "commit": {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjowMjozNFrOFi9b0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjowMjozNFrOFi9b0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwMjQ0OQ==", "bodyText": "Right now, we have only AWSV4Header authentication only right, so we need the header check.\nOr is there any reason for removal of this check", "url": "https://github.com/apache/ozone/pull/449#discussion_r372202449", "createdAt": "2020-01-29T06:02:34Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/OzoneClientProducer.java", "diffHunk": "@@ -75,36 +70,31 @@ private OzoneClient getClient(OzoneConfiguration config) throws IOException {\n     try {\n       if (OzoneSecurityUtil.isSecurityEnabled(config)) {\n         LOG.debug(\"Creating s3 auth info for client.\");\n-        if (context.getHeaderString(AUTHORIZATION_HEADER).startsWith(\"AWS4\")) {\n-          try {\n-            AWSV4AuthParser v4RequestParser = new AWSV4AuthParser(context);\n-            v4RequestParser.parse();\n-\n-            OzoneTokenIdentifier identifier = new OzoneTokenIdentifier();\n-            identifier.setTokenType(S3AUTHINFO);\n-            identifier.setStrToSign(v4RequestParser.getStringToSign());\n-            identifier.setSignature(v4RequestParser.getSignature());\n-            identifier.setAwsAccessId(v4RequestParser.getAwsAccessId());\n-            identifier.setOwner(new Text(v4RequestParser.getAwsAccessId()));\n-            if (LOG.isTraceEnabled()) {\n-              LOG.trace(\"Adding token for service:{}\", omService);\n-            }\n-            Token<OzoneTokenIdentifier> token = new Token(identifier.getBytes(),\n-                identifier.getSignature().getBytes(UTF_8),\n-                identifier.getKind(),\n-                omService);\n-            UserGroupInformation remoteUser =\n-                UserGroupInformation.createRemoteUser(\n-                    v4RequestParser.getAwsAccessId());\n-            remoteUser.addToken(token);\n-            UserGroupInformation.setLoginUser(remoteUser);\n-          } catch (OS3Exception | URISyntaxException ex) {\n-            LOG.error(\"S3 auth info creation failed.\");\n-            throw S3_AUTHINFO_CREATION_ERROR;\n+        try {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODc4NDU2", "url": "https://github.com/apache/ozone/pull/449#pullrequestreview-349878456", "createdAt": "2020-01-29T06:05:09Z", "commit": {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjowNTowOVrOFi9dyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjowNTowOVrOFi9dyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwMjk1NA==", "bodyText": "Can we rename this getVolumeName, as it is converting to md5Hex, and we use that as volume name.", "url": "https://github.com/apache/ozone/pull/449#discussion_r372202954", "createdAt": "2020-01-29T06:05:09Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/util/OzoneS3Util.java", "diffHunk": "@@ -38,9 +38,9 @@\n   private OzoneS3Util() {\n   }\n \n-  public static String getVolumeName(String userName) {\n+  public static String getS3Username(String userName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODgwMDc4", "url": "https://github.com/apache/ozone/pull/449#pullrequestreview-349880078", "createdAt": "2020-01-29T06:11:26Z", "commit": {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjoxMToyNlrOFi9isA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNjoxMToyNlrOFi9isA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIwNDIwOA==", "bodyText": "What does else part do, for other HTTP method requests?\nOr we should fail the request as it is not a valid request.\nOr I am not sure if my understanding is not correct, could you provide some info here.", "url": "https://github.com/apache/ozone/pull/449#discussion_r372204208", "createdAt": "2020-01-29T06:11:26Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/s3gateway/src/main/java/org/apache/hadoop/ozone/s3/RootPageDisplayFilter.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.s3;\n+\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+/**\n+ * This redirect helps to show and info page in case the endpoint is opened\n+ * from the browser.\n+ */\n+public class RootPageDisplayFilter implements Filter {\n+\n+  @Override\n+  public void init(FilterConfig filterConfig) throws ServletException {\n+\n+  }\n+\n+  @Override\n+  public void doFilter(ServletRequest servletRequest,\n+      ServletResponse servletResponse, FilterChain filterChain)\n+      throws IOException, ServletException {\n+    HttpServletRequest httpRequest = (HttpServletRequest) servletRequest;\n+    String httpMethod = httpRequest.getMethod();\n+    String uri = httpRequest.getRequestURI();\n+    String authorizationHeader = httpRequest.getHeader(\"Authorization\");\n+    if (httpMethod.equalsIgnoreCase(\"GET\") && authorizationHeader == null && uri\n+        .equals(\"/\")) {\n+      ((HttpServletResponse) servletResponse).sendRedirect(\"/static/\");\n+    } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODc1NjE4", "url": "https://github.com/apache/ozone/pull/449#pullrequestreview-356875618", "createdAt": "2020-02-11T18:04:32Z", "commit": {"oid": "258b06c177a48e9ebc641a031ae1ff0cadf73a3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3956, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}