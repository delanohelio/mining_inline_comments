{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NDU0MjM5", "number": 1619, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNToxMjowM1rOE8xITg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToxMDoxOFrOE87FFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTU0OTU4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNToxMjowM1rOH5FdHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzozNjo1OFrOH5N4Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYyMDI1Mg==", "bodyText": "Is this block size used by client while writing? In create and createNonRecursive it tends to ignore the specified block size.\nSo, if it isn't correct, Isn't it same as not implementing it? FileSystem will anyway return some value, that can be tweaked as well by fs.local.block.size", "url": "https://github.com/apache/ozone/pull/1619#discussion_r529620252", "createdAt": "2020-11-24T15:12:03Z", "author": {"login": "ayushtkn"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -723,6 +726,12 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n     return mkdir(f);\n   }\n \n+  @Override\n+  public long getDefaultBlockSize() {\n+    return (long) getConf().getStorageSize(\n+        OZONE_SCM_BLOCK_SIZE, OZONE_SCM_BLOCK_SIZE_DEFAULT, StorageUnit.BYTES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5a3715fce203de51621d2d2588daf4e6584e04"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc1ODMwNw==", "bodyText": "In create and createNonRecursive it tends to ignore the specified block size.\n\nOzone also ignores it and uses uniform block size on server side (configurable via this OZONE_SCM_BLOCK_SIZE property).\n\ncan be tweaked as well by fs.local.block.size\n\nYou are right, we could achieve the same result by forcing this config to the same value as SCM block size.  I think it's simpler and cleaner to override the method than to keep the config in sync.", "url": "https://github.com/apache/ozone/pull/1619#discussion_r529758307", "createdAt": "2020-11-24T17:36:58Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicRootedOzoneFileSystem.java", "diffHunk": "@@ -723,6 +726,12 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n     return mkdir(f);\n   }\n \n+  @Override\n+  public long getDefaultBlockSize() {\n+    return (long) getConf().getStorageSize(\n+        OZONE_SCM_BLOCK_SIZE, OZONE_SCM_BLOCK_SIZE_DEFAULT, StorageUnit.BYTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYyMDI1Mg=="}, "originalCommit": {"oid": "2d5a3715fce203de51621d2d2588daf4e6584e04"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzE3OTc0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToxMDoxOFrOH5VSQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNjoyMzoyN1rOIEjoAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3OTYxOA==", "bodyText": "What if the client who wrote the block and the client who is querying have a different configuration?", "url": "https://github.com/apache/ozone/pull/1619#discussion_r529879618", "createdAt": "2020-11-24T21:10:18Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -698,6 +701,12 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n     return mkdir(f);\n   }\n \n+  @Override\n+  public long getDefaultBlockSize() {\n+    return (long) getConf().getStorageSize(\n+        OZONE_SCM_BLOCK_SIZE, OZONE_SCM_BLOCK_SIZE_DEFAULT, StorageUnit.BYTES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1d723b85adee356d7175edb78fdf9e0ce8a3f0f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDEzNDgxOA==", "bodyText": "This is intended to be used by the client that creates the file.  Once the file is closed, the actual block size can be queried via getBlockSize(Path).  Currently getDefaultBlockSize() returns 32MB, regardless of SCM config:\nhttps://github.com/apache/hadoop/blob/a6df05bf5e24d04852a35b096c44e79f843f4776/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java#L2521-L2522", "url": "https://github.com/apache/ozone/pull/1619#discussion_r530134818", "createdAt": "2020-11-25T06:30:33Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -698,6 +701,12 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n     return mkdir(f);\n   }\n \n+  @Override\n+  public long getDefaultBlockSize() {\n+    return (long) getConf().getStorageSize(\n+        OZONE_SCM_BLOCK_SIZE, OZONE_SCM_BLOCK_SIZE_DEFAULT, StorageUnit.BYTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3OTYxOA=="}, "originalCommit": {"oid": "f1d723b85adee356d7175edb78fdf9e0ce8a3f0f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU0NzYwMg==", "bodyText": "Thanks @arp7 for taking a look.  Does the above answer your question, or would you like further clarification?", "url": "https://github.com/apache/ozone/pull/1619#discussion_r541547602", "createdAt": "2020-12-12T10:14:44Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -698,6 +701,12 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n     return mkdir(f);\n   }\n \n+  @Override\n+  public long getDefaultBlockSize() {\n+    return (long) getConf().getStorageSize(\n+        OZONE_SCM_BLOCK_SIZE, OZONE_SCM_BLOCK_SIZE_DEFAULT, StorageUnit.BYTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3OTYxOA=="}, "originalCommit": {"oid": "f1d723b85adee356d7175edb78fdf9e0ce8a3f0f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTY0ODg5Nw==", "bodyText": "Yes, thanks. Sorry i missed responding.", "url": "https://github.com/apache/ozone/pull/1619#discussion_r541648897", "createdAt": "2020-12-12T16:23:27Z", "author": {"login": "arp7"}, "path": "hadoop-ozone/ozonefs-common/src/main/java/org/apache/hadoop/fs/ozone/BasicOzoneFileSystem.java", "diffHunk": "@@ -698,6 +701,12 @@ public boolean mkdirs(Path f, FsPermission permission) throws IOException {\n     return mkdir(f);\n   }\n \n+  @Override\n+  public long getDefaultBlockSize() {\n+    return (long) getConf().getStorageSize(\n+        OZONE_SCM_BLOCK_SIZE, OZONE_SCM_BLOCK_SIZE_DEFAULT, StorageUnit.BYTES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg3OTYxOA=="}, "originalCommit": {"oid": "f1d723b85adee356d7175edb78fdf9e0ce8a3f0f"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4513, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}