{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyODYxMzE5", "number": 1412, "reviewThreads": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNTowNjo0N1rOEiYhpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo1MDo0NFrOEofhEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDg4ODY5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneBucket.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNTowNjo0N1rOHQOcog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOToxMjoyOVrOHR4YMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3NTk3MA==", "bodyText": "Out of curiosity: what is the purpose of @SuppressWarnings(\"parameternumber\")?", "url": "https://github.com/apache/ozone/pull/1412#discussion_r486775970", "createdAt": "2020-09-11T05:06:47Z", "author": {"login": "amaliujia"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneBucket.java", "diffHunk": "@@ -174,6 +184,20 @@ public OzoneBucket(ConfigurationSource conf, ClientProtocol proxy,\n     this.modificationTime = Instant.ofEpochMilli(modificationTime);\n   }\n \n+  @SuppressWarnings(\"parameternumber\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a468a8ea88e60c58f769ea31c149a7aee8b3794"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxMTUzOQ==", "bodyText": "Thanks for @amaliujia\u2018s review.\nOzone's CheckStyle requires that the number of method variables must not exceed a certain value, or the check fails.  So it borrows from other usage.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r488511539", "createdAt": "2020-09-15T09:12:29Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneBucket.java", "diffHunk": "@@ -174,6 +184,20 @@ public OzoneBucket(ConfigurationSource conf, ClientProtocol proxy,\n     this.modificationTime = Instant.ofEpochMilli(modificationTime);\n   }\n \n+  @SuppressWarnings(\"parameternumber\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3NTk3MA=="}, "originalCommit": {"oid": "4a468a8ea88e60c58f769ea31c149a7aee8b3794"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDg5OTQ3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNToxMjo1N1rOHQOjBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOTo0NjoyNlrOHR5xzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3NzYwNQ==", "bodyText": "Do you need to verify whether quotaInBytes and quotaInCounts are valid? e.g. >= 0?", "url": "https://github.com/apache/ozone/pull/1412#discussion_r486777605", "createdAt": "2020-09-11T05:12:57Z", "author": {"login": "amaliujia"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -464,6 +469,8 @@ public void createBucket(\n         .setStorageType(storageType)\n         .setSourceVolume(bucketArgs.getSourceVolume())\n         .setSourceBucket(bucketArgs.getSourceBucket())\n+        .setQuotaInBytes(quotaInBytes)\n+        .setQuotaInCounts(quotaInCounts)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a468a8ea88e60c58f769ea31c149a7aee8b3794"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUzNDQ3Ng==", "bodyText": "I had added a verify method In new commit.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r488534476", "createdAt": "2020-09-15T09:46:26Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -464,6 +469,8 @@ public void createBucket(\n         .setStorageType(storageType)\n         .setSourceVolume(bucketArgs.getSourceVolume())\n         .setSourceBucket(bucketArgs.getSourceBucket())\n+        .setQuotaInBytes(quotaInBytes)\n+        .setQuotaInCounts(quotaInCounts)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc3NzYwNQ=="}, "originalCommit": {"oid": "4a468a8ea88e60c58f769ea31c149a7aee8b3794"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Njk4MDIwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/request/TestOMRequestUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMToyOToxNlrOHTdmEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMToyOToxNlrOHTdmEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE2OTg3NA==", "bodyText": "If you want to keep this QuotaInBytes and  QuotaInCounts  big enough, you can set it to Long.MAX_VALUE;", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490169874", "createdAt": "2020-09-17T11:29:16Z", "author": {"login": "maobaolong"}, "path": "hadoop-ozone/ozone-manager/src/test/java/org/apache/hadoop/ozone/om/request/TestOMRequestUtils.java", "diffHunk": "@@ -283,7 +285,8 @@ public static void addVolumeToDB(String volumeName, String ownerName,\n     OmVolumeArgs omVolumeArgs =\n         OmVolumeArgs.newBuilder().setCreationTime(Time.now())\n             .setVolume(volumeName).setAdminName(ownerName)\n-            .setOwnerName(ownerName).build();\n+            .setOwnerName(ownerName).setQuotaInBytes(1024 * GB)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Njk5NTY0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTozMzoyM1rOHTdu4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTozMzoyM1rOHTdu4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3MjEyOA==", "bodyText": "You can use \"9223372036854775808\" here, it stand for the Long.MAX_VALUE + 1", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490172128", "createdAt": "2020-09-17T11:33:23Z", "author": {"login": "maobaolong"}, "path": "hadoop-ozone/integration-test/src/test/java/org/apache/hadoop/ozone/client/rpc/TestOzoneRpcClientAbstract.java", "diffHunk": "@@ -269,6 +269,68 @@ public void testVolumeSetOwner() throws IOException {\n     proxy.setVolumeOwner(volumeName, ownerName);\n   }\n \n+  @Test\n+  public void testSetBucketQuota() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    store.createVolume(volumeName);\n+    store.getVolume(volumeName).setQuota(OzoneQuota.parseQuota(\n+        \"10GB\", 10000L));\n+    store.getVolume(volumeName).createBucket(bucketName);\n+    OzoneBucket bucket = store.getVolume(volumeName).getBucket(bucketName);\n+\n+    Assert.assertEquals(OzoneConsts.QUOTA_RESET, bucket.getQuotaInBytes());\n+    Assert.assertEquals(OzoneConsts.QUOTA_RESET, bucket.getQuotaInCounts());\n+    store.getVolume(volumeName).getBucket(bucketName).setQuota(\n+        OzoneQuota.parseQuota(\"1GB\", 1000L));\n+    OzoneBucket ozoneBucket = store.getVolume(volumeName).getBucket(bucketName);\n+    Assert.assertEquals(1024 * 1024 * 1024,\n+        ozoneBucket.getQuotaInBytes());\n+    Assert.assertEquals(1000L, ozoneBucket.getQuotaInCounts());\n+  }\n+\n+  @Test\n+  public void testSetBucketQuotaIllegal() throws IOException {\n+    String volumeName = UUID.randomUUID().toString();\n+    String bucketName = UUID.randomUUID().toString();\n+    store.createVolume(volumeName);\n+    store.getVolume(volumeName).createBucket(bucketName);\n+\n+    try {\n+      store.getVolume(volumeName).getBucket(bucketName).setQuota(\n+          OzoneQuota.parseQuota(\"1GB\", -100L));\n+    } catch (IllegalArgumentException ex) {\n+      GenericTestUtils.assertExceptionContains(\n+          \"Invalid values for quota\", ex);\n+    }\n+    // The unit should be legal.\n+    try {\n+      store.getVolume(volumeName).getBucket(bucketName).setQuota(\n+          OzoneQuota.parseQuota(\"1TEST\", 100L));\n+    } catch (IllegalArgumentException ex) {\n+      GenericTestUtils.assertExceptionContains(\n+          \"Invalid values for quota\", ex);\n+    }\n+\n+    // The setting value cannot be greater than LONG.MAX_VALUE BYTES.\n+    try {\n+      store.getVolume(volumeName).getBucket(bucketName).setQuota(\n+          OzoneQuota.parseQuota(\"9999999999999GB\", 100L));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzAxMjM3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTozNzoyNlrOHTd4IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTozNzoyNlrOHTd4IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3NDQ5Nw==", "bodyText": "This verifyQuota has the same function as above two. Suggest choose one and remove the other.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490174497", "createdAt": "2020-09-17T11:37:26Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -494,6 +500,30 @@ private static void verifyBucketName(String bucketName) throws OMException {\n     }\n   }\n \n+  private static void verifyCountsQuota(long quota) throws OMException {\n+    if ((quota < OzoneConsts.QUOTA_RESET)) {\n+      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n+          \"counts quota is :\" + quota + \".\");\n+    }\n+  }\n+\n+  private static void verifySpaceQuota(long quota) throws OMException {\n+    if ((quota < OzoneConsts.QUOTA_RESET)) {\n+      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n+          \"space quota is :\" + quota + \".\");\n+    }\n+  }\n+\n+  private static void verifyQuota(long quotaInCounts, long quotaInBytes)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzAyMDYzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/BucketArgs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTozOTozMFrOHTd86g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxMjowNVrOHThYLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3NTcyMg==", "bodyText": "quotaInBytes in VolumeArgs has String as type. Can we unify them?", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490175722", "createdAt": "2020-09-17T11:39:30Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/BucketArgs.java", "diffHunk": "@@ -57,6 +57,9 @@\n   private final String sourceVolume;\n   private final String sourceBucket;\n \n+  private long quotaInBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzMTg1Mg==", "bodyText": "I will change the String in VolumeArgs to long", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490231852", "createdAt": "2020-09-17T13:12:05Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/BucketArgs.java", "diffHunk": "@@ -57,6 +57,9 @@\n   private final String sourceVolume;\n   private final String sourceBucket;\n \n+  private long quotaInBytes;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3NTcyMg=="}, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzAzNjE1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTo0NDoxNFrOHTeGNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzo0NDoxNFrOHTi7mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3ODEwMg==", "bodyText": "Can we add default -1 value to newly added fields in proto file?", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490178102", "createdAt": "2020-09-17T11:44:14Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -439,6 +434,15 @@ public void createBucket(\n     verifyVolumeName(volumeName);\n     verifyBucketName(bucketName);\n     Preconditions.checkNotNull(bucketArgs);\n+    verifyCountsQuota(bucketArgs.getQuotaInCounts());\n+    verifySpaceQuota(bucketArgs.getQuotaInBytes());\n+\n+    // When creating buckets using the API, if the user does not specify quota,\n+    // 0 is passed in by default, which should be set to -1.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI1NzMwNQ==", "bodyText": "In proto unsigned field can't have negative default value. The logic here is the same and I can encapsulate it as a method, which should be better", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490257305", "createdAt": "2020-09-17T13:44:14Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -439,6 +434,15 @@ public void createBucket(\n     verifyVolumeName(volumeName);\n     verifyBucketName(bucketName);\n     Preconditions.checkNotNull(bucketArgs);\n+    verifyCountsQuota(bucketArgs.getQuotaInCounts());\n+    verifySpaceQuota(bucketArgs.getQuotaInBytes());\n+\n+    // When creating buckets using the API, if the user does not specify quota,\n+    // 0 is passed in by default, which should be set to -1.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3ODEwMg=="}, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzA0Mzk5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTo0NjozMlrOHTeKuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTo0NjozMlrOHTeKuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3OTI1Ng==", "bodyText": "verify volume", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490179256", "createdAt": "2020-09-17T11:46:32Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -598,6 +628,20 @@ public void setBucketStorageType(\n     ozoneManagerClient.setBucketProperty(builder.build());\n   }\n \n+  @Override\n+  public void setBucketQuota(String volumeName, String bucketName,\n+      long quotaInCounts, long quotaInBytes) throws IOException {\n+    HddsClientUtils.verifyResourceName(bucketName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzA0NzE1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTo0Nzo0MVrOHTeMrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDowMjowMVrOHTjxEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3OTc1OA==", "bodyText": "setBucketQuota?  setBucketProperty?", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490179758", "createdAt": "2020-09-17T11:47:41Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -598,6 +628,20 @@ public void setBucketStorageType(\n     ozoneManagerClient.setBucketProperty(builder.build());\n   }\n \n+  @Override\n+  public void setBucketQuota(String volumeName, String bucketName,\n+      long quotaInCounts, long quotaInBytes) throws IOException {\n+    HddsClientUtils.verifyResourceName(bucketName);\n+    verifyQuota(quotaInCounts, quotaInBytes);\n+    OmBucketArgs.Builder builder = OmBucketArgs.newBuilder();\n+    builder.setVolumeName(volumeName)\n+        .setBucketName(bucketName)\n+        .setQuotaInBytes(quotaInBytes)\n+        .setQuotaInCounts(quotaInCounts);\n+    ozoneManagerClient.setBucketProperty(builder.build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI3MDk5NQ==", "bodyText": "Bucket provides the setBucketProperty method and the corresponding request to modify the bucket information. This method already exists and is not something I added later. So here I'm reusing the method.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490270995", "createdAt": "2020-09-17T14:02:01Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -598,6 +628,20 @@ public void setBucketStorageType(\n     ozoneManagerClient.setBucketProperty(builder.build());\n   }\n \n+  @Override\n+  public void setBucketQuota(String volumeName, String bucketName,\n+      long quotaInCounts, long quotaInBytes) throws IOException {\n+    HddsClientUtils.verifyResourceName(bucketName);\n+    verifyQuota(quotaInCounts, quotaInBytes);\n+    OmBucketArgs.Builder builder = OmBucketArgs.newBuilder();\n+    builder.setVolumeName(volumeName)\n+        .setBucketName(bucketName)\n+        .setQuotaInBytes(quotaInBytes)\n+        .setQuotaInCounts(quotaInCounts);\n+    ozoneManagerClient.setBucketProperty(builder.build());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE3OTc1OA=="}, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzA4NzcyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTo1NzoyNlrOHTekXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTo1NzoyNlrOHTekXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4NTgyMA==", "bodyText": "indent", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490185820", "createdAt": "2020-09-17T11:57:26Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -297,4 +301,28 @@ private BucketEncryptionInfoProto getBeinfo(\n             CipherSuite.convert(metadata.getCipher())));\n     return bekb.build();\n   }\n+\n+  public void checkQuotaBytesValid(OmVolumeArgs omVolumeArgs,\n+                                      OmBucketInfo omBucketInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzEwMDc4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowMDo0MVrOHTesAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjo0NTowMFrOHTgQfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4Nzc3OA==", "bodyText": "--quota -> --keyQuota   -q -> -kq", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490187778", "createdAt": "2020-09-17T12:00:41Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java", "diffHunk": "@@ -46,6 +47,14 @@\n           \"false/unspecified indicates otherwise\")\n   private Boolean isGdprEnforced;\n \n+  @Option(names = {\"--spaceQuota\", \"-sq\"},\n+      description = \"Quota in bytes of the newly created bucket (eg. 1GB)\")\n+  private String quotaInBytes;\n+\n+  @Option(names = {\"--quota\", \"-q\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIxMzUwMA==", "bodyText": "I would suggest dropping the short option.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Option(names = {\"--quota\", \"-q\"},\n          \n          \n            \n              @Option(names = {\"--key-quota\"},", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490213500", "createdAt": "2020-09-17T12:45:00Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java", "diffHunk": "@@ -46,6 +47,14 @@\n           \"false/unspecified indicates otherwise\")\n   private Boolean isGdprEnforced;\n \n+  @Option(names = {\"--spaceQuota\", \"-sq\"},\n+      description = \"Quota in bytes of the newly created bucket (eg. 1GB)\")\n+  private String quotaInBytes;\n+\n+  @Option(names = {\"--quota\", \"-q\"},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4Nzc3OA=="}, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzEwMzI4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowMToyNlrOHTetdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowMToyNlrOHTetdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4ODE1MQ==", "bodyText": "same as above", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490188151", "createdAt": "2020-09-17T12:01:26Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.shell.bucket;\n+\n+import org.apache.hadoop.hdds.client.OzoneQuota;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+\n+/**\n+ * create bucket handler.\n+ */\n+@Command(name = \"update\",\n+    description = \"Updates parameter of the buckets\")\n+public class UpdateBucketHandler extends BucketHandler {\n+\n+  @Option(names = {\"--spaceQuota\", \"-sq\"},\n+      description = \"Quota in bytes of the newly created volume (eg. 1GB)\")\n+  private String quotaInBytes;\n+\n+  @Option(names = {\"--quota\", \"-q\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzEzMjU1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowOTozNlrOHTe_HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowOTozNlrOHTe_HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE5MjY2OQ==", "bodyText": "update -> setquota,  could you please also change the volume quota update command to setquota?\nWe also need a remove quota CLI for both volume and bucket.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490192669", "createdAt": "2020-09-17T12:09:36Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.shell.bucket;\n+\n+import org.apache.hadoop.hdds.client.OzoneQuota;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+\n+/**\n+ * create bucket handler.\n+ */\n+@Command(name = \"update\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzI2NjYxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjo0NDoyNFrOHTgPFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjo0NDoyNFrOHTgPFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIxMzE0Mg==", "bodyText": "Short options should be only one character to support option grouping (ie. -sq should be two separate options, same as -s -q).\nLong options should not be camel-case, rather lower-case using dash as separator.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Option(names = {\"--spaceQuota\", \"-sq\"},\n          \n          \n            \n              @Option(names = {\"--space-quota\", \"-s\"},", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490213142", "createdAt": "2020-09-17T12:44:24Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java", "diffHunk": "@@ -46,6 +47,14 @@\n           \"false/unspecified indicates otherwise\")\n   private Boolean isGdprEnforced;\n \n+  @Option(names = {\"--spaceQuota\", \"-sq\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzM0OTcxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzowMzoxNlrOHThA6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzowMzoxNlrOHThA6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIyNTg5Nw==", "bodyText": "Please consider creating a mixin with the two quota options to ensure consistency and reduce duplication.  See ListOptions for example, and its usages in\nhttps://github.com/apache/hadoop-ozone/blob/079ee7fc2a223e1251b16b9c42004aa2a27bf0f4/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/ListVolumeHandler.java#L51-L52\nand\nhttps://github.com/apache/hadoop-ozone/blob/079ee7fc2a223e1251b16b9c42004aa2a27bf0f4/hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/ListBucketHandler.java#L42-L43\nOption descriptions can be generic, without mentioning \"newly created volume\" etc., so they can be applied to create|update volume|bucket.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490225897", "createdAt": "2020-09-17T13:03:16Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.shell.bucket;\n+\n+import org.apache.hadoop.hdds.client.OzoneQuota;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+\n+/**\n+ * create bucket handler.\n+ */\n+@Command(name = \"update\",\n+    description = \"Updates parameter of the buckets\")\n+public class UpdateBucketHandler extends BucketHandler {\n+\n+  @Option(names = {\"--spaceQuota\", \"-sq\"},\n+      description = \"Quota in bytes of the newly created volume (eg. 1GB)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQwOTc4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxNjo0OFrOHThlHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxNjo0OFrOHThlHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNTE2NA==", "bodyText": "nit: leftover doc", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490235164", "createdAt": "2020-09-17T13:16:48Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.shell.bucket;\n+\n+import org.apache.hadoop.hdds.client.OzoneQuota;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+\n+/**\n+ * create bucket handler.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQxMDI0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxNjo1NVrOHThlZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoxNjo1NVrOHThlZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIzNTIzOA==", "bodyText": "nit: leftover doc", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490235238", "createdAt": "2020-09-17T13:16:55Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/UpdateBucketHandler.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.shell.bucket;\n+\n+import org.apache.hadoop.hdds.client.OzoneQuota;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+\n+/**\n+ * create bucket handler.\n+ */\n+@Command(name = \"update\",\n+    description = \"Updates parameter of the buckets\")\n+public class UpdateBucketHandler extends BucketHandler {\n+\n+  @Option(names = {\"--spaceQuota\", \"-sq\"},\n+      description = \"Quota in bytes of the newly created volume (eg. 1GB)\")\n+  private String quotaInBytes;\n+\n+  @Option(names = {\"--quota\", \"-q\"},\n+      description = \"Key counts of the newly created bucket (eg. 5)\")\n+  private long quotaInCounts = OzoneConsts.QUOTA_RESET;\n+\n+  /**\n+   * Executes create bucket.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzQ1MDAzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzoyNDo0MlrOHTh9lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjo0MDozNlrOHZc_nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MTQyOQ==", "bodyText": "Argument validity should be checked before acquiring lock, preferably in preExecute.\nAlso, please verify that the bucket is not a link, if quota is set in the request.  Links cannot have actual content, so they should not have any quota defined, similar to encryption:\nhttps://github.com/apache/hadoop-ozone/blob/079ee7fc2a223e1251b16b9c42004aa2a27bf0f4/hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java#L127-L130", "url": "https://github.com/apache/ozone/pull/1412#discussion_r490241429", "createdAt": "2020-09-17T13:24:42Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -192,6 +192,10 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         throw new OMException(\"Bucket already exist\", BUCKET_ALREADY_EXISTS);\n       }\n \n+      //Check quotaInBytes and quotaInCounts to update\n+      checkQuotaBytesValid(omVolumeArgs, omBucketInfo);\n+      checkQuotaCountsValid(omVolumeArgs, omBucketInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ1MTQ4Nw==", "bodyText": "Thanks @adoroszlai for the advice, the check action needs to get the volume or bucket in DB, so it better to do this action after acquiring the lock.  And other comments has been fixed.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r496451487", "createdAt": "2020-09-29T06:40:36Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -192,6 +192,10 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         throw new OMException(\"Bucket already exist\", BUCKET_ALREADY_EXISTS);\n       }\n \n+      //Check quotaInBytes and quotaInCounts to update\n+      checkQuotaBytesValid(omVolumeArgs, omBucketInfo);\n+      checkQuotaCountsValid(omVolumeArgs, omBucketInfo);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0MTQyOQ=="}, "originalCommit": {"oid": "0a335167fc9d9e401c4df166735a43db8e643756"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTkwOTMyOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/BucketArgs.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMzo1NDo1MFrOHVpcQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMzo1NDo1MFrOHVpcQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ2MTEyMA==", "bodyText": "parameter statement is incorrent.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r492461120", "createdAt": "2020-09-22T03:54:50Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/BucketArgs.java", "diffHunk": "@@ -66,17 +69,23 @@\n    * @param bucketEncryptionKey bucket encryption key name\n    * @param sourceVolume\n    * @param sourceBucket\n+   * @param quotaInBytes Volume quota in bytes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da62920d2d926f17b40cbea29ebd506f7051be8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjE4NjM4OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneVolume.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjozMjo0NFrOHVr1vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjozMjo0NFrOHVr1vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwMDQxNQ==", "bodyText": "Bucket has quota while Volume doesn't\uff0cthis is a common case.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r492500415", "createdAt": "2020-09-22T06:32:44Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneVolume.java", "diffHunk": "@@ -282,15 +285,48 @@ public boolean setOwner(String userName) throws IOException {\n     return result;\n   }\n \n+  /**\n+   * Clean the space quota of the volume.\n+   *\n+   * @throws IOException\n+   */\n+  public void clearSpaceQuota() throws IOException {\n+    OzoneVolume ozoneVolume = proxy.getVolumeDetails(name);\n+    Iterator bucketIter = ozoneVolume.listBuckets(null);\n+    while (bucketIter.hasNext()) {\n+      OzoneBucket nextBucket = (OzoneBucket) bucketIter.next();\n+      if(nextBucket.getQuotaInBytes() != QUOTA_RESET) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da62920d2d926f17b40cbea29ebd506f7051be8"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjIyMTI0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/protocol/ClientProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjo0NToxNFrOHVsJ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjo0NToxNFrOHVsJ0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwNTU1NQ==", "bodyText": "@param order doesn't match the real parmater order.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r492505555", "createdAt": "2020-09-22T06:45:14Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/protocol/ClientProtocol.java", "diffHunk": "@@ -655,4 +655,15 @@ OzoneOutputStream createFile(String volumeName, String bucketName,\n    * Getter for OzoneManagerClient.\n    */\n   OzoneManagerProtocol getOzoneManagerClient();\n+\n+  /**\n+   * Set Bucket Quota.\n+   * @param volumeName Name of the Volume.\n+   * @param bucketName Name of the Bucket.\n+   * @param quotaInBytes The maximum size this volume can be used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da62920d2d926f17b40cbea29ebd506f7051be8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjI1OTk5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/ClearSpaceQuotaOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjo1ODoyOVrOHVsgpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjo1ODoyOVrOHVsgpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxMTM5Nw==", "bodyText": "typo  comands", "url": "https://github.com/apache/ozone/pull/1412#discussion_r492511397", "createdAt": "2020-09-22T06:58:29Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/ClearSpaceQuotaOptions.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.shell;\n+\n+import picocli.CommandLine;\n+\n+/**\n+ * Common options for 'clrquota' comands.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da62920d2d926f17b40cbea29ebd506f7051be8"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjI4NTAzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/SetQuotaHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzowNzowOFrOHVsvfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzowNzowOFrOHVsvfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxNTE5Nw==", "bodyText": "statement is stale.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r492515197", "createdAt": "2020-09-22T07:07:08Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/SetQuotaHandler.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.shell.volume;\n+\n+import org.apache.hadoop.hdds.client.OzoneQuota;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import org.apache.hadoop.ozone.shell.SetSpaceQuotaOptions;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Executes update volume calls.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da62920d2d926f17b40cbea29ebd506f7051be8"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjI4ODczOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/SetQuotaHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzowODozMFrOHVsxyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzowODozMFrOHVsxyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxNTc4Ng==", "bodyText": "set -> create", "url": "https://github.com/apache/ozone/pull/1412#discussion_r492515786", "createdAt": "2020-09-22T07:08:30Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/volume/SetQuotaHandler.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.shell.volume;\n+\n+import org.apache.hadoop.hdds.client.OzoneQuota;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import org.apache.hadoop.ozone.shell.SetSpaceQuotaOptions;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+\n+/**\n+ * Executes update volume calls.\n+ */\n+@Command(name = \"setquota\",\n+    description = \"Set quota of the volumes\")\n+public class SetQuotaHandler extends VolumeHandler {\n+\n+  @CommandLine.Mixin\n+  private SetSpaceQuotaOptions quotaOptions;\n+\n+  @Option(names = {\"--bucket-quota\"},\n+      description = \"Bucket counts of the volume to set (eg. 5)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da62920d2d926f17b40cbea29ebd506f7051be8"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjMwMjg2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoxMzoxNVrOHVs6NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoxMzoxNVrOHVs6NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxNzk0MA==", "bodyText": "Need check sum of all bucket quota under the Volume. Better cover this case in UT.\nWe also need this check when update volume quato.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r492517940", "createdAt": "2020-09-22T07:13:15Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketCreateRequest.java", "diffHunk": "@@ -297,4 +300,17 @@ private BucketEncryptionInfoProto getBeinfo(\n             CipherSuite.convert(metadata.getCipher())));\n     return bekb.build();\n   }\n+\n+  public void checkQuotaBytesValid(OmVolumeArgs omVolumeArgs,\n+      OmBucketInfo omBucketInfo) {\n+    long volumeQuotaInBytes = omVolumeArgs.getQuotaInBytes();\n+    long quotaInBytes = omBucketInfo.getQuotaInBytes();\n+    if(volumeQuotaInBytes < quotaInBytes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da62920d2d926f17b40cbea29ebd506f7051be8"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjMwNDc5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoxNDowMVrOHVs7bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzoxNDowMVrOHVs7bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUxODI1NA==", "bodyText": "same as above.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r492518254", "createdAt": "2020-09-22T07:14:01Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/bucket/OMBucketSetPropertyRequest.java", "diffHunk": "@@ -150,6 +148,20 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n             .setIsVersionEnabled(dbBucketInfo.getIsVersionEnabled());\n       }\n \n+      //Check quotaInBytes and quotaInCounts to update\n+      String volumeKey = omMetadataManager.getVolumeKey(volumeName);\n+      OmVolumeArgs omVolumeArgs = omMetadataManager.getVolumeTable()\n+          .get(volumeKey);\n+      if (checkQuotaBytesValid(omVolumeArgs, omBucketArgs)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da62920d2d926f17b40cbea29ebd506f7051be8"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTY0MjA0OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/interface-client/src/main/proto/OmClientProtocol.proto", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo0NTowMVrOHYkGBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo0NTowMVrOHYkGBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxOTIzOA==", "bodyText": "not used anymore.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r495519238", "createdAt": "2020-09-27T02:45:01Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/interface-client/src/main/proto/OmClientProtocol.proto", "diffHunk": "@@ -314,6 +314,8 @@ enum Status {\n \n     PARTIAL_RENAME = 65;\n \n+    BUCKET_SPACE_QUOTA_NOT_RESET = 66;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5c12285b8d98dbc3b6610a66bf53b771b8dd3c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTY0MjM3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/exceptions/OMException.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo0NToxNVrOHYkGKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjo0NToxNVrOHYkGKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxOTI3Mw==", "bodyText": "same as other place.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r495519273", "createdAt": "2020-09-27T02:45:15Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/common/src/main/java/org/apache/hadoop/ozone/om/exceptions/OMException.java", "diffHunk": "@@ -229,7 +229,9 @@ public String toString() {\n \n     NOT_SUPPORTED_OPERATION,\n \n-    PARTIAL_RENAME\n+    PARTIAL_RENAME,\n+\n+    BUCKET_SPACE_QUOTA_NOT_RESET", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f5c12285b8d98dbc3b6610a66bf53b771b8dd3c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzU1MjgxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODozNjozN1rOHYzwYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODozNjozN1rOHYzwYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3NTg0Mg==", "bodyText": "single ( is enough.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r495775842", "createdAt": "2020-09-28T08:36:37Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -496,6 +491,28 @@ private static void verifyBucketName(String bucketName) throws OMException {\n     }\n   }\n \n+  private static void verifyCountsQuota(long quota) throws OMException {\n+    if ((quota < OzoneConsts.QUOTA_RESET)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd134cd2c84bf7f4d4b61983a7810ad0fa7cf27"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzU1NDg2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODozNzowNlrOHYzxlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODozNzowNlrOHYzxlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3NjE0OQ==", "bodyText": "same as above", "url": "https://github.com/apache/ozone/pull/1412#discussion_r495776149", "createdAt": "2020-09-28T08:37:06Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -496,6 +491,28 @@ private static void verifyBucketName(String bucketName) throws OMException {\n     }\n   }\n \n+  private static void verifyCountsQuota(long quota) throws OMException {\n+    if ((quota < OzoneConsts.QUOTA_RESET)) {\n+      throw new IllegalArgumentException(\"Invalid values for quota : \" +\n+          \"counts quota is :\" + quota + \".\");\n+    }\n+  }\n+\n+  private static void verifySpaceQuota(long quota) throws OMException {\n+    if ((quota < OzoneConsts.QUOTA_RESET)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd134cd2c84bf7f4d4b61983a7810ad0fa7cf27"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzU2MTA2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODozODo1NFrOHYz1aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwODozODo1NFrOHYz1aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc3NzEzMQ==", "bodyText": "Can we align the  quotaInBytes and quotaInCounts order in setVolumeQuota and setBucketQuota\uff1f  In another words, no need for the code change here.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r495777131", "createdAt": "2020-09-28T08:38:54Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -334,15 +329,11 @@ public boolean setVolumeOwner(String volumeName, String owner)\n   }\n \n   @Override\n-  public void setVolumeQuota(String volumeName, long quotaInCounts,\n-      long quotaInBytes) throws IOException {\n+  public void setVolumeQuota(String volumeName, long quotaInBytes,\n+      long quotaInCounts) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd134cd2c84bf7f4d4b61983a7810ad0fa7cf27"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzY5NTk2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/SetQuotaHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxMzo1OFrOHY1GiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOToxMzo1OFrOHY1GiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTc5Nzg5Nw==", "bodyText": "leftover statement", "url": "https://github.com/apache/ozone/pull/1412#discussion_r495797897", "createdAt": "2020-09-28T09:13:58Z", "author": {"login": "ChenSammi"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/SetQuotaHandler.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.hadoop.ozone.shell.bucket;\n+\n+import org.apache.hadoop.hdds.client.OzoneQuota;\n+import org.apache.hadoop.ozone.OzoneConsts;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import org.apache.hadoop.ozone.shell.SetSpaceQuotaOptions;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+import java.io.IOException;\n+\n+/**\n+ * set quota of the bucket.\n+ */\n+@Command(name = \"setquota\",\n+    description = \"Set quota of the buckets\")\n+public class SetQuotaHandler extends BucketHandler {\n+\n+  @CommandLine.Mixin\n+  private SetSpaceQuotaOptions quotaOptions;\n+\n+  @Option(names = {\"--key-quota\"},\n+      description = \"Key counts of the newly created bucket (eg. 5)\")\n+  private long quotaInCounts = OzoneConsts.QUOTA_RESET;\n+\n+  /**\n+   * Executes create bucket.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd134cd2c84bf7f4d4b61983a7810ad0fa7cf27"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODg0OTM5OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDoyMToyN1rOHZmcQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDoyMToyN1rOHZmcQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYwNjI3Mg==", "bodyText": "Arguments are already checked, why change from use of the variables to getQuotaValue?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                builder.setQuotaInBytes(getQuotaValue(volArgs.getQuotaInBytes()));\n          \n          \n            \n                builder.setQuotaInCounts(getQuotaValue(volArgs.getQuotaInCounts()));\n          \n          \n            \n                builder.setQuotaInBytes(quotaInBytes);\n          \n          \n            \n                builder.setQuotaInCounts(quotaInCounts);", "url": "https://github.com/apache/ozone/pull/1412#discussion_r496606272", "createdAt": "2020-09-29T10:21:27Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -305,8 +300,8 @@ public void createVolume(String volumeName, VolumeArgs volArgs)\n     builder.setVolume(volumeName);\n     builder.setAdminName(admin);\n     builder.setOwnerName(owner);\n-    builder.setQuotaInBytes(quotaInBytes);\n-    builder.setQuotaInCounts(quotaInCounts);\n+    builder.setQuotaInBytes(getQuotaValue(volArgs.getQuotaInBytes()));\n+    builder.setQuotaInCounts(getQuotaValue(volArgs.getQuotaInCounts()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dba9e55fa19138973d0444d73343b8c3a86773"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkxODAxOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0MTozOVrOHZnHUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowNTo1M1rOHZp2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxNzI5OQ==", "bodyText": "createBucket verifies quota args, but createVolume does not.  Is this intentional?", "url": "https://github.com/apache/ozone/pull/1412#discussion_r496617299", "createdAt": "2020-09-29T10:41:39Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -441,6 +431,8 @@ public void createBucket(\n     verifyVolumeName(volumeName);\n     verifyBucketName(bucketName);\n     Preconditions.checkNotNull(bucketArgs);\n+    verifyCountsQuota(bucketArgs.getQuotaInCounts());\n+    verifySpaceQuota(bucketArgs.getQuotaInBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dba9e55fa19138973d0444d73343b8c3a86773"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MjA2OA==", "bodyText": "The PR of createVolume did not add a checkmark before, I will add this in the createVolume.", "url": "https://github.com/apache/ozone/pull/1412#discussion_r496662068", "createdAt": "2020-09-29T12:05:53Z", "author": {"login": "captainzmc"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/rpc/RpcClient.java", "diffHunk": "@@ -441,6 +431,8 @@ public void createBucket(\n     verifyVolumeName(volumeName);\n     verifyBucketName(bucketName);\n     Preconditions.checkNotNull(bucketArgs);\n+    verifyCountsQuota(bucketArgs.getQuotaInCounts());\n+    verifySpaceQuota(bucketArgs.getQuotaInBytes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYxNzI5OQ=="}, "originalCommit": {"oid": "81dba9e55fa19138973d0444d73343b8c3a86773"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODk0MTU3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/ClearQuotaHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0ODozOFrOHZnV_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0ODozOFrOHZnV_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMTA1NQ==", "bodyText": "By using a bit more generic option name --count-quota, this could be moved into ClearSpaceQuotaOptions (and unified with volume's --bucket-quota option).", "url": "https://github.com/apache/ozone/pull/1412#discussion_r496621055", "createdAt": "2020-09-29T10:48:38Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/ClearQuotaHandler.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.shell.bucket;\n+\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import org.apache.hadoop.ozone.shell.ClearSpaceQuotaOptions;\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+\n+import java.io.IOException;\n+\n+/**\n+ * clean quota of the bucket.\n+ */\n+@Command(name = \"clrquota\",\n+    description = \"clear quota of the bucket\")\n+public class ClearQuotaHandler extends BucketHandler {\n+\n+  @CommandLine.Mixin\n+  private ClearSpaceQuotaOptions clrSpaceQuota;\n+\n+  @CommandLine.Option(names = {\"--key-quota\"},\n+      description = \"clear count quota\")\n+  private boolean clrKeyQuota;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dba9e55fa19138973d0444d73343b8c3a86773"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODk0ODY1OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo1MDo0NFrOHZnaSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo1MDo0NFrOHZnaSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMjE1Mg==", "bodyText": "Similarly to the option for ClearQuotaHandler:\nby using a bit more generic option name --count-quota (and description), this could be moved into SetSpaceQuotaOptions (and unified with volume's --bucket-quota option).", "url": "https://github.com/apache/ozone/pull/1412#discussion_r496622152", "createdAt": "2020-09-29T10:50:44Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/bucket/CreateBucketHandler.java", "diffHunk": "@@ -46,6 +49,13 @@\n           \"false/unspecified indicates otherwise\")\n   private Boolean isGdprEnforced;\n \n+  @CommandLine.Mixin\n+  private SetSpaceQuotaOptions quotaOptions;\n+\n+  @Option(names = {\"--key-quota\"},\n+      description = \"Key counts of the newly created bucket (eg. 5)\")\n+  private long quotaInCounts = OzoneConsts.QUOTA_RESET;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81dba9e55fa19138973d0444d73343b8c3a86773"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4883, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}