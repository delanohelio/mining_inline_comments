{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjgwOTkx", "number": 719, "title": "HDDS-3270. Allow safemode listeners to be notified when some precheck rules pass", "bodyText": "What changes were proposed in this pull request?\nAs part of the SCM safemode process, there are some rules which must pass before safemode can be exited.\nOne of these rules is the number of registered datanodes and another is that at least one pipeline must be created and open.\nCurrently, pipeline creation is attempted each time a node registers. As soon as the 3rd node registers, pipelines will be created.\nThere are two issue with this:\n\n\nWith network topology, if the first 3 nodes are all from the same rack, a non-rackaware pipeline will get created.\n\n\nWith multi-raft, it would be better if more nodes are registered to allow the multiple pipelines per node to be spread across all the available nodes.\n\n\nThe proposal here, is to introduce a new sub-state into the safemode process, call \"preCheckComplete\". When adding rules to the Safemode Manager, some rules can be tagged as \"preCheck\" (eg number of datanodes registered). When all all the pre-check rules have passed a notification will be sent to all safemode listeners:\n  safeModeIsOn -> true\n  preCheckComplete -> true\n\nThat will allow the listener to take action on this first stage completing. In the case of PipelineManager, it will then allow pipelines to be created.\nAfter the remaining rules have been passed, safemode will exit as normal, by sending a second event:\n  safeModeIsOn -> false\n  preCheckComplete -> true\n\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3270\nHow was this patch tested?\nNew unit tests added and existing tests modified.", "createdAt": "2020-03-24T22:10:24Z", "url": "https://github.com/apache/ozone/pull/719", "merged": true, "mergeCommit": {"oid": "a24a79b1375f9319f669248a665a5af3f7b8550e"}, "closed": true, "closedAt": "2020-04-08T17:07:52Z", "author": {"login": "sodonnel"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRJnMYgBqjMxNjQ2MDgxOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTJ3GDAH2gAyMzkzMjgwOTkxOmZiMjAwZTAyMjdmYTVhNDVjZTk3ZTRmZTI4NDdlYmVlMWQyYzczY2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0987c5e00de9769e08021bb8acd2bf7b505d0f05", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/0987c5e00de9769e08021bb8acd2bf7b505d0f05", "committedDate": "2020-03-25T10:26:44Z", "message": "Fixed further unit test failure"}, "afterCommit": {"oid": "604c19c656429f4a0032a3ae6a52277f9bd678d0", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/604c19c656429f4a0032a3ae6a52277f9bd678d0", "committedDate": "2020-03-25T15:54:23Z", "message": "Fixed further unit test failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c01e4c99ecaefb5368912c0cb672045be510d19", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/4c01e4c99ecaefb5368912c0cb672045be510d19", "committedDate": "2020-03-26T23:26:44Z", "message": "Exit safemode before running test"}, "afterCommit": {"oid": "27c628043e12eb7a0b3d1e1c2949d7a75f0193de", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/27c628043e12eb7a0b3d1e1c2949d7a75f0193de", "committedDate": "2020-03-26T23:29:44Z", "message": "Exit safemode before running test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3aaf7a69369ada037fc7dc9b3f22953b10c2650e", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/3aaf7a69369ada037fc7dc9b3f22953b10c2650e", "committedDate": "2020-03-30T15:11:11Z", "message": "Add a PreCheck state into safemode, so listening objects can get notified when stage 1 rules pass.\nPipeline Manager can use this to trigger when to kick off pipeline creation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a689486130e182708c0607cb1640a24b2409345", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/7a689486130e182708c0607cb1640a24b2409345", "committedDate": "2020-03-30T15:11:11Z", "message": "Address unit and integration failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65899f2317f5b9001dbf583274575f60d86cdd1b", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/65899f2317f5b9001dbf583274575f60d86cdd1b", "committedDate": "2020-03-30T15:11:11Z", "message": "Fixed further unit test failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea07da832ff10a52f00e213d053ea753a505faf9", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/ea07da832ff10a52f00e213d053ea753a505faf9", "committedDate": "2020-03-30T15:11:11Z", "message": "Attempt to fix issues with TestDeadNodeHandler test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90b3240e3d416e4bc0b2b2ec9f0dc1bbc2b31076", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/90b3240e3d416e4bc0b2b2ec9f0dc1bbc2b31076", "committedDate": "2020-03-30T15:11:11Z", "message": "Revert \"Attempt to fix issues with TestDeadNodeHandler test\"\n\nThis reverts commit c6a8d5e5ecec491f181239515c048d21a01cd49d."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89246a0c7d1ffeb3faf20ed12a4291ce498ef1fb", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/89246a0c7d1ffeb3faf20ed12a4291ce498ef1fb", "committedDate": "2020-03-30T15:11:11Z", "message": "Trigger pipeline creation after nodes have registered in TestDeadNodeHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e612f83b174b175fb0e1bcb99eef8bd59fa3b818", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/e612f83b174b175fb0e1bcb99eef8bd59fa3b818", "committedDate": "2020-03-30T15:11:11Z", "message": "Move the pipeline trigger into the recheck routine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a21df8eb4795bdf6e733f24baebb9f98a677b53", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/6a21df8eb4795bdf6e733f24baebb9f98a677b53", "committedDate": "2020-03-30T15:11:11Z", "message": "Added more debug as the test is STILL failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91c854779b8b3c59e410df66531e01984e607896", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/91c854779b8b3c59e410df66531e01984e607896", "committedDate": "2020-03-30T15:11:11Z", "message": "Revert \"Added more debug as the test is STILL failing\"\n\nThis reverts commit 9090ec317d9f5f1e76bcd8eb77b01e5748918825."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4abd0e89922999393c941a109e4da99e7d68d860", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/4abd0e89922999393c941a109e4da99e7d68d860", "committedDate": "2020-03-30T15:11:11Z", "message": "Exit safemode before running test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27c628043e12eb7a0b3d1e1c2949d7a75f0193de", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/27c628043e12eb7a0b3d1e1c2949d7a75f0193de", "committedDate": "2020-03-26T23:29:44Z", "message": "Exit safemode before running test"}, "afterCommit": {"oid": "4abd0e89922999393c941a109e4da99e7d68d860", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/4abd0e89922999393c941a109e4da99e7d68d860", "committedDate": "2020-03-30T15:11:11Z", "message": "Exit safemode before running test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88837ef5a9a253eb330e52b9da3362b16038008f", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/88837ef5a9a253eb330e52b9da3362b16038008f", "committedDate": "2020-03-30T16:23:30Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjI1NTAw", "url": "https://github.com/apache/ozone/pull/719#pullrequestreview-384225500", "createdAt": "2020-03-30T20:58:53Z", "commit": {"oid": "88837ef5a9a253eb330e52b9da3362b16038008f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo1ODo1NFrOF979jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo1ODo1NFrOF979jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4OTg2OA==", "bodyText": "I would suggest to use pipelineCreationAllowed as the internal state name, it makes the code easier to read out as I I see.\nI know this is a regular getter and and setter pair, but...\nIn the tests, the set method is always called with true as the parameter, so I suggest to call this method simply allowPipelineCreation() without a parameter, the getter part of the pair in this case can be called as isPipelineCreationAllowed().\nThis suggestion is simply about expressions from the usage point of view, and I don't have a strong opinion on this, however if we want to keep this name and want to name it as a regular getter setter as it is suggested by the books then we should use isAllowPipelineCreation as the getter name.", "url": "https://github.com/apache/ozone/pull/719#discussion_r400489868", "createdAt": "2020-03-30T20:58:54Z", "author": {"login": "fapifta"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/SCMPipelineManager.java", "diffHunk": "@@ -146,6 +152,16 @@ public void setPipelineProvider(ReplicationType replicationType,\n     pipelineFactory.setProvider(replicationType, provider);\n   }\n \n+  @VisibleForTesting\n+  public void setAllowPipelineCreation(boolean newState) {\n+    this.allowPipelineCreation.set(newState);\n+  }\n+\n+  @VisibleForTesting\n+  public boolean getAllowPipelineCreation() {\n+    return allowPipelineCreation.get();\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88837ef5a9a253eb330e52b9da3362b16038008f"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjI1NTky", "url": "https://github.com/apache/ozone/pull/719#pullrequestreview-384225592", "createdAt": "2020-03-30T20:59:03Z", "commit": {"oid": "88837ef5a9a253eb330e52b9da3362b16038008f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo1OTowM1rOF9798g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDo1OTowM1rOF9798g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ4OTk3MA==", "bodyText": "Let me understand a bit this part of the code:\nwe trigger pipelines in two cases:\n1: the pipeline creation was not allowed before, but now it is allowed, effectively when precheck is complete\n2: safemode is transitioning to off, and currently we are in safe mode\nLooking at the code of triggerPipelineCreation, it is calling the same method from the BackgroundPipelineCreator, which is doing this only after the creator itself is started.\nNow this means that we are effectively doing the same as the old code, and trigger pipeline creation after leaving safe mode, am I understand this well?", "url": "https://github.com/apache/ozone/pull/719#discussion_r400489970", "createdAt": "2020-03-30T20:59:03Z", "author": {"login": "fapifta"}, "path": "hadoop-hdds/server-scm/src/main/java/org/apache/hadoop/hdds/scm/pipeline/SCMPipelineManager.java", "diffHunk": "@@ -641,13 +663,26 @@ public boolean getSafeModeStatus() {\n   }\n \n   @Override\n-  public void handleSafeModeTransition(\n+  public synchronized void handleSafeModeTransition(\n       SCMSafeModeManager.SafeModeStatus status) {\n-    this.isInSafeMode.set(status.getSafeModeStatus());\n-    if (!status.getSafeModeStatus()) {\n-      // TODO: #CLUTIL if we reenter safe mode the fixed interval pipeline\n-      // creation job needs to stop\n+    // TODO: #CLUTIL - handle safemode getting re-enabled\n+    boolean currentAllowPipelines =\n+        allowPipelineCreation.getAndSet(status.isPreCheckComplete());\n+    boolean currentlyInSafeMode =\n+        isInSafeMode.getAndSet(status.isInSafeMode());\n+    boolean triggerPipelines = false;\n+\n+    // Trigger pipeline creation only if the preCheck status has changed to\n+    // complete.\n+    if (allowPipelineCreation.get() && !currentAllowPipelines) {\n+      triggerPipelines = true;\n+    }\n+    // Start the pipeline creation thread only when safemode switches off\n+    if (!getSafeModeStatus() && currentlyInSafeMode) {\n       startPipelineCreator();\n+      triggerPipelines = true;\n+    }\n+    if (triggerPipelines) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88837ef5a9a253eb330e52b9da3362b16038008f"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjMwNDU5", "url": "https://github.com/apache/ozone/pull/719#pullrequestreview-384230459", "createdAt": "2020-03-30T21:06:29Z", "commit": {"oid": "88837ef5a9a253eb330e52b9da3362b16038008f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7841e1d482f13e24c22e0a2c734da7fe26382251", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/7841e1d482f13e24c22e0a2c734da7fe26382251", "committedDate": "2020-03-31T08:36:38Z", "message": "Rename allow pipeline creation methods in SCMPipeline manager based on review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "760d644995e6b3e5a06d54baac50778cad33aab2", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/760d644995e6b3e5a06d54baac50778cad33aab2", "committedDate": "2020-03-31T10:23:38Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb200e0227fa5a45ce97e4fe2847ebee1d2c73cf", "author": {"user": null}, "url": "https://github.com/apache/ozone/commit/fb200e0227fa5a45ce97e4fe2847ebee1d2c73cf", "committedDate": "2020-03-31T21:19:58Z", "message": "Simplify trigger pipeline creation logic in scmPipelineManager safemode hook"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3540, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}