{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNDU4ODY2", "number": 954, "title": "HDDS-3638. Add a cat command to show the text of a file in the Ozone server", "bodyText": "What changes were proposed in this pull request?\nWhen we deploy a hdfs cluster, our devops usually want to put a file into the cluster and cat the result to ensure anything is ok, so they want this command of ozone too.\nSome time, we only want to print the content of the file in Ozone, we don't need to download it now.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3638\nHow was this patch tested?\nbin/ozone sh key cat /myvol/mybucket/NOTIC.txt", "createdAt": "2020-05-21T16:40:34Z", "url": "https://github.com/apache/ozone/pull/954", "merged": true, "mergeCommit": {"oid": "28fd39a00c44979803f308bdddf54c91c05bdf47"}, "closed": true, "closedAt": "2020-05-22T20:34:02Z", "author": {"login": "maobaolong"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjgWuegH2gAyNDIxNDU4ODY2OjRhYWUxOGZlZWRhYzk5YmRjYTA3NGE0MmQ1MGU0ZTMzOWM3MDM4ZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcj0q9UgFqTQxNzAyODM1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4aae18feedac99bdca074a42d50e4e339c7038fc", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/ozone/commit/4aae18feedac99bdca074a42d50e4e339c7038fc", "committedDate": "2020-05-21T16:35:13Z", "message": "HDDS-3638. Add a cat command to show the text of a file in the Ozone server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MzMxOTMy", "url": "https://github.com/apache/ozone/pull/954#pullrequestreview-416331932", "createdAt": "2020-05-21T17:08:05Z", "commit": {"oid": "4aae18feedac99bdca074a42d50e4e339c7038fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzowODowNlrOGY7Smg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzowODowNlrOGY7Smg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc5MDQyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                description = \"Cat a specific key from ozone server\")\n          \n          \n            \n                description = \"Copies a specific Ozone key to standard output\")", "url": "https://github.com/apache/ozone/pull/954#discussion_r428790426", "createdAt": "2020-05-21T17:08:06Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/keys/CatKeyHandler.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.shell.keys;\n+\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.OZONE_SCM_CHUNK_SIZE_DEFAULT;\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.OZONE_SCM_CHUNK_SIZE_KEY;\n+\n+import org.apache.hadoop.conf.StorageUnit;\n+import org.apache.hadoop.io.IOUtils;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.client.OzoneClientException;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import picocli.CommandLine.Command;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Cat an existing key.\n+ */\n+@Command(name = \"cat\",\n+    description = \"Cat a specific key from ozone server\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aae18feedac99bdca074a42d50e4e339c7038fc"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NTU1NTc2", "url": "https://github.com/apache/ozone/pull/954#pullrequestreview-416555576", "createdAt": "2020-05-21T23:22:04Z", "commit": {"oid": "4aae18feedac99bdca074a42d50e4e339c7038fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoyMjowNFrOGZF_sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQyMzoyMjowNFrOGZF_sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODk2NTgxMA==", "bodyText": "Should we consider a small copy buffer size like (4k) instead of default OZONE_SCM_CHUNK_SIZE_DEFAULT(4M) for better memory efficiency?", "url": "https://github.com/apache/ozone/pull/954#discussion_r428965810", "createdAt": "2020-05-21T23:22:04Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/keys/CatKeyHandler.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.shell.keys;\n+\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.OZONE_SCM_CHUNK_SIZE_DEFAULT;\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.OZONE_SCM_CHUNK_SIZE_KEY;\n+\n+import org.apache.hadoop.conf.StorageUnit;\n+import org.apache.hadoop.io.IOUtils;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.client.OzoneClientException;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import picocli.CommandLine.Command;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Cat an existing key.\n+ */\n+@Command(name = \"cat\",\n+    description = \"Cat a specific key from ozone server\")\n+public class CatKeyHandler extends KeyHandler {\n+\n+  @Override\n+  protected void execute(OzoneClient client, OzoneAddress address)\n+      throws IOException, OzoneClientException {\n+\n+    String volumeName = address.getVolumeName();\n+    String bucketName = address.getBucketName();\n+    String keyName = address.getKeyName();\n+\n+    int chunkSize = (int) getConf().getStorageSize(OZONE_SCM_CHUNK_SIZE_KEY,\n+        OZONE_SCM_CHUNK_SIZE_DEFAULT, StorageUnit.BYTES);\n+\n+    OzoneVolume vol = client.getObjectStore().getVolume(volumeName);\n+    OzoneBucket bucket = vol.getBucket(bucketName);\n+    try (InputStream input = bucket.readKey(keyName)) {\n+      IOUtils.copyBytes(input, System.out, chunkSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4aae18feedac99bdca074a42d50e4e339c7038fc"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NTU1NzE0", "url": "https://github.com/apache/ozone/pull/954#pullrequestreview-416555714", "createdAt": "2020-05-21T23:22:29Z", "commit": {"oid": "4aae18feedac99bdca074a42d50e4e339c7038fc"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ff279fa53d098536fc8d9a5bb3b95eec1312370", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/ozone/commit/2ff279fa53d098536fc8d9a5bb3b95eec1312370", "committedDate": "2020-05-22T00:45:20Z", "message": "Update hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/keys/CatKeyHandler.java\n\nCo-authored-by: Doroszlai, Attila <6454655+adoroszlai@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0867318753145a06645f4a0e2992e4807e23f85e", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/ozone/commit/0867318753145a06645f4a0e2992e4807e23f85e", "committedDate": "2020-05-22T00:50:45Z", "message": "HDDS-3638. Address comments, modify the default chunk size."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODY3MTky", "url": "https://github.com/apache/ozone/pull/954#pullrequestreview-416867192", "createdAt": "2020-05-22T12:20:39Z", "commit": {"oid": "0867318753145a06645f4a0e2992e4807e23f85e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoyMDozOVrOGZVIdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoyMDozOVrOGZVIdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMzgxMw==", "bodyText": "This will use 4KB buffer only if chunk size is not configured, which I don't think can happen.  I guess @xiaoyuyao's intention was to always use 4KB buffer, regardless of chunk size setting.", "url": "https://github.com/apache/ozone/pull/954#discussion_r429213813", "createdAt": "2020-05-22T12:20:39Z", "author": {"login": "adoroszlai"}, "path": "hadoop-ozone/tools/src/main/java/org/apache/hadoop/ozone/shell/keys/CatKeyHandler.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.apache.hadoop.ozone.shell.keys;\n+\n+import static org.apache.hadoop.hdds.scm.ScmConfigKeys.OZONE_SCM_CHUNK_SIZE_KEY;\n+\n+import org.apache.hadoop.conf.StorageUnit;\n+import org.apache.hadoop.io.IOUtils;\n+import org.apache.hadoop.ozone.client.OzoneBucket;\n+import org.apache.hadoop.ozone.client.OzoneClient;\n+import org.apache.hadoop.ozone.client.OzoneClientException;\n+import org.apache.hadoop.ozone.client.OzoneVolume;\n+import org.apache.hadoop.ozone.shell.OzoneAddress;\n+import picocli.CommandLine.Command;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Cat an existing key.\n+ */\n+@Command(name = \"cat\",\n+    description = \"Copies a specific Ozone key to standard output\")\n+public class CatKeyHandler extends KeyHandler {\n+\n+  @Override\n+  protected void execute(OzoneClient client, OzoneAddress address)\n+      throws IOException, OzoneClientException {\n+\n+    String volumeName = address.getVolumeName();\n+    String bucketName = address.getBucketName();\n+    String keyName = address.getKeyName();\n+\n+    int chunkSize = (int) getConf().getStorageSize(OZONE_SCM_CHUNK_SIZE_KEY,\n+        \"4KB\", StorageUnit.BYTES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0867318753145a06645f4a0e2992e4807e23f85e"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b656ccae10fdef91dad59b6656b60d98d34f965", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/ozone/commit/7b656ccae10fdef91dad59b6656b60d98d34f965", "committedDate": "2020-05-22T14:54:50Z", "message": "HDDS-3605. Address comments, 4kb buffer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d05ac8eb9514090d872a69d899113bc575ccea9", "author": {"user": {"login": "maobaolong", "name": "maobaolong"}}, "url": "https://github.com/apache/ozone/commit/0d05ac8eb9514090d872a69d899113bc575ccea9", "committedDate": "2020-05-22T14:58:08Z", "message": "HDDS-3605. Address comments, 4kb buffer."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ac8bd7b253d760ce93f64ef7e20975f101c519f", "author": {"user": {"login": "adoroszlai", "name": "Doroszlai, Attila"}}, "url": "https://github.com/apache/ozone/commit/2ac8bd7b253d760ce93f64ef7e20975f101c519f", "committedDate": "2020-05-22T16:14:14Z", "message": "trigger new CI check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MDI4MzU1", "url": "https://github.com/apache/ozone/pull/954#pullrequestreview-417028355", "createdAt": "2020-05-22T16:15:25Z", "commit": {"oid": "0d05ac8eb9514090d872a69d899113bc575ccea9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3289, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}