{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MzA4MDAy", "number": 752, "title": "HDDS-3319. Handle HA for BasicOzoneClientAdapterImpl#renew/cancel().", "bodyText": "What changes were proposed in this pull request?\nFix the token renew and cancel logic in the Renewer class. By adding omserviceId into OzoneTokenIdentifier. This way, the renewer can renew and cancel the token without referring any additional ozone uri.\nFix the ozone token tool to support get/renew/cancel token in secure om ha setup.\nWhat is the link to the Apache JIRA\nhttps://issues.apache.org/jira/browse/HDDS-3319\nHow was this patch tested?\nTest with the private build in real cluster using ozone token tool and the distcp.\nBefore the fix, the YARN RM will stuck due to the omservice id is not being used to connect to the om proxy up job submit to renew the ozone token. After the fix, the distcp will be able to finish successfully.", "createdAt": "2020-04-02T01:24:47Z", "url": "https://github.com/apache/ozone/pull/752", "merged": true, "mergeCommit": {"oid": "15db251f16236228c6596253dab6946494fc8f5b"}, "closed": true, "closedAt": "2020-04-07T17:12:22Z", "author": {"login": "xiaoyuyao"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTlTUfAFqTM4NjEwNTM3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVUOJrgBqjMyMTAxNDUzNDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTA1Mzc5", "url": "https://github.com/apache/ozone/pull/752#pullrequestreview-386105379", "createdAt": "2020-04-02T04:50:07Z", "commit": {"oid": "0e0b790dc923e7735fc6c039c60ea51e20f16fe4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNDo1MDowN1rOF_bLHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNToxNzowOVrOF_blMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA0OTgyMQ==", "bodyText": "Now with this change, we have an assumption that client can never use OM_SERVICE_ID_DEFAULT value when configuring HA. As previously in single node OM with ratis enabled, we need raftGroupID to get that we have used this default serviceID.", "url": "https://github.com/apache/ozone/pull/752#discussion_r402049821", "createdAt": "2020-04-02T04:50:07Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneClientFactory.java", "diffHunk": "@@ -159,6 +163,47 @@ private static OzoneClient getRpcClient(ClientProtocol clientProtocol,\n     return new OzoneClient(config, proxy);\n   }\n \n+  /**\n+   * Create OzoneClient for token renew/cancel operations.\n+   * @param conf Configuration to be used for OzoneCient creation\n+   * @param token ozone token is involved\n+   * @return\n+   * @throws IOException\n+   */\n+  public static OzoneClient getOzoneClient(Configuration conf,\n+      Token<OzoneTokenIdentifier> token) throws IOException {\n+    Preconditions.checkNotNull(token, \"Null token is not allowed\");\n+    String omServiceId = token.decodeIdentifier().getOmServiceId();\n+    if (StringUtils.isNotEmpty(omServiceId)) {\n+      // new OM should always issue token with omServiceId\n+      if (omServiceId.equals(OzoneConsts.OM_SERVICE_ID_DEFAULT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0b790dc923e7735fc6c039c60ea51e20f16fe4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA1MDc1OQ==", "bodyText": "This else, says when new client talking to old OM with HA, we are failing is my understanding correct here?", "url": "https://github.com/apache/ozone/pull/752#discussion_r402050759", "createdAt": "2020-04-02T04:53:53Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneClientFactory.java", "diffHunk": "@@ -159,6 +163,47 @@ private static OzoneClient getRpcClient(ClientProtocol clientProtocol,\n     return new OzoneClient(config, proxy);\n   }\n \n+  /**\n+   * Create OzoneClient for token renew/cancel operations.\n+   * @param conf Configuration to be used for OzoneCient creation\n+   * @param token ozone token is involved\n+   * @return\n+   * @throws IOException\n+   */\n+  public static OzoneClient getOzoneClient(Configuration conf,\n+      Token<OzoneTokenIdentifier> token) throws IOException {\n+    Preconditions.checkNotNull(token, \"Null token is not allowed\");\n+    String omServiceId = token.decodeIdentifier().getOmServiceId();\n+    if (StringUtils.isNotEmpty(omServiceId)) {\n+      // new OM should always issue token with omServiceId\n+      if (omServiceId.equals(OzoneConsts.OM_SERVICE_ID_DEFAULT)) {\n+        // Non-HA\n+        return OzoneClientFactory.getRpcClient(conf);\n+      } else if (OmUtils.isOmHAServiceId(conf, omServiceId)) {\n+        // HA with matching service id\n+        return OzoneClientFactory.getRpcClient(omServiceId, conf);\n+      } else {\n+        // HA with mismatched service id\n+        throw new IOException(\"Service ID specified does not match\" +\n+            \" with \" + OZONE_OM_SERVICE_IDS_KEY + \" defined in the \" +\n+            \"configuration. Configured \" + OZONE_OM_SERVICE_IDS_KEY +\n+            \" are\" + conf.getTrimmedStringCollection(\n+            OZONE_OM_SERVICE_IDS_KEY));\n+      }\n+    } else {\n+      // Old OM may issue token without omServiceId that should work\n+      // with non-HA case\n+      if (!OmUtils.isServiceIdsDefined(conf)) {\n+        return OzoneClientFactory.getRpcClient(conf);\n+      } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0b790dc923e7735fc6c039c60ea51e20f16fe4"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA1NjQ5OQ==", "bodyText": "OZONE_BUCKET_URI_DESCRIPTION -> need to be updated as o3://om or o3://serviceid", "url": "https://github.com/apache/ozone/pull/752#discussion_r402056499", "createdAt": "2020-04-02T05:17:09Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/web/ozShell/token/GetTokenHandler.java", "diffHunk": "@@ -39,7 +40,9 @@\n     description = \"get a delegation token.\")\n public class GetTokenHandler extends Handler {\n \n-\n+  @CommandLine.Parameters(arity = \"1..1\",\n+      description = Shell.OZONE_BUCKET_URI_DESCRIPTION)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0b790dc923e7735fc6c039c60ea51e20f16fe4"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTE0NzMy", "url": "https://github.com/apache/ozone/pull/752#pullrequestreview-386114732", "createdAt": "2020-04-02T05:23:57Z", "commit": {"oid": "0e0b790dc923e7735fc6c039c60ea51e20f16fe4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNToyMzo1N1rOF_bsfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNToyMzo1N1rOF_bsfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA1ODM2Ng==", "bodyText": "Minor: Can we also found service ID which helps during debug", "url": "https://github.com/apache/ozone/pull/752#discussion_r402058366", "createdAt": "2020-04-02T05:23:57Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/client/src/main/java/org/apache/hadoop/ozone/client/OzoneClientFactory.java", "diffHunk": "@@ -159,6 +163,47 @@ private static OzoneClient getRpcClient(ClientProtocol clientProtocol,\n     return new OzoneClient(config, proxy);\n   }\n \n+  /**\n+   * Create OzoneClient for token renew/cancel operations.\n+   * @param conf Configuration to be used for OzoneCient creation\n+   * @param token ozone token is involved\n+   * @return\n+   * @throws IOException\n+   */\n+  public static OzoneClient getOzoneClient(Configuration conf,\n+      Token<OzoneTokenIdentifier> token) throws IOException {\n+    Preconditions.checkNotNull(token, \"Null token is not allowed\");\n+    String omServiceId = token.decodeIdentifier().getOmServiceId();\n+    if (StringUtils.isNotEmpty(omServiceId)) {\n+      // new OM should always issue token with omServiceId\n+      if (omServiceId.equals(OzoneConsts.OM_SERVICE_ID_DEFAULT)) {\n+        // Non-HA\n+        return OzoneClientFactory.getRpcClient(conf);\n+      } else if (OmUtils.isOmHAServiceId(conf, omServiceId)) {\n+        // HA with matching service id\n+        return OzoneClientFactory.getRpcClient(omServiceId, conf);\n+      } else {\n+        // HA with mismatched service id\n+        throw new IOException(\"Service ID specified does not match\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e0b790dc923e7735fc6c039c60ea51e20f16fe4"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzgyOTMy", "url": "https://github.com/apache/ozone/pull/752#pullrequestreview-387782932", "createdAt": "2020-04-05T05:35:54Z", "commit": {"oid": "77f7269574b9f6def89aa87f311352a08511876a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77f7269574b9f6def89aa87f311352a08511876a", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/ozone/commit/77f7269574b9f6def89aa87f311352a08511876a", "committedDate": "2020-04-02T23:10:40Z", "message": "More specific on the case of non-HA and single-node Ratis HA"}, "afterCommit": {"oid": "005318d6511cac2e3101c46807395f371b503bfe", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/ozone/commit/005318d6511cac2e3101c46807395f371b503bfe", "committedDate": "2020-04-07T07:07:46Z", "message": "Fix some token CLI issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4574e1ff5e53f6ac51c8bd4926134ba940c00566", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/ozone/commit/4574e1ff5e53f6ac51c8bd4926134ba940c00566", "committedDate": "2020-04-07T14:22:15Z", "message": "HDDS-3319. Handle HA for BasicOzoneClientAdapterImpl#renew/cancel()."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "071f6832cca6614618032ac33c41d29e38d2a4d7", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/ozone/commit/071f6832cca6614618032ac33c41d29e38d2a4d7", "committedDate": "2020-04-07T14:22:15Z", "message": "address code review feedbacks and fix unit test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29e0dd074fb28a2ac3c81d725ed8a2ab001c6f98", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/ozone/commit/29e0dd074fb28a2ac3c81d725ed8a2ab001c6f98", "committedDate": "2020-04-07T14:22:16Z", "message": "More specific on the case of non-HA and single-node Ratis HA"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba8d595a3e2b9a2e1e39b232fabf14c9ab0fe8cf", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/ozone/commit/ba8d595a3e2b9a2e1e39b232fabf14c9ab0fe8cf", "committedDate": "2020-04-07T14:22:16Z", "message": "Fix some token CLI issue."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "005318d6511cac2e3101c46807395f371b503bfe", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/ozone/commit/005318d6511cac2e3101c46807395f371b503bfe", "committedDate": "2020-04-07T07:07:46Z", "message": "Fix some token CLI issue."}, "afterCommit": {"oid": "ba8d595a3e2b9a2e1e39b232fabf14c9ab0fe8cf", "author": {"user": {"login": "xiaoyuyao", "name": "Xiaoyu Yao"}}, "url": "https://github.com/apache/ozone/commit/ba8d595a3e2b9a2e1e39b232fabf14c9ab0fe8cf", "committedDate": "2020-04-07T14:22:16Z", "message": "Fix some token CLI issue."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3422, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}