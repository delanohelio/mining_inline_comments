{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxODEzMzc5", "number": 1044, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMDo0NDo0NlrOEE5Yrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMDo0NDo0NlrOEE5Yrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTY5OTY2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/net/NetUtils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMDo0NDo0NlrOGizh3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxMDowNzo1NlrOGjcDWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE0OTAyMw==", "bodyText": "Can we simplified the logic without any matcher by using apache common StringUtils?\nreturn len == 1 ? path : StringUtils.removeEnd(path, \"/\");", "url": "https://github.com/apache/ozone/pull/1044#discussion_r439149023", "createdAt": "2020-06-12T00:44:46Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/net/NetUtils.java", "diffHunk": "@@ -59,9 +64,12 @@ public static String normalize(String path) {\n               + NetConstants.PATH_SEPARATOR_STR + \": \" + path);\n     }\n \n+    if (len == 1 || path.charAt(len - 1) != NetConstants.PATH_SEPARATOR) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "255453b98362b584620447ce16ff582b44f55a94"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE1MTU5NQ==", "bodyText": "@xiaoyuyao Thanks for review. But the result of  StringUtils.removeEnd(\"/a/b/c//\", \"/\") is \"/a/b/c/\" instead of \"/a/b/c\". I'm not sure whether we should consider the path end with multiple \"/\".", "url": "https://github.com/apache/ozone/pull/1044#discussion_r439151595", "createdAt": "2020-06-12T00:54:38Z", "author": {"login": "runzhiwang"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/net/NetUtils.java", "diffHunk": "@@ -59,9 +64,12 @@ public static String normalize(String path) {\n               + NetConstants.PATH_SEPARATOR_STR + \": \" + path);\n     }\n \n+    if (len == 1 || path.charAt(len - 1) != NetConstants.PATH_SEPARATOR) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE0OTAyMw=="}, "originalCommit": {"oid": "255453b98362b584620447ce16ff582b44f55a94"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU4OTE0OQ==", "bodyText": "You are correct. The node to location mapping is provided by script or mapping file configured and parsed by implementation of DNSToSwitchMapping. The script should usually normalize the path already. Otherwise,\nthe mapping can't  be used consistently for the topology class to determine node locations.\nE.g., multiple slash: \"///\" => \"\"\nmultiple slash in the middle \"/a//b/c/\" => \"/a//b/c\" which is not equal to \"/a/b/c\", etc.", "url": "https://github.com/apache/ozone/pull/1044#discussion_r439589149", "createdAt": "2020-06-12T18:50:13Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/net/NetUtils.java", "diffHunk": "@@ -59,9 +64,12 @@ public static String normalize(String path) {\n               + NetConstants.PATH_SEPARATOR_STR + \": \" + path);\n     }\n \n+    if (len == 1 || path.charAt(len - 1) != NetConstants.PATH_SEPARATOR) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE0OTAyMw=="}, "originalCommit": {"oid": "255453b98362b584620447ce16ff582b44f55a94"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgxMjk1NA==", "bodyText": "@xiaoyuyao Thanks for review. Updated.", "url": "https://github.com/apache/ozone/pull/1044#discussion_r439812954", "createdAt": "2020-06-14T10:07:56Z", "author": {"login": "runzhiwang"}, "path": "hadoop-hdds/common/src/main/java/org/apache/hadoop/hdds/scm/net/NetUtils.java", "diffHunk": "@@ -59,9 +64,12 @@ public static String normalize(String path) {\n               + NetConstants.PATH_SEPARATOR_STR + \": \" + path);\n     }\n \n+    if (len == 1 || path.charAt(len - 1) != NetConstants.PATH_SEPARATOR) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE0OTAyMw=="}, "originalCommit": {"oid": "255453b98362b584620447ce16ff582b44f55a94"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4237, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}