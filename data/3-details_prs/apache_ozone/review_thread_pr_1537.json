{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNDA5NTQw", "number": 1537, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjozNDoxOFrOE04xpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzowOTowN1rOE05tDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODkxNjIxOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/DownloadAndImportReplicator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjozNDoxOFrOHs3CdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOTowMDo1MFrOHs8ezg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwMTE0MQ==", "bodyText": "I think we should remove this catch block completely.  Logging the same exception both here and in the caller (replicate()) is IMO unnecessary.", "url": "https://github.com/apache/ozone/pull/1537#discussion_r516801141", "createdAt": "2020-11-03T16:34:18Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/DownloadAndImportReplicator.java", "diffHunk": "@@ -89,6 +91,7 @@ public void importContainer(long containerID, Path tarFilePath) {\n       LOG.error(\n           \"Can't import the downloaded container data id=\" + containerID,\n           e);\n+      throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7f3481858502618711fc03701ac321e1f4e7bbd"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5MDMxOA==", "bodyText": "Yeps, Removed!!!", "url": "https://github.com/apache/ozone/pull/1537#discussion_r516890318", "createdAt": "2020-11-03T19:00:50Z", "author": {"login": "ayushtkn"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/DownloadAndImportReplicator.java", "diffHunk": "@@ -89,6 +91,7 @@ public void importContainer(long containerID, Path tarFilePath) {\n       LOG.error(\n           \"Can't import the downloaded container data id=\" + containerID,\n           e);\n+      throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwMTE0MQ=="}, "originalCommit": {"oid": "f7f3481858502618711fc03701ac321e1f4e7bbd"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODkxOTU2OnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/DownloadAndImportReplicator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjozNTowM1rOHs3Ecw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOTowMTowNlrOHs8fWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwMTY1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.error(\"Container replication was unsuccessful.\", e);\n          \n          \n            \n                  LOG.error(\"Container {} replication was unsuccessful.\", containerID, e);", "url": "https://github.com/apache/ozone/pull/1537#discussion_r516801651", "createdAt": "2020-11-03T16:35:03Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/DownloadAndImportReplicator.java", "diffHunk": "@@ -122,7 +125,7 @@ public void replicate(ReplicationTask task) {\n       LOG.info(\"Container {} is replicated successfully\", containerID);\n       task.setStatus(Status.DONE);\n     } catch (Exception e) {\n-      LOG.error(\"Container replication was unsuccessful .\", e);\n+      LOG.error(\"Container replication was unsuccessful.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7f3481858502618711fc03701ac321e1f4e7bbd"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5MDQ1Nw==", "bodyText": "Done", "url": "https://github.com/apache/ozone/pull/1537#discussion_r516890457", "createdAt": "2020-11-03T19:01:06Z", "author": {"login": "ayushtkn"}, "path": "hadoop-hdds/container-service/src/main/java/org/apache/hadoop/ozone/container/replication/DownloadAndImportReplicator.java", "diffHunk": "@@ -122,7 +125,7 @@ public void replicate(ReplicationTask task) {\n       LOG.info(\"Container {} is replicated successfully\", containerID);\n       task.setStatus(Status.DONE);\n     } catch (Exception e) {\n-      LOG.error(\"Container replication was unsuccessful .\", e);\n+      LOG.error(\"Container replication was unsuccessful.\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwMTY1MQ=="}, "originalCommit": {"oid": "f7f3481858502618711fc03701ac321e1f4e7bbd"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTA2ODMxOnYy", "diffSide": "RIGHT", "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestReplicationSupervisor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzowOTowN1rOHs4hIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOTowMToyNlrOHs8gBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyNTM3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                res.complete(Paths.get(\"file:/tmp/file\"));\n          \n          \n            \n                res.complete(Paths.get(\"file:/tmp/no-such-file\"));\n          \n      \n    \n    \n  \n\nThis would document that the expected failure is due to FileNotFoundException.", "url": "https://github.com/apache/ozone/pull/1537#discussion_r516825377", "createdAt": "2020-11-03T17:09:07Z", "author": {"login": "adoroszlai"}, "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestReplicationSupervisor.java", "diffHunk": "@@ -173,6 +178,36 @@ public void stalledDownload() {\n     }\n   }\n \n+  @Test\n+  public void testDownloadAndImportReplicatorFailure() {\n+    ReplicationSupervisor supervisor =\n+        new ReplicationSupervisor(set, mutableReplicator,\n+            newDirectExecutorService());\n+\n+    // Mock to fetch an exception in the importContainer method.\n+    SimpleContainerDownloader moc =\n+        Mockito.mock(SimpleContainerDownloader.class);\n+    CompletableFuture<Path> res = new CompletableFuture<>();\n+    res.complete(Paths.get(\"file:/tmp/file\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7f3481858502618711fc03701ac321e1f4e7bbd"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5MDYyOA==", "bodyText": "Changed", "url": "https://github.com/apache/ozone/pull/1537#discussion_r516890628", "createdAt": "2020-11-03T19:01:26Z", "author": {"login": "ayushtkn"}, "path": "hadoop-hdds/container-service/src/test/java/org/apache/hadoop/ozone/container/replication/TestReplicationSupervisor.java", "diffHunk": "@@ -173,6 +178,36 @@ public void stalledDownload() {\n     }\n   }\n \n+  @Test\n+  public void testDownloadAndImportReplicatorFailure() {\n+    ReplicationSupervisor supervisor =\n+        new ReplicationSupervisor(set, mutableReplicator,\n+            newDirectExecutorService());\n+\n+    // Mock to fetch an exception in the importContainer method.\n+    SimpleContainerDownloader moc =\n+        Mockito.mock(SimpleContainerDownloader.class);\n+    CompletableFuture<Path> res = new CompletableFuture<>();\n+    res.complete(Paths.get(\"file:/tmp/file\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyNTM3Nw=="}, "originalCommit": {"oid": "f7f3481858502618711fc03701ac321e1f4e7bbd"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4666, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}