{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMDM2MzM5", "number": 1395, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjoxMDo0MlrOEwvEjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozNTo0N1rOEw5QLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTM4MzE3OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjoxMDo0MlrOHmek2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOTozODo0M1rOHmw-CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwODg5MQ==", "bodyText": "getVolumeTable().get(vol) seems to return null when volume not found rather than throwing.\nthe exception message in the following catch block needs to be changed.", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510108891", "createdAt": "2020-10-22T12:10:42Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1642,25 +1644,42 @@ private boolean hasAcls(String userName, ResourceType resType,\n           UserGroupInformation.createRemoteUser(userName),\n           ProtobufRpcEngine.Server.getRemoteIp(),\n           ProtobufRpcEngine.Server.getRemoteIp().getHostName(),\n-          false);\n+          false, getVolumeOwner(vol, acl));\n     } catch (OMException ex) {\n       // Should not trigger exception here at all\n       return false;\n     }\n   }\n \n-  /**\n-   * CheckAcls for the ozone object.\n-   *\n-   * @throws OMException ResultCodes.PERMISSION_DENIED if permission denied.\n-   */\n-  @SuppressWarnings(\"parameternumber\")\n-  public void checkAcls(ResourceType resType, StoreType storeType,\n-      ACLType aclType, String vol, String bucket, String key,\n-      UserGroupInformation ugi, InetAddress remoteAddress, String hostName)\n-      throws OMException {\n-    checkAcls(resType, storeType, aclType, vol, bucket, key,\n-        ugi, remoteAddress, hostName, true);\n+  public String getVolumeOwner(String vol, ACLType type) throws OMException {\n+    String volOwnerName = null;\n+    if (!vol.equals(OzoneConsts.OZONE_ROOT) && (type != ACLType.CREATE)) {\n+      volOwnerName = getVolumeOwner(vol);\n+    }\n+    return volOwnerName;\n+  }\n+\n+  private String getVolumeOwner(String volume) throws OMException {\n+    Boolean lockAcquired = metadataManager.getLock().acquireReadLock(\n+        VOLUME_LOCK, volume);\n+    String dbVolumeKey = metadataManager.getVolumeKey(volume);\n+    OmVolumeArgs volumeArgs = null;\n+    try {\n+      volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf6065d93422cacb79eeed053c1a758e1ee3ccd"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI5MzE4OA==", "bodyText": "Thanks @smengcl  for the review. The null check of volumeArgs for volume not found is done outside the lock between Line 1677-1682.", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510293188", "createdAt": "2020-10-22T16:20:38Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1642,25 +1644,42 @@ private boolean hasAcls(String userName, ResourceType resType,\n           UserGroupInformation.createRemoteUser(userName),\n           ProtobufRpcEngine.Server.getRemoteIp(),\n           ProtobufRpcEngine.Server.getRemoteIp().getHostName(),\n-          false);\n+          false, getVolumeOwner(vol, acl));\n     } catch (OMException ex) {\n       // Should not trigger exception here at all\n       return false;\n     }\n   }\n \n-  /**\n-   * CheckAcls for the ozone object.\n-   *\n-   * @throws OMException ResultCodes.PERMISSION_DENIED if permission denied.\n-   */\n-  @SuppressWarnings(\"parameternumber\")\n-  public void checkAcls(ResourceType resType, StoreType storeType,\n-      ACLType aclType, String vol, String bucket, String key,\n-      UserGroupInformation ugi, InetAddress remoteAddress, String hostName)\n-      throws OMException {\n-    checkAcls(resType, storeType, aclType, vol, bucket, key,\n-        ugi, remoteAddress, hostName, true);\n+  public String getVolumeOwner(String vol, ACLType type) throws OMException {\n+    String volOwnerName = null;\n+    if (!vol.equals(OzoneConsts.OZONE_ROOT) && (type != ACLType.CREATE)) {\n+      volOwnerName = getVolumeOwner(vol);\n+    }\n+    return volOwnerName;\n+  }\n+\n+  private String getVolumeOwner(String volume) throws OMException {\n+    Boolean lockAcquired = metadataManager.getLock().acquireReadLock(\n+        VOLUME_LOCK, volume);\n+    String dbVolumeKey = metadataManager.getVolumeKey(volume);\n+    OmVolumeArgs volumeArgs = null;\n+    try {\n+      volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwODg5MQ=="}, "originalCommit": {"oid": "8bf6065d93422cacb79eeed053c1a758e1ee3ccd"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NjI2Mw==", "bodyText": "Yes @xiaoyuyao . I do see the Line 1677-1682 check and message.\nI meant Line 1670-1671 OMException, since volumeArgs won't throw if volume is not found, we should change that message. Or just wrap IOException inside OMException?", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510376263", "createdAt": "2020-10-22T18:37:07Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1642,25 +1644,42 @@ private boolean hasAcls(String userName, ResourceType resType,\n           UserGroupInformation.createRemoteUser(userName),\n           ProtobufRpcEngine.Server.getRemoteIp(),\n           ProtobufRpcEngine.Server.getRemoteIp().getHostName(),\n-          false);\n+          false, getVolumeOwner(vol, acl));\n     } catch (OMException ex) {\n       // Should not trigger exception here at all\n       return false;\n     }\n   }\n \n-  /**\n-   * CheckAcls for the ozone object.\n-   *\n-   * @throws OMException ResultCodes.PERMISSION_DENIED if permission denied.\n-   */\n-  @SuppressWarnings(\"parameternumber\")\n-  public void checkAcls(ResourceType resType, StoreType storeType,\n-      ACLType aclType, String vol, String bucket, String key,\n-      UserGroupInformation ugi, InetAddress remoteAddress, String hostName)\n-      throws OMException {\n-    checkAcls(resType, storeType, aclType, vol, bucket, key,\n-        ugi, remoteAddress, hostName, true);\n+  public String getVolumeOwner(String vol, ACLType type) throws OMException {\n+    String volOwnerName = null;\n+    if (!vol.equals(OzoneConsts.OZONE_ROOT) && (type != ACLType.CREATE)) {\n+      volOwnerName = getVolumeOwner(vol);\n+    }\n+    return volOwnerName;\n+  }\n+\n+  private String getVolumeOwner(String volume) throws OMException {\n+    Boolean lockAcquired = metadataManager.getLock().acquireReadLock(\n+        VOLUME_LOCK, volume);\n+    String dbVolumeKey = metadataManager.getVolumeKey(volume);\n+    OmVolumeArgs volumeArgs = null;\n+    try {\n+      volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwODg5MQ=="}, "originalCommit": {"oid": "8bf6065d93422cacb79eeed053c1a758e1ee3ccd"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxMDI0OQ==", "bodyText": "Thanks for the clarification. I just pushed a change to refine the exception for this case as suggested.", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510410249", "createdAt": "2020-10-22T19:38:43Z", "author": {"login": "xiaoyuyao"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1642,25 +1644,42 @@ private boolean hasAcls(String userName, ResourceType resType,\n           UserGroupInformation.createRemoteUser(userName),\n           ProtobufRpcEngine.Server.getRemoteIp(),\n           ProtobufRpcEngine.Server.getRemoteIp().getHostName(),\n-          false);\n+          false, getVolumeOwner(vol, acl));\n     } catch (OMException ex) {\n       // Should not trigger exception here at all\n       return false;\n     }\n   }\n \n-  /**\n-   * CheckAcls for the ozone object.\n-   *\n-   * @throws OMException ResultCodes.PERMISSION_DENIED if permission denied.\n-   */\n-  @SuppressWarnings(\"parameternumber\")\n-  public void checkAcls(ResourceType resType, StoreType storeType,\n-      ACLType aclType, String vol, String bucket, String key,\n-      UserGroupInformation ugi, InetAddress remoteAddress, String hostName)\n-      throws OMException {\n-    checkAcls(resType, storeType, aclType, vol, bucket, key,\n-        ugi, remoteAddress, hostName, true);\n+  public String getVolumeOwner(String vol, ACLType type) throws OMException {\n+    String volOwnerName = null;\n+    if (!vol.equals(OzoneConsts.OZONE_ROOT) && (type != ACLType.CREATE)) {\n+      volOwnerName = getVolumeOwner(vol);\n+    }\n+    return volOwnerName;\n+  }\n+\n+  private String getVolumeOwner(String volume) throws OMException {\n+    Boolean lockAcquired = metadataManager.getLock().acquireReadLock(\n+        VOLUME_LOCK, volume);\n+    String dbVolumeKey = metadataManager.getVolumeKey(volume);\n+    OmVolumeArgs volumeArgs = null;\n+    try {\n+      volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwODg5MQ=="}, "originalCommit": {"oid": "8bf6065d93422cacb79eeed053c1a758e1ee3ccd"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzA1MTMzOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozNTo0N1rOHmu2YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODozNTo0N1rOHmu2YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM3NTUyMQ==", "bodyText": "I should tag here :) #tag", "url": "https://github.com/apache/ozone/pull/1395#discussion_r510375521", "createdAt": "2020-10-22T18:35:47Z", "author": {"login": "smengcl"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/OzoneManager.java", "diffHunk": "@@ -1642,25 +1644,42 @@ private boolean hasAcls(String userName, ResourceType resType,\n           UserGroupInformation.createRemoteUser(userName),\n           ProtobufRpcEngine.Server.getRemoteIp(),\n           ProtobufRpcEngine.Server.getRemoteIp().getHostName(),\n-          false);\n+          false, getVolumeOwner(vol, acl));\n     } catch (OMException ex) {\n       // Should not trigger exception here at all\n       return false;\n     }\n   }\n \n-  /**\n-   * CheckAcls for the ozone object.\n-   *\n-   * @throws OMException ResultCodes.PERMISSION_DENIED if permission denied.\n-   */\n-  @SuppressWarnings(\"parameternumber\")\n-  public void checkAcls(ResourceType resType, StoreType storeType,\n-      ACLType aclType, String vol, String bucket, String key,\n-      UserGroupInformation ugi, InetAddress remoteAddress, String hostName)\n-      throws OMException {\n-    checkAcls(resType, storeType, aclType, vol, bucket, key,\n-        ugi, remoteAddress, hostName, true);\n+  public String getVolumeOwner(String vol, ACLType type) throws OMException {\n+    String volOwnerName = null;\n+    if (!vol.equals(OzoneConsts.OZONE_ROOT) && (type != ACLType.CREATE)) {\n+      volOwnerName = getVolumeOwner(vol);\n+    }\n+    return volOwnerName;\n+  }\n+\n+  private String getVolumeOwner(String volume) throws OMException {\n+    Boolean lockAcquired = metadataManager.getLock().acquireReadLock(\n+        VOLUME_LOCK, volume);\n+    String dbVolumeKey = metadataManager.getVolumeKey(volume);\n+    OmVolumeArgs volumeArgs = null;\n+    try {\n+      volumeArgs = metadataManager.getVolumeTable().get(dbVolumeKey);\n+    } catch (IOException ioe) {\n+      throw new OMException(\"Volume \" + volume + \" is not found\",\n+          OMException.ResultCodes.VOLUME_NOT_FOUND);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf6065d93422cacb79eeed053c1a758e1ee3ccd"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4853, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}