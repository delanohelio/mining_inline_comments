{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NzQxMzE4", "number": 1682, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMDoxOTozMFrOFDZisg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowMzoxNFrOFFuvoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MTA4NTMwOnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMDoxOTozMFrOIDB25g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDoyMTo1MVrOIDLmrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA0NzA3OA==", "bodyText": "Can you move this check inside ozoneManager.getEnableFileSystemPaths() == true case to do this only for FileSystem api.\nFor example, bucket#createKey & OzoneOutputStream#close() in turn make OMKeyCommitRequest call.", "url": "https://github.com/apache/ozone/pull/1682#discussion_r540047078", "createdAt": "2020-12-10T10:19:30Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -172,6 +173,16 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         throw new OMException(\"Failed to commit key, as \" + dbOpenKey +\n             \"entry is not found in the OpenKey table\", KEY_NOT_FOUND);\n       }\n+\n+      // Ensure the parent exist.\n+      if (!\"\".equals(OzoneFSUtils.getParent(keyName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d493ebdde5186d26d61a524fba8eb01ab7a39803"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDIwNjc2NA==", "bodyText": "Thanx @rakeshadr for the review.\nI have moved the check inside ozoneManager.getEnableFileSystemPaths() == true and added the same logic and tests for OMAllocateBlockRequest as well. Please have a look..", "url": "https://github.com/apache/ozone/pull/1682#discussion_r540206764", "createdAt": "2020-12-10T14:21:51Z", "author": {"login": "ayushtkn"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMKeyCommitRequest.java", "diffHunk": "@@ -172,6 +173,16 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n         throw new OMException(\"Failed to commit key, as \" + dbOpenKey +\n             \"entry is not found in the OpenKey table\", KEY_NOT_FOUND);\n       }\n+\n+      // Ensure the parent exist.\n+      if (!\"\".equals(OzoneFSUtils.getParent(keyName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA0NzA3OA=="}, "originalCommit": {"oid": "d493ebdde5186d26d61a524fba8eb01ab7a39803"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTUzMDU2OnYy", "diffSide": "RIGHT", "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxODowMzoxNFrOIGYtig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNjo1OToyOFrOIIVVfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NzI0Mg==", "bodyText": "Just a question: Right now delete/rename is not an atomic operation, so will just checking the parent Dir is enough?\nBut this will help, once we have HDDS-2939 where we have atomic delete/renames.", "url": "https://github.com/apache/ozone/pull/1682#discussion_r543567242", "createdAt": "2020-12-15T18:03:14Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -192,6 +193,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n             KEY_NOT_FOUND);\n       }\n \n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        // Ensure the parent exist.\n+        if (!\"\".equals(OzoneFSUtils.getParent(keyName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79906c33078b818bb51e9a5c9867544238f06459"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU3MDAxNA==", "bodyText": "And also for performance reasons, can we leave allocateBlock, as during KeyCommit anyway we shall figure it out?\nAs this will save one extra DB op, (this might not be a problem again once HDDS-2939 comes in, as it has directory cache)\nBut I am fine with if we want to catch early also? Just thought of bringing this here.", "url": "https://github.com/apache/ozone/pull/1682#discussion_r543570014", "createdAt": "2020-12-15T18:07:17Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -192,6 +193,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n             KEY_NOT_FOUND);\n       }\n \n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        // Ensure the parent exist.\n+        if (!\"\".equals(OzoneFSUtils.getParent(keyName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NzI0Mg=="}, "originalCommit": {"oid": "79906c33078b818bb51e9a5c9867544238f06459"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg2MTEyMQ==", "bodyText": "Thanx @bharatviswa504 for the review.\n\nRight now delete/rename is not an atomic operation, so will just checking the parent Dir is enough?\n\nIs there anything else, that can be checked? Yahh, there might be some issue because of non atomic behaviour delete/rename. Will pulling this check inside lock, solve them or lead to a better state?\n\nAnd also for performance reasons, can we leave allocateBlock, as during KeyCommit anyway we shall figure it out?\n\nRakesh suggested to add the check in allocateBlock, I think for a fail-fast approach, If we tend to fail during the commit phase and we know that at the allocateBlock phase, we should fail at an earlier stage itself, rather than going till the end. Might save a messed up client, if he is writing a big file.\nBut I am not very aware about the performance impacts and HDDS-2939 both, so I am ok both ways.\n@rakeshadr any thoughts on this?", "url": "https://github.com/apache/ozone/pull/1682#discussion_r543861121", "createdAt": "2020-12-16T02:55:40Z", "author": {"login": "ayushtkn"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -192,6 +193,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n             KEY_NOT_FOUND);\n       }\n \n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        // Ensure the parent exist.\n+        if (!\"\".equals(OzoneFSUtils.getParent(keyName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NzI0Mg=="}, "originalCommit": {"oid": "79906c33078b818bb51e9a5c9867544238f06459"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyMzI3OA==", "bodyText": "And also for performance reasons, can we leave allocateBlock, as during KeyCommit anyway we shall figure it out?\n\nOn a second thought, it makes sense to me to avoid any additional DB calls which can affect the OM performance. Most of the cases, parent directories would exists in RocksDB offheap cache even then I would agree to skip parentDir check considering the cost of DB call if not exist.\nOn the other side, I think there won't be any correctness issue if we skip parent dir check in AllocateBlockReq. Later, we can bring this fast-fail check based on user demand. Considering that, I'm +1 to skip extra DB check in AllocateBlockReq now.\nThanks a lot @ayushtkn for your patience and taking care this. I agree to revert the changes from OmAllocateBlockRequest.\n\nBut I am not very aware about the performance impacts and HDDS-2939 both\n\nIn HDDS-2939, in order to fetch openFileName, it requires to traverse top-down model and parentDir check won't add any additional overhead. For example, say open file /a/b/c/d/file1.\nHDDS-2939 branch: OM will fetch /a, /a/b, /a/b/c, /a/b/c/d from DirTable and finally get /a/b/c/d/file1 from OpenFileTable. Here, one idea is to build DirCache to reduce DB overhead. @bharatviswa504 was talking about this part in his previous comment.\nMaster branch: OM will do point look up by fetching /a/b/c/d from KeyTable. Here, existing RocksDB offheap cache would help.", "url": "https://github.com/apache/ozone/pull/1682#discussion_r544123278", "createdAt": "2020-12-16T08:59:30Z", "author": {"login": "rakeshadr"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -192,6 +193,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n             KEY_NOT_FOUND);\n       }\n \n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        // Ensure the parent exist.\n+        if (!\"\".equals(OzoneFSUtils.getParent(keyName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NzI0Mg=="}, "originalCommit": {"oid": "79906c33078b818bb51e9a5c9867544238f06459"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDMwMjU4NQ==", "bodyText": "Thanx Rakesh for sharing the details, makes sense, Will explore more :-)\nI have removed the check from AllocateBlock as suggested.\n@bharatviswa504 Please give a check once agin, if things make sense now. Thanx...", "url": "https://github.com/apache/ozone/pull/1682#discussion_r544302585", "createdAt": "2020-12-16T13:36:05Z", "author": {"login": "ayushtkn"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -192,6 +193,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n             KEY_NOT_FOUND);\n       }\n \n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        // Ensure the parent exist.\n+        if (!\"\".equals(OzoneFSUtils.getParent(keyName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NzI0Mg=="}, "originalCommit": {"oid": "79906c33078b818bb51e9a5c9867544238f06459"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTYwOTA4NQ==", "bodyText": "Is there anything else, that can be checked? Yahh, there might be some issue because of non atomic behaviour delete/rename. Will pulling this check inside lock, solve them or lead to a better state?\n\nAs due to non-atomic behavior whole path check can help here. But this issue will be solved once HDDS-2939 comes in. And also this check is done under lock even right now. Let's have this way for now.", "url": "https://github.com/apache/ozone/pull/1682#discussion_r545609085", "createdAt": "2020-12-18T06:59:28Z", "author": {"login": "bharatviswa504"}, "path": "hadoop-ozone/ozone-manager/src/main/java/org/apache/hadoop/ozone/om/request/key/OMAllocateBlockRequest.java", "diffHunk": "@@ -192,6 +193,17 @@ public OMClientResponse validateAndUpdateCache(OzoneManager ozoneManager,\n             KEY_NOT_FOUND);\n       }\n \n+      if (ozoneManager.getEnableFileSystemPaths()) {\n+        // Ensure the parent exist.\n+        if (!\"\".equals(OzoneFSUtils.getParent(keyName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2NzI0Mg=="}, "originalCommit": {"oid": "79906c33078b818bb51e9a5c9867544238f06459"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4595, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}